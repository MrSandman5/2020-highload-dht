<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="742" onload="init(evt)" viewBox="0 0 1200 742" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="725"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="725"> </text>
<g id="frames">
<g>
<title>all (902 samples, 100.00%)</title><rect x="10.0" y="691.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="702.0">all</text>
</g>
<g>
<title>[C2 CompilerThre tid=6978] (10 samples, 1.11%)</title><rect x="10.0" y="675.0" width="13.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>start_thread (10 samples, 1.11%)</title><rect x="10.0" y="659.0" width="13.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (10 samples, 1.11%)</title><rect x="10.0" y="643.0" width="13.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>Thread::call_run() (10 samples, 1.11%)</title><rect x="10.0" y="627.0" width="13.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (10 samples, 1.11%)</title><rect x="10.0" y="611.0" width="13.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (10 samples, 1.11%)</title><rect x="10.0" y="595.0" width="13.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (10 samples, 1.11%)</title><rect x="10.0" y="579.0" width="13.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (10 samples, 1.11%)</title><rect x="10.0" y="563.0" width="13.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (10 samples, 1.11%)</title><rect x="10.0" y="547.0" width="13.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (5 samples, 0.55%)</title><rect x="10.0" y="531.0" width="6.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.11%)</title><rect x="10.0" y="515.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.11%)</title><rect x="10.0" y="499.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (1 samples, 0.11%)</title><rect x="10.0" y="483.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (1 samples, 0.11%)</title><rect x="10.0" y="467.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.11%)</title><rect x="11.3" y="515.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.3" y="526.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.11%)</title><rect x="11.3" y="499.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="14.3" y="510.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.11%)</title><rect x="11.3" y="483.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="14.3" y="494.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (3 samples, 0.33%)</title><rect x="12.6" y="515.0" width="3.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.6" y="526.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.11%)</title><rect x="12.6" y="499.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.6" y="510.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.11%)</title><rect x="12.6" y="483.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.6" y="494.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.11%)</title><rect x="12.6" y="467.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="15.6" y="478.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.11%)</title><rect x="13.9" y="499.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="16.9" y="510.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (1 samples, 0.11%)</title><rect x="13.9" y="483.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="16.9" y="494.0"></text>
</g>
<g>
<title>PhaseCoalesce::combine_these_two(Node*, Node*) (1 samples, 0.11%)</title><rect x="13.9" y="467.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="16.9" y="478.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (1 samples, 0.11%)</title><rect x="15.2" y="499.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.2" y="510.0"></text>
</g>
<g>
<title>Compile::Optimize() (3 samples, 0.33%)</title><rect x="16.5" y="531.0" width="4.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="19.5" y="542.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) (2 samples, 0.22%)</title><rect x="16.5" y="515.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="19.5" y="526.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.22%)</title><rect x="16.5" y="499.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="19.5" y="510.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.11%)</title><rect x="16.5" y="483.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="19.5" y="494.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.11%)</title><rect x="16.5" y="467.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="19.5" y="478.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.11%)</title><rect x="16.5" y="451.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="19.5" y="462.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_unroll(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.11%)</title><rect x="16.5" y="435.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="19.5" y="446.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.11%)</title><rect x="16.5" y="419.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="19.5" y="430.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop_handle_data_uses(Node*, Node_List&amp;, IdealLoopTree*, IdealLoopTree*, Node_List*&amp;, Node_List*&amp;, Node_List*&amp;, Node_List&amp;, unsigned int, PhaseIdealLoop::CloneLoopMode) (1 samples, 0.11%)</title><rect x="16.5" y="403.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="19.5" y="414.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.11%)</title><rect x="17.8" y="483.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="20.8" y="494.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.11%)</title><rect x="19.2" y="515.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="22.2" y="526.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.11%)</title><rect x="19.2" y="499.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="22.2" y="510.0"></text>
</g>
<g>
<title>LShiftINode::Identity(PhaseGVN*) (1 samples, 0.11%)</title><rect x="19.2" y="483.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="22.2" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.22%)</title><rect x="20.5" y="531.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="23.5" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.22%)</title><rect x="20.5" y="515.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="23.5" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.22%)</title><rect x="20.5" y="499.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="23.5" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.22%)</title><rect x="20.5" y="483.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="23.5" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.22%)</title><rect x="20.5" y="467.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="23.5" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.22%)</title><rect x="20.5" y="451.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="23.5" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.22%)</title><rect x="20.5" y="435.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="23.5" y="446.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.22%)</title><rect x="20.5" y="419.0" width="2.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="23.5" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.22%)</title><rect x="20.5" y="403.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="23.5" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.22%)</title><rect x="20.5" y="387.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="23.5" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.22%)</title><rect x="20.5" y="371.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="23.5" y="382.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.22%)</title><rect x="20.5" y="355.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="23.5" y="366.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.22%)</title><rect x="20.5" y="339.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="23.5" y="350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.22%)</title><rect x="20.5" y="323.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="23.5" y="334.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.22%)</title><rect x="20.5" y="307.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="23.5" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.22%)</title><rect x="20.5" y="291.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="23.5" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.22%)</title><rect x="20.5" y="275.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="23.5" y="286.0"></text>
</g>
<g>
<title>Parse::array_store(BasicType) (1 samples, 0.11%)</title><rect x="20.5" y="259.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="23.5" y="270.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const*&amp;) (1 samples, 0.11%)</title><rect x="20.5" y="243.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="23.5" y="254.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.11%)</title><rect x="20.5" y="227.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="23.5" y="238.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.11%)</title><rect x="20.5" y="211.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="23.5" y="222.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.11%)</title><rect x="20.5" y="195.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="23.5" y="206.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.11%)</title><rect x="21.8" y="259.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="24.8" y="270.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.11%)</title><rect x="21.8" y="243.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="24.8" y="254.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.11%)</title><rect x="21.8" y="227.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="24.8" y="238.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.11%)</title><rect x="21.8" y="211.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="24.8" y="222.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.11%)</title><rect x="21.8" y="195.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="24.8" y="206.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.11%)</title><rect x="21.8" y="179.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="24.8" y="190.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (1 samples, 0.11%)</title><rect x="21.8" y="163.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="24.8" y="174.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.11%)</title><rect x="21.8" y="147.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="24.8" y="158.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.11%)</title><rect x="21.8" y="131.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="24.8" y="142.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.11%)</title><rect x="21.8" y="115.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="24.8" y="126.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.11%)</title><rect x="21.8" y="99.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="24.8" y="110.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.11%)</title><rect x="21.8" y="83.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="24.8" y="94.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.11%)</title><rect x="21.8" y="67.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="24.8" y="78.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.11%)</title><rect x="21.8" y="51.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="24.8" y="62.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.11%)</title><rect x="21.8" y="35.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="24.8" y="46.0"></text>
</g>
<g>
<title>[GC Thread#0 tid=6964] (12 samples, 1.33%)</title><rect x="23.1" y="675.0" width="15.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="26.1" y="686.0"></text>
</g>
<g>
<title>start_thread (12 samples, 1.33%)</title><rect x="23.1" y="659.0" width="15.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="26.1" y="670.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (12 samples, 1.33%)</title><rect x="23.1" y="643.0" width="15.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="26.1" y="654.0"></text>
</g>
<g>
<title>Thread::call_run() (12 samples, 1.33%)</title><rect x="23.1" y="627.0" width="15.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="26.1" y="638.0"></text>
</g>
<g>
<title>GangWorker::loop() (12 samples, 1.33%)</title><rect x="23.1" y="611.0" width="15.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="26.1" y="622.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (12 samples, 1.33%)</title><rect x="23.1" y="595.0" width="15.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="26.1" y="606.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (6 samples, 0.67%)</title><rect x="23.1" y="579.0" width="7.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="26.1" y="590.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (3 samples, 0.33%)</title><rect x="23.1" y="563.0" width="3.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="26.1" y="574.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.22%)</title><rect x="24.4" y="547.0" width="2.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="27.4" y="558.0"></text>
</g>
<g>
<title>G1PLABAllocator::allocate_direct_or_new_plab(InCSetState, unsigned long, bool*) (1 samples, 0.11%)</title><rect x="25.7" y="531.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="28.7" y="542.0"></text>
</g>
<g>
<title>G1Allocator::survivor_attempt_allocation(unsigned long, unsigned long, unsigned long*) (1 samples, 0.11%)</title><rect x="25.7" y="515.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="28.7" y="526.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.11%)</title><rect x="25.7" y="499.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="28.7" y="510.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_gc_alloc_region(unsigned long, InCSetState) (1 samples, 0.11%)</title><rect x="25.7" y="483.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="28.7" y="494.0"></text>
</g>
<g>
<title>HeapRegion::set_survivor() (1 samples, 0.11%)</title><rect x="25.7" y="467.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="28.7" y="478.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal_best_of_2(unsigned int, int*, StarTask&amp;) (1 samples, 0.11%)</title><rect x="27.0" y="563.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="30.0" y="574.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.22%)</title><rect x="28.3" y="563.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="31.3" y="574.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (6 samples, 0.67%)</title><rect x="30.9" y="579.0" width="7.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="33.9" y="590.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (6 samples, 0.67%)</title><rect x="30.9" y="563.0" width="7.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="33.9" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (6 samples, 0.67%)</title><rect x="30.9" y="547.0" width="7.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="33.9" y="558.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (6 samples, 0.67%)</title><rect x="30.9" y="531.0" width="7.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="33.9" y="542.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (6 samples, 0.67%)</title><rect x="30.9" y="515.0" width="7.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="33.9" y="526.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (2 samples, 0.22%)</title><rect x="30.9" y="499.0" width="2.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="33.9" y="510.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.11%)</title><rect x="30.9" y="483.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="33.9" y="494.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (1 samples, 0.11%)</title><rect x="32.2" y="483.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="35.2" y="494.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanObjsDuringUpdateRSClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanObjsDuringUpdateRSClosure, OopClosure, G1ScanObjsDuringUpdateRSClosure&gt;(void (G1ScanObjsDuringUpdateRSClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanObjsDuringUpdateRSClosure*, unsigned int*) (1 samples, 0.11%)</title><rect x="32.2" y="467.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="35.2" y="478.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (1 samples, 0.11%)</title><rect x="32.2" y="451.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="35.2" y="462.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (4 samples, 0.44%)</title><rect x="33.5" y="499.0" width="5.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="36.5" y="510.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.33%)</title><rect x="34.9" y="483.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="37.9" y="494.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.22%)</title><rect x="36.2" y="467.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="39.2" y="478.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (2 samples, 0.22%)</title><rect x="36.2" y="451.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="39.2" y="462.0"></text>
</g>
<g>
<title>[GC Thread#1 tid=7023] (13 samples, 1.44%)</title><rect x="38.8" y="675.0" width="17.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="41.8" y="686.0"></text>
</g>
<g>
<title>start_thread (13 samples, 1.44%)</title><rect x="38.8" y="659.0" width="17.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="41.8" y="670.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (13 samples, 1.44%)</title><rect x="38.8" y="643.0" width="17.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="41.8" y="654.0"></text>
</g>
<g>
<title>Thread::call_run() (13 samples, 1.44%)</title><rect x="38.8" y="627.0" width="17.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="41.8" y="638.0"></text>
</g>
<g>
<title>GangWorker::loop() (13 samples, 1.44%)</title><rect x="38.8" y="611.0" width="17.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="41.8" y="622.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (13 samples, 1.44%)</title><rect x="38.8" y="595.0" width="17.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="41.8" y="606.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (10 samples, 1.11%)</title><rect x="38.8" y="579.0" width="13.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="41.8" y="590.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.11%)</title><rect x="40.1" y="563.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="43.1" y="574.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.11%)</title><rect x="41.4" y="563.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="44.4" y="574.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.11%)</title><rect x="41.4" y="547.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="44.4" y="558.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal_best_of_2(unsigned int, int*, StarTask&amp;) (1 samples, 0.11%)</title><rect x="42.7" y="563.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="45.7" y="574.0"></text>
</g>
<g>
<title>TaskQueueSetSuper::randomParkAndMiller(int*) (1 samples, 0.11%)</title><rect x="42.7" y="547.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="45.7" y="558.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.11%)</title><rect x="44.0" y="563.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="47.0" y="574.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.55%)</title><rect x="45.3" y="563.0" width="6.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="48.3" y="574.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.33%)</title><rect x="51.9" y="579.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="54.9" y="590.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.33%)</title><rect x="51.9" y="563.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="54.9" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.33%)</title><rect x="51.9" y="547.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="54.9" y="558.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (3 samples, 0.33%)</title><rect x="51.9" y="531.0" width="3.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="54.9" y="542.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.33%)</title><rect x="51.9" y="515.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="54.9" y="526.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (3 samples, 0.33%)</title><rect x="51.9" y="499.0" width="3.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="54.9" y="510.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.33%)</title><rect x="51.9" y="483.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="54.9" y="494.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.22%)</title><rect x="53.2" y="467.0" width="2.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="56.2" y="478.0"></text>
</g>
<g>
<title>[GC Thread#2 tid=7024] (11 samples, 1.22%)</title><rect x="55.8" y="675.0" width="14.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="58.8" y="686.0"></text>
</g>
<g>
<title>start_thread (11 samples, 1.22%)</title><rect x="55.8" y="659.0" width="14.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="58.8" y="670.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (11 samples, 1.22%)</title><rect x="55.8" y="643.0" width="14.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="58.8" y="654.0"></text>
</g>
<g>
<title>Thread::call_run() (11 samples, 1.22%)</title><rect x="55.8" y="627.0" width="14.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="58.8" y="638.0"></text>
</g>
<g>
<title>GangWorker::loop() (11 samples, 1.22%)</title><rect x="55.8" y="611.0" width="14.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="58.8" y="622.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (11 samples, 1.22%)</title><rect x="55.8" y="595.0" width="14.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="58.8" y="606.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (8 samples, 0.89%)</title><rect x="55.8" y="579.0" width="10.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="58.8" y="590.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.11%)</title><rect x="55.8" y="563.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="58.8" y="574.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.11%)</title><rect x="57.1" y="563.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="60.1" y="574.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.11%)</title><rect x="57.1" y="547.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="60.1" y="558.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.11%)</title><rect x="57.1" y="531.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="60.1" y="542.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (1 samples, 0.11%)</title><rect x="57.1" y="515.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="60.1" y="526.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (2 samples, 0.22%)</title><rect x="58.4" y="563.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="61.4" y="574.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.44%)</title><rect x="61.0" y="563.0" width="5.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="64.0" y="574.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.33%)</title><rect x="66.3" y="579.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="69.3" y="590.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.33%)</title><rect x="66.3" y="563.0" width="3.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="69.3" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.33%)</title><rect x="66.3" y="547.0" width="3.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="69.3" y="558.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (3 samples, 0.33%)</title><rect x="66.3" y="531.0" width="3.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="69.3" y="542.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.33%)</title><rect x="66.3" y="515.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="69.3" y="526.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.11%)</title><rect x="66.3" y="499.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="69.3" y="510.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (1 samples, 0.11%)</title><rect x="66.3" y="483.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="69.3" y="494.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanObjsDuringUpdateRSClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanObjsDuringUpdateRSClosure, OopClosure, G1ScanObjsDuringUpdateRSClosure&gt;(void (G1ScanObjsDuringUpdateRSClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanObjsDuringUpdateRSClosure*, unsigned int*) (1 samples, 0.11%)</title><rect x="66.3" y="467.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="69.3" y="478.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (2 samples, 0.22%)</title><rect x="67.6" y="499.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="70.6" y="510.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.22%)</title><rect x="67.6" y="483.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="70.6" y="494.0"></text>
</g>
<g>
<title>[GC Thread#3 tid=7025] (16 samples, 1.77%)</title><rect x="70.2" y="675.0" width="20.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="73.2" y="686.0"></text>
</g>
<g>
<title>start_thread (16 samples, 1.77%)</title><rect x="70.2" y="659.0" width="20.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="73.2" y="670.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (16 samples, 1.77%)</title><rect x="70.2" y="643.0" width="20.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="73.2" y="654.0"></text>
</g>
<g>
<title>Thread::call_run() (16 samples, 1.77%)</title><rect x="70.2" y="627.0" width="20.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="73.2" y="638.0"></text>
</g>
<g>
<title>GangWorker::loop() (16 samples, 1.77%)</title><rect x="70.2" y="611.0" width="20.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="73.2" y="622.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (15 samples, 1.66%)</title><rect x="70.2" y="595.0" width="19.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="73.2" y="606.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (10 samples, 1.11%)</title><rect x="70.2" y="579.0" width="13.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="73.2" y="590.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (3 samples, 0.33%)</title><rect x="70.2" y="563.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="73.2" y="574.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.22%)</title><rect x="71.5" y="547.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="74.5" y="558.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.11%)</title><rect x="74.1" y="563.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="77.1" y="574.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.67%)</title><rect x="75.4" y="563.0" width="7.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="78.4" y="574.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.44%)</title><rect x="83.3" y="579.0" width="5.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="86.3" y="590.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.44%)</title><rect x="83.3" y="563.0" width="5.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="86.3" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.44%)</title><rect x="83.3" y="547.0" width="5.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="86.3" y="558.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (4 samples, 0.44%)</title><rect x="83.3" y="531.0" width="5.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="86.3" y="542.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.44%)</title><rect x="83.3" y="515.0" width="5.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="86.3" y="526.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.11%)</title><rect x="83.3" y="499.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="86.3" y="510.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (3 samples, 0.33%)</title><rect x="84.6" y="499.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="87.6" y="510.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.22%)</title><rect x="85.9" y="483.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="88.9" y="494.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.11%)</title><rect x="88.5" y="579.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="91.5" y="590.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (1 samples, 0.11%)</title><rect x="88.5" y="563.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="91.5" y="574.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.11%)</title><rect x="88.5" y="547.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="91.5" y="558.0"></text>
</g>
<g>
<title>G1RedirtyLoggedCardsTask::work(unsigned int) (1 samples, 0.11%)</title><rect x="89.8" y="595.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="92.8" y="606.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::par_apply_closure_to_all_completed_buffers(CardTableEntryClosure*) (1 samples, 0.11%)</title><rect x="89.8" y="579.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="92.8" y="590.0"></text>
</g>
<g>
<title>RedirtyLoggedCardTableEntryClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.11%)</title><rect x="89.8" y="563.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="92.8" y="574.0"></text>
</g>
<g>
<title>[GC Thread#4 tid=7026] (13 samples, 1.44%)</title><rect x="91.1" y="675.0" width="17.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="94.1" y="686.0"></text>
</g>
<g>
<title>start_thread (13 samples, 1.44%)</title><rect x="91.1" y="659.0" width="17.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="94.1" y="670.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (13 samples, 1.44%)</title><rect x="91.1" y="643.0" width="17.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="94.1" y="654.0"></text>
</g>
<g>
<title>Thread::call_run() (13 samples, 1.44%)</title><rect x="91.1" y="627.0" width="17.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="94.1" y="638.0"></text>
</g>
<g>
<title>GangWorker::loop() (13 samples, 1.44%)</title><rect x="91.1" y="611.0" width="17.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="94.1" y="622.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (13 samples, 1.44%)</title><rect x="91.1" y="595.0" width="17.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="94.1" y="606.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (10 samples, 1.11%)</title><rect x="91.1" y="579.0" width="13.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="94.1" y="590.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (5 samples, 0.55%)</title><rect x="91.1" y="563.0" width="6.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="94.1" y="574.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.11%)</title><rect x="96.3" y="547.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="99.3" y="558.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal_best_of_2(unsigned int, int*, StarTask&amp;) (2 samples, 0.22%)</title><rect x="97.6" y="563.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="100.6" y="574.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.33%)</title><rect x="100.3" y="563.0" width="3.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="103.3" y="574.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.33%)</title><rect x="104.2" y="579.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="107.2" y="590.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.33%)</title><rect x="104.2" y="563.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="107.2" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.33%)</title><rect x="104.2" y="547.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="107.2" y="558.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (3 samples, 0.33%)</title><rect x="104.2" y="531.0" width="3.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="107.2" y="542.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.33%)</title><rect x="104.2" y="515.0" width="3.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="107.2" y="526.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (3 samples, 0.33%)</title><rect x="104.2" y="499.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="107.2" y="510.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.11%)</title><rect x="106.8" y="483.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="109.8" y="494.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.11%)</title><rect x="106.8" y="467.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="109.8" y="478.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (1 samples, 0.11%)</title><rect x="106.8" y="451.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="109.8" y="462.0"></text>
</g>
<g>
<title>[GC Thread#5 tid=7027] (12 samples, 1.33%)</title><rect x="108.1" y="675.0" width="15.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="111.1" y="686.0"></text>
</g>
<g>
<title>start_thread (12 samples, 1.33%)</title><rect x="108.1" y="659.0" width="15.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="111.1" y="670.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (12 samples, 1.33%)</title><rect x="108.1" y="643.0" width="15.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="111.1" y="654.0"></text>
</g>
<g>
<title>Thread::call_run() (12 samples, 1.33%)</title><rect x="108.1" y="627.0" width="15.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="111.1" y="638.0"></text>
</g>
<g>
<title>GangWorker::loop() (12 samples, 1.33%)</title><rect x="108.1" y="611.0" width="15.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="111.1" y="622.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (12 samples, 1.33%)</title><rect x="108.1" y="595.0" width="15.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="111.1" y="606.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (9 samples, 1.00%)</title><rect x="108.1" y="579.0" width="11.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="111.1" y="590.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.22%)</title><rect x="108.1" y="563.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="111.1" y="574.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal_best_of_2(unsigned int, int*, StarTask&amp;) (1 samples, 0.11%)</title><rect x="110.7" y="563.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="113.7" y="574.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.11%)</title><rect x="112.0" y="563.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="115.0" y="574.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.55%)</title><rect x="113.3" y="563.0" width="6.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="116.3" y="574.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.33%)</title><rect x="119.9" y="579.0" width="3.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="122.9" y="590.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.33%)</title><rect x="119.9" y="563.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="122.9" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.33%)</title><rect x="119.9" y="547.0" width="3.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="122.9" y="558.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (3 samples, 0.33%)</title><rect x="119.9" y="531.0" width="3.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="122.9" y="542.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.33%)</title><rect x="119.9" y="515.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="122.9" y="526.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.11%)</title><rect x="119.9" y="499.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="122.9" y="510.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.11%)</title><rect x="119.9" y="483.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="122.9" y="494.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.11%)</title><rect x="119.9" y="467.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="122.9" y="478.0"></text>
</g>
<g>
<title>HeapRegion::block_is_obj(HeapWord const*) const (1 samples, 0.11%)</title><rect x="119.9" y="451.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="122.9" y="462.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (2 samples, 0.22%)</title><rect x="121.2" y="499.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="124.2" y="510.0"></text>
</g>
<g>
<title>G1CardTable::mark_card_deferred(unsigned long) (1 samples, 0.11%)</title><rect x="121.2" y="483.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="124.2" y="494.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.11%)</title><rect x="122.5" y="483.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="125.5" y="494.0"></text>
</g>
<g>
<title>[GC Thread#6 tid=7028] (12 samples, 1.33%)</title><rect x="123.8" y="675.0" width="15.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="126.8" y="686.0"></text>
</g>
<g>
<title>start_thread (12 samples, 1.33%)</title><rect x="123.8" y="659.0" width="15.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="126.8" y="670.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (12 samples, 1.33%)</title><rect x="123.8" y="643.0" width="15.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="126.8" y="654.0"></text>
</g>
<g>
<title>Thread::call_run() (12 samples, 1.33%)</title><rect x="123.8" y="627.0" width="15.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="126.8" y="638.0"></text>
</g>
<g>
<title>GangWorker::loop() (12 samples, 1.33%)</title><rect x="123.8" y="611.0" width="15.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="126.8" y="622.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (12 samples, 1.33%)</title><rect x="123.8" y="595.0" width="15.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="126.8" y="606.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (9 samples, 1.00%)</title><rect x="123.8" y="579.0" width="11.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="126.8" y="590.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.22%)</title><rect x="123.8" y="563.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="126.8" y="574.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.22%)</title><rect x="123.8" y="547.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="126.8" y="558.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.11%)</title><rect x="125.1" y="531.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="128.1" y="542.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (1 samples, 0.11%)</title><rect x="125.1" y="515.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="128.1" y="526.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal_best_of_2(unsigned int, int*, StarTask&amp;) (1 samples, 0.11%)</title><rect x="126.4" y="563.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="129.4" y="574.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.55%)</title><rect x="127.7" y="563.0" width="6.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="130.7" y="574.0"></text>
</g>
<g>
<title>void objArrayOopDesc::oop_iterate_range&lt;G1ScanEvacuatedObjClosure&gt;(G1ScanEvacuatedObjClosure*, int, int) (1 samples, 0.11%)</title><rect x="134.3" y="563.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="137.3" y="574.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (1 samples, 0.11%)</title><rect x="134.3" y="547.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="137.3" y="558.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.33%)</title><rect x="135.6" y="579.0" width="3.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="138.6" y="590.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.33%)</title><rect x="135.6" y="563.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="138.6" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.33%)</title><rect x="135.6" y="547.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="138.6" y="558.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (3 samples, 0.33%)</title><rect x="135.6" y="531.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="138.6" y="542.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.33%)</title><rect x="135.6" y="515.0" width="3.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="138.6" y="526.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (2 samples, 0.22%)</title><rect x="135.6" y="499.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="138.6" y="510.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*, MemRegion) (1 samples, 0.11%)</title><rect x="136.9" y="483.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="139.9" y="494.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanObjsDuringUpdateRSClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanObjsDuringUpdateRSClosure, OopClosure, G1ScanObjsDuringUpdateRSClosure&gt;(void (G1ScanObjsDuringUpdateRSClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanObjsDuringUpdateRSClosure*, unsigned int*) (1 samples, 0.11%)</title><rect x="136.9" y="467.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="139.9" y="478.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (1 samples, 0.11%)</title><rect x="138.2" y="499.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="141.2" y="510.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.11%)</title><rect x="138.2" y="483.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="141.2" y="494.0"></text>
</g>
<g>
<title>[GC Thread#7 tid=7029] (12 samples, 1.33%)</title><rect x="139.5" y="675.0" width="15.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="142.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.11%)</title><rect x="139.5" y="659.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="142.5" y="670.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.11%)</title><rect x="139.5" y="643.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="142.5" y="654.0"></text>
</g>
<g>
<title>start_thread (11 samples, 1.22%)</title><rect x="140.8" y="659.0" width="14.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="143.8" y="670.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (11 samples, 1.22%)</title><rect x="140.8" y="643.0" width="14.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="143.8" y="654.0"></text>
</g>
<g>
<title>Thread::call_run() (11 samples, 1.22%)</title><rect x="140.8" y="627.0" width="14.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="143.8" y="638.0"></text>
</g>
<g>
<title>GangWorker::loop() (11 samples, 1.22%)</title><rect x="140.8" y="611.0" width="14.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="143.8" y="622.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (11 samples, 1.22%)</title><rect x="140.8" y="595.0" width="14.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="143.8" y="606.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (7 samples, 0.78%)</title><rect x="140.8" y="579.0" width="9.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="143.8" y="590.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal_best_of_2(unsigned int, int*, StarTask&amp;) (1 samples, 0.11%)</title><rect x="140.8" y="563.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="143.8" y="574.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.11%)</title><rect x="142.1" y="563.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="145.1" y="574.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.55%)</title><rect x="143.4" y="563.0" width="6.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="146.4" y="574.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.33%)</title><rect x="150.0" y="579.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="153.0" y="590.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.33%)</title><rect x="150.0" y="563.0" width="3.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="153.0" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.33%)</title><rect x="150.0" y="547.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="153.0" y="558.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (3 samples, 0.33%)</title><rect x="150.0" y="531.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="153.0" y="542.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.33%)</title><rect x="150.0" y="515.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="153.0" y="526.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (3 samples, 0.33%)</title><rect x="150.0" y="499.0" width="3.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="153.0" y="510.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.11%)</title><rect x="152.6" y="483.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="155.6" y="494.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.11%)</title><rect x="153.9" y="579.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="156.9" y="590.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.11%)</title><rect x="153.9" y="563.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="156.9" y="574.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.11%)</title><rect x="153.9" y="547.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="156.9" y="558.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.11%)</title><rect x="153.9" y="531.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="156.9" y="542.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.11%)</title><rect x="153.9" y="515.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="156.9" y="526.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (1 samples, 0.11%)</title><rect x="153.9" y="499.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="156.9" y="510.0"></text>
</g>
<g>
<title>ConstantPool::impl_signature_ref_at(int, bool) (1 samples, 0.11%)</title><rect x="153.9" y="483.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="156.9" y="494.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=6986] (104 samples, 11.53%)</title><rect x="155.2" y="675.0" width="136.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="158.2" y="686.0">[NIO Selector #0 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (104 samples, 11.53%)</title><rect x="155.2" y="659.0" width="136.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.2" y="670.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3 samples, 0.33%)</title><rect x="155.2" y="643.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.2" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.33%)</title><rect x="159.1" y="643.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="162.1" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.33%)</title><rect x="159.1" y="627.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.1" y="638.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.22%)</title><rect x="159.1" y="611.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="162.1" y="622.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.11%)</title><rect x="161.8" y="611.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="164.8" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (98 samples, 10.86%)</title><rect x="163.1" y="643.0" width="128.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="166.1" y="654.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (94 samples, 10.42%)</title><rect x="168.3" y="627.0" width="123.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="171.3" y="638.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (82 samples, 9.09%)</title><rect x="168.3" y="611.0" width="107.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="171.3" y="622.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (68 samples, 7.54%)</title><rect x="176.1" y="595.0" width="89.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="179.1" y="606.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (68 samples, 7.54%)</title><rect x="176.1" y="579.0" width="89.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="179.1" y="590.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (68 samples, 7.54%)</title><rect x="176.1" y="563.0" width="89.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="179.1" y="574.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 1.00%)</title><rect x="176.1" y="547.0" width="11.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.11%)</title><rect x="177.5" y="531.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="180.5" y="542.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.11%)</title><rect x="177.5" y="515.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.11%)</title><rect x="177.5" y="499.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="180.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 0.78%)</title><rect x="178.8" y="531.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="181.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.33%)</title><rect x="178.8" y="515.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="181.8" y="526.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.22%)</title><rect x="180.1" y="499.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="183.1" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.22%)</title><rect x="180.1" y="483.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="183.1" y="494.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.22%)</title><rect x="180.1" y="467.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="183.1" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.44%)</title><rect x="182.7" y="515.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="185.7" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.44%)</title><rect x="182.7" y="499.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="185.7" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.11%)</title><rect x="182.7" y="483.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="185.7" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.33%)</title><rect x="184.0" y="483.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.0" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.33%)</title><rect x="184.0" y="467.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="187.0" y="478.0"></text>
</g>
<g>
<title>__libc_send (3 samples, 0.33%)</title><rect x="184.0" y="451.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="187.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.33%)</title><rect x="187.9" y="547.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="190.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.33%)</title><rect x="187.9" y="531.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.9" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.11%)</title><rect x="189.2" y="515.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="192.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.11%)</title><rect x="189.2" y="499.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="192.2" y="510.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.11%)</title><rect x="189.2" y="483.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.2" y="494.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.11%)</title><rect x="190.5" y="515.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="193.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (1 samples, 0.11%)</title><rect x="191.8" y="547.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="194.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (55 samples, 6.10%)</title><rect x="193.1" y="547.0" width="72.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.1" y="558.0">ru/mail/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (30 samples, 3.33%)</title><rect x="194.5" y="531.0" width="39.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="197.5" y="542.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (30 samples, 3.33%)</title><rect x="194.5" y="515.0" width="39.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.5" y="526.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (30 samples, 3.33%)</title><rect x="194.5" y="499.0" width="39.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="197.5" y="510.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (29 samples, 3.22%)</title><rect x="195.8" y="483.0" width="37.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.8" y="494.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (29 samples, 3.22%)</title><rect x="195.8" y="467.0" width="37.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.8" y="478.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (29 samples, 3.22%)</title><rect x="195.8" y="451.0" width="37.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="198.8" y="462.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (29 samples, 3.22%)</title><rect x="195.8" y="435.0" width="37.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="198.8" y="446.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (28 samples, 3.10%)</title><rect x="195.8" y="419.0" width="36.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.8" y="430.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (28 samples, 3.10%)</title><rect x="195.8" y="403.0" width="36.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.8" y="414.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (3 samples, 0.33%)</title><rect x="195.8" y="387.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.8" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (3 samples, 0.33%)</title><rect x="195.8" y="371.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="198.8" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (3 samples, 0.33%)</title><rect x="195.8" y="355.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="198.8" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.22%)</title><rect x="197.1" y="339.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="200.1" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.22%)</title><rect x="197.1" y="323.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="200.1" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (18 samples, 2.00%)</title><rect x="199.7" y="387.0" width="23.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="202.7" y="398.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.flush (1 samples, 0.11%)</title><rect x="199.7" y="371.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.7" y="382.0"></text>
</g>
<g>
<title>java/io/PrintStream.flush (1 samples, 0.11%)</title><rect x="199.7" y="355.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="202.7" y="366.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.11%)</title><rect x="199.7" y="339.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="202.7" y="350.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.11%)</title><rect x="199.7" y="323.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="202.7" y="334.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.11%)</title><rect x="199.7" y="307.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.7" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (13 samples, 1.44%)</title><rect x="201.0" y="371.0" width="17.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="204.0" y="382.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (13 samples, 1.44%)</title><rect x="201.0" y="355.0" width="17.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.0" y="366.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (13 samples, 1.44%)</title><rect x="201.0" y="339.0" width="17.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.0" y="350.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (13 samples, 1.44%)</title><rect x="201.0" y="323.0" width="17.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.0" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (13 samples, 1.44%)</title><rect x="201.0" y="307.0" width="17.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="204.0" y="318.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (13 samples, 1.44%)</title><rect x="201.0" y="291.0" width="17.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="204.0" y="302.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (13 samples, 1.44%)</title><rect x="201.0" y="275.0" width="17.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="204.0" y="286.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (13 samples, 1.44%)</title><rect x="201.0" y="259.0" width="17.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="204.0" y="270.0"></text>
</g>
<g>
<title>handleWrite (1 samples, 0.11%)</title><rect x="202.3" y="243.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="205.3" y="254.0"></text>
</g>
<g>
<title>writeBytes (11 samples, 1.22%)</title><rect x="203.6" y="243.0" width="14.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="206.6" y="254.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.11%)</title><rect x="203.6" y="227.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="206.6" y="238.0"></text>
</g>
<g>
<title>__libc_write (3 samples, 0.33%)</title><rect x="204.9" y="227.0" width="3.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="207.9" y="238.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.11%)</title><rect x="208.8" y="227.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="211.8" y="238.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.11%)</title><rect x="208.8" y="211.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="211.8" y="222.0"></text>
</g>
<g>
<title>jni_GetArrayLength (2 samples, 0.22%)</title><rect x="210.2" y="227.0" width="2.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="213.2" y="238.0"></text>
</g>
<g>
<title>jni_GetObjectField (4 samples, 0.44%)</title><rect x="212.8" y="227.0" width="5.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="215.8" y="238.0"></text>
</g>
<g>
<title>AccessBarrierSupport::resolve_unknown_oop_ref_strength(unsigned long, oopDesc*, long) (1 samples, 0.11%)</title><rect x="214.1" y="211.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="217.1" y="222.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.11%)</title><rect x="215.4" y="211.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="218.4" y="222.0"></text>
</g>
<g>
<title>java_lang_ref_Reference::is_referent_field(oopDesc*, long) (1 samples, 0.11%)</title><rect x="215.4" y="195.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="218.4" y="206.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.11%)</title><rect x="216.7" y="211.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="219.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.22%)</title><rect x="218.0" y="371.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="221.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.22%)</title><rect x="218.0" y="355.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="221.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.11%)</title><rect x="218.0" y="339.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="221.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.11%)</title><rect x="218.0" y="323.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="221.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.11%)</title><rect x="218.0" y="307.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="221.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.11%)</title><rect x="218.0" y="291.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="221.0" y="302.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.11%)</title><rect x="218.0" y="275.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="221.0" y="286.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.11%)</title><rect x="218.0" y="259.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="221.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.11%)</title><rect x="219.3" y="339.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.11%)</title><rect x="219.3" y="323.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="222.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.22%)</title><rect x="220.6" y="371.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="223.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.22%)</title><rect x="220.6" y="355.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.22%)</title><rect x="220.6" y="339.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="223.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.22%)</title><rect x="220.6" y="323.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="223.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.22%)</title><rect x="220.6" y="307.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="223.6" y="318.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.11%)</title><rect x="220.6" y="291.0" width="1.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="223.6" y="302.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (1 samples, 0.11%)</title><rect x="220.6" y="275.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="223.6" y="286.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.11%)</title><rect x="221.9" y="291.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="224.9" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (7 samples, 0.78%)</title><rect x="223.2" y="387.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="226.2" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (7 samples, 0.78%)</title><rect x="223.2" y="371.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="226.2" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (7 samples, 0.78%)</title><rect x="223.2" y="355.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="226.2" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.11%)</title><rect x="223.2" y="339.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="226.2" y="350.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.11%)</title><rect x="223.2" y="323.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="226.2" y="334.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.11%)</title><rect x="223.2" y="307.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="226.2" y="318.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.11%)</title><rect x="223.2" y="291.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="226.2" y="302.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (1 samples, 0.11%)</title><rect x="223.2" y="275.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="226.2" y="286.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (1 samples, 0.11%)</title><rect x="223.2" y="259.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="226.2" y="270.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.11%)</title><rect x="223.2" y="243.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="226.2" y="254.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.11%)</title><rect x="223.2" y="227.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="226.2" y="238.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.subformat (1 samples, 0.11%)</title><rect x="223.2" y="211.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.2" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (1 samples, 0.11%)</title><rect x="223.2" y="195.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="226.2" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.11%)</title><rect x="223.2" y="179.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="226.2" y="190.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.55%)</title><rect x="224.5" y="339.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.5" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.55%)</title><rect x="224.5" y="323.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="227.5" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (3 samples, 0.33%)</title><rect x="225.9" y="307.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="228.9" y="318.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.22%)</title><rect x="227.2" y="291.0" width="2.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="230.2" y="302.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.11%)</title><rect x="229.8" y="307.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="232.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.11%)</title><rect x="231.1" y="339.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="234.1" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.11%)</title><rect x="231.1" y="323.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="234.1" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.11%)</title><rect x="231.1" y="307.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="234.1" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.11%)</title><rect x="232.4" y="419.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="235.4" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.11%)</title><rect x="232.4" y="403.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="235.4" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.11%)</title><rect x="232.4" y="387.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.11%)</title><rect x="233.7" y="531.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="236.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.11%)</title><rect x="233.7" y="515.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="236.7" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="233.7" y="499.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="236.7" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="233.7" y="483.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.7" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="233.7" y="467.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="236.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.11%)</title><rect x="233.7" y="451.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="236.7" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.11%)</title><rect x="233.7" y="435.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="236.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (23 samples, 2.55%)</title><rect x="235.0" y="531.0" width="30.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="238.0" y="542.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.11%)</title><rect x="237.6" y="515.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="240.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.11%)</title><rect x="237.6" y="499.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="240.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (20 samples, 2.22%)</title><rect x="238.9" y="515.0" width="26.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.9" y="526.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.11%)</title><rect x="238.9" y="499.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="241.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.11%)</title><rect x="238.9" y="483.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="241.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (1 samples, 0.11%)</title><rect x="238.9" y="467.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="241.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (19 samples, 2.11%)</title><rect x="240.2" y="499.0" width="24.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="243.2" y="510.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.11%)</title><rect x="240.2" y="483.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="243.2" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.11%)</title><rect x="240.2" y="467.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (18 samples, 2.00%)</title><rect x="241.6" y="483.0" width="23.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="244.6" y="494.0">j..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.11%)</title><rect x="241.6" y="467.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="244.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (17 samples, 1.88%)</title><rect x="242.9" y="467.0" width="22.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="245.9" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.22%)</title><rect x="242.9" y="451.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.22%)</title><rect x="242.9" y="435.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="245.9" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.11%)</title><rect x="244.2" y="419.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="247.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.11%)</title><rect x="244.2" y="403.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.2" y="414.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.11%)</title><rect x="244.2" y="387.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="247.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (15 samples, 1.66%)</title><rect x="245.5" y="451.0" width="19.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.5" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (15 samples, 1.66%)</title><rect x="245.5" y="435.0" width="19.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="248.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.33%)</title><rect x="261.2" y="419.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="264.2" y="430.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.33%)</title><rect x="261.2" y="403.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="264.2" y="414.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.11%)</title><rect x="263.8" y="387.0" width="1.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="266.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.33%)</title><rect x="265.1" y="595.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="268.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.22%)</title><rect x="266.4" y="579.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="269.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.22%)</title><rect x="266.4" y="563.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="269.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.22%)</title><rect x="266.4" y="547.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="269.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.22%)</title><rect x="266.4" y="531.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="269.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.33%)</title><rect x="269.0" y="595.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="272.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.22%)</title><rect x="272.9" y="595.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="275.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.22%)</title><rect x="272.9" y="579.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="275.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.22%)</title><rect x="272.9" y="563.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="275.9" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="274.3" y="547.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="277.3" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (12 samples, 1.33%)</title><rect x="275.6" y="611.0" width="15.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="278.6" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (12 samples, 1.33%)</title><rect x="275.6" y="595.0" width="15.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="278.6" y="606.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.78%)</title><rect x="276.9" y="579.0" width="9.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="279.9" y="590.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (2 samples, 0.22%)</title><rect x="278.2" y="563.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="281.2" y="574.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="280.8" y="563.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="283.8" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.33%)</title><rect x="282.1" y="563.0" width="3.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="285.1" y="574.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.11%)</title><rect x="283.4" y="547.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="286.4" y="558.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.11%)</title><rect x="284.7" y="547.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="287.7" y="558.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.11%)</title><rect x="284.7" y="531.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="287.7" y="542.0"></text>
</g>
<g>
<title>__recv (4 samples, 0.44%)</title><rect x="286.0" y="579.0" width="5.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="289.0" y="590.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=6987] (73 samples, 8.09%)</title><rect x="291.3" y="675.0" width="95.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="294.3" y="686.0">[NIO Select..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (73 samples, 8.09%)</title><rect x="291.3" y="659.0" width="95.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="294.3" y="670.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.44%)</title><rect x="291.3" y="643.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="294.3" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.44%)</title><rect x="291.3" y="627.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="294.3" y="638.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.11%)</title><rect x="292.6" y="611.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="295.6" y="622.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.22%)</title><rect x="293.9" y="611.0" width="2.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="296.9" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (69 samples, 7.65%)</title><rect x="296.5" y="643.0" width="90.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="299.5" y="654.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (66 samples, 7.32%)</title><rect x="300.4" y="627.0" width="86.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="303.4" y="638.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (57 samples, 6.32%)</title><rect x="300.4" y="611.0" width="74.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="303.4" y="622.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (46 samples, 5.10%)</title><rect x="305.7" y="595.0" width="60.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.7" y="606.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (46 samples, 5.10%)</title><rect x="305.7" y="579.0" width="60.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="308.7" y="590.0">one/ni..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (46 samples, 5.10%)</title><rect x="305.7" y="563.0" width="60.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="308.7" y="574.0">Reques..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 1.11%)</title><rect x="305.7" y="547.0" width="13.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.11%)</title><rect x="308.3" y="531.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.11%)</title><rect x="308.3" y="515.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.11%)</title><rect x="308.3" y="499.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="311.3" y="510.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.11%)</title><rect x="308.3" y="483.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="311.3" y="494.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.11%)</title><rect x="308.3" y="467.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="311.3" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 0.78%)</title><rect x="309.6" y="531.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="312.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.33%)</title><rect x="309.6" y="515.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="312.6" y="526.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.22%)</title><rect x="310.9" y="499.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="313.9" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.22%)</title><rect x="310.9" y="483.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.9" y="494.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.22%)</title><rect x="310.9" y="467.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="313.9" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="312.2" y="451.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="315.2" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.44%)</title><rect x="313.5" y="515.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="316.5" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.44%)</title><rect x="313.5" y="499.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="316.5" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.44%)</title><rect x="313.5" y="483.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.5" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.44%)</title><rect x="313.5" y="467.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.5" y="478.0"></text>
</g>
<g>
<title>__libc_send (4 samples, 0.44%)</title><rect x="313.5" y="451.0" width="5.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="316.5" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.22%)</title><rect x="318.7" y="547.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.11%)</title><rect x="320.0" y="531.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="323.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (1 samples, 0.11%)</title><rect x="321.4" y="547.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="324.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (33 samples, 3.66%)</title><rect x="322.7" y="547.0" width="43.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="325.7" y="558.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (21 samples, 2.33%)</title><rect x="322.7" y="531.0" width="27.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="325.7" y="542.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (19 samples, 2.11%)</title><rect x="324.0" y="515.0" width="24.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="327.0" y="526.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (19 samples, 2.11%)</title><rect x="324.0" y="499.0" width="24.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="327.0" y="510.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (19 samples, 2.11%)</title><rect x="324.0" y="483.0" width="24.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="327.0" y="494.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (19 samples, 2.11%)</title><rect x="324.0" y="467.0" width="24.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="327.0" y="478.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (19 samples, 2.11%)</title><rect x="324.0" y="451.0" width="24.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="327.0" y="462.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (19 samples, 2.11%)</title><rect x="324.0" y="435.0" width="24.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="327.0" y="446.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (19 samples, 2.11%)</title><rect x="324.0" y="419.0" width="24.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="327.0" y="430.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (19 samples, 2.11%)</title><rect x="324.0" y="403.0" width="24.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="327.0" y="414.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (2 samples, 0.22%)</title><rect x="324.0" y="387.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="327.0" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.11%)</title><rect x="324.0" y="371.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="327.0" y="382.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.11%)</title><rect x="324.0" y="355.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="327.0" y="366.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.11%)</title><rect x="324.0" y="339.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="327.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.11%)</title><rect x="324.0" y="323.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="327.0" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.11%)</title><rect x="324.0" y="307.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="327.0" y="318.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.11%)</title><rect x="324.0" y="291.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="327.0" y="302.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.11%)</title><rect x="324.0" y="275.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="327.0" y="286.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.11%)</title><rect x="324.0" y="259.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="327.0" y="270.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.11%)</title><rect x="324.0" y="243.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="327.0" y="254.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.11%)</title><rect x="324.0" y="227.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="327.0" y="238.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.11%)</title><rect x="324.0" y="211.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="327.0" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (1 samples, 0.11%)</title><rect x="325.3" y="371.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.3" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (1 samples, 0.11%)</title><rect x="325.3" y="355.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.3" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (13 samples, 1.44%)</title><rect x="326.6" y="387.0" width="17.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="329.6" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.flush (2 samples, 0.22%)</title><rect x="326.6" y="371.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="329.6" y="382.0"></text>
</g>
<g>
<title>java/io/PrintStream.flush (2 samples, 0.22%)</title><rect x="326.6" y="355.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="329.6" y="366.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (2 samples, 0.22%)</title><rect x="326.6" y="339.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="329.6" y="350.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.11%)</title><rect x="327.9" y="323.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="330.9" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (6 samples, 0.67%)</title><rect x="329.2" y="371.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="332.2" y="382.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (6 samples, 0.67%)</title><rect x="329.2" y="355.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="332.2" y="366.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (6 samples, 0.67%)</title><rect x="329.2" y="339.0" width="7.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="332.2" y="350.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (6 samples, 0.67%)</title><rect x="329.2" y="323.0" width="7.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="332.2" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (6 samples, 0.67%)</title><rect x="329.2" y="307.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="332.2" y="318.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (6 samples, 0.67%)</title><rect x="329.2" y="291.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="332.2" y="302.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (6 samples, 0.67%)</title><rect x="329.2" y="275.0" width="7.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.2" y="286.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (6 samples, 0.67%)</title><rect x="329.2" y="259.0" width="7.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="332.2" y="270.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.11%)</title><rect x="329.2" y="243.0" width="1.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="332.2" y="254.0"></text>
</g>
<g>
<title>writeBytes (5 samples, 0.55%)</title><rect x="330.5" y="243.0" width="6.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="333.5" y="254.0"></text>
</g>
<g>
<title>__libc_write (3 samples, 0.33%)</title><rect x="330.5" y="227.0" width="3.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="333.5" y="238.0"></text>
</g>
<g>
<title>jni_GetArrayLength (1 samples, 0.11%)</title><rect x="334.4" y="227.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="337.4" y="238.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.11%)</title><rect x="335.7" y="227.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="338.7" y="238.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.11%)</title><rect x="335.7" y="211.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="338.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.55%)</title><rect x="337.1" y="371.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="340.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.55%)</title><rect x="337.1" y="355.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="340.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.55%)</title><rect x="337.1" y="339.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.55%)</title><rect x="337.1" y="323.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="340.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.55%)</title><rect x="337.1" y="307.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.1" y="318.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.11%)</title><rect x="337.1" y="291.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="340.1" y="302.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.11%)</title><rect x="337.1" y="275.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="340.1" y="286.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.44%)</title><rect x="338.4" y="291.0" width="5.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="341.4" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (4 samples, 0.44%)</title><rect x="343.6" y="387.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="346.6" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (4 samples, 0.44%)</title><rect x="343.6" y="371.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="346.6" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (4 samples, 0.44%)</title><rect x="343.6" y="355.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="346.6" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.11%)</title><rect x="343.6" y="339.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="346.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.33%)</title><rect x="344.9" y="339.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="347.9" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.33%)</title><rect x="344.9" y="323.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="347.9" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.11%)</title><rect x="346.2" y="307.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="349.2" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.11%)</title><rect x="346.2" y="291.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="349.2" y="302.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.11%)</title><rect x="347.5" y="307.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="350.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.11%)</title><rect x="348.8" y="515.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="351.8" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.11%)</title><rect x="350.1" y="531.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="353.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.11%)</title><rect x="350.1" y="515.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.1" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="350.1" y="499.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="353.1" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="350.1" y="483.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="353.1" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="350.1" y="467.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="353.1" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.11%)</title><rect x="350.1" y="451.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="353.1" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.11%)</title><rect x="350.1" y="435.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="353.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (11 samples, 1.22%)</title><rect x="351.4" y="531.0" width="14.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (11 samples, 1.22%)</title><rect x="351.4" y="515.0" width="14.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (11 samples, 1.22%)</title><rect x="351.4" y="499.0" width="14.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="354.4" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.22%)</title><rect x="351.4" y="483.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="354.4" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.22%)</title><rect x="351.4" y="467.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (9 samples, 1.00%)</title><rect x="354.1" y="483.0" width="11.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="357.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (8 samples, 0.89%)</title><rect x="355.4" y="467.0" width="10.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="358.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 0.89%)</title><rect x="355.4" y="451.0" width="10.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="358.4" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.89%)</title><rect x="355.4" y="435.0" width="10.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="358.4" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.33%)</title><rect x="361.9" y="419.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="364.9" y="430.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.33%)</title><rect x="361.9" y="403.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="364.9" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.55%)</title><rect x="365.8" y="595.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="368.8" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.11%)</title><rect x="367.1" y="579.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="370.1" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.11%)</title><rect x="367.1" y="563.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="370.1" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.11%)</title><rect x="367.1" y="547.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="370.1" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.11%)</title><rect x="367.1" y="531.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="370.1" y="542.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.11%)</title><rect x="367.1" y="515.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="370.1" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.11%)</title><rect x="367.1" y="499.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="370.1" y="510.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.11%)</title><rect x="367.1" y="483.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="370.1" y="494.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.11%)</title><rect x="367.1" y="467.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="370.1" y="478.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.11%)</title><rect x="367.1" y="451.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="370.1" y="462.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.11%)</title><rect x="367.1" y="435.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="370.1" y="446.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.11%)</title><rect x="367.1" y="419.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="370.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.22%)</title><rect x="368.4" y="579.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="371.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.22%)</title><rect x="368.4" y="563.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.22%)</title><rect x="368.4" y="547.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.22%)</title><rect x="368.4" y="531.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.4" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.11%)</title><rect x="371.1" y="579.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="374.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.11%)</title><rect x="372.4" y="595.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="375.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.11%)</title><rect x="372.4" y="579.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="375.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.11%)</title><rect x="372.4" y="563.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.4" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.11%)</title><rect x="373.7" y="595.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="376.7" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.11%)</title><rect x="373.7" y="579.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="376.7" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 0.11%)</title><rect x="373.7" y="563.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (9 samples, 1.00%)</title><rect x="375.0" y="611.0" width="11.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="378.0" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 1.00%)</title><rect x="375.0" y="595.0" width="11.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="378.0" y="606.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.44%)</title><rect x="376.3" y="579.0" width="5.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="379.3" y="590.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.11%)</title><rect x="376.3" y="563.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="379.3" y="574.0"></text>
</g>
<g>
<title>WeakPreserveExceptionMark::WeakPreserveExceptionMark(Thread*) (1 samples, 0.11%)</title><rect x="377.6" y="563.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="380.6" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.22%)</title><rect x="378.9" y="563.0" width="2.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="381.9" y="574.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.33%)</title><rect x="381.5" y="579.0" width="4.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="384.5" y="590.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.11%)</title><rect x="385.5" y="579.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="388.5" y="590.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=6988] (77 samples, 8.54%)</title><rect x="386.8" y="675.0" width="100.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="389.8" y="686.0">[NIO Selecto..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (77 samples, 8.54%)</title><rect x="386.8" y="659.0" width="100.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="389.8" y="670.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 0.67%)</title><rect x="386.8" y="643.0" width="7.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="389.8" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 0.67%)</title><rect x="386.8" y="627.0" width="7.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.8" y="638.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.11%)</title><rect x="388.1" y="611.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="391.1" y="622.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.11%)</title><rect x="388.1" y="595.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="391.1" y="606.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.11%)</title><rect x="389.4" y="611.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="392.4" y="622.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.33%)</title><rect x="390.7" y="611.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="393.7" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (70 samples, 7.76%)</title><rect x="394.6" y="643.0" width="91.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="397.6" y="654.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (69 samples, 7.65%)</title><rect x="395.9" y="627.0" width="90.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="398.9" y="638.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (59 samples, 6.54%)</title><rect x="395.9" y="611.0" width="77.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.9" y="622.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (46 samples, 5.10%)</title><rect x="401.2" y="595.0" width="60.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="404.2" y="606.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (46 samples, 5.10%)</title><rect x="401.2" y="579.0" width="60.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="404.2" y="590.0">one/ni..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (45 samples, 4.99%)</title><rect x="401.2" y="563.0" width="58.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="404.2" y="574.0">Reques..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.67%)</title><rect x="401.2" y="547.0" width="7.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="404.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.11%)</title><rect x="401.2" y="531.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="404.2" y="542.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.11%)</title><rect x="401.2" y="515.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="404.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.11%)</title><rect x="401.2" y="499.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="404.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.44%)</title><rect x="402.5" y="531.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="405.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.33%)</title><rect x="402.5" y="515.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="405.5" y="526.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.22%)</title><rect x="403.8" y="499.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="406.8" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.22%)</title><rect x="403.8" y="483.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="406.8" y="494.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.22%)</title><rect x="403.8" y="467.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="406.8" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="405.1" y="451.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="408.1" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.11%)</title><rect x="406.4" y="515.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="409.4" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.11%)</title><rect x="406.4" y="499.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="409.4" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.11%)</title><rect x="406.4" y="483.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="409.4" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.11%)</title><rect x="406.4" y="467.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="409.4" y="478.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.11%)</title><rect x="406.4" y="451.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="409.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.11%)</title><rect x="407.7" y="531.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="410.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (39 samples, 4.32%)</title><rect x="409.0" y="547.0" width="51.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="412.0" y="558.0">ru/ma..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (22 samples, 2.44%)</title><rect x="409.0" y="531.0" width="28.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="412.0" y="542.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (22 samples, 2.44%)</title><rect x="409.0" y="515.0" width="28.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="412.0" y="526.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (22 samples, 2.44%)</title><rect x="409.0" y="499.0" width="28.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="412.0" y="510.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (21 samples, 2.33%)</title><rect x="409.0" y="483.0" width="27.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="412.0" y="494.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (21 samples, 2.33%)</title><rect x="409.0" y="467.0" width="27.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="412.0" y="478.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (21 samples, 2.33%)</title><rect x="409.0" y="451.0" width="27.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="412.0" y="462.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (21 samples, 2.33%)</title><rect x="409.0" y="435.0" width="27.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="412.0" y="446.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (19 samples, 2.11%)</title><rect x="409.0" y="419.0" width="24.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="412.0" y="430.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (19 samples, 2.11%)</title><rect x="409.0" y="403.0" width="24.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="412.0" y="414.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (5 samples, 0.55%)</title><rect x="409.0" y="387.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="412.0" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (2 samples, 0.22%)</title><rect x="409.0" y="371.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="412.0" y="382.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (2 samples, 0.22%)</title><rect x="409.0" y="355.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="412.0" y="366.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (2 samples, 0.22%)</title><rect x="409.0" y="339.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="412.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.11%)</title><rect x="409.0" y="323.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="412.0" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.11%)</title><rect x="409.0" y="307.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="412.0" y="318.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (1 samples, 0.11%)</title><rect x="409.0" y="291.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="412.0" y="302.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.11%)</title><rect x="410.3" y="323.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.3" y="334.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.11%)</title><rect x="410.3" y="307.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="413.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.11%)</title><rect x="410.3" y="291.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="413.3" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.11%)</title><rect x="410.3" y="275.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.3" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.11%)</title><rect x="410.3" y="259.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.3" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (3 samples, 0.33%)</title><rect x="411.6" y="371.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="414.6" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (2 samples, 0.22%)</title><rect x="412.9" y="355.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="415.9" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.11%)</title><rect x="414.2" y="339.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.2" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.11%)</title><rect x="414.2" y="323.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="417.2" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (13 samples, 1.44%)</title><rect x="415.5" y="387.0" width="17.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="418.5" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (12 samples, 1.33%)</title><rect x="415.5" y="371.0" width="15.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="418.5" y="382.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (12 samples, 1.33%)</title><rect x="415.5" y="355.0" width="15.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.5" y="366.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (12 samples, 1.33%)</title><rect x="415.5" y="339.0" width="15.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="418.5" y="350.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (12 samples, 1.33%)</title><rect x="415.5" y="323.0" width="15.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="418.5" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (12 samples, 1.33%)</title><rect x="415.5" y="307.0" width="15.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.5" y="318.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (12 samples, 1.33%)</title><rect x="415.5" y="291.0" width="15.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="418.5" y="302.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (12 samples, 1.33%)</title><rect x="415.5" y="275.0" width="15.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="418.5" y="286.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (12 samples, 1.33%)</title><rect x="415.5" y="259.0" width="15.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="418.5" y="270.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.11%)</title><rect x="418.2" y="243.0" width="1.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="421.2" y="254.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.11%)</title><rect x="419.5" y="243.0" width="1.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="422.5" y="254.0"></text>
</g>
<g>
<title>writeBytes (8 samples, 0.89%)</title><rect x="420.8" y="243.0" width="10.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="423.8" y="254.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.11%)</title><rect x="420.8" y="227.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="423.8" y="238.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.22%)</title><rect x="422.1" y="227.0" width="2.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="425.1" y="238.0"></text>
</g>
<g>
<title>arrayOopDesc::base_offset_in_bytes(BasicType) (1 samples, 0.11%)</title><rect x="424.7" y="227.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="427.7" y="238.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.11%)</title><rect x="426.0" y="227.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="429.0" y="238.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.11%)</title><rect x="426.0" y="211.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="429.0" y="222.0"></text>
</g>
<g>
<title>jni_GetObjectField (2 samples, 0.22%)</title><rect x="427.3" y="227.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="430.3" y="238.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.11%)</title><rect x="427.3" y="211.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="430.3" y="222.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.11%)</title><rect x="428.6" y="211.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="431.6" y="222.0"></text>
</g>
<g>
<title>java_lang_ref_Reference::is_referent_field(oopDesc*, long) (1 samples, 0.11%)</title><rect x="428.6" y="195.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="431.6" y="206.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.11%)</title><rect x="429.9" y="227.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="432.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.11%)</title><rect x="431.2" y="371.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="434.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.11%)</title><rect x="431.2" y="355.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="434.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.11%)</title><rect x="431.2" y="339.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="434.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.11%)</title><rect x="431.2" y="323.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="434.2" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.11%)</title><rect x="432.5" y="387.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="435.5" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.11%)</title><rect x="432.5" y="371.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="435.5" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.11%)</title><rect x="432.5" y="355.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="435.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.11%)</title><rect x="432.5" y="339.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="435.5" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.11%)</title><rect x="432.5" y="323.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="435.5" y="334.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.11%)</title><rect x="432.5" y="307.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="435.5" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.22%)</title><rect x="433.9" y="419.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="436.9" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.22%)</title><rect x="433.9" y="403.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="436.9" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (2 samples, 0.22%)</title><rect x="433.9" y="387.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="436.9" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (1 samples, 0.11%)</title><rect x="436.5" y="483.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="439.5" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.11%)</title><rect x="437.8" y="531.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="440.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.11%)</title><rect x="437.8" y="515.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="440.8" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="437.8" y="499.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="440.8" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="437.8" y="483.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="440.8" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="437.8" y="467.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="440.8" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.11%)</title><rect x="437.8" y="451.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="440.8" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.11%)</title><rect x="437.8" y="435.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="440.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (16 samples, 1.77%)</title><rect x="439.1" y="531.0" width="20.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.1" y="542.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.11%)</title><rect x="439.1" y="515.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="442.1" y="526.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.11%)</title><rect x="439.1" y="499.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="442.1" y="510.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.11%)</title><rect x="439.1" y="483.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="442.1" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.11%)</title><rect x="439.1" y="467.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="442.1" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.11%)</title><rect x="440.4" y="515.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="443.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.11%)</title><rect x="440.4" y="499.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="443.4" y="510.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="440.4" y="483.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="443.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (14 samples, 1.55%)</title><rect x="441.7" y="515.0" width="18.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.11%)</title><rect x="443.0" y="499.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="446.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.11%)</title><rect x="443.0" y="483.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="446.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.11%)</title><rect x="443.0" y="467.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="446.0" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.11%)</title><rect x="443.0" y="451.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="446.0" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.11%)</title><rect x="443.0" y="435.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="446.0" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.11%)</title><rect x="443.0" y="419.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="446.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (12 samples, 1.33%)</title><rect x="444.3" y="499.0" width="15.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="447.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (12 samples, 1.33%)</title><rect x="444.3" y="483.0" width="15.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="447.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (12 samples, 1.33%)</title><rect x="444.3" y="467.0" width="15.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="447.3" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.11%)</title><rect x="445.6" y="451.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="448.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (10 samples, 1.11%)</title><rect x="446.9" y="451.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="449.9" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 1.11%)</title><rect x="446.9" y="435.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="449.9" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.44%)</title><rect x="454.8" y="419.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.8" y="430.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.44%)</title><rect x="454.8" y="403.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.8" y="414.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.11%)</title><rect x="458.7" y="387.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="461.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.11%)</title><rect x="460.0" y="563.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="463.0" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.11%)</title><rect x="460.0" y="547.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="463.0" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.11%)</title><rect x="460.0" y="531.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="463.0" y="542.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.11%)</title><rect x="460.0" y="515.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.0" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.11%)</title><rect x="460.0" y="499.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.55%)</title><rect x="461.3" y="595.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="464.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.22%)</title><rect x="462.6" y="579.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="465.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.22%)</title><rect x="462.6" y="563.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="465.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.22%)</title><rect x="462.6" y="547.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="465.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.22%)</title><rect x="462.6" y="531.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="465.6" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.11%)</title><rect x="465.3" y="579.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="468.3" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.11%)</title><rect x="465.3" y="563.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="468.3" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.11%)</title><rect x="466.6" y="579.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="469.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.11%)</title><rect x="467.9" y="595.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="470.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.11%)</title><rect x="469.2" y="595.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="472.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.11%)</title><rect x="469.2" y="579.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.11%)</title><rect x="469.2" y="563.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.2" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="469.2" y="547.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="472.2" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.22%)</title><rect x="470.5" y="595.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="473.5" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.22%)</title><rect x="470.5" y="579.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="473.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 0.11%)</title><rect x="471.8" y="563.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="474.8" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (10 samples, 1.11%)</title><rect x="473.1" y="611.0" width="13.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="476.1" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (10 samples, 1.11%)</title><rect x="473.1" y="595.0" width="13.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.1" y="606.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.44%)</title><rect x="474.4" y="579.0" width="5.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="477.4" y="590.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.22%)</title><rect x="475.7" y="563.0" width="2.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="478.7" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.11%)</title><rect x="478.3" y="563.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="481.3" y="574.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.11%)</title><rect x="478.3" y="547.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="481.3" y="558.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.11%)</title><rect x="479.6" y="579.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="482.6" y="590.0"></text>
</g>
<g>
<title>__recv (4 samples, 0.44%)</title><rect x="481.0" y="579.0" width="5.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="484.0" y="590.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.11%)</title><rect x="486.2" y="643.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="489.2" y="654.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.11%)</title><rect x="486.2" y="627.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="489.2" y="638.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=6989] (106 samples, 11.75%)</title><rect x="487.5" y="675.0" width="138.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="490.5" y="686.0">[NIO Selector #3 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (106 samples, 11.75%)</title><rect x="487.5" y="659.0" width="138.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="490.5" y="670.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (8 samples, 0.89%)</title><rect x="488.8" y="643.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="491.8" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (8 samples, 0.89%)</title><rect x="488.8" y="627.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.8" y="638.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.22%)</title><rect x="490.1" y="611.0" width="2.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="493.1" y="622.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.55%)</title><rect x="492.7" y="611.0" width="6.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="495.7" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (97 samples, 10.75%)</title><rect x="499.3" y="643.0" width="126.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="502.3" y="654.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (95 samples, 10.53%)</title><rect x="501.9" y="627.0" width="124.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="504.9" y="638.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (82 samples, 9.09%)</title><rect x="501.9" y="611.0" width="107.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="504.9" y="622.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (67 samples, 7.43%)</title><rect x="509.7" y="595.0" width="87.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="512.7" y="606.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (67 samples, 7.43%)</title><rect x="509.7" y="579.0" width="87.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="512.7" y="590.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (65 samples, 7.21%)</title><rect x="509.7" y="563.0" width="85.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="512.7" y="574.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (14 samples, 1.55%)</title><rect x="509.7" y="547.0" width="18.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="512.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (14 samples, 1.55%)</title><rect x="509.7" y="531.0" width="18.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="512.7" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.55%)</title><rect x="509.7" y="515.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="512.7" y="526.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.11%)</title><rect x="515.0" y="499.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="518.0" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.11%)</title><rect x="515.0" y="483.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="518.0" y="494.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.11%)</title><rect x="515.0" y="467.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.0" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="515.0" y="451.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="518.0" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 1.00%)</title><rect x="516.3" y="515.0" width="11.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="519.3" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 1.00%)</title><rect x="516.3" y="499.0" width="11.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.11%)</title><rect x="516.3" y="483.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="519.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (8 samples, 0.89%)</title><rect x="517.6" y="483.0" width="10.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.6" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (8 samples, 0.89%)</title><rect x="517.6" y="467.0" width="10.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.6" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.33%)</title><rect x="518.9" y="451.0" width="3.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="521.9" y="462.0"></text>
</g>
<g>
<title>WeakPreserveExceptionMark::WeakPreserveExceptionMark(Thread*) (1 samples, 0.11%)</title><rect x="518.9" y="435.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="521.9" y="446.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="520.2" y="435.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="523.2" y="446.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.11%)</title><rect x="521.5" y="435.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="524.5" y="446.0"></text>
</g>
<g>
<title>__libc_send (4 samples, 0.44%)</title><rect x="522.8" y="451.0" width="5.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="525.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (51 samples, 5.65%)</title><rect x="528.0" y="547.0" width="66.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="531.0" y="558.0">ru/mail..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (32 samples, 3.55%)</title><rect x="528.0" y="531.0" width="41.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="531.0" y="542.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (32 samples, 3.55%)</title><rect x="528.0" y="515.0" width="41.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="531.0" y="526.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (32 samples, 3.55%)</title><rect x="528.0" y="499.0" width="41.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.0" y="510.0">ch/..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.11%)</title><rect x="528.0" y="483.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="531.0" y="494.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.11%)</title><rect x="528.0" y="467.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="531.0" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (30 samples, 3.33%)</title><rect x="529.4" y="483.0" width="39.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="532.4" y="494.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (30 samples, 3.33%)</title><rect x="529.4" y="467.0" width="39.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="532.4" y="478.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (30 samples, 3.33%)</title><rect x="529.4" y="451.0" width="39.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="532.4" y="462.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (30 samples, 3.33%)</title><rect x="529.4" y="435.0" width="39.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="532.4" y="446.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (27 samples, 2.99%)</title><rect x="529.4" y="419.0" width="35.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="532.4" y="430.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (27 samples, 2.99%)</title><rect x="529.4" y="403.0" width="35.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="532.4" y="414.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (4 samples, 0.44%)</title><rect x="529.4" y="387.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="532.4" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (3 samples, 0.33%)</title><rect x="529.4" y="371.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="532.4" y="382.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (3 samples, 0.33%)</title><rect x="529.4" y="355.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="532.4" y="366.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (3 samples, 0.33%)</title><rect x="529.4" y="339.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.4" y="350.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (3 samples, 0.33%)</title><rect x="529.4" y="323.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="532.4" y="334.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (3 samples, 0.33%)</title><rect x="529.4" y="307.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="532.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.33%)</title><rect x="529.4" y="291.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="532.4" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.33%)</title><rect x="529.4" y="275.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="532.4" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (3 samples, 0.33%)</title><rect x="529.4" y="259.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="532.4" y="270.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.11%)</title><rect x="532.0" y="243.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="535.0" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (1 samples, 0.11%)</title><rect x="533.3" y="371.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="536.3" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (1 samples, 0.11%)</title><rect x="533.3" y="355.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="536.3" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (14 samples, 1.55%)</title><rect x="534.6" y="387.0" width="18.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="537.6" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.flush (2 samples, 0.22%)</title><rect x="534.6" y="371.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="537.6" y="382.0"></text>
</g>
<g>
<title>java/io/PrintStream.flush (2 samples, 0.22%)</title><rect x="534.6" y="355.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="537.6" y="366.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (2 samples, 0.22%)</title><rect x="534.6" y="339.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="537.6" y="350.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.11%)</title><rect x="535.9" y="323.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="538.9" y="334.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.11%)</title><rect x="535.9" y="307.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="538.9" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (9 samples, 1.00%)</title><rect x="537.2" y="371.0" width="11.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="540.2" y="382.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (9 samples, 1.00%)</title><rect x="537.2" y="355.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="540.2" y="366.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (9 samples, 1.00%)</title><rect x="537.2" y="339.0" width="11.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="540.2" y="350.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (9 samples, 1.00%)</title><rect x="537.2" y="323.0" width="11.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="540.2" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (9 samples, 1.00%)</title><rect x="537.2" y="307.0" width="11.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="540.2" y="318.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (9 samples, 1.00%)</title><rect x="537.2" y="291.0" width="11.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="540.2" y="302.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (9 samples, 1.00%)</title><rect x="537.2" y="275.0" width="11.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="540.2" y="286.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (9 samples, 1.00%)</title><rect x="537.2" y="259.0" width="11.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="540.2" y="270.0"></text>
</g>
<g>
<title>jni_GetArrayLength (1 samples, 0.11%)</title><rect x="537.2" y="243.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="540.2" y="254.0"></text>
</g>
<g>
<title>writeBytes (8 samples, 0.89%)</title><rect x="538.5" y="243.0" width="10.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="541.5" y="254.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.22%)</title><rect x="538.5" y="227.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="541.5" y="238.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.22%)</title><rect x="541.1" y="227.0" width="2.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="544.1" y="238.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.11%)</title><rect x="543.7" y="227.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="546.7" y="238.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.11%)</title><rect x="543.7" y="211.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="546.7" y="222.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.11%)</title><rect x="545.1" y="227.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="548.1" y="238.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.11%)</title><rect x="545.1" y="211.0" width="1.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="548.1" y="222.0"></text>
</g>
<g>
<title>jni_GetObjectField (2 samples, 0.22%)</title><rect x="546.4" y="227.0" width="2.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="549.4" y="238.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.11%)</title><rect x="547.7" y="211.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="550.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.11%)</title><rect x="549.0" y="371.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.11%)</title><rect x="549.0" y="355.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="552.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.11%)</title><rect x="549.0" y="339.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.11%)</title><rect x="549.0" y="323.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.11%)</title><rect x="549.0" y="307.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="552.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.11%)</title><rect x="549.0" y="291.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.0" y="302.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.11%)</title><rect x="549.0" y="275.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="552.0" y="286.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.11%)</title><rect x="549.0" y="259.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="552.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.22%)</title><rect x="550.3" y="371.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="553.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.22%)</title><rect x="550.3" y="355.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.22%)</title><rect x="550.3" y="339.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="553.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.22%)</title><rect x="550.3" y="323.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.22%)</title><rect x="550.3" y="307.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="553.3" y="318.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.22%)</title><rect x="550.3" y="291.0" width="2.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="553.3" y="302.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.11%)</title><rect x="550.3" y="275.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="553.3" y="286.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.11%)</title><rect x="551.6" y="275.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="554.6" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (9 samples, 1.00%)</title><rect x="552.9" y="387.0" width="11.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="555.9" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (7 samples, 0.78%)</title><rect x="552.9" y="371.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="555.9" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (7 samples, 0.78%)</title><rect x="552.9" y="355.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.67%)</title><rect x="552.9" y="339.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="555.9" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.67%)</title><rect x="552.9" y="323.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.9" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.11%)</title><rect x="555.5" y="307.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="558.5" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.11%)</title><rect x="555.5" y="291.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="558.5" y="302.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="555.5" y="275.0" width="1.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="558.5" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.22%)</title><rect x="556.8" y="307.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="559.8" y="318.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.11%)</title><rect x="559.4" y="307.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="562.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.11%)</title><rect x="560.8" y="339.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.11%)</title><rect x="560.8" y="323.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="563.8" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.11%)</title><rect x="560.8" y="307.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="563.8" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (2 samples, 0.22%)</title><rect x="562.1" y="371.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.1" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.22%)</title><rect x="562.1" y="355.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="565.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.22%)</title><rect x="562.1" y="339.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="565.1" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.22%)</title><rect x="562.1" y="323.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.11%)</title><rect x="562.1" y="307.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="565.1" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.11%)</title><rect x="563.4" y="307.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="566.4" y="318.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="563.4" y="291.0" width="1.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="566.4" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (3 samples, 0.33%)</title><rect x="564.7" y="419.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.7" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 0.33%)</title><rect x="564.7" y="403.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.7" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (3 samples, 0.33%)</title><rect x="564.7" y="387.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.7" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (1 samples, 0.11%)</title><rect x="568.6" y="483.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="571.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (19 samples, 2.11%)</title><rect x="569.9" y="531.0" width="24.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.9" y="542.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.22%)</title><rect x="569.9" y="515.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.9" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.22%)</title><rect x="569.9" y="499.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="572.9" y="510.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.22%)</title><rect x="569.9" y="483.0" width="2.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="572.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (17 samples, 1.88%)</title><rect x="572.5" y="515.0" width="22.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="575.5" y="526.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.11%)</title><rect x="572.5" y="499.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.11%)</title><rect x="572.5" y="483.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="575.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.11%)</title><rect x="572.5" y="467.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="575.5" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.11%)</title><rect x="572.5" y="451.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.5" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.11%)</title><rect x="572.5" y="435.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="575.5" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.11%)</title><rect x="572.5" y="419.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="575.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (16 samples, 1.77%)</title><rect x="573.8" y="499.0" width="21.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (16 samples, 1.77%)</title><rect x="573.8" y="483.0" width="21.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="576.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (16 samples, 1.77%)</title><rect x="573.8" y="467.0" width="21.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="576.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (15 samples, 1.66%)</title><rect x="575.1" y="451.0" width="19.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.1" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (15 samples, 1.66%)</title><rect x="575.1" y="435.0" width="19.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="578.1" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.89%)</title><rect x="584.3" y="419.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.3" y="430.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.89%)</title><rect x="584.3" y="403.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="587.3" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.22%)</title><rect x="592.2" y="387.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="595.2" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.22%)</title><rect x="592.2" y="371.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="595.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.22%)</title><rect x="594.8" y="563.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="597.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.22%)</title><rect x="594.8" y="547.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="597.8" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.22%)</title><rect x="594.8" y="531.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.8" y="542.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.22%)</title><rect x="594.8" y="515.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="597.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.22%)</title><rect x="594.8" y="499.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="597.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.44%)</title><rect x="597.4" y="595.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="600.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.33%)</title><rect x="598.7" y="579.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="601.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.33%)</title><rect x="598.7" y="563.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.7" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.55%)</title><rect x="602.6" y="595.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="605.6" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.55%)</title><rect x="602.6" y="579.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="605.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (13 samples, 1.44%)</title><rect x="609.2" y="611.0" width="17.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="612.2" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (13 samples, 1.44%)</title><rect x="609.2" y="595.0" width="17.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="612.2" y="606.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.67%)</title><rect x="609.2" y="579.0" width="7.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="612.2" y="590.0"></text>
</g>
<g>
<title>arrayOopDesc::base_offset_in_bytes(BasicType) (1 samples, 0.11%)</title><rect x="609.2" y="563.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="612.2" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.33%)</title><rect x="610.5" y="563.0" width="3.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="613.5" y="574.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.11%)</title><rect x="613.1" y="547.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="616.1" y="558.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (2 samples, 0.22%)</title><rect x="614.4" y="563.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="617.4" y="574.0"></text>
</g>
<g>
<title>__recv (7 samples, 0.78%)</title><rect x="617.0" y="579.0" width="9.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="620.0" y="590.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=6990] (40 samples, 4.43%)</title><rect x="626.2" y="675.0" width="52.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="629.2" y="686.0">[NIO ..</text>
</g>
<g>
<title>[no_Java_frame] (2 samples, 0.22%)</title><rect x="626.2" y="659.0" width="2.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="629.2" y="670.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.11%)</title><rect x="628.8" y="659.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="631.8" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.11%)</title><rect x="628.8" y="643.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="631.8" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.11%)</title><rect x="628.8" y="627.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="631.8" y="638.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.11%)</title><rect x="628.8" y="611.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="631.8" y="622.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.11%)</title><rect x="628.8" y="595.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="631.8" y="606.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.11%)</title><rect x="628.8" y="579.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="631.8" y="590.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (37 samples, 4.10%)</title><rect x="630.1" y="659.0" width="48.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.1" y="670.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.44%)</title><rect x="631.4" y="643.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="634.4" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.33%)</title><rect x="632.7" y="627.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="635.7" y="638.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.11%)</title><rect x="635.3" y="611.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="638.3" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (31 samples, 3.44%)</title><rect x="636.6" y="643.0" width="40.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="639.6" y="654.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (31 samples, 3.44%)</title><rect x="636.6" y="627.0" width="40.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.6" y="638.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (27 samples, 2.99%)</title><rect x="636.6" y="611.0" width="35.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="639.6" y="622.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (24 samples, 2.66%)</title><rect x="636.6" y="595.0" width="31.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="639.6" y="606.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (24 samples, 2.66%)</title><rect x="636.6" y="579.0" width="31.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="639.6" y="590.0">on..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (23 samples, 2.55%)</title><rect x="636.6" y="563.0" width="30.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="639.6" y="574.0">Re..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.44%)</title><rect x="636.6" y="547.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.22%)</title><rect x="636.6" y="531.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.6" y="542.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.22%)</title><rect x="636.6" y="515.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="639.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.22%)</title><rect x="636.6" y="499.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="639.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.11%)</title><rect x="636.6" y="483.0" width="1.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="639.6" y="494.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.11%)</title><rect x="636.6" y="467.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="639.6" y="478.0"></text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.11%)</title><rect x="637.9" y="483.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="640.9" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.11%)</title><rect x="639.2" y="531.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.2" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.11%)</title><rect x="639.2" y="515.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="642.2" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.11%)</title><rect x="639.2" y="499.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.2" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.11%)</title><rect x="639.2" y="483.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="642.2" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.11%)</title><rect x="639.2" y="467.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="642.2" y="478.0"></text>
</g>
<g>
<title>send@plt (1 samples, 0.11%)</title><rect x="639.2" y="451.0" width="1.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="642.2" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.11%)</title><rect x="640.6" y="531.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.6" y="542.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.11%)</title><rect x="640.6" y="515.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.11%)</title><rect x="640.6" y="499.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="643.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.11%)</title><rect x="641.9" y="547.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="644.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.11%)</title><rect x="641.9" y="531.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.9" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.11%)</title><rect x="641.9" y="515.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="644.9" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.11%)</title><rect x="641.9" y="499.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="644.9" y="510.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.11%)</title><rect x="641.9" y="483.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (18 samples, 2.00%)</title><rect x="643.2" y="547.0" width="23.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="646.2" y="558.0">r..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (9 samples, 1.00%)</title><rect x="643.2" y="531.0" width="11.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="646.2" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (9 samples, 1.00%)</title><rect x="643.2" y="515.0" width="11.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="646.2" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (9 samples, 1.00%)</title><rect x="643.2" y="499.0" width="11.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="646.2" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (9 samples, 1.00%)</title><rect x="643.2" y="483.0" width="11.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="646.2" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (9 samples, 1.00%)</title><rect x="643.2" y="467.0" width="11.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="646.2" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (9 samples, 1.00%)</title><rect x="643.2" y="451.0" width="11.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="646.2" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (9 samples, 1.00%)</title><rect x="643.2" y="435.0" width="11.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.2" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (9 samples, 1.00%)</title><rect x="643.2" y="419.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="646.2" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (9 samples, 1.00%)</title><rect x="643.2" y="403.0" width="11.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.2" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (4 samples, 0.44%)</title><rect x="643.2" y="387.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="646.2" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (4 samples, 0.44%)</title><rect x="643.2" y="371.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="646.2" y="382.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.44%)</title><rect x="643.2" y="355.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.2" y="366.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.44%)</title><rect x="643.2" y="339.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.2" y="350.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (4 samples, 0.44%)</title><rect x="643.2" y="323.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.2" y="334.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (4 samples, 0.44%)</title><rect x="643.2" y="307.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="646.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.44%)</title><rect x="643.2" y="291.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.2" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.44%)</title><rect x="643.2" y="275.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.2" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (4 samples, 0.44%)</title><rect x="643.2" y="259.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.2" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (3 samples, 0.33%)</title><rect x="648.4" y="387.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.4" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (3 samples, 0.33%)</title><rect x="648.4" y="371.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="651.4" y="382.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (3 samples, 0.33%)</title><rect x="648.4" y="355.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="651.4" y="366.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (3 samples, 0.33%)</title><rect x="648.4" y="339.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="651.4" y="350.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (3 samples, 0.33%)</title><rect x="648.4" y="323.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="651.4" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (3 samples, 0.33%)</title><rect x="648.4" y="307.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="651.4" y="318.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (3 samples, 0.33%)</title><rect x="648.4" y="291.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="651.4" y="302.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (3 samples, 0.33%)</title><rect x="648.4" y="275.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.4" y="286.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (3 samples, 0.33%)</title><rect x="648.4" y="259.0" width="3.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="651.4" y="270.0"></text>
</g>
<g>
<title>jni_GetArrayLength (1 samples, 0.11%)</title><rect x="648.4" y="243.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="651.4" y="254.0"></text>
</g>
<g>
<title>writeBytes (2 samples, 0.22%)</title><rect x="649.7" y="243.0" width="2.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="652.7" y="254.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.11%)</title><rect x="649.7" y="227.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="652.7" y="238.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.11%)</title><rect x="651.0" y="227.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="654.0" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.22%)</title><rect x="652.3" y="387.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.3" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.22%)</title><rect x="652.3" y="371.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.3" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.22%)</title><rect x="652.3" y="355.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="655.3" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.11%)</title><rect x="652.3" y="339.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="655.3" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.11%)</title><rect x="652.3" y="323.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="655.3" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.11%)</title><rect x="652.3" y="307.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="655.3" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.11%)</title><rect x="652.3" y="291.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="655.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.11%)</title><rect x="653.6" y="339.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="656.6" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.11%)</title><rect x="653.6" y="323.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.6" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.11%)</title><rect x="653.6" y="307.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="656.6" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.11%)</title><rect x="653.6" y="291.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.6" y="302.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.11%)</title><rect x="653.6" y="275.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="656.6" y="286.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.11%)</title><rect x="653.6" y="259.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="656.6" y="270.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.11%)</title><rect x="653.6" y="243.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="656.6" y="254.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.11%)</title><rect x="653.6" y="227.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="656.6" y="238.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.11%)</title><rect x="653.6" y="211.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="656.6" y="222.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.11%)</title><rect x="653.6" y="195.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="656.6" y="206.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.11%)</title><rect x="653.6" y="179.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="656.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (9 samples, 1.00%)</title><rect x="654.9" y="531.0" width="11.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (9 samples, 1.00%)</title><rect x="654.9" y="515.0" width="11.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="657.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (9 samples, 1.00%)</title><rect x="654.9" y="499.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (9 samples, 1.00%)</title><rect x="654.9" y="483.0" width="11.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="657.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (9 samples, 1.00%)</title><rect x="654.9" y="467.0" width="11.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="657.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 0.89%)</title><rect x="656.3" y="451.0" width="10.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="659.3" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.89%)</title><rect x="656.3" y="435.0" width="10.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="659.3" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.22%)</title><rect x="664.1" y="419.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="667.1" y="430.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.22%)</title><rect x="664.1" y="403.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="667.1" y="414.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.11%)</title><rect x="665.4" y="387.0" width="1.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="668.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.11%)</title><rect x="666.7" y="563.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.11%)</title><rect x="666.7" y="547.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.7" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.11%)</title><rect x="666.7" y="531.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="669.7" y="542.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.11%)</title><rect x="666.7" y="515.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="669.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.11%)</title><rect x="666.7" y="499.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="669.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.22%)</title><rect x="668.0" y="595.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.0" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.11%)</title><rect x="669.3" y="579.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="672.3" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.11%)</title><rect x="670.6" y="595.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="673.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.11%)</title><rect x="670.6" y="579.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.11%)</title><rect x="670.6" y="563.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="673.6" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="670.6" y="547.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="673.6" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.44%)</title><rect x="672.0" y="611.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="675.0" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.44%)</title><rect x="672.0" y="595.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="675.0" y="606.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.22%)</title><rect x="672.0" y="579.0" width="2.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="675.0" y="590.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.11%)</title><rect x="672.0" y="563.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="675.0" y="574.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="673.3" y="563.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="676.3" y="574.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.11%)</title><rect x="674.6" y="579.0" width="1.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="677.6" y="590.0"></text>
</g>
<g>
<title>recv@plt (1 samples, 0.11%)</title><rect x="675.9" y="579.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="678.9" y="590.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.11%)</title><rect x="677.2" y="643.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="680.2" y="654.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=6991] (101 samples, 11.20%)</title><rect x="678.5" y="675.0" width="132.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="681.5" y="686.0">[NIO Selector #5..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (101 samples, 11.20%)</title><rect x="678.5" y="659.0" width="132.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.5" y="670.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (8 samples, 0.89%)</title><rect x="679.8" y="643.0" width="10.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="682.8" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (8 samples, 0.89%)</title><rect x="679.8" y="627.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="682.8" y="638.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.11%)</title><rect x="679.8" y="611.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="682.8" y="622.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 0.78%)</title><rect x="681.1" y="611.0" width="9.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="684.1" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (90 samples, 9.98%)</title><rect x="690.3" y="643.0" width="117.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="693.3" y="654.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (88 samples, 9.76%)</title><rect x="692.9" y="627.0" width="115.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.9" y="638.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (76 samples, 8.43%)</title><rect x="692.9" y="611.0" width="99.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.9" y="622.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (62 samples, 6.87%)</title><rect x="702.0" y="595.0" width="81.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="705.0" y="606.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (62 samples, 6.87%)</title><rect x="702.0" y="579.0" width="81.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="705.0" y="590.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (60 samples, 6.65%)</title><rect x="702.0" y="563.0" width="78.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="705.0" y="574.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 0.78%)</title><rect x="702.0" y="547.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="705.0" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 0.78%)</title><rect x="702.0" y="531.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.22%)</title><rect x="702.0" y="515.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.0" y="526.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.22%)</title><rect x="702.0" y="499.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.0" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.22%)</title><rect x="702.0" y="483.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.0" y="494.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.22%)</title><rect x="702.0" y="467.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.0" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="703.3" y="451.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="706.3" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.55%)</title><rect x="704.7" y="515.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="707.7" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.55%)</title><rect x="704.7" y="499.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.7" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.11%)</title><rect x="704.7" y="483.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="707.7" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.44%)</title><rect x="706.0" y="483.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.0" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.44%)</title><rect x="706.0" y="467.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.0" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.22%)</title><rect x="707.3" y="451.0" width="2.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="710.3" y="462.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.11%)</title><rect x="707.3" y="435.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="710.3" y="446.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.11%)</title><rect x="708.6" y="435.0" width="1.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="711.6" y="446.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.11%)</title><rect x="709.9" y="451.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="712.9" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.33%)</title><rect x="711.2" y="547.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="714.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.33%)</title><rect x="711.2" y="531.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="714.2" y="542.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.11%)</title><rect x="712.5" y="515.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="715.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.11%)</title><rect x="712.5" y="499.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="715.5" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.11%)</title><rect x="713.8" y="515.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="716.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.11%)</title><rect x="713.8" y="499.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="716.8" y="510.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.11%)</title><rect x="713.8" y="483.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (50 samples, 5.54%)</title><rect x="715.1" y="547.0" width="65.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="718.1" y="558.0">ru/mail..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (30 samples, 3.33%)</title><rect x="715.1" y="531.0" width="39.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="718.1" y="542.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (30 samples, 3.33%)</title><rect x="715.1" y="515.0" width="39.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="718.1" y="526.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (29 samples, 3.22%)</title><rect x="715.1" y="499.0" width="38.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="718.1" y="510.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (27 samples, 2.99%)</title><rect x="717.7" y="483.0" width="35.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="720.7" y="494.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (27 samples, 2.99%)</title><rect x="717.7" y="467.0" width="35.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="720.7" y="478.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (27 samples, 2.99%)</title><rect x="717.7" y="451.0" width="35.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="720.7" y="462.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (27 samples, 2.99%)</title><rect x="717.7" y="435.0" width="35.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="720.7" y="446.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (24 samples, 2.66%)</title><rect x="717.7" y="419.0" width="31.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="720.7" y="430.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (24 samples, 2.66%)</title><rect x="717.7" y="403.0" width="31.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="720.7" y="414.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (5 samples, 0.55%)</title><rect x="717.7" y="387.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.7" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.11%)</title><rect x="717.7" y="371.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="720.7" y="382.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.11%)</title><rect x="717.7" y="355.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="720.7" y="366.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.11%)</title><rect x="717.7" y="339.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.7" y="350.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.11%)</title><rect x="717.7" y="323.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.7" y="334.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.11%)</title><rect x="717.7" y="307.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.11%)</title><rect x="717.7" y="291.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="720.7" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.11%)</title><rect x="717.7" y="275.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.7" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.11%)</title><rect x="717.7" y="259.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.7" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (4 samples, 0.44%)</title><rect x="719.0" y="371.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="722.0" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (4 samples, 0.44%)</title><rect x="719.0" y="355.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.0" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (4 samples, 0.44%)</title><rect x="719.0" y="339.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="722.0" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (4 samples, 0.44%)</title><rect x="719.0" y="323.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.0" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.11%)</title><rect x="723.0" y="307.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="726.0" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (14 samples, 1.55%)</title><rect x="724.3" y="387.0" width="18.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="727.3" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (8 samples, 0.89%)</title><rect x="724.3" y="371.0" width="10.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="727.3" y="382.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (8 samples, 0.89%)</title><rect x="724.3" y="355.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="727.3" y="366.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (8 samples, 0.89%)</title><rect x="724.3" y="339.0" width="10.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="727.3" y="350.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (7 samples, 0.78%)</title><rect x="725.6" y="323.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="728.6" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (7 samples, 0.78%)</title><rect x="725.6" y="307.0" width="9.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="728.6" y="318.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (7 samples, 0.78%)</title><rect x="725.6" y="291.0" width="9.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="728.6" y="302.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (7 samples, 0.78%)</title><rect x="725.6" y="275.0" width="9.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="728.6" y="286.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (7 samples, 0.78%)</title><rect x="725.6" y="259.0" width="9.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="728.6" y="270.0"></text>
</g>
<g>
<title>writeBytes (7 samples, 0.78%)</title><rect x="725.6" y="243.0" width="9.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="728.6" y="254.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.11%)</title><rect x="725.6" y="227.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="728.6" y="238.0"></text>
</g>
<g>
<title>__libc_write (4 samples, 0.44%)</title><rect x="726.9" y="227.0" width="5.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="729.9" y="238.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.11%)</title><rect x="732.1" y="227.0" width="1.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="735.1" y="238.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.11%)</title><rect x="733.4" y="227.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="736.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.44%)</title><rect x="734.7" y="371.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="737.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.44%)</title><rect x="734.7" y="355.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.44%)</title><rect x="734.7" y="339.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="737.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.44%)</title><rect x="734.7" y="323.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="737.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.44%)</title><rect x="734.7" y="307.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="737.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.44%)</title><rect x="734.7" y="291.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="737.7" y="302.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.22%)</title><rect x="734.7" y="275.0" width="2.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="737.7" y="286.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.11%)</title><rect x="734.7" y="259.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="737.7" y="270.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.11%)</title><rect x="736.1" y="259.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="739.1" y="270.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.22%)</title><rect x="737.4" y="275.0" width="2.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="740.4" y="286.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.22%)</title><rect x="737.4" y="259.0" width="2.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="740.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.22%)</title><rect x="740.0" y="371.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.22%)</title><rect x="740.0" y="355.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="743.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.22%)</title><rect x="740.0" y="339.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.22%)</title><rect x="740.0" y="323.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.22%)</title><rect x="740.0" y="307.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="743.0" y="318.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.22%)</title><rect x="740.0" y="291.0" width="2.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="743.0" y="302.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.22%)</title><rect x="740.0" y="275.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="743.0" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (5 samples, 0.55%)</title><rect x="742.6" y="387.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.6" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (5 samples, 0.55%)</title><rect x="742.6" y="371.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="745.6" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (5 samples, 0.55%)</title><rect x="742.6" y="355.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.6" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.11%)</title><rect x="742.6" y="339.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="745.6" y="350.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.11%)</title><rect x="742.6" y="323.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="745.6" y="334.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.11%)</title><rect x="742.6" y="307.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.6" y="318.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.11%)</title><rect x="742.6" y="291.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="745.6" y="302.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (1 samples, 0.11%)</title><rect x="742.6" y="275.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.6" y="286.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (1 samples, 0.11%)</title><rect x="742.6" y="259.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="745.6" y="270.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.11%)</title><rect x="742.6" y="243.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.6" y="254.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.11%)</title><rect x="742.6" y="227.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.6" y="238.0"></text>
</g>
<g>
<title>java/text/DigitList.set (1 samples, 0.11%)</title><rect x="742.6" y="211.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="745.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.44%)</title><rect x="743.9" y="339.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.9" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.44%)</title><rect x="743.9" y="323.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="746.9" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (3 samples, 0.33%)</title><rect x="745.2" y="307.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="748.2" y="318.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="747.8" y="291.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="750.8" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (3 samples, 0.33%)</title><rect x="749.1" y="419.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="752.1" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 0.33%)</title><rect x="749.1" y="403.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.1" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (3 samples, 0.33%)</title><rect x="749.1" y="387.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="752.1" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.11%)</title><rect x="753.1" y="499.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="756.1" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.11%)</title><rect x="754.4" y="531.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.11%)</title><rect x="754.4" y="515.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="757.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="754.4" y="499.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="757.4" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="754.4" y="483.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="757.4" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="754.4" y="467.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.4" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.11%)</title><rect x="754.4" y="451.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="757.4" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.11%)</title><rect x="754.4" y="435.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (19 samples, 2.11%)</title><rect x="755.7" y="531.0" width="24.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="758.7" y="542.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (19 samples, 2.11%)</title><rect x="755.7" y="515.0" width="24.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="758.7" y="526.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.11%)</title><rect x="755.7" y="499.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="758.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.11%)</title><rect x="755.7" y="483.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="758.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.11%)</title><rect x="755.7" y="467.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="758.7" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.11%)</title><rect x="755.7" y="451.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="758.7" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.11%)</title><rect x="755.7" y="435.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="758.7" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.11%)</title><rect x="755.7" y="419.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="758.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (18 samples, 2.00%)</title><rect x="757.0" y="499.0" width="23.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="760.0" y="510.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (18 samples, 2.00%)</title><rect x="757.0" y="483.0" width="23.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="760.0" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (15 samples, 1.66%)</title><rect x="759.6" y="467.0" width="19.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="762.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.22%)</title><rect x="760.9" y="451.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="763.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.11%)</title><rect x="762.2" y="435.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="765.2" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.11%)</title><rect x="762.2" y="419.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="765.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.11%)</title><rect x="762.2" y="403.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="765.2" y="414.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.11%)</title><rect x="762.2" y="387.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="765.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (12 samples, 1.33%)</title><rect x="763.5" y="451.0" width="15.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="766.5" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 1.33%)</title><rect x="763.5" y="435.0" width="15.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="766.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.67%)</title><rect x="771.4" y="419.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="774.4" y="430.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.67%)</title><rect x="771.4" y="403.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="774.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.22%)</title><rect x="774.0" y="387.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.0" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.22%)</title><rect x="774.0" y="371.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="777.0" y="382.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.22%)</title><rect x="776.6" y="387.0" width="2.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="779.6" y="398.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.11%)</title><rect x="779.2" y="467.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="782.2" y="478.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.11%)</title><rect x="779.2" y="451.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="782.2" y="462.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.22%)</title><rect x="780.5" y="563.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="783.5" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.22%)</title><rect x="780.5" y="547.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.5" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.11%)</title><rect x="780.5" y="531.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.11%)</title><rect x="780.5" y="515.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="783.5" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.11%)</title><rect x="781.8" y="531.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="784.8" y="542.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.11%)</title><rect x="781.8" y="515.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="784.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.11%)</title><rect x="781.8" y="499.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="784.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.22%)</title><rect x="783.1" y="595.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="786.1" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.11%)</title><rect x="784.5" y="579.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.11%)</title><rect x="785.8" y="595.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="788.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.22%)</title><rect x="787.1" y="595.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="790.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.22%)</title><rect x="787.1" y="579.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="790.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.22%)</title><rect x="787.1" y="563.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.1" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.22%)</title><rect x="789.7" y="595.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="792.7" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.22%)</title><rect x="789.7" y="579.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="792.7" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 0.11%)</title><rect x="791.0" y="563.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="794.0" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (12 samples, 1.33%)</title><rect x="792.3" y="611.0" width="15.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="795.3" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (12 samples, 1.33%)</title><rect x="792.3" y="595.0" width="15.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="795.3" y="606.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.78%)</title><rect x="793.6" y="579.0" width="9.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="796.6" y="590.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.11%)</title><rect x="793.6" y="563.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="796.6" y="574.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="794.9" y="563.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="797.9" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.55%)</title><rect x="796.2" y="563.0" width="6.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="799.2" y="574.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.11%)</title><rect x="798.8" y="547.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="801.8" y="558.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.11%)</title><rect x="800.2" y="547.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="803.2" y="558.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.11%)</title><rect x="800.2" y="531.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="803.2" y="542.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.11%)</title><rect x="801.5" y="547.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="804.5" y="558.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.33%)</title><rect x="802.8" y="579.0" width="3.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="805.8" y="590.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.11%)</title><rect x="806.7" y="579.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="809.7" y="590.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.22%)</title><rect x="808.0" y="643.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="811.0" y="654.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=6992] (106 samples, 11.75%)</title><rect x="810.6" y="675.0" width="138.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="813.6" y="686.0">[NIO Selector #6 ..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.11%)</title><rect x="810.6" y="659.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="813.6" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.11%)</title><rect x="810.6" y="643.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="813.6" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.11%)</title><rect x="810.6" y="627.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="813.6" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.11%)</title><rect x="810.6" y="611.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="813.6" y="622.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (105 samples, 11.64%)</title><rect x="811.9" y="659.0" width="137.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="814.9" y="670.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.33%)</title><rect x="811.9" y="643.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="814.9" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.33%)</title><rect x="811.9" y="627.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="814.9" y="638.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.11%)</title><rect x="811.9" y="611.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="814.9" y="622.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.22%)</title><rect x="813.2" y="611.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="816.2" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (102 samples, 11.31%)</title><rect x="815.9" y="643.0" width="133.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="818.9" y="654.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (101 samples, 11.20%)</title><rect x="817.2" y="627.0" width="132.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="820.2" y="638.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (91 samples, 10.09%)</title><rect x="817.2" y="611.0" width="119.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="820.2" y="622.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (77 samples, 8.54%)</title><rect x="826.3" y="595.0" width="100.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="829.3" y="606.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (77 samples, 8.54%)</title><rect x="826.3" y="579.0" width="100.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.3" y="590.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (77 samples, 8.54%)</title><rect x="826.3" y="563.0" width="100.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="829.3" y="574.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 1.66%)</title><rect x="826.3" y="547.0" width="19.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="829.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.11%)</title><rect x="826.3" y="531.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="829.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.11%)</title><rect x="826.3" y="515.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.11%)</title><rect x="826.3" y="499.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="829.3" y="510.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.11%)</title><rect x="826.3" y="483.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="829.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (14 samples, 1.55%)</title><rect x="827.6" y="531.0" width="18.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="830.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.33%)</title><rect x="827.6" y="515.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="830.6" y="526.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.11%)</title><rect x="830.2" y="499.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="833.2" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.11%)</title><rect x="830.2" y="483.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="833.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.11%)</title><rect x="830.2" y="467.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="833.2" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 1.22%)</title><rect x="831.6" y="515.0" width="14.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="834.6" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 1.22%)</title><rect x="831.6" y="499.0" width="14.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="834.6" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (9 samples, 1.00%)</title><rect x="834.2" y="483.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="837.2" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (9 samples, 1.00%)</title><rect x="834.2" y="467.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="837.2" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.55%)</title><rect x="834.2" y="451.0" width="6.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="837.2" y="462.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.33%)</title><rect x="836.8" y="435.0" width="3.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="839.8" y="446.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.11%)</title><rect x="838.1" y="419.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="841.1" y="430.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.11%)</title><rect x="839.4" y="419.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="842.4" y="430.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.11%)</title><rect x="839.4" y="403.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="842.4" y="414.0"></text>
</g>
<g>
<title>__libc_send (4 samples, 0.44%)</title><rect x="840.7" y="451.0" width="5.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="843.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.11%)</title><rect x="845.9" y="547.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="848.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.11%)</title><rect x="845.9" y="531.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="848.9" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.11%)</title><rect x="845.9" y="515.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.9" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.11%)</title><rect x="845.9" y="499.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="848.9" y="510.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.11%)</title><rect x="845.9" y="483.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="848.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (61 samples, 6.76%)</title><rect x="847.3" y="547.0" width="79.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.3" y="558.0">ru/mail/p..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (40 samples, 4.43%)</title><rect x="847.3" y="531.0" width="52.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="850.3" y="542.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (39 samples, 4.32%)</title><rect x="847.3" y="515.0" width="51.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="850.3" y="526.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (39 samples, 4.32%)</title><rect x="847.3" y="499.0" width="51.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.3" y="510.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (37 samples, 4.10%)</title><rect x="847.3" y="483.0" width="48.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.3" y="494.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (37 samples, 4.10%)</title><rect x="847.3" y="467.0" width="48.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="850.3" y="478.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (37 samples, 4.10%)</title><rect x="847.3" y="451.0" width="48.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.3" y="462.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (37 samples, 4.10%)</title><rect x="847.3" y="435.0" width="48.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.3" y="446.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (35 samples, 3.88%)</title><rect x="847.3" y="419.0" width="45.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.3" y="430.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (35 samples, 3.88%)</title><rect x="847.3" y="403.0" width="45.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.3" y="414.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (6 samples, 0.67%)</title><rect x="847.3" y="387.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.3" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (4 samples, 0.44%)</title><rect x="847.3" y="371.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="850.3" y="382.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.44%)</title><rect x="847.3" y="355.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.3" y="366.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.44%)</title><rect x="847.3" y="339.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="850.3" y="350.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (4 samples, 0.44%)</title><rect x="847.3" y="323.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="850.3" y="334.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (4 samples, 0.44%)</title><rect x="847.3" y="307.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.44%)</title><rect x="847.3" y="291.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.3" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.44%)</title><rect x="847.3" y="275.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.3" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (4 samples, 0.44%)</title><rect x="847.3" y="259.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.3" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (2 samples, 0.22%)</title><rect x="852.5" y="371.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.5" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (2 samples, 0.22%)</title><rect x="852.5" y="355.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="855.5" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.11%)</title><rect x="853.8" y="339.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.8" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.11%)</title><rect x="853.8" y="323.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.8" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.11%)</title><rect x="853.8" y="307.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="856.8" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (17 samples, 1.88%)</title><rect x="855.1" y="387.0" width="22.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="858.1" y="398.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (12 samples, 1.33%)</title><rect x="855.1" y="371.0" width="15.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="858.1" y="382.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (12 samples, 1.33%)</title><rect x="855.1" y="355.0" width="15.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="858.1" y="366.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (12 samples, 1.33%)</title><rect x="855.1" y="339.0" width="15.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="858.1" y="350.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (11 samples, 1.22%)</title><rect x="856.4" y="323.0" width="14.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="859.4" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (11 samples, 1.22%)</title><rect x="856.4" y="307.0" width="14.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="859.4" y="318.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (11 samples, 1.22%)</title><rect x="856.4" y="291.0" width="14.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="859.4" y="302.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (11 samples, 1.22%)</title><rect x="856.4" y="275.0" width="14.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="859.4" y="286.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (9 samples, 1.00%)</title><rect x="859.0" y="259.0" width="11.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="862.0" y="270.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.11%)</title><rect x="859.0" y="243.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="862.0" y="254.0"></text>
</g>
<g>
<title>writeBytes (8 samples, 0.89%)</title><rect x="860.3" y="243.0" width="10.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="863.3" y="254.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.11%)</title><rect x="860.3" y="227.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="863.3" y="238.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.11%)</title><rect x="861.6" y="227.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="864.6" y="238.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.11%)</title><rect x="862.9" y="227.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="865.9" y="238.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.11%)</title><rect x="864.3" y="227.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="867.3" y="238.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.11%)</title><rect x="865.6" y="227.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="868.6" y="238.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.11%)</title><rect x="866.9" y="227.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="869.9" y="238.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.11%)</title><rect x="868.2" y="227.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="871.2" y="238.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.11%)</title><rect x="868.2" y="211.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="871.2" y="222.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.11%)</title><rect x="869.5" y="227.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="872.5" y="238.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.11%)</title><rect x="869.5" y="211.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="872.5" y="222.0"></text>
</g>
<g>
<title>java_lang_ref_Reference::is_referent_field(oopDesc*, long) (1 samples, 0.11%)</title><rect x="869.5" y="195.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="872.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.44%)</title><rect x="870.8" y="371.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="873.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.44%)</title><rect x="870.8" y="355.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.44%)</title><rect x="870.8" y="339.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="873.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.44%)</title><rect x="870.8" y="323.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="873.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.44%)</title><rect x="870.8" y="307.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="873.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.33%)</title><rect x="872.1" y="291.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="875.1" y="302.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.33%)</title><rect x="872.1" y="275.0" width="3.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="875.1" y="286.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.11%)</title><rect x="873.4" y="259.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="876.4" y="270.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.11%)</title><rect x="874.7" y="259.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="877.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.11%)</title><rect x="876.0" y="371.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="879.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.11%)</title><rect x="876.0" y="355.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="879.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.11%)</title><rect x="876.0" y="339.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="879.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.11%)</title><rect x="876.0" y="323.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="879.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.11%)</title><rect x="876.0" y="307.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="879.0" y="318.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.11%)</title><rect x="876.0" y="291.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="879.0" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (12 samples, 1.33%)</title><rect x="877.3" y="387.0" width="15.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="880.3" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (10 samples, 1.11%)</title><rect x="877.3" y="371.0" width="13.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="880.3" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (10 samples, 1.11%)</title><rect x="877.3" y="355.0" width="13.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="880.3" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.11%)</title><rect x="877.3" y="339.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="880.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.89%)</title><rect x="878.6" y="339.0" width="10.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="881.6" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.89%)</title><rect x="878.6" y="323.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="881.6" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (2 samples, 0.22%)</title><rect x="880.0" y="307.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="883.0" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.22%)</title><rect x="882.6" y="307.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="885.6" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.22%)</title><rect x="885.2" y="307.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="888.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.11%)</title><rect x="887.8" y="307.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="890.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.11%)</title><rect x="889.1" y="339.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="892.1" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.11%)</title><rect x="889.1" y="323.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="892.1" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.11%)</title><rect x="889.1" y="307.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="892.1" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (2 samples, 0.22%)</title><rect x="890.4" y="371.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="893.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.22%)</title><rect x="890.4" y="355.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="893.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.22%)</title><rect x="890.4" y="339.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="893.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.22%)</title><rect x="890.4" y="323.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="893.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.11%)</title><rect x="891.7" y="307.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="894.7" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.22%)</title><rect x="893.0" y="419.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="896.0" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.22%)</title><rect x="893.0" y="403.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="896.0" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (2 samples, 0.22%)</title><rect x="893.0" y="387.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="896.0" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (1 samples, 0.11%)</title><rect x="895.7" y="483.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.7" y="494.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.11%)</title><rect x="897.0" y="483.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="900.0" y="494.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.11%)</title><rect x="897.0" y="467.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="900.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.11%)</title><rect x="898.3" y="515.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="901.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (21 samples, 2.33%)</title><rect x="899.6" y="531.0" width="27.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="902.6" y="542.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (21 samples, 2.33%)</title><rect x="899.6" y="515.0" width="27.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="902.6" y="526.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.22%)</title><rect x="899.6" y="499.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="902.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.22%)</title><rect x="899.6" y="483.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.11%)</title><rect x="900.9" y="467.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="903.9" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.11%)</title><rect x="900.9" y="451.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="903.9" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.11%)</title><rect x="900.9" y="435.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="903.9" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.11%)</title><rect x="900.9" y="419.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="903.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (19 samples, 2.11%)</title><rect x="902.2" y="499.0" width="24.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.2" y="510.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.11%)</title><rect x="902.2" y="483.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="905.2" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.11%)</title><rect x="902.2" y="467.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (18 samples, 2.00%)</title><rect x="903.5" y="483.0" width="23.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.5" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (18 samples, 2.00%)</title><rect x="903.5" y="467.0" width="23.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="906.5" y="478.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.11%)</title><rect x="904.8" y="451.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="907.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.11%)</title><rect x="906.1" y="451.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="909.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.11%)</title><rect x="906.1" y="435.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="909.1" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.11%)</title><rect x="906.1" y="419.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="909.1" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.11%)</title><rect x="906.1" y="403.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="909.1" y="414.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.11%)</title><rect x="906.1" y="387.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="909.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (15 samples, 1.66%)</title><rect x="907.4" y="451.0" width="19.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="910.4" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (15 samples, 1.66%)</title><rect x="907.4" y="435.0" width="19.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="910.4" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.89%)</title><rect x="916.6" y="419.0" width="10.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="919.6" y="430.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.89%)</title><rect x="916.6" y="403.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="919.6" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.11%)</title><rect x="924.4" y="387.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="927.4" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.11%)</title><rect x="924.4" y="371.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="927.4" y="382.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.11%)</title><rect x="925.7" y="387.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="928.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.33%)</title><rect x="927.1" y="595.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="930.1" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.11%)</title><rect x="927.1" y="579.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="930.1" y="590.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.11%)</title><rect x="927.1" y="563.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="930.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.11%)</title><rect x="928.4" y="579.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="931.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.11%)</title><rect x="928.4" y="563.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="931.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.11%)</title><rect x="928.4" y="547.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="931.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.11%)</title><rect x="928.4" y="531.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.4" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.11%)</title><rect x="929.7" y="579.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="932.7" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.11%)</title><rect x="929.7" y="563.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="932.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.11%)</title><rect x="931.0" y="595.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="934.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.22%)</title><rect x="932.3" y="595.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="935.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.22%)</title><rect x="932.3" y="579.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="935.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.22%)</title><rect x="932.3" y="563.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="935.3" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="933.6" y="547.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="936.6" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.11%)</title><rect x="934.9" y="595.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="937.9" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.11%)</title><rect x="934.9" y="579.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="937.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 0.11%)</title><rect x="934.9" y="563.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="937.9" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.11%)</title><rect x="936.2" y="611.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="939.2" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (9 samples, 1.00%)</title><rect x="937.5" y="611.0" width="11.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="940.5" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 1.00%)</title><rect x="937.5" y="595.0" width="11.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="940.5" y="606.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.44%)</title><rect x="938.8" y="579.0" width="5.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="941.8" y="590.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.22%)</title><rect x="938.8" y="563.0" width="2.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="941.8" y="574.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.11%)</title><rect x="938.8" y="547.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="941.8" y="558.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.11%)</title><rect x="940.1" y="547.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="943.1" y="558.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.22%)</title><rect x="941.4" y="563.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="944.4" y="574.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.11%)</title><rect x="944.1" y="579.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="947.1" y="590.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.11%)</title><rect x="945.4" y="579.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="948.4" y="590.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.22%)</title><rect x="946.7" y="579.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="949.7" y="590.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=6993] (91 samples, 10.09%)</title><rect x="949.3" y="675.0" width="119.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="952.3" y="686.0">[NIO Selector #..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (91 samples, 10.09%)</title><rect x="949.3" y="659.0" width="119.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="952.3" y="670.0">one/nio/server/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (8 samples, 0.89%)</title><rect x="949.3" y="643.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="952.3" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (8 samples, 0.89%)</title><rect x="949.3" y="627.0" width="10.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="952.3" y="638.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.11%)</title><rect x="950.6" y="611.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="953.6" y="622.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 0.67%)</title><rect x="951.9" y="611.0" width="7.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="954.9" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (83 samples, 9.20%)</title><rect x="959.8" y="643.0" width="108.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="962.8" y="654.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (83 samples, 9.20%)</title><rect x="959.8" y="627.0" width="108.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="962.8" y="638.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (73 samples, 8.09%)</title><rect x="959.8" y="611.0" width="95.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="962.8" y="622.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (62 samples, 6.87%)</title><rect x="963.7" y="595.0" width="81.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="966.7" y="606.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (62 samples, 6.87%)</title><rect x="963.7" y="579.0" width="81.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="966.7" y="590.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (62 samples, 6.87%)</title><rect x="963.7" y="563.0" width="81.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="966.7" y="574.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 1.00%)</title><rect x="963.7" y="547.0" width="11.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="966.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9 samples, 1.00%)</title><rect x="963.7" y="531.0" width="11.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="966.7" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.44%)</title><rect x="963.7" y="515.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="966.7" y="526.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.22%)</title><rect x="966.3" y="499.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="969.3" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.22%)</title><rect x="966.3" y="483.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="969.3" y="494.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.22%)</title><rect x="966.3" y="467.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="969.3" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="967.6" y="451.0" width="1.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="970.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.55%)</title><rect x="968.9" y="515.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="971.9" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.55%)</title><rect x="968.9" y="499.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="971.9" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.11%)</title><rect x="968.9" y="483.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="971.9" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.44%)</title><rect x="970.2" y="483.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="973.2" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.44%)</title><rect x="970.2" y="467.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="973.2" y="478.0"></text>
</g>
<g>
<title>__libc_send (3 samples, 0.33%)</title><rect x="970.2" y="451.0" width="3.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="973.2" y="462.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.11%)</title><rect x="974.1" y="451.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="977.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.22%)</title><rect x="975.5" y="547.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="978.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (51 samples, 5.65%)</title><rect x="978.1" y="547.0" width="66.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="981.1" y="558.0">ru/mail..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (34 samples, 3.77%)</title><rect x="978.1" y="531.0" width="44.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="981.1" y="542.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (34 samples, 3.77%)</title><rect x="978.1" y="515.0" width="44.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="981.1" y="526.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (34 samples, 3.77%)</title><rect x="978.1" y="499.0" width="44.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="981.1" y="510.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (34 samples, 3.77%)</title><rect x="978.1" y="483.0" width="44.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="981.1" y="494.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (34 samples, 3.77%)</title><rect x="978.1" y="467.0" width="44.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="981.1" y="478.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (34 samples, 3.77%)</title><rect x="978.1" y="451.0" width="44.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="981.1" y="462.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (34 samples, 3.77%)</title><rect x="978.1" y="435.0" width="44.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="981.1" y="446.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (31 samples, 3.44%)</title><rect x="978.1" y="419.0" width="40.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="981.1" y="430.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (31 samples, 3.44%)</title><rect x="978.1" y="403.0" width="40.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="981.1" y="414.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (4 samples, 0.44%)</title><rect x="978.1" y="387.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="981.1" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.11%)</title><rect x="978.1" y="371.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="981.1" y="382.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.11%)</title><rect x="978.1" y="355.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="981.1" y="366.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.11%)</title><rect x="978.1" y="339.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="981.1" y="350.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.11%)</title><rect x="978.1" y="323.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="981.1" y="334.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.11%)</title><rect x="978.1" y="307.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="981.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.11%)</title><rect x="978.1" y="291.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="981.1" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.11%)</title><rect x="978.1" y="275.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="981.1" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.11%)</title><rect x="978.1" y="259.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="981.1" y="270.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="978.1" y="243.0" width="1.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="981.1" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (3 samples, 0.33%)</title><rect x="979.4" y="371.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="982.4" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (3 samples, 0.33%)</title><rect x="979.4" y="355.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="982.4" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.11%)</title><rect x="982.0" y="339.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="985.0" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.11%)</title><rect x="982.0" y="323.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="985.0" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (18 samples, 2.00%)</title><rect x="983.3" y="387.0" width="23.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="986.3" y="398.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.flush (1 samples, 0.11%)</title><rect x="983.3" y="371.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="986.3" y="382.0"></text>
</g>
<g>
<title>java/io/PrintStream.flush (1 samples, 0.11%)</title><rect x="983.3" y="355.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="986.3" y="366.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.11%)</title><rect x="983.3" y="339.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="986.3" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (12 samples, 1.33%)</title><rect x="984.6" y="371.0" width="15.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="987.6" y="382.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (12 samples, 1.33%)</title><rect x="984.6" y="355.0" width="15.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="987.6" y="366.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (12 samples, 1.33%)</title><rect x="984.6" y="339.0" width="15.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="987.6" y="350.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (11 samples, 1.22%)</title><rect x="985.9" y="323.0" width="14.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="988.9" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (11 samples, 1.22%)</title><rect x="985.9" y="307.0" width="14.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="988.9" y="318.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (11 samples, 1.22%)</title><rect x="985.9" y="291.0" width="14.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="988.9" y="302.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (11 samples, 1.22%)</title><rect x="985.9" y="275.0" width="14.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="988.9" y="286.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (11 samples, 1.22%)</title><rect x="985.9" y="259.0" width="14.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="988.9" y="270.0"></text>
</g>
<g>
<title>writeBytes (11 samples, 1.22%)</title><rect x="985.9" y="243.0" width="14.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="988.9" y="254.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.11%)</title><rect x="987.2" y="227.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="990.2" y="238.0"></text>
</g>
<g>
<title>__libc_write (3 samples, 0.33%)</title><rect x="988.5" y="227.0" width="4.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="991.5" y="238.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.11%)</title><rect x="992.5" y="227.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="995.5" y="238.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.11%)</title><rect x="993.8" y="227.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="996.8" y="238.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.11%)</title><rect x="993.8" y="211.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="996.8" y="222.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.22%)</title><rect x="995.1" y="227.0" width="2.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="998.1" y="238.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.22%)</title><rect x="995.1" y="211.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="998.1" y="222.0"></text>
</g>
<g>
<title>jni_GetObjectField (2 samples, 0.22%)</title><rect x="997.7" y="227.0" width="2.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1000.7" y="238.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.11%)</title><rect x="997.7" y="211.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1000.7" y="222.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.11%)</title><rect x="999.0" y="211.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1002.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.11%)</title><rect x="1000.3" y="371.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1003.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.11%)</title><rect x="1000.3" y="355.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1003.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.11%)</title><rect x="1000.3" y="339.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1003.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.11%)</title><rect x="1000.3" y="323.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1003.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.44%)</title><rect x="1001.6" y="371.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1004.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.44%)</title><rect x="1001.6" y="355.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1004.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.44%)</title><rect x="1001.6" y="339.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1004.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.44%)</title><rect x="1001.6" y="323.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1004.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.44%)</title><rect x="1001.6" y="307.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1004.6" y="318.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.22%)</title><rect x="1001.6" y="291.0" width="2.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1004.6" y="302.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.11%)</title><rect x="1001.6" y="275.0" width="1.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1004.6" y="286.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.11%)</title><rect x="1002.9" y="275.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1005.9" y="286.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.22%)</title><rect x="1004.2" y="291.0" width="2.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1007.2" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (9 samples, 1.00%)</title><rect x="1006.9" y="387.0" width="11.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1009.9" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (9 samples, 1.00%)</title><rect x="1006.9" y="371.0" width="11.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1009.9" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (9 samples, 1.00%)</title><rect x="1006.9" y="355.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1009.9" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (3 samples, 0.33%)</title><rect x="1006.9" y="339.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1009.9" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.11%)</title><rect x="1006.9" y="323.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1009.9" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.11%)</title><rect x="1006.9" y="307.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1009.9" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.11%)</title><rect x="1006.9" y="291.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1009.9" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.11%)</title><rect x="1006.9" y="275.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1009.9" y="286.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (2 samples, 0.22%)</title><rect x="1008.2" y="323.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1011.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="1008.2" y="307.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1011.2" y="318.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.11%)</title><rect x="1009.5" y="307.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1012.5" y="318.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.11%)</title><rect x="1009.5" y="291.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1012.5" y="302.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (1 samples, 0.11%)</title><rect x="1009.5" y="275.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1012.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.11%)</title><rect x="1010.8" y="339.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1013.8" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.11%)</title><rect x="1010.8" y="323.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1013.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.55%)</title><rect x="1012.1" y="339.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1015.1" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.55%)</title><rect x="1012.1" y="323.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1015.1" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.22%)</title><rect x="1012.1" y="307.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1015.1" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.22%)</title><rect x="1012.1" y="291.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1015.1" y="302.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="1013.4" y="275.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1016.4" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.22%)</title><rect x="1014.7" y="307.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1017.7" y="318.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.22%)</title><rect x="1014.7" y="291.0" width="2.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1017.7" y="302.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.11%)</title><rect x="1017.3" y="307.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1020.3" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (3 samples, 0.33%)</title><rect x="1018.6" y="419.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1021.6" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 0.33%)</title><rect x="1018.6" y="403.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1021.6" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (3 samples, 0.33%)</title><rect x="1018.6" y="387.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1021.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (17 samples, 1.88%)</title><rect x="1022.5" y="531.0" width="22.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1025.5" y="542.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.11%)</title><rect x="1022.5" y="515.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1025.5" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.11%)</title><rect x="1022.5" y="499.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1025.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (16 samples, 1.77%)</title><rect x="1023.9" y="515.0" width="20.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1026.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (16 samples, 1.77%)</title><rect x="1023.9" y="499.0" width="20.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1026.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (16 samples, 1.77%)</title><rect x="1023.9" y="483.0" width="20.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1026.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (15 samples, 1.66%)</title><rect x="1025.2" y="467.0" width="19.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1028.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (14 samples, 1.55%)</title><rect x="1026.5" y="451.0" width="18.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1029.5" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 1.55%)</title><rect x="1026.5" y="435.0" width="18.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1029.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.67%)</title><rect x="1036.9" y="419.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1039.9" y="430.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.67%)</title><rect x="1036.9" y="403.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1039.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.11%)</title><rect x="1042.2" y="387.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1045.2" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.11%)</title><rect x="1042.2" y="371.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1045.2" y="382.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.11%)</title><rect x="1043.5" y="387.0" width="1.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1046.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.33%)</title><rect x="1044.8" y="595.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1047.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.33%)</title><rect x="1044.8" y="579.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1047.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.11%)</title><rect x="1048.7" y="595.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1051.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.11%)</title><rect x="1050.0" y="595.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1053.0" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.33%)</title><rect x="1051.3" y="595.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1054.3" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.33%)</title><rect x="1051.3" y="579.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1054.3" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (10 samples, 1.11%)</title><rect x="1055.3" y="611.0" width="13.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1058.3" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (10 samples, 1.11%)</title><rect x="1055.3" y="595.0" width="13.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1058.3" y="606.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.55%)</title><rect x="1056.6" y="579.0" width="6.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1059.6" y="590.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.11%)</title><rect x="1056.6" y="563.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1059.6" y="574.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="1057.9" y="563.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1060.9" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.33%)</title><rect x="1059.2" y="563.0" width="3.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1062.2" y="574.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.22%)</title><rect x="1060.5" y="547.0" width="2.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1063.5" y="558.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.11%)</title><rect x="1063.1" y="579.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1066.1" y="590.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.22%)</title><rect x="1064.4" y="579.0" width="2.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1067.4" y="590.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.11%)</title><rect x="1067.0" y="579.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1070.0" y="590.0"></text>
</g>
<g>
<title>[RMI TCP Connection(1)-127.0.0.1 tid=7198] (3 samples, 0.33%)</title><rect x="1068.3" y="675.0" width="4.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1071.3" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.33%)</title><rect x="1068.3" y="659.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1071.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.33%)</title><rect x="1068.3" y="643.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1071.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.33%)</title><rect x="1068.3" y="627.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1071.3" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (3 samples, 0.33%)</title><rect x="1068.3" y="611.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1071.3" y="622.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.33%)</title><rect x="1068.3" y="595.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1071.3" y="606.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$93/1386574298.run (3 samples, 0.33%)</title><rect x="1068.3" y="579.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1071.3" y="590.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (3 samples, 0.33%)</title><rect x="1068.3" y="563.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1071.3" y="574.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (3 samples, 0.33%)</title><rect x="1068.3" y="547.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1071.3" y="558.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (3 samples, 0.33%)</title><rect x="1068.3" y="531.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1071.3" y="542.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (2 samples, 0.22%)</title><rect x="1068.3" y="515.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1071.3" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.22%)</title><rect x="1068.3" y="499.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1071.3" y="510.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (2 samples, 0.22%)</title><rect x="1068.3" y="483.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1071.3" y="494.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (2 samples, 0.22%)</title><rect x="1068.3" y="467.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1071.3" y="478.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (2 samples, 0.22%)</title><rect x="1068.3" y="451.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1071.3" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.11%)</title><rect x="1068.3" y="435.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1071.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.11%)</title><rect x="1068.3" y="419.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1071.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (1 samples, 0.11%)</title><rect x="1068.3" y="403.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1071.3" y="414.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (1 samples, 0.11%)</title><rect x="1068.3" y="387.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1071.3" y="398.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 0.11%)</title><rect x="1068.3" y="371.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1071.3" y="382.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (1 samples, 0.11%)</title><rect x="1068.3" y="355.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1071.3" y="366.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (1 samples, 0.11%)</title><rect x="1068.3" y="339.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1071.3" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (1 samples, 0.11%)</title><rect x="1068.3" y="323.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1071.3" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (1 samples, 0.11%)</title><rect x="1068.3" y="307.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1071.3" y="318.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (1 samples, 0.11%)</title><rect x="1068.3" y="291.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1071.3" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (1 samples, 0.11%)</title><rect x="1068.3" y="275.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1071.3" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (1 samples, 0.11%)</title><rect x="1068.3" y="259.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1071.3" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (1 samples, 0.11%)</title><rect x="1068.3" y="243.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1071.3" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.11%)</title><rect x="1068.3" y="227.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1071.3" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.11%)</title><rect x="1068.3" y="211.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1071.3" y="222.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.11%)</title><rect x="1068.3" y="195.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1071.3" y="206.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.11%)</title><rect x="1068.3" y="179.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1071.3" y="190.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.11%)</title><rect x="1068.3" y="163.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1071.3" y="174.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (1 samples, 0.11%)</title><rect x="1068.3" y="147.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1071.3" y="158.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.11%)</title><rect x="1068.3" y="131.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1071.3" y="142.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (1 samples, 0.11%)</title><rect x="1068.3" y="115.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1071.3" y="126.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.11%)</title><rect x="1068.3" y="99.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1071.3" y="110.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.11%)</title><rect x="1068.3" y="83.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1071.3" y="94.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (1 samples, 0.11%)</title><rect x="1069.6" y="435.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1072.6" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.11%)</title><rect x="1069.6" y="419.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1072.6" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.11%)</title><rect x="1069.6" y="403.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1072.6" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.11%)</title><rect x="1069.6" y="387.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1072.6" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (1 samples, 0.11%)</title><rect x="1069.6" y="371.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1072.6" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.11%)</title><rect x="1069.6" y="355.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1072.6" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.11%)</title><rect x="1069.6" y="339.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1072.6" y="350.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.resolveClass (1 samples, 0.11%)</title><rect x="1069.6" y="323.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1072.6" y="334.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader.loadClass (1 samples, 0.11%)</title><rect x="1069.6" y="307.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1072.6" y="318.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader$2.loadClass (1 samples, 0.11%)</title><rect x="1069.6" y="291.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1072.6" y="302.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClass (1 samples, 0.11%)</title><rect x="1069.6" y="275.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1072.6" y="286.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClass (1 samples, 0.11%)</title><rect x="1069.6" y="259.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1072.6" y="270.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 0.11%)</title><rect x="1069.6" y="243.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1072.6" y="254.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 0.11%)</title><rect x="1069.6" y="227.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1072.6" y="238.0"></text>
</g>
<g>
<title>Java_java_lang_Class_forName0 (1 samples, 0.11%)</title><rect x="1069.6" y="211.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1072.6" y="222.0"></text>
</g>
<g>
<title>JVM_FindClassFromCaller (1 samples, 0.11%)</title><rect x="1069.6" y="195.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1072.6" y="206.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (1 samples, 0.11%)</title><rect x="1069.6" y="179.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1072.6" y="190.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.11%)</title><rect x="1069.6" y="163.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1072.6" y="174.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPConnection.releaseOutputStream (1 samples, 0.11%)</title><rect x="1071.0" y="515.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1074.0" y="526.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.11%)</title><rect x="1071.0" y="499.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1074.0" y="510.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.11%)</title><rect x="1071.0" y="483.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1074.0" y="494.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.write (1 samples, 0.11%)</title><rect x="1071.0" y="467.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1074.0" y="478.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite (1 samples, 0.11%)</title><rect x="1071.0" y="451.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1074.0" y="462.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite0 (1 samples, 0.11%)</title><rect x="1071.0" y="435.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1074.0" y="446.0"></text>
</g>
<g>
<title>[VM Thread tid=6974] (1 samples, 0.11%)</title><rect x="1072.3" y="675.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1075.3" y="686.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.11%)</title><rect x="1072.3" y="659.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1075.3" y="670.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.11%)</title><rect x="1072.3" y="643.0" width="1.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1075.3" y="654.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.11%)</title><rect x="1072.3" y="627.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1075.3" y="638.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.11%)</title><rect x="1072.3" y="611.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1075.3" y="622.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.11%)</title><rect x="1072.3" y="595.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1075.3" y="606.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.11%)</title><rect x="1072.3" y="579.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1075.3" y="590.0"></text>
</g>
<g>
<title>[pool-1-thread-4 tid=7182] (89 samples, 9.87%)</title><rect x="1073.6" y="675.0" width="116.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1076.6" y="686.0">[pool-1-thread..</text>
</g>
<g>
<title>java/lang/Thread.run (89 samples, 9.87%)</title><rect x="1073.6" y="659.0" width="116.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.6" y="670.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (89 samples, 9.87%)</title><rect x="1073.6" y="643.0" width="116.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1076.6" y="654.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (89 samples, 9.87%)</title><rect x="1073.6" y="627.0" width="116.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1076.6" y="638.0">java/util/conc..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$58/152065618.run (89 samples, 9.87%)</title><rect x="1073.6" y="611.0" width="116.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1076.6" y="622.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$flush$5 (89 samples, 9.87%)</title><rect x="1073.6" y="595.0" width="116.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.6" y="606.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.serialize (89 samples, 9.87%)</title><rect x="1073.6" y="579.0" width="116.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1076.6" y="590.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.write (89 samples, 9.87%)</title><rect x="1073.6" y="563.0" width="116.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1076.6" y="574.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.11%)</title><rect x="1076.2" y="547.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1079.2" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (1 samples, 0.11%)</title><rect x="1076.2" y="531.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1079.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$59/2145435247.apply (1 samples, 0.11%)</title><rect x="1076.2" y="515.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1079.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (1 samples, 0.11%)</title><rect x="1076.2" y="499.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1079.2" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.11%)</title><rect x="1077.5" y="547.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1080.5" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.11%)</title><rect x="1077.5" y="531.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1080.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.11%)</title><rect x="1077.5" y="515.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1080.5" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.11%)</title><rect x="1077.5" y="499.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1080.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (85 samples, 9.42%)</title><rect x="1078.8" y="547.0" width="111.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1081.8" y="558.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.33%)</title><rect x="1081.4" y="531.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1084.4" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.33%)</title><rect x="1081.4" y="515.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1084.4" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.33%)</title><rect x="1081.4" y="499.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1084.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.11%)</title><rect x="1084.0" y="483.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1087.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (74 samples, 8.20%)</title><rect x="1085.3" y="531.0" width="96.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1088.3" y="542.0">sun/nio/ch/..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.11%)</title><rect x="1093.2" y="515.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1096.2" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.11%)</title><rect x="1093.2" y="499.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1096.2" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (1 samples, 0.11%)</title><rect x="1093.2" y="483.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1096.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1 samples, 0.11%)</title><rect x="1094.5" y="515.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1097.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (63 samples, 6.98%)</title><rect x="1095.8" y="515.0" width="82.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1098.8" y="526.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (63 samples, 6.98%)</title><rect x="1095.8" y="499.0" width="82.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1098.8" y="510.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (62 samples, 6.87%)</title><rect x="1097.1" y="483.0" width="81.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1100.1" y="494.0">sun/nio/c..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (1 samples, 0.11%)</title><rect x="1099.7" y="467.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1102.7" y="478.0"></text>
</g>
<g>
<title>__libc_write (57 samples, 6.32%)</title><rect x="1101.0" y="467.0" width="74.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1104.0" y="478.0">__libc_w..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.11%)</title><rect x="1175.6" y="467.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1178.6" y="478.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.11%)</title><rect x="1176.9" y="467.0" width="1.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1179.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.11%)</title><rect x="1178.2" y="515.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1181.2" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.11%)</title><rect x="1178.2" y="499.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1181.2" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.11%)</title><rect x="1178.2" y="483.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1181.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.11%)</title><rect x="1178.2" y="467.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1181.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.22%)</title><rect x="1179.5" y="515.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1182.5" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.22%)</title><rect x="1179.5" y="499.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1182.5" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.22%)</title><rect x="1179.5" y="483.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1182.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.22%)</title><rect x="1179.5" y="467.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1182.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.67%)</title><rect x="1182.2" y="531.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1185.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.11%)</title><rect x="1188.7" y="515.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.7" y="526.0"></text>
</g>
</g>
</svg>
