<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="357"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="357"> </text>
<g id="frames">
<g>
<title>all (81 samples, 100.00%)</title><rect x="10.0" y="323.0" width="1180.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.0" y="334.0">all</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (79 samples, 97.53%)</title><rect x="10.0" y="307.0" width="1150.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="318.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (31 samples, 38.27%)</title><rect x="24.6" y="291.0" width="451.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="27.6" y="302.0">one/nio/net/NativeSelector.select</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 1.23%)</title><rect x="39.1" y="275.0" width="14.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="42.1" y="286.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.access$100 (1 samples, 1.23%)</title><rect x="39.1" y="259.0" width="14.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.1" y="270.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (29 samples, 35.80%)</title><rect x="53.7" y="275.0" width="422.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.7" y="286.0">one/nio/net/NativeSelector.epollWait</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 4.94%)</title><rect x="112.0" y="259.0" width="58.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="115.0" y="270.0">Java_o..</text>
</g>
<g>
<title>__clock_gettime (2 samples, 2.47%)</title><rect x="170.2" y="259.0" width="29.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="173.2" y="270.0">__..</text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 1.23%)</title><rect x="199.4" y="259.0" width="14.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="202.4" y="270.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 1.23%)</title><rect x="214.0" y="259.0" width="14.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="217.0" y="270.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 1.23%)</title><rect x="228.5" y="259.0" width="14.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="231.5" y="270.0"></text>
</g>
<g>
<title>epoll_wait (16 samples, 19.75%)</title><rect x="243.1" y="259.0" width="233.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="246.1" y="270.0">epoll_wait</text>
</g>
<g>
<title>one/nio/net/Session.process (47 samples, 58.02%)</title><rect x="476.2" y="291.0" width="684.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="479.2" y="302.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (46 samples, 56.79%)</title><rect x="490.7" y="275.0" width="670.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="493.7" y="286.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (37 samples, 45.68%)</title><rect x="490.7" y="259.0" width="539.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.7" y="270.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (30 samples, 37.04%)</title><rect x="490.7" y="243.0" width="437.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="493.7" y="254.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (30 samples, 37.04%)</title><rect x="490.7" y="227.0" width="437.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="493.7" y="238.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (29 samples, 35.80%)</title><rect x="490.7" y="211.0" width="422.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="493.7" y="222.0">RequestHandler1_response.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 6.17%)</title><rect x="490.7" y="195.0" width="72.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.7" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 6.17%)</title><rect x="490.7" y="179.0" width="72.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="493.7" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 2.47%)</title><rect x="490.7" y="163.0" width="29.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.7" y="174.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 2.47%)</title><rect x="490.7" y="147.0" width="29.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.7" y="158.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 2.47%)</title><rect x="490.7" y="131.0" width="29.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="493.7" y="142.0">on..</text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 2.47%)</title><rect x="490.7" y="115.0" width="29.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.7" y="126.0">ja..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 1.23%)</title><rect x="505.3" y="99.0" width="14.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="508.3" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 3.70%)</title><rect x="519.9" y="163.0" width="43.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="522.9" y="174.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 3.70%)</title><rect x="519.9" y="147.0" width="43.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="522.9" y="158.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 3.70%)</title><rect x="519.9" y="131.0" width="43.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.9" y="142.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 3.70%)</title><rect x="519.9" y="115.0" width="43.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.9" y="126.0">one/..</text>
</g>
<g>
<title>__libc_send (2 samples, 2.47%)</title><rect x="519.9" y="99.0" width="29.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="522.9" y="110.0">__..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 1.23%)</title><rect x="549.0" y="99.0" width="14.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="552.0" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (4 samples, 4.94%)</title><rect x="563.6" y="195.0" width="58.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="566.6" y="206.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 4.94%)</title><rect x="563.6" y="179.0" width="58.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="566.6" y="190.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 2.47%)</title><rect x="563.6" y="163.0" width="29.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="566.6" y="174.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 2.47%)</title><rect x="563.6" y="147.0" width="29.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="566.6" y="158.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 2.47%)</title><rect x="563.6" y="131.0" width="29.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="566.6" y="142.0">ja..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 1.23%)</title><rect x="578.1" y="115.0" width="14.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="581.1" y="126.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 2.47%)</title><rect x="592.7" y="163.0" width="29.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="595.7" y="174.0">on..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (20 samples, 24.69%)</title><rect x="621.9" y="195.0" width="291.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="624.9" y="206.0">ru/mail/polis/service/mrsandman5/Servic..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 1.23%)</title><rect x="621.9" y="179.0" width="14.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.9" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 1.23%)</title><rect x="621.9" y="163.0" width="14.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.9" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 1.23%)</title><rect x="621.9" y="147.0" width="14.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.delete (17 samples, 20.99%)</title><rect x="636.4" y="179.0" width="247.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.4" y="190.0">ru/mail/polis/service/mrsandman5/..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 1.23%)</title><rect x="636.4" y="163.0" width="14.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.4" y="174.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 1.23%)</title><rect x="636.4" y="147.0" width="14.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="639.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.remove (16 samples, 19.75%)</title><rect x="651.0" y="163.0" width="233.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="654.0" y="174.0">ru/mail/polis/dao/impl/DAOImpl...</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.remove (16 samples, 19.75%)</title><rect x="651.0" y="147.0" width="233.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="654.0" y="158.0">ru/mail/polis/dao/impl/tables/M..</text>
</g>
<g>
<title>[unknown] (1 samples, 1.23%)</title><rect x="651.0" y="131.0" width="14.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="654.0" y="142.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 1.23%)</title><rect x="651.0" y="115.0" width="14.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="654.0" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (9 samples, 11.11%)</title><rect x="665.6" y="131.0" width="131.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.6" y="142.0">java/util/TreeMa..</text>
</g>
<g>
<title>java/util/TreeMap.getEntry (9 samples, 11.11%)</title><rect x="665.6" y="115.0" width="131.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="668.6" y="126.0">java/util/TreeMa..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 9.88%)</title><rect x="665.6" y="99.0" width="116.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="668.6" y="110.0">java/nio/ByteB..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 4.94%)</title><rect x="723.8" y="83.0" width="58.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="726.8" y="94.0">java/n..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 4.94%)</title><rect x="723.8" y="67.0" width="58.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="726.8" y="78.0">java/n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 1.23%)</title><rect x="767.5" y="51.0" width="14.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="770.5" y="62.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 1.23%)</title><rect x="767.5" y="35.0" width="14.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="770.5" y="46.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 1.23%)</title><rect x="782.1" y="99.0" width="14.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="785.1" y="110.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 1.23%)</title><rect x="782.1" y="83.0" width="14.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="785.1" y="94.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 1.23%)</title><rect x="782.1" y="67.0" width="14.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="785.1" y="78.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 1.23%)</title><rect x="782.1" y="51.0" width="14.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="785.1" y="62.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 3.70%)</title><rect x="796.7" y="131.0" width="43.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="799.7" y="142.0">java..</text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 3.70%)</title><rect x="796.7" y="115.0" width="43.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="799.7" y="126.0">java..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 3.70%)</title><rect x="796.7" y="99.0" width="43.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="799.7" y="110.0">java..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 3.70%)</title><rect x="796.7" y="83.0" width="43.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="799.7" y="94.0">java..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 3.70%)</title><rect x="796.7" y="67.0" width="43.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="799.7" y="78.0">java..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 1.23%)</title><rect x="825.8" y="51.0" width="14.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="828.8" y="62.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 3.70%)</title><rect x="840.4" y="131.0" width="43.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="843.4" y="142.0">java..</text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 1.23%)</title><rect x="840.4" y="115.0" width="14.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="843.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 1.23%)</title><rect x="840.4" y="99.0" width="14.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="843.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 1.23%)</title><rect x="840.4" y="83.0" width="14.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="843.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 2.47%)</title><rect x="854.9" y="115.0" width="29.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="857.9" y="126.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 2.47%)</title><rect x="854.9" y="99.0" width="29.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="857.9" y="110.0">ja..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 2.47%)</title><rect x="854.9" y="83.0" width="29.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="857.9" y="94.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 1.23%)</title><rect x="869.5" y="67.0" width="14.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="872.5" y="78.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 1.23%)</title><rect x="869.5" y="51.0" width="14.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="872.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (1 samples, 1.23%)</title><rect x="884.1" y="179.0" width="14.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="887.1" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 1.23%)</title><rect x="884.1" y="163.0" width="14.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="887.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (1 samples, 1.23%)</title><rect x="898.6" y="179.0" width="14.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="901.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 1.23%)</title><rect x="898.6" y="163.0" width="14.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 1.23%)</title><rect x="913.2" y="211.0" width="14.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="916.2" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 1.23%)</title><rect x="913.2" y="195.0" width="14.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="916.2" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 1.23%)</title><rect x="913.2" y="179.0" width="14.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="916.2" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 1.23%)</title><rect x="913.2" y="163.0" width="14.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.2" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 6.17%)</title><rect x="927.8" y="243.0" width="72.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="930.8" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 6.17%)</title><rect x="927.8" y="227.0" width="72.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="930.8" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 6.17%)</title><rect x="927.8" y="211.0" width="72.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="930.8" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 1.23%)</title><rect x="1000.6" y="243.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1003.6" y="254.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 1.23%)</title><rect x="1000.6" y="227.0" width="14.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1003.6" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 1.23%)</title><rect x="1015.2" y="243.0" width="14.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1018.2" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 1.23%)</title><rect x="1015.2" y="227.0" width="14.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1018.2" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (9 samples, 11.11%)</title><rect x="1029.8" y="259.0" width="131.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1032.8" y="270.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 11.11%)</title><rect x="1029.8" y="243.0" width="131.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1032.8" y="254.0">one/nio/net/Nati..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 4.94%)</title><rect x="1044.3" y="227.0" width="58.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1047.3" y="238.0">Java_o..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 1.23%)</title><rect x="1044.3" y="211.0" width="14.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1047.3" y="222.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 3.70%)</title><rect x="1058.9" y="211.0" width="43.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1061.9" y="222.0">jni_..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 1.23%)</title><rect x="1073.5" y="195.0" width="14.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1076.5" y="206.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 1.23%)</title><rect x="1088.0" y="195.0" width="14.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1091.0" y="206.0"></text>
</g>
<g>
<title>__recv (3 samples, 3.70%)</title><rect x="1102.6" y="227.0" width="43.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1105.6" y="238.0">__recv</text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 1.23%)</title><rect x="1146.3" y="227.0" width="14.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1149.3" y="238.0"></text>
</g>
<g>
<title>start_thread (2 samples, 2.47%)</title><rect x="1160.9" y="307.0" width="29.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1163.9" y="318.0">st..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 2.47%)</title><rect x="1160.9" y="291.0" width="29.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1163.9" y="302.0">th..</text>
</g>
<g>
<title>Thread::call_run() (2 samples, 2.47%)</title><rect x="1160.9" y="275.0" width="29.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.9" y="286.0">Th..</text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 2.47%)</title><rect x="1160.9" y="259.0" width="29.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1163.9" y="270.0">Co..</text>
</g>
<g>
<title>G1ConcurrentRefineThread::run_service() (2 samples, 2.47%)</title><rect x="1160.9" y="243.0" width="29.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1163.9" y="254.0">G1..</text>
</g>
<g>
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (2 samples, 2.47%)</title><rect x="1160.9" y="227.0" width="29.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1163.9" y="238.0">Di..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (2 samples, 2.47%)</title><rect x="1160.9" y="211.0" width="29.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1163.9" y="222.0">Di..</text>
</g>
<g>
<title>G1RefineCardConcurrentlyClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 2.47%)</title><rect x="1160.9" y="195.0" width="29.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1163.9" y="206.0">G1..</text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (2 samples, 2.47%)</title><rect x="1160.9" y="179.0" width="29.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1163.9" y="190.0">G1..</text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 1.23%)</title><rect x="1175.4" y="163.0" width="14.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.4" y="174.0"></text>
</g>
</g>
</svg>
