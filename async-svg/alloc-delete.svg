<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="693"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="693"> </text>
<g id="frames">
<g>
<title>all (115 samples, 100.00%)</title><rect x="10.0" y="659.0" width="1180.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="670.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 2.61%)</title><rect x="10.0" y="643.0" width="30.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="654.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 2.61%)</title><rect x="10.0" y="627.0" width="30.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="638.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 2.61%)</title><rect x="10.0" y="611.0" width="30.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="622.0">ja..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (3 samples, 2.61%)</title><rect x="10.0" y="595.0" width="30.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="606.0">su..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 2.61%)</title><rect x="10.0" y="579.0" width="30.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="590.0">ja..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$91/1780139009.run (3 samples, 2.61%)</title><rect x="10.0" y="563.0" width="30.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="574.0">su..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (3 samples, 2.61%)</title><rect x="10.0" y="547.0" width="30.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="558.0">su..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (3 samples, 2.61%)</title><rect x="10.0" y="531.0" width="30.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="542.0">su..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (3 samples, 2.61%)</title><rect x="10.0" y="515.0" width="30.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="526.0">su..</text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (3 samples, 2.61%)</title><rect x="10.0" y="499.0" width="30.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="510.0">su..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 2.61%)</title><rect x="10.0" y="483.0" width="30.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="494.0">ja..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (3 samples, 2.61%)</title><rect x="10.0" y="467.0" width="30.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="478.0">su..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (3 samples, 2.61%)</title><rect x="10.0" y="451.0" width="30.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="462.0">su..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (3 samples, 2.61%)</title><rect x="10.0" y="435.0" width="30.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="446.0">su..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 1.74%)</title><rect x="10.0" y="419.0" width="20.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 1.74%)</title><rect x="10.0" y="403.0" width="20.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (2 samples, 1.74%)</title><rect x="10.0" y="387.0" width="20.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (2 samples, 1.74%)</title><rect x="10.0" y="371.0" width="20.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (2 samples, 1.74%)</title><rect x="10.0" y="355.0" width="20.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (2 samples, 1.74%)</title><rect x="10.0" y="339.0" width="20.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (2 samples, 1.74%)</title><rect x="10.0" y="323.0" width="20.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (2 samples, 1.74%)</title><rect x="10.0" y="307.0" width="20.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (2 samples, 1.74%)</title><rect x="10.0" y="291.0" width="20.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (2 samples, 1.74%)</title><rect x="10.0" y="275.0" width="20.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (2 samples, 1.74%)</title><rect x="10.0" y="259.0" width="20.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (2 samples, 1.74%)</title><rect x="10.0" y="243.0" width="20.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (2 samples, 1.74%)</title><rect x="10.0" y="227.0" width="20.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (2 samples, 1.74%)</title><rect x="10.0" y="211.0" width="20.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (2 samples, 1.74%)</title><rect x="10.0" y="195.0" width="20.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (2 samples, 1.74%)</title><rect x="10.0" y="179.0" width="20.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="190.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (2 samples, 1.74%)</title><rect x="10.0" y="163.0" width="20.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="174.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (2 samples, 1.74%)</title><rect x="10.0" y="147.0" width="20.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="158.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (2 samples, 1.74%)</title><rect x="10.0" y="131.0" width="20.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (2 samples, 1.74%)</title><rect x="10.0" y="115.0" width="20.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="126.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (2 samples, 1.74%)</title><rect x="10.0" y="99.0" width="20.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="110.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.87%)</title><rect x="10.0" y="83.0" width="10.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="94.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (1 samples, 0.87%)</title><rect x="10.0" y="67.0" width="10.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="78.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.87%)</title><rect x="10.0" y="51.0" width="10.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="62.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (1 samples, 0.87%)</title><rect x="10.0" y="35.0" width="10.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="13.0" y="46.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.87%)</title><rect x="20.3" y="83.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.3" y="94.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (1 samples, 0.87%)</title><rect x="20.3" y="67.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.3" y="78.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.87%)</title><rect x="20.3" y="51.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.3" y="62.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.87%)</title><rect x="20.3" y="35.0" width="10.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="23.3" y="46.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (1 samples, 0.87%)</title><rect x="30.5" y="419.0" width="10.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="33.5" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.87%)</title><rect x="30.5" y="403.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="33.5" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.87%)</title><rect x="30.5" y="387.0" width="10.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.5" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.87%)</title><rect x="30.5" y="371.0" width="10.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="33.5" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (1 samples, 0.87%)</title><rect x="30.5" y="355.0" width="10.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.5" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (1 samples, 0.87%)</title><rect x="30.5" y="339.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.5" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (1 samples, 0.87%)</title><rect x="30.5" y="323.0" width="10.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.5" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (1 samples, 0.87%)</title><rect x="30.5" y="307.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="33.5" y="318.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.87%)</title><rect x="30.5" y="291.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.5" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap (1 samples, 0.87%)</title><rect x="30.5" y="275.0" width="10.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="33.5" y="286.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (112 samples, 97.39%)</title><rect x="40.8" y="643.0" width="1149.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.8" y="654.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.87%)</title><rect x="40.8" y="627.0" width="10.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="43.8" y="638.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1 samples, 0.87%)</title><rect x="40.8" y="611.0" width="10.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="43.8" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (111 samples, 96.52%)</title><rect x="51.0" y="627.0" width="1139.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.0" y="638.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (111 samples, 96.52%)</title><rect x="51.0" y="611.0" width="1139.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.0" y="622.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (111 samples, 96.52%)</title><rect x="51.0" y="595.0" width="1139.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.0" y="606.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (92 samples, 80.00%)</title><rect x="51.0" y="579.0" width="944.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.0" y="590.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (92 samples, 80.00%)</title><rect x="51.0" y="563.0" width="944.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="54.0" y="574.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (91 samples, 79.13%)</title><rect x="51.0" y="547.0" width="933.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.0" y="558.0">RequestHandler1_response.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 5.22%)</title><rect x="51.0" y="531.0" width="61.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.0" y="542.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 5.22%)</title><rect x="51.0" y="515.0" width="61.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.0" y="526.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 4.35%)</title><rect x="51.0" y="499.0" width="51.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.0" y="510.0">one/n..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5 samples, 4.35%)</title><rect x="51.0" y="483.0" width="51.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="54.0" y="494.0">one/n..</text>
</g>
<g>
<title>byte[] (5 samples, 4.35%)</title><rect x="51.0" y="467.0" width="51.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="54.0" y="478.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.87%)</title><rect x="102.3" y="499.0" width="10.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.3" y="510.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1 samples, 0.87%)</title><rect x="102.3" y="483.0" width="10.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="105.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (6 samples, 5.22%)</title><rect x="112.6" y="531.0" width="61.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.6" y="542.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 5.22%)</title><rect x="112.6" y="515.0" width="61.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.6" y="526.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 5.22%)</title><rect x="112.6" y="499.0" width="61.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.6" y="510.0">java/l..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 5.22%)</title><rect x="112.6" y="483.0" width="61.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="115.6" y="494.0">java/l..</text>
</g>
<g>
<title>java.lang.String (3 samples, 2.61%)</title><rect x="112.6" y="467.0" width="30.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="115.6" y="478.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 2.61%)</title><rect x="143.4" y="467.0" width="30.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.4" y="478.0">ja..</text>
</g>
<g>
<title>byte[] (3 samples, 2.61%)</title><rect x="143.4" y="451.0" width="30.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="146.4" y="462.0">by..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (79 samples, 68.70%)</title><rect x="174.2" y="531.0" width="810.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.2" y="542.0">ru/mail/polis/service/mrsandman5/ServiceImpl.response</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (63 samples, 54.78%)</title><rect x="174.2" y="515.0" width="646.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.2" y="526.0">ch/qos/logback/classic/Logger.debug</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (63 samples, 54.78%)</title><rect x="174.2" y="499.0" width="646.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="177.2" y="510.0">ch/qos/logback/classic/Logger.filterAndLog_1</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (61 samples, 53.04%)</title><rect x="174.2" y="483.0" width="625.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="177.2" y="494.0">ch/qos/logback/classic/Logger.buildLoggingEventAndAppend</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (3 samples, 2.61%)</title><rect x="174.2" y="467.0" width="30.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="177.2" y="478.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (58 samples, 50.43%)</title><rect x="205.0" y="467.0" width="595.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.0" y="478.0">ch/qos/logback/classic/Logger.callAppenders</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (58 samples, 50.43%)</title><rect x="205.0" y="451.0" width="595.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.0" y="462.0">ch/qos/logback/classic/Logger.appendLoopOnAppenders</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (58 samples, 50.43%)</title><rect x="205.0" y="435.0" width="595.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.0" y="446.0">ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (58 samples, 50.43%)</title><rect x="205.0" y="419.0" width="595.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.0" y="430.0">ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (58 samples, 50.43%)</title><rect x="205.0" y="403.0" width="595.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="208.0" y="414.0">ch/qos/logback/core/OutputStreamAppender.append</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (58 samples, 50.43%)</title><rect x="205.0" y="387.0" width="595.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.0" y="398.0">ch/qos/logback/core/OutputStreamAppender.subAppend</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (20 samples, 17.39%)</title><rect x="205.0" y="371.0" width="205.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.0" y="382.0">ch/qos/logback/classic/spi/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (20 samples, 17.39%)</title><rect x="205.0" y="355.0" width="205.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="208.0" y="366.0">ch/qos/logback/classic/spi/..</text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (20 samples, 17.39%)</title><rect x="205.0" y="339.0" width="205.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.0" y="350.0">org/slf4j/helpers/MessageFo..</text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (20 samples, 17.39%)</title><rect x="205.0" y="323.0" width="205.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.0" y="334.0">org/slf4j/helpers/MessageFo..</text>
</g>
<g>
<title>java.lang.StringBuilder (4 samples, 3.48%)</title><rect x="205.0" y="307.0" width="41.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="208.0" y="318.0">jav..</text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (9 samples, 7.83%)</title><rect x="246.0" y="307.0" width="92.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="249.0" y="318.0">java/lang/S..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (9 samples, 7.83%)</title><rect x="246.0" y="291.0" width="92.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="249.0" y="302.0">java/lang/A..</text>
</g>
<g>
<title>byte[] (9 samples, 7.83%)</title><rect x="246.0" y="275.0" width="92.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="249.0" y="286.0">byte[]</text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5 samples, 4.35%)</title><rect x="338.3" y="307.0" width="51.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="341.3" y="318.0">java/..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 4.35%)</title><rect x="338.3" y="291.0" width="51.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.3" y="302.0">java/..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 4.35%)</title><rect x="338.3" y="275.0" width="51.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="341.3" y="286.0">java/..</text>
</g>
<g>
<title>byte[] (5 samples, 4.35%)</title><rect x="338.3" y="259.0" width="51.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="341.3" y="270.0">byte[]</text>
</g>
<g>
<title>org.slf4j.helpers.FormattingTuple (2 samples, 1.74%)</title><rect x="389.7" y="307.0" width="20.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="392.7" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (38 samples, 33.04%)</title><rect x="410.2" y="371.0" width="389.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="413.2" y="382.0">ch/qos/logback/core/encoder/LayoutWrappingEncoder.enc..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (32 samples, 27.83%)</title><rect x="410.2" y="355.0" width="328.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.2" y="366.0">ch/qos/logback/classic/layout/TTLLLayout.doL..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (32 samples, 27.83%)</title><rect x="410.2" y="339.0" width="328.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="413.2" y="350.0">ch/qos/logback/classic/layout/TTLLLayout.doL..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (3 samples, 2.61%)</title><rect x="410.2" y="323.0" width="30.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="413.2" y="334.0">ch..</text>
</g>
<g>
<title>java.util.Date (1 samples, 0.87%)</title><rect x="410.2" y="307.0" width="10.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="413.2" y="318.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (2 samples, 1.74%)</title><rect x="420.4" y="307.0" width="20.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="423.4" y="318.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (1 samples, 0.87%)</title><rect x="420.4" y="291.0" width="10.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="423.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (1 samples, 0.87%)</title><rect x="430.7" y="291.0" width="10.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.7" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.87%)</title><rect x="430.7" y="275.0" width="10.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="433.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.87%)</title><rect x="430.7" y="259.0" width="10.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="433.7" y="270.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.87%)</title><rect x="430.7" y="243.0" width="10.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="433.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 1.74%)</title><rect x="441.0" y="323.0" width="20.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="444.0" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 1.74%)</title><rect x="441.0" y="307.0" width="20.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="444.0" y="318.0"></text>
</g>
<g>
<title>byte[] (2 samples, 1.74%)</title><rect x="441.0" y="291.0" width="20.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="444.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (21 samples, 18.26%)</title><rect x="461.5" y="323.0" width="215.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="464.5" y="334.0">java/lang/StringBuilder.append</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (21 samples, 18.26%)</title><rect x="461.5" y="307.0" width="215.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="464.5" y="318.0">java/lang/AbstractStringBuil..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (21 samples, 18.26%)</title><rect x="461.5" y="291.0" width="215.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="464.5" y="302.0">java/lang/AbstractStringBuil..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (21 samples, 18.26%)</title><rect x="461.5" y="275.0" width="215.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="464.5" y="286.0">java/util/Arrays.copyOf</text>
</g>
<g>
<title>byte[] (21 samples, 18.26%)</title><rect x="461.5" y="259.0" width="215.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="464.5" y="270.0">byte[]</text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 5.22%)</title><rect x="677.0" y="323.0" width="61.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.0" y="334.0">java/l..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 5.22%)</title><rect x="677.0" y="307.0" width="61.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.0" y="318.0">java/l..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 5.22%)</title><rect x="677.0" y="291.0" width="61.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="680.0" y="302.0">java/u..</text>
</g>
<g>
<title>byte[] (6 samples, 5.22%)</title><rect x="677.0" y="275.0" width="61.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="680.0" y="286.0">byte[]</text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (6 samples, 5.22%)</title><rect x="738.5" y="355.0" width="61.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="741.5" y="366.0">ch/qos..</text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 5.22%)</title><rect x="738.5" y="339.0" width="61.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="741.5" y="350.0">java/l..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 5.22%)</title><rect x="738.5" y="323.0" width="61.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="741.5" y="334.0">java/l..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 5.22%)</title><rect x="738.5" y="307.0" width="61.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="741.5" y="318.0">java/l..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 5.22%)</title><rect x="738.5" y="291.0" width="61.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="741.5" y="302.0">java/u..</text>
</g>
<g>
<title>byte[] (6 samples, 5.22%)</title><rect x="738.5" y="275.0" width="61.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="741.5" y="286.0">byte[]</text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 1.74%)</title><rect x="800.1" y="483.0" width="20.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="803.1" y="494.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 2.61%)</title><rect x="820.6" y="515.0" width="30.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.6" y="526.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 2.61%)</title><rect x="820.6" y="499.0" width="30.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="823.6" y="510.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 2.61%)</title><rect x="820.6" y="483.0" width="30.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="823.6" y="494.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 2.61%)</title><rect x="820.6" y="467.0" width="30.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="823.6" y="478.0">ja..</text>
</g>
<g>
<title>byte[] (3 samples, 2.61%)</title><rect x="820.6" y="451.0" width="30.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="823.6" y="462.0">by..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.87%)</title><rect x="851.4" y="515.0" width="10.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="854.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.87%)</title><rect x="851.4" y="499.0" width="10.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="854.4" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.87%)</title><rect x="851.4" y="483.0" width="10.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="854.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.delete (12 samples, 10.43%)</title><rect x="861.7" y="515.0" width="123.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="864.7" y="526.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 3.48%)</title><rect x="861.7" y="499.0" width="41.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="864.7" y="510.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 4.35%)</title><rect x="902.7" y="499.0" width="51.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.7" y="510.0">one/n..</text>
</g>
<g>
<title>byte[] (1 samples, 0.87%)</title><rect x="902.7" y="483.0" width="10.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="905.7" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 2.61%)</title><rect x="913.0" y="483.0" width="30.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="916.0" y="494.0">ja..</text>
</g>
<g>
<title>java.lang.String (1 samples, 0.87%)</title><rect x="943.7" y="483.0" width="10.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="946.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.remove (3 samples, 2.61%)</title><rect x="954.0" y="499.0" width="30.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="957.0" y="510.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.remove (3 samples, 2.61%)</title><rect x="954.0" y="483.0" width="30.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="957.0" y="494.0">ru..</text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 2.61%)</title><rect x="954.0" y="467.0" width="30.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="957.0" y="478.0">ja..</text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 2.61%)</title><rect x="954.0" y="451.0" width="30.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="957.0" y="462.0">ja..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.87%)</title><rect x="984.8" y="547.0" width="10.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="987.8" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.87%)</title><rect x="984.8" y="531.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="987.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.87%)</title><rect x="984.8" y="515.0" width="10.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="987.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.87%)</title><rect x="984.8" y="499.0" width="10.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="987.8" y="510.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.87%)</title><rect x="984.8" y="483.0" width="10.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="987.8" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (17 samples, 14.78%)</title><rect x="995.0" y="579.0" width="174.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="998.0" y="590.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one.nio.http.Request (3 samples, 2.61%)</title><rect x="995.0" y="563.0" width="30.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="998.0" y="574.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 2.61%)</title><rect x="1025.8" y="563.0" width="30.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1028.8" y="574.0">on..</text>
</g>
<g>
<title>java.lang.String[] (3 samples, 2.61%)</title><rect x="1025.8" y="547.0" width="30.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1028.8" y="558.0">ja..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 9.57%)</title><rect x="1056.6" y="563.0" width="112.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1059.6" y="574.0">one/nio/util/U..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 9.57%)</title><rect x="1056.6" y="547.0" width="112.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1059.6" y="558.0">one/nio/util/U..</text>
</g>
<g>
<title>char[] (9 samples, 7.83%)</title><rect x="1056.6" y="531.0" width="92.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1059.6" y="542.0">char[]</text>
</g>
<g>
<title>java.lang.String (1 samples, 0.87%)</title><rect x="1149.0" y="531.0" width="10.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1152.0" y="542.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.87%)</title><rect x="1159.2" y="531.0" width="10.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1162.2" y="542.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.87%)</title><rect x="1159.2" y="515.0" width="10.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1162.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.87%)</title><rect x="1159.2" y="499.0" width="10.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1162.2" y="510.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.87%)</title><rect x="1159.2" y="483.0" width="10.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1162.2" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 1.74%)</title><rect x="1169.5" y="579.0" width="20.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1172.5" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 1.74%)</title><rect x="1169.5" y="563.0" width="20.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1172.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.87%)</title><rect x="1169.5" y="547.0" width="10.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1172.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.87%)</title><rect x="1179.7" y="547.0" width="10.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1182.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.87%)</title><rect x="1179.7" y="531.0" width="10.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1182.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.87%)</title><rect x="1179.7" y="515.0" width="10.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1182.7" y="526.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.87%)</title><rect x="1179.7" y="499.0" width="10.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1182.7" y="510.0"></text>
</g>
</g>
</svg>
