<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="533"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="533"> </text>
<g id="frames">
<g>
<title>all (68 samples, 100.00%)</title><rect x="10.0" y="499.0" width="1180.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="510.0">all</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (67 samples, 98.53%)</title><rect x="10.0" y="483.0" width="1162.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="494.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 13.24%)</title><rect x="10.0" y="467.0" width="156.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="478.0">one/nio/net/NativeSe..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (8 samples, 11.76%)</title><rect x="27.4" y="451.0" width="138.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="30.4" y="462.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 1.47%)</title><rect x="27.4" y="435.0" width="17.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="30.4" y="446.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 1.47%)</title><rect x="44.7" y="435.0" width="17.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="47.7" y="446.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 8.82%)</title><rect x="62.1" y="435.0" width="104.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="65.1" y="446.0">epoll_wait</text>
</g>
<g>
<title>one/nio/net/Session.process (58 samples, 85.29%)</title><rect x="166.2" y="467.0" width="1006.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="169.2" y="478.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (58 samples, 85.29%)</title><rect x="166.2" y="451.0" width="1006.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="169.2" y="462.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (49 samples, 72.06%)</title><rect x="183.5" y="435.0" width="850.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="186.5" y="446.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (45 samples, 66.18%)</title><rect x="183.5" y="419.0" width="780.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="186.5" y="430.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (45 samples, 66.18%)</title><rect x="183.5" y="403.0" width="780.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.5" y="414.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (44 samples, 64.71%)</title><rect x="183.5" y="387.0" width="763.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.5" y="398.0">RequestHandler1_response.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 5.88%)</title><rect x="183.5" y="371.0" width="69.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="186.5" y="382.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 5.88%)</title><rect x="183.5" y="355.0" width="69.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="186.5" y="366.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 1.47%)</title><rect x="183.5" y="339.0" width="17.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="186.5" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 4.41%)</title><rect x="200.9" y="339.0" width="52.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="203.9" y="350.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 4.41%)</title><rect x="200.9" y="323.0" width="52.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="203.9" y="334.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 4.41%)</title><rect x="200.9" y="307.0" width="52.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="203.9" y="318.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 4.41%)</title><rect x="200.9" y="291.0" width="52.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="203.9" y="302.0">one/n..</text>
</g>
<g>
<title>__libc_send (3 samples, 4.41%)</title><rect x="200.9" y="275.0" width="52.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="203.9" y="286.0">__lib..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (40 samples, 58.82%)</title><rect x="252.9" y="371.0" width="694.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="255.9" y="382.0">ru/mail/polis/service/mrsandman5/ServiceImpl.response</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (27 samples, 39.71%)</title><rect x="252.9" y="355.0" width="468.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="255.9" y="366.0">ch/qos/logback/classic/Logger.debug</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (27 samples, 39.71%)</title><rect x="252.9" y="339.0" width="468.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="255.9" y="350.0">ch/qos/logback/classic/Logger.filterAndLog_1</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (27 samples, 39.71%)</title><rect x="252.9" y="323.0" width="468.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="255.9" y="334.0">ch/qos/logback/classic/Logger.buildLoggingEventAndAppend</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (25 samples, 36.76%)</title><rect x="252.9" y="307.0" width="433.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="255.9" y="318.0">ch/qos/logback/classic/Logger.callAppenders</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (25 samples, 36.76%)</title><rect x="252.9" y="291.0" width="433.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="255.9" y="302.0">ch/qos/logback/classic/Logger.appendLoopOnAppenders</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (25 samples, 36.76%)</title><rect x="252.9" y="275.0" width="433.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="255.9" y="286.0">ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOn..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (24 samples, 35.29%)</title><rect x="252.9" y="259.0" width="416.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="255.9" y="270.0">ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (17 samples, 25.00%)</title><rect x="252.9" y="243.0" width="295.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="255.9" y="254.0">ch/qos/logback/core/OutputStreamAppender..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (17 samples, 25.00%)</title><rect x="252.9" y="227.0" width="295.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="255.9" y="238.0">ch/qos/logback/core/OutputStreamAppender..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (3 samples, 4.41%)</title><rect x="252.9" y="211.0" width="52.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="255.9" y="222.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 1.47%)</title><rect x="252.9" y="195.0" width="17.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="255.9" y="206.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 1.47%)</title><rect x="252.9" y="179.0" width="17.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.9" y="190.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 1.47%)</title><rect x="252.9" y="163.0" width="17.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="255.9" y="174.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 1.47%)</title><rect x="252.9" y="147.0" width="17.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="255.9" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 1.47%)</title><rect x="252.9" y="131.0" width="17.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="255.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 1.47%)</title><rect x="252.9" y="115.0" width="17.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="255.9" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 1.47%)</title><rect x="252.9" y="99.0" width="17.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="255.9" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 1.47%)</title><rect x="252.9" y="83.0" width="17.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="255.9" y="94.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (2 samples, 2.94%)</title><rect x="270.3" y="195.0" width="34.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="273.3" y="206.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (2 samples, 2.94%)</title><rect x="270.3" y="179.0" width="34.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="273.3" y="190.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/pattern/Converter.write (1 samples, 1.47%)</title><rect x="270.3" y="163.0" width="17.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="273.3" y="174.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 1.47%)</title><rect x="287.6" y="163.0" width="17.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="290.6" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (5 samples, 7.35%)</title><rect x="305.0" y="211.0" width="86.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.0" y="222.0">ch/qos/log..</text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (5 samples, 7.35%)</title><rect x="305.0" y="195.0" width="86.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.0" y="206.0">ch/qos/log..</text>
</g>
<g>
<title>java/io/FilterOutputStream.write (5 samples, 7.35%)</title><rect x="305.0" y="179.0" width="86.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="308.0" y="190.0">java/io/Fi..</text>
</g>
<g>
<title>java/io/PrintStream.write (5 samples, 7.35%)</title><rect x="305.0" y="163.0" width="86.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.0" y="174.0">java/io/Pr..</text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (5 samples, 7.35%)</title><rect x="305.0" y="147.0" width="86.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="308.0" y="158.0">java/io/Bu..</text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (5 samples, 7.35%)</title><rect x="305.0" y="131.0" width="86.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="308.0" y="142.0">java/io/Bu..</text>
</g>
<g>
<title>java/io/FileOutputStream.write (5 samples, 7.35%)</title><rect x="305.0" y="115.0" width="86.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.0" y="126.0">java/io/Fi..</text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (5 samples, 7.35%)</title><rect x="305.0" y="99.0" width="86.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.0" y="110.0">java/io/Fi..</text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (4 samples, 5.88%)</title><rect x="322.4" y="83.0" width="69.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="325.4" y="94.0">Java_ja..</text>
</g>
<g>
<title>writeBytes (4 samples, 5.88%)</title><rect x="322.4" y="67.0" width="69.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="325.4" y="78.0">writeBy..</text>
</g>
<g>
<title>__libc_write (1 samples, 1.47%)</title><rect x="322.4" y="51.0" width="17.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="325.4" y="62.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 1.47%)</title><rect x="339.7" y="51.0" width="17.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="342.7" y="62.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 1.47%)</title><rect x="357.1" y="51.0" width="17.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="360.1" y="62.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 1.47%)</title><rect x="357.1" y="35.0" width="17.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="360.1" y="46.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 1.47%)</title><rect x="374.4" y="51.0" width="17.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="377.4" y="62.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 1.47%)</title><rect x="374.4" y="35.0" width="17.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="377.4" y="46.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (9 samples, 13.24%)</title><rect x="391.8" y="211.0" width="156.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="394.8" y="222.0">ch/qos/logback/core/..</text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (9 samples, 13.24%)</title><rect x="391.8" y="195.0" width="156.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="394.8" y="206.0">ch/qos/logback/class..</text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (9 samples, 13.24%)</title><rect x="391.8" y="179.0" width="156.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.8" y="190.0">ch/qos/logback/class..</text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (9 samples, 13.24%)</title><rect x="391.8" y="163.0" width="156.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.8" y="174.0">ch/qos/logback/core/..</text>
</g>
<g>
<title>ch/qos/logback/core/pattern/Converter.write (1 samples, 1.47%)</title><rect x="409.1" y="147.0" width="17.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="412.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 1.47%)</title><rect x="409.1" y="131.0" width="17.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="412.1" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 1.47%)</title><rect x="409.1" y="115.0" width="17.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="412.1" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 1.47%)</title><rect x="409.1" y="99.0" width="17.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="412.1" y="110.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 1.47%)</title><rect x="409.1" y="83.0" width="17.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="412.1" y="94.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (7 samples, 10.29%)</title><rect x="426.5" y="147.0" width="121.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="429.5" y="158.0">ch/qos/logback/..</text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (5 samples, 7.35%)</title><rect x="426.5" y="131.0" width="86.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.5" y="142.0">ch/qos/log..</text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (5 samples, 7.35%)</title><rect x="426.5" y="115.0" width="86.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.5" y="126.0">ch/qos/log..</text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.abbreviate (5 samples, 7.35%)</title><rect x="426.5" y="99.0" width="86.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="429.5" y="110.0">ch/qos/log..</text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.computeDotIndexes (1 samples, 1.47%)</title><rect x="426.5" y="83.0" width="17.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.5" y="94.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 1.47%)</title><rect x="426.5" y="67.0" width="17.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="429.5" y="78.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 1.47%)</title><rect x="426.5" y="51.0" width="17.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="429.5" y="62.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.computeLengthArray (1 samples, 1.47%)</title><rect x="443.8" y="83.0" width="17.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="446.8" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 4.41%)</title><rect x="461.2" y="83.0" width="52.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="464.2" y="94.0">java/..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 4.41%)</title><rect x="461.2" y="67.0" width="52.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="464.2" y="78.0">java/..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (3 samples, 4.41%)</title><rect x="461.2" y="51.0" width="52.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="464.2" y="62.0">java/..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 2.94%)</title><rect x="478.5" y="35.0" width="34.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="481.5" y="46.0">jb..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 2.94%)</title><rect x="513.2" y="131.0" width="34.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="516.2" y="142.0">ja..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 2.94%)</title><rect x="513.2" y="115.0" width="34.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="516.2" y="126.0">ja..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 2.94%)</title><rect x="513.2" y="99.0" width="34.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="516.2" y="110.0">ja..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 1.47%)</title><rect x="530.6" y="83.0" width="17.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="533.6" y="94.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 1.47%)</title><rect x="547.9" y="243.0" width="17.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="550.9" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (6 samples, 8.82%)</title><rect x="565.3" y="243.0" width="104.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.3" y="254.0">java/lang/Th..</text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (6 samples, 8.82%)</title><rect x="565.3" y="227.0" width="104.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.3" y="238.0">java/lang/Th..</text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (2 samples, 2.94%)</title><rect x="634.7" y="211.0" width="34.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="637.7" y="222.0">ja..</text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (1 samples, 1.47%)</title><rect x="652.1" y="195.0" width="17.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.1" y="206.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 1.47%)</title><rect x="652.1" y="179.0" width="17.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.1" y="190.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 1.47%)</title><rect x="652.1" y="163.0" width="17.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="655.1" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/COWArrayList.asTypedArray (1 samples, 1.47%)</title><rect x="669.4" y="259.0" width="17.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="672.4" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (1 samples, 1.47%)</title><rect x="686.8" y="307.0" width="17.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.8" y="318.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 1.47%)</title><rect x="704.1" y="307.0" width="17.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="707.1" y="318.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 1.47%)</title><rect x="704.1" y="291.0" width="17.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="707.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.delete (10 samples, 14.71%)</title><rect x="721.5" y="355.0" width="173.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.5" y="366.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.remove (10 samples, 14.71%)</title><rect x="721.5" y="339.0" width="173.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="724.5" y="350.0">ru/mail/polis/dao/impl..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.remove (10 samples, 14.71%)</title><rect x="721.5" y="323.0" width="173.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="724.5" y="334.0">ru/mail/polis/dao/impl..</text>
</g>
<g>
<title>java/util/TreeMap.containsKey (3 samples, 4.41%)</title><rect x="738.8" y="307.0" width="52.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.8" y="318.0">java/..</text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 4.41%)</title><rect x="738.8" y="291.0" width="52.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="741.8" y="302.0">java/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 4.41%)</title><rect x="738.8" y="275.0" width="52.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="741.8" y="286.0">java/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 4.41%)</title><rect x="738.8" y="259.0" width="52.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="741.8" y="270.0">java/..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 2.94%)</title><rect x="738.8" y="243.0" width="34.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.8" y="254.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 1.47%)</title><rect x="756.2" y="227.0" width="17.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="759.2" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 1.47%)</title><rect x="756.2" y="211.0" width="17.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="759.2" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 1.47%)</title><rect x="773.5" y="243.0" width="17.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="776.5" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 1.47%)</title><rect x="773.5" y="227.0" width="17.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="776.5" y="238.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 1.47%)</title><rect x="773.5" y="211.0" width="17.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="776.5" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (6 samples, 8.82%)</title><rect x="790.9" y="307.0" width="104.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.9" y="318.0">java/util/Tr..</text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 8.82%)</title><rect x="790.9" y="291.0" width="104.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="793.9" y="302.0">java/util/Tr..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 8.82%)</title><rect x="790.9" y="275.0" width="104.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="793.9" y="286.0">java/nio/Byt..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 7.35%)</title><rect x="808.2" y="259.0" width="86.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="811.2" y="270.0">java/nio/B..</text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 1.47%)</title><rect x="808.2" y="243.0" width="17.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="811.2" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 1.47%)</title><rect x="825.6" y="243.0" width="17.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.6" y="254.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 4.41%)</title><rect x="842.9" y="243.0" width="52.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="845.9" y="254.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (3 samples, 4.41%)</title><rect x="895.0" y="355.0" width="52.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="898.0" y="366.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (3 samples, 4.41%)</title><rect x="895.0" y="339.0" width="52.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="898.0" y="350.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 4.41%)</title><rect x="895.0" y="323.0" width="52.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="898.0" y="334.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 1.47%)</title><rect x="895.0" y="307.0" width="17.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="898.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (1 samples, 1.47%)</title><rect x="912.4" y="307.0" width="17.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="915.4" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (1 samples, 1.47%)</title><rect x="929.7" y="307.0" width="17.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="932.7" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (1 samples, 1.47%)</title><rect x="929.7" y="291.0" width="17.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="932.7" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (1 samples, 1.47%)</title><rect x="929.7" y="275.0" width="17.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="932.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 1.47%)</title><rect x="947.1" y="387.0" width="17.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="950.1" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 1.47%)</title><rect x="947.1" y="371.0" width="17.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="950.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 1.47%)</title><rect x="947.1" y="355.0" width="17.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="950.1" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 1.47%)</title><rect x="947.1" y="339.0" width="17.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="950.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 1.47%)</title><rect x="964.4" y="419.0" width="17.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="967.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 1.47%)</title><rect x="964.4" y="403.0" width="17.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 1.47%)</title><rect x="964.4" y="387.0" width="17.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="967.4" y="398.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 1.47%)</title><rect x="964.4" y="371.0" width="17.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 1.47%)</title><rect x="964.4" y="355.0" width="17.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="967.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 2.94%)</title><rect x="981.8" y="419.0" width="34.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="984.8" y="430.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 1.47%)</title><rect x="1016.5" y="419.0" width="17.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1019.5" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 1.47%)</title><rect x="1016.5" y="403.0" width="17.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1019.5" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 11.76%)</title><rect x="1033.8" y="435.0" width="138.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1036.8" y="446.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (8 samples, 11.76%)</title><rect x="1033.8" y="419.0" width="138.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1036.8" y="430.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 5.88%)</title><rect x="1033.8" y="403.0" width="69.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1036.8" y="414.0">Java_on..</text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 1.47%)</title><rect x="1033.8" y="387.0" width="17.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1036.8" y="398.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 2.94%)</title><rect x="1051.2" y="387.0" width="34.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1054.2" y="398.0">jn..</text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 1.47%)</title><rect x="1068.5" y="371.0" width="17.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1071.5" y="382.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 1.47%)</title><rect x="1068.5" y="355.0" width="17.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1071.5" y="366.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 1.47%)</title><rect x="1085.9" y="387.0" width="17.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1088.9" y="398.0"></text>
</g>
<g>
<title>__recv (4 samples, 5.88%)</title><rect x="1103.2" y="403.0" width="69.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1106.2" y="414.0">__recv</text>
</g>
<g>
<title>start_thread (1 samples, 1.47%)</title><rect x="1172.6" y="483.0" width="17.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1175.6" y="494.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 1.47%)</title><rect x="1172.6" y="467.0" width="17.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1175.6" y="478.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 1.47%)</title><rect x="1172.6" y="451.0" width="17.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.6" y="462.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 1.47%)</title><rect x="1172.6" y="435.0" width="17.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.6" y="446.0"></text>
</g>
<g>
<title>G1ConcurrentRefineThread::run_service() (1 samples, 1.47%)</title><rect x="1172.6" y="419.0" width="17.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.6" y="430.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (1 samples, 1.47%)</title><rect x="1172.6" y="403.0" width="17.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.6" y="414.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (1 samples, 1.47%)</title><rect x="1172.6" y="387.0" width="17.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1175.6" y="398.0"></text>
</g>
<g>
<title>G1RefineCardConcurrentlyClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 1.47%)</title><rect x="1172.6" y="371.0" width="17.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.6" y="382.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (1 samples, 1.47%)</title><rect x="1172.6" y="355.0" width="17.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1175.6" y="366.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ConcurrentRefineOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*) (1 samples, 1.47%)</title><rect x="1172.6" y="339.0" width="17.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1175.6" y="350.0"></text>
</g>
</g>
</svg>
