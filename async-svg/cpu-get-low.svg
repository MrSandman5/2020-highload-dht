<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="645"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="645"> </text>
<g id="frames">
<g>
<title>all (2,653 samples, 100.00%)</title><rect x="10.0" y="611.0" width="1180.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="622.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=6986] (269 samples, 10.14%)</title><rect x="10.0" y="595.0" width="119.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="606.0">[NIO Selector #..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (269 samples, 10.14%)</title><rect x="10.0" y="579.0" width="119.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="590.0">one/nio/server/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.04%)</title><rect x="10.4" y="563.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.4" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.04%)</title><rect x="10.4" y="547.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.4" y="558.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="10.4" y="531.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.4" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (267 samples, 10.06%)</title><rect x="10.9" y="563.0" width="118.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.9" y="574.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (266 samples, 10.03%)</title><rect x="11.3" y="547.0" width="118.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.3" y="558.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (265 samples, 9.99%)</title><rect x="11.3" y="531.0" width="117.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.3" y="542.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (265 samples, 9.99%)</title><rect x="11.3" y="515.0" width="117.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="14.3" y="526.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (265 samples, 9.99%)</title><rect x="11.3" y="499.0" width="117.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="14.3" y="510.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (265 samples, 9.99%)</title><rect x="11.3" y="483.0" width="117.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="14.3" y="494.0">RequestHandler..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (265 samples, 9.99%)</title><rect x="11.3" y="467.0" width="117.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.3" y="478.0">ru/mail/polis/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (4 samples, 0.15%)</title><rect x="11.3" y="451.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.3" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (4 samples, 0.15%)</title><rect x="11.3" y="435.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.3" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (4 samples, 0.15%)</title><rect x="11.3" y="419.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.3" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (4 samples, 0.15%)</title><rect x="11.3" y="403.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.3" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (4 samples, 0.15%)</title><rect x="11.3" y="387.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.3" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (4 samples, 0.15%)</title><rect x="11.3" y="371.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.3" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (4 samples, 0.15%)</title><rect x="11.3" y="355.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.3" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (4 samples, 0.15%)</title><rect x="11.3" y="339.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="14.3" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (4 samples, 0.15%)</title><rect x="11.3" y="323.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.3" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (4 samples, 0.15%)</title><rect x="11.3" y="307.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.3" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (4 samples, 0.15%)</title><rect x="11.3" y="291.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.3" y="302.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (4 samples, 0.15%)</title><rect x="11.3" y="275.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.3" y="286.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (4 samples, 0.15%)</title><rect x="11.3" y="259.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="14.3" y="270.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (4 samples, 0.15%)</title><rect x="11.3" y="243.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.3" y="254.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (4 samples, 0.15%)</title><rect x="11.3" y="227.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.3" y="238.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (4 samples, 0.15%)</title><rect x="11.3" y="211.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.3" y="222.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (4 samples, 0.15%)</title><rect x="11.3" y="195.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="14.3" y="206.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (4 samples, 0.15%)</title><rect x="11.3" y="179.0" width="1.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="14.3" y="190.0"></text>
</g>
<g>
<title>writeBytes (3 samples, 0.11%)</title><rect x="11.8" y="163.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="14.8" y="174.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.04%)</title><rect x="11.8" y="147.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.8" y="158.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.08%)</title><rect x="12.2" y="147.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="15.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (261 samples, 9.84%)</title><rect x="13.1" y="451.0" width="116.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.1" y="462.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (261 samples, 9.84%)</title><rect x="13.1" y="435.0" width="116.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="16.1" y="446.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3 samples, 0.11%)</title><rect x="13.1" y="419.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3 samples, 0.11%)</title><rect x="13.1" y="403.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="16.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3 samples, 0.11%)</title><rect x="13.1" y="387.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3 samples, 0.11%)</title><rect x="13.1" y="371.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.11%)</title><rect x="13.1" y="355.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="16.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.11%)</title><rect x="13.1" y="339.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.11%)</title><rect x="13.1" y="323.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.11%)</title><rect x="13.1" y="307.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="16.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3 samples, 0.11%)</title><rect x="13.1" y="291.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.1" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 0.11%)</title><rect x="13.1" y="275.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="16.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.11%)</title><rect x="13.1" y="259.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="16.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.11%)</title><rect x="13.1" y="243.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.11%)</title><rect x="13.1" y="227.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.11%)</title><rect x="13.1" y="211.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.11%)</title><rect x="13.1" y="195.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (3 samples, 0.11%)</title><rect x="13.1" y="179.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.1" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="13.1" y="163.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.1" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="13.1" y="147.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.1" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="13.1" y="131.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.08%)</title><rect x="13.6" y="163.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.08%)</title><rect x="13.6" y="147.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="16.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.08%)</title><rect x="13.6" y="131.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="16.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.08%)</title><rect x="13.6" y="115.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="16.6" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.04%)</title><rect x="13.6" y="99.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.6" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.04%)</title><rect x="13.6" y="83.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="16.6" y="94.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.04%)</title><rect x="13.6" y="67.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.6" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="13.6" y="51.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="16.6" y="62.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="13.6" y="35.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.6" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.04%)</title><rect x="14.0" y="99.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.0" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.04%)</title><rect x="14.0" y="83.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.0" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="14.0" y="67.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.0" y="78.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.04%)</title><rect x="14.0" y="51.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="17.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (258 samples, 9.72%)</title><rect x="14.4" y="419.0" width="114.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.4" y="430.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (258 samples, 9.72%)</title><rect x="14.4" y="403.0" width="114.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.4" y="414.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (258 samples, 9.72%)</title><rect x="14.4" y="387.0" width="114.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.4" y="398.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (24 samples, 0.90%)</title><rect x="14.4" y="371.0" width="10.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (24 samples, 0.90%)</title><rect x="14.4" y="355.0" width="10.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.4" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (23 samples, 0.87%)</title><rect x="14.9" y="339.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.9" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (23 samples, 0.87%)</title><rect x="14.9" y="323.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (23 samples, 0.87%)</title><rect x="14.9" y="307.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (23 samples, 0.87%)</title><rect x="14.9" y="291.0" width="10.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (23 samples, 0.87%)</title><rect x="14.9" y="275.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (23 samples, 0.87%)</title><rect x="14.9" y="259.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (23 samples, 0.87%)</title><rect x="14.9" y="243.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (23 samples, 0.87%)</title><rect x="14.9" y="227.0" width="10.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (23 samples, 0.87%)</title><rect x="14.9" y="211.0" width="10.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (23 samples, 0.87%)</title><rect x="14.9" y="195.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="14.9" y="179.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.9" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="14.9" y="163.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.9" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="14.9" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.9" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="14.9" y="131.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.9" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getLong (1 samples, 0.04%)</title><rect x="15.3" y="179.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getLongUnaligned (1 samples, 0.04%)</title><rect x="15.3" y="163.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (6 samples, 0.23%)</title><rect x="15.8" y="179.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="15.8" y="163.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.8" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="15.8" y="147.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.8" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="15.8" y="131.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.8" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="15.8" y="115.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.19%)</title><rect x="16.2" y="163.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.19%)</title><rect x="16.2" y="147.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.19%)</title><rect x="16.2" y="131.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.19%)</title><rect x="16.2" y="115.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.19%)</title><rect x="16.2" y="99.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.19%)</title><rect x="16.2" y="83.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.2" y="94.0"></text>
</g>
<g>
<title>__pread (5 samples, 0.19%)</title><rect x="16.2" y="67.0" width="2.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="19.2" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (15 samples, 0.57%)</title><rect x="18.5" y="179.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (15 samples, 0.57%)</title><rect x="18.5" y="163.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.04%)</title><rect x="18.5" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.5" y="158.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.04%)</title><rect x="18.5" y="131.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.5" y="142.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.04%)</title><rect x="18.5" y="115.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="21.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.04%)</title><rect x="18.9" y="147.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.9" y="158.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.04%)</title><rect x="18.9" y="131.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="21.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.38%)</title><rect x="19.3" y="147.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.34%)</title><rect x="19.3" y="131.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.3" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="19.3" y="115.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="19.3" y="99.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (8 samples, 0.30%)</title><rect x="19.8" y="115.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (8 samples, 0.30%)</title><rect x="19.8" y="99.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="22.8" y="110.0"></text>
</g>
<g>
<title>__pread (8 samples, 0.30%)</title><rect x="19.8" y="83.0" width="3.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="22.8" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="23.3" y="131.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="26.3" y="142.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="23.3" y="115.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.3" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.04%)</title><rect x="23.3" y="99.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.04%)</title><rect x="23.3" y="83.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.08%)</title><rect x="23.8" y="147.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.04%)</title><rect x="24.2" y="131.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="27.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.04%)</title><rect x="24.7" y="147.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.7" y="158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (232 samples, 8.74%)</title><rect x="25.1" y="371.0" width="103.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.1" y="382.0">java/util/Co..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (232 samples, 8.74%)</title><rect x="25.1" y="355.0" width="103.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.1" y="366.0">java/lang/It..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (232 samples, 8.74%)</title><rect x="25.1" y="339.0" width="103.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="28.1" y="350.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (232 samples, 8.74%)</title><rect x="25.1" y="323.0" width="103.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="28.1" y="334.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (232 samples, 8.74%)</title><rect x="25.1" y="307.0" width="103.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.1" y="318.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (232 samples, 8.74%)</title><rect x="25.1" y="291.0" width="103.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="28.1" y="302.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (232 samples, 8.74%)</title><rect x="25.1" y="275.0" width="103.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.1" y="286.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.26%)</title><rect x="25.1" y="259.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="28.1" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.26%)</title><rect x="25.1" y="243.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="28.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="27.8" y="227.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="30.8" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="27.8" y="211.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (225 samples, 8.48%)</title><rect x="28.2" y="259.0" width="100.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="31.2" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.15%)</title><rect x="29.1" y="243.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="30.0" y="227.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.0" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="30.0" y="211.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="33.0" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="30.0" y="195.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.0" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.08%)</title><rect x="30.0" y="179.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.0" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.08%)</title><rect x="30.0" y="163.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.0" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.08%)</title><rect x="30.0" y="147.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="30.5" y="131.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="33.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (75 samples, 2.83%)</title><rect x="30.9" y="243.0" width="33.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.9" y="254.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="30.9" y="227.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="33.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="30.9" y="211.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.9" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="30.9" y="195.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="33.9" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="30.9" y="179.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.9" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="30.9" y="163.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="33.9" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="30.9" y="147.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="33.9" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.26%)</title><rect x="31.3" y="227.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="34.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.26%)</title><rect x="31.3" y="211.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.26%)</title><rect x="31.3" y="195.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.3" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="32.7" y="179.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="35.7" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.11%)</title><rect x="32.7" y="163.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.7" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.11%)</title><rect x="32.7" y="147.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.7" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.11%)</title><rect x="32.7" y="131.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="35.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="34.0" y="163.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.0" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="34.0" y="147.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="37.0" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="34.0" y="131.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="37.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (67 samples, 2.53%)</title><rect x="34.5" y="227.0" width="29.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="37.5" y="238.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (67 samples, 2.53%)</title><rect x="34.5" y="211.0" width="29.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.5" y="222.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.04%)</title><rect x="34.5" y="195.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="37.5" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.04%)</title><rect x="34.5" y="179.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="37.5" y="190.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.04%)</title><rect x="34.5" y="163.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (66 samples, 2.49%)</title><rect x="34.9" y="195.0" width="29.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.9" y="206.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.26%)</title><rect x="35.4" y="179.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="38.4" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="35.4" y="163.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="38.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (6 samples, 0.23%)</title><rect x="35.8" y="163.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="38.8" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (4 samples, 0.15%)</title><rect x="36.2" y="147.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="39.2" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.08%)</title><rect x="37.1" y="131.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="40.1" y="142.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.04%)</title><rect x="38.0" y="147.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="41.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (53 samples, 2.00%)</title><rect x="38.5" y="179.0" width="23.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="41.5" y="190.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (53 samples, 2.00%)</title><rect x="38.5" y="163.0" width="23.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="41.5" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (53 samples, 2.00%)</title><rect x="38.5" y="147.0" width="23.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.5" y="158.0">s..</text>
</g>
<g>
<title>__pread (50 samples, 1.88%)</title><rect x="39.4" y="131.0" width="22.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="42.4" y="142.0">_..</text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="61.6" y="131.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="64.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.11%)</title><rect x="62.0" y="179.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.0" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.11%)</title><rect x="62.0" y="163.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.0" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.11%)</title><rect x="62.0" y="147.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="65.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.11%)</title><rect x="62.0" y="131.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="65.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.08%)</title><rect x="63.4" y="179.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="66.4" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.08%)</title><rect x="63.4" y="163.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.4" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.08%)</title><rect x="63.4" y="147.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="66.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.08%)</title><rect x="63.4" y="131.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (144 samples, 5.43%)</title><rect x="64.3" y="243.0" width="64.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.3" y="254.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (143 samples, 5.39%)</title><rect x="64.7" y="227.0" width="63.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.7" y="238.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (8 samples, 0.30%)</title><rect x="64.7" y="211.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="67.7" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (8 samples, 0.30%)</title><rect x="64.7" y="195.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.7" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel$1.&lt;init&gt; (2 samples, 0.08%)</title><rect x="66.9" y="179.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.9" y="190.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.04%)</title><rect x="67.4" y="163.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.4" y="174.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.04%)</title><rect x="67.8" y="179.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.8" y="190.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.04%)</title><rect x="67.8" y="163.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.8" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.04%)</title><rect x="67.8" y="147.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="70.8" y="158.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="67.8" y="131.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.04%)</title><rect x="68.3" y="211.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.3" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.04%)</title><rect x="68.3" y="195.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.3" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.04%)</title><rect x="68.3" y="179.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="68.7" y="211.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.7" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (120 samples, 4.52%)</title><rect x="69.2" y="211.0" width="53.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.2" y="222.0">sun/n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.26%)</title><rect x="70.5" y="195.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.5" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (7 samples, 0.26%)</title><rect x="70.5" y="179.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="73.5" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.11%)</title><rect x="70.9" y="163.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.11%)</title><rect x="72.3" y="163.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.11%)</title><rect x="72.3" y="147.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="75.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.11%)</title><rect x="72.3" y="131.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (3 samples, 0.11%)</title><rect x="72.3" y="115.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (3 samples, 0.11%)</title><rect x="72.3" y="99.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="75.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (102 samples, 3.84%)</title><rect x="73.6" y="195.0" width="45.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.6" y="206.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (101 samples, 3.81%)</title><rect x="74.0" y="179.0" width="45.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.0" y="190.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (100 samples, 3.77%)</title><rect x="74.5" y="163.0" width="44.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="77.5" y="174.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (3 samples, 0.11%)</title><rect x="75.4" y="147.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="78.4" y="158.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.04%)</title><rect x="76.3" y="131.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="79.3" y="142.0"></text>
</g>
<g>
<title>__pread (89 samples, 3.35%)</title><rect x="76.7" y="147.0" width="39.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="79.7" y="158.0">__p..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="116.3" y="147.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="119.3" y="158.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.15%)</title><rect x="116.7" y="147.0" width="1.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="119.7" y="158.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.04%)</title><rect x="118.5" y="147.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="121.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.11%)</title><rect x="119.0" y="195.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="122.0" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.11%)</title><rect x="119.0" y="179.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="122.0" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.11%)</title><rect x="119.0" y="163.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="122.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.11%)</title><rect x="119.0" y="147.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="122.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (5 samples, 0.19%)</title><rect x="120.3" y="195.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="123.3" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.19%)</title><rect x="120.3" y="179.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.3" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.19%)</title><rect x="120.3" y="163.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (5 samples, 0.19%)</title><rect x="120.3" y="147.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="123.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (10 samples, 0.38%)</title><rect x="122.5" y="211.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="125.5" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.04%)</title><rect x="126.5" y="195.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="129.5" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.11%)</title><rect x="127.0" y="211.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="130.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="127.9" y="195.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="130.9" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="127.9" y="179.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="130.9" y="190.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.04%)</title><rect x="127.9" y="163.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="130.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.08%)</title><rect x="128.3" y="371.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="131.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.08%)</title><rect x="128.3" y="355.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.08%)</title><rect x="128.3" y="339.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2 samples, 0.08%)</title><rect x="128.3" y="323.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="131.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2 samples, 0.08%)</title><rect x="128.3" y="307.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="131.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2 samples, 0.08%)</title><rect x="128.3" y="291.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2 samples, 0.08%)</title><rect x="128.3" y="275.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.08%)</title><rect x="128.3" y="259.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.08%)</title><rect x="128.3" y="243.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2 samples, 0.08%)</title><rect x="128.3" y="227.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="131.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (2 samples, 0.08%)</title><rect x="128.3" y="211.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (2 samples, 0.08%)</title><rect x="128.3" y="195.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (2 samples, 0.08%)</title><rect x="128.3" y="179.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.08%)</title><rect x="128.3" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.08%)</title><rect x="128.3" y="147.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="131.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.08%)</title><rect x="128.3" y="131.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.08%)</title><rect x="128.3" y="115.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.04%)</title><rect x="128.3" y="99.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.04%)</title><rect x="128.3" y="83.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="128.3" y="67.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="131.3" y="78.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.04%)</title><rect x="128.3" y="51.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="131.3" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="128.8" y="99.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.8" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="128.8" y="83.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.8" y="94.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.04%)</title><rect x="128.8" y="67.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="131.8" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.04%)</title><rect x="128.8" y="51.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.8" y="62.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.04%)</title><rect x="129.2" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="132.2" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.04%)</title><rect x="129.2" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.2" y="526.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=6987] (398 samples, 15.00%)</title><rect x="129.6" y="595.0" width="177.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="132.6" y="606.0">[NIO Selector #1 tid=69..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (398 samples, 15.00%)</title><rect x="129.6" y="579.0" width="177.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.6" y="590.0">one/nio/server/Selector..</text>
</g>
<g>
<title>one/nio/net/Session.process (398 samples, 15.00%)</title><rect x="129.6" y="563.0" width="177.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.6" y="574.0">one/nio/net/Session.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (397 samples, 14.96%)</title><rect x="130.1" y="547.0" width="176.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.1" y="558.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (396 samples, 14.93%)</title><rect x="130.1" y="531.0" width="176.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="133.1" y="542.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (396 samples, 14.93%)</title><rect x="130.1" y="515.0" width="176.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.1" y="526.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (396 samples, 14.93%)</title><rect x="130.1" y="499.0" width="176.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.1" y="510.0">one/nio/http/HttpServer..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (396 samples, 14.93%)</title><rect x="130.1" y="483.0" width="176.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="133.1" y="494.0">RequestHandler0_respons..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (396 samples, 14.93%)</title><rect x="130.1" y="467.0" width="176.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="133.1" y="478.0">ru/mail/polis/service/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (4 samples, 0.15%)</title><rect x="130.1" y="451.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.1" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (4 samples, 0.15%)</title><rect x="130.1" y="435.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.1" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (4 samples, 0.15%)</title><rect x="130.1" y="419.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.1" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (4 samples, 0.15%)</title><rect x="130.1" y="403.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.1" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (4 samples, 0.15%)</title><rect x="130.1" y="387.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="133.1" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (4 samples, 0.15%)</title><rect x="130.1" y="371.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.1" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (4 samples, 0.15%)</title><rect x="130.1" y="355.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.1" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (2 samples, 0.08%)</title><rect x="130.1" y="339.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="133.1" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (2 samples, 0.08%)</title><rect x="130.1" y="323.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.1" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.04%)</title><rect x="130.1" y="307.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.1" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.04%)</title><rect x="130.1" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.1" y="302.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.04%)</title><rect x="130.1" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="133.1" y="286.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.04%)</title><rect x="130.1" y="259.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.1" y="270.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.04%)</title><rect x="130.1" y="243.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.1" y="254.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.04%)</title><rect x="130.1" y="227.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="133.1" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.04%)</title><rect x="130.1" y="211.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="133.1" y="222.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.04%)</title><rect x="130.1" y="195.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.1" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.04%)</title><rect x="130.1" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.1" y="190.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="130.1" y="163.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="133.1" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.04%)</title><rect x="130.5" y="307.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="133.5" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.04%)</title><rect x="130.5" y="291.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.5" y="302.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.04%)</title><rect x="130.5" y="275.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="133.5" y="286.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.04%)</title><rect x="130.5" y="259.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="133.5" y="270.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.04%)</title><rect x="130.5" y="243.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="133.5" y="254.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.04%)</title><rect x="130.5" y="227.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="133.5" y="238.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.04%)</title><rect x="130.5" y="211.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.5" y="222.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.04%)</title><rect x="130.5" y="195.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.5" y="206.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.04%)</title><rect x="130.5" y="179.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="133.5" y="190.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.04%)</title><rect x="130.5" y="163.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="133.5" y="174.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="130.5" y="147.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="133.5" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="131.0" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.0" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.04%)</title><rect x="131.0" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.0" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.04%)</title><rect x="131.0" y="307.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="134.0" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (1 samples, 0.04%)</title><rect x="131.0" y="291.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.0" y="302.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="131.0" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.0" y="286.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="131.0" y="259.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.0" y="270.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="131.0" y="243.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (1 samples, 0.04%)</title><rect x="131.0" y="227.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.0" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.04%)</title><rect x="131.4" y="339.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.4" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.04%)</title><rect x="131.4" y="323.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.4" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.04%)</title><rect x="131.4" y="307.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="134.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (392 samples, 14.78%)</title><rect x="131.9" y="451.0" width="174.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="134.9" y="462.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (392 samples, 14.78%)</title><rect x="131.9" y="435.0" width="174.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="134.9" y="446.0">ru/mail/polis/dao/DAO...</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (6 samples, 0.23%)</title><rect x="131.9" y="419.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (6 samples, 0.23%)</title><rect x="131.9" y="403.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (6 samples, 0.23%)</title><rect x="131.9" y="387.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (6 samples, 0.23%)</title><rect x="131.9" y="371.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.23%)</title><rect x="131.9" y="355.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.23%)</title><rect x="131.9" y="339.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.9" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.04%)</title><rect x="131.9" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="134.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.04%)</title><rect x="131.9" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.04%)</title><rect x="131.9" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.04%)</title><rect x="131.9" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="134.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.04%)</title><rect x="131.9" y="259.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.9" y="270.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.04%)</title><rect x="131.9" y="243.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="134.9" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.04%)</title><rect x="131.9" y="227.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.04%)</title><rect x="131.9" y="211.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="134.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.04%)</title><rect x="131.9" y="195.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="131.9" y="179.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="134.9" y="190.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="131.9" y="163.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.9" y="174.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.19%)</title><rect x="132.3" y="323.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.19%)</title><rect x="132.3" y="307.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.19%)</title><rect x="132.3" y="291.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.19%)</title><rect x="132.3" y="275.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="135.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.19%)</title><rect x="132.3" y="259.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="135.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.19%)</title><rect x="132.3" y="243.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="135.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5 samples, 0.19%)</title><rect x="132.3" y="227.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.19%)</title><rect x="132.3" y="211.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="135.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.19%)</title><rect x="132.3" y="195.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="135.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (5 samples, 0.19%)</title><rect x="132.3" y="179.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="135.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.15%)</title><rect x="132.3" y="163.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.15%)</title><rect x="132.3" y="147.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="135.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.15%)</title><rect x="132.3" y="131.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="135.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.15%)</title><rect x="132.3" y="115.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="135.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.15%)</title><rect x="132.3" y="99.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.15%)</title><rect x="132.3" y="83.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="135.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.15%)</title><rect x="132.3" y="67.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.3" y="78.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.15%)</title><rect x="132.3" y="51.0" width="1.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="135.3" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.04%)</title><rect x="134.1" y="163.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="137.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.04%)</title><rect x="134.1" y="147.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.04%)</title><rect x="134.1" y="131.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.04%)</title><rect x="134.1" y="115.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="137.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.04%)</title><rect x="134.1" y="99.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="137.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="134.1" y="83.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="137.1" y="94.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.04%)</title><rect x="134.1" y="67.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="137.1" y="78.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.04%)</title><rect x="134.5" y="419.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="137.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.04%)</title><rect x="134.5" y="403.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="137.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.04%)</title><rect x="134.5" y="387.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="137.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (385 samples, 14.51%)</title><rect x="135.0" y="419.0" width="171.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.0" y="430.0">ru/mail/polis/dao/impl..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (385 samples, 14.51%)</title><rect x="135.0" y="403.0" width="171.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.0" y="414.0">ru/mail/polis/dao/impl..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.04%)</title><rect x="135.0" y="387.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.04%)</title><rect x="135.0" y="371.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.04%)</title><rect x="135.0" y="355.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.0" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.04%)</title><rect x="135.0" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.0" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.04%)</title><rect x="135.0" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.0" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.04%)</title><rect x="135.0" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.08%)</title><rect x="135.4" y="387.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="138.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.08%)</title><rect x="135.4" y="371.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (2 samples, 0.08%)</title><rect x="135.4" y="355.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="138.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (2 samples, 0.08%)</title><rect x="135.4" y="339.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.08%)</title><rect x="135.4" y="323.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.04%)</title><rect x="135.4" y="307.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.4" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (1 samples, 0.04%)</title><rect x="135.9" y="307.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (381 samples, 14.36%)</title><rect x="136.3" y="387.0" width="169.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.3" y="398.0">ru/mail/polis/dao/impl..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (38 samples, 1.43%)</title><rect x="136.3" y="371.0" width="16.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="139.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (38 samples, 1.43%)</title><rect x="136.3" y="355.0" width="16.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="139.3" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (38 samples, 1.43%)</title><rect x="136.3" y="339.0" width="16.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (38 samples, 1.43%)</title><rect x="136.3" y="323.0" width="16.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="139.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (38 samples, 1.43%)</title><rect x="136.3" y="307.0" width="16.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="139.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (38 samples, 1.43%)</title><rect x="136.3" y="291.0" width="16.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="139.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (38 samples, 1.43%)</title><rect x="136.3" y="275.0" width="16.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (38 samples, 1.43%)</title><rect x="136.3" y="259.0" width="16.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="139.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (38 samples, 1.43%)</title><rect x="136.3" y="243.0" width="16.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="139.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (38 samples, 1.43%)</title><rect x="136.3" y="227.0" width="16.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="139.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (38 samples, 1.43%)</title><rect x="136.3" y="211.0" width="16.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (38 samples, 1.43%)</title><rect x="136.3" y="195.0" width="16.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="139.3" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="136.3" y="179.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="139.3" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="136.3" y="163.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="136.3" y="147.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="139.3" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="136.3" y="131.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="139.3" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="136.3" y="115.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="139.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="136.3" y="99.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="139.3" y="110.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="136.3" y="83.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="139.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.04%)</title><rect x="136.3" y="67.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="139.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (18 samples, 0.68%)</title><rect x="136.8" y="179.0" width="8.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="139.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="136.8" y="163.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.8" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="136.8" y="147.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="139.8" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="136.8" y="131.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="139.8" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="137.2" y="163.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.2" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="137.2" y="147.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.2" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="137.2" y="131.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="140.2" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="137.2" y="115.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="137.2" y="99.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="140.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="137.2" y="83.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="140.2" y="94.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.04%)</title><rect x="137.2" y="67.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="140.2" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (16 samples, 0.60%)</title><rect x="137.7" y="163.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (16 samples, 0.60%)</title><rect x="137.7" y="147.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="140.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.04%)</title><rect x="137.7" y="131.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="140.7" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.04%)</title><rect x="137.7" y="115.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.7" y="126.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.04%)</title><rect x="137.7" y="99.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (15 samples, 0.57%)</title><rect x="138.1" y="131.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="141.1" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.08%)</title><rect x="138.1" y="115.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="141.1" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.08%)</title><rect x="138.1" y="99.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="141.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.08%)</title><rect x="138.1" y="83.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="141.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.08%)</title><rect x="138.1" y="67.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.1" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (12 samples, 0.45%)</title><rect x="139.0" y="115.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="142.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (12 samples, 0.45%)</title><rect x="139.0" y="99.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="142.0" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (12 samples, 0.45%)</title><rect x="139.0" y="83.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="142.0" y="94.0"></text>
</g>
<g>
<title>__pread (12 samples, 0.45%)</title><rect x="139.0" y="67.0" width="5.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="142.0" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="144.3" y="115.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.3" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="144.3" y="99.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="147.3" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.04%)</title><rect x="144.3" y="83.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="147.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.04%)</title><rect x="144.3" y="67.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.3" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (19 samples, 0.72%)</title><rect x="144.8" y="179.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="147.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (19 samples, 0.72%)</title><rect x="144.8" y="163.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="147.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.04%)</title><rect x="144.8" y="147.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="147.8" y="158.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.04%)</title><rect x="144.8" y="131.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (16 samples, 0.60%)</title><rect x="145.2" y="147.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="148.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (16 samples, 0.60%)</title><rect x="145.2" y="131.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="148.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (16 samples, 0.60%)</title><rect x="145.2" y="115.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (16 samples, 0.60%)</title><rect x="145.2" y="99.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.2" y="110.0"></text>
</g>
<g>
<title>__pread (13 samples, 0.49%)</title><rect x="146.1" y="83.0" width="5.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="149.1" y="94.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="151.9" y="83.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="154.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.08%)</title><rect x="152.3" y="147.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.3" y="158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (342 samples, 12.89%)</title><rect x="153.2" y="371.0" width="152.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.2" y="382.0">java/util/Collectio..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (342 samples, 12.89%)</title><rect x="153.2" y="355.0" width="152.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="156.2" y="366.0">java/lang/Iterable...</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.04%)</title><rect x="153.2" y="339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.2" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.04%)</title><rect x="153.2" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.2" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (1 samples, 0.04%)</title><rect x="153.7" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (340 samples, 12.82%)</title><rect x="154.1" y="339.0" width="151.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="157.1" y="350.0">ru/mail/polis/dao/i..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (340 samples, 12.82%)</title><rect x="154.1" y="323.0" width="151.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.1" y="334.0">ru/mail/polis/dao/i..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (340 samples, 12.82%)</title><rect x="154.1" y="307.0" width="151.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.1" y="318.0">ru/mail/polis/dao/i..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (340 samples, 12.82%)</title><rect x="154.1" y="291.0" width="151.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="157.1" y="302.0">ru/mail/polis/dao/i..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (340 samples, 12.82%)</title><rect x="154.1" y="275.0" width="151.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.1" y="286.0">ru/mail/polis/dao/i..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.23%)</title><rect x="154.1" y="259.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.1" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.23%)</title><rect x="154.1" y="243.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.15%)</title><rect x="155.0" y="227.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.0" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="156.3" y="211.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="159.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (334 samples, 12.59%)</title><rect x="156.8" y="259.0" width="148.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="159.8" y="270.0">ru/mail/polis/dao/i..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.23%)</title><rect x="157.2" y="243.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="160.2" y="254.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="158.6" y="227.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="161.6" y="238.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="158.6" y="211.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="161.6" y="222.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="158.6" y="195.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="161.6" y="206.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="158.6" y="179.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="161.6" y="190.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="158.6" y="163.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="161.6" y="174.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="158.6" y="147.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="161.6" y="158.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.04%)</title><rect x="158.6" y="131.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="161.6" y="142.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.04%)</title><rect x="158.6" y="115.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="161.6" y="126.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.04%)</title><rect x="158.6" y="99.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="161.6" y="110.0"></text>
</g>
<g>
<title>G1SurvivorRegions::length() const (1 samples, 0.04%)</title><rect x="158.6" y="83.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="161.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="159.0" y="227.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.0" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="159.0" y="211.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.0" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="159.0" y="195.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="162.0" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="159.4" y="179.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.4" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="159.4" y="163.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="162.4" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.04%)</title><rect x="159.4" y="147.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (105 samples, 3.96%)</title><rect x="159.9" y="243.0" width="46.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.9" y="254.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.19%)</title><rect x="159.9" y="227.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.19%)</title><rect x="159.9" y="211.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.9" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.19%)</title><rect x="159.9" y="195.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.9" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.15%)</title><rect x="160.3" y="179.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="163.3" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.19%)</title><rect x="162.1" y="227.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.1" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.19%)</title><rect x="162.1" y="211.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.1" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.19%)</title><rect x="162.1" y="195.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.1" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="162.6" y="179.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="165.6" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.11%)</title><rect x="163.0" y="163.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.0" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.11%)</title><rect x="163.0" y="147.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.0" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.11%)</title><rect x="163.0" y="131.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (95 samples, 3.58%)</title><rect x="164.3" y="227.0" width="42.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="167.3" y="238.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (95 samples, 3.58%)</title><rect x="164.3" y="211.0" width="42.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="167.3" y="222.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.04%)</title><rect x="165.2" y="195.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="168.2" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.04%)</title><rect x="165.2" y="179.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="168.2" y="190.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.04%)</title><rect x="165.2" y="163.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="168.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (88 samples, 3.32%)</title><rect x="165.7" y="195.0" width="39.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="168.7" y="206.0">sun..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (9 samples, 0.34%)</title><rect x="165.7" y="179.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="168.7" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (9 samples, 0.34%)</title><rect x="165.7" y="163.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="168.7" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="165.7" y="147.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="168.7" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (8 samples, 0.30%)</title><rect x="166.1" y="147.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="169.1" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.15%)</title><rect x="167.9" y="131.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (71 samples, 2.68%)</title><rect x="169.7" y="179.0" width="31.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="172.7" y="190.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (71 samples, 2.68%)</title><rect x="169.7" y="163.0" width="31.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.7" y="174.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (71 samples, 2.68%)</title><rect x="169.7" y="147.0" width="31.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="172.7" y="158.0">su..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.08%)</title><rect x="170.1" y="131.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="173.1" y="142.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.04%)</title><rect x="170.6" y="115.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="173.6" y="126.0"></text>
</g>
<g>
<title>__pread (61 samples, 2.30%)</title><rect x="171.0" y="131.0" width="27.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="174.0" y="142.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.11%)</title><rect x="198.1" y="131.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="201.1" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.11%)</title><rect x="199.5" y="131.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="202.5" y="142.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.04%)</title><rect x="200.8" y="131.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="203.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.08%)</title><rect x="201.3" y="179.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="204.3" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.08%)</title><rect x="201.3" y="163.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.3" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.08%)</title><rect x="201.3" y="147.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="204.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.08%)</title><rect x="201.3" y="131.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="204.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (6 samples, 0.23%)</title><rect x="202.1" y="179.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="205.1" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.23%)</title><rect x="202.1" y="163.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="205.1" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (6 samples, 0.23%)</title><rect x="202.1" y="147.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (6 samples, 0.23%)</title><rect x="202.1" y="131.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.15%)</title><rect x="204.8" y="195.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="207.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.15%)</title><rect x="204.8" y="179.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="207.8" y="190.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.04%)</title><rect x="206.1" y="163.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="209.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (221 samples, 8.33%)</title><rect x="206.6" y="243.0" width="98.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="209.6" y="254.0">sun/nio/ch/F..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (1 samples, 0.04%)</title><rect x="207.5" y="227.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="210.5" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (218 samples, 8.22%)</title><rect x="207.9" y="227.0" width="97.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.9" y="238.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (11 samples, 0.41%)</title><rect x="207.9" y="211.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="210.9" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (11 samples, 0.41%)</title><rect x="207.9" y="195.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="210.9" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.15%)</title><rect x="210.2" y="179.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="213.2" y="190.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.15%)</title><rect x="210.2" y="163.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="213.2" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.15%)</title><rect x="210.2" y="147.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="213.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.04%)</title><rect x="211.9" y="179.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="212.4" y="179.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="215.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (3 samples, 0.11%)</title><rect x="212.8" y="211.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="215.8" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (3 samples, 0.11%)</title><rect x="212.8" y="195.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="215.8" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.11%)</title><rect x="212.8" y="179.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="215.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (184 samples, 6.94%)</title><rect x="214.2" y="211.0" width="81.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="217.2" y="222.0">sun/nio/c..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (15 samples, 0.57%)</title><rect x="215.0" y="195.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.0" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (15 samples, 0.57%)</title><rect x="215.0" y="179.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.0" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (8 samples, 0.30%)</title><rect x="216.8" y="163.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="219.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.11%)</title><rect x="220.4" y="163.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.11%)</title><rect x="220.4" y="147.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="223.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.11%)</title><rect x="220.4" y="131.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="223.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (1 samples, 0.04%)</title><rect x="220.8" y="115.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="223.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.04%)</title><rect x="221.3" y="115.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="224.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (160 samples, 6.03%)</title><rect x="221.7" y="195.0" width="71.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.7" y="206.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (160 samples, 6.03%)</title><rect x="221.7" y="179.0" width="71.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.7" y="190.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (160 samples, 6.03%)</title><rect x="221.7" y="163.0" width="71.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="224.7" y="174.0">sun/nio/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.08%)</title><rect x="226.6" y="147.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="229.6" y="158.0"></text>
</g>
<g>
<title>__pread (131 samples, 4.94%)</title><rect x="227.5" y="147.0" width="58.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="230.5" y="158.0">__pread</text>
</g>
<g>
<title>__pthread_disable_asynccancel (7 samples, 0.26%)</title><rect x="285.8" y="147.0" width="3.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="288.8" y="158.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (6 samples, 0.23%)</title><rect x="288.9" y="147.0" width="2.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="291.9" y="158.0"></text>
</g>
<g>
<title>convertReturnVal (2 samples, 0.08%)</title><rect x="291.5" y="147.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="294.5" y="158.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.04%)</title><rect x="292.4" y="147.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="295.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.11%)</title><rect x="292.9" y="195.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="295.9" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.11%)</title><rect x="292.9" y="179.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.9" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.11%)</title><rect x="292.9" y="163.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="295.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.11%)</title><rect x="292.9" y="147.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="295.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (4 samples, 0.15%)</title><rect x="294.2" y="195.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="297.2" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.15%)</title><rect x="294.2" y="179.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="297.2" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.15%)</title><rect x="294.2" y="163.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="297.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (4 samples, 0.15%)</title><rect x="294.2" y="147.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="297.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (17 samples, 0.64%)</title><rect x="296.0" y="211.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="299.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (9 samples, 0.34%)</title><rect x="299.6" y="195.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="302.6" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.11%)</title><rect x="303.6" y="211.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="306.6" y="222.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="304.4" y="195.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="307.4" y="206.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="304.4" y="179.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="307.4" y="190.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.04%)</title><rect x="304.4" y="163.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="307.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="304.9" y="243.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="307.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.04%)</title><rect x="305.3" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="305.3" y="355.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="308.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.04%)</title><rect x="305.3" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.04%)</title><rect x="305.3" y="323.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="308.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.04%)</title><rect x="305.3" y="307.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="308.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.04%)</title><rect x="305.3" y="291.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="308.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1 samples, 0.04%)</title><rect x="305.3" y="275.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.04%)</title><rect x="305.3" y="259.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="308.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.04%)</title><rect x="305.3" y="243.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="308.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1 samples, 0.04%)</title><rect x="305.3" y="227.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (1 samples, 0.04%)</title><rect x="305.3" y="211.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="308.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (1 samples, 0.04%)</title><rect x="305.3" y="195.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="308.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (1 samples, 0.04%)</title><rect x="305.3" y="179.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.04%)</title><rect x="305.3" y="163.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.04%)</title><rect x="305.3" y="147.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="308.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.04%)</title><rect x="305.3" y="131.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.04%)</title><rect x="305.3" y="115.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="308.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.04%)</title><rect x="305.3" y="99.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (1 samples, 0.04%)</title><rect x="305.8" y="387.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="308.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (1 samples, 0.04%)</title><rect x="305.8" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="308.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="305.8" y="355.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.04%)</title><rect x="305.8" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (1 samples, 0.04%)</title><rect x="305.8" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (1 samples, 0.04%)</title><rect x="305.8" y="307.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (1 samples, 0.04%)</title><rect x="305.8" y="291.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.04%)</title><rect x="305.8" y="275.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="308.8" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="305.8" y="259.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.8" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.04%)</title><rect x="306.2" y="531.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="309.2" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.04%)</title><rect x="306.2" y="515.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="309.2" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.04%)</title><rect x="306.2" y="499.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="309.2" y="510.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="306.2" y="483.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="309.2" y="494.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="306.2" y="467.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="309.2" y="478.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.04%)</title><rect x="306.2" y="451.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="309.2" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=6988] (268 samples, 10.10%)</title><rect x="306.7" y="595.0" width="119.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="309.7" y="606.0">[NIO Selector #..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (268 samples, 10.10%)</title><rect x="306.7" y="579.0" width="119.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="309.7" y="590.0">one/nio/server/..</text>
</g>
<g>
<title>one/nio/net/Session.process (268 samples, 10.10%)</title><rect x="306.7" y="563.0" width="119.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="309.7" y="574.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (268 samples, 10.10%)</title><rect x="306.7" y="547.0" width="119.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="309.7" y="558.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (267 samples, 10.06%)</title><rect x="306.7" y="531.0" width="118.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="309.7" y="542.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (267 samples, 10.06%)</title><rect x="306.7" y="515.0" width="118.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.7" y="526.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (267 samples, 10.06%)</title><rect x="306.7" y="499.0" width="118.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.7" y="510.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (267 samples, 10.06%)</title><rect x="306.7" y="483.0" width="118.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="309.7" y="494.0">RequestHandler..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.08%)</title><rect x="306.7" y="467.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="309.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.08%)</title><rect x="306.7" y="451.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="309.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.08%)</title><rect x="306.7" y="435.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="309.7" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="307.1" y="419.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="310.1" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="307.1" y="403.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="310.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="307.1" y="387.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="310.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (265 samples, 9.99%)</title><rect x="307.6" y="467.0" width="117.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="310.6" y="478.0">ru/mail/polis/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1 samples, 0.04%)</title><rect x="307.6" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="310.6" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.04%)</title><rect x="307.6" y="435.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="310.6" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.04%)</title><rect x="307.6" y="419.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="310.6" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.04%)</title><rect x="307.6" y="403.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.6" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.04%)</title><rect x="307.6" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.6" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.04%)</title><rect x="307.6" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="310.6" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.04%)</title><rect x="307.6" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.6" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.04%)</title><rect x="307.6" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="310.6" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.04%)</title><rect x="307.6" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="310.6" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.04%)</title><rect x="307.6" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.6" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.04%)</title><rect x="307.6" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="310.6" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.04%)</title><rect x="307.6" y="275.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="310.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.04%)</title><rect x="307.6" y="259.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.6" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.04%)</title><rect x="307.6" y="243.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="310.6" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.04%)</title><rect x="307.6" y="227.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (264 samples, 9.95%)</title><rect x="308.0" y="451.0" width="117.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="311.0" y="462.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (264 samples, 9.95%)</title><rect x="308.0" y="435.0" width="117.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="311.0" y="446.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (6 samples, 0.23%)</title><rect x="308.0" y="419.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="311.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (6 samples, 0.23%)</title><rect x="308.0" y="403.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="311.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (6 samples, 0.23%)</title><rect x="308.0" y="387.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="311.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (6 samples, 0.23%)</title><rect x="308.0" y="371.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="311.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.23%)</title><rect x="308.0" y="355.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="311.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.23%)</title><rect x="308.0" y="339.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="311.0" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.08%)</title><rect x="308.0" y="323.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="311.0" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.08%)</title><rect x="308.0" y="307.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="311.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2 samples, 0.08%)</title><rect x="308.0" y="291.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="311.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.08%)</title><rect x="308.0" y="275.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="311.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.08%)</title><rect x="308.0" y="259.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="311.0" y="270.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.08%)</title><rect x="308.0" y="243.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="311.0" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.08%)</title><rect x="308.0" y="227.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="311.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.08%)</title><rect x="308.0" y="211.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.08%)</title><rect x="308.0" y="195.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="311.0" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.08%)</title><rect x="308.0" y="179.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="311.0" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.08%)</title><rect x="308.0" y="163.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="311.0" y="174.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="308.4" y="147.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="311.4" y="158.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.15%)</title><rect x="308.9" y="323.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="311.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.15%)</title><rect x="308.9" y="307.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="311.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.15%)</title><rect x="308.9" y="291.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="311.9" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.15%)</title><rect x="308.9" y="275.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="311.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.15%)</title><rect x="308.9" y="259.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="311.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.15%)</title><rect x="308.9" y="243.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="311.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4 samples, 0.15%)</title><rect x="308.9" y="227.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="311.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (4 samples, 0.15%)</title><rect x="308.9" y="211.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="311.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (4 samples, 0.15%)</title><rect x="308.9" y="195.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="311.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (4 samples, 0.15%)</title><rect x="308.9" y="179.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.15%)</title><rect x="308.9" y="163.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="311.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.15%)</title><rect x="308.9" y="147.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="311.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.11%)</title><rect x="308.9" y="131.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="311.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.04%)</title><rect x="309.3" y="115.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="312.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.04%)</title><rect x="309.3" y="99.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="312.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="309.3" y="83.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.3" y="94.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.04%)</title><rect x="309.3" y="67.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="312.3" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="309.8" y="115.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="312.8" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="309.8" y="99.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.8" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.04%)</title><rect x="309.8" y="83.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.8" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.04%)</title><rect x="309.8" y="67.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="312.8" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.04%)</title><rect x="310.2" y="131.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="313.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (258 samples, 9.72%)</title><rect x="310.7" y="419.0" width="114.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.7" y="430.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (258 samples, 9.72%)</title><rect x="310.7" y="403.0" width="114.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="313.7" y="414.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (257 samples, 9.69%)</title><rect x="310.7" y="387.0" width="114.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.7" y="398.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (23 samples, 0.87%)</title><rect x="310.7" y="371.0" width="10.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="313.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (23 samples, 0.87%)</title><rect x="310.7" y="355.0" width="10.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="313.7" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (23 samples, 0.87%)</title><rect x="310.7" y="339.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="313.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (23 samples, 0.87%)</title><rect x="310.7" y="323.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="313.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (23 samples, 0.87%)</title><rect x="310.7" y="307.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="313.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (23 samples, 0.87%)</title><rect x="310.7" y="291.0" width="10.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (23 samples, 0.87%)</title><rect x="310.7" y="275.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="313.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (23 samples, 0.87%)</title><rect x="310.7" y="259.0" width="10.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (20 samples, 0.75%)</title><rect x="310.7" y="243.0" width="8.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (20 samples, 0.75%)</title><rect x="310.7" y="227.0" width="8.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="313.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (20 samples, 0.75%)</title><rect x="310.7" y="211.0" width="8.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="313.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (20 samples, 0.75%)</title><rect x="310.7" y="195.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="313.7" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getLong (1 samples, 0.04%)</title><rect x="310.7" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getLongUnaligned (1 samples, 0.04%)</title><rect x="310.7" y="163.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="313.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (1 samples, 0.04%)</title><rect x="310.7" y="147.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="313.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (7 samples, 0.26%)</title><rect x="311.1" y="179.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.1" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="311.1" y="163.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.1" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="311.1" y="147.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="314.1" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="311.1" y="131.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="314.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.23%)</title><rect x="311.6" y="163.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="314.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.23%)</title><rect x="311.6" y="147.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="314.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.15%)</title><rect x="311.6" y="131.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="314.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.11%)</title><rect x="312.0" y="115.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="315.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.11%)</title><rect x="312.0" y="99.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="315.0" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.11%)</title><rect x="312.0" y="83.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="315.0" y="94.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.11%)</title><rect x="312.0" y="67.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="315.0" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.08%)</title><rect x="313.3" y="131.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.08%)</title><rect x="313.3" y="115.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (12 samples, 0.45%)</title><rect x="314.2" y="179.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (12 samples, 0.45%)</title><rect x="314.2" y="163.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="317.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.04%)</title><rect x="314.2" y="147.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="317.2" y="158.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.04%)</title><rect x="314.2" y="131.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.04%)</title><rect x="314.7" y="147.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.7" y="158.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.04%)</title><rect x="314.7" y="131.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="317.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.38%)</title><rect x="315.1" y="147.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="318.1" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.04%)</title><rect x="315.6" y="131.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="318.6" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.04%)</title><rect x="315.6" y="115.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="318.6" y="126.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.04%)</title><rect x="315.6" y="99.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.26%)</title><rect x="316.0" y="131.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="319.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.26%)</title><rect x="316.0" y="115.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="319.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.26%)</title><rect x="316.0" y="99.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="319.0" y="110.0"></text>
</g>
<g>
<title>__pread (7 samples, 0.26%)</title><rect x="316.0" y="83.0" width="3.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="319.0" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="319.1" y="131.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="322.1" y="142.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="319.1" y="115.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="322.1" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.04%)</title><rect x="319.1" y="99.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="322.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.04%)</title><rect x="319.1" y="83.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="322.1" y="94.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.11%)</title><rect x="319.6" y="243.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="322.6" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.11%)</title><rect x="319.6" y="227.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="322.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.11%)</title><rect x="319.6" y="211.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="322.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.11%)</title><rect x="319.6" y="195.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="322.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.11%)</title><rect x="319.6" y="179.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="322.6" y="190.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.08%)</title><rect x="320.0" y="163.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="323.0" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="320.0" y="147.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.0" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="320.0" y="131.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="323.0" y="142.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.04%)</title><rect x="320.5" y="147.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="323.5" y="158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (233 samples, 8.78%)</title><rect x="320.9" y="371.0" width="103.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="323.9" y="382.0">java/util/Co..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (233 samples, 8.78%)</title><rect x="320.9" y="355.0" width="103.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="323.9" y="366.0">java/lang/It..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (233 samples, 8.78%)</title><rect x="320.9" y="339.0" width="103.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="323.9" y="350.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (233 samples, 8.78%)</title><rect x="320.9" y="323.0" width="103.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="323.9" y="334.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (233 samples, 8.78%)</title><rect x="320.9" y="307.0" width="103.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="323.9" y="318.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (233 samples, 8.78%)</title><rect x="320.9" y="291.0" width="103.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.9" y="302.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (233 samples, 8.78%)</title><rect x="320.9" y="275.0" width="103.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="323.9" y="286.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.11%)</title><rect x="320.9" y="259.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="323.9" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.11%)</title><rect x="320.9" y="243.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="323.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (230 samples, 8.67%)</title><rect x="322.2" y="259.0" width="102.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="325.2" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="322.7" y="243.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.7" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="322.7" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="325.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="322.7" y="211.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="325.7" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.15%)</title><rect x="323.1" y="243.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="326.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="323.1" y="227.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="326.1" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="323.1" y="211.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.1" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="324.0" y="195.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="327.0" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="324.0" y="179.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="327.0" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="324.0" y="163.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="327.0" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.04%)</title><rect x="324.0" y="147.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="327.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="324.0" y="131.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="327.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="324.5" y="195.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="327.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (78 samples, 2.94%)</title><rect x="324.9" y="243.0" width="34.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="327.9" y="254.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="324.9" y="227.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="327.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="324.9" y="211.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="327.9" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="324.9" y="195.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="327.9" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="324.9" y="179.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="327.9" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="324.9" y="163.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="327.9" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="324.9" y="147.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="327.9" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="324.9" y="131.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="327.9" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.15%)</title><rect x="325.3" y="227.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="328.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="325.3" y="211.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="328.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="325.3" y="195.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="328.3" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="326.2" y="179.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="329.2" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.08%)</title><rect x="326.2" y="163.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="329.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.08%)</title><rect x="326.2" y="147.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.2" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.08%)</title><rect x="326.2" y="131.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="329.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (72 samples, 2.71%)</title><rect x="327.1" y="227.0" width="32.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="330.1" y="238.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (71 samples, 2.68%)</title><rect x="327.6" y="211.0" width="31.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="330.6" y="222.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (67 samples, 2.53%)</title><rect x="327.6" y="195.0" width="29.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.6" y="206.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.26%)</title><rect x="327.6" y="179.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.6" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (7 samples, 0.26%)</title><rect x="327.6" y="163.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.6" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (5 samples, 0.19%)</title><rect x="328.5" y="147.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="331.5" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.19%)</title><rect x="328.5" y="131.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="331.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (58 samples, 2.19%)</title><rect x="330.7" y="179.0" width="25.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="333.7" y="190.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (58 samples, 2.19%)</title><rect x="330.7" y="163.0" width="25.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="333.7" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (58 samples, 2.19%)</title><rect x="330.7" y="147.0" width="25.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="333.7" y="158.0">s..</text>
</g>
<g>
<title>__pread (48 samples, 1.81%)</title><rect x="333.8" y="131.0" width="21.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="336.8" y="142.0">_..</text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.11%)</title><rect x="355.1" y="131.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="358.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="356.5" y="179.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="359.5" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="356.5" y="163.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.5" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.04%)</title><rect x="356.5" y="147.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="359.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.04%)</title><rect x="356.5" y="131.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="359.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="356.9" y="179.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="359.9" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="356.9" y="163.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="359.9" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.04%)</title><rect x="356.9" y="147.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="359.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.04%)</title><rect x="356.9" y="131.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.11%)</title><rect x="357.4" y="195.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="360.4" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.11%)</title><rect x="357.4" y="179.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="360.4" y="190.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="357.8" y="163.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="360.8" y="174.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.04%)</title><rect x="357.8" y="147.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="360.8" y="158.0"></text>
</g>
<g>
<title>pthread_self@plt (1 samples, 0.04%)</title><rect x="358.3" y="163.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="361.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.04%)</title><rect x="358.7" y="195.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="361.7" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="358.7" y="179.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="361.7" y="190.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="358.7" y="163.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="361.7" y="174.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.04%)</title><rect x="358.7" y="147.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="361.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="359.2" y="227.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="362.2" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (145 samples, 5.47%)</title><rect x="359.6" y="243.0" width="64.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="362.6" y="254.0">sun/nio..</text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.04%)</title><rect x="360.0" y="227.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="363.0" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (143 samples, 5.39%)</title><rect x="360.5" y="227.0" width="63.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="363.5" y="238.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (10 samples, 0.38%)</title><rect x="360.5" y="211.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="363.5" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (10 samples, 0.38%)</title><rect x="360.5" y="195.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="363.5" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.23%)</title><rect x="362.3" y="179.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="365.3" y="190.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (6 samples, 0.23%)</title><rect x="362.3" y="163.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="365.3" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (6 samples, 0.23%)</title><rect x="362.3" y="147.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.3" y="158.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="364.5" y="131.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="367.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (3 samples, 0.11%)</title><rect x="364.9" y="211.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="367.9" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.08%)</title><rect x="365.4" y="195.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="368.4" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.08%)</title><rect x="365.4" y="179.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="368.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="366.3" y="211.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="369.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (120 samples, 4.52%)</title><rect x="366.7" y="211.0" width="53.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="369.7" y="222.0">sun/n..</text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.04%)</title><rect x="367.2" y="195.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="370.2" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (8 samples, 0.30%)</title><rect x="367.6" y="195.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="370.6" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (7 samples, 0.26%)</title><rect x="368.0" y="179.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="371.0" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (5 samples, 0.19%)</title><rect x="368.9" y="163.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="371.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (99 samples, 3.73%)</title><rect x="371.2" y="195.0" width="44.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="374.2" y="206.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (95 samples, 3.58%)</title><rect x="372.9" y="179.0" width="42.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="375.9" y="190.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (95 samples, 3.58%)</title><rect x="372.9" y="163.0" width="42.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="375.9" y="174.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.08%)</title><rect x="373.8" y="147.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="376.8" y="158.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.04%)</title><rect x="374.3" y="131.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="377.3" y="142.0"></text>
</g>
<g>
<title>__pread (84 samples, 3.17%)</title><rect x="374.7" y="147.0" width="37.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="377.7" y="158.0">__p..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.23%)</title><rect x="412.1" y="147.0" width="2.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="415.1" y="158.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="414.7" y="147.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="417.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.08%)</title><rect x="415.2" y="195.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="418.2" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.08%)</title><rect x="415.2" y="179.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="418.2" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.08%)</title><rect x="415.2" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="418.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.08%)</title><rect x="415.2" y="147.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="418.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (9 samples, 0.34%)</title><rect x="416.1" y="195.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="419.1" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (9 samples, 0.34%)</title><rect x="416.1" y="179.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="419.1" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (9 samples, 0.34%)</title><rect x="416.1" y="163.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="419.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (9 samples, 0.34%)</title><rect x="416.1" y="147.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="419.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (8 samples, 0.30%)</title><rect x="420.1" y="211.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="423.1" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.19%)</title><rect x="421.4" y="195.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.4" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="423.2" y="179.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="426.2" y="190.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.04%)</title><rect x="423.2" y="163.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="426.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.04%)</title><rect x="423.6" y="211.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="426.6" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="424.1" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="427.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.04%)</title><rect x="424.5" y="371.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="424.5" y="355.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="427.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.04%)</title><rect x="424.5" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.04%)</title><rect x="424.5" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="427.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.04%)</title><rect x="424.5" y="307.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="427.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.04%)</title><rect x="424.5" y="291.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="427.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1 samples, 0.04%)</title><rect x="424.5" y="275.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="427.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.04%)</title><rect x="424.5" y="259.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.04%)</title><rect x="424.5" y="243.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1 samples, 0.04%)</title><rect x="424.5" y="227.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="427.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (1 samples, 0.04%)</title><rect x="424.5" y="211.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (1 samples, 0.04%)</title><rect x="424.5" y="195.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="427.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (1 samples, 0.04%)</title><rect x="424.5" y="179.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="427.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.04%)</title><rect x="424.5" y="163.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.04%)</title><rect x="424.5" y="147.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="427.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.04%)</title><rect x="424.5" y="131.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="427.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.04%)</title><rect x="424.5" y="115.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="427.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.04%)</title><rect x="424.5" y="99.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="427.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.04%)</title><rect x="424.5" y="83.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="427.5" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="424.5" y="67.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="427.5" y="78.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.04%)</title><rect x="424.5" y="51.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="427.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (1 samples, 0.04%)</title><rect x="425.0" y="387.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="428.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (1 samples, 0.04%)</title><rect x="425.0" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="428.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="425.0" y="355.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="428.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.04%)</title><rect x="425.0" y="339.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="428.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (1 samples, 0.04%)</title><rect x="425.0" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="428.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (1 samples, 0.04%)</title><rect x="425.0" y="307.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (1 samples, 0.04%)</title><rect x="425.0" y="291.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="428.0" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.04%)</title><rect x="425.4" y="531.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="428.4" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.04%)</title><rect x="425.4" y="515.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="428.4" y="526.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="425.4" y="499.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="428.4" y="510.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=6989] (271 samples, 10.21%)</title><rect x="425.9" y="595.0" width="120.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="428.9" y="606.0">[NIO Selector #..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.04%)</title><rect x="425.9" y="579.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="428.9" y="590.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="425.9" y="563.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="428.9" y="574.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.04%)</title><rect x="425.9" y="547.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="428.9" y="558.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (270 samples, 10.18%)</title><rect x="426.3" y="579.0" width="120.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="429.3" y="590.0">one/nio/server/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.04%)</title><rect x="426.3" y="563.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="429.3" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.04%)</title><rect x="426.3" y="547.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="429.3" y="558.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.04%)</title><rect x="426.3" y="531.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="429.3" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (269 samples, 10.14%)</title><rect x="426.8" y="563.0" width="119.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="429.8" y="574.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (269 samples, 10.14%)</title><rect x="426.8" y="547.0" width="119.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="429.8" y="558.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (269 samples, 10.14%)</title><rect x="426.8" y="531.0" width="119.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="429.8" y="542.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (268 samples, 10.10%)</title><rect x="426.8" y="515.0" width="119.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="429.8" y="526.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (268 samples, 10.10%)</title><rect x="426.8" y="499.0" width="119.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="429.8" y="510.0">one/nio/http/Ht..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (268 samples, 10.10%)</title><rect x="426.8" y="483.0" width="119.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="429.8" y="494.0">RequestHandler0..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.04%)</title><rect x="426.8" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="429.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.04%)</title><rect x="426.8" y="451.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="429.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (267 samples, 10.06%)</title><rect x="427.2" y="467.0" width="118.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.2" y="478.0">ru/mail/polis/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1 samples, 0.04%)</title><rect x="427.2" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.2" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.04%)</title><rect x="427.2" y="435.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.2" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.04%)</title><rect x="427.2" y="419.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.2" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.04%)</title><rect x="427.2" y="403.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.2" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.04%)</title><rect x="427.2" y="387.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="430.2" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.04%)</title><rect x="427.2" y="371.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="430.2" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.04%)</title><rect x="427.2" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="430.2" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.04%)</title><rect x="427.2" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="430.2" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.04%)</title><rect x="427.2" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.2" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.04%)</title><rect x="427.2" y="307.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="430.2" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.04%)</title><rect x="427.2" y="291.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="430.2" y="302.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.04%)</title><rect x="427.2" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.2" y="286.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.04%)</title><rect x="427.2" y="259.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.2" y="270.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.04%)</title><rect x="427.2" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="430.2" y="254.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.04%)</title><rect x="427.2" y="227.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="430.2" y="238.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.04%)</title><rect x="427.2" y="211.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.2" y="222.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.04%)</title><rect x="427.2" y="195.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.2" y="206.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.04%)</title><rect x="427.2" y="179.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="430.2" y="190.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.04%)</title><rect x="427.2" y="163.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="430.2" y="174.0"></text>
</g>
<g>
<title>jni_GetArrayLength (1 samples, 0.04%)</title><rect x="427.2" y="147.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="430.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (266 samples, 10.03%)</title><rect x="427.6" y="451.0" width="118.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.6" y="462.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (266 samples, 10.03%)</title><rect x="427.6" y="435.0" width="118.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="430.6" y="446.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (7 samples, 0.26%)</title><rect x="427.6" y="419.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="430.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (7 samples, 0.26%)</title><rect x="427.6" y="403.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="430.6" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (7 samples, 0.26%)</title><rect x="427.6" y="387.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="430.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (7 samples, 0.26%)</title><rect x="427.6" y="371.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="430.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (7 samples, 0.26%)</title><rect x="427.6" y="355.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="430.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.26%)</title><rect x="427.6" y="339.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.6" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.11%)</title><rect x="427.6" y="323.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="430.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.11%)</title><rect x="427.6" y="307.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="430.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.11%)</title><rect x="427.6" y="291.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.11%)</title><rect x="427.6" y="275.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="430.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.11%)</title><rect x="427.6" y="259.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="430.6" y="270.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.11%)</title><rect x="427.6" y="243.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.6" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.11%)</title><rect x="427.6" y="227.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="430.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.11%)</title><rect x="427.6" y="211.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.11%)</title><rect x="427.6" y="195.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="430.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.08%)</title><rect x="427.6" y="179.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="430.6" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="427.6" y="163.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="430.6" y="174.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="427.6" y="147.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="430.6" y="158.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="428.1" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="431.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.04%)</title><rect x="428.5" y="179.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="431.5" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="428.5" y="163.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="431.5" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="428.5" y="147.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="431.5" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="428.5" y="131.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="431.5" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="428.5" y="115.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="431.5" y="126.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="428.5" y="99.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="431.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="428.5" y="83.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="431.5" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.15%)</title><rect x="429.0" y="323.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="432.0" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.15%)</title><rect x="429.0" y="307.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="432.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.15%)</title><rect x="429.0" y="291.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="432.0" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.15%)</title><rect x="429.0" y="275.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="432.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.15%)</title><rect x="429.0" y="259.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.15%)</title><rect x="429.0" y="243.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="432.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4 samples, 0.15%)</title><rect x="429.0" y="227.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (4 samples, 0.15%)</title><rect x="429.0" y="211.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="432.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (4 samples, 0.15%)</title><rect x="429.0" y="195.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (4 samples, 0.15%)</title><rect x="429.0" y="179.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.08%)</title><rect x="429.0" y="163.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="432.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.08%)</title><rect x="429.0" y="147.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.08%)</title><rect x="429.0" y="131.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="432.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.08%)</title><rect x="429.0" y="115.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="432.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.08%)</title><rect x="429.0" y="99.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="432.0" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.08%)</title><rect x="429.0" y="83.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="432.0" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.08%)</title><rect x="429.0" y="67.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="432.0" y="78.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.04%)</title><rect x="429.4" y="51.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="432.4" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.08%)</title><rect x="429.9" y="163.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="432.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.08%)</title><rect x="429.9" y="147.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="432.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.08%)</title><rect x="429.9" y="131.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="432.9" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.08%)</title><rect x="429.9" y="115.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="432.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (259 samples, 9.76%)</title><rect x="430.8" y="419.0" width="115.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="433.8" y="430.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (259 samples, 9.76%)</title><rect x="430.8" y="403.0" width="115.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="433.8" y="414.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (258 samples, 9.72%)</title><rect x="430.8" y="387.0" width="114.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="433.8" y="398.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (15 samples, 0.57%)</title><rect x="430.8" y="371.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="433.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (15 samples, 0.57%)</title><rect x="430.8" y="355.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="433.8" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (15 samples, 0.57%)</title><rect x="430.8" y="339.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="433.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (15 samples, 0.57%)</title><rect x="430.8" y="323.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.8" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (15 samples, 0.57%)</title><rect x="430.8" y="307.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="433.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (15 samples, 0.57%)</title><rect x="430.8" y="291.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="433.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.57%)</title><rect x="430.8" y="275.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="433.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.57%)</title><rect x="430.8" y="259.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="433.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (13 samples, 0.49%)</title><rect x="430.8" y="243.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="433.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (13 samples, 0.49%)</title><rect x="430.8" y="227.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="433.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (13 samples, 0.49%)</title><rect x="430.8" y="211.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="433.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (13 samples, 0.49%)</title><rect x="430.8" y="195.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="433.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3 samples, 0.11%)</title><rect x="430.8" y="179.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="433.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.11%)</title><rect x="430.8" y="163.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="433.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.11%)</title><rect x="430.8" y="147.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="433.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.11%)</title><rect x="430.8" y="131.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="433.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.11%)</title><rect x="430.8" y="115.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="433.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.11%)</title><rect x="430.8" y="99.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="433.8" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.11%)</title><rect x="430.8" y="83.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="433.8" y="94.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.11%)</title><rect x="430.8" y="67.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="433.8" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (10 samples, 0.38%)</title><rect x="432.1" y="179.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="435.1" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (10 samples, 0.38%)</title><rect x="432.1" y="163.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="435.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.08%)</title><rect x="432.1" y="147.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="435.1" y="158.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.08%)</title><rect x="432.1" y="131.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="435.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.04%)</title><rect x="433.0" y="147.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.0" y="158.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.04%)</title><rect x="433.0" y="131.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="436.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.23%)</title><rect x="433.4" y="147.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="436.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.23%)</title><rect x="433.4" y="131.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="436.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.23%)</title><rect x="433.4" y="115.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="436.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.23%)</title><rect x="433.4" y="99.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="436.4" y="110.0"></text>
</g>
<g>
<title>__pread (5 samples, 0.19%)</title><rect x="433.4" y="83.0" width="2.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="436.4" y="94.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.04%)</title><rect x="435.7" y="83.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="438.7" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.04%)</title><rect x="436.1" y="147.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="439.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.08%)</title><rect x="436.5" y="243.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="439.5" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.04%)</title><rect x="437.0" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="440.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.04%)</title><rect x="437.0" y="211.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="440.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.04%)</title><rect x="437.0" y="195.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="440.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.04%)</title><rect x="437.0" y="179.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="440.0" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="437.0" y="163.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="440.0" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="437.0" y="147.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="440.0" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="437.0" y="131.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="440.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="437.0" y="115.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="440.0" y="126.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="437.0" y="99.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="440.0" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="437.0" y="83.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="440.0" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="437.0" y="67.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="440.0" y="78.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.04%)</title><rect x="437.0" y="51.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="440.0" y="62.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (239 samples, 9.01%)</title><rect x="437.4" y="371.0" width="106.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="440.4" y="382.0">java/util/Col..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (239 samples, 9.01%)</title><rect x="437.4" y="355.0" width="106.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="440.4" y="366.0">java/lang/Ite..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.08%)</title><rect x="437.4" y="339.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="440.4" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (2 samples, 0.08%)</title><rect x="437.4" y="323.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="440.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (237 samples, 8.93%)</title><rect x="438.3" y="339.0" width="105.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="441.3" y="350.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (237 samples, 8.93%)</title><rect x="438.3" y="323.0" width="105.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="441.3" y="334.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (237 samples, 8.93%)</title><rect x="438.3" y="307.0" width="105.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="441.3" y="318.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (237 samples, 8.93%)</title><rect x="438.3" y="291.0" width="105.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.3" y="302.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (237 samples, 8.93%)</title><rect x="438.3" y="275.0" width="105.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="441.3" y="286.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.15%)</title><rect x="438.3" y="259.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="441.3" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.15%)</title><rect x="438.3" y="243.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="441.3" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.08%)</title><rect x="439.2" y="227.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.2" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="439.7" y="211.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="442.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (233 samples, 8.78%)</title><rect x="440.1" y="259.0" width="103.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="443.1" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.26%)</title><rect x="440.5" y="243.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="443.5" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.26%)</title><rect x="440.5" y="227.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="443.5" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.26%)</title><rect x="440.5" y="211.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="443.5" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="441.9" y="195.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="444.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.08%)</title><rect x="442.8" y="179.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="445.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="442.8" y="163.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="445.8" y="174.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="443.2" y="163.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="446.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (70 samples, 2.64%)</title><rect x="443.7" y="243.0" width="31.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.7" y="254.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="443.7" y="227.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="446.7" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="443.7" y="211.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="446.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="443.7" y="195.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="446.7" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="443.7" y="179.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="446.7" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.30%)</title><rect x="444.1" y="227.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="447.1" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.capacity (1 samples, 0.04%)</title><rect x="445.0" y="211.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="448.0" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.19%)</title><rect x="445.4" y="211.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="448.4" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.19%)</title><rect x="445.4" y="195.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="448.4" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.11%)</title><rect x="446.3" y="179.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="449.3" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.11%)</title><rect x="446.3" y="163.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="449.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.11%)</title><rect x="446.3" y="147.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="449.3" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.11%)</title><rect x="446.3" y="131.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (60 samples, 2.26%)</title><rect x="447.7" y="227.0" width="26.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.7" y="238.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (59 samples, 2.22%)</title><rect x="448.1" y="211.0" width="26.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="451.1" y="222.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (57 samples, 2.15%)</title><rect x="448.1" y="195.0" width="25.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="451.1" y="206.0">s..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.15%)</title><rect x="448.1" y="179.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="451.1" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.15%)</title><rect x="448.1" y="163.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="451.1" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.11%)</title><rect x="448.1" y="147.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="451.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.04%)</title><rect x="449.4" y="147.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="452.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.04%)</title><rect x="449.4" y="131.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.04%)</title><rect x="449.4" y="115.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="452.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (1 samples, 0.04%)</title><rect x="449.4" y="99.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="452.4" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (1 samples, 0.04%)</title><rect x="449.4" y="83.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.4" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (49 samples, 1.85%)</title><rect x="449.9" y="179.0" width="21.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="452.9" y="190.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (49 samples, 1.85%)</title><rect x="449.9" y="163.0" width="21.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.9" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (49 samples, 1.85%)</title><rect x="449.9" y="147.0" width="21.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.9" y="158.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.04%)</title><rect x="451.2" y="131.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="454.2" y="142.0"></text>
</g>
<g>
<title>__pread (41 samples, 1.55%)</title><rect x="451.7" y="131.0" width="18.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="454.7" y="142.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.11%)</title><rect x="469.9" y="131.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="472.9" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="471.2" y="131.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="474.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.08%)</title><rect x="471.7" y="179.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="474.7" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.08%)</title><rect x="471.7" y="163.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="474.7" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.08%)</title><rect x="471.7" y="147.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="474.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.08%)</title><rect x="471.7" y="131.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="474.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.08%)</title><rect x="472.6" y="179.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="475.6" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.08%)</title><rect x="472.6" y="163.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="475.6" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.08%)</title><rect x="472.6" y="147.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="475.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.08%)</title><rect x="472.6" y="131.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="475.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.08%)</title><rect x="473.5" y="195.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="476.5" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.08%)</title><rect x="473.5" y="179.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="476.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="474.3" y="227.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="477.3" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (155 samples, 5.84%)</title><rect x="474.8" y="243.0" width="68.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.8" y="254.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (1 samples, 0.04%)</title><rect x="474.8" y="227.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="477.8" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (154 samples, 5.80%)</title><rect x="475.2" y="227.0" width="68.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="478.2" y="238.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (9 samples, 0.34%)</title><rect x="476.1" y="211.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="479.1" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (8 samples, 0.30%)</title><rect x="476.6" y="195.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.6" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.08%)</title><rect x="478.8" y="179.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.8" y="190.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.08%)</title><rect x="478.8" y="163.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.8" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.08%)</title><rect x="478.8" y="147.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.04%)</title><rect x="479.7" y="179.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.04%)</title><rect x="480.1" y="211.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="483.1" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.04%)</title><rect x="480.1" y="195.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="483.1" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.04%)</title><rect x="480.1" y="179.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="483.1" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (131 samples, 4.94%)</title><rect x="480.6" y="211.0" width="58.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="483.6" y="222.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (9 samples, 0.34%)</title><rect x="481.5" y="195.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.5" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.30%)</title><rect x="481.9" y="179.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="484.9" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (4 samples, 0.15%)</title><rect x="482.8" y="163.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="485.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.08%)</title><rect x="484.6" y="163.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.08%)</title><rect x="484.6" y="147.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="487.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.08%)</title><rect x="484.6" y="131.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="487.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (2 samples, 0.08%)</title><rect x="484.6" y="115.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="487.6" y="126.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (2 samples, 0.08%)</title><rect x="484.6" y="99.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.6" y="110.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.04%)</title><rect x="485.5" y="195.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.5" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.04%)</title><rect x="485.5" y="179.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="488.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (104 samples, 3.92%)</title><rect x="485.9" y="195.0" width="46.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="488.9" y="206.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (103 samples, 3.88%)</title><rect x="486.4" y="179.0" width="45.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="489.4" y="190.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (103 samples, 3.88%)</title><rect x="486.4" y="163.0" width="45.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="489.4" y="174.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.08%)</title><rect x="489.9" y="147.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="492.9" y="158.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.04%)</title><rect x="490.4" y="131.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="493.4" y="142.0"></text>
</g>
<g>
<title>__pread (89 samples, 3.35%)</title><rect x="490.8" y="147.0" width="39.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="493.8" y="158.0">__p..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.08%)</title><rect x="530.4" y="147.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="533.4" y="158.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.08%)</title><rect x="531.3" y="147.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="534.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.19%)</title><rect x="532.2" y="195.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="535.2" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.19%)</title><rect x="532.2" y="179.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="535.2" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.19%)</title><rect x="532.2" y="163.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="535.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (5 samples, 0.19%)</title><rect x="532.2" y="147.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (10 samples, 0.38%)</title><rect x="534.4" y="195.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="537.4" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (10 samples, 0.38%)</title><rect x="534.4" y="179.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="537.4" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (10 samples, 0.38%)</title><rect x="534.4" y="163.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="537.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (10 samples, 0.38%)</title><rect x="534.4" y="147.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="537.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (8 samples, 0.30%)</title><rect x="538.8" y="211.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="541.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.15%)</title><rect x="540.6" y="195.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="543.6" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.11%)</title><rect x="542.4" y="211.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="545.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4 samples, 0.15%)</title><rect x="543.7" y="371.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="546.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (4 samples, 0.15%)</title><rect x="543.7" y="355.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="546.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.15%)</title><rect x="543.7" y="339.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="546.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.15%)</title><rect x="543.7" y="323.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="546.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.15%)</title><rect x="543.7" y="307.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="546.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.15%)</title><rect x="543.7" y="291.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="546.7" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.15%)</title><rect x="543.7" y="275.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="546.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.15%)</title><rect x="543.7" y="259.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.15%)</title><rect x="543.7" y="243.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.11%)</title><rect x="543.7" y="227.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="546.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.11%)</title><rect x="543.7" y="211.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="546.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.11%)</title><rect x="543.7" y="195.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="546.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (3 samples, 0.11%)</title><rect x="543.7" y="179.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.08%)</title><rect x="543.7" y="163.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="546.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.08%)</title><rect x="543.7" y="147.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="546.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.08%)</title><rect x="543.7" y="131.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="546.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.04%)</title><rect x="543.7" y="115.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.7" y="126.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.04%)</title><rect x="543.7" y="99.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="546.7" y="110.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.04%)</title><rect x="543.7" y="83.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="546.7" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.04%)</title><rect x="544.2" y="115.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.04%)</title><rect x="544.2" y="99.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.04%)</title><rect x="544.2" y="83.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.2" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="544.2" y="67.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="547.2" y="78.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="544.2" y="51.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="547.2" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.04%)</title><rect x="544.6" y="163.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="547.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.04%)</title><rect x="544.6" y="147.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="547.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.04%)</title><rect x="544.6" y="131.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="547.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.04%)</title><rect x="544.6" y="115.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="547.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.04%)</title><rect x="544.6" y="99.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="544.6" y="83.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="547.6" y="94.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.04%)</title><rect x="544.6" y="67.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="547.6" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.04%)</title><rect x="545.1" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="548.1" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.04%)</title><rect x="545.1" y="211.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="548.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.04%)</title><rect x="545.1" y="195.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.04%)</title><rect x="545.1" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="548.1" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="545.1" y="163.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="548.1" y="174.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="545.1" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (1 samples, 0.04%)</title><rect x="545.5" y="387.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="548.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (1 samples, 0.04%)</title><rect x="545.5" y="371.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="548.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="545.5" y="355.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="548.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.04%)</title><rect x="545.5" y="339.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="548.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (1 samples, 0.04%)</title><rect x="545.5" y="323.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="548.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (1 samples, 0.04%)</title><rect x="545.5" y="307.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="548.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (1 samples, 0.04%)</title><rect x="545.5" y="291.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="548.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.04%)</title><rect x="545.5" y="275.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="548.5" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="545.5" y="259.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.5" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="545.5" y="243.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="548.5" y="254.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="545.5" y="227.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="548.5" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="546.0" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="549.0" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="546.0" y="499.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="549.0" y="510.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="546.0" y="483.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="549.0" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="546.0" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="549.0" y="478.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=6990] (512 samples, 19.30%)</title><rect x="546.4" y="595.0" width="227.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="549.4" y="606.0">[NIO Selector #4 tid=6990]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (512 samples, 19.30%)</title><rect x="546.4" y="579.0" width="227.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="549.4" y="590.0">one/nio/server/SelectorThread...</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.08%)</title><rect x="546.8" y="563.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="549.8" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.08%)</title><rect x="546.8" y="547.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="549.8" y="558.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.08%)</title><rect x="546.8" y="531.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="549.8" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (509 samples, 19.19%)</title><rect x="547.7" y="563.0" width="226.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="550.7" y="574.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (509 samples, 19.19%)</title><rect x="547.7" y="547.0" width="226.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="550.7" y="558.0">one/nio/http/HttpSession.proce..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (508 samples, 19.15%)</title><rect x="547.7" y="531.0" width="226.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="550.7" y="542.0">one/nio/http/HttpSession.proce..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (507 samples, 19.11%)</title><rect x="547.7" y="515.0" width="225.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.7" y="526.0">one/nio/http/HttpSession.handl..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (507 samples, 19.11%)</title><rect x="547.7" y="499.0" width="225.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="550.7" y="510.0">one/nio/http/HttpServer.handle..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (507 samples, 19.11%)</title><rect x="547.7" y="483.0" width="225.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="550.7" y="494.0">RequestHandler0_response.handl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.04%)</title><rect x="547.7" y="467.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="550.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.04%)</title><rect x="547.7" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="550.7" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.04%)</title><rect x="547.7" y="435.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="550.7" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.04%)</title><rect x="547.7" y="419.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.04%)</title><rect x="547.7" y="403.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.7" y="414.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.04%)</title><rect x="547.7" y="387.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.7" y="398.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.04%)</title><rect x="547.7" y="371.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="550.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.04%)</title><rect x="548.2" y="467.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="551.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="548.2" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="551.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (505 samples, 19.04%)</title><rect x="548.6" y="467.0" width="224.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.6" y="478.0">ru/mail/polis/service/mrsandma..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (2 samples, 0.08%)</title><rect x="548.6" y="451.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="551.6" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (2 samples, 0.08%)</title><rect x="548.6" y="435.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="551.6" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (2 samples, 0.08%)</title><rect x="548.6" y="419.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="551.6" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (2 samples, 0.08%)</title><rect x="548.6" y="403.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.6" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (2 samples, 0.08%)</title><rect x="548.6" y="387.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="551.6" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (2 samples, 0.08%)</title><rect x="548.6" y="371.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="551.6" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (2 samples, 0.08%)</title><rect x="548.6" y="355.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.6" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (2 samples, 0.08%)</title><rect x="548.6" y="339.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="551.6" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (2 samples, 0.08%)</title><rect x="548.6" y="323.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="551.6" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.04%)</title><rect x="548.6" y="307.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="551.6" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.04%)</title><rect x="549.1" y="307.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="552.1" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.04%)</title><rect x="549.1" y="291.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="552.1" y="302.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.04%)</title><rect x="549.1" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.1" y="286.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.04%)</title><rect x="549.1" y="259.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="552.1" y="270.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.04%)</title><rect x="549.1" y="243.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="552.1" y="254.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.04%)</title><rect x="549.1" y="227.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="552.1" y="238.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.04%)</title><rect x="549.1" y="211.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="552.1" y="222.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.04%)</title><rect x="549.1" y="195.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.1" y="206.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.04%)</title><rect x="549.1" y="179.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="552.1" y="190.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.04%)</title><rect x="549.1" y="163.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="552.1" y="174.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.04%)</title><rect x="549.1" y="147.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="552.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (503 samples, 18.96%)</title><rect x="549.5" y="451.0" width="223.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="552.5" y="462.0">ru/mail/polis/service/mrsandm..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (502 samples, 18.92%)</title><rect x="550.0" y="435.0" width="223.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.0" y="446.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (8 samples, 0.30%)</title><rect x="550.0" y="419.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="553.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (8 samples, 0.30%)</title><rect x="550.0" y="403.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="553.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (8 samples, 0.30%)</title><rect x="550.0" y="387.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="553.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (8 samples, 0.30%)</title><rect x="550.0" y="371.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="553.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (8 samples, 0.30%)</title><rect x="550.0" y="355.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="553.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.30%)</title><rect x="550.0" y="339.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.0" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.04%)</title><rect x="550.0" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.0" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.04%)</title><rect x="550.0" y="307.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="553.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.04%)</title><rect x="550.0" y="291.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.04%)</title><rect x="550.0" y="275.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.04%)</title><rect x="550.0" y="259.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.0" y="270.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.04%)</title><rect x="550.0" y="243.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="553.0" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.04%)</title><rect x="550.0" y="227.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="553.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.04%)</title><rect x="550.0" y="211.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.04%)</title><rect x="550.0" y="195.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="553.0" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="550.0" y="179.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="553.0" y="190.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="550.0" y="163.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.0" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="550.0" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.0" y="158.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7 samples, 0.26%)</title><rect x="550.4" y="323.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="553.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7 samples, 0.26%)</title><rect x="550.4" y="307.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="553.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7 samples, 0.26%)</title><rect x="550.4" y="291.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="553.4" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7 samples, 0.26%)</title><rect x="550.4" y="275.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="553.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.26%)</title><rect x="550.4" y="259.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="553.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.26%)</title><rect x="550.4" y="243.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="553.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (7 samples, 0.26%)</title><rect x="550.4" y="227.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="553.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.26%)</title><rect x="550.4" y="211.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.26%)</title><rect x="550.4" y="195.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="553.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (7 samples, 0.26%)</title><rect x="550.4" y="179.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="553.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3 samples, 0.11%)</title><rect x="550.4" y="163.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="553.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.11%)</title><rect x="550.4" y="147.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.11%)</title><rect x="550.4" y="131.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="553.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.11%)</title><rect x="550.4" y="115.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.08%)</title><rect x="550.4" y="99.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="553.4" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.08%)</title><rect x="550.4" y="83.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="553.4" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.08%)</title><rect x="550.4" y="67.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="553.4" y="78.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.08%)</title><rect x="550.4" y="51.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="553.4" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="551.3" y="99.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.3" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="551.3" y="83.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.3" y="94.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.04%)</title><rect x="551.3" y="67.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.3" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.04%)</title><rect x="551.3" y="51.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="554.3" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.15%)</title><rect x="551.7" y="163.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="554.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.15%)</title><rect x="551.7" y="147.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.15%)</title><rect x="551.7" y="131.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.15%)</title><rect x="551.7" y="115.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="554.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.15%)</title><rect x="551.7" y="99.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="554.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.15%)</title><rect x="551.7" y="83.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.7" y="94.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.15%)</title><rect x="551.7" y="67.0" width="1.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="554.7" y="78.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.04%)</title><rect x="553.5" y="419.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="556.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.04%)</title><rect x="553.5" y="403.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="556.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.04%)</title><rect x="553.5" y="387.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="556.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (493 samples, 18.58%)</title><rect x="554.0" y="419.0" width="219.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="557.0" y="430.0">ru/mail/polis/dao/impl/DAOImp..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (493 samples, 18.58%)</title><rect x="554.0" y="403.0" width="219.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="557.0" y="414.0">ru/mail/polis/dao/impl/DAOImp..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (490 samples, 18.47%)</title><rect x="554.0" y="387.0" width="217.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="557.0" y="398.0">ru/mail/polis/dao/impl/DAOImp..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (53 samples, 2.00%)</title><rect x="554.0" y="371.0" width="23.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="557.0" y="382.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (53 samples, 2.00%)</title><rect x="554.0" y="355.0" width="23.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.0" y="366.0">c..</text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.04%)</title><rect x="554.0" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="557.0" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (52 samples, 1.96%)</title><rect x="554.4" y="339.0" width="23.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="557.4" y="350.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (52 samples, 1.96%)</title><rect x="554.4" y="323.0" width="23.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="557.4" y="334.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (52 samples, 1.96%)</title><rect x="554.4" y="307.0" width="23.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="557.4" y="318.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (52 samples, 1.96%)</title><rect x="554.4" y="291.0" width="23.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="557.4" y="302.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (52 samples, 1.96%)</title><rect x="554.4" y="275.0" width="23.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="557.4" y="286.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (52 samples, 1.96%)</title><rect x="554.4" y="259.0" width="23.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.4" y="270.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (51 samples, 1.92%)</title><rect x="554.4" y="243.0" width="22.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="557.4" y="254.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (51 samples, 1.92%)</title><rect x="554.4" y="227.0" width="22.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="557.4" y="238.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (51 samples, 1.92%)</title><rect x="554.4" y="211.0" width="22.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.4" y="222.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (51 samples, 1.92%)</title><rect x="554.4" y="195.0" width="22.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="557.4" y="206.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (25 samples, 0.94%)</title><rect x="554.4" y="179.0" width="11.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="557.4" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="554.4" y="163.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.4" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="554.4" y="147.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="557.4" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="554.4" y="131.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="557.4" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="554.9" y="163.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="557.9" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="554.9" y="147.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="557.9" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="554.9" y="131.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.9" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="554.9" y="115.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="557.9" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="554.9" y="99.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.9" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="554.9" y="83.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.9" y="94.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.04%)</title><rect x="554.9" y="67.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="557.9" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (22 samples, 0.83%)</title><rect x="555.3" y="163.0" width="9.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (22 samples, 0.83%)</title><rect x="555.3" y="147.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="558.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.04%)</title><rect x="555.3" y="131.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.3" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.04%)</title><rect x="555.3" y="115.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.3" y="126.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.04%)</title><rect x="555.3" y="99.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="558.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (20 samples, 0.75%)</title><rect x="555.7" y="131.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="558.7" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.04%)</title><rect x="555.7" y="115.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.7" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.04%)</title><rect x="555.7" y="99.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="558.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.04%)</title><rect x="555.7" y="83.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="558.7" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (19 samples, 0.72%)</title><rect x="556.2" y="115.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="559.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (19 samples, 0.72%)</title><rect x="556.2" y="99.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (19 samples, 0.72%)</title><rect x="556.2" y="83.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.2" y="94.0"></text>
</g>
<g>
<title>__pread (18 samples, 0.68%)</title><rect x="556.2" y="67.0" width="8.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="559.2" y="78.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="564.2" y="67.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="567.2" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.04%)</title><rect x="564.6" y="131.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="567.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.04%)</title><rect x="564.6" y="115.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="565.1" y="163.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="568.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (26 samples, 0.98%)</title><rect x="565.5" y="179.0" width="11.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="568.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (26 samples, 0.98%)</title><rect x="565.5" y="163.0" width="11.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="568.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.08%)</title><rect x="565.5" y="147.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="568.5" y="158.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.08%)</title><rect x="565.5" y="131.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.5" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.04%)</title><rect x="566.0" y="115.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="569.0" y="126.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.04%)</title><rect x="566.0" y="99.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="569.0" y="110.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.04%)</title><rect x="566.0" y="83.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.0" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (21 samples, 0.79%)</title><rect x="566.4" y="147.0" width="9.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (19 samples, 0.72%)</title><rect x="566.9" y="131.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="569.9" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="566.9" y="115.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="569.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="566.9" y="99.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (18 samples, 0.68%)</title><rect x="567.3" y="115.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="570.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (18 samples, 0.68%)</title><rect x="567.3" y="99.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="570.3" y="110.0"></text>
</g>
<g>
<title>__pread (16 samples, 0.60%)</title><rect x="567.3" y="83.0" width="7.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="570.3" y="94.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.08%)</title><rect x="574.4" y="83.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="577.4" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="575.3" y="131.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.3" y="142.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="575.3" y="115.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="578.3" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.04%)</title><rect x="575.3" y="99.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="578.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.04%)</title><rect x="575.3" y="83.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="578.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.11%)</title><rect x="575.8" y="147.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="578.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.08%)</title><rect x="576.2" y="131.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="579.2" y="142.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.04%)</title><rect x="577.1" y="243.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="580.1" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.04%)</title><rect x="577.1" y="227.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="580.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.04%)</title><rect x="577.1" y="211.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="580.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.04%)</title><rect x="577.1" y="195.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="580.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="577.1" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="580.1" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="577.1" y="163.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="580.1" y="174.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="577.1" y="147.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="580.1" y="158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (433 samples, 16.32%)</title><rect x="577.5" y="371.0" width="192.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.5" y="382.0">java/util/Collections$Unm..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (433 samples, 16.32%)</title><rect x="577.5" y="355.0" width="192.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="580.5" y="366.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (1 samples, 0.04%)</title><rect x="577.5" y="339.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="580.5" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next (1 samples, 0.04%)</title><rect x="577.5" y="323.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="580.5" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next (1 samples, 0.04%)</title><rect x="577.5" y="307.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="580.5" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.prevEntry (1 samples, 0.04%)</title><rect x="577.5" y="291.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="580.5" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.predecessor (1 samples, 0.04%)</title><rect x="577.5" y="275.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="580.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (432 samples, 16.28%)</title><rect x="578.0" y="339.0" width="192.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="581.0" y="350.0">ru/mail/polis/dao/impl/DA..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (432 samples, 16.28%)</title><rect x="578.0" y="323.0" width="192.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="581.0" y="334.0">ru/mail/polis/dao/impl/DA..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (432 samples, 16.28%)</title><rect x="578.0" y="307.0" width="192.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="581.0" y="318.0">ru/mail/polis/dao/impl/ta..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (432 samples, 16.28%)</title><rect x="578.0" y="291.0" width="192.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="581.0" y="302.0">ru/mail/polis/dao/impl/ta..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (432 samples, 16.28%)</title><rect x="578.0" y="275.0" width="192.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="581.0" y="286.0">ru/mail/polis/dao/impl/ta..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (15 samples, 0.57%)</title><rect x="578.0" y="259.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="581.0" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (14 samples, 0.53%)</title><rect x="578.4" y="243.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="581.4" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (11 samples, 0.41%)</title><rect x="579.8" y="227.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="582.8" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.15%)</title><rect x="582.9" y="211.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="585.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (417 samples, 15.72%)</title><rect x="584.7" y="259.0" width="185.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="587.7" y="270.0">ru/mail/polis/dao/impl/t..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.11%)</title><rect x="585.1" y="243.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="588.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.11%)</title><rect x="585.1" y="227.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="588.1" y="238.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="585.1" y="211.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="588.1" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="585.5" y="211.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="588.5" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="586.0" y="195.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="589.0" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="586.0" y="179.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.0" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="586.0" y="163.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="589.0" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="586.0" y="147.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="589.0" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.41%)</title><rect x="586.4" y="243.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="589.4" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.34%)</title><rect x="587.3" y="227.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="590.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.34%)</title><rect x="587.3" y="211.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="590.3" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (9 samples, 0.34%)</title><rect x="587.3" y="195.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="590.3" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.26%)</title><rect x="587.8" y="179.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="590.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.08%)</title><rect x="587.8" y="163.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="590.8" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.08%)</title><rect x="587.8" y="147.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="588.2" y="131.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="591.2" y="142.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.15%)</title><rect x="588.7" y="163.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="591.7" y="174.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="590.4" y="163.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="593.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="590.9" y="179.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.9" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="590.9" y="163.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="593.9" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="590.9" y="147.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="593.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (151 samples, 5.69%)</title><rect x="591.3" y="243.0" width="67.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.3" y="254.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.15%)</title><rect x="591.3" y="227.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="594.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="591.3" y="211.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="594.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="591.3" y="195.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.3" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="591.8" y="179.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="594.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.08%)</title><rect x="591.8" y="163.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="594.8" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.08%)</title><rect x="591.8" y="147.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="594.8" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="592.2" y="131.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="595.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="592.7" y="179.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="595.7" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.26%)</title><rect x="593.1" y="227.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.1" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.23%)</title><rect x="593.1" y="211.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.1" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.23%)</title><rect x="593.1" y="195.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="596.1" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="594.9" y="179.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="597.9" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="595.3" y="163.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="598.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="595.3" y="147.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="598.3" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.04%)</title><rect x="595.3" y="131.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="598.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.04%)</title><rect x="595.8" y="211.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (140 samples, 5.28%)</title><rect x="596.2" y="227.0" width="62.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="599.2" y="238.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (140 samples, 5.28%)</title><rect x="596.2" y="211.0" width="62.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="599.2" y="222.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.15%)</title><rect x="597.1" y="195.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.1" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.15%)</title><rect x="597.1" y="179.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="600.1" y="190.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.08%)</title><rect x="597.6" y="163.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.6" y="174.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.04%)</title><rect x="598.4" y="163.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="601.4" y="174.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.04%)</title><rect x="598.4" y="147.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="601.4" y="158.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.04%)</title><rect x="598.4" y="131.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (125 samples, 4.71%)</title><rect x="598.9" y="195.0" width="55.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.9" y="206.0">sun/n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (8 samples, 0.30%)</title><rect x="599.3" y="179.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="602.3" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.30%)</title><rect x="599.3" y="163.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (8 samples, 0.30%)</title><rect x="599.3" y="147.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="602.3" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.15%)</title><rect x="601.1" y="131.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="604.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (110 samples, 4.15%)</title><rect x="602.9" y="179.0" width="48.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="605.9" y="190.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (110 samples, 4.15%)</title><rect x="602.9" y="163.0" width="48.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.9" y="174.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (110 samples, 4.15%)</title><rect x="602.9" y="147.0" width="48.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="605.9" y="158.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (3 samples, 0.11%)</title><rect x="605.6" y="131.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="608.6" y="142.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.08%)</title><rect x="606.0" y="115.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="609.0" y="126.0"></text>
</g>
<g>
<title>__pread (93 samples, 3.51%)</title><rect x="606.9" y="131.0" width="41.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="609.9" y="142.0">__p..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.23%)</title><rect x="648.3" y="131.0" width="2.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="651.3" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.08%)</title><rect x="650.9" y="131.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="653.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.23%)</title><rect x="651.8" y="179.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.8" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.23%)</title><rect x="651.8" y="163.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="654.8" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (6 samples, 0.23%)</title><rect x="651.8" y="147.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="654.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (6 samples, 0.23%)</title><rect x="651.8" y="131.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (8 samples, 0.30%)</title><rect x="654.5" y="195.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="657.5" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (8 samples, 0.30%)</title><rect x="654.5" y="179.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="657.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.04%)</title><rect x="658.0" y="195.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="661.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="658.0" y="179.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.0" y="190.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="658.0" y="163.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="661.0" y="174.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.04%)</title><rect x="658.0" y="147.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="661.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (251 samples, 9.46%)</title><rect x="658.5" y="243.0" width="111.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="661.5" y="254.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (249 samples, 9.39%)</title><rect x="658.9" y="227.0" width="110.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="661.9" y="238.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (14 samples, 0.53%)</title><rect x="659.8" y="211.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.8" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (14 samples, 0.53%)</title><rect x="659.8" y="195.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.8" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel$1.&lt;init&gt; (1 samples, 0.04%)</title><rect x="662.5" y="179.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="665.5" y="190.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.04%)</title><rect x="662.5" y="163.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.5" y="174.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.23%)</title><rect x="662.9" y="179.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="665.9" y="190.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (6 samples, 0.23%)</title><rect x="662.9" y="163.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.9" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (6 samples, 0.23%)</title><rect x="662.9" y="147.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.04%)</title><rect x="665.6" y="179.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="668.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (4 samples, 0.15%)</title><rect x="666.0" y="211.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.0" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (4 samples, 0.15%)</title><rect x="666.0" y="195.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="669.0" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.15%)</title><rect x="666.0" y="179.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (210 samples, 7.92%)</title><rect x="667.8" y="211.0" width="93.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="670.8" y="222.0">sun/nio/ch/..</text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.04%)</title><rect x="669.2" y="195.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="672.2" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (16 samples, 0.60%)</title><rect x="669.6" y="195.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="672.6" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (16 samples, 0.60%)</title><rect x="669.6" y="179.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="672.6" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (12 samples, 0.45%)</title><rect x="670.1" y="163.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="673.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.11%)</title><rect x="675.4" y="163.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.11%)</title><rect x="675.4" y="147.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.11%)</title><rect x="675.4" y="131.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="678.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (2 samples, 0.08%)</title><rect x="675.4" y="115.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkOffset (1 samples, 0.04%)</title><rect x="675.8" y="99.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="678.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.04%)</title><rect x="676.3" y="115.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.3" y="126.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.04%)</title><rect x="676.3" y="99.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (169 samples, 6.37%)</title><rect x="676.7" y="195.0" width="75.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="679.7" y="206.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (168 samples, 6.33%)</title><rect x="677.2" y="179.0" width="74.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="680.2" y="190.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (168 samples, 6.33%)</title><rect x="677.2" y="163.0" width="74.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.2" y="174.0">sun/nio/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (3 samples, 0.11%)</title><rect x="679.8" y="147.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="682.8" y="158.0"></text>
</g>
<g>
<title>__pread (149 samples, 5.62%)</title><rect x="681.2" y="147.0" width="66.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="684.2" y="158.0">__pread</text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.15%)</title><rect x="747.4" y="147.0" width="1.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="750.4" y="158.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.15%)</title><rect x="749.2" y="147.0" width="1.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="752.2" y="158.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.04%)</title><rect x="751.0" y="147.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="754.0" y="158.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.04%)</title><rect x="751.4" y="147.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="754.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (11 samples, 0.41%)</title><rect x="751.9" y="195.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.9" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (11 samples, 0.41%)</title><rect x="751.9" y="179.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="754.9" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (11 samples, 0.41%)</title><rect x="751.9" y="163.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="754.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (11 samples, 0.41%)</title><rect x="751.9" y="147.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (10 samples, 0.38%)</title><rect x="756.8" y="195.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="759.8" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (10 samples, 0.38%)</title><rect x="756.8" y="179.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="759.8" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (10 samples, 0.38%)</title><rect x="756.8" y="163.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (10 samples, 0.38%)</title><rect x="756.8" y="147.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="759.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (16 samples, 0.60%)</title><rect x="761.2" y="211.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="764.2" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.15%)</title><rect x="766.6" y="195.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.6" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.11%)</title><rect x="768.3" y="211.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="771.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeDispatcher.needsPositionLock (1 samples, 0.04%)</title><rect x="769.7" y="227.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="772.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4 samples, 0.15%)</title><rect x="770.1" y="371.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="773.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (4 samples, 0.15%)</title><rect x="770.1" y="355.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="773.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.15%)</title><rect x="770.1" y="339.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="773.1" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.04%)</title><rect x="770.1" y="323.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="773.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.04%)</title><rect x="770.1" y="307.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.04%)</title><rect x="770.1" y="291.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="773.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.04%)</title><rect x="770.1" y="275.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.04%)</title><rect x="770.1" y="259.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.1" y="270.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.04%)</title><rect x="770.1" y="243.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="773.1" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.04%)</title><rect x="770.1" y="227.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="773.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.04%)</title><rect x="770.1" y="211.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.04%)</title><rect x="770.1" y="195.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="773.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.04%)</title><rect x="770.1" y="179.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="773.1" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="770.1" y="163.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="773.1" y="174.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.11%)</title><rect x="770.6" y="323.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="773.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.11%)</title><rect x="770.6" y="307.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="773.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3 samples, 0.11%)</title><rect x="770.6" y="291.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="773.6" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 0.11%)</title><rect x="770.6" y="275.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="773.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.11%)</title><rect x="770.6" y="259.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.11%)</title><rect x="770.6" y="243.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="773.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.11%)</title><rect x="770.6" y="227.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="773.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.11%)</title><rect x="770.6" y="211.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="773.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.11%)</title><rect x="770.6" y="195.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="773.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (3 samples, 0.11%)</title><rect x="770.6" y="179.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="773.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.11%)</title><rect x="770.6" y="163.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="773.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.11%)</title><rect x="770.6" y="147.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.11%)</title><rect x="770.6" y="131.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="773.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.11%)</title><rect x="770.6" y="115.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="773.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.11%)</title><rect x="770.6" y="99.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="773.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.11%)</title><rect x="770.6" y="83.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="773.6" y="94.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.08%)</title><rect x="771.0" y="67.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="774.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (3 samples, 0.11%)</title><rect x="771.9" y="387.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="774.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (3 samples, 0.11%)</title><rect x="771.9" y="371.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="774.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (3 samples, 0.11%)</title><rect x="771.9" y="355.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="774.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (3 samples, 0.11%)</title><rect x="771.9" y="339.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="774.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (3 samples, 0.11%)</title><rect x="771.9" y="323.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="774.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (2 samples, 0.08%)</title><rect x="772.4" y="307.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="775.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (2 samples, 0.08%)</title><rect x="772.4" y="291.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="775.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.08%)</title><rect x="772.4" y="275.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="775.4" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="772.8" y="259.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="775.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.04%)</title><rect x="773.2" y="515.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="776.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.04%)</title><rect x="773.2" y="499.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="776.2" y="510.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="773.2" y="483.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="773.2" y="467.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="773.2" y="451.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="776.2" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.04%)</title><rect x="773.7" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.7" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.04%)</title><rect x="773.7" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="776.7" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.04%)</title><rect x="773.7" y="499.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="776.7" y="510.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="773.7" y="483.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="776.7" y="494.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=6991] (276 samples, 10.40%)</title><rect x="774.1" y="595.0" width="122.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="777.1" y="606.0">[NIO Selector #..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (276 samples, 10.40%)</title><rect x="774.1" y="579.0" width="122.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="777.1" y="590.0">one/nio/server/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.04%)</title><rect x="774.1" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="777.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.04%)</title><rect x="774.1" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="777.1" y="558.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.04%)</title><rect x="774.1" y="531.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="777.1" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (275 samples, 10.37%)</title><rect x="774.6" y="563.0" width="122.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="777.6" y="574.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (275 samples, 10.37%)</title><rect x="774.6" y="547.0" width="122.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="777.6" y="558.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (274 samples, 10.33%)</title><rect x="774.6" y="531.0" width="121.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.6" y="542.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (274 samples, 10.33%)</title><rect x="774.6" y="515.0" width="121.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="777.6" y="526.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (274 samples, 10.33%)</title><rect x="774.6" y="499.0" width="121.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.6" y="510.0">one/nio/http/Ht..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (274 samples, 10.33%)</title><rect x="774.6" y="483.0" width="121.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="777.6" y="494.0">RequestHandler0..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.04%)</title><rect x="774.6" y="467.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="777.6" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.04%)</title><rect x="774.6" y="451.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="777.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.04%)</title><rect x="774.6" y="435.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.6" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.04%)</title><rect x="774.6" y="419.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.6" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.04%)</title><rect x="774.6" y="403.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="777.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.04%)</title><rect x="774.6" y="387.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="777.6" y="398.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="774.6" y="371.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="777.6" y="382.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.04%)</title><rect x="774.6" y="355.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="777.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (273 samples, 10.29%)</title><rect x="775.0" y="467.0" width="121.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="778.0" y="478.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (5 samples, 0.19%)</title><rect x="775.0" y="451.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="778.0" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (5 samples, 0.19%)</title><rect x="775.0" y="435.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="778.0" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (5 samples, 0.19%)</title><rect x="775.0" y="419.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.0" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (5 samples, 0.19%)</title><rect x="775.0" y="403.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.0" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (5 samples, 0.19%)</title><rect x="775.0" y="387.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.0" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (5 samples, 0.19%)</title><rect x="775.0" y="371.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="778.0" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (5 samples, 0.19%)</title><rect x="775.0" y="355.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="778.0" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (5 samples, 0.19%)</title><rect x="775.0" y="339.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="778.0" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (5 samples, 0.19%)</title><rect x="775.0" y="323.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="778.0" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (5 samples, 0.19%)</title><rect x="775.0" y="307.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="778.0" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (5 samples, 0.19%)</title><rect x="775.0" y="291.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.0" y="302.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (5 samples, 0.19%)</title><rect x="775.0" y="275.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.0" y="286.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (5 samples, 0.19%)</title><rect x="775.0" y="259.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="778.0" y="270.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (5 samples, 0.19%)</title><rect x="775.0" y="243.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="778.0" y="254.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (5 samples, 0.19%)</title><rect x="775.0" y="227.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="778.0" y="238.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (5 samples, 0.19%)</title><rect x="775.0" y="211.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="778.0" y="222.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (5 samples, 0.19%)</title><rect x="775.0" y="195.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="778.0" y="206.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (5 samples, 0.19%)</title><rect x="775.0" y="179.0" width="2.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="778.0" y="190.0"></text>
</g>
<g>
<title>writeBytes (5 samples, 0.19%)</title><rect x="775.0" y="163.0" width="2.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="778.0" y="174.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="775.0" y="147.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="778.0" y="158.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.04%)</title><rect x="775.5" y="147.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="778.5" y="158.0"></text>
</g>
<g>
<title>jni_GetArrayLength (1 samples, 0.04%)</title><rect x="775.9" y="147.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="778.9" y="158.0"></text>
</g>
<g>
<title>jni_GetObjectField (2 samples, 0.08%)</title><rect x="776.4" y="147.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="779.4" y="158.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.04%)</title><rect x="776.8" y="131.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="779.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (268 samples, 10.10%)</title><rect x="777.2" y="451.0" width="119.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.2" y="462.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (268 samples, 10.10%)</title><rect x="777.2" y="435.0" width="119.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.2" y="446.0">ru/mail/polis/d..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (6 samples, 0.23%)</title><rect x="777.2" y="419.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="780.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (6 samples, 0.23%)</title><rect x="777.2" y="403.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="780.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (6 samples, 0.23%)</title><rect x="777.2" y="387.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="780.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (6 samples, 0.23%)</title><rect x="777.2" y="371.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.23%)</title><rect x="777.2" y="355.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.23%)</title><rect x="777.2" y="339.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.2" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.11%)</title><rect x="777.2" y="323.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="780.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.11%)</title><rect x="777.2" y="307.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="780.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.11%)</title><rect x="777.2" y="291.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.11%)</title><rect x="777.2" y="275.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="780.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.11%)</title><rect x="777.2" y="259.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.2" y="270.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.11%)</title><rect x="777.2" y="243.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="780.2" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.08%)</title><rect x="777.7" y="227.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="780.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.08%)</title><rect x="777.7" y="211.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="780.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.08%)</title><rect x="777.7" y="195.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="780.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="777.7" y="179.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="780.7" y="190.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="777.7" y="163.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="780.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.04%)</title><rect x="778.1" y="179.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="781.1" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="778.1" y="163.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="781.1" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="778.1" y="147.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.1" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="778.1" y="131.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="781.1" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="778.1" y="115.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="781.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="778.1" y="99.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="778.1" y="83.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.1" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.11%)</title><rect x="778.6" y="323.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.11%)</title><rect x="778.6" y="307.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="781.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3 samples, 0.11%)</title><rect x="778.6" y="291.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="781.6" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 0.11%)</title><rect x="778.6" y="275.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.11%)</title><rect x="778.6" y="259.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.11%)</title><rect x="778.6" y="243.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="781.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2 samples, 0.08%)</title><rect x="778.6" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (2 samples, 0.08%)</title><rect x="778.6" y="211.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="781.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (2 samples, 0.08%)</title><rect x="778.6" y="195.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (2 samples, 0.08%)</title><rect x="778.6" y="179.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="781.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.08%)</title><rect x="778.6" y="163.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="781.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.08%)</title><rect x="778.6" y="147.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="781.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.04%)</title><rect x="778.6" y="131.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.6" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.04%)</title><rect x="778.6" y="115.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="781.6" y="126.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.04%)</title><rect x="778.6" y="99.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="781.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.04%)</title><rect x="779.0" y="131.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="782.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.04%)</title><rect x="779.0" y="115.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="782.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.04%)</title><rect x="779.0" y="99.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="782.0" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="779.0" y="83.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="782.0" y="94.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.04%)</title><rect x="779.0" y="67.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="782.0" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.04%)</title><rect x="779.5" y="227.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="782.5" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.04%)</title><rect x="779.5" y="211.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.04%)</title><rect x="779.5" y="195.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="782.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.04%)</title><rect x="779.5" y="179.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.5" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="779.5" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.5" y="174.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="779.5" y="147.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="782.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (262 samples, 9.88%)</title><rect x="779.9" y="419.0" width="116.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="782.9" y="430.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (262 samples, 9.88%)</title><rect x="779.9" y="403.0" width="116.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="782.9" y="414.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (262 samples, 9.88%)</title><rect x="779.9" y="387.0" width="116.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="782.9" y="398.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (22 samples, 0.83%)</title><rect x="779.9" y="371.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="782.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (22 samples, 0.83%)</title><rect x="779.9" y="355.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="782.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.04%)</title><rect x="779.9" y="339.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.9" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (21 samples, 0.79%)</title><rect x="780.4" y="339.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (21 samples, 0.79%)</title><rect x="780.4" y="323.0" width="9.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="783.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (21 samples, 0.79%)</title><rect x="780.4" y="307.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="783.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (21 samples, 0.79%)</title><rect x="780.4" y="291.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="783.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 0.79%)</title><rect x="780.4" y="275.0" width="9.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="783.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 0.79%)</title><rect x="780.4" y="259.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="783.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (20 samples, 0.75%)</title><rect x="780.8" y="243.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.04%)</title><rect x="780.8" y="227.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (19 samples, 0.72%)</title><rect x="781.2" y="227.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="784.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (19 samples, 0.72%)</title><rect x="781.2" y="211.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="784.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (19 samples, 0.72%)</title><rect x="781.2" y="195.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="784.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (6 samples, 0.23%)</title><rect x="781.2" y="179.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="784.2" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="781.2" y="163.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="784.2" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="781.2" y="147.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="784.2" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="781.2" y="131.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="784.2" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="781.2" y="115.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="784.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="781.2" y="99.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="784.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="781.2" y="83.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="784.2" y="94.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.04%)</title><rect x="781.2" y="67.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="784.2" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.19%)</title><rect x="781.7" y="163.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="784.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.19%)</title><rect x="781.7" y="147.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="784.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.19%)</title><rect x="781.7" y="131.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="784.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.15%)</title><rect x="781.7" y="115.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="784.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.15%)</title><rect x="781.7" y="99.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="784.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.15%)</title><rect x="781.7" y="83.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="784.7" y="94.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.11%)</title><rect x="782.1" y="67.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="785.1" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="783.5" y="115.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="786.5" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="783.5" y="99.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.5" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.04%)</title><rect x="783.5" y="83.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="786.5" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.04%)</title><rect x="783.5" y="67.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="786.5" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 0.49%)</title><rect x="783.9" y="179.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="786.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 0.49%)</title><rect x="783.9" y="163.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="786.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.08%)</title><rect x="783.9" y="147.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="786.9" y="158.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.08%)</title><rect x="783.9" y="131.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="786.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.38%)</title><rect x="784.8" y="147.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="787.8" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.04%)</title><rect x="784.8" y="131.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="787.8" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.04%)</title><rect x="784.8" y="115.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="787.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.04%)</title><rect x="784.8" y="99.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.04%)</title><rect x="784.8" y="83.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="787.8" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.04%)</title><rect x="784.8" y="67.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="787.8" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.04%)</title><rect x="784.8" y="51.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="787.8" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (8 samples, 0.30%)</title><rect x="785.3" y="131.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.26%)</title><rect x="785.7" y="115.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="788.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.26%)</title><rect x="785.7" y="99.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="788.7" y="110.0"></text>
</g>
<g>
<title>__pread (6 samples, 0.23%)</title><rect x="785.7" y="83.0" width="2.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="788.7" y="94.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="788.4" y="83.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="791.4" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="788.8" y="131.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="791.8" y="142.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="788.8" y="115.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="791.8" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.04%)</title><rect x="788.8" y="99.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.8" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.04%)</title><rect x="788.8" y="83.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="791.8" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.04%)</title><rect x="789.3" y="147.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="792.3" y="158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (238 samples, 8.97%)</title><rect x="789.7" y="371.0" width="105.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="792.7" y="382.0">java/util/Col..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (238 samples, 8.97%)</title><rect x="789.7" y="355.0" width="105.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="792.7" y="366.0">java/lang/Ite..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (238 samples, 8.97%)</title><rect x="789.7" y="339.0" width="105.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="792.7" y="350.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (238 samples, 8.97%)</title><rect x="789.7" y="323.0" width="105.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="792.7" y="334.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (238 samples, 8.97%)</title><rect x="789.7" y="307.0" width="105.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="792.7" y="318.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (238 samples, 8.97%)</title><rect x="789.7" y="291.0" width="105.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="792.7" y="302.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (238 samples, 8.97%)</title><rect x="789.7" y="275.0" width="105.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="792.7" y="286.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.15%)</title><rect x="789.7" y="259.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="792.7" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.15%)</title><rect x="789.7" y="243.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="792.7" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.08%)</title><rect x="790.6" y="227.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="793.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (234 samples, 8.82%)</title><rect x="791.5" y="259.0" width="104.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="794.5" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.19%)</title><rect x="791.5" y="243.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.5" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="791.9" y="227.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="794.9" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="791.9" y="211.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.9" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.11%)</title><rect x="792.4" y="195.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.4" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.08%)</title><rect x="792.8" y="179.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="795.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.08%)</title><rect x="792.8" y="163.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="795.8" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.08%)</title><rect x="792.8" y="147.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="795.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="793.3" y="131.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="796.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (73 samples, 2.75%)</title><rect x="793.7" y="243.0" width="32.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="796.7" y="254.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="793.7" y="227.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="796.7" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="793.7" y="211.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="793.7" y="195.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="796.7" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 0.38%)</title><rect x="794.1" y="227.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="797.1" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.30%)</title><rect x="795.0" y="211.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="798.0" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.30%)</title><rect x="795.0" y="195.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.0" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.19%)</title><rect x="796.4" y="179.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="799.4" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.19%)</title><rect x="796.4" y="163.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="799.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.19%)</title><rect x="796.4" y="147.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="799.4" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.19%)</title><rect x="796.4" y="131.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="799.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (62 samples, 2.34%)</title><rect x="798.6" y="227.0" width="27.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="801.6" y="238.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (62 samples, 2.34%)</title><rect x="798.6" y="211.0" width="27.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="801.6" y="222.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.08%)</title><rect x="798.6" y="195.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="801.6" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.08%)</title><rect x="798.6" y="179.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="801.6" y="190.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.08%)</title><rect x="798.6" y="163.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="801.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (57 samples, 2.15%)</title><rect x="799.5" y="195.0" width="25.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="802.5" y="206.0">s..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.26%)</title><rect x="799.5" y="179.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="802.5" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="799.5" y="163.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="802.5" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="799.5" y="147.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="802.5" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (6 samples, 0.23%)</title><rect x="799.9" y="163.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="802.9" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (6 samples, 0.23%)</title><rect x="799.9" y="147.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="802.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.11%)</title><rect x="801.3" y="131.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (48 samples, 1.81%)</title><rect x="802.6" y="179.0" width="21.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="805.6" y="190.0">s..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.04%)</title><rect x="802.6" y="163.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="805.6" y="174.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.04%)</title><rect x="802.6" y="147.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (47 samples, 1.77%)</title><rect x="803.0" y="163.0" width="20.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="806.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (47 samples, 1.77%)</title><rect x="803.0" y="147.0" width="20.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="806.0" y="158.0"></text>
</g>
<g>
<title>__pread (41 samples, 1.55%)</title><rect x="803.9" y="131.0" width="18.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="806.9" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.08%)</title><rect x="822.2" y="131.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="825.2" y="142.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.08%)</title><rect x="823.1" y="131.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="826.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.08%)</title><rect x="823.9" y="179.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.9" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.08%)</title><rect x="823.9" y="163.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="826.9" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.08%)</title><rect x="823.9" y="147.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="826.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.08%)</title><rect x="823.9" y="131.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="826.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.04%)</title><rect x="824.8" y="195.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="827.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.08%)</title><rect x="825.3" y="195.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="828.3" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="825.3" y="179.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="828.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="825.7" y="179.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.7" y="190.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="825.7" y="163.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="828.7" y="174.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.04%)</title><rect x="825.7" y="147.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="828.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (155 samples, 5.84%)</title><rect x="826.2" y="243.0" width="68.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="829.2" y="254.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (1 samples, 0.04%)</title><rect x="826.6" y="227.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="829.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.04%)</title><rect x="826.6" y="211.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="829.6" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (153 samples, 5.77%)</title><rect x="827.1" y="227.0" width="68.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.1" y="238.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.15%)</title><rect x="827.1" y="211.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="830.1" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.15%)</title><rect x="827.1" y="195.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.1" y="206.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.04%)</title><rect x="827.5" y="179.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.5" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.08%)</title><rect x="827.9" y="179.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="830.9" y="190.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.08%)</title><rect x="827.9" y="163.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.9" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.08%)</title><rect x="827.9" y="147.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="830.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.04%)</title><rect x="828.8" y="211.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="831.8" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.04%)</title><rect x="828.8" y="195.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="831.8" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.04%)</title><rect x="828.8" y="179.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="831.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (133 samples, 5.01%)</title><rect x="829.3" y="211.0" width="59.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="832.3" y="222.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (9 samples, 0.34%)</title><rect x="829.7" y="195.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="832.7" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (9 samples, 0.34%)</title><rect x="829.7" y="179.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="832.7" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.08%)</title><rect x="830.2" y="163.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="833.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (6 samples, 0.23%)</title><rect x="831.1" y="163.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="834.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (6 samples, 0.23%)</title><rect x="831.1" y="147.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="834.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (6 samples, 0.23%)</title><rect x="831.1" y="131.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="834.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (2 samples, 0.08%)</title><rect x="832.4" y="115.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (1 samples, 0.04%)</title><rect x="832.8" y="99.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="835.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.04%)</title><rect x="833.3" y="115.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="836.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (118 samples, 4.45%)</title><rect x="833.7" y="195.0" width="52.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="836.7" y="206.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (118 samples, 4.45%)</title><rect x="833.7" y="179.0" width="52.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="836.7" y="190.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (118 samples, 4.45%)</title><rect x="833.7" y="163.0" width="52.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="836.7" y="174.0">sun/n..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (3 samples, 0.11%)</title><rect x="836.4" y="147.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="839.4" y="158.0"></text>
</g>
<g>
<title>__pread (103 samples, 3.88%)</title><rect x="837.7" y="147.0" width="45.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="840.7" y="158.0">__pr..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.11%)</title><rect x="883.5" y="147.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="886.5" y="158.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.08%)</title><rect x="884.9" y="147.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="887.9" y="158.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.04%)</title><rect x="885.8" y="147.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="888.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.08%)</title><rect x="886.2" y="195.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="889.2" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.08%)</title><rect x="886.2" y="179.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="889.2" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.08%)</title><rect x="886.2" y="163.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="889.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.08%)</title><rect x="886.2" y="147.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="889.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.11%)</title><rect x="887.1" y="195.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="890.1" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.11%)</title><rect x="887.1" y="179.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="890.1" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.11%)</title><rect x="887.1" y="163.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="890.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.11%)</title><rect x="887.1" y="147.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (13 samples, 0.49%)</title><rect x="888.4" y="211.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="891.4" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (7 samples, 0.26%)</title><rect x="891.1" y="195.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="894.1" y="206.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.04%)</title><rect x="893.8" y="179.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="896.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.08%)</title><rect x="894.2" y="211.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="897.2" y="222.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="894.7" y="195.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="897.7" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.04%)</title><rect x="894.7" y="179.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="897.7" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.04%)</title><rect x="894.7" y="163.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="897.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="895.1" y="243.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.08%)</title><rect x="895.6" y="371.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="898.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.08%)</title><rect x="895.6" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="898.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.08%)</title><rect x="895.6" y="339.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.6" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.04%)</title><rect x="895.6" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.04%)</title><rect x="895.6" y="307.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.04%)</title><rect x="895.6" y="291.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="898.6" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1 samples, 0.04%)</title><rect x="895.6" y="275.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.04%)</title><rect x="895.6" y="259.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="898.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.04%)</title><rect x="895.6" y="243.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1 samples, 0.04%)</title><rect x="895.6" y="227.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="898.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (1 samples, 0.04%)</title><rect x="895.6" y="211.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (1 samples, 0.04%)</title><rect x="895.6" y="195.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="898.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (1 samples, 0.04%)</title><rect x="895.6" y="179.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.04%)</title><rect x="895.6" y="163.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.04%)</title><rect x="895.6" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.04%)</title><rect x="895.6" y="131.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="898.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.04%)</title><rect x="895.6" y="115.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="898.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.04%)</title><rect x="895.6" y="99.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="895.6" y="83.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="898.6" y="94.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.04%)</title><rect x="895.6" y="67.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="898.6" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.04%)</title><rect x="896.0" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.0" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.04%)</title><rect x="896.4" y="531.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="899.4" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.04%)</title><rect x="896.4" y="515.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="899.4" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.04%)</title><rect x="896.4" y="499.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="899.4" y="510.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="896.4" y="483.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="899.4" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="896.4" y="467.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="899.4" y="478.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=6992] (390 samples, 14.70%)</title><rect x="896.9" y="595.0" width="173.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="899.9" y="606.0">[NIO Selector #6 tid=6..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (390 samples, 14.70%)</title><rect x="896.9" y="579.0" width="173.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="899.9" y="590.0">one/nio/server/Selecto..</text>
</g>
<g>
<title>one/nio/net/Session.process (390 samples, 14.70%)</title><rect x="896.9" y="563.0" width="173.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="899.9" y="574.0">one/nio/net/Session.pr..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (390 samples, 14.70%)</title><rect x="896.9" y="547.0" width="173.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="899.9" y="558.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (388 samples, 14.62%)</title><rect x="896.9" y="531.0" width="172.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="899.9" y="542.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (388 samples, 14.62%)</title><rect x="896.9" y="515.0" width="172.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="899.9" y="526.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (388 samples, 14.62%)</title><rect x="896.9" y="499.0" width="172.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.9" y="510.0">one/nio/http/HttpServe..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (388 samples, 14.62%)</title><rect x="896.9" y="483.0" width="172.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="899.9" y="494.0">RequestHandler0_respon..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.04%)</title><rect x="896.9" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="899.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.04%)</title><rect x="896.9" y="451.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.9" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.04%)</title><rect x="896.9" y="435.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.9" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.04%)</title><rect x="896.9" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.9" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.04%)</title><rect x="896.9" y="403.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.9" y="414.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.04%)</title><rect x="896.9" y="387.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="899.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (387 samples, 14.59%)</title><rect x="897.3" y="467.0" width="172.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="900.3" y="478.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (3 samples, 0.11%)</title><rect x="897.3" y="451.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="900.3" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (3 samples, 0.11%)</title><rect x="897.3" y="435.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="900.3" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (3 samples, 0.11%)</title><rect x="897.3" y="419.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="900.3" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (3 samples, 0.11%)</title><rect x="897.3" y="403.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.3" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (3 samples, 0.11%)</title><rect x="897.3" y="387.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="900.3" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (3 samples, 0.11%)</title><rect x="897.3" y="371.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.3" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (3 samples, 0.11%)</title><rect x="897.3" y="355.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="900.3" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (3 samples, 0.11%)</title><rect x="897.3" y="339.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="900.3" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (3 samples, 0.11%)</title><rect x="897.3" y="323.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="900.3" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.04%)</title><rect x="897.3" y="307.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="900.3" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.04%)</title><rect x="897.3" y="291.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="900.3" y="302.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.04%)</title><rect x="897.3" y="275.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="900.3" y="286.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.04%)</title><rect x="897.3" y="259.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="900.3" y="270.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.04%)</title><rect x="897.3" y="243.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="900.3" y="254.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.04%)</title><rect x="897.3" y="227.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.3" y="238.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.04%)</title><rect x="897.3" y="211.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="900.3" y="222.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.04%)</title><rect x="897.3" y="195.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="900.3" y="206.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.04%)</title><rect x="897.3" y="179.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="900.3" y="190.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.04%)</title><rect x="897.3" y="163.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="900.3" y="174.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.04%)</title><rect x="897.3" y="147.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="900.3" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.08%)</title><rect x="897.8" y="307.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="900.8" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.08%)</title><rect x="897.8" y="291.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="900.8" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.08%)</title><rect x="897.8" y="275.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.08%)</title><rect x="897.8" y="259.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.8" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.08%)</title><rect x="897.8" y="243.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="900.8" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.04%)</title><rect x="897.8" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="900.8" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="897.8" y="211.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="900.8" y="222.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.04%)</title><rect x="898.2" y="227.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="901.2" y="238.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="898.2" y="211.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="901.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (384 samples, 14.47%)</title><rect x="898.7" y="451.0" width="170.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="901.7" y="462.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (384 samples, 14.47%)</title><rect x="898.7" y="435.0" width="170.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="901.7" y="446.0">ru/mail/polis/dao/DAO...</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (8 samples, 0.30%)</title><rect x="898.7" y="419.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="901.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (8 samples, 0.30%)</title><rect x="898.7" y="403.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (8 samples, 0.30%)</title><rect x="898.7" y="387.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="901.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (8 samples, 0.30%)</title><rect x="898.7" y="371.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="901.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (8 samples, 0.30%)</title><rect x="898.7" y="355.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="901.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.26%)</title><rect x="898.7" y="339.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7 samples, 0.26%)</title><rect x="898.7" y="323.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7 samples, 0.26%)</title><rect x="898.7" y="307.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="901.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7 samples, 0.26%)</title><rect x="898.7" y="291.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="901.7" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7 samples, 0.26%)</title><rect x="898.7" y="275.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.26%)</title><rect x="898.7" y="259.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.26%)</title><rect x="898.7" y="243.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="901.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (7 samples, 0.26%)</title><rect x="898.7" y="227.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="901.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.26%)</title><rect x="898.7" y="211.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="901.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.26%)</title><rect x="898.7" y="195.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="901.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (7 samples, 0.26%)</title><rect x="898.7" y="179.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="901.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.08%)</title><rect x="898.7" y="163.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.08%)</title><rect x="898.7" y="147.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="901.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.08%)</title><rect x="898.7" y="131.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="901.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.08%)</title><rect x="898.7" y="115.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="901.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.08%)</title><rect x="898.7" y="99.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.08%)</title><rect x="898.7" y="83.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="901.7" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.08%)</title><rect x="898.7" y="67.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="901.7" y="78.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.08%)</title><rect x="898.7" y="51.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="901.7" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.19%)</title><rect x="899.6" y="163.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="902.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.19%)</title><rect x="899.6" y="147.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="902.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.15%)</title><rect x="899.6" y="131.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="902.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.15%)</title><rect x="899.6" y="115.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="902.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.15%)</title><rect x="899.6" y="99.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="902.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.15%)</title><rect x="899.6" y="83.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="902.6" y="94.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.15%)</title><rect x="899.6" y="67.0" width="1.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="902.6" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.04%)</title><rect x="901.3" y="131.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="904.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$117/473479162.apply (1 samples, 0.04%)</title><rect x="901.8" y="339.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="904.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.04%)</title><rect x="901.8" y="323.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="901.8" y="307.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="904.8" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="901.8" y="291.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="904.8" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="901.8" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="904.8" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="901.8" y="259.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.8" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="901.8" y="243.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="901.8" y="227.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="904.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (376 samples, 14.17%)</title><rect x="902.2" y="419.0" width="167.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="905.2" y="430.0">ru/mail/polis/dao/imp..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (376 samples, 14.17%)</title><rect x="902.2" y="403.0" width="167.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="905.2" y="414.0">ru/mail/polis/dao/imp..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (376 samples, 14.17%)</title><rect x="902.2" y="387.0" width="167.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.2" y="398.0">ru/mail/polis/dao/imp..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (27 samples, 1.02%)</title><rect x="902.2" y="371.0" width="12.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="905.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (27 samples, 1.02%)</title><rect x="902.2" y="355.0" width="12.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="905.2" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (27 samples, 1.02%)</title><rect x="902.2" y="339.0" width="12.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="905.2" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (27 samples, 1.02%)</title><rect x="902.2" y="323.0" width="12.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="905.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (27 samples, 1.02%)</title><rect x="902.2" y="307.0" width="12.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (27 samples, 1.02%)</title><rect x="902.2" y="291.0" width="12.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (27 samples, 1.02%)</title><rect x="902.2" y="275.0" width="12.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="905.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (27 samples, 1.02%)</title><rect x="902.2" y="259.0" width="12.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (26 samples, 0.98%)</title><rect x="902.2" y="243.0" width="11.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="905.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (26 samples, 0.98%)</title><rect x="902.2" y="227.0" width="11.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (26 samples, 0.98%)</title><rect x="902.2" y="211.0" width="11.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="905.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (26 samples, 0.98%)</title><rect x="902.2" y="195.0" width="11.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.2" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getLong (1 samples, 0.04%)</title><rect x="902.2" y="179.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="905.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getLongUnaligned (1 samples, 0.04%)</title><rect x="902.2" y="163.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (6 samples, 0.23%)</title><rect x="902.7" y="179.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="905.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.23%)</title><rect x="902.7" y="163.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="905.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.23%)</title><rect x="902.7" y="147.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.23%)</title><rect x="902.7" y="131.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.23%)</title><rect x="902.7" y="115.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="905.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.23%)</title><rect x="902.7" y="99.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.23%)</title><rect x="902.7" y="83.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="905.7" y="94.0"></text>
</g>
<g>
<title>__pread (5 samples, 0.19%)</title><rect x="903.1" y="67.0" width="2.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="906.1" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (19 samples, 0.72%)</title><rect x="905.3" y="179.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="908.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (19 samples, 0.72%)</title><rect x="905.3" y="163.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.08%)</title><rect x="905.3" y="147.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="908.3" y="158.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.08%)</title><rect x="905.3" y="131.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="908.3" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.04%)</title><rect x="905.8" y="115.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="908.8" y="126.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.04%)</title><rect x="905.8" y="99.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="908.8" y="110.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.04%)</title><rect x="905.8" y="83.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="908.8" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (16 samples, 0.60%)</title><rect x="906.2" y="147.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.2" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.04%)</title><rect x="906.2" y="131.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="909.2" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.04%)</title><rect x="906.2" y="115.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="909.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.04%)</title><rect x="906.2" y="99.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="909.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (14 samples, 0.53%)</title><rect x="906.7" y="131.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="909.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (14 samples, 0.53%)</title><rect x="906.7" y="115.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="909.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (14 samples, 0.53%)</title><rect x="906.7" y="99.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="909.7" y="110.0"></text>
</g>
<g>
<title>__pread (13 samples, 0.49%)</title><rect x="907.1" y="83.0" width="5.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="910.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="912.9" y="131.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.9" y="142.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="912.9" y="115.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="915.9" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.04%)</title><rect x="912.9" y="99.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="915.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.04%)</title><rect x="912.9" y="83.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="915.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.04%)</title><rect x="913.3" y="147.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="916.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.04%)</title><rect x="913.3" y="131.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="916.3" y="142.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.04%)</title><rect x="913.8" y="243.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="916.8" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.04%)</title><rect x="913.8" y="227.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="916.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.04%)</title><rect x="913.8" y="211.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="916.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.04%)</title><rect x="913.8" y="195.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="916.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.04%)</title><rect x="913.8" y="179.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="916.8" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="913.8" y="163.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="916.8" y="174.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (344 samples, 12.97%)</title><rect x="914.2" y="371.0" width="153.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.2" y="382.0">java/util/Collectio..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (343 samples, 12.93%)</title><rect x="914.2" y="355.0" width="152.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="917.2" y="366.0">java/lang/Iterable...</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.hasNext (1 samples, 0.04%)</title><rect x="914.2" y="339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="917.2" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.hasNext (1 samples, 0.04%)</title><rect x="914.2" y="323.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="917.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (342 samples, 12.89%)</title><rect x="914.7" y="339.0" width="152.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="917.7" y="350.0">ru/mail/polis/dao/i..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (342 samples, 12.89%)</title><rect x="914.7" y="323.0" width="152.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="917.7" y="334.0">ru/mail/polis/dao/i..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (342 samples, 12.89%)</title><rect x="914.7" y="307.0" width="152.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="917.7" y="318.0">ru/mail/polis/dao/i..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (342 samples, 12.89%)</title><rect x="914.7" y="291.0" width="152.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="917.7" y="302.0">ru/mail/polis/dao/i..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (342 samples, 12.89%)</title><rect x="914.7" y="275.0" width="152.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="917.7" y="286.0">ru/mail/polis/dao/i..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.26%)</title><rect x="914.7" y="259.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="917.7" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.26%)</title><rect x="914.7" y="243.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="917.7" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="917.4" y="227.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="920.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (335 samples, 12.63%)</title><rect x="917.8" y="259.0" width="149.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="920.8" y="270.0">ru/mail/polis/dao/i..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="918.7" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="921.7" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="918.7" y="227.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="921.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="918.7" y="211.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="921.7" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.23%)</title><rect x="919.1" y="243.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="922.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.23%)</title><rect x="919.1" y="227.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="922.1" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.23%)</title><rect x="919.1" y="211.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="922.1" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.19%)</title><rect x="919.6" y="195.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.15%)</title><rect x="920.0" y="179.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="923.0" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.08%)</title><rect x="920.0" y="163.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="923.0" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.08%)</title><rect x="920.0" y="147.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="923.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="920.5" y="131.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="923.5" y="142.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.08%)</title><rect x="920.9" y="163.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="923.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (115 samples, 4.33%)</title><rect x="921.8" y="243.0" width="51.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="924.8" y="254.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.15%)</title><rect x="921.8" y="227.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="924.8" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="921.8" y="211.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="924.8" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="921.8" y="195.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="924.8" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="922.7" y="179.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="925.7" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.08%)</title><rect x="922.7" y="163.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="925.7" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.08%)</title><rect x="922.7" y="147.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="925.7" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.08%)</title><rect x="922.7" y="131.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="925.7" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.53%)</title><rect x="923.6" y="227.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="926.6" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.45%)</title><rect x="924.5" y="211.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="927.5" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.45%)</title><rect x="924.5" y="195.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="927.5" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.26%)</title><rect x="926.7" y="179.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="929.7" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.19%)</title><rect x="927.6" y="163.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="930.6" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.19%)</title><rect x="927.6" y="147.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="930.6" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.19%)</title><rect x="927.6" y="131.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="930.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (97 samples, 3.66%)</title><rect x="929.8" y="227.0" width="43.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="932.8" y="238.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (96 samples, 3.62%)</title><rect x="930.2" y="211.0" width="42.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="933.2" y="222.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (94 samples, 3.54%)</title><rect x="930.7" y="195.0" width="41.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="933.7" y="206.0">sun..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.19%)</title><rect x="931.1" y="179.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="934.1" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.19%)</title><rect x="931.1" y="163.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="934.1" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.08%)</title><rect x="932.5" y="147.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="935.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (75 samples, 2.83%)</title><rect x="933.4" y="179.0" width="33.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="936.4" y="190.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (75 samples, 2.83%)</title><rect x="933.4" y="163.0" width="33.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="936.4" y="174.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (75 samples, 2.83%)</title><rect x="933.4" y="147.0" width="33.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="936.4" y="158.0">su..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.04%)</title><rect x="933.4" y="131.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="936.4" y="142.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.04%)</title><rect x="933.4" y="115.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="936.4" y="126.0"></text>
</g>
<g>
<title>__pread (64 samples, 2.41%)</title><rect x="933.8" y="131.0" width="28.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="936.8" y="142.0">__..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.11%)</title><rect x="962.3" y="131.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="965.3" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.19%)</title><rect x="963.6" y="131.0" width="2.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="966.6" y="142.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.08%)</title><rect x="965.8" y="131.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="968.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.19%)</title><rect x="966.7" y="179.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="969.7" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.19%)</title><rect x="966.7" y="163.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="969.7" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.19%)</title><rect x="966.7" y="147.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="969.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (5 samples, 0.19%)</title><rect x="966.7" y="131.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="969.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (8 samples, 0.30%)</title><rect x="968.9" y="179.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="971.9" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.30%)</title><rect x="968.9" y="163.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="971.9" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (8 samples, 0.30%)</title><rect x="968.9" y="147.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (8 samples, 0.30%)</title><rect x="968.9" y="131.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="971.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.04%)</title><rect x="972.5" y="195.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="975.5" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.04%)</title><rect x="972.5" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="975.5" y="190.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="972.5" y="163.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="975.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (211 samples, 7.95%)</title><rect x="972.9" y="243.0" width="93.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="975.9" y="254.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (211 samples, 7.95%)</title><rect x="972.9" y="227.0" width="93.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="975.9" y="238.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (9 samples, 0.34%)</title><rect x="973.8" y="211.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="976.8" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (9 samples, 0.34%)</title><rect x="973.8" y="195.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="976.8" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel$1.&lt;init&gt; (1 samples, 0.04%)</title><rect x="976.1" y="179.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="979.1" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.08%)</title><rect x="976.5" y="179.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="979.5" y="190.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.08%)</title><rect x="976.5" y="163.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="979.5" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.08%)</title><rect x="976.5" y="147.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="979.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.04%)</title><rect x="977.4" y="179.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="980.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (5 samples, 0.19%)</title><rect x="977.8" y="211.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="980.8" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (4 samples, 0.15%)</title><rect x="978.3" y="195.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="981.3" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.15%)</title><rect x="978.3" y="179.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.3" y="190.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.04%)</title><rect x="979.6" y="163.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="982.6" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.04%)</title><rect x="979.6" y="147.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="982.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOStatus.normalize (1 samples, 0.04%)</title><rect x="980.1" y="211.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="983.1" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (176 samples, 6.63%)</title><rect x="980.5" y="211.0" width="78.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="983.5" y="222.0">sun/nio/c..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (13 samples, 0.49%)</title><rect x="981.0" y="195.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="984.0" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (11 samples, 0.41%)</title><rect x="981.8" y="179.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="984.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.11%)</title><rect x="984.5" y="163.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="987.5" y="174.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.04%)</title><rect x="985.8" y="163.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="988.8" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="985.8" y="147.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="988.8" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="985.8" y="131.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="988.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.04%)</title><rect x="986.3" y="163.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="989.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.04%)</title><rect x="986.3" y="147.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="989.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.04%)</title><rect x="986.3" y="131.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="989.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.04%)</title><rect x="986.3" y="115.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="989.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (148 samples, 5.58%)</title><rect x="986.7" y="195.0" width="65.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="989.7" y="206.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (148 samples, 5.58%)</title><rect x="986.7" y="179.0" width="65.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="989.7" y="190.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (148 samples, 5.58%)</title><rect x="986.7" y="163.0" width="65.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="989.7" y="174.0">sun/nio..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.04%)</title><rect x="989.8" y="147.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="992.8" y="158.0"></text>
</g>
<g>
<title>__pread (129 samples, 4.86%)</title><rect x="990.3" y="147.0" width="57.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="993.3" y="158.0">__pread</text>
</g>
<g>
<title>__pthread_disable_asynccancel (9 samples, 0.34%)</title><rect x="1047.7" y="147.0" width="4.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1050.7" y="158.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.08%)</title><rect x="1051.7" y="147.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1054.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.30%)</title><rect x="1052.6" y="195.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1055.6" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.30%)</title><rect x="1052.6" y="179.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1055.6" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (8 samples, 0.30%)</title><rect x="1052.6" y="163.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1055.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (8 samples, 0.30%)</title><rect x="1052.6" y="147.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1055.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (6 samples, 0.23%)</title><rect x="1056.1" y="195.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1059.1" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.23%)</title><rect x="1056.1" y="179.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1059.1" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (6 samples, 0.23%)</title><rect x="1056.1" y="163.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1059.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (6 samples, 0.23%)</title><rect x="1056.1" y="147.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1059.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (17 samples, 0.64%)</title><rect x="1058.8" y="211.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1061.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (7 samples, 0.26%)</title><rect x="1063.2" y="195.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1066.2" y="206.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.04%)</title><rect x="1065.9" y="179.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1068.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.04%)</title><rect x="1066.4" y="211.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1066.8" y="355.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1069.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (1 samples, 0.04%)</title><rect x="1066.8" y="339.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1069.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (1 samples, 0.04%)</title><rect x="1066.8" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1069.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.04%)</title><rect x="1066.8" y="307.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1069.8" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="1066.8" y="291.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1069.8" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="1066.8" y="275.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1069.8" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap.entrySet (1 samples, 0.04%)</title><rect x="1066.8" y="259.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1069.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.19%)</title><rect x="1067.2" y="371.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1070.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.19%)</title><rect x="1067.2" y="355.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1070.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.19%)</title><rect x="1067.2" y="339.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1070.2" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.08%)</title><rect x="1067.2" y="323.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1070.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.08%)</title><rect x="1067.2" y="307.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1070.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2 samples, 0.08%)</title><rect x="1067.2" y="291.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1070.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.08%)</title><rect x="1067.2" y="275.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1070.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.08%)</title><rect x="1067.2" y="259.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1070.2" y="270.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.08%)</title><rect x="1067.2" y="243.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1070.2" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.08%)</title><rect x="1067.2" y="227.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1070.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.08%)</title><rect x="1067.2" y="211.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1070.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.08%)</title><rect x="1067.2" y="195.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1070.2" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.08%)</title><rect x="1067.2" y="179.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1070.2" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.04%)</title><rect x="1067.2" y="163.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1070.2" y="174.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="1067.7" y="163.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1070.7" y="174.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.11%)</title><rect x="1068.1" y="323.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1071.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.11%)</title><rect x="1068.1" y="307.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1071.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3 samples, 0.11%)</title><rect x="1068.1" y="291.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1071.1" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 0.11%)</title><rect x="1068.1" y="275.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1071.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.11%)</title><rect x="1068.1" y="259.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1071.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.11%)</title><rect x="1068.1" y="243.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1071.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.11%)</title><rect x="1068.1" y="227.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1071.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.11%)</title><rect x="1068.1" y="211.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1071.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.11%)</title><rect x="1068.1" y="195.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1071.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (3 samples, 0.11%)</title><rect x="1068.1" y="179.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1071.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.04%)</title><rect x="1068.1" y="163.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1071.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.04%)</title><rect x="1068.1" y="147.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1071.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.04%)</title><rect x="1068.1" y="131.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1071.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.04%)</title><rect x="1068.1" y="115.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1071.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.04%)</title><rect x="1068.1" y="99.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1071.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.04%)</title><rect x="1068.1" y="83.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1071.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="1068.1" y="67.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1071.1" y="78.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.04%)</title><rect x="1068.1" y="51.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1071.1" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.08%)</title><rect x="1068.6" y="163.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1071.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.08%)</title><rect x="1068.6" y="147.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1071.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.08%)</title><rect x="1068.6" y="131.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1071.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.08%)</title><rect x="1068.6" y="115.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1071.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.08%)</title><rect x="1068.6" y="99.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1071.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.08%)</title><rect x="1068.6" y="83.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1071.6" y="94.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.08%)</title><rect x="1068.6" y="67.0" width="0.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1071.6" y="78.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.08%)</title><rect x="1069.5" y="531.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1072.5" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.08%)</title><rect x="1069.5" y="515.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1072.5" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.04%)</title><rect x="1069.9" y="499.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1072.9" y="510.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.04%)</title><rect x="1069.9" y="483.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1072.9" y="494.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=6993] (266 samples, 10.03%)</title><rect x="1070.4" y="595.0" width="118.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1073.4" y="606.0">[NIO Selector ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (266 samples, 10.03%)</title><rect x="1070.4" y="579.0" width="118.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1073.4" y="590.0">one/nio/server..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.08%)</title><rect x="1070.4" y="563.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1073.4" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.08%)</title><rect x="1070.4" y="547.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1073.4" y="558.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.04%)</title><rect x="1070.4" y="531.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1073.4" y="542.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="1070.8" y="531.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1073.8" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (264 samples, 9.95%)</title><rect x="1071.2" y="563.0" width="117.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1074.2" y="574.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (263 samples, 9.91%)</title><rect x="1071.7" y="547.0" width="117.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1074.7" y="558.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (263 samples, 9.91%)</title><rect x="1071.7" y="531.0" width="117.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1074.7" y="542.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (263 samples, 9.91%)</title><rect x="1071.7" y="515.0" width="117.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1074.7" y="526.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (263 samples, 9.91%)</title><rect x="1071.7" y="499.0" width="117.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1074.7" y="510.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (263 samples, 9.91%)</title><rect x="1071.7" y="483.0" width="117.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1074.7" y="494.0">RequestHandler..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (263 samples, 9.91%)</title><rect x="1071.7" y="467.0" width="117.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1074.7" y="478.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (263 samples, 9.91%)</title><rect x="1071.7" y="451.0" width="117.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1074.7" y="462.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (263 samples, 9.91%)</title><rect x="1071.7" y="435.0" width="117.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1074.7" y="446.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (5 samples, 0.19%)</title><rect x="1071.7" y="419.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1074.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (5 samples, 0.19%)</title><rect x="1071.7" y="403.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1074.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (5 samples, 0.19%)</title><rect x="1071.7" y="387.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1074.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (5 samples, 0.19%)</title><rect x="1071.7" y="371.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1074.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.19%)</title><rect x="1071.7" y="355.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1074.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.19%)</title><rect x="1071.7" y="339.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1074.7" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.04%)</title><rect x="1071.7" y="323.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1074.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.04%)</title><rect x="1071.7" y="307.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1074.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.04%)</title><rect x="1071.7" y="291.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1074.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.04%)</title><rect x="1071.7" y="275.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1074.7" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.15%)</title><rect x="1072.1" y="323.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1075.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.15%)</title><rect x="1072.1" y="307.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1075.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.15%)</title><rect x="1072.1" y="291.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1075.1" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.15%)</title><rect x="1072.1" y="275.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1075.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.15%)</title><rect x="1072.1" y="259.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1075.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.15%)</title><rect x="1072.1" y="243.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1075.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4 samples, 0.15%)</title><rect x="1072.1" y="227.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1075.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (4 samples, 0.15%)</title><rect x="1072.1" y="211.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1075.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (4 samples, 0.15%)</title><rect x="1072.1" y="195.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1075.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (4 samples, 0.15%)</title><rect x="1072.1" y="179.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1075.1" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.15%)</title><rect x="1072.1" y="163.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1075.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.15%)</title><rect x="1072.1" y="147.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1075.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.04%)</title><rect x="1072.1" y="131.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1075.1" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.04%)</title><rect x="1072.1" y="115.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1075.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.08%)</title><rect x="1072.6" y="131.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1075.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.08%)</title><rect x="1072.6" y="115.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1075.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.08%)</title><rect x="1072.6" y="99.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1075.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.08%)</title><rect x="1072.6" y="83.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1075.6" y="94.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.08%)</title><rect x="1072.6" y="67.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1075.6" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.04%)</title><rect x="1073.5" y="131.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1076.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (258 samples, 9.72%)</title><rect x="1073.9" y="419.0" width="114.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1076.9" y="430.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (258 samples, 9.72%)</title><rect x="1073.9" y="403.0" width="114.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1076.9" y="414.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (257 samples, 9.69%)</title><rect x="1073.9" y="387.0" width="114.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1076.9" y="398.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (21 samples, 0.79%)</title><rect x="1073.9" y="371.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1076.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (21 samples, 0.79%)</title><rect x="1073.9" y="355.0" width="9.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1076.9" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (21 samples, 0.79%)</title><rect x="1073.9" y="339.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1076.9" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (21 samples, 0.79%)</title><rect x="1073.9" y="323.0" width="9.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (21 samples, 0.79%)</title><rect x="1073.9" y="307.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1076.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (21 samples, 0.79%)</title><rect x="1073.9" y="291.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1076.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 0.79%)</title><rect x="1073.9" y="275.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1076.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 0.79%)</title><rect x="1073.9" y="259.0" width="9.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1076.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (21 samples, 0.79%)</title><rect x="1073.9" y="243.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1076.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (20 samples, 0.75%)</title><rect x="1074.4" y="227.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1077.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (20 samples, 0.75%)</title><rect x="1074.4" y="211.0" width="8.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1077.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (20 samples, 0.75%)</title><rect x="1074.4" y="195.0" width="8.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1077.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (5 samples, 0.19%)</title><rect x="1074.4" y="179.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1077.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.19%)</title><rect x="1074.4" y="163.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1077.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.19%)</title><rect x="1074.4" y="147.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1077.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.19%)</title><rect x="1074.4" y="131.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1077.4" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.08%)</title><rect x="1074.4" y="115.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1077.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.08%)</title><rect x="1074.4" y="99.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1077.4" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.04%)</title><rect x="1074.8" y="83.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1077.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.04%)</title><rect x="1074.8" y="67.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1077.8" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.11%)</title><rect x="1075.2" y="115.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1078.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.11%)</title><rect x="1075.2" y="99.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1078.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.11%)</title><rect x="1075.2" y="83.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1078.2" y="94.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.11%)</title><rect x="1075.2" y="67.0" width="1.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1078.2" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (15 samples, 0.57%)</title><rect x="1076.6" y="179.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1079.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (15 samples, 0.57%)</title><rect x="1076.6" y="163.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1079.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (13 samples, 0.49%)</title><rect x="1076.6" y="147.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1079.6" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.04%)</title><rect x="1077.0" y="131.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1080.0" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.04%)</title><rect x="1077.0" y="115.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1080.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.04%)</title><rect x="1077.0" y="99.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1080.0" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (10 samples, 0.38%)</title><rect x="1077.5" y="131.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1080.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (10 samples, 0.38%)</title><rect x="1077.5" y="115.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1080.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (10 samples, 0.38%)</title><rect x="1077.5" y="99.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1080.5" y="110.0"></text>
</g>
<g>
<title>__pread (8 samples, 0.30%)</title><rect x="1077.9" y="83.0" width="3.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1080.9" y="94.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="1081.5" y="83.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1084.5" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="1081.9" y="131.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1084.9" y="142.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="1081.9" y="115.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1084.9" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.04%)</title><rect x="1081.9" y="99.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1084.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.04%)</title><rect x="1081.9" y="83.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1084.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.08%)</title><rect x="1082.4" y="147.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1085.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.04%)</title><rect x="1082.8" y="131.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1085.8" y="142.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (233 samples, 8.78%)</title><rect x="1083.3" y="371.0" width="103.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1086.3" y="382.0">java/util/Co..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (233 samples, 8.78%)</title><rect x="1083.3" y="355.0" width="103.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1086.3" y="366.0">java/lang/It..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (233 samples, 8.78%)</title><rect x="1083.3" y="339.0" width="103.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1086.3" y="350.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (233 samples, 8.78%)</title><rect x="1083.3" y="323.0" width="103.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1086.3" y="334.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (233 samples, 8.78%)</title><rect x="1083.3" y="307.0" width="103.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1086.3" y="318.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (233 samples, 8.78%)</title><rect x="1083.3" y="291.0" width="103.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1086.3" y="302.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (233 samples, 8.78%)</title><rect x="1083.3" y="275.0" width="103.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1086.3" y="286.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.08%)</title><rect x="1083.3" y="259.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1086.3" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.08%)</title><rect x="1083.3" y="243.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1086.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (231 samples, 8.71%)</title><rect x="1084.1" y="259.0" width="102.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1087.1" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.19%)</title><rect x="1084.6" y="243.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1087.6" y="254.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="1084.6" y="227.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1087.6" y="238.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="1084.6" y="211.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1087.6" y="222.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="1084.6" y="195.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1087.6" y="206.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="1084.6" y="179.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1087.6" y="190.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="1084.6" y="163.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1087.6" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="1085.0" y="227.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1088.0" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="1085.0" y="211.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1088.0" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="1085.9" y="195.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1088.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="1086.4" y="179.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1089.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (68 samples, 2.56%)</title><rect x="1086.8" y="243.0" width="30.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1089.8" y="254.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.30%)</title><rect x="1086.8" y="227.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1089.8" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.26%)</title><rect x="1087.3" y="211.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1090.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.26%)</title><rect x="1087.3" y="195.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1090.3" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.19%)</title><rect x="1088.1" y="179.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1091.1" y="190.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1088.1" y="163.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1091.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="1088.1" y="147.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1091.1" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.15%)</title><rect x="1088.6" y="163.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1091.6" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.15%)</title><rect x="1088.6" y="147.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1091.6" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.15%)</title><rect x="1088.6" y="131.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1091.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (59 samples, 2.22%)</title><rect x="1090.4" y="227.0" width="26.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1093.4" y="238.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (59 samples, 2.22%)</title><rect x="1090.4" y="211.0" width="26.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1093.4" y="222.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.04%)</title><rect x="1090.8" y="195.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1093.8" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.04%)</title><rect x="1090.8" y="179.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1093.8" y="190.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.04%)</title><rect x="1090.8" y="163.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1093.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (56 samples, 2.11%)</title><rect x="1091.3" y="195.0" width="24.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1094.3" y="206.0">s..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.11%)</title><rect x="1091.3" y="179.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1094.3" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="1091.3" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1094.3" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="1091.3" y="147.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1094.3" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.08%)</title><rect x="1091.7" y="163.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1094.7" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.04%)</title><rect x="1092.1" y="147.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1095.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (48 samples, 1.81%)</title><rect x="1092.6" y="179.0" width="21.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1095.6" y="190.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (48 samples, 1.81%)</title><rect x="1092.6" y="163.0" width="21.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.6" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (48 samples, 1.81%)</title><rect x="1092.6" y="147.0" width="21.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1095.6" y="158.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (3 samples, 0.11%)</title><rect x="1095.3" y="131.0" width="1.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1098.3" y="142.0"></text>
</g>
<g>
<title>__pread (37 samples, 1.39%)</title><rect x="1096.6" y="131.0" width="16.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1099.6" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.08%)</title><rect x="1113.1" y="131.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1116.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.08%)</title><rect x="1113.9" y="179.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1116.9" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.08%)</title><rect x="1113.9" y="163.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1116.9" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.08%)</title><rect x="1113.9" y="147.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1116.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.08%)</title><rect x="1113.9" y="131.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1116.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.11%)</title><rect x="1114.8" y="179.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1117.8" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.11%)</title><rect x="1114.8" y="163.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1117.8" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.11%)</title><rect x="1114.8" y="147.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.11%)</title><rect x="1114.8" y="131.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1117.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.04%)</title><rect x="1116.2" y="195.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1119.2" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.04%)</title><rect x="1116.2" y="179.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1119.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="1116.6" y="227.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1119.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (156 samples, 5.88%)</title><rect x="1117.1" y="243.0" width="69.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1120.1" y="254.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (156 samples, 5.88%)</title><rect x="1117.1" y="227.0" width="69.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.1" y="238.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (6 samples, 0.23%)</title><rect x="1117.5" y="211.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.5" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (6 samples, 0.23%)</title><rect x="1117.5" y="195.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1120.5" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.11%)</title><rect x="1118.8" y="179.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1121.8" y="190.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.08%)</title><rect x="1119.3" y="163.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1122.3" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.08%)</title><rect x="1119.3" y="147.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1122.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOStatus.normalize (2 samples, 0.08%)</title><rect x="1120.2" y="211.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1123.2" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (139 samples, 5.24%)</title><rect x="1121.1" y="211.0" width="61.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1124.1" y="222.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.19%)</title><rect x="1121.9" y="195.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.9" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.19%)</title><rect x="1121.9" y="179.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1124.9" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.08%)</title><rect x="1121.9" y="163.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1124.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.11%)</title><rect x="1122.8" y="163.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1125.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.11%)</title><rect x="1122.8" y="147.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1125.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.08%)</title><rect x="1123.3" y="131.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1126.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (2 samples, 0.08%)</title><rect x="1123.3" y="115.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1126.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (2 samples, 0.08%)</title><rect x="1123.3" y="99.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1126.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (122 samples, 4.60%)</title><rect x="1124.2" y="195.0" width="54.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1127.2" y="206.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (122 samples, 4.60%)</title><rect x="1124.2" y="179.0" width="54.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1127.2" y="190.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (121 samples, 4.56%)</title><rect x="1124.6" y="163.0" width="53.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1127.6" y="174.0">sun/n..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.08%)</title><rect x="1127.7" y="147.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1130.7" y="158.0"></text>
</g>
<g>
<title>__pread (106 samples, 4.00%)</title><rect x="1128.6" y="147.0" width="47.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1131.6" y="158.0">__pr..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.08%)</title><rect x="1175.8" y="147.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1178.8" y="158.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.11%)</title><rect x="1176.7" y="147.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1179.7" y="158.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.04%)</title><rect x="1178.0" y="147.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1181.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.15%)</title><rect x="1178.4" y="195.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1181.4" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.15%)</title><rect x="1178.4" y="179.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1181.4" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.15%)</title><rect x="1178.4" y="163.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1181.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (4 samples, 0.15%)</title><rect x="1178.4" y="147.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1181.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (6 samples, 0.23%)</title><rect x="1180.2" y="195.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1183.2" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.23%)</title><rect x="1180.2" y="179.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1183.2" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (6 samples, 0.23%)</title><rect x="1180.2" y="163.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1183.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (6 samples, 0.23%)</title><rect x="1180.2" y="147.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1183.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (8 samples, 0.30%)</title><rect x="1182.9" y="211.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1185.9" y="222.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="1186.0" y="195.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.0" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.04%)</title><rect x="1186.0" y="179.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.0" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.04%)</title><rect x="1186.0" y="163.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="1186.4" y="243.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1189.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.11%)</title><rect x="1186.9" y="371.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1189.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.11%)</title><rect x="1186.9" y="355.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1189.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.11%)</title><rect x="1186.9" y="339.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1189.9" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.04%)</title><rect x="1186.9" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1189.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.04%)</title><rect x="1186.9" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1189.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.04%)</title><rect x="1186.9" y="291.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1189.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.04%)</title><rect x="1186.9" y="275.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1189.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.04%)</title><rect x="1186.9" y="259.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1189.9" y="270.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.04%)</title><rect x="1186.9" y="243.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1189.9" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.04%)</title><rect x="1186.9" y="227.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1189.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.04%)</title><rect x="1186.9" y="211.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1189.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.04%)</title><rect x="1186.9" y="195.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1189.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="1186.9" y="179.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1189.9" y="190.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="1186.9" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1189.9" y="174.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2 samples, 0.08%)</title><rect x="1187.3" y="323.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2 samples, 0.08%)</title><rect x="1187.3" y="307.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1190.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2 samples, 0.08%)</title><rect x="1187.3" y="291.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1190.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2 samples, 0.08%)</title><rect x="1187.3" y="275.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1190.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.08%)</title><rect x="1187.3" y="259.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1190.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.08%)</title><rect x="1187.3" y="243.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1190.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2 samples, 0.08%)</title><rect x="1187.3" y="227.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (2 samples, 0.08%)</title><rect x="1187.3" y="211.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (2 samples, 0.08%)</title><rect x="1187.3" y="195.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1190.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (2 samples, 0.08%)</title><rect x="1187.3" y="179.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1190.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.04%)</title><rect x="1187.3" y="163.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1190.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.04%)</title><rect x="1187.3" y="147.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1190.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.04%)</title><rect x="1187.3" y="131.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1190.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.04%)</title><rect x="1187.3" y="115.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1190.3" y="126.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="1187.3" y="99.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.3" y="110.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.04%)</title><rect x="1187.3" y="83.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.3" y="94.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="1187.3" y="67.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1190.3" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.04%)</title><rect x="1187.8" y="163.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1190.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.04%)</title><rect x="1187.8" y="147.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1190.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.04%)</title><rect x="1187.8" y="131.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1190.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.04%)</title><rect x="1187.8" y="115.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1190.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.04%)</title><rect x="1187.8" y="99.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1190.8" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.04%)</title><rect x="1187.8" y="83.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1190.8" y="94.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.04%)</title><rect x="1187.8" y="67.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1190.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (1 samples, 0.04%)</title><rect x="1188.2" y="387.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1191.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (1 samples, 0.04%)</title><rect x="1188.2" y="371.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1188.2" y="355.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1188.2" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (1 samples, 0.04%)</title><rect x="1188.2" y="323.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1191.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (1 samples, 0.04%)</title><rect x="1188.2" y="307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1191.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (1 samples, 0.04%)</title><rect x="1188.2" y="291.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1191.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.04%)</title><rect x="1188.2" y="275.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1191.2" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="1188.2" y="259.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1191.2" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="1188.2" y="243.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.2" y="254.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="1188.2" y="227.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.2" y="238.0"></text>
</g>
<g>
<title>[RMI TCP Connection(4)-127.0.0.1 tid=8426] (3 samples, 0.11%)</title><rect x="1188.7" y="595.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1191.7" y="606.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.11%)</title><rect x="1188.7" y="579.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.11%)</title><rect x="1188.7" y="563.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1191.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.11%)</title><rect x="1188.7" y="547.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1191.7" y="558.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (3 samples, 0.11%)</title><rect x="1188.7" y="531.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1191.7" y="542.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.11%)</title><rect x="1188.7" y="515.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1191.7" y="526.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$93/1386574298.run (3 samples, 0.11%)</title><rect x="1188.7" y="499.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.7" y="510.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (3 samples, 0.11%)</title><rect x="1188.7" y="483.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1191.7" y="494.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (3 samples, 0.11%)</title><rect x="1188.7" y="467.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1191.7" y="478.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (3 samples, 0.11%)</title><rect x="1188.7" y="451.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1191.7" y="462.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (2 samples, 0.08%)</title><rect x="1188.7" y="435.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1191.7" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.08%)</title><rect x="1188.7" y="419.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1191.7" y="430.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (2 samples, 0.08%)</title><rect x="1188.7" y="403.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1191.7" y="414.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (2 samples, 0.08%)</title><rect x="1188.7" y="387.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1191.7" y="398.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (2 samples, 0.08%)</title><rect x="1188.7" y="371.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.7" y="382.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.04%)</title><rect x="1188.7" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1191.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (1 samples, 0.04%)</title><rect x="1188.7" y="339.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1191.7" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.04%)</title><rect x="1189.1" y="355.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1192.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.04%)</title><rect x="1189.1" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1192.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (1 samples, 0.04%)</title><rect x="1189.1" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1192.1" y="334.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (1 samples, 0.04%)</title><rect x="1189.1" y="307.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1192.1" y="318.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (1 samples, 0.04%)</title><rect x="1189.1" y="291.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.1" y="302.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (1 samples, 0.04%)</title><rect x="1189.1" y="275.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1192.1" y="286.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (1 samples, 0.04%)</title><rect x="1189.1" y="259.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1192.1" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.04%)</title><rect x="1189.1" y="243.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1192.1" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.04%)</title><rect x="1189.1" y="227.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1192.1" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.04%)</title><rect x="1189.1" y="211.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1192.1" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (1 samples, 0.04%)</title><rect x="1189.1" y="195.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1192.1" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.04%)</title><rect x="1189.1" y="179.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.1" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.04%)</title><rect x="1189.1" y="163.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1192.1" y="174.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.resolveClass (1 samples, 0.04%)</title><rect x="1189.1" y="147.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1192.1" y="158.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.latestUserDefinedLoader (1 samples, 0.04%)</title><rect x="1189.1" y="131.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.latestUserDefinedLoader (1 samples, 0.04%)</title><rect x="1189.1" y="115.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1192.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.latestUserDefinedLoader0 (1 samples, 0.04%)</title><rect x="1189.1" y="99.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1192.1" y="110.0"></text>
</g>
<g>
<title>JVM_LatestUserDefinedLoader (1 samples, 0.04%)</title><rect x="1189.1" y="83.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1192.1" y="94.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (1 samples, 0.04%)</title><rect x="1189.1" y="67.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.1" y="78.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPConnection.releaseOutputStream (1 samples, 0.04%)</title><rect x="1189.6" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1192.6" y="446.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.04%)</title><rect x="1189.6" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1192.6" y="430.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.04%)</title><rect x="1189.6" y="403.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1192.6" y="414.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.write (1 samples, 0.04%)</title><rect x="1189.6" y="387.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1192.6" y="398.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite (1 samples, 0.04%)</title><rect x="1189.6" y="371.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1192.6" y="382.0"></text>
</g>
</g>
</svg>
