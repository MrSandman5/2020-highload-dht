<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="501"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="501"> </text>
<g id="frames">
<g>
<title>all (72 samples, 100.00%)</title><rect x="10.0" y="467.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="478.0">all</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 1.39%)</title><rect x="10.0" y="451.0" width="16.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 1.39%)</title><rect x="10.0" y="435.0" width="16.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 1.39%)</title><rect x="10.0" y="419.0" width="16.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.run (50 samples, 69.44%)</title><rect x="26.4" y="451.0" width="819.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="29.4" y="462.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (50 samples, 69.44%)</title><rect x="26.4" y="435.0" width="819.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="29.4" y="446.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (50 samples, 69.44%)</title><rect x="26.4" y="419.0" width="819.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="29.4" y="430.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 2.78%)</title><rect x="26.4" y="403.0" width="32.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="29.4" y="414.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 2.78%)</title><rect x="26.4" y="387.0" width="32.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.4" y="398.0">ja..</text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 1.39%)</title><rect x="26.4" y="371.0" width="16.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="29.4" y="382.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 1.39%)</title><rect x="26.4" y="355.0" width="16.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="29.4" y="366.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 1.39%)</title><rect x="42.8" y="371.0" width="16.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="45.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (13 samples, 18.06%)</title><rect x="59.2" y="403.0" width="213.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.2" y="414.0">java/util/concurrent/ThreadP..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (13 samples, 18.06%)</title><rect x="59.2" y="387.0" width="213.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.2" y="398.0">java/util/concurrent/Synchro..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (13 samples, 18.06%)</title><rect x="59.2" y="371.0" width="213.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="62.2" y="382.0">java/util/concurrent/Synchro..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (7 samples, 9.72%)</title><rect x="75.6" y="355.0" width="114.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.6" y="366.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (7 samples, 9.72%)</title><rect x="75.6" y="339.0" width="114.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.6" y="350.0">java/util/conc..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 9.72%)</title><rect x="75.6" y="323.0" width="114.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.6" y="334.0">jdk/internal/m..</text>
</g>
<g>
<title>Unsafe_Park (4 samples, 5.56%)</title><rect x="91.9" y="307.0" width="65.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="94.9" y="318.0">Unsafe_..</text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 2.78%)</title><rect x="91.9" y="291.0" width="32.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="94.9" y="302.0">Pa..</text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 1.39%)</title><rect x="124.7" y="291.0" width="16.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="127.7" y="302.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 1.39%)</title><rect x="141.1" y="291.0" width="16.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="144.1" y="302.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 2.78%)</title><rect x="157.5" y="307.0" width="32.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="160.5" y="318.0">[u..</text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (2 samples, 2.78%)</title><rect x="157.5" y="291.0" width="32.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="160.5" y="302.0">pt..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (3 samples, 4.17%)</title><rect x="190.3" y="355.0" width="49.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="193.3" y="366.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (2 samples, 2.78%)</title><rect x="239.4" y="355.0" width="32.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="242.4" y="366.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 1.39%)</title><rect x="272.2" y="403.0" width="16.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="275.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$71/911420605.run (26 samples, 36.11%)</title><rect x="288.6" y="403.0" width="426.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="291.6" y="414.0">ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$71/91..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replicasPut$7 (26 samples, 36.11%)</title><rect x="288.6" y="387.0" width="426.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="291.6" y="398.0">ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replic..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (1 samples, 1.39%)</title><rect x="288.6" y="371.0" width="16.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="291.6" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 1.39%)</title><rect x="288.6" y="355.0" width="16.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="291.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 1.39%)</title><rect x="288.6" y="339.0" width="16.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="291.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 1.39%)</title><rect x="288.6" y="323.0" width="16.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="291.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 1.39%)</title><rect x="288.6" y="307.0" width="16.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="291.6" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (1 samples, 1.39%)</title><rect x="288.6" y="291.0" width="16.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 1.39%)</title><rect x="288.6" y="275.0" width="16.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="291.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (1 samples, 1.39%)</title><rect x="288.6" y="259.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$82/356018038.accept (1 samples, 1.39%)</title><rect x="288.6" y="243.0" width="16.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.6" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 1.39%)</title><rect x="288.6" y="227.0" width="16.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="291.6" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 1.39%)</title><rect x="288.6" y="211.0" width="16.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="291.6" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 1.39%)</title><rect x="288.6" y="195.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.6" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 1.39%)</title><rect x="288.6" y="179.0" width="16.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="291.6" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 1.39%)</title><rect x="288.6" y="163.0" width="16.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.replication (24 samples, 33.33%)</title><rect x="305.0" y="371.0" width="393.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.0" y="382.0">ru/mail/polis/service/mrsandman5/ServiceImpl.replication</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (19 samples, 26.39%)</title><rect x="305.0" y="355.0" width="311.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="308.0" y="366.0">java/util/stream/ReferencePipeline.collect</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (17 samples, 23.61%)</title><rect x="337.8" y="339.0" width="278.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.8" y="350.0">java/util/stream/AbstractPipeline.eva..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (17 samples, 23.61%)</title><rect x="337.8" y="323.0" width="278.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.8" y="334.0">java/util/stream/ReduceOps$ReduceOp.e..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (17 samples, 23.61%)</title><rect x="337.8" y="307.0" width="278.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.8" y="318.0">java/util/stream/AbstractPipeline.wra..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (17 samples, 23.61%)</title><rect x="337.8" y="291.0" width="278.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.8" y="302.0">java/util/stream/AbstractPipeline.cop..</text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (17 samples, 23.61%)</title><rect x="337.8" y="275.0" width="278.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="340.8" y="286.0">java/util/HashMap$KeySpliterator.forE..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (17 samples, 23.61%)</title><rect x="337.8" y="259.0" width="278.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="340.8" y="270.0">java/util/stream/ReferencePipeline$3$..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$79/751199668.apply (17 samples, 23.61%)</title><rect x="337.8" y="243.0" width="278.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.8" y="254.0">ru/mail/polis/service/mrsandman5/Serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replication$0 (17 samples, 23.61%)</title><rect x="337.8" y="227.0" width="278.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="340.8" y="238.0">ru/mail/polis/service/mrsandman5/Serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$77/1326017910.act (4 samples, 5.56%)</title><rect x="337.8" y="211.0" width="65.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="340.8" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replicasPut$5 (4 samples, 5.56%)</title><rect x="337.8" y="195.0" width="65.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.8" y="206.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/SimpleRequests.put (4 samples, 5.56%)</title><rect x="337.8" y="179.0" width="65.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="340.8" y="190.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 1.39%)</title><rect x="337.8" y="163.0" width="16.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="340.8" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 1.39%)</title><rect x="337.8" y="147.0" width="16.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="340.8" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 1.39%)</title><rect x="337.8" y="131.0" width="16.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.8" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 1.39%)</title><rect x="337.8" y="115.0" width="16.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="340.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (3 samples, 4.17%)</title><rect x="354.2" y="163.0" width="49.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="357.2" y="174.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (3 samples, 4.17%)</title><rect x="354.2" y="147.0" width="49.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="357.2" y="158.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (3 samples, 4.17%)</title><rect x="354.2" y="131.0" width="49.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="357.2" y="142.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (3 samples, 4.17%)</title><rect x="354.2" y="115.0" width="49.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="357.2" y="126.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 4.17%)</title><rect x="354.2" y="99.0" width="49.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="357.2" y="110.0">java/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 4.17%)</title><rect x="354.2" y="83.0" width="49.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="357.2" y="94.0">java/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 4.17%)</title><rect x="354.2" y="67.0" width="49.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="357.2" y="78.0">java/..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 2.78%)</title><rect x="354.2" y="51.0" width="32.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="357.2" y="62.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 2.78%)</title><rect x="354.2" y="35.0" width="32.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="357.2" y="46.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compare (1 samples, 1.39%)</title><rect x="386.9" y="51.0" width="16.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="389.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.proxy (13 samples, 18.06%)</title><rect x="403.3" y="211.0" width="213.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="406.3" y="222.0">ru/mail/polis/service/mrsand..</text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 1.39%)</title><rect x="403.3" y="195.0" width="16.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="406.3" y="206.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 1.39%)</title><rect x="403.3" y="179.0" width="16.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="406.3" y="190.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 1.39%)</title><rect x="403.3" y="163.0" width="16.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="406.3" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 1.39%)</title><rect x="403.3" y="147.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="406.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (12 samples, 16.67%)</title><rect x="419.7" y="195.0" width="196.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="422.7" y="206.0">one/nio/http/HttpClient.in..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (12 samples, 16.67%)</title><rect x="419.7" y="179.0" width="196.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="422.7" y="190.0">one/nio/http/HttpClient.in..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (4 samples, 5.56%)</title><rect x="419.7" y="163.0" width="65.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.7" y="174.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 5.56%)</title><rect x="419.7" y="147.0" width="65.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="422.7" y="158.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 2.78%)</title><rect x="419.7" y="131.0" width="32.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="422.7" y="142.0">Ja..</text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 2.78%)</title><rect x="419.7" y="115.0" width="32.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="422.7" y="126.0">__..</text>
</g>
<g>
<title>__recv (2 samples, 2.78%)</title><rect x="452.5" y="131.0" width="32.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="455.5" y="142.0">__..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (2 samples, 2.78%)</title><rect x="485.3" y="163.0" width="32.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="488.3" y="174.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (1 samples, 1.39%)</title><rect x="501.7" y="147.0" width="16.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="504.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (3 samples, 4.17%)</title><rect x="518.1" y="163.0" width="49.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.1" y="174.0">one/n..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 4.17%)</title><rect x="518.1" y="147.0" width="49.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="521.1" y="158.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 2.78%)</title><rect x="518.1" y="131.0" width="32.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.1" y="142.0">on..</text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 2.78%)</title><rect x="518.1" y="115.0" width="32.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="521.1" y="126.0">ja..</text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 1.39%)</title><rect x="534.4" y="99.0" width="16.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.4" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 1.39%)</title><rect x="550.8" y="131.0" width="16.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="553.8" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 1.39%)</title><rect x="550.8" y="115.0" width="16.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="553.8" y="126.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 1.39%)</title><rect x="550.8" y="99.0" width="16.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.8" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 1.39%)</title><rect x="567.2" y="163.0" width="16.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="570.2" y="174.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 1.39%)</title><rect x="567.2" y="147.0" width="16.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.2" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 1.39%)</title><rect x="567.2" y="131.0" width="16.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="570.2" y="142.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (2 samples, 2.78%)</title><rect x="583.6" y="163.0" width="32.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="586.6" y="174.0">on..</text>
</g>
<g>
<title>__setsockopt (2 samples, 2.78%)</title><rect x="583.6" y="147.0" width="32.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="586.6" y="158.0">__..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/clustering/ConsistentHashingTopology.replicasFor (5 samples, 6.94%)</title><rect x="616.4" y="355.0" width="81.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.4" y="366.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (1 samples, 1.39%)</title><rect x="616.4" y="339.0" width="16.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="619.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (1 samples, 1.39%)</title><rect x="616.4" y="323.0" width="16.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (1 samples, 1.39%)</title><rect x="616.4" y="307.0" width="16.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="619.4" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 1.39%)</title><rect x="616.4" y="291.0" width="16.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="619.4" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 1.39%)</title><rect x="616.4" y="275.0" width="16.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="619.4" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 1.39%)</title><rect x="616.4" y="259.0" width="16.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="619.4" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 1.39%)</title><rect x="616.4" y="243.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="619.4" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 1.39%)</title><rect x="616.4" y="227.0" width="16.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="619.4" y="238.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (3 samples, 4.17%)</title><rect x="632.8" y="339.0" width="49.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.8" y="350.0">java/..</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (3 samples, 4.17%)</title><rect x="632.8" y="323.0" width="49.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="635.8" y="334.0">java/..</text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (2 samples, 2.78%)</title><rect x="632.8" y="307.0" width="32.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.8" y="318.0">ja..</text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (2 samples, 2.78%)</title><rect x="632.8" y="291.0" width="32.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.8" y="302.0">ja..</text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (2 samples, 2.78%)</title><rect x="632.8" y="275.0" width="32.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.8" y="286.0">ja..</text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 1.39%)</title><rect x="649.2" y="259.0" width="16.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="652.2" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (1 samples, 1.39%)</title><rect x="665.6" y="307.0" width="16.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="668.6" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.&lt;init&gt; (1 samples, 1.39%)</title><rect x="665.6" y="291.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="668.6" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$EntrySetView.&lt;init&gt; (1 samples, 1.39%)</title><rect x="665.6" y="275.0" width="16.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.6" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractSet.&lt;init&gt; (1 samples, 1.39%)</title><rect x="665.6" y="259.0" width="16.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="668.6" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 1.39%)</title><rect x="665.6" y="243.0" width="16.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.6" y="254.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 1.39%)</title><rect x="681.9" y="339.0" width="16.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.9" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 1.39%)</title><rect x="681.9" y="323.0" width="16.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="684.9" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 1.39%)</title><rect x="681.9" y="307.0" width="16.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="684.9" y="318.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 1.39%)</title><rect x="681.9" y="291.0" width="16.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="684.9" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 1.39%)</title><rect x="681.9" y="275.0" width="16.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="684.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendEmptyResponse (1 samples, 1.39%)</title><rect x="698.3" y="371.0" width="16.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (1 samples, 1.39%)</title><rect x="698.3" y="355.0" width="16.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="701.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 1.39%)</title><rect x="698.3" y="339.0" width="16.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 1.39%)</title><rect x="698.3" y="323.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.3" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 1.39%)</title><rect x="698.3" y="307.0" width="16.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="701.3" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 1.39%)</title><rect x="698.3" y="291.0" width="16.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="701.3" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 1.39%)</title><rect x="698.3" y="275.0" width="16.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.3" y="286.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 1.39%)</title><rect x="698.3" y="259.0" width="16.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="701.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$86/336669398.run (8 samples, 11.11%)</title><rect x="714.7" y="403.0" width="131.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="717.7" y="414.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$asyncExecute$12 (8 samples, 11.11%)</title><rect x="714.7" y="387.0" width="131.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.7" y="398.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$85/450287612.act (4 samples, 5.56%)</title><rect x="714.7" y="371.0" width="65.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="717.7" y="382.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replicasPut$4 (4 samples, 5.56%)</title><rect x="714.7" y="355.0" width="65.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="717.7" y="366.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/SimpleRequests.put (4 samples, 5.56%)</title><rect x="714.7" y="339.0" width="65.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="717.7" y="350.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (4 samples, 5.56%)</title><rect x="714.7" y="323.0" width="65.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="717.7" y="334.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (4 samples, 5.56%)</title><rect x="714.7" y="307.0" width="65.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="717.7" y="318.0">ru/mail..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (4 samples, 5.56%)</title><rect x="714.7" y="291.0" width="65.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.7" y="302.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (3 samples, 4.17%)</title><rect x="731.1" y="275.0" width="49.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="734.1" y="286.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (1 samples, 1.39%)</title><rect x="731.1" y="259.0" width="16.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 2.78%)</title><rect x="747.5" y="259.0" width="32.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="750.5" y="270.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 2.78%)</title><rect x="747.5" y="243.0" width="32.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="750.5" y="254.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 2.78%)</title><rect x="747.5" y="227.0" width="32.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.5" y="238.0">ja..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 1.39%)</title><rect x="747.5" y="211.0" width="16.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="750.5" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 1.39%)</title><rect x="747.5" y="195.0" width="16.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="750.5" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 1.39%)</title><rect x="747.5" y="179.0" width="16.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.5" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 1.39%)</title><rect x="763.9" y="211.0" width="16.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="766.9" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 1.39%)</title><rect x="763.9" y="195.0" width="16.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="766.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (4 samples, 5.56%)</title><rect x="780.3" y="371.0" width="65.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="783.3" y="382.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 5.56%)</title><rect x="780.3" y="355.0" width="65.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="783.3" y="366.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 4.17%)</title><rect x="780.3" y="339.0" width="49.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="783.3" y="350.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 1.39%)</title><rect x="780.3" y="323.0" width="16.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="783.3" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 2.78%)</title><rect x="796.7" y="323.0" width="32.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="799.7" y="334.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 2.78%)</title><rect x="796.7" y="307.0" width="32.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.7" y="318.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 2.78%)</title><rect x="796.7" y="291.0" width="32.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="799.7" y="302.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 2.78%)</title><rect x="796.7" y="275.0" width="32.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.7" y="286.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 1.39%)</title><rect x="813.1" y="259.0" width="16.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="816.1" y="270.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 1.39%)</title><rect x="813.1" y="243.0" width="16.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="816.1" y="254.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 1.39%)</title><rect x="813.1" y="227.0" width="16.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="816.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 1.39%)</title><rect x="829.4" y="339.0" width="16.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="832.4" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (16 samples, 22.22%)</title><rect x="845.8" y="451.0" width="262.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.8" y="462.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 4.17%)</title><rect x="845.8" y="435.0" width="49.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="848.8" y="446.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 4.17%)</title><rect x="845.8" y="419.0" width="49.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.8" y="430.0">one/n..</text>
</g>
<g>
<title>epoll_wait (2 samples, 2.78%)</title><rect x="862.2" y="403.0" width="32.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="865.2" y="414.0">ep..</text>
</g>
<g>
<title>one/nio/net/Session.process (13 samples, 18.06%)</title><rect x="895.0" y="435.0" width="213.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="898.0" y="446.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (12 samples, 16.67%)</title><rect x="895.0" y="419.0" width="196.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="898.0" y="430.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8 samples, 11.11%)</title><rect x="895.0" y="403.0" width="131.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="898.0" y="414.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7 samples, 9.72%)</title><rect x="895.0" y="387.0" width="114.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="898.0" y="398.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7 samples, 9.72%)</title><rect x="895.0" y="371.0" width="114.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="898.0" y="382.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (6 samples, 8.33%)</title><rect x="895.0" y="355.0" width="98.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="898.0" y="366.0">RequestHandl..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (6 samples, 8.33%)</title><rect x="895.0" y="339.0" width="98.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="898.0" y="350.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.replicasPut (6 samples, 8.33%)</title><rect x="895.0" y="323.0" width="98.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="898.0" y="334.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (1 samples, 1.39%)</title><rect x="895.0" y="307.0" width="16.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="898.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 1.39%)</title><rect x="895.0" y="291.0" width="16.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.0" y="302.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (1 samples, 1.39%)</title><rect x="895.0" y="275.0" width="16.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="898.0" y="286.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (1 samples, 1.39%)</title><rect x="895.0" y="259.0" width="16.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="898.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (1 samples, 1.39%)</title><rect x="895.0" y="243.0" width="16.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="898.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 1.39%)</title><rect x="895.0" y="227.0" width="16.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (1 samples, 1.39%)</title><rect x="895.0" y="211.0" width="16.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 1.39%)</title><rect x="895.0" y="195.0" width="16.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 1.39%)</title><rect x="895.0" y="179.0" width="16.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.0" y="190.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 1.39%)</title><rect x="895.0" y="163.0" width="16.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="898.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.asyncExecute (5 samples, 6.94%)</title><rect x="911.4" y="307.0" width="81.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.4" y="318.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (5 samples, 6.94%)</title><rect x="911.4" y="291.0" width="81.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="914.4" y="302.0">one/nio/s..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 6.94%)</title><rect x="911.4" y="275.0" width="81.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.4" y="286.0">java/util..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (5 samples, 6.94%)</title><rect x="911.4" y="259.0" width="81.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="914.4" y="270.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (5 samples, 6.94%)</title><rect x="911.4" y="243.0" width="81.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="914.4" y="254.0">one/nio/s..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (5 samples, 6.94%)</title><rect x="911.4" y="227.0" width="81.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="914.4" y="238.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (5 samples, 6.94%)</title><rect x="911.4" y="211.0" width="81.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="914.4" y="222.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (5 samples, 6.94%)</title><rect x="911.4" y="195.0" width="81.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="914.4" y="206.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 6.94%)</title><rect x="911.4" y="179.0" width="81.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="914.4" y="190.0">java/util..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 5.56%)</title><rect x="927.8" y="163.0" width="65.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="930.8" y="174.0">jdk/int..</text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 2.78%)</title><rect x="927.8" y="147.0" width="32.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="930.8" y="158.0">Un..</text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 1.39%)</title><rect x="927.8" y="131.0" width="16.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="930.8" y="142.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 1.39%)</title><rect x="944.2" y="131.0" width="16.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="947.2" y="142.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 2.78%)</title><rect x="960.6" y="147.0" width="32.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="963.6" y="158.0">__..</text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 1.39%)</title><rect x="993.3" y="355.0" width="16.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="996.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 1.39%)</title><rect x="1009.7" y="387.0" width="16.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1012.7" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 1.39%)</title><rect x="1009.7" y="371.0" width="16.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1012.7" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 5.56%)</title><rect x="1026.1" y="403.0" width="65.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1029.1" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 4.17%)</title><rect x="1042.5" y="387.0" width="49.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1045.5" y="398.0">one/n..</text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 1.39%)</title><rect x="1042.5" y="371.0" width="16.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1045.5" y="382.0"></text>
</g>
<g>
<title>__recv (2 samples, 2.78%)</title><rect x="1058.9" y="371.0" width="32.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1061.9" y="382.0">__..</text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 1.39%)</title><rect x="1091.7" y="419.0" width="16.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1094.7" y="430.0"></text>
</g>
<g>
<title>start_thread (5 samples, 6.94%)</title><rect x="1108.1" y="451.0" width="81.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1111.1" y="462.0">start_thr..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 6.94%)</title><rect x="1108.1" y="435.0" width="81.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1111.1" y="446.0">thread_na..</text>
</g>
<g>
<title>Thread::call_run() (5 samples, 6.94%)</title><rect x="1108.1" y="419.0" width="81.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1111.1" y="430.0">Thread::c..</text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 6.94%)</title><rect x="1108.1" y="403.0" width="81.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1111.1" y="414.0">GangWorke..</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 6.94%)</title><rect x="1108.1" y="387.0" width="81.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1111.1" y="398.0">G1ParTask..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 6.94%)</title><rect x="1108.1" y="371.0" width="81.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1111.1" y="382.0">G1ParEvac..</text>
</g>
<g>
<title>SpinPause (5 samples, 6.94%)</title><rect x="1108.1" y="355.0" width="81.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1111.1" y="366.0">SpinPause</text>
</g>
</g>
</svg>
