<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="389"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="389"> </text>
<g id="frames">
<g>
<title>all (76 samples, 100.00%)</title><rect x="10.0" y="355.0" width="1180.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="366.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 1.32%)</title><rect x="10.0" y="339.0" width="15.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 1.32%)</title><rect x="10.0" y="323.0" width="15.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 1.32%)</title><rect x="10.0" y="307.0" width="15.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 1.32%)</title><rect x="10.0" y="291.0" width="15.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 1.32%)</title><rect x="10.0" y="275.0" width="15.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 2.63%)</title><rect x="25.5" y="339.0" width="31.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="28.5" y="350.0">[u..</text>
</g>
<g>
<title>__clock_gettime (2 samples, 2.63%)</title><rect x="25.5" y="323.0" width="31.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="28.5" y="334.0">__..</text>
</g>
<g>
<title>[vdso] (1 samples, 1.32%)</title><rect x="41.1" y="307.0" width="15.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="44.1" y="318.0"></text>
</g>
<g>
<title>java/lang/Thread.run (44 samples, 57.89%)</title><rect x="56.6" y="339.0" width="683.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="59.6" y="350.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (44 samples, 57.89%)</title><rect x="56.6" y="323.0" width="683.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="59.6" y="334.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (44 samples, 57.89%)</title><rect x="56.6" y="307.0" width="683.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="59.6" y="318.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 1.32%)</title><rect x="56.6" y="291.0" width="15.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.6" y="302.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 1.32%)</title><rect x="56.6" y="275.0" width="15.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="59.6" y="286.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 1.32%)</title><rect x="56.6" y="259.0" width="15.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="59.6" y="270.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 1.32%)</title><rect x="56.6" y="243.0" width="15.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="59.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 1.32%)</title><rect x="72.1" y="291.0" width="15.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 1.32%)</title><rect x="72.1" y="275.0" width="15.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.1" y="286.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 1.32%)</title><rect x="72.1" y="259.0" width="15.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="75.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (14 samples, 18.42%)</title><rect x="87.6" y="291.0" width="217.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.6" y="302.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (13 samples, 17.11%)</title><rect x="103.2" y="275.0" width="201.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.2" y="286.0">java/util/concurrent/Synch..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (13 samples, 17.11%)</title><rect x="103.2" y="259.0" width="201.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="106.2" y="270.0">java/util/concurrent/Synch..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (1 samples, 1.32%)</title><rect x="103.2" y="243.0" width="15.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="106.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (7 samples, 9.21%)</title><rect x="118.7" y="243.0" width="108.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.7" y="254.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (7 samples, 9.21%)</title><rect x="118.7" y="227.0" width="108.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.7" y="238.0">java/util/con..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 9.21%)</title><rect x="118.7" y="211.0" width="108.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="121.7" y="222.0">jdk/internal/..</text>
</g>
<g>
<title>Unsafe_Park (3 samples, 3.95%)</title><rect x="149.7" y="195.0" width="46.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="152.7" y="206.0">Unsa..</text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 2.63%)</title><rect x="149.7" y="179.0" width="31.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="152.7" y="190.0">Pa..</text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 1.32%)</title><rect x="149.7" y="163.0" width="15.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="152.7" y="174.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 1.32%)</title><rect x="165.3" y="163.0" width="15.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="168.3" y="174.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 1.32%)</title><rect x="180.8" y="179.0" width="15.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="183.8" y="190.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 2.63%)</title><rect x="196.3" y="195.0" width="31.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="199.3" y="206.0">[u..</text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (2 samples, 2.63%)</title><rect x="196.3" y="179.0" width="31.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="199.3" y="190.0">pt..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (4 samples, 5.26%)</title><rect x="227.4" y="243.0" width="62.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="230.4" y="254.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 1.32%)</title><rect x="289.5" y="243.0" width="15.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="292.5" y="254.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 1.32%)</title><rect x="289.5" y="227.0" width="15.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="292.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$75/1913289223.run (28 samples, 36.84%)</title><rect x="305.0" y="291.0" width="434.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="308.0" y="302.0">ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$75/1913..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$asyncExecute$4 (28 samples, 36.84%)</title><rect x="305.0" y="275.0" width="434.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="308.0" y="286.0">ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$asyncExe..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$73/1522355682.supply (11 samples, 14.47%)</title><rect x="305.0" y="259.0" width="170.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="308.0" y="270.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$response$0 (11 samples, 14.47%)</title><rect x="305.0" y="243.0" width="170.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.0" y="254.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.proxy (11 samples, 14.47%)</title><rect x="305.0" y="227.0" width="170.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="308.0" y="238.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (11 samples, 14.47%)</title><rect x="305.0" y="211.0" width="170.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="308.0" y="222.0">one/nio/http/HttpClien..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (11 samples, 14.47%)</title><rect x="305.0" y="195.0" width="170.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.0" y="206.0">one/nio/http/HttpClien..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (3 samples, 3.95%)</title><rect x="320.5" y="179.0" width="46.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="323.5" y="190.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 3.95%)</title><rect x="320.5" y="163.0" width="46.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="323.5" y="174.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 3.95%)</title><rect x="320.5" y="147.0" width="46.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="323.5" y="158.0">Java..</text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 1.32%)</title><rect x="336.1" y="131.0" width="15.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="339.1" y="142.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 1.32%)</title><rect x="351.6" y="131.0" width="15.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="354.6" y="142.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 1.32%)</title><rect x="351.6" y="115.0" width="15.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="354.6" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (1 samples, 1.32%)</title><rect x="367.1" y="179.0" width="15.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="370.1" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (3 samples, 3.95%)</title><rect x="382.6" y="179.0" width="46.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="385.6" y="190.0">one/..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 3.95%)</title><rect x="382.6" y="163.0" width="46.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="385.6" y="174.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 3.95%)</title><rect x="382.6" y="147.0" width="46.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="385.6" y="158.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 3.95%)</title><rect x="382.6" y="131.0" width="46.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="385.6" y="142.0">one/..</text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 2.63%)</title><rect x="382.6" y="115.0" width="31.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="385.6" y="126.0">ja..</text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 1.32%)</title><rect x="413.7" y="115.0" width="15.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="416.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 1.32%)</title><rect x="413.7" y="99.0" width="15.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="416.7" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 1.32%)</title><rect x="429.2" y="179.0" width="15.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="432.2" y="190.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 1.32%)</title><rect x="429.2" y="163.0" width="15.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.2" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 1.32%)</title><rect x="429.2" y="147.0" width="15.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.2" y="158.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 1.32%)</title><rect x="429.2" y="131.0" width="15.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="432.2" y="142.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (1 samples, 1.32%)</title><rect x="444.7" y="179.0" width="15.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="447.7" y="190.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1 samples, 1.32%)</title><rect x="460.3" y="179.0" width="15.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="463.3" y="190.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 1.32%)</title><rect x="460.3" y="163.0" width="15.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="463.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$79/940936934.supply (10 samples, 13.16%)</title><rect x="475.8" y="259.0" width="155.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="478.8" y="270.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$response$2 (10 samples, 13.16%)</title><rect x="475.8" y="243.0" width="155.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.8" y="254.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (10 samples, 13.16%)</title><rect x="475.8" y="227.0" width="155.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="478.8" y="238.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (10 samples, 13.16%)</title><rect x="475.8" y="211.0" width="155.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="478.8" y="222.0">ru/mail/polis/dao/im..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 1.32%)</title><rect x="475.8" y="195.0" width="15.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="478.8" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 1.32%)</title><rect x="475.8" y="179.0" width="15.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 1.32%)</title><rect x="475.8" y="163.0" width="15.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.8" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 1.32%)</title><rect x="475.8" y="147.0" width="15.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="478.8" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 1.32%)</title><rect x="475.8" y="131.0" width="15.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="478.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (9 samples, 11.84%)</title><rect x="491.3" y="195.0" width="139.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="494.3" y="206.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (9 samples, 11.84%)</title><rect x="491.3" y="179.0" width="139.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="494.3" y="190.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (9 samples, 11.84%)</title><rect x="491.3" y="163.0" width="139.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.3" y="174.0">java/util/concurr..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 1.32%)</title><rect x="537.9" y="147.0" width="15.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 6.58%)</title><rect x="553.4" y="147.0" width="77.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.4" y="158.0">java/util..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 6.58%)</title><rect x="553.4" y="131.0" width="77.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="556.4" y="142.0">java/nio/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 6.58%)</title><rect x="553.4" y="115.0" width="77.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="556.4" y="126.0">java/nio/..</text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 1.32%)</title><rect x="568.9" y="99.0" width="15.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="571.9" y="110.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 3.95%)</title><rect x="584.5" y="99.0" width="46.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.5" y="110.0">java..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 1.32%)</title><rect x="615.5" y="83.0" width="15.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="618.5" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 1.32%)</title><rect x="615.5" y="67.0" width="15.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="618.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.sendResponse (7 samples, 9.21%)</title><rect x="631.1" y="259.0" width="108.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="634.1" y="270.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 9.21%)</title><rect x="631.1" y="243.0" width="108.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="634.1" y="254.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 9.21%)</title><rect x="631.1" y="227.0" width="108.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="634.1" y="238.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 2.63%)</title><rect x="631.1" y="211.0" width="31.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="634.1" y="222.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 6.58%)</title><rect x="662.1" y="211.0" width="77.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.1" y="222.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 6.58%)</title><rect x="662.1" y="195.0" width="77.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="665.1" y="206.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 6.58%)</title><rect x="662.1" y="179.0" width="77.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="665.1" y="190.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 6.58%)</title><rect x="662.1" y="163.0" width="77.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.1" y="174.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 2.63%)</title><rect x="662.1" y="147.0" width="31.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="665.1" y="158.0">Ja..</text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 1.32%)</title><rect x="662.1" y="131.0" width="15.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="665.1" y="142.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 1.32%)</title><rect x="677.6" y="131.0" width="15.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="680.6" y="142.0"></text>
</g>
<g>
<title>__libc_send (3 samples, 3.95%)</title><rect x="693.2" y="147.0" width="46.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="696.2" y="158.0">__li..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (29 samples, 38.16%)</title><rect x="739.7" y="339.0" width="450.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.7" y="350.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 1.32%)</title><rect x="739.7" y="323.0" width="15.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="742.7" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 5.26%)</title><rect x="755.3" y="323.0" width="62.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="758.3" y="334.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 1.32%)</title><rect x="755.3" y="307.0" width="15.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="758.3" y="318.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 1.32%)</title><rect x="755.3" y="291.0" width="15.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="758.3" y="302.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 3.95%)</title><rect x="770.8" y="307.0" width="46.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="773.8" y="318.0">one/..</text>
</g>
<g>
<title>epoll_wait (2 samples, 2.63%)</title><rect x="786.3" y="291.0" width="31.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="789.3" y="302.0">ep..</text>
</g>
<g>
<title>one/nio/net/Session.process (24 samples, 31.58%)</title><rect x="817.4" y="323.0" width="372.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="820.4" y="334.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (24 samples, 31.58%)</title><rect x="817.4" y="307.0" width="372.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="820.4" y="318.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (19 samples, 25.00%)</title><rect x="817.4" y="291.0" width="295.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="820.4" y="302.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 1.32%)</title><rect x="817.4" y="275.0" width="15.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="820.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (13 samples, 17.11%)</title><rect x="832.9" y="275.0" width="201.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.9" y="286.0">one/nio/http/HttpSession.h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (13 samples, 17.11%)</title><rect x="832.9" y="259.0" width="201.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.9" y="270.0">one/nio/http/HttpServer.ha..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (11 samples, 14.47%)</title><rect x="832.9" y="243.0" width="170.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.9" y="254.0">RequestHandler0_respon..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 1.32%)</title><rect x="832.9" y="227.0" width="15.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.9" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 1.32%)</title><rect x="832.9" y="211.0" width="15.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="835.9" y="222.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 1.32%)</title><rect x="832.9" y="195.0" width="15.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="835.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (10 samples, 13.16%)</title><rect x="848.4" y="227.0" width="155.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="851.4" y="238.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1 samples, 1.32%)</title><rect x="848.4" y="211.0" width="15.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="851.4" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 1.32%)</title><rect x="848.4" y="195.0" width="15.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="851.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.asyncExecute (6 samples, 7.89%)</title><rect x="863.9" y="211.0" width="93.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="866.9" y="222.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (6 samples, 7.89%)</title><rect x="863.9" y="195.0" width="93.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="866.9" y="206.0">one/nio/ser..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 7.89%)</title><rect x="863.9" y="179.0" width="93.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="866.9" y="190.0">java/util/c..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (6 samples, 7.89%)</title><rect x="863.9" y="163.0" width="93.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="866.9" y="174.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (6 samples, 7.89%)</title><rect x="863.9" y="147.0" width="93.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="866.9" y="158.0">one/nio/ser..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (6 samples, 7.89%)</title><rect x="863.9" y="131.0" width="93.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="866.9" y="142.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (5 samples, 6.58%)</title><rect x="879.5" y="115.0" width="77.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="882.5" y="126.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (5 samples, 6.58%)</title><rect x="879.5" y="99.0" width="77.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="882.5" y="110.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 6.58%)</title><rect x="879.5" y="83.0" width="77.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="882.5" y="94.0">java/util..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 6.58%)</title><rect x="879.5" y="67.0" width="77.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="882.5" y="78.0">jdk/inter..</text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 5.26%)</title><rect x="879.5" y="51.0" width="62.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="882.5" y="62.0">Unsafe..</text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 1.32%)</title><rect x="910.5" y="35.0" width="15.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="913.5" y="46.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 1.32%)</title><rect x="926.1" y="35.0" width="15.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="929.1" y="46.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 1.32%)</title><rect x="941.6" y="51.0" width="15.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="944.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/clustering/ConsistentHashingTopology.primaryFor (3 samples, 3.95%)</title><rect x="957.1" y="211.0" width="46.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="960.1" y="222.0">ru/m..</text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (1 samples, 1.32%)</title><rect x="957.1" y="195.0" width="15.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="960.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (1 samples, 1.32%)</title><rect x="957.1" y="179.0" width="15.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="960.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (1 samples, 1.32%)</title><rect x="957.1" y="163.0" width="15.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="960.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (1 samples, 1.32%)</title><rect x="957.1" y="147.0" width="15.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="960.1" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (1 samples, 1.32%)</title><rect x="957.1" y="131.0" width="15.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="960.1" y="142.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (1 samples, 1.32%)</title><rect x="957.1" y="115.0" width="15.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="960.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 1.32%)</title><rect x="957.1" y="99.0" width="15.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="960.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 1.32%)</title><rect x="957.1" y="83.0" width="15.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="960.1" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 1.32%)</title><rect x="957.1" y="67.0" width="15.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="960.1" y="78.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (2 samples, 2.63%)</title><rect x="972.6" y="195.0" width="31.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="975.6" y="206.0">ja..</text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (2 samples, 2.63%)</title><rect x="972.6" y="179.0" width="31.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="975.6" y="190.0">ja..</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 1.32%)</title><rect x="1003.7" y="243.0" width="15.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1006.7" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 1.32%)</title><rect x="1003.7" y="227.0" width="15.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1006.7" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 1.32%)</title><rect x="1003.7" y="211.0" width="15.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1006.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 1.32%)</title><rect x="1003.7" y="195.0" width="15.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1006.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 1.32%)</title><rect x="1003.7" y="179.0" width="15.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1006.7" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 1.32%)</title><rect x="1019.2" y="243.0" width="15.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1022.2" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 1.32%)</title><rect x="1019.2" y="227.0" width="15.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1022.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 1.32%)</title><rect x="1019.2" y="211.0" width="15.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1022.2" y="222.0"></text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (1 samples, 1.32%)</title><rect x="1019.2" y="195.0" width="15.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1022.2" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 2.63%)</title><rect x="1034.7" y="275.0" width="31.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1037.7" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 1.32%)</title><rect x="1034.7" y="259.0" width="15.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1037.7" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 1.32%)</title><rect x="1050.3" y="259.0" width="15.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1053.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 1.32%)</title><rect x="1065.8" y="275.0" width="15.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1068.8" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 1.32%)</title><rect x="1065.8" y="259.0" width="15.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1068.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 1.32%)</title><rect x="1081.3" y="275.0" width="15.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1084.3" y="286.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 1.32%)</title><rect x="1081.3" y="259.0" width="15.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1084.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 1.32%)</title><rect x="1081.3" y="243.0" width="15.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1084.3" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 1.32%)</title><rect x="1096.8" y="275.0" width="15.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1099.8" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 1.32%)</title><rect x="1096.8" y="259.0" width="15.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1099.8" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 6.58%)</title><rect x="1112.4" y="291.0" width="77.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1115.4" y="302.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (5 samples, 6.58%)</title><rect x="1112.4" y="275.0" width="77.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1115.4" y="286.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 2.63%)</title><rect x="1127.9" y="259.0" width="31.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1130.9" y="270.0">Ja..</text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 1.32%)</title><rect x="1127.9" y="243.0" width="15.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1130.9" y="254.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 1.32%)</title><rect x="1143.4" y="243.0" width="15.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1146.4" y="254.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 1.32%)</title><rect x="1158.9" y="259.0" width="15.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1161.9" y="270.0"></text>
</g>
<g>
<title>__recv (1 samples, 1.32%)</title><rect x="1174.5" y="259.0" width="15.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1177.5" y="270.0"></text>
</g>
</g>
</svg>
