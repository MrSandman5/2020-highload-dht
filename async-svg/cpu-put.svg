<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="581"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="581"> </text>
<g id="frames">
<g>
<title>all (730 samples, 100.00%)</title><rect x="10.0" y="547.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="558.0">all</text>
</g>
<g>
<title>[GC Thread#0 tid=117836] (6 samples, 0.82%)</title><rect x="10.0" y="531.0" width="9.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.82%)</title><rect x="10.0" y="515.0" width="9.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.82%)</title><rect x="10.0" y="499.0" width="9.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.82%)</title><rect x="10.0" y="483.0" width="9.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.82%)</title><rect x="10.0" y="467.0" width="9.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.82%)</title><rect x="10.0" y="451.0" width="9.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (6 samples, 0.82%)</title><rect x="10.0" y="435.0" width="9.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (6 samples, 0.82%)</title><rect x="10.0" y="419.0" width="9.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.55%)</title><rect x="11.6" y="403.0" width="6.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.6" y="414.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.27%)</title><rect x="14.8" y="387.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="17.8" y="398.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (2 samples, 0.27%)</title><rect x="14.8" y="371.0" width="3.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="17.8" y="382.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.14%)</title><rect x="18.1" y="403.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="21.1" y="414.0"></text>
</g>
<g>
<title>[GC Thread#1 tid=117894] (4 samples, 0.55%)</title><rect x="19.7" y="531.0" width="6.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="22.7" y="542.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.55%)</title><rect x="19.7" y="515.0" width="6.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="22.7" y="526.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.55%)</title><rect x="19.7" y="499.0" width="6.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="22.7" y="510.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.55%)</title><rect x="19.7" y="483.0" width="6.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="22.7" y="494.0"></text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 0.55%)</title><rect x="19.7" y="467.0" width="6.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="22.7" y="478.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (4 samples, 0.55%)</title><rect x="19.7" y="451.0" width="6.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="22.7" y="462.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (4 samples, 0.55%)</title><rect x="19.7" y="435.0" width="6.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="22.7" y="446.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.27%)</title><rect x="19.7" y="419.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="22.7" y="430.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.27%)</title><rect x="19.7" y="403.0" width="3.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="22.7" y="414.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (1 samples, 0.14%)</title><rect x="21.3" y="387.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="24.3" y="398.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.27%)</title><rect x="22.9" y="419.0" width="3.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="25.9" y="430.0"></text>
</g>
<g>
<title>[GC Thread#2 tid=117895] (6 samples, 0.82%)</title><rect x="26.2" y="531.0" width="9.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="29.2" y="542.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.82%)</title><rect x="26.2" y="515.0" width="9.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="29.2" y="526.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.82%)</title><rect x="26.2" y="499.0" width="9.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="29.2" y="510.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.82%)</title><rect x="26.2" y="483.0" width="9.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="29.2" y="494.0"></text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.82%)</title><rect x="26.2" y="467.0" width="9.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="29.2" y="478.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.82%)</title><rect x="26.2" y="451.0" width="9.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="29.2" y="462.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.68%)</title><rect x="26.2" y="435.0" width="8.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="29.2" y="446.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (4 samples, 0.55%)</title><rect x="26.2" y="419.0" width="6.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="29.2" y="430.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.27%)</title><rect x="27.8" y="403.0" width="3.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="30.8" y="414.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.14%)</title><rect x="29.4" y="387.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="32.4" y="398.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (1 samples, 0.14%)</title><rect x="29.4" y="371.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="32.4" y="382.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;TypeArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.14%)</title><rect x="31.0" y="403.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="34.0" y="414.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.14%)</title><rect x="32.6" y="419.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="35.6" y="430.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.14%)</title><rect x="34.2" y="435.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="37.2" y="446.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.14%)</title><rect x="34.2" y="419.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="37.2" y="430.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.14%)</title><rect x="34.2" y="403.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="37.2" y="414.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (1 samples, 0.14%)</title><rect x="34.2" y="387.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="37.2" y="398.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.14%)</title><rect x="34.2" y="371.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="37.2" y="382.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (1 samples, 0.14%)</title><rect x="34.2" y="355.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="37.2" y="366.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.14%)</title><rect x="34.2" y="339.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="37.2" y="350.0"></text>
</g>
<g>
<title>[GC Thread#3 tid=117896] (4 samples, 0.55%)</title><rect x="35.9" y="531.0" width="6.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="38.9" y="542.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.55%)</title><rect x="35.9" y="515.0" width="6.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="38.9" y="526.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.55%)</title><rect x="35.9" y="499.0" width="6.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="38.9" y="510.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.55%)</title><rect x="35.9" y="483.0" width="6.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="38.9" y="494.0"></text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 0.55%)</title><rect x="35.9" y="467.0" width="6.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="38.9" y="478.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (4 samples, 0.55%)</title><rect x="35.9" y="451.0" width="6.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="38.9" y="462.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (4 samples, 0.55%)</title><rect x="35.9" y="435.0" width="6.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="38.9" y="446.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.27%)</title><rect x="35.9" y="419.0" width="3.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="38.9" y="430.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.27%)</title><rect x="35.9" y="403.0" width="3.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="38.9" y="414.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.27%)</title><rect x="39.1" y="419.0" width="3.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="42.1" y="430.0"></text>
</g>
<g>
<title>[GC Thread#4 tid=117897] (3 samples, 0.41%)</title><rect x="42.3" y="531.0" width="4.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="45.3" y="542.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.41%)</title><rect x="42.3" y="515.0" width="4.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="45.3" y="526.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.41%)</title><rect x="42.3" y="499.0" width="4.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="45.3" y="510.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.41%)</title><rect x="42.3" y="483.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="45.3" y="494.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.41%)</title><rect x="42.3" y="467.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="45.3" y="478.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.27%)</title><rect x="42.3" y="451.0" width="3.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="45.3" y="462.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.27%)</title><rect x="42.3" y="435.0" width="3.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="45.3" y="446.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.14%)</title><rect x="42.3" y="419.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="45.3" y="430.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.14%)</title><rect x="42.3" y="403.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="45.3" y="414.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.14%)</title><rect x="43.9" y="419.0" width="1.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="46.9" y="430.0"></text>
</g>
<g>
<title>G1RemSetScanState::G1ClearCardTableTask::work(unsigned int) (1 samples, 0.14%)</title><rect x="45.6" y="451.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="48.6" y="462.0"></text>
</g>
<g>
<title>CardTable::clear(MemRegion) (1 samples, 0.14%)</title><rect x="45.6" y="435.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="48.6" y="446.0"></text>
</g>
<g>
<title>[GC Thread#5 tid=117898] (6 samples, 0.82%)</title><rect x="47.2" y="531.0" width="9.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="50.2" y="542.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.82%)</title><rect x="47.2" y="515.0" width="9.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="50.2" y="526.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.82%)</title><rect x="47.2" y="499.0" width="9.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="50.2" y="510.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.82%)</title><rect x="47.2" y="483.0" width="9.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="50.2" y="494.0"></text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.82%)</title><rect x="47.2" y="467.0" width="9.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="50.2" y="478.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.82%)</title><rect x="47.2" y="451.0" width="9.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="50.2" y="462.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.68%)</title><rect x="47.2" y="435.0" width="8.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="50.2" y="446.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (5 samples, 0.68%)</title><rect x="47.2" y="419.0" width="8.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="50.2" y="430.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.55%)</title><rect x="48.8" y="403.0" width="6.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="51.8" y="414.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.27%)</title><rect x="52.0" y="387.0" width="3.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="55.0" y="398.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (2 samples, 0.27%)</title><rect x="52.0" y="371.0" width="3.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="55.0" y="382.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.14%)</title><rect x="55.3" y="435.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="58.3" y="446.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.14%)</title><rect x="55.3" y="419.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="58.3" y="430.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.14%)</title><rect x="55.3" y="403.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="58.3" y="414.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (1 samples, 0.14%)</title><rect x="55.3" y="387.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="58.3" y="398.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.14%)</title><rect x="55.3" y="371.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="58.3" y="382.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (1 samples, 0.14%)</title><rect x="55.3" y="355.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="58.3" y="366.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.14%)</title><rect x="55.3" y="339.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="58.3" y="350.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.14%)</title><rect x="55.3" y="323.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="58.3" y="334.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (1 samples, 0.14%)</title><rect x="55.3" y="307.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="58.3" y="318.0"></text>
</g>
<g>
<title>[GC Thread#6 tid=117899] (5 samples, 0.68%)</title><rect x="56.9" y="531.0" width="8.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="59.9" y="542.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.68%)</title><rect x="56.9" y="515.0" width="8.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="59.9" y="526.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.68%)</title><rect x="56.9" y="499.0" width="8.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="59.9" y="510.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.68%)</title><rect x="56.9" y="483.0" width="8.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="59.9" y="494.0"></text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 0.68%)</title><rect x="56.9" y="467.0" width="8.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="59.9" y="478.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 0.68%)</title><rect x="56.9" y="451.0" width="8.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="59.9" y="462.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.68%)</title><rect x="56.9" y="435.0" width="8.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="59.9" y="446.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (4 samples, 0.55%)</title><rect x="56.9" y="419.0" width="6.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="59.9" y="430.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.27%)</title><rect x="60.1" y="403.0" width="3.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="63.1" y="414.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.14%)</title><rect x="61.7" y="387.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="64.7" y="398.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (1 samples, 0.14%)</title><rect x="61.7" y="371.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="64.7" y="382.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.14%)</title><rect x="63.3" y="419.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="66.3" y="430.0"></text>
</g>
<g>
<title>[GC Thread#7 tid=117900] (6 samples, 0.82%)</title><rect x="65.0" y="531.0" width="9.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="68.0" y="542.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.82%)</title><rect x="65.0" y="515.0" width="9.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="68.0" y="526.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.82%)</title><rect x="65.0" y="499.0" width="9.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="68.0" y="510.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.82%)</title><rect x="65.0" y="483.0" width="9.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="68.0" y="494.0"></text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.82%)</title><rect x="65.0" y="467.0" width="9.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="68.0" y="478.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.82%)</title><rect x="65.0" y="451.0" width="9.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="68.0" y="462.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (6 samples, 0.82%)</title><rect x="65.0" y="435.0" width="9.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="68.0" y="446.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (5 samples, 0.68%)</title><rect x="65.0" y="419.0" width="8.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="68.0" y="430.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.55%)</title><rect x="66.6" y="403.0" width="6.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="69.6" y="414.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.14%)</title><rect x="71.4" y="387.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="74.4" y="398.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.14%)</title><rect x="73.0" y="419.0" width="1.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="76.0" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=117865] (42 samples, 5.75%)</title><rect x="74.7" y="531.0" width="67.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="77.7" y="542.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (42 samples, 5.75%)</title><rect x="74.7" y="515.0" width="67.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="77.7" y="526.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.14%)</title><rect x="74.7" y="499.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.7" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 0.96%)</title><rect x="76.3" y="499.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="79.3" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (7 samples, 0.96%)</title><rect x="76.3" y="483.0" width="11.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.3" y="494.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.14%)</title><rect x="76.3" y="467.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="79.3" y="478.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.27%)</title><rect x="77.9" y="467.0" width="3.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="80.9" y="478.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.14%)</title><rect x="81.1" y="467.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="84.1" y="478.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.41%)</title><rect x="82.7" y="467.0" width="4.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="85.7" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (34 samples, 4.66%)</title><rect x="87.6" y="499.0" width="54.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.6" y="510.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (34 samples, 4.66%)</title><rect x="87.6" y="483.0" width="54.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.6" y="494.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (30 samples, 4.11%)</title><rect x="87.6" y="467.0" width="48.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.6" y="478.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (24 samples, 3.29%)</title><rect x="89.2" y="451.0" width="38.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="92.2" y="462.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (24 samples, 3.29%)</title><rect x="89.2" y="435.0" width="38.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="92.2" y="446.0">one..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (23 samples, 3.15%)</title><rect x="89.2" y="419.0" width="37.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="92.2" y="430.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.14%)</title><rect x="89.2" y="403.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="92.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.14%)</title><rect x="89.2" y="387.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="92.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (22 samples, 3.01%)</title><rect x="90.8" y="403.0" width="35.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.8" y="414.0">ru/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (22 samples, 3.01%)</title><rect x="90.8" y="387.0" width="35.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.8" y="398.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (22 samples, 3.01%)</title><rect x="90.8" y="371.0" width="35.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="93.8" y="382.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (22 samples, 3.01%)</title><rect x="90.8" y="355.0" width="35.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.8" y="366.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (22 samples, 3.01%)</title><rect x="90.8" y="339.0" width="35.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="93.8" y="350.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (22 samples, 3.01%)</title><rect x="90.8" y="323.0" width="35.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.8" y="334.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (22 samples, 3.01%)</title><rect x="90.8" y="307.0" width="35.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="93.8" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (22 samples, 3.01%)</title><rect x="90.8" y="291.0" width="35.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="93.8" y="302.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (21 samples, 2.88%)</title><rect x="92.4" y="275.0" width="34.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.4" y="286.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (21 samples, 2.88%)</title><rect x="92.4" y="259.0" width="34.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="95.4" y="270.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (2 samples, 0.27%)</title><rect x="92.4" y="243.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="95.4" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (2 samples, 0.27%)</title><rect x="92.4" y="227.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.4" y="238.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (2 samples, 0.27%)</title><rect x="92.4" y="211.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.4" y="222.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (2 samples, 0.27%)</title><rect x="92.4" y="195.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="95.4" y="206.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="92.4" y="179.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.4" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.14%)</title><rect x="92.4" y="163.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="95.4" y="174.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (1 samples, 0.14%)</title><rect x="94.1" y="179.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="97.1" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.14%)</title><rect x="94.1" y="163.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.1" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (13 samples, 1.78%)</title><rect x="95.7" y="243.0" width="21.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="98.7" y="254.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.flush (1 samples, 0.14%)</title><rect x="95.7" y="227.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.7" y="238.0"></text>
</g>
<g>
<title>java/io/PrintStream.flush (1 samples, 0.14%)</title><rect x="95.7" y="211.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="98.7" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (10 samples, 1.37%)</title><rect x="97.3" y="227.0" width="16.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.3" y="238.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (10 samples, 1.37%)</title><rect x="97.3" y="211.0" width="16.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.3" y="222.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (10 samples, 1.37%)</title><rect x="97.3" y="195.0" width="16.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.3" y="206.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (9 samples, 1.23%)</title><rect x="98.9" y="179.0" width="14.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.9" y="190.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (9 samples, 1.23%)</title><rect x="98.9" y="163.0" width="14.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.9" y="174.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (9 samples, 1.23%)</title><rect x="98.9" y="147.0" width="14.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="101.9" y="158.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (9 samples, 1.23%)</title><rect x="98.9" y="131.0" width="14.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="101.9" y="142.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (8 samples, 1.10%)</title><rect x="100.5" y="115.0" width="13.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="103.5" y="126.0"></text>
</g>
<g>
<title>writeBytes (8 samples, 1.10%)</title><rect x="100.5" y="99.0" width="13.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="103.5" y="110.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.14%)</title><rect x="100.5" y="83.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="103.5" y="94.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.27%)</title><rect x="102.1" y="83.0" width="3.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="105.1" y="94.0"></text>
</g>
<g>
<title>arrayOopDesc::base_offset_in_bytes(BasicType) (1 samples, 0.14%)</title><rect x="105.4" y="83.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="108.4" y="94.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.14%)</title><rect x="107.0" y="83.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="110.0" y="94.0"></text>
</g>
<g>
<title>jni_GetObjectField (2 samples, 0.27%)</title><rect x="108.6" y="83.0" width="3.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="111.6" y="94.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.14%)</title><rect x="111.8" y="83.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="114.8" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.27%)</title><rect x="113.5" y="227.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="116.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.27%)</title><rect x="113.5" y="211.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="116.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.27%)</title><rect x="113.5" y="195.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="116.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.27%)</title><rect x="113.5" y="179.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="116.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.27%)</title><rect x="113.5" y="163.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.27%)</title><rect x="113.5" y="147.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="116.5" y="158.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.14%)</title><rect x="113.5" y="131.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="116.5" y="142.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.14%)</title><rect x="113.5" y="115.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="116.5" y="126.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.14%)</title><rect x="113.5" y="99.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="116.5" y="110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="115.1" y="131.0" width="1.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="118.1" y="142.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.14%)</title><rect x="115.1" y="115.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="118.1" y="126.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (6 samples, 0.82%)</title><rect x="116.7" y="243.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="119.7" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (6 samples, 0.82%)</title><rect x="116.7" y="227.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="119.7" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (6 samples, 0.82%)</title><rect x="116.7" y="211.0" width="9.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.7" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.14%)</title><rect x="116.7" y="195.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.7" y="206.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.14%)</title><rect x="116.7" y="179.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="119.7" y="190.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.14%)</title><rect x="116.7" y="163.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="119.7" y="174.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.14%)</title><rect x="116.7" y="147.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.68%)</title><rect x="118.3" y="195.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.3" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.68%)</title><rect x="118.3" y="179.0" width="8.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.3" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.27%)</title><rect x="118.3" y="163.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.3" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.27%)</title><rect x="118.3" y="147.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.3" y="158.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.14%)</title><rect x="121.5" y="163.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.5" y="174.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.27%)</title><rect x="123.2" y="163.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.2" y="174.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.14%)</title><rect x="126.4" y="419.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.4" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.14%)</title><rect x="126.4" y="403.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.4" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.14%)</title><rect x="126.4" y="387.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.55%)</title><rect x="128.0" y="451.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="131.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.41%)</title><rect x="128.0" y="435.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.41%)</title><rect x="128.0" y="419.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="131.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.41%)</title><rect x="128.0" y="403.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="131.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.41%)</title><rect x="128.0" y="387.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.0" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.14%)</title><rect x="132.8" y="435.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.14%)</title><rect x="134.5" y="451.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="137.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.14%)</title><rect x="134.5" y="435.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.14%)</title><rect x="134.5" y="419.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.5" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.55%)</title><rect x="136.1" y="467.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="139.1" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.55%)</title><rect x="136.1" y="451.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="139.1" y="462.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.27%)</title><rect x="137.7" y="435.0" width="3.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="140.7" y="446.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.14%)</title><rect x="137.7" y="419.0" width="1.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="140.7" y="430.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.14%)</title><rect x="137.7" y="403.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="140.7" y="414.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.14%)</title><rect x="137.7" y="387.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="140.7" y="398.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.14%)</title><rect x="139.3" y="419.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="142.3" y="430.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.14%)</title><rect x="140.9" y="435.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="143.9" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=117866] (49 samples, 6.71%)</title><rect x="142.5" y="531.0" width="79.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="145.5" y="542.0">[NIO Sele..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (49 samples, 6.71%)</title><rect x="142.5" y="515.0" width="79.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.5" y="526.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.27%)</title><rect x="144.2" y="499.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="147.2" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.27%)</title><rect x="144.2" y="483.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.2" y="494.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.27%)</title><rect x="144.2" y="467.0" width="3.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="147.2" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (45 samples, 6.16%)</title><rect x="147.4" y="499.0" width="72.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.4" y="510.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (45 samples, 6.16%)</title><rect x="147.4" y="483.0" width="72.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="150.4" y="494.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (37 samples, 5.07%)</title><rect x="149.0" y="467.0" width="59.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="152.0" y="478.0">one/ni..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.14%)</title><rect x="149.0" y="451.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="152.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (30 samples, 4.11%)</title><rect x="150.6" y="451.0" width="48.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="153.6" y="462.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (30 samples, 4.11%)</title><rect x="150.6" y="435.0" width="48.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="153.6" y="446.0">one/..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (29 samples, 3.97%)</title><rect x="150.6" y="419.0" width="46.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.6" y="430.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.14%)</title><rect x="150.6" y="403.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="153.6" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.14%)</title><rect x="150.6" y="387.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.6" y="398.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="150.6" y="371.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.14%)</title><rect x="150.6" y="355.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (28 samples, 3.84%)</title><rect x="152.2" y="403.0" width="45.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.2" y="414.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (20 samples, 2.74%)</title><rect x="152.2" y="387.0" width="32.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="155.2" y="398.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (20 samples, 2.74%)</title><rect x="152.2" y="371.0" width="32.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="155.2" y="382.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (20 samples, 2.74%)</title><rect x="152.2" y="355.0" width="32.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.2" y="366.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (20 samples, 2.74%)</title><rect x="152.2" y="339.0" width="32.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.2" y="350.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (19 samples, 2.60%)</title><rect x="152.2" y="323.0" width="30.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="155.2" y="334.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (19 samples, 2.60%)</title><rect x="152.2" y="307.0" width="30.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="155.2" y="318.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (19 samples, 2.60%)</title><rect x="152.2" y="291.0" width="30.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.2" y="302.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (17 samples, 2.33%)</title><rect x="153.9" y="275.0" width="27.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.9" y="286.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (17 samples, 2.33%)</title><rect x="153.9" y="259.0" width="27.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.9" y="270.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (4 samples, 0.55%)</title><rect x="153.9" y="243.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.9" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (4 samples, 0.55%)</title><rect x="153.9" y="227.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="156.9" y="238.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.55%)</title><rect x="153.9" y="211.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.9" y="222.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.55%)</title><rect x="153.9" y="195.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.27%)</title><rect x="153.9" y="179.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.9" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.27%)</title><rect x="153.9" y="163.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.9" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.appendChars (2 samples, 0.27%)</title><rect x="153.9" y="147.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.27%)</title><rect x="153.9" y="131.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.9" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (1 samples, 0.14%)</title><rect x="157.1" y="179.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="160.1" y="190.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.isEscapedDelimeter (1 samples, 0.14%)</title><rect x="158.7" y="179.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.7" y="190.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="158.7" y="163.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.7" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (10 samples, 1.37%)</title><rect x="160.3" y="243.0" width="16.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="163.3" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (8 samples, 1.10%)</title><rect x="160.3" y="227.0" width="13.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.3" y="238.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (8 samples, 1.10%)</title><rect x="160.3" y="211.0" width="13.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.3" y="222.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (8 samples, 1.10%)</title><rect x="160.3" y="195.0" width="13.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="163.3" y="206.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (8 samples, 1.10%)</title><rect x="160.3" y="179.0" width="13.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="163.3" y="190.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (8 samples, 1.10%)</title><rect x="160.3" y="163.0" width="13.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="163.3" y="174.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (8 samples, 1.10%)</title><rect x="160.3" y="147.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="163.3" y="158.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (8 samples, 1.10%)</title><rect x="160.3" y="131.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="163.3" y="142.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (8 samples, 1.10%)</title><rect x="160.3" y="115.0" width="13.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="163.3" y="126.0"></text>
</g>
<g>
<title>writeBytes (8 samples, 1.10%)</title><rect x="160.3" y="99.0" width="13.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="163.3" y="110.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.14%)</title><rect x="161.9" y="83.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="164.9" y="94.0"></text>
</g>
<g>
<title>__libc_write (3 samples, 0.41%)</title><rect x="163.6" y="83.0" width="4.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="166.6" y="94.0"></text>
</g>
<g>
<title>jni_GetArrayLength (1 samples, 0.14%)</title><rect x="168.4" y="83.0" width="1.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="171.4" y="94.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.14%)</title><rect x="170.0" y="83.0" width="1.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="173.0" y="94.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.14%)</title><rect x="170.0" y="67.0" width="1.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="173.0" y="78.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.14%)</title><rect x="170.0" y="51.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="173.0" y="62.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.14%)</title><rect x="171.6" y="83.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="174.6" y="94.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.14%)</title><rect x="171.6" y="67.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="174.6" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.27%)</title><rect x="173.3" y="227.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="176.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.27%)</title><rect x="173.3" y="211.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.27%)</title><rect x="173.3" y="195.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="176.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.27%)</title><rect x="173.3" y="179.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.27%)</title><rect x="173.3" y="163.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.27%)</title><rect x="173.3" y="147.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="176.3" y="158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="173.3" y="131.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="176.3" y="142.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.14%)</title><rect x="173.3" y="115.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="176.3" y="126.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.14%)</title><rect x="174.9" y="131.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="177.9" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (3 samples, 0.41%)</title><rect x="176.5" y="243.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="179.5" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (3 samples, 0.41%)</title><rect x="176.5" y="227.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="179.5" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (3 samples, 0.41%)</title><rect x="176.5" y="211.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="179.5" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.14%)</title><rect x="176.5" y="195.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="179.5" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.27%)</title><rect x="178.1" y="195.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.1" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.27%)</title><rect x="178.1" y="179.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.1" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.14%)</title><rect x="178.1" y="163.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="181.1" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.14%)</title><rect x="178.1" y="147.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.14%)</title><rect x="179.7" y="163.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.7" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.14%)</title><rect x="181.3" y="275.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="184.3" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.14%)</title><rect x="183.0" y="323.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (8 samples, 1.10%)</title><rect x="184.6" y="387.0" width="12.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.96%)</title><rect x="186.2" y="371.0" width="11.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="189.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (7 samples, 0.96%)</title><rect x="186.2" y="355.0" width="11.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="189.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.14%)</title><rect x="186.2" y="339.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="189.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.14%)</title><rect x="186.2" y="323.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.14%)</title><rect x="186.2" y="307.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="189.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.14%)</title><rect x="186.2" y="291.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.14%)</title><rect x="186.2" y="275.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="189.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.14%)</title><rect x="187.8" y="339.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.68%)</title><rect x="189.4" y="339.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.68%)</title><rect x="189.4" y="323.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.68%)</title><rect x="189.4" y="307.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="192.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.55%)</title><rect x="191.0" y="291.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="194.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.55%)</title><rect x="191.0" y="275.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="194.0" y="286.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.27%)</title><rect x="191.0" y="259.0" width="3.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="194.0" y="270.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.14%)</title><rect x="192.7" y="243.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="195.7" y="254.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.27%)</title><rect x="194.3" y="259.0" width="3.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="197.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.14%)</title><rect x="197.5" y="419.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="200.5" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.14%)</title><rect x="197.5" y="403.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="200.5" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.14%)</title><rect x="197.5" y="387.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="200.5" y="398.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.14%)</title><rect x="197.5" y="371.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="200.5" y="382.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.14%)</title><rect x="197.5" y="355.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="200.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.55%)</title><rect x="199.1" y="451.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="202.1" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.27%)</title><rect x="205.6" y="451.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.6" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.27%)</title><rect x="205.6" y="435.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.6" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 0.96%)</title><rect x="208.8" y="467.0" width="11.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.8" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (5 samples, 0.68%)</title><rect x="208.8" y="451.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.8" y="462.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.55%)</title><rect x="210.4" y="435.0" width="6.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="213.4" y="446.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.41%)</title><rect x="212.1" y="419.0" width="4.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="215.1" y="430.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.14%)</title><rect x="213.7" y="403.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="216.7" y="414.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.14%)</title><rect x="215.3" y="403.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="218.3" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (2 samples, 0.27%)</title><rect x="216.9" y="451.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="219.9" y="462.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.14%)</title><rect x="220.1" y="499.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="223.1" y="510.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.14%)</title><rect x="220.1" y="483.0" width="1.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="223.1" y="494.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=117867] (50 samples, 6.85%)</title><rect x="221.8" y="531.0" width="80.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="224.8" y="542.0">[NIO Sele..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (50 samples, 6.85%)</title><rect x="221.8" y="515.0" width="80.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="224.8" y="526.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.14%)</title><rect x="221.8" y="499.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="224.8" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 0.82%)</title><rect x="223.4" y="499.0" width="9.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="226.4" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 0.82%)</title><rect x="223.4" y="483.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="226.4" y="494.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.27%)</title><rect x="223.4" y="467.0" width="3.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="226.4" y="478.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.41%)</title><rect x="226.6" y="467.0" width="4.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="229.6" y="478.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.14%)</title><rect x="231.5" y="467.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="234.5" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (43 samples, 5.89%)</title><rect x="233.1" y="499.0" width="69.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="236.1" y="510.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (43 samples, 5.89%)</title><rect x="233.1" y="483.0" width="69.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="236.1" y="494.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (37 samples, 5.07%)</title><rect x="233.1" y="467.0" width="59.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.1" y="478.0">one/ni..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.14%)</title><rect x="234.7" y="451.0" width="1.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="237.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (27 samples, 3.70%)</title><rect x="236.3" y="451.0" width="43.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="239.3" y="462.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (27 samples, 3.70%)</title><rect x="236.3" y="435.0" width="43.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.3" y="446.0">one/..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (27 samples, 3.70%)</title><rect x="236.3" y="419.0" width="43.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="239.3" y="430.0">Requ..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (27 samples, 3.70%)</title><rect x="236.3" y="403.0" width="43.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="239.3" y="414.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (23 samples, 3.15%)</title><rect x="236.3" y="387.0" width="37.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="239.3" y="398.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (23 samples, 3.15%)</title><rect x="236.3" y="371.0" width="37.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="239.3" y="382.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (23 samples, 3.15%)</title><rect x="236.3" y="355.0" width="37.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.3" y="366.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (23 samples, 3.15%)</title><rect x="236.3" y="339.0" width="37.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="239.3" y="350.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (22 samples, 3.01%)</title><rect x="237.9" y="323.0" width="35.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.9" y="334.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (22 samples, 3.01%)</title><rect x="237.9" y="307.0" width="35.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="240.9" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (22 samples, 3.01%)</title><rect x="237.9" y="291.0" width="35.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.9" y="302.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (21 samples, 2.88%)</title><rect x="237.9" y="275.0" width="34.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="240.9" y="286.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (21 samples, 2.88%)</title><rect x="237.9" y="259.0" width="34.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.9" y="270.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (3 samples, 0.41%)</title><rect x="237.9" y="243.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="240.9" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (3 samples, 0.41%)</title><rect x="237.9" y="227.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="240.9" y="238.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (3 samples, 0.41%)</title><rect x="237.9" y="211.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="240.9" y="222.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (3 samples, 0.41%)</title><rect x="237.9" y="195.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.9" y="206.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="237.9" y="179.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.9" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.14%)</title><rect x="237.9" y="163.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="240.9" y="174.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.14%)</title><rect x="239.5" y="179.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="242.5" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.14%)</title><rect x="239.5" y="163.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="242.5" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.appendChars (1 samples, 0.14%)</title><rect x="239.5" y="147.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="242.5" y="158.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.14%)</title><rect x="239.5" y="131.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="242.5" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.14%)</title><rect x="241.2" y="179.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="244.2" y="190.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.14%)</title><rect x="241.2" y="163.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="244.2" y="174.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.14%)</title><rect x="241.2" y="147.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="244.2" y="158.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.14%)</title><rect x="241.2" y="131.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="244.2" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.14%)</title><rect x="241.2" y="115.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="244.2" y="126.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.14%)</title><rect x="241.2" y="99.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="244.2" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (14 samples, 1.92%)</title><rect x="242.8" y="243.0" width="22.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="245.8" y="254.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (10 samples, 1.37%)</title><rect x="244.4" y="227.0" width="16.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="247.4" y="238.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (10 samples, 1.37%)</title><rect x="244.4" y="211.0" width="16.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="247.4" y="222.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (10 samples, 1.37%)</title><rect x="244.4" y="195.0" width="16.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="247.4" y="206.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (7 samples, 0.96%)</title><rect x="249.2" y="179.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.2" y="190.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (7 samples, 0.96%)</title><rect x="249.2" y="163.0" width="11.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="252.2" y="174.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (7 samples, 0.96%)</title><rect x="249.2" y="147.0" width="11.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.2" y="158.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (7 samples, 0.96%)</title><rect x="249.2" y="131.0" width="11.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="252.2" y="142.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (7 samples, 0.96%)</title><rect x="249.2" y="115.0" width="11.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="252.2" y="126.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.14%)</title><rect x="249.2" y="99.0" width="1.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="252.2" y="110.0"></text>
</g>
<g>
<title>writeBytes (6 samples, 0.82%)</title><rect x="250.8" y="99.0" width="9.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="253.8" y="110.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.14%)</title><rect x="252.5" y="83.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="255.5" y="94.0"></text>
</g>
<g>
<title>handleWrite (1 samples, 0.14%)</title><rect x="254.1" y="83.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="257.1" y="94.0"></text>
</g>
<g>
<title>jni_GetObjectField (2 samples, 0.27%)</title><rect x="255.7" y="83.0" width="3.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="258.7" y="94.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.14%)</title><rect x="257.3" y="67.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="260.3" y="78.0"></text>
</g>
<g>
<title>java_lang_ref_Reference::is_referent_field(oopDesc*, long) (1 samples, 0.14%)</title><rect x="257.3" y="51.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="260.3" y="62.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.14%)</title><rect x="258.9" y="83.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="261.9" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.14%)</title><rect x="260.5" y="227.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="263.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.14%)</title><rect x="260.5" y="211.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.14%)</title><rect x="260.5" y="195.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.14%)</title><rect x="260.5" y="179.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="263.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.27%)</title><rect x="262.2" y="227.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="265.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.27%)</title><rect x="262.2" y="211.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="265.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.27%)</title><rect x="262.2" y="195.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="265.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.27%)</title><rect x="262.2" y="179.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="265.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.14%)</title><rect x="263.8" y="163.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="266.8" y="174.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.14%)</title><rect x="263.8" y="147.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="266.8" y="158.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.14%)</title><rect x="263.8" y="131.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="266.8" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (4 samples, 0.55%)</title><rect x="265.4" y="243.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="268.4" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (3 samples, 0.41%)</title><rect x="265.4" y="227.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="268.4" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (3 samples, 0.41%)</title><rect x="265.4" y="211.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="268.4" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.14%)</title><rect x="265.4" y="195.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="268.4" y="206.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.14%)</title><rect x="265.4" y="179.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="268.4" y="190.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.27%)</title><rect x="267.0" y="195.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="270.0" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.27%)</title><rect x="267.0" y="179.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="270.0" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.14%)</title><rect x="268.6" y="163.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.6" y="174.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.14%)</title><rect x="268.6" y="147.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="271.6" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (1 samples, 0.14%)</title><rect x="270.2" y="227.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="273.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.14%)</title><rect x="270.2" y="211.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.2" y="222.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.14%)</title><rect x="270.2" y="195.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.2" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.14%)</title><rect x="270.2" y="179.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="273.2" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.14%)</title><rect x="271.9" y="275.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (4 samples, 0.55%)</title><rect x="273.5" y="387.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="276.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.55%)</title><rect x="273.5" y="371.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.55%)</title><rect x="273.5" y="355.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.14%)</title><rect x="273.5" y="339.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="276.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.14%)</title><rect x="273.5" y="323.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="276.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.14%)</title><rect x="273.5" y="307.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="276.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.14%)</title><rect x="273.5" y="291.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="276.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.14%)</title><rect x="273.5" y="275.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="276.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.14%)</title><rect x="275.1" y="339.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="278.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.14%)</title><rect x="275.1" y="323.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="278.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.14%)</title><rect x="275.1" y="307.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="278.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.14%)</title><rect x="275.1" y="291.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="278.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.14%)</title><rect x="275.1" y="275.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.14%)</title><rect x="275.1" y="259.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.1" y="270.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="275.1" y="243.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="278.1" y="254.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.14%)</title><rect x="275.1" y="227.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="278.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.27%)</title><rect x="276.7" y="339.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="279.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.27%)</title><rect x="276.7" y="323.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="279.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.27%)</title><rect x="276.7" y="307.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.27%)</title><rect x="276.7" y="291.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.27%)</title><rect x="276.7" y="275.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="279.7" y="286.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.14%)</title><rect x="276.7" y="259.0" width="1.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="279.7" y="270.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.14%)</title><rect x="276.7" y="243.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="279.7" y="254.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.14%)</title><rect x="278.3" y="259.0" width="1.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="281.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.27%)</title><rect x="279.9" y="451.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="282.9" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.14%)</title><rect x="279.9" y="435.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="282.9" y="446.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="279.9" y="419.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="282.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="279.9" y="403.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="282.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.14%)</title><rect x="279.9" y="387.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="282.9" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.14%)</title><rect x="281.6" y="435.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="284.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.68%)</title><rect x="283.2" y="451.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.41%)</title><rect x="286.4" y="435.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.27%)</title><rect x="288.0" y="419.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="291.0" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.14%)</title><rect x="291.3" y="451.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="294.3" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.14%)</title><rect x="291.3" y="435.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="294.3" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 0.82%)</title><rect x="292.9" y="467.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="295.9" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 0.82%)</title><rect x="292.9" y="451.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="295.9" y="462.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.41%)</title><rect x="292.9" y="435.0" width="4.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="295.9" y="446.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.14%)</title><rect x="292.9" y="419.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="295.9" y="430.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.27%)</title><rect x="294.5" y="419.0" width="3.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="297.5" y="430.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.14%)</title><rect x="294.5" y="403.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="297.5" y="414.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.14%)</title><rect x="296.1" y="403.0" width="1.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="299.1" y="414.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.14%)</title><rect x="296.1" y="387.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="299.1" y="398.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.41%)</title><rect x="297.7" y="435.0" width="4.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="300.7" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=117868] (54 samples, 7.40%)</title><rect x="302.6" y="531.0" width="87.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="305.6" y="542.0">[NIO Selec..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (54 samples, 7.40%)</title><rect x="302.6" y="515.0" width="87.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.6" y="526.0">one/nio/se..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.14%)</title><rect x="302.6" y="499.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="305.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.14%)</title><rect x="304.2" y="499.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="307.2" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 0.68%)</title><rect x="305.8" y="499.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.8" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 0.68%)</title><rect x="305.8" y="483.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.8" y="494.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.27%)</title><rect x="305.8" y="467.0" width="3.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="308.8" y="478.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.14%)</title><rect x="307.4" y="451.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="310.4" y="462.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.41%)</title><rect x="309.0" y="467.0" width="4.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="312.0" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (47 samples, 6.44%)</title><rect x="313.9" y="499.0" width="76.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="316.9" y="510.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (47 samples, 6.44%)</title><rect x="313.9" y="483.0" width="76.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="316.9" y="494.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (41 samples, 5.62%)</title><rect x="313.9" y="467.0" width="66.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="316.9" y="478.0">one/nio..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (1 samples, 0.14%)</title><rect x="315.5" y="451.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="318.5" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (32 samples, 4.38%)</title><rect x="317.1" y="451.0" width="51.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="320.1" y="462.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (32 samples, 4.38%)</title><rect x="317.1" y="435.0" width="51.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="320.1" y="446.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (32 samples, 4.38%)</title><rect x="317.1" y="419.0" width="51.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="320.1" y="430.0">Reque..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (32 samples, 4.38%)</title><rect x="317.1" y="403.0" width="51.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="320.1" y="414.0">ru/ma..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (25 samples, 3.42%)</title><rect x="317.1" y="387.0" width="40.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="320.1" y="398.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (25 samples, 3.42%)</title><rect x="317.1" y="371.0" width="40.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="320.1" y="382.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (25 samples, 3.42%)</title><rect x="317.1" y="355.0" width="40.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="320.1" y="366.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (24 samples, 3.29%)</title><rect x="317.1" y="339.0" width="38.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="320.1" y="350.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (24 samples, 3.29%)</title><rect x="317.1" y="323.0" width="38.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="320.1" y="334.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (24 samples, 3.29%)</title><rect x="317.1" y="307.0" width="38.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="320.1" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (24 samples, 3.29%)</title><rect x="317.1" y="291.0" width="38.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="320.1" y="302.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (22 samples, 3.01%)</title><rect x="317.1" y="275.0" width="35.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="320.1" y="286.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (22 samples, 3.01%)</title><rect x="317.1" y="259.0" width="35.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="320.1" y="270.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (5 samples, 0.68%)</title><rect x="317.1" y="243.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="320.1" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (3 samples, 0.41%)</title><rect x="317.1" y="227.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="320.1" y="238.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (3 samples, 0.41%)</title><rect x="317.1" y="211.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="320.1" y="222.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (3 samples, 0.41%)</title><rect x="317.1" y="195.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="320.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.14%)</title><rect x="317.1" y="179.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="320.1" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.14%)</title><rect x="317.1" y="163.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.1" y="174.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (1 samples, 0.14%)</title><rect x="318.7" y="179.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="321.7" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.14%)</title><rect x="318.7" y="163.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="321.7" y="174.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.isEscapedDelimeter (1 samples, 0.14%)</title><rect x="320.4" y="179.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.4" y="190.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.14%)</title><rect x="320.4" y="163.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="323.4" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (2 samples, 0.27%)</title><rect x="322.0" y="227.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="325.0" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (2 samples, 0.27%)</title><rect x="322.0" y="211.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="325.0" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.27%)</title><rect x="322.0" y="195.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="325.0" y="206.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.14%)</title><rect x="323.6" y="179.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="326.6" y="190.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (11 samples, 1.51%)</title><rect x="325.2" y="243.0" width="17.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="328.2" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (7 samples, 0.96%)</title><rect x="325.2" y="227.0" width="11.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="328.2" y="238.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (7 samples, 0.96%)</title><rect x="325.2" y="211.0" width="11.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="328.2" y="222.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (7 samples, 0.96%)</title><rect x="325.2" y="195.0" width="11.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="328.2" y="206.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (7 samples, 0.96%)</title><rect x="325.2" y="179.0" width="11.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.2" y="190.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (7 samples, 0.96%)</title><rect x="325.2" y="163.0" width="11.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="328.2" y="174.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (6 samples, 0.82%)</title><rect x="325.2" y="147.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.2" y="158.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (6 samples, 0.82%)</title><rect x="325.2" y="131.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="328.2" y="142.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (6 samples, 0.82%)</title><rect x="325.2" y="115.0" width="9.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="328.2" y="126.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.14%)</title><rect x="325.2" y="99.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="328.2" y="110.0"></text>
</g>
<g>
<title>writeBytes (5 samples, 0.68%)</title><rect x="326.8" y="99.0" width="8.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="329.8" y="110.0"></text>
</g>
<g>
<title>__libc_write (4 samples, 0.55%)</title><rect x="326.8" y="83.0" width="6.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="329.8" y="94.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.14%)</title><rect x="333.3" y="83.0" width="1.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="336.3" y="94.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.14%)</title><rect x="333.3" y="67.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="336.3" y="78.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.14%)</title><rect x="334.9" y="147.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="337.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.41%)</title><rect x="336.5" y="227.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="339.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.41%)</title><rect x="336.5" y="211.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="339.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.41%)</title><rect x="336.5" y="195.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="339.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.14%)</title><rect x="336.5" y="179.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="339.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.14%)</title><rect x="336.5" y="163.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="339.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.14%)</title><rect x="336.5" y="147.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="339.5" y="158.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.14%)</title><rect x="336.5" y="131.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="339.5" y="142.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.14%)</title><rect x="336.5" y="115.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="339.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (2 samples, 0.27%)</title><rect x="338.1" y="179.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="341.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.14%)</title><rect x="341.4" y="227.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.14%)</title><rect x="341.4" y="211.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="344.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.14%)</title><rect x="341.4" y="195.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="344.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.14%)</title><rect x="341.4" y="179.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="344.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.14%)</title><rect x="341.4" y="163.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="344.4" y="174.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.14%)</title><rect x="341.4" y="147.0" width="1.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="344.4" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (6 samples, 0.82%)</title><rect x="343.0" y="243.0" width="9.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="346.0" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (6 samples, 0.82%)</title><rect x="343.0" y="227.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="346.0" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (6 samples, 0.82%)</title><rect x="343.0" y="211.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="346.0" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (4 samples, 0.55%)</title><rect x="343.0" y="195.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="346.0" y="206.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (2 samples, 0.27%)</title><rect x="346.2" y="179.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="349.2" y="190.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (2 samples, 0.27%)</title><rect x="346.2" y="163.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="349.2" y="174.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (2 samples, 0.27%)</title><rect x="346.2" y="147.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="349.2" y="158.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (1 samples, 0.14%)</title><rect x="346.2" y="131.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="349.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.length (1 samples, 0.14%)</title><rect x="346.2" y="115.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="349.2" y="126.0"></text>
</g>
<g>
<title>java/util/Calendar.setTime (1 samples, 0.14%)</title><rect x="347.8" y="131.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.8" y="142.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (1 samples, 0.14%)</title><rect x="347.8" y="115.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="350.8" y="126.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 0.14%)</title><rect x="347.8" y="99.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="350.8" y="110.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 0.14%)</title><rect x="347.8" y="83.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="350.8" y="94.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getOffsets (1 samples, 0.14%)</title><rect x="347.8" y="67.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="350.8" y="78.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getOffsets (1 samples, 0.14%)</title><rect x="347.8" y="51.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="350.8" y="62.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getTransitionIndex (1 samples, 0.14%)</title><rect x="347.8" y="35.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.8" y="46.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.27%)</title><rect x="349.5" y="195.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="352.5" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.27%)</title><rect x="349.5" y="179.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="352.5" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.14%)</title><rect x="349.5" y="163.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.5" y="174.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.14%)</title><rect x="351.1" y="163.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="354.1" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.27%)</title><rect x="352.7" y="275.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="355.7" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.14%)</title><rect x="354.3" y="259.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="357.3" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.14%)</title><rect x="354.3" y="243.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="357.3" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (1 samples, 0.14%)</title><rect x="355.9" y="339.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="358.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.14%)</title><rect x="357.5" y="387.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="360.5" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.14%)</title><rect x="357.5" y="371.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="360.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.14%)</title><rect x="357.5" y="355.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="360.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (6 samples, 0.82%)</title><rect x="359.2" y="387.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="362.2" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.14%)</title><rect x="359.2" y="371.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="362.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.68%)</title><rect x="360.8" y="371.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="363.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.68%)</title><rect x="360.8" y="355.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="363.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.14%)</title><rect x="360.8" y="339.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="363.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.14%)</title><rect x="360.8" y="323.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="363.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.14%)</title><rect x="360.8" y="307.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="363.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.14%)</title><rect x="360.8" y="291.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="363.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.14%)</title><rect x="360.8" y="275.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="363.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.14%)</title><rect x="362.4" y="339.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="365.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.14%)</title><rect x="362.4" y="323.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="365.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.14%)</title><rect x="362.4" y="307.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="365.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.14%)</title><rect x="362.4" y="291.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="365.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.14%)</title><rect x="362.4" y="275.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="365.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.14%)</title><rect x="362.4" y="259.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.4" y="270.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="362.4" y="243.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="365.4" y="254.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.14%)</title><rect x="362.4" y="227.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="365.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.41%)</title><rect x="364.0" y="339.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="367.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.41%)</title><rect x="364.0" y="323.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="367.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.41%)</title><rect x="364.0" y="307.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.41%)</title><rect x="364.0" y="291.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="367.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.41%)</title><rect x="364.0" y="275.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.0" y="286.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.14%)</title><rect x="364.0" y="259.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="367.0" y="270.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.14%)</title><rect x="364.0" y="243.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="367.0" y="254.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.27%)</title><rect x="365.6" y="259.0" width="3.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="368.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.14%)</title><rect x="368.8" y="451.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.8" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.14%)</title><rect x="368.8" y="435.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="368.8" y="419.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="368.8" y="403.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="371.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.14%)</title><rect x="368.8" y="387.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="371.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.82%)</title><rect x="370.5" y="451.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="373.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.55%)</title><rect x="373.7" y="435.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="376.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.41%)</title><rect x="375.3" y="419.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="378.3" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 0.82%)</title><rect x="380.2" y="467.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="383.2" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (5 samples, 0.68%)</title><rect x="380.2" y="451.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="383.2" y="462.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.27%)</title><rect x="380.2" y="435.0" width="3.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="383.2" y="446.0"></text>
</g>
<g>
<title>arrayOopDesc::base_offset_in_bytes(BasicType) (1 samples, 0.14%)</title><rect x="380.2" y="419.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="383.2" y="430.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.14%)</title><rect x="381.8" y="419.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="384.8" y="430.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.41%)</title><rect x="383.4" y="435.0" width="4.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="386.4" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.14%)</title><rect x="388.2" y="451.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="391.2" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=117869] (51 samples, 6.99%)</title><rect x="389.9" y="531.0" width="82.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="392.9" y="542.0">[NIO Sele..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.14%)</title><rect x="389.9" y="515.0" width="1.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="392.9" y="526.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.14%)</title><rect x="389.9" y="499.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="392.9" y="510.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.14%)</title><rect x="389.9" y="483.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="392.9" y="494.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (50 samples, 6.85%)</title><rect x="391.5" y="515.0" width="80.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="394.5" y="526.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.55%)</title><rect x="391.5" y="499.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.5" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.55%)</title><rect x="391.5" y="483.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="394.5" y="494.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.14%)</title><rect x="393.1" y="467.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="396.1" y="478.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.14%)</title><rect x="394.7" y="467.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="397.7" y="478.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.14%)</title><rect x="396.3" y="467.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="399.3" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (46 samples, 6.30%)</title><rect x="397.9" y="499.0" width="74.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="400.9" y="510.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (46 samples, 6.30%)</title><rect x="397.9" y="483.0" width="74.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="400.9" y="494.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (38 samples, 5.21%)</title><rect x="397.9" y="467.0" width="61.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="400.9" y="478.0">one/ni..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.14%)</title><rect x="397.9" y="451.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="400.9" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (29 samples, 3.97%)</title><rect x="399.6" y="451.0" width="46.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="402.6" y="462.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (29 samples, 3.97%)</title><rect x="399.6" y="435.0" width="46.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="402.6" y="446.0">one/..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (27 samples, 3.70%)</title><rect x="399.6" y="419.0" width="43.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.6" y="430.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.14%)</title><rect x="399.6" y="403.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="402.6" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.14%)</title><rect x="399.6" y="387.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="402.6" y="398.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.14%)</title><rect x="399.6" y="371.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="402.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (26 samples, 3.56%)</title><rect x="401.2" y="403.0" width="42.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="404.2" y="414.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (22 samples, 3.01%)</title><rect x="401.2" y="387.0" width="35.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="404.2" y="398.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (22 samples, 3.01%)</title><rect x="401.2" y="371.0" width="35.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="404.2" y="382.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (21 samples, 2.88%)</title><rect x="401.2" y="355.0" width="33.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="404.2" y="366.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (19 samples, 2.60%)</title><rect x="401.2" y="339.0" width="30.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="404.2" y="350.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (19 samples, 2.60%)</title><rect x="401.2" y="323.0" width="30.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="404.2" y="334.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (19 samples, 2.60%)</title><rect x="401.2" y="307.0" width="30.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="404.2" y="318.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (19 samples, 2.60%)</title><rect x="401.2" y="291.0" width="30.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="404.2" y="302.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (17 samples, 2.33%)</title><rect x="401.2" y="275.0" width="27.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="404.2" y="286.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (17 samples, 2.33%)</title><rect x="401.2" y="259.0" width="27.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="404.2" y="270.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (2 samples, 0.27%)</title><rect x="401.2" y="243.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="404.2" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.14%)</title><rect x="401.2" y="227.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="404.2" y="238.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.14%)</title><rect x="401.2" y="211.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="404.2" y="222.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.14%)</title><rect x="401.2" y="195.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="404.2" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.14%)</title><rect x="401.2" y="179.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="404.2" y="190.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (1 samples, 0.14%)</title><rect x="402.8" y="227.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="405.8" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (1 samples, 0.14%)</title><rect x="402.8" y="211.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="405.8" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.14%)</title><rect x="402.8" y="195.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="405.8" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (11 samples, 1.51%)</title><rect x="404.4" y="243.0" width="17.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.4" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (9 samples, 1.23%)</title><rect x="404.4" y="227.0" width="14.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.4" y="238.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (9 samples, 1.23%)</title><rect x="404.4" y="211.0" width="14.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="407.4" y="222.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (9 samples, 1.23%)</title><rect x="404.4" y="195.0" width="14.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.4" y="206.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (8 samples, 1.10%)</title><rect x="406.0" y="179.0" width="13.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="409.0" y="190.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (8 samples, 1.10%)</title><rect x="406.0" y="163.0" width="13.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="409.0" y="174.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (8 samples, 1.10%)</title><rect x="406.0" y="147.0" width="13.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="409.0" y="158.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (8 samples, 1.10%)</title><rect x="406.0" y="131.0" width="13.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="409.0" y="142.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (5 samples, 0.68%)</title><rect x="410.9" y="115.0" width="8.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="413.9" y="126.0"></text>
</g>
<g>
<title>writeBytes (5 samples, 0.68%)</title><rect x="410.9" y="99.0" width="8.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="413.9" y="110.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.14%)</title><rect x="410.9" y="83.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="413.9" y="94.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.14%)</title><rect x="412.5" y="83.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="415.5" y="94.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.14%)</title><rect x="414.1" y="83.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="417.1" y="94.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.14%)</title><rect x="415.7" y="83.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="418.7" y="94.0"></text>
</g>
<g>
<title>write@plt (1 samples, 0.14%)</title><rect x="417.3" y="83.0" width="1.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="420.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.27%)</title><rect x="419.0" y="227.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.27%)</title><rect x="419.0" y="211.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="422.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.27%)</title><rect x="419.0" y="195.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="422.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.27%)</title><rect x="419.0" y="179.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.27%)</title><rect x="419.0" y="163.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.27%)</title><rect x="419.0" y="147.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.0" y="158.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.27%)</title><rect x="419.0" y="131.0" width="3.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="422.0" y="142.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.14%)</title><rect x="419.0" y="115.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="422.0" y="126.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.14%)</title><rect x="419.0" y="99.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="422.0" y="110.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.14%)</title><rect x="420.6" y="115.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="423.6" y="126.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (4 samples, 0.55%)</title><rect x="422.2" y="243.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.2" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (4 samples, 0.55%)</title><rect x="422.2" y="227.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="425.2" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (4 samples, 0.55%)</title><rect x="422.2" y="211.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.2" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.55%)</title><rect x="422.2" y="195.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.2" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.55%)</title><rect x="422.2" y="179.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="425.2" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.27%)</title><rect x="425.4" y="163.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="428.4" y="174.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.27%)</title><rect x="425.4" y="147.0" width="3.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="428.4" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.27%)</title><rect x="428.7" y="275.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="431.7" y="286.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.14%)</title><rect x="431.9" y="339.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="434.9" y="350.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.14%)</title><rect x="433.5" y="339.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="436.5" y="350.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.14%)</title><rect x="433.5" y="323.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="436.5" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.14%)</title><rect x="435.1" y="355.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="438.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (4 samples, 0.55%)</title><rect x="436.7" y="387.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="439.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.55%)</title><rect x="436.7" y="371.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.55%)</title><rect x="436.7" y="355.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="439.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.14%)</title><rect x="436.7" y="339.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.14%)</title><rect x="436.7" y="323.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="439.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.14%)</title><rect x="436.7" y="307.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="439.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.14%)</title><rect x="436.7" y="291.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="439.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.14%)</title><rect x="436.7" y="275.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.27%)</title><rect x="438.4" y="339.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="441.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.14%)</title><rect x="440.0" y="323.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="443.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.14%)</title><rect x="440.0" y="307.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.14%)</title><rect x="440.0" y="291.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="443.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.14%)</title><rect x="440.0" y="275.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="443.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.14%)</title><rect x="441.6" y="339.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.14%)</title><rect x="441.6" y="323.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="444.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.14%)</title><rect x="441.6" y="307.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="444.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.14%)</title><rect x="441.6" y="291.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="444.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.14%)</title><rect x="441.6" y="275.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="444.6" y="286.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.14%)</title><rect x="441.6" y="259.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="444.6" y="270.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.14%)</title><rect x="441.6" y="243.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="444.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.27%)</title><rect x="443.2" y="419.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.2" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.27%)</title><rect x="443.2" y="403.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="446.2" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.14%)</title><rect x="443.2" y="387.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="446.2" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.14%)</title><rect x="444.8" y="387.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="447.8" y="398.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.14%)</title><rect x="444.8" y="371.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="447.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.14%)</title><rect x="444.8" y="355.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="447.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.27%)</title><rect x="446.4" y="451.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="449.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.14%)</title><rect x="446.4" y="435.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="449.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="446.4" y="419.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="449.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="446.4" y="403.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="449.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.14%)</title><rect x="446.4" y="387.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="449.4" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.14%)</title><rect x="448.1" y="435.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.68%)</title><rect x="449.7" y="451.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.14%)</title><rect x="456.1" y="435.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.14%)</title><rect x="456.1" y="419.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="459.1" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.14%)</title><rect x="457.8" y="451.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="460.8" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.14%)</title><rect x="457.8" y="435.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="460.8" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 1.10%)</title><rect x="459.4" y="467.0" width="12.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="462.4" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 0.96%)</title><rect x="459.4" y="451.0" width="11.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="462.4" y="462.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.82%)</title><rect x="461.0" y="435.0" width="9.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="464.0" y="446.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.14%)</title><rect x="461.0" y="419.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="464.0" y="430.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="462.6" y="419.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="465.6" y="430.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.55%)</title><rect x="464.2" y="419.0" width="6.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="467.2" y="430.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.14%)</title><rect x="467.5" y="403.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="470.5" y="414.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.14%)</title><rect x="469.1" y="403.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="472.1" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.14%)</title><rect x="470.7" y="451.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="473.7" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=117870] (34 samples, 4.66%)</title><rect x="472.3" y="531.0" width="55.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="475.3" y="542.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (34 samples, 4.66%)</title><rect x="472.3" y="515.0" width="55.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.3" y="526.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.14%)</title><rect x="472.3" y="499.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="475.3" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.41%)</title><rect x="473.9" y="499.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.9" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.41%)</title><rect x="473.9" y="483.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="476.9" y="494.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.27%)</title><rect x="475.5" y="467.0" width="3.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="478.5" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (30 samples, 4.11%)</title><rect x="478.8" y="499.0" width="48.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="481.8" y="510.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (30 samples, 4.11%)</title><rect x="478.8" y="483.0" width="48.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.8" y="494.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (25 samples, 3.42%)</title><rect x="478.8" y="467.0" width="40.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.8" y="478.0">one..</text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.14%)</title><rect x="486.8" y="451.0" width="1.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="489.8" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (15 samples, 2.05%)</title><rect x="488.5" y="451.0" width="24.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="491.5" y="462.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (15 samples, 2.05%)</title><rect x="488.5" y="435.0" width="24.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.5" y="446.0">o..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (14 samples, 1.92%)</title><rect x="488.5" y="419.0" width="22.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.5" y="430.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.14%)</title><rect x="488.5" y="403.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="491.5" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.14%)</title><rect x="488.5" y="387.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="491.5" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.14%)</title><rect x="488.5" y="371.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="491.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.14%)</title><rect x="488.5" y="355.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="491.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (1 samples, 0.14%)</title><rect x="488.5" y="339.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="491.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (13 samples, 1.78%)</title><rect x="490.1" y="403.0" width="21.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.1" y="414.0">r..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (9 samples, 1.23%)</title><rect x="490.1" y="387.0" width="14.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.1" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (9 samples, 1.23%)</title><rect x="490.1" y="371.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.1" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (8 samples, 1.10%)</title><rect x="490.1" y="355.0" width="12.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="493.1" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (8 samples, 1.10%)</title><rect x="490.1" y="339.0" width="12.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.1" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (8 samples, 1.10%)</title><rect x="490.1" y="323.0" width="12.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.1" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (8 samples, 1.10%)</title><rect x="490.1" y="307.0" width="12.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="493.1" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (8 samples, 1.10%)</title><rect x="490.1" y="291.0" width="12.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.1" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (7 samples, 0.96%)</title><rect x="490.1" y="275.0" width="11.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="493.1" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (7 samples, 0.96%)</title><rect x="490.1" y="259.0" width="11.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.1" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.14%)</title><rect x="490.1" y="243.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="493.1" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.14%)</title><rect x="490.1" y="227.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="493.1" y="238.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.14%)</title><rect x="490.1" y="211.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.1" y="222.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.14%)</title><rect x="490.1" y="195.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.1" y="206.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="490.1" y="179.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.1" y="190.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.14%)</title><rect x="490.1" y="163.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="493.1" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (4 samples, 0.55%)</title><rect x="491.7" y="243.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.7" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.flush (1 samples, 0.14%)</title><rect x="491.7" y="227.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.7" y="238.0"></text>
</g>
<g>
<title>java/io/PrintStream.flush (1 samples, 0.14%)</title><rect x="491.7" y="211.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="494.7" y="222.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.14%)</title><rect x="491.7" y="195.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.7" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (3 samples, 0.41%)</title><rect x="493.3" y="227.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="496.3" y="238.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (3 samples, 0.41%)</title><rect x="493.3" y="211.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="496.3" y="222.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (3 samples, 0.41%)</title><rect x="493.3" y="195.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="496.3" y="206.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (3 samples, 0.41%)</title><rect x="493.3" y="179.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="496.3" y="190.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (3 samples, 0.41%)</title><rect x="493.3" y="163.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="496.3" y="174.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (3 samples, 0.41%)</title><rect x="493.3" y="147.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="496.3" y="158.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (3 samples, 0.41%)</title><rect x="493.3" y="131.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="496.3" y="142.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (3 samples, 0.41%)</title><rect x="493.3" y="115.0" width="4.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="496.3" y="126.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.14%)</title><rect x="493.3" y="99.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="496.3" y="110.0"></text>
</g>
<g>
<title>writeBytes (2 samples, 0.27%)</title><rect x="494.9" y="99.0" width="3.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="497.9" y="110.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.14%)</title><rect x="494.9" y="83.0" width="1.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="497.9" y="94.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.14%)</title><rect x="496.5" y="83.0" width="1.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="499.5" y="94.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.14%)</title><rect x="496.5" y="67.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="499.5" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.27%)</title><rect x="498.2" y="243.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.2" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.27%)</title><rect x="498.2" y="227.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.2" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.27%)</title><rect x="498.2" y="211.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.2" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.27%)</title><rect x="498.2" y="195.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="501.2" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.27%)</title><rect x="498.2" y="179.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="501.2" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.14%)</title><rect x="498.2" y="163.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.2" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.14%)</title><rect x="498.2" y="147.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.2" y="158.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.14%)</title><rect x="498.2" y="131.0" width="1.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="501.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.14%)</title><rect x="499.8" y="163.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="502.8" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.14%)</title><rect x="501.4" y="275.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="504.4" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.14%)</title><rect x="503.0" y="355.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="506.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (4 samples, 0.55%)</title><rect x="504.6" y="387.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="507.6" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.14%)</title><rect x="504.6" y="371.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="507.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.41%)</title><rect x="506.2" y="371.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="509.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.41%)</title><rect x="506.2" y="355.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="509.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.27%)</title><rect x="507.9" y="339.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="510.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.27%)</title><rect x="507.9" y="323.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="510.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.27%)</title><rect x="507.9" y="307.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="510.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.27%)</title><rect x="507.9" y="291.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="510.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.27%)</title><rect x="507.9" y="275.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="510.9" y="286.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.14%)</title><rect x="507.9" y="259.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="510.9" y="270.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.14%)</title><rect x="507.9" y="243.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="510.9" y="254.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.14%)</title><rect x="509.5" y="259.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="512.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.14%)</title><rect x="511.1" y="419.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.1" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.14%)</title><rect x="511.1" y="403.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.1" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.14%)</title><rect x="511.1" y="387.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.1" y="398.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.14%)</title><rect x="511.1" y="371.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.14%)</title><rect x="511.1" y="355.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.14%)</title><rect x="512.7" y="451.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.14%)</title><rect x="512.7" y="435.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="515.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="512.7" y="419.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="512.7" y="403.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.14%)</title><rect x="512.7" y="387.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.41%)</title><rect x="514.3" y="451.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="517.3" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 0.68%)</title><rect x="519.2" y="467.0" width="8.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="522.2" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.55%)</title><rect x="519.2" y="451.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="522.2" y="462.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.41%)</title><rect x="519.2" y="435.0" width="4.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="522.2" y="446.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.14%)</title><rect x="519.2" y="419.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="522.2" y="430.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.14%)</title><rect x="520.8" y="419.0" width="1.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="523.8" y="430.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.14%)</title><rect x="522.4" y="419.0" width="1.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="525.4" y="430.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.14%)</title><rect x="524.0" y="435.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="527.0" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.14%)</title><rect x="525.6" y="451.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="528.6" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=117871] (61 samples, 8.36%)</title><rect x="527.3" y="531.0" width="98.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="530.3" y="542.0">[NIO Selecto..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.41%)</title><rect x="527.3" y="515.0" width="4.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="530.3" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.41%)</title><rect x="527.3" y="499.0" width="4.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="530.3" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (3 samples, 0.41%)</title><rect x="527.3" y="483.0" width="4.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="530.3" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.27%)</title><rect x="527.3" y="467.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="530.3" y="478.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.27%)</title><rect x="527.3" y="451.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="530.3" y="462.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.14%)</title><rect x="530.5" y="467.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="533.5" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (58 samples, 7.95%)</title><rect x="532.1" y="515.0" width="93.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="535.1" y="526.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.14%)</title><rect x="532.1" y="499.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="535.1" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (8 samples, 1.10%)</title><rect x="533.7" y="499.0" width="13.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="536.7" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (8 samples, 1.10%)</title><rect x="533.7" y="483.0" width="13.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="536.7" y="494.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.27%)</title><rect x="535.3" y="467.0" width="3.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="538.3" y="478.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.14%)</title><rect x="538.6" y="467.0" width="1.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="541.6" y="478.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.55%)</title><rect x="540.2" y="467.0" width="6.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="543.2" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (49 samples, 6.71%)</title><rect x="546.7" y="499.0" width="79.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="549.7" y="510.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (49 samples, 6.71%)</title><rect x="546.7" y="483.0" width="79.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="549.7" y="494.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (34 samples, 4.66%)</title><rect x="546.7" y="467.0" width="54.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="549.7" y="478.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (31 samples, 4.25%)</title><rect x="546.7" y="451.0" width="50.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="549.7" y="462.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (31 samples, 4.25%)</title><rect x="546.7" y="435.0" width="50.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="549.7" y="446.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (30 samples, 4.11%)</title><rect x="546.7" y="419.0" width="48.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="549.7" y="430.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.14%)</title><rect x="546.7" y="403.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="549.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.14%)</title><rect x="546.7" y="387.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="549.7" y="398.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.14%)</title><rect x="546.7" y="371.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="549.7" y="382.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="546.7" y="355.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="549.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="546.7" y="339.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="549.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.14%)</title><rect x="546.7" y="323.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="549.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (29 samples, 3.97%)</title><rect x="548.3" y="403.0" width="46.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="551.3" y="414.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (25 samples, 3.42%)</title><rect x="548.3" y="387.0" width="40.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="551.3" y="398.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (25 samples, 3.42%)</title><rect x="548.3" y="371.0" width="40.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="551.3" y="382.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (25 samples, 3.42%)</title><rect x="548.3" y="355.0" width="40.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.3" y="366.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (25 samples, 3.42%)</title><rect x="548.3" y="339.0" width="40.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.3" y="350.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (25 samples, 3.42%)</title><rect x="548.3" y="323.0" width="40.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="551.3" y="334.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (25 samples, 3.42%)</title><rect x="548.3" y="307.0" width="40.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="551.3" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (25 samples, 3.42%)</title><rect x="548.3" y="291.0" width="40.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="551.3" y="302.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (23 samples, 3.15%)</title><rect x="548.3" y="275.0" width="37.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="551.3" y="286.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (23 samples, 3.15%)</title><rect x="548.3" y="259.0" width="37.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.3" y="270.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (5 samples, 0.68%)</title><rect x="548.3" y="243.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="551.3" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (4 samples, 0.55%)</title><rect x="548.3" y="227.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="551.3" y="238.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.55%)</title><rect x="548.3" y="211.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="551.3" y="222.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.55%)</title><rect x="548.3" y="195.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="551.3" y="206.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="548.3" y="179.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="551.3" y="190.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.14%)</title><rect x="549.9" y="179.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.9" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.14%)</title><rect x="549.9" y="163.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.9" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.appendChars (1 samples, 0.14%)</title><rect x="549.9" y="147.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.14%)</title><rect x="549.9" y="131.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="552.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.27%)</title><rect x="551.5" y="179.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.5" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.27%)</title><rect x="551.5" y="163.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.5" y="174.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.14%)</title><rect x="553.1" y="147.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="556.1" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (1 samples, 0.14%)</title><rect x="554.7" y="227.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.7" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (1 samples, 0.14%)</title><rect x="554.7" y="211.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.7" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.14%)</title><rect x="554.7" y="195.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.7" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (14 samples, 1.92%)</title><rect x="556.4" y="243.0" width="22.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="559.4" y="254.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (8 samples, 1.10%)</title><rect x="558.0" y="227.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="561.0" y="238.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (8 samples, 1.10%)</title><rect x="558.0" y="211.0" width="12.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="561.0" y="222.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (8 samples, 1.10%)</title><rect x="558.0" y="195.0" width="12.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="561.0" y="206.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (8 samples, 1.10%)</title><rect x="558.0" y="179.0" width="12.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.0" y="190.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (8 samples, 1.10%)</title><rect x="558.0" y="163.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="561.0" y="174.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (8 samples, 1.10%)</title><rect x="558.0" y="147.0" width="12.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="561.0" y="158.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (8 samples, 1.10%)</title><rect x="558.0" y="131.0" width="12.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="561.0" y="142.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (6 samples, 0.82%)</title><rect x="561.2" y="115.0" width="9.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="564.2" y="126.0"></text>
</g>
<g>
<title>writeBytes (5 samples, 0.68%)</title><rect x="562.8" y="99.0" width="8.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="565.8" y="110.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.14%)</title><rect x="562.8" y="83.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="565.8" y="94.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.14%)</title><rect x="564.4" y="83.0" width="1.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="567.4" y="94.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.14%)</title><rect x="566.1" y="83.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="569.1" y="94.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.14%)</title><rect x="566.1" y="67.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="569.1" y="78.0"></text>
</g>
<g>
<title>jni_GetArrayLength (1 samples, 0.14%)</title><rect x="567.7" y="83.0" width="1.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="570.7" y="94.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.14%)</title><rect x="569.3" y="83.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="572.3" y="94.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.14%)</title><rect x="569.3" y="67.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="572.3" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.41%)</title><rect x="570.9" y="227.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.41%)</title><rect x="570.9" y="211.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="573.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.14%)</title><rect x="570.9" y="195.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="573.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.14%)</title><rect x="570.9" y="179.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="573.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.14%)</title><rect x="570.9" y="163.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.14%)</title><rect x="570.9" y="147.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="573.9" y="158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="570.9" y="131.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="573.9" y="142.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.14%)</title><rect x="570.9" y="115.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="573.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.14%)</title><rect x="572.5" y="195.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="575.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.14%)</title><rect x="572.5" y="179.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="575.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.14%)</title><rect x="574.1" y="195.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="577.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.14%)</title><rect x="574.1" y="179.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.27%)</title><rect x="575.8" y="227.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.27%)</title><rect x="575.8" y="211.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.27%)</title><rect x="575.8" y="195.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.27%)</title><rect x="575.8" y="179.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="578.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.27%)</title><rect x="575.8" y="163.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.8" y="174.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.14%)</title><rect x="575.8" y="147.0" width="1.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="578.8" y="158.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.14%)</title><rect x="577.4" y="147.0" width="1.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="580.4" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (4 samples, 0.55%)</title><rect x="579.0" y="243.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.0" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (4 samples, 0.55%)</title><rect x="579.0" y="227.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="582.0" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (4 samples, 0.55%)</title><rect x="579.0" y="211.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="582.0" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.14%)</title><rect x="579.0" y="195.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="582.0" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.14%)</title><rect x="579.0" y="179.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="582.0" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.14%)</title><rect x="579.0" y="163.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="582.0" y="174.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.14%)</title><rect x="579.0" y="147.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="582.0" y="158.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.14%)</title><rect x="579.0" y="131.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="582.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.41%)</title><rect x="580.6" y="195.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="583.6" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.41%)</title><rect x="580.6" y="179.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="583.6" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.27%)</title><rect x="582.2" y="163.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="585.2" y="174.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.27%)</title><rect x="582.2" y="147.0" width="3.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="585.2" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.27%)</title><rect x="585.5" y="275.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="588.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (4 samples, 0.55%)</title><rect x="588.7" y="387.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.55%)</title><rect x="588.7" y="371.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="591.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.55%)</title><rect x="588.7" y="355.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="591.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.14%)</title><rect x="588.7" y="339.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="591.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.14%)</title><rect x="588.7" y="323.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="591.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.14%)</title><rect x="588.7" y="307.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="591.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.14%)</title><rect x="588.7" y="291.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.14%)</title><rect x="588.7" y="275.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.41%)</title><rect x="590.3" y="339.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="593.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.41%)</title><rect x="590.3" y="323.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.41%)</title><rect x="590.3" y="307.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="593.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.41%)</title><rect x="590.3" y="291.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.41%)</title><rect x="590.3" y="275.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="593.3" y="286.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.41%)</title><rect x="590.3" y="259.0" width="4.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="593.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.14%)</title><rect x="595.2" y="419.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="598.2" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.14%)</title><rect x="595.2" y="403.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="598.2" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.14%)</title><rect x="595.2" y="387.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.2" y="398.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.14%)</title><rect x="595.2" y="371.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.14%)</title><rect x="595.2" y="355.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="598.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.14%)</title><rect x="596.8" y="451.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="599.8" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.14%)</title><rect x="596.8" y="435.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="599.8" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.14%)</title><rect x="596.8" y="419.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="599.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.14%)</title><rect x="596.8" y="403.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="599.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.14%)</title><rect x="596.8" y="387.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="599.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.14%)</title><rect x="596.8" y="371.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.8" y="382.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.14%)</title><rect x="596.8" y="355.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="599.8" y="366.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.14%)</title><rect x="596.8" y="339.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="599.8" y="350.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.14%)</title><rect x="596.8" y="323.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="599.8" y="334.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.14%)</title><rect x="596.8" y="307.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="599.8" y="318.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.14%)</title><rect x="596.8" y="291.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="599.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.27%)</title><rect x="598.4" y="451.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="601.4" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (15 samples, 2.05%)</title><rect x="601.6" y="467.0" width="24.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="604.6" y="478.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (13 samples, 1.78%)</title><rect x="603.2" y="451.0" width="21.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="606.2" y="462.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.68%)</title><rect x="603.2" y="435.0" width="8.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="606.2" y="446.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (2 samples, 0.27%)</title><rect x="603.2" y="419.0" width="3.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="606.2" y="430.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.27%)</title><rect x="606.5" y="419.0" width="3.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="609.5" y="430.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.14%)</title><rect x="609.7" y="419.0" width="1.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="612.7" y="430.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.14%)</title><rect x="609.7" y="403.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="612.7" y="414.0"></text>
</g>
<g>
<title>__recv (8 samples, 1.10%)</title><rect x="611.3" y="435.0" width="12.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="614.3" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.14%)</title><rect x="624.2" y="451.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="627.2" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=117872] (53 samples, 7.26%)</title><rect x="625.9" y="531.0" width="85.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="628.9" y="542.0">[NIO Selec..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (53 samples, 7.26%)</title><rect x="625.9" y="515.0" width="85.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="628.9" y="526.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 0.82%)</title><rect x="625.9" y="499.0" width="9.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="628.9" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 0.82%)</title><rect x="625.9" y="483.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="628.9" y="494.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 0.82%)</title><rect x="625.9" y="467.0" width="9.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="628.9" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (47 samples, 6.44%)</title><rect x="635.6" y="499.0" width="75.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.6" y="510.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (47 samples, 6.44%)</title><rect x="635.6" y="483.0" width="75.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="638.6" y="494.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (35 samples, 4.79%)</title><rect x="635.6" y="467.0" width="56.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="638.6" y="478.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (28 samples, 3.84%)</title><rect x="637.2" y="451.0" width="45.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.2" y="462.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (28 samples, 3.84%)</title><rect x="637.2" y="435.0" width="45.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="640.2" y="446.0">one/..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (28 samples, 3.84%)</title><rect x="637.2" y="419.0" width="45.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.2" y="430.0">Requ..</text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.14%)</title><rect x="637.2" y="403.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (27 samples, 3.70%)</title><rect x="638.8" y="403.0" width="43.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="641.8" y="414.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (25 samples, 3.42%)</title><rect x="638.8" y="387.0" width="40.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="641.8" y="398.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (25 samples, 3.42%)</title><rect x="638.8" y="371.0" width="40.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="641.8" y="382.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (25 samples, 3.42%)</title><rect x="638.8" y="355.0" width="40.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="641.8" y="366.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (24 samples, 3.29%)</title><rect x="640.4" y="339.0" width="38.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.4" y="350.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (24 samples, 3.29%)</title><rect x="640.4" y="323.0" width="38.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.4" y="334.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (24 samples, 3.29%)</title><rect x="640.4" y="307.0" width="38.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.4" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (24 samples, 3.29%)</title><rect x="640.4" y="291.0" width="38.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="643.4" y="302.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (24 samples, 3.29%)</title><rect x="640.4" y="275.0" width="38.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="643.4" y="286.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (24 samples, 3.29%)</title><rect x="640.4" y="259.0" width="38.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.4" y="270.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (7 samples, 0.96%)</title><rect x="640.4" y="243.0" width="11.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="643.4" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (4 samples, 0.55%)</title><rect x="640.4" y="227.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.4" y="238.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.55%)</title><rect x="640.4" y="211.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.4" y="222.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.55%)</title><rect x="640.4" y="195.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.4" y="206.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.14%)</title><rect x="640.4" y="179.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="643.4" y="190.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.14%)</title><rect x="642.0" y="179.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="645.0" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.14%)</title><rect x="642.0" y="163.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.0" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.appendChars (1 samples, 0.14%)</title><rect x="642.0" y="147.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="645.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.14%)</title><rect x="642.0" y="131.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.0" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (1 samples, 0.14%)</title><rect x="643.6" y="179.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="646.6" y="190.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.isEscapedDelimeter (1 samples, 0.14%)</title><rect x="645.3" y="179.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="648.3" y="190.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="645.3" y="163.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="648.3" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (3 samples, 0.41%)</title><rect x="646.9" y="227.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="649.9" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (2 samples, 0.27%)</title><rect x="648.5" y="211.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="651.5" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.27%)</title><rect x="648.5" y="195.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="651.5" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (11 samples, 1.51%)</title><rect x="651.7" y="243.0" width="17.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="654.7" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.flush (1 samples, 0.14%)</title><rect x="651.7" y="227.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.7" y="238.0"></text>
</g>
<g>
<title>java/io/PrintStream.flush (1 samples, 0.14%)</title><rect x="651.7" y="211.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.7" y="222.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.14%)</title><rect x="651.7" y="195.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="654.7" y="206.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.14%)</title><rect x="651.7" y="179.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="654.7" y="190.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (6 samples, 0.82%)</title><rect x="653.3" y="227.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="656.3" y="238.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (6 samples, 0.82%)</title><rect x="653.3" y="211.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="656.3" y="222.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (6 samples, 0.82%)</title><rect x="653.3" y="195.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.3" y="206.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (6 samples, 0.82%)</title><rect x="653.3" y="179.0" width="9.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="656.3" y="190.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (6 samples, 0.82%)</title><rect x="653.3" y="163.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.3" y="174.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (5 samples, 0.68%)</title><rect x="653.3" y="147.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="656.3" y="158.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (5 samples, 0.68%)</title><rect x="653.3" y="131.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.3" y="142.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (5 samples, 0.68%)</title><rect x="653.3" y="115.0" width="8.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="656.3" y="126.0"></text>
</g>
<g>
<title>writeBytes (5 samples, 0.68%)</title><rect x="653.3" y="99.0" width="8.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="656.3" y="110.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.14%)</title><rect x="653.3" y="83.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="656.3" y="94.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.14%)</title><rect x="655.0" y="83.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="658.0" y="94.0"></text>
</g>
<g>
<title>jni_GetObjectField (3 samples, 0.41%)</title><rect x="656.6" y="83.0" width="4.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="659.6" y="94.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.14%)</title><rect x="659.8" y="67.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="662.8" y="78.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.14%)</title><rect x="661.4" y="147.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="664.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.27%)</title><rect x="663.0" y="227.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="666.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.27%)</title><rect x="663.0" y="211.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.27%)</title><rect x="663.0" y="195.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="666.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.27%)</title><rect x="663.0" y="179.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="666.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.27%)</title><rect x="663.0" y="163.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="666.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.27%)</title><rect x="663.0" y="147.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="666.0" y="158.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.27%)</title><rect x="663.0" y="131.0" width="3.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="666.0" y="142.0"></text>
</g>
<g>
<title>__condvar_confirm_wakeup (1 samples, 0.14%)</title><rect x="663.0" y="115.0" width="1.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="666.0" y="126.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.14%)</title><rect x="664.7" y="115.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="667.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.27%)</title><rect x="666.3" y="227.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.27%)</title><rect x="666.3" y="211.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.27%)</title><rect x="666.3" y="195.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="669.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.14%)</title><rect x="666.3" y="179.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="669.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.14%)</title><rect x="666.3" y="163.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.14%)</title><rect x="666.3" y="147.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="669.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.14%)</title><rect x="667.9" y="179.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.14%)</title><rect x="667.9" y="163.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="670.9" y="174.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.14%)</title><rect x="667.9" y="147.0" width="1.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="670.9" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (6 samples, 0.82%)</title><rect x="669.5" y="243.0" width="9.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.5" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (5 samples, 0.68%)</title><rect x="669.5" y="227.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="672.5" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (5 samples, 0.68%)</title><rect x="669.5" y="211.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="672.5" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 0.27%)</title><rect x="669.5" y="195.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="672.5" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.14%)</title><rect x="671.1" y="179.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="674.1" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.14%)</title><rect x="671.1" y="163.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="674.1" y="174.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.14%)</title><rect x="671.1" y="147.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="674.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.27%)</title><rect x="672.7" y="195.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="675.7" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.27%)</title><rect x="672.7" y="179.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="675.7" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.27%)</title><rect x="672.7" y="163.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.7" y="174.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.14%)</title><rect x="674.4" y="147.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="677.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.14%)</title><rect x="676.0" y="195.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="679.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.14%)</title><rect x="676.0" y="179.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="679.0" y="190.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (1 samples, 0.14%)</title><rect x="677.6" y="227.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="680.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.14%)</title><rect x="677.6" y="211.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.14%)</title><rect x="677.6" y="195.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.14%)</title><rect x="677.6" y="179.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.6" y="190.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.14%)</title><rect x="677.6" y="163.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="680.6" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.14%)</title><rect x="679.2" y="387.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="682.2" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.14%)</title><rect x="679.2" y="371.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="682.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.14%)</title><rect x="679.2" y="355.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="682.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (1 samples, 0.14%)</title><rect x="680.8" y="387.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.14%)</title><rect x="680.8" y="371.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="683.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.14%)</title><rect x="680.8" y="355.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.14%)</title><rect x="680.8" y="339.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.14%)</title><rect x="680.8" y="323.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="683.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.14%)</title><rect x="680.8" y="307.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.14%)</title><rect x="680.8" y="291.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="683.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.14%)</title><rect x="680.8" y="275.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.8" y="286.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.14%)</title><rect x="680.8" y="259.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="683.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.41%)</title><rect x="682.4" y="451.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.14%)</title><rect x="682.4" y="435.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="682.4" y="419.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.14%)</title><rect x="682.4" y="403.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="685.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.14%)</title><rect x="682.4" y="387.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.4" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.27%)</title><rect x="684.1" y="435.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.41%)</title><rect x="687.3" y="451.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.3" y="462.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.14%)</title><rect x="690.5" y="435.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="693.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.14%)</title><rect x="690.5" y="419.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="693.5" y="430.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.14%)</title><rect x="692.1" y="467.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="695.1" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 1.51%)</title><rect x="693.8" y="467.0" width="17.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.8" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (8 samples, 1.10%)</title><rect x="695.4" y="451.0" width="12.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="698.4" y="462.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.41%)</title><rect x="697.0" y="435.0" width="4.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="700.0" y="446.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.14%)</title><rect x="697.0" y="419.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="700.0" y="430.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.14%)</title><rect x="698.6" y="419.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="701.6" y="430.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.14%)</title><rect x="700.2" y="419.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="703.2" y="430.0"></text>
</g>
<g>
<title>__recv (4 samples, 0.55%)</title><rect x="701.8" y="435.0" width="6.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="704.8" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (2 samples, 0.27%)</title><rect x="708.3" y="451.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="711.3" y="462.0"></text>
</g>
<g>
<title>[pool-3-thread-1 tid=117884] (28 samples, 3.84%)</title><rect x="711.5" y="531.0" width="45.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="714.5" y="542.0">[poo..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.14%)</title><rect x="711.5" y="515.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="714.5" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.14%)</title><rect x="711.5" y="499.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="714.5" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.14%)</title><rect x="711.5" y="483.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="714.5" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.14%)</title><rect x="711.5" y="467.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="714.5" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (27 samples, 3.70%)</title><rect x="713.2" y="515.0" width="43.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="716.2" y="526.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (27 samples, 3.70%)</title><rect x="713.2" y="499.0" width="43.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="716.2" y="510.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (27 samples, 3.70%)</title><rect x="713.2" y="483.0" width="43.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="716.2" y="494.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 1.23%)</title><rect x="713.2" y="467.0" width="14.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="716.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (8 samples, 1.10%)</title><rect x="714.8" y="451.0" width="12.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="717.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.82%)</title><rect x="714.8" y="435.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="717.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.27%)</title><rect x="714.8" y="419.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="717.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.27%)</title><rect x="714.8" y="403.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="717.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.27%)</title><rect x="714.8" y="387.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="717.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.27%)</title><rect x="714.8" y="371.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="717.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.27%)</title><rect x="714.8" y="355.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.8" y="366.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.14%)</title><rect x="714.8" y="339.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="717.8" y="350.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.14%)</title><rect x="716.4" y="339.0" width="1.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="719.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.55%)</title><rect x="718.0" y="419.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="721.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.55%)</title><rect x="718.0" y="403.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="721.0" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.27%)</title><rect x="718.0" y="387.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="721.0" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.14%)</title><rect x="719.6" y="371.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="722.6" y="382.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.27%)</title><rect x="721.2" y="387.0" width="3.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="724.2" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.14%)</title><rect x="721.2" y="371.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="724.2" y="382.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.14%)</title><rect x="722.8" y="371.0" width="1.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="725.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.27%)</title><rect x="724.5" y="435.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="727.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.27%)</title><rect x="724.5" y="419.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="727.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.27%)</title><rect x="724.5" y="403.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="727.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.14%)</title><rect x="726.1" y="387.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="729.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.14%)</title><rect x="726.1" y="371.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="729.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.14%)</title><rect x="726.1" y="355.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="729.1" y="366.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.14%)</title><rect x="726.1" y="339.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="729.1" y="350.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.14%)</title><rect x="726.1" y="323.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="729.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.run (18 samples, 2.47%)</title><rect x="727.7" y="467.0" width="29.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="730.7" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (18 samples, 2.47%)</title><rect x="727.7" y="451.0" width="29.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.7" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.putValue (18 samples, 2.47%)</title><rect x="727.7" y="435.0" width="29.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="730.7" y="446.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.82%)</title><rect x="727.7" y="419.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="730.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.14%)</title><rect x="727.7" y="403.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="730.7" y="414.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.14%)</title><rect x="727.7" y="387.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="730.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.14%)</title><rect x="727.7" y="371.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="730.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.55%)</title><rect x="729.3" y="403.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="732.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.27%)</title><rect x="729.3" y="387.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.3" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.27%)</title><rect x="732.5" y="387.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="735.5" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.27%)</title><rect x="732.5" y="371.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="735.5" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.27%)</title><rect x="732.5" y="355.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="735.5" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.27%)</title><rect x="732.5" y="339.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="735.5" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.14%)</title><rect x="732.5" y="323.0" width="1.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="735.5" y="334.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.14%)</title><rect x="732.5" y="307.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="735.5" y="318.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.14%)</title><rect x="734.2" y="323.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="737.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.14%)</title><rect x="735.8" y="403.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (12 samples, 1.64%)</title><rect x="737.4" y="419.0" width="19.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="740.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (11 samples, 1.51%)</title><rect x="739.0" y="403.0" width="17.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="742.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (11 samples, 1.51%)</title><rect x="739.0" y="387.0" width="17.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="742.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (10 samples, 1.37%)</title><rect x="740.6" y="371.0" width="16.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="743.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (1 samples, 0.14%)</title><rect x="743.9" y="355.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="746.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (1 samples, 0.14%)</title><rect x="743.9" y="339.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.14%)</title><rect x="745.5" y="355.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="748.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.14%)</title><rect x="745.5" y="339.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="748.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.82%)</title><rect x="747.1" y="355.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="750.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.82%)</title><rect x="747.1" y="339.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.27%)</title><rect x="753.6" y="323.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="756.6" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.27%)</title><rect x="753.6" y="307.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.6" y="318.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.14%)</title><rect x="755.2" y="291.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="758.2" y="302.0"></text>
</g>
<g>
<title>[pool-3-thread-2 tid=117890] (40 samples, 5.48%)</title><rect x="756.8" y="531.0" width="64.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="759.8" y="542.0">[pool-3..</text>
</g>
<g>
<title>java/lang/Thread.run (40 samples, 5.48%)</title><rect x="756.8" y="515.0" width="64.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="759.8" y="526.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (40 samples, 5.48%)</title><rect x="756.8" y="499.0" width="64.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="759.8" y="510.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (40 samples, 5.48%)</title><rect x="756.8" y="483.0" width="64.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.8" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.14%)</title><rect x="756.8" y="467.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.14%)</title><rect x="756.8" y="451.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="759.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.14%)</title><rect x="756.8" y="435.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="759.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (19 samples, 2.60%)</title><rect x="758.4" y="467.0" width="30.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.4" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (19 samples, 2.60%)</title><rect x="758.4" y="451.0" width="30.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.4" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (15 samples, 2.05%)</title><rect x="758.4" y="435.0" width="24.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="761.4" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.14%)</title><rect x="758.4" y="419.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="761.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.14%)</title><rect x="758.4" y="403.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="761.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.14%)</title><rect x="758.4" y="387.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="761.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.14%)</title><rect x="758.4" y="371.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="761.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.14%)</title><rect x="758.4" y="355.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.4" y="366.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.14%)</title><rect x="758.4" y="339.0" width="1.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="761.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.14%)</title><rect x="760.0" y="419.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="763.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.14%)</title><rect x="760.0" y="403.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="763.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (13 samples, 1.78%)</title><rect x="761.6" y="419.0" width="21.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="764.6" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 1.78%)</title><rect x="761.6" y="403.0" width="21.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="764.6" y="414.0">j..</text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.14%)</title><rect x="763.3" y="387.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="766.3" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park (9 samples, 1.23%)</title><rect x="764.9" y="387.0" width="14.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="767.9" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.68%)</title><rect x="764.9" y="371.0" width="8.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="767.9" y="382.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.14%)</title><rect x="769.7" y="355.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="772.7" y="366.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.14%)</title><rect x="771.3" y="355.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="774.3" y="366.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.14%)</title><rect x="773.0" y="371.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="776.0" y="382.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.27%)</title><rect x="774.6" y="371.0" width="3.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="777.6" y="382.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.14%)</title><rect x="777.8" y="371.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="780.8" y="382.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.27%)</title><rect x="779.4" y="387.0" width="3.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="782.4" y="398.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.27%)</title><rect x="779.4" y="371.0" width="3.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="782.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.14%)</title><rect x="782.7" y="435.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="785.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.14%)</title><rect x="782.7" y="419.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.14%)</title><rect x="782.7" y="403.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="785.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.14%)</title><rect x="782.7" y="387.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="785.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.14%)</title><rect x="782.7" y="371.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="785.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.14%)</title><rect x="782.7" y="355.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.7" y="366.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="782.7" y="339.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="785.7" y="350.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.14%)</title><rect x="782.7" y="323.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="785.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.41%)</title><rect x="784.3" y="435.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="787.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.41%)</title><rect x="784.3" y="419.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="787.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.41%)</title><rect x="784.3" y="403.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="787.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.41%)</title><rect x="784.3" y="387.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="787.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.41%)</title><rect x="784.3" y="371.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.3" y="382.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.41%)</title><rect x="784.3" y="355.0" width="4.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="787.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.run (20 samples, 2.74%)</title><rect x="789.1" y="467.0" width="32.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.1" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (20 samples, 2.74%)</title><rect x="789.1" y="451.0" width="32.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="792.1" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.putValue (20 samples, 2.74%)</title><rect x="789.1" y="435.0" width="32.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="792.1" y="446.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (12 samples, 1.64%)</title><rect x="789.1" y="419.0" width="19.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="792.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9 samples, 1.23%)</title><rect x="790.7" y="403.0" width="14.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="793.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.14%)</title><rect x="790.7" y="387.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="793.7" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 1.10%)</title><rect x="792.4" y="387.0" width="12.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="795.4" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 1.10%)</title><rect x="792.4" y="371.0" width="12.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="795.4" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (7 samples, 0.96%)</title><rect x="794.0" y="355.0" width="11.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="797.0" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (7 samples, 0.96%)</title><rect x="794.0" y="339.0" width="11.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.0" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.27%)</title><rect x="795.6" y="323.0" width="3.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="798.6" y="334.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="795.6" y="307.0" width="1.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="798.6" y="318.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.14%)</title><rect x="797.2" y="307.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="800.2" y="318.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.14%)</title><rect x="797.2" y="291.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="800.2" y="302.0"></text>
</g>
<g>
<title>__libc_send (3 samples, 0.41%)</title><rect x="798.8" y="323.0" width="4.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="801.8" y="334.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.14%)</title><rect x="803.7" y="323.0" width="1.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="806.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.27%)</title><rect x="805.3" y="403.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.3" y="414.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.14%)</title><rect x="806.9" y="387.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="809.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.14%)</title><rect x="806.9" y="371.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="809.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.14%)</title><rect x="808.5" y="419.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="811.5" y="430.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.14%)</title><rect x="808.5" y="403.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="811.5" y="414.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.14%)</title><rect x="808.5" y="387.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="811.5" y="398.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.14%)</title><rect x="808.5" y="371.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="811.5" y="382.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.14%)</title><rect x="808.5" y="355.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="811.5" y="366.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (1 samples, 0.14%)</title><rect x="808.5" y="339.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="811.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (7 samples, 0.96%)</title><rect x="810.1" y="419.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="813.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.14%)</title><rect x="813.4" y="403.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.14%)</title><rect x="813.4" y="387.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="816.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.14%)</title><rect x="813.4" y="371.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="816.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (1 samples, 0.14%)</title><rect x="813.4" y="355.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="816.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (1 samples, 0.14%)</title><rect x="813.4" y="339.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (4 samples, 0.55%)</title><rect x="815.0" y="403.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="818.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (4 samples, 0.55%)</title><rect x="815.0" y="387.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="818.0" y="398.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.14%)</title><rect x="815.0" y="371.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="818.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (3 samples, 0.41%)</title><rect x="816.6" y="371.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="819.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.27%)</title><rect x="818.2" y="355.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="821.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.27%)</title><rect x="818.2" y="339.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.14%)</title><rect x="819.8" y="323.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.8" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.14%)</title><rect x="819.8" y="307.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="822.8" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-3 tid=117889] (36 samples, 4.93%)</title><rect x="821.5" y="531.0" width="58.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="824.5" y="542.0">[pool-..</text>
</g>
<g>
<title>java/lang/Thread.run (36 samples, 4.93%)</title><rect x="821.5" y="515.0" width="58.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="824.5" y="526.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (36 samples, 4.93%)</title><rect x="821.5" y="499.0" width="58.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="824.5" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (36 samples, 4.93%)</title><rect x="821.5" y="483.0" width="58.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="824.5" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (17 samples, 2.33%)</title><rect x="821.5" y="467.0" width="27.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="824.5" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (17 samples, 2.33%)</title><rect x="821.5" y="451.0" width="27.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="824.5" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (15 samples, 2.05%)</title><rect x="823.1" y="435.0" width="24.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="826.1" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.27%)</title><rect x="823.1" y="419.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="826.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.27%)</title><rect x="823.1" y="403.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="826.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.27%)</title><rect x="823.1" y="387.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.27%)</title><rect x="823.1" y="371.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="826.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.27%)</title><rect x="823.1" y="355.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="826.1" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.27%)</title><rect x="823.1" y="339.0" width="3.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="826.1" y="350.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.14%)</title><rect x="823.1" y="323.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="826.1" y="334.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.14%)</title><rect x="824.7" y="323.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="827.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 1.64%)</title><rect x="826.3" y="419.0" width="19.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="829.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 1.64%)</title><rect x="826.3" y="403.0" width="19.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="829.3" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.96%)</title><rect x="826.3" y="387.0" width="11.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="829.3" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.14%)</title><rect x="827.9" y="371.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="830.9" y="382.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (4 samples, 0.55%)</title><rect x="829.5" y="371.0" width="6.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="832.5" y="382.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.14%)</title><rect x="836.0" y="371.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="839.0" y="382.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.68%)</title><rect x="837.6" y="387.0" width="8.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="840.6" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.14%)</title><rect x="837.6" y="371.0" width="1.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="840.6" y="382.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (4 samples, 0.55%)</title><rect x="839.2" y="371.0" width="6.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="842.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.14%)</title><rect x="845.7" y="419.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="848.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.14%)</title><rect x="847.3" y="435.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.14%)</title><rect x="847.3" y="419.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="850.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.14%)</title><rect x="847.3" y="403.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.14%)</title><rect x="847.3" y="387.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.14%)</title><rect x="847.3" y="371.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.3" y="382.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.14%)</title><rect x="847.3" y="355.0" width="1.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="850.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.run (19 samples, 2.60%)</title><rect x="848.9" y="467.0" width="30.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="851.9" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (19 samples, 2.60%)</title><rect x="848.9" y="451.0" width="30.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="851.9" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.putValue (19 samples, 2.60%)</title><rect x="848.9" y="435.0" width="30.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.9" y="446.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 1.23%)</title><rect x="848.9" y="419.0" width="14.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.14%)</title><rect x="852.2" y="403.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.2" y="414.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.14%)</title><rect x="852.2" y="387.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="855.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.14%)</title><rect x="852.2" y="371.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="855.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.82%)</title><rect x="853.8" y="403.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="856.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.27%)</title><rect x="853.8" y="387.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="856.8" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.27%)</title><rect x="853.8" y="371.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="856.8" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.27%)</title><rect x="853.8" y="355.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="856.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.27%)</title><rect x="853.8" y="339.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.8" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.27%)</title><rect x="853.8" y="323.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.27%)</title><rect x="853.8" y="307.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="856.8" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.55%)</title><rect x="857.0" y="387.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="860.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.55%)</title><rect x="857.0" y="371.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="860.0" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.55%)</title><rect x="857.0" y="355.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="860.0" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.55%)</title><rect x="857.0" y="339.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="860.0" y="350.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.27%)</title><rect x="858.6" y="323.0" width="3.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="861.6" y="334.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.14%)</title><rect x="861.9" y="323.0" width="1.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="864.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (10 samples, 1.37%)</title><rect x="863.5" y="419.0" width="16.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="866.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.27%)</title><rect x="863.5" y="403.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="866.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.27%)</title><rect x="863.5" y="387.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="866.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.27%)</title><rect x="863.5" y="371.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="866.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (2 samples, 0.27%)</title><rect x="863.5" y="355.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="866.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (2 samples, 0.27%)</title><rect x="863.5" y="339.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="866.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (8 samples, 1.10%)</title><rect x="866.7" y="403.0" width="12.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="869.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (8 samples, 1.10%)</title><rect x="866.7" y="387.0" width="12.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="869.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (7 samples, 0.96%)</title><rect x="866.7" y="371.0" width="11.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="869.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.68%)</title><rect x="869.9" y="355.0" width="8.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="872.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.68%)</title><rect x="869.9" y="339.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="872.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.55%)</title><rect x="871.6" y="323.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="874.6" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.55%)</title><rect x="871.6" y="307.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="874.6" y="318.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.14%)</title><rect x="876.4" y="291.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="879.4" y="302.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.14%)</title><rect x="878.0" y="371.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="881.0" y="382.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.14%)</title><rect x="878.0" y="355.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="881.0" y="366.0"></text>
</g>
<g>
<title>[pool-3-thread-4 tid=117887] (34 samples, 4.66%)</title><rect x="879.6" y="531.0" width="55.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="882.6" y="542.0">[pool..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.14%)</title><rect x="879.6" y="515.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="882.6" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.14%)</title><rect x="879.6" y="499.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="882.6" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.14%)</title><rect x="879.6" y="483.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="882.6" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.14%)</title><rect x="879.6" y="467.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="882.6" y="478.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.14%)</title><rect x="879.6" y="451.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="882.6" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.run (33 samples, 4.52%)</title><rect x="881.3" y="515.0" width="53.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="884.3" y="526.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (33 samples, 4.52%)</title><rect x="881.3" y="499.0" width="53.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="884.3" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (33 samples, 4.52%)</title><rect x="881.3" y="483.0" width="53.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="884.3" y="494.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.14%)</title><rect x="882.9" y="467.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="885.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.14%)</title><rect x="882.9" y="451.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="885.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.14%)</title><rect x="882.9" y="435.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="885.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (13 samples, 1.78%)</title><rect x="884.5" y="467.0" width="21.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="887.5" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (13 samples, 1.78%)</title><rect x="884.5" y="451.0" width="21.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="887.5" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 1.23%)</title><rect x="886.1" y="435.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="889.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.27%)</title><rect x="886.1" y="419.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="889.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.27%)</title><rect x="886.1" y="403.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.27%)</title><rect x="886.1" y="387.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="889.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.27%)</title><rect x="886.1" y="371.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="889.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.27%)</title><rect x="886.1" y="355.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="889.1" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.14%)</title><rect x="886.1" y="339.0" width="1.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="889.1" y="350.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.14%)</title><rect x="886.1" y="323.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="889.1" y="334.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.14%)</title><rect x="887.7" y="339.0" width="1.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="890.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.96%)</title><rect x="889.3" y="419.0" width="11.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="892.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.96%)</title><rect x="889.3" y="403.0" width="11.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="892.3" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.68%)</title><rect x="889.3" y="387.0" width="8.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="892.3" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.27%)</title><rect x="889.3" y="371.0" width="3.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="892.3" y="382.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.14%)</title><rect x="891.0" y="355.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="894.0" y="366.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.41%)</title><rect x="892.6" y="371.0" width="4.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="895.6" y="382.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.27%)</title><rect x="897.4" y="387.0" width="3.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="900.4" y="398.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.27%)</title><rect x="897.4" y="371.0" width="3.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="900.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.14%)</title><rect x="900.7" y="435.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="903.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.14%)</title><rect x="900.7" y="419.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="903.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.14%)</title><rect x="900.7" y="403.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="903.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.14%)</title><rect x="900.7" y="387.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="903.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.14%)</title><rect x="900.7" y="371.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="903.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.14%)</title><rect x="900.7" y="355.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="903.7" y="366.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="900.7" y="339.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="903.7" y="350.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.14%)</title><rect x="900.7" y="323.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="903.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.27%)</title><rect x="902.3" y="435.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="905.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.27%)</title><rect x="902.3" y="419.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.27%)</title><rect x="902.3" y="403.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.27%)</title><rect x="902.3" y="387.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="905.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.27%)</title><rect x="902.3" y="371.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="905.3" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.14%)</title><rect x="902.3" y="355.0" width="1.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="905.3" y="366.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.14%)</title><rect x="902.3" y="339.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="905.3" y="350.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.14%)</title><rect x="903.9" y="355.0" width="1.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="906.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.run (18 samples, 2.47%)</title><rect x="905.5" y="467.0" width="29.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="908.5" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (18 samples, 2.47%)</title><rect x="905.5" y="451.0" width="29.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="908.5" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.putValue (18 samples, 2.47%)</title><rect x="905.5" y="435.0" width="29.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="908.5" y="446.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 1.23%)</title><rect x="907.1" y="419.0" width="14.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="910.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.27%)</title><rect x="908.7" y="403.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="911.7" y="414.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.27%)</title><rect x="908.7" y="387.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="911.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.27%)</title><rect x="908.7" y="371.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="911.7" y="382.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.14%)</title><rect x="910.4" y="355.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="913.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.82%)</title><rect x="912.0" y="403.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="915.0" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.14%)</title><rect x="912.0" y="387.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="915.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.68%)</title><rect x="913.6" y="387.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="916.6" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.68%)</title><rect x="913.6" y="371.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="916.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.68%)</title><rect x="913.6" y="355.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="916.6" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 0.68%)</title><rect x="913.6" y="339.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="916.6" y="350.0"></text>
</g>
<g>
<title>__libc_send (5 samples, 0.68%)</title><rect x="913.6" y="323.0" width="8.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="916.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (8 samples, 1.10%)</title><rect x="921.7" y="419.0" width="12.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="924.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (7 samples, 0.96%)</title><rect x="923.3" y="403.0" width="11.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="926.3" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.14%)</title><rect x="923.3" y="387.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="926.3" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.14%)</title><rect x="923.3" y="371.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="926.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (6 samples, 0.82%)</title><rect x="924.9" y="387.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="927.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (5 samples, 0.68%)</title><rect x="926.5" y="371.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="929.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.68%)</title><rect x="926.5" y="355.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="929.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.68%)</title><rect x="926.5" y="339.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="929.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.55%)</title><rect x="928.1" y="323.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="931.1" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.55%)</title><rect x="928.1" y="307.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="931.1" y="318.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.14%)</title><rect x="933.0" y="291.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="936.0" y="302.0"></text>
</g>
<g>
<title>[pool-3-thread-5 tid=117885] (35 samples, 4.79%)</title><rect x="934.6" y="531.0" width="56.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="937.6" y="542.0">[pool-..</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.14%)</title><rect x="934.6" y="515.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="937.6" y="526.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.14%)</title><rect x="934.6" y="499.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="937.6" y="510.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.14%)</title><rect x="934.6" y="483.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="937.6" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.run (34 samples, 4.66%)</title><rect x="936.2" y="515.0" width="55.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="939.2" y="526.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (34 samples, 4.66%)</title><rect x="936.2" y="499.0" width="55.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="939.2" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (34 samples, 4.66%)</title><rect x="936.2" y="483.0" width="55.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="939.2" y="494.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (15 samples, 2.05%)</title><rect x="936.2" y="467.0" width="24.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="939.2" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (14 samples, 1.92%)</title><rect x="937.8" y="451.0" width="22.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="940.8" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (13 samples, 1.78%)</title><rect x="937.8" y="435.0" width="21.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="940.8" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.27%)</title><rect x="937.8" y="419.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="940.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.27%)</title><rect x="937.8" y="403.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="940.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.14%)</title><rect x="939.5" y="387.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="942.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.14%)</title><rect x="939.5" y="371.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="942.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.14%)</title><rect x="939.5" y="355.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="942.5" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.14%)</title><rect x="939.5" y="339.0" width="1.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="942.5" y="350.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.14%)</title><rect x="939.5" y="323.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="942.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (11 samples, 1.51%)</title><rect x="941.1" y="419.0" width="17.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="944.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 1.51%)</title><rect x="941.1" y="403.0" width="17.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="944.1" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.27%)</title><rect x="942.7" y="387.0" width="3.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="945.7" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.14%)</title><rect x="942.7" y="371.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="945.7" y="382.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.14%)</title><rect x="942.7" y="355.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="945.7" y="366.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.14%)</title><rect x="942.7" y="339.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="945.7" y="350.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.14%)</title><rect x="944.3" y="371.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="947.3" y="382.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 1.10%)</title><rect x="945.9" y="387.0" width="12.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="948.9" y="398.0"></text>
</g>
<g>
<title>__condvar_confirm_wakeup (1 samples, 0.14%)</title><rect x="945.9" y="371.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="948.9" y="382.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.14%)</title><rect x="947.5" y="371.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="950.5" y="382.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (6 samples, 0.82%)</title><rect x="949.2" y="371.0" width="9.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="952.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.14%)</title><rect x="958.8" y="435.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="961.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.14%)</title><rect x="958.8" y="419.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="961.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.14%)</title><rect x="958.8" y="403.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="961.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.14%)</title><rect x="958.8" y="387.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="961.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.14%)</title><rect x="958.8" y="371.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="961.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.14%)</title><rect x="958.8" y="355.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="961.8" y="366.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.14%)</title><rect x="958.8" y="339.0" width="1.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="961.8" y="350.0"></text>
</g>
<g>
<title>pthread_cond_wait@plt (1 samples, 0.14%)</title><rect x="958.8" y="323.0" width="1.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="961.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.run (19 samples, 2.60%)</title><rect x="960.5" y="467.0" width="30.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="963.5" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (19 samples, 2.60%)</title><rect x="960.5" y="451.0" width="30.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="963.5" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.putValue (19 samples, 2.60%)</title><rect x="960.5" y="435.0" width="30.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="963.5" y="446.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 1.23%)</title><rect x="960.5" y="419.0" width="14.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="963.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 0.96%)</title><rect x="962.1" y="403.0" width="11.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="965.1" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.14%)</title><rect x="962.1" y="387.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="965.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.82%)</title><rect x="963.7" y="387.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="966.7" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.82%)</title><rect x="963.7" y="371.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="966.7" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.68%)</title><rect x="965.3" y="355.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="968.3" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 0.68%)</title><rect x="965.3" y="339.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="968.3" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.27%)</title><rect x="965.3" y="323.0" width="3.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="968.3" y="334.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="966.9" y="307.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="969.9" y="318.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.27%)</title><rect x="968.5" y="323.0" width="3.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="971.5" y="334.0"></text>
</g>
<g>
<title>send@plt (1 samples, 0.14%)</title><rect x="971.8" y="323.0" width="1.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="974.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.14%)</title><rect x="973.4" y="403.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="976.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (10 samples, 1.37%)</title><rect x="975.0" y="419.0" width="16.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="978.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (10 samples, 1.37%)</title><rect x="975.0" y="403.0" width="16.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="978.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (10 samples, 1.37%)</title><rect x="975.0" y="387.0" width="16.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="978.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (10 samples, 1.37%)</title><rect x="975.0" y="371.0" width="16.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="978.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 1.10%)</title><rect x="978.2" y="355.0" width="13.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="981.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 1.10%)</title><rect x="978.2" y="339.0" width="13.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="981.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.82%)</title><rect x="981.5" y="323.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="984.5" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.82%)</title><rect x="981.5" y="307.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="984.5" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-6 tid=117886] (41 samples, 5.62%)</title><rect x="991.2" y="531.0" width="66.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="994.2" y="542.0">[pool-3..</text>
</g>
<g>
<title>java/lang/Thread.run (41 samples, 5.62%)</title><rect x="991.2" y="515.0" width="66.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="994.2" y="526.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (41 samples, 5.62%)</title><rect x="991.2" y="499.0" width="66.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="994.2" y="510.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (41 samples, 5.62%)</title><rect x="991.2" y="483.0" width="66.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="994.2" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (20 samples, 2.74%)</title><rect x="992.8" y="467.0" width="32.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="995.8" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (20 samples, 2.74%)</title><rect x="992.8" y="451.0" width="32.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="995.8" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (18 samples, 2.47%)</title><rect x="992.8" y="435.0" width="29.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="995.8" y="446.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.27%)</title><rect x="994.4" y="419.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="997.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.27%)</title><rect x="994.4" y="403.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="997.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.27%)</title><rect x="994.4" y="387.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="997.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.27%)</title><rect x="994.4" y="371.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="997.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.27%)</title><rect x="994.4" y="355.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="997.4" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.14%)</title><rect x="994.4" y="339.0" width="1.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="997.4" y="350.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.14%)</title><rect x="994.4" y="323.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="997.4" y="334.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.14%)</title><rect x="996.0" y="339.0" width="1.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="999.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (15 samples, 2.05%)</title><rect x="997.6" y="419.0" width="24.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1000.6" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (15 samples, 2.05%)</title><rect x="997.6" y="403.0" width="24.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1000.6" y="414.0">j..</text>
</g>
<g>
<title>Unsafe_Park (10 samples, 1.37%)</title><rect x="997.6" y="387.0" width="16.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1000.6" y="398.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.14%)</title><rect x="1000.9" y="371.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1003.9" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.27%)</title><rect x="1002.5" y="371.0" width="3.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1005.5" y="382.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.14%)</title><rect x="1004.1" y="355.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1007.1" y="366.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.14%)</title><rect x="1005.7" y="371.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1008.7" y="382.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.27%)</title><rect x="1007.3" y="371.0" width="3.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1010.3" y="382.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.14%)</title><rect x="1010.6" y="371.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1013.6" y="382.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.14%)</title><rect x="1012.2" y="371.0" width="1.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1015.2" y="382.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.68%)</title><rect x="1013.8" y="387.0" width="8.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1016.8" y="398.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.14%)</title><rect x="1013.8" y="371.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1016.8" y="382.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.14%)</title><rect x="1015.4" y="371.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1018.4" y="382.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.41%)</title><rect x="1017.0" y="371.0" width="4.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1020.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.27%)</title><rect x="1021.9" y="435.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1024.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.27%)</title><rect x="1021.9" y="419.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1024.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.27%)</title><rect x="1021.9" y="403.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1024.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.27%)</title><rect x="1021.9" y="387.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1024.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.27%)</title><rect x="1021.9" y="371.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1024.9" y="382.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.14%)</title><rect x="1021.9" y="355.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1024.9" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.14%)</title><rect x="1023.5" y="355.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1026.5" y="366.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.14%)</title><rect x="1023.5" y="339.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1026.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.run (20 samples, 2.74%)</title><rect x="1025.1" y="467.0" width="32.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1028.1" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (20 samples, 2.74%)</title><rect x="1025.1" y="451.0" width="32.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1028.1" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.putValue (20 samples, 2.74%)</title><rect x="1025.1" y="435.0" width="32.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1028.1" y="446.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 2.05%)</title><rect x="1025.1" y="419.0" width="24.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1028.1" y="430.0">o..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.14%)</title><rect x="1025.1" y="403.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1028.1" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.14%)</title><rect x="1025.1" y="387.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1028.1" y="398.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.14%)</title><rect x="1025.1" y="371.0" width="1.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1028.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (14 samples, 1.92%)</title><rect x="1026.7" y="403.0" width="22.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1029.7" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.41%)</title><rect x="1026.7" y="387.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1029.7" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 1.51%)</title><rect x="1031.6" y="387.0" width="17.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1034.6" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 1.51%)</title><rect x="1031.6" y="371.0" width="17.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1034.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.14%)</title><rect x="1033.2" y="355.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1036.2" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (9 samples, 1.23%)</title><rect x="1034.8" y="355.0" width="14.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1037.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (9 samples, 1.23%)</title><rect x="1034.8" y="339.0" width="14.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1037.8" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.14%)</title><rect x="1036.4" y="323.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1039.4" y="334.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.14%)</title><rect x="1036.4" y="307.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1039.4" y="318.0"></text>
</g>
<g>
<title>__libc_send (6 samples, 0.82%)</title><rect x="1038.1" y="323.0" width="9.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1041.1" y="334.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.14%)</title><rect x="1047.8" y="323.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1050.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (5 samples, 0.68%)</title><rect x="1049.4" y="419.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1052.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (5 samples, 0.68%)</title><rect x="1049.4" y="403.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1052.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (5 samples, 0.68%)</title><rect x="1049.4" y="387.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1052.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (4 samples, 0.55%)</title><rect x="1051.0" y="371.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1054.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.14%)</title><rect x="1051.0" y="355.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1054.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.14%)</title><rect x="1051.0" y="339.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1054.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.14%)</title><rect x="1051.0" y="323.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1054.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.14%)</title><rect x="1051.0" y="307.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1054.0" y="318.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.14%)</title><rect x="1051.0" y="291.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1054.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.41%)</title><rect x="1052.6" y="355.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.41%)</title><rect x="1052.6" y="339.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1055.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.27%)</title><rect x="1054.2" y="323.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1057.2" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.27%)</title><rect x="1054.2" y="307.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1057.2" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-7 tid=117888] (42 samples, 5.75%)</title><rect x="1057.5" y="531.0" width="67.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1060.5" y="542.0">[pool-3..</text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.14%)</title><rect x="1057.5" y="515.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1060.5" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (41 samples, 5.62%)</title><rect x="1059.1" y="515.0" width="66.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1062.1" y="526.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (41 samples, 5.62%)</title><rect x="1059.1" y="499.0" width="66.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1062.1" y="510.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (41 samples, 5.62%)</title><rect x="1059.1" y="483.0" width="66.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1062.1" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.27%)</title><rect x="1059.1" y="467.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1062.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.27%)</title><rect x="1059.1" y="451.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1062.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.27%)</title><rect x="1059.1" y="435.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1062.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.putValue (1 samples, 0.14%)</title><rect x="1060.7" y="419.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1063.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (21 samples, 2.88%)</title><rect x="1062.3" y="467.0" width="33.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1065.3" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (21 samples, 2.88%)</title><rect x="1062.3" y="451.0" width="33.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.3" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (16 samples, 2.19%)</title><rect x="1063.9" y="435.0" width="25.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1066.9" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.14%)</title><rect x="1063.9" y="419.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1066.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.14%)</title><rect x="1063.9" y="403.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1066.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.14%)</title><rect x="1063.9" y="387.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1066.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.14%)</title><rect x="1063.9" y="371.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1066.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.14%)</title><rect x="1063.9" y="355.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1066.9" y="366.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.14%)</title><rect x="1063.9" y="339.0" width="1.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1066.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (15 samples, 2.05%)</title><rect x="1065.5" y="419.0" width="24.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1068.5" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (15 samples, 2.05%)</title><rect x="1065.5" y="403.0" width="24.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1068.5" y="414.0">j..</text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.82%)</title><rect x="1065.5" y="387.0" width="9.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1068.5" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.14%)</title><rect x="1065.5" y="371.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1068.5" y="382.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.14%)</title><rect x="1065.5" y="355.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1068.5" y="366.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (5 samples, 0.68%)</title><rect x="1067.2" y="371.0" width="8.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1070.2" y="382.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 1.23%)</title><rect x="1075.2" y="387.0" width="14.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1078.2" y="398.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.14%)</title><rect x="1075.2" y="371.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1078.2" y="382.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.14%)</title><rect x="1076.8" y="371.0" width="1.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1079.8" y="382.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (7 samples, 0.96%)</title><rect x="1078.5" y="371.0" width="11.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1081.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.14%)</title><rect x="1089.8" y="435.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1092.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.14%)</title><rect x="1089.8" y="419.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1092.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.14%)</title><rect x="1089.8" y="403.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1092.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.14%)</title><rect x="1089.8" y="387.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1092.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.14%)</title><rect x="1089.8" y="371.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1092.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.14%)</title><rect x="1089.8" y="355.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1092.8" y="366.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.14%)</title><rect x="1089.8" y="339.0" width="1.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1092.8" y="350.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.14%)</title><rect x="1089.8" y="323.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1092.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.41%)</title><rect x="1091.4" y="435.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1094.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.41%)</title><rect x="1091.4" y="419.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1094.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.41%)</title><rect x="1091.4" y="403.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1094.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.27%)</title><rect x="1093.0" y="387.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1096.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.27%)</title><rect x="1093.0" y="371.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1096.0" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.14%)</title><rect x="1093.0" y="355.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1096.0" y="366.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.14%)</title><rect x="1093.0" y="339.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1096.0" y="350.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.14%)</title><rect x="1094.6" y="355.0" width="1.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1097.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.run (18 samples, 2.47%)</title><rect x="1096.2" y="467.0" width="29.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1099.2" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (18 samples, 2.47%)</title><rect x="1096.2" y="451.0" width="29.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1099.2" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.putValue (18 samples, 2.47%)</title><rect x="1096.2" y="435.0" width="29.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1099.2" y="446.0">ru..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.14%)</title><rect x="1096.2" y="419.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1099.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 0.96%)</title><rect x="1097.9" y="419.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1100.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.14%)</title><rect x="1097.9" y="403.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1100.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.14%)</title><rect x="1097.9" y="387.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1100.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.14%)</title><rect x="1097.9" y="371.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1100.9" y="382.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.14%)</title><rect x="1097.9" y="355.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1100.9" y="366.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.14%)</title><rect x="1097.9" y="339.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1100.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.82%)</title><rect x="1099.5" y="403.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1102.5" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.27%)</title><rect x="1099.5" y="387.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1102.5" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.14%)</title><rect x="1101.1" y="371.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1104.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.14%)</title><rect x="1101.1" y="355.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1104.1" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.14%)</title><rect x="1101.1" y="339.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1104.1" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.14%)</title><rect x="1101.1" y="323.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1104.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.14%)</title><rect x="1101.1" y="307.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1104.1" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.55%)</title><rect x="1102.7" y="387.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1105.7" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.55%)</title><rect x="1102.7" y="371.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1105.7" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.55%)</title><rect x="1102.7" y="355.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1105.7" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.55%)</title><rect x="1102.7" y="339.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1105.7" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.27%)</title><rect x="1102.7" y="323.0" width="3.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1105.7" y="334.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.27%)</title><rect x="1102.7" y="307.0" width="3.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1105.7" y="318.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.14%)</title><rect x="1104.3" y="291.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1107.3" y="302.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.14%)</title><rect x="1104.3" y="275.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1107.3" y="286.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.14%)</title><rect x="1105.9" y="323.0" width="1.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1108.9" y="334.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.14%)</title><rect x="1107.6" y="323.0" width="1.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1110.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (10 samples, 1.37%)</title><rect x="1109.2" y="419.0" width="16.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1112.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.14%)</title><rect x="1110.8" y="403.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1113.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.14%)</title><rect x="1110.8" y="387.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1113.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.14%)</title><rect x="1110.8" y="371.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1113.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (1 samples, 0.14%)</title><rect x="1110.8" y="355.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1113.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (1 samples, 0.14%)</title><rect x="1110.8" y="339.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1113.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (8 samples, 1.10%)</title><rect x="1112.4" y="403.0" width="12.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1115.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (8 samples, 1.10%)</title><rect x="1112.4" y="387.0" width="12.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1115.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (8 samples, 1.10%)</title><rect x="1112.4" y="371.0" width="12.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1115.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 1.10%)</title><rect x="1112.4" y="355.0" width="12.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1115.4" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 1.10%)</title><rect x="1112.4" y="339.0" width="12.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1115.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.55%)</title><rect x="1118.9" y="323.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1121.9" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.55%)</title><rect x="1118.9" y="307.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1121.9" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-8 tid=117891] (40 samples, 5.48%)</title><rect x="1125.3" y="531.0" width="64.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1128.3" y="542.0">[pool-3..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.27%)</title><rect x="1125.3" y="515.0" width="3.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1128.3" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.27%)</title><rect x="1125.3" y="499.0" width="3.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1128.3" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.27%)</title><rect x="1125.3" y="483.0" width="3.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1128.3" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.14%)</title><rect x="1125.3" y="467.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1128.3" y="478.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.14%)</title><rect x="1127.0" y="467.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1130.0" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (38 samples, 5.21%)</title><rect x="1128.6" y="515.0" width="61.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1131.6" y="526.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (38 samples, 5.21%)</title><rect x="1128.6" y="499.0" width="61.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1131.6" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (38 samples, 5.21%)</title><rect x="1128.6" y="483.0" width="61.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1131.6" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (15 samples, 2.05%)</title><rect x="1128.6" y="467.0" width="24.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1131.6" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (15 samples, 2.05%)</title><rect x="1128.6" y="451.0" width="24.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1131.6" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 1.92%)</title><rect x="1128.6" y="435.0" width="22.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1131.6" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.41%)</title><rect x="1128.6" y="419.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1131.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.41%)</title><rect x="1128.6" y="403.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1131.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.41%)</title><rect x="1128.6" y="387.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1131.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.41%)</title><rect x="1128.6" y="371.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1131.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.41%)</title><rect x="1128.6" y="355.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1131.6" y="366.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.14%)</title><rect x="1128.6" y="339.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1131.6" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.14%)</title><rect x="1130.2" y="339.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1133.2" y="350.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.14%)</title><rect x="1130.2" y="323.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1133.2" y="334.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.14%)</title><rect x="1131.8" y="339.0" width="1.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1134.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (11 samples, 1.51%)</title><rect x="1133.4" y="419.0" width="17.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 1.51%)</title><rect x="1133.4" y="403.0" width="17.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1136.4" y="414.0"></text>
</g>
<g>
<title>Unsafe_Park (9 samples, 1.23%)</title><rect x="1133.4" y="387.0" width="14.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1136.4" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.14%)</title><rect x="1135.0" y="371.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1138.0" y="382.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (6 samples, 0.82%)</title><rect x="1136.7" y="371.0" width="9.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1139.7" y="382.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.14%)</title><rect x="1146.4" y="371.0" width="1.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1149.4" y="382.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.27%)</title><rect x="1148.0" y="387.0" width="3.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1151.0" y="398.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.27%)</title><rect x="1148.0" y="371.0" width="3.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1151.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.14%)</title><rect x="1151.2" y="435.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1154.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.14%)</title><rect x="1151.2" y="419.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1154.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.14%)</title><rect x="1151.2" y="403.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1154.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.14%)</title><rect x="1151.2" y="387.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1154.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.14%)</title><rect x="1151.2" y="371.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1154.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.14%)</title><rect x="1151.2" y="355.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1154.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.run (23 samples, 3.15%)</title><rect x="1152.8" y="467.0" width="37.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1155.8" y="478.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (23 samples, 3.15%)</title><rect x="1152.8" y="451.0" width="37.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1155.8" y="462.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.putValue (23 samples, 3.15%)</title><rect x="1152.8" y="435.0" width="37.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1155.8" y="446.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (13 samples, 1.78%)</title><rect x="1154.4" y="419.0" width="21.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1157.4" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (11 samples, 1.51%)</title><rect x="1157.7" y="403.0" width="17.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1160.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.27%)</title><rect x="1157.7" y="387.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1160.7" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 1.23%)</title><rect x="1160.9" y="387.0" width="14.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1163.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 1.23%)</title><rect x="1160.9" y="371.0" width="14.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1163.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.14%)</title><rect x="1160.9" y="355.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1163.9" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (8 samples, 1.10%)</title><rect x="1162.5" y="355.0" width="13.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1165.5" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (8 samples, 1.10%)</title><rect x="1162.5" y="339.0" width="13.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1165.5" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.55%)</title><rect x="1162.5" y="323.0" width="6.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1165.5" y="334.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.14%)</title><rect x="1162.5" y="307.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1165.5" y="318.0"></text>
</g>
<g>
<title>arrayOopDesc::base_offset_in_bytes(BasicType) (1 samples, 0.14%)</title><rect x="1164.1" y="307.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1167.1" y="318.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.14%)</title><rect x="1165.8" y="307.0" width="1.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1168.8" y="318.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.14%)</title><rect x="1167.4" y="307.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1170.4" y="318.0"></text>
</g>
<g>
<title>__libc_send (4 samples, 0.55%)</title><rect x="1169.0" y="323.0" width="6.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1172.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (9 samples, 1.23%)</title><rect x="1175.5" y="419.0" width="14.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1178.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (9 samples, 1.23%)</title><rect x="1175.5" y="403.0" width="14.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1178.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.14%)</title><rect x="1175.5" y="387.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1178.5" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.14%)</title><rect x="1175.5" y="371.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1178.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.14%)</title><rect x="1175.5" y="355.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1178.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (8 samples, 1.10%)</title><rect x="1177.1" y="387.0" width="12.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1180.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (7 samples, 0.96%)</title><rect x="1178.7" y="371.0" width="11.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1181.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.96%)</title><rect x="1178.7" y="355.0" width="11.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1181.7" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.96%)</title><rect x="1178.7" y="339.0" width="11.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1181.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.27%)</title><rect x="1186.8" y="323.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1189.8" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.27%)</title><rect x="1186.8" y="307.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1189.8" y="318.0"></text>
</g>
</g>
</svg>
