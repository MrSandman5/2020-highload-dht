<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (2,133 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (43 samples, 2.02%)</title><rect x="10.0" y="803.0" width="23.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.0" y="814.0">S..</text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.05%)</title><rect x="10.0" y="787.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (42 samples, 1.97%)</title><rect x="10.6" y="787.0" width="23.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.6" y="798.0">O..</text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (40 samples, 1.88%)</title><rect x="10.6" y="771.0" width="22.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.6" y="782.0">O..</text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.09%)</title><rect x="11.1" y="755.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="14.1" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (25 samples, 1.17%)</title><rect x="12.2" y="755.0" width="13.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.2" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (8 samples, 0.38%)</title><rect x="21.6" y="739.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="24.6" y="750.0"></text>
</g>
<g>
<title>SpinPause (9 samples, 0.42%)</title><rect x="26.0" y="755.0" width="5.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="29.0" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.09%)</title><rect x="31.0" y="755.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="34.0" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (1 samples, 0.05%)</title><rect x="32.1" y="755.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="35.1" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.09%)</title><rect x="32.7" y="771.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="35.7" y="782.0"></text>
</g>
<g>
<title>[no_Java_frame] (5 samples, 0.23%)</title><rect x="33.8" y="803.0" width="2.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="36.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.09%)</title><rect x="36.6" y="803.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="39.6" y="814.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.05%)</title><rect x="36.6" y="787.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="39.6" y="798.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.05%)</title><rect x="37.1" y="787.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="40.1" y="798.0"></text>
</g>
<g>
<title>[unknown_Java] (8 samples, 0.38%)</title><rect x="37.7" y="803.0" width="4.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="40.7" y="814.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.05%)</title><rect x="37.7" y="787.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="40.7" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="38.2" y="787.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="41.2" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.05%)</title><rect x="38.2" y="771.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="41.2" y="782.0"></text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.23%)</title><rect x="38.8" y="787.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="41.8" y="798.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="41.0" y="771.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="44.0" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="41.5" y="787.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="44.5" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,233 samples, 57.81%)</title><rect x="42.1" y="803.0" width="682.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.1" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,233 samples, 57.81%)</title><rect x="42.1" y="787.0" width="682.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.1" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,232 samples, 57.76%)</title><rect x="42.1" y="771.0" width="681.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.1" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (4 samples, 0.19%)</title><rect x="44.9" y="755.0" width="2.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="47.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (424 samples, 19.88%)</title><rect x="47.1" y="755.0" width="234.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="50.1" y="766.0">java/util/concurrent/Completabl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (310 samples, 14.53%)</title><rect x="48.2" y="739.0" width="171.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="51.2" y="750.0">java/util/concurrent/C..</text>
</g>
<g>
<title>itable stub (3 samples, 0.14%)</title><rect x="48.7" y="723.0" width="1.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="51.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (271 samples, 12.71%)</title><rect x="50.4" y="723.0" width="149.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.4" y="734.0">java/util/concurren..</text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="50.4" y="707.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="53.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.05%)</title><rect x="50.9" y="707.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (1 samples, 0.05%)</title><rect x="50.9" y="691.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.05%)</title><rect x="50.9" y="675.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.05%)</title><rect x="50.9" y="659.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$161/701954098.apply (269 samples, 12.61%)</title><rect x="51.5" y="707.0" width="148.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.5" y="718.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (269 samples, 12.61%)</title><rect x="51.5" y="691.0" width="148.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.5" y="702.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (269 samples, 12.61%)</title><rect x="51.5" y="675.0" width="148.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.5" y="686.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.05%)</title><rect x="52.6" y="659.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.05%)</title><rect x="53.2" y="659.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.05%)</title><rect x="53.2" y="643.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.05%)</title><rect x="53.2" y="627.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (239 samples, 11.20%)</title><rect x="53.7" y="659.0" width="132.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="56.7" y="670.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (239 samples, 11.20%)</title><rect x="53.7" y="643.0" width="132.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.7" y="654.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (239 samples, 11.20%)</title><rect x="53.7" y="627.0" width="132.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.7" y="638.0">jdk/internal/net..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (132 samples, 6.19%)</title><rect x="53.7" y="611.0" width="73.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.7" y="622.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (132 samples, 6.19%)</title><rect x="53.7" y="595.0" width="73.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.7" y="606.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.&lt;init&gt; (1 samples, 0.05%)</title><rect x="53.7" y="579.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.05%)</title><rect x="53.7" y="563.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.&lt;init&gt; (1 samples, 0.05%)</title><rect x="53.7" y="547.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.05%)</title><rect x="53.7" y="531.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (127 samples, 5.95%)</title><rect x="54.3" y="579.0" width="70.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.3" y="590.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$280/1794368300.apply (127 samples, 5.95%)</title><rect x="54.3" y="563.0" width="70.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.3" y="574.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (127 samples, 5.95%)</title><rect x="54.3" y="547.0" width="70.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.3" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (127 samples, 5.95%)</title><rect x="54.3" y="531.0" width="70.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="57.3" y="542.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$204/1335605778.apply (127 samples, 5.95%)</title><rect x="54.3" y="515.0" width="70.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.3" y="526.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (127 samples, 5.95%)</title><rect x="54.3" y="499.0" width="70.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="57.3" y="510.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.09%)</title><rect x="54.3" y="483.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.05%)</title><rect x="54.8" y="467.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.05%)</title><rect x="54.8" y="451.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="57.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (125 samples, 5.86%)</title><rect x="55.4" y="483.0" width="69.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="58.4" y="494.0">jdk/int..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="55.4" y="467.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="58.4" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="55.4" y="451.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="58.4" y="462.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="55.4" y="435.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="58.4" y="446.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="55.4" y="419.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="58.4" y="430.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (1 samples, 0.05%)</title><rect x="55.4" y="403.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="58.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (107 samples, 5.02%)</title><rect x="55.9" y="467.0" width="59.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="58.9" y="478.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (103 samples, 4.83%)</title><rect x="57.6" y="451.0" width="57.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.6" y="462.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.09%)</title><rect x="58.7" y="435.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$308/596850472.apply (1 samples, 0.05%)</title><rect x="58.7" y="419.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$310/618589503.apply (1 samples, 0.05%)</title><rect x="59.2" y="419.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$308/596850472.apply (99 samples, 4.64%)</title><rect x="59.8" y="435.0" width="54.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.8" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (99 samples, 4.64%)</title><rect x="59.8" y="419.0" width="54.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.8" y="430.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.05%)</title><rect x="60.9" y="403.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.05%)</title><rect x="61.4" y="403.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.05%)</title><rect x="61.4" y="387.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="61.4" y="371.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="64.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (20 samples, 0.94%)</title><rect x="62.0" y="403.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (20 samples, 0.94%)</title><rect x="62.0" y="387.0" width="11.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (6 samples, 0.28%)</title><rect x="62.0" y="371.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (6 samples, 0.28%)</title><rect x="62.0" y="355.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="65.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (6 samples, 0.28%)</title><rect x="62.0" y="339.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (5 samples, 0.23%)</title><rect x="62.0" y="323.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5 samples, 0.23%)</title><rect x="62.0" y="307.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="65.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.23%)</title><rect x="62.0" y="291.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (1 samples, 0.05%)</title><rect x="64.8" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="67.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (14 samples, 0.66%)</title><rect x="65.3" y="371.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (14 samples, 0.66%)</title><rect x="65.3" y="355.0" width="7.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (11 samples, 0.52%)</title><rect x="65.3" y="339.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (10 samples, 0.47%)</title><rect x="65.3" y="323.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="68.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (10 samples, 0.47%)</title><rect x="65.3" y="307.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.3" y="318.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="65.3" y="291.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="68.3" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="65.3" y="275.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="68.3" y="286.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="65.3" y="259.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="68.3" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (9 samples, 0.42%)</title><rect x="65.9" y="291.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.9" y="302.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.19%)</title><rect x="67.0" y="275.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="70.0" y="286.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.14%)</title><rect x="67.0" y="259.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="70.0" y="270.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.09%)</title><rect x="67.5" y="243.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="70.5" y="254.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="68.6" y="259.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="71.6" y="270.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.05%)</title><rect x="68.6" y="243.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="71.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.14%)</title><rect x="69.2" y="275.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.2" y="286.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.09%)</title><rect x="69.2" y="259.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="72.2" y="270.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="70.3" y="259.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="73.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (1 samples, 0.05%)</title><rect x="70.9" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.9" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="70.9" y="307.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="73.9" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.05%)</title><rect x="70.9" y="291.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="73.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1 samples, 0.05%)</title><rect x="71.4" y="339.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (1 samples, 0.05%)</title><rect x="71.4" y="323.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="71.4" y="307.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="74.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/FlowTube.asTubeSubscriber (2 samples, 0.09%)</title><rect x="72.0" y="339.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="75.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (2 samples, 0.09%)</title><rect x="72.0" y="323.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="75.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (75 samples, 3.52%)</title><rect x="73.1" y="403.0" width="41.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="76.1" y="414.0">jdk..</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.19%)</title><rect x="73.1" y="387.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.19%)</title><rect x="73.1" y="371.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (4 samples, 0.19%)</title><rect x="73.1" y="355.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="74.7" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.7" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.05%)</title><rect x="75.3" y="387.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.3" y="398.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="75.8" y="387.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="78.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (51 samples, 2.39%)</title><rect x="76.4" y="387.0" width="28.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.4" y="398.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (28 samples, 1.31%)</title><rect x="76.4" y="371.0" width="15.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.4" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.09%)</title><rect x="84.7" y="355.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.7" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.09%)</title><rect x="84.7" y="339.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.7" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.09%)</title><rect x="84.7" y="323.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.7" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.09%)</title><rect x="84.7" y="307.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.7" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.09%)</title><rect x="84.7" y="291.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.7" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.09%)</title><rect x="84.7" y="275.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.7" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (1 samples, 0.05%)</title><rect x="85.8" y="355.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="88.8" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (1 samples, 0.05%)</title><rect x="85.8" y="339.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="88.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1 samples, 0.05%)</title><rect x="85.8" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.8" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.05%)</title><rect x="85.8" y="307.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.8" y="318.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$350/198188022.test (8 samples, 0.38%)</title><rect x="86.3" y="355.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="89.3" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (8 samples, 0.38%)</title><rect x="86.3" y="339.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="89.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$86/1605851606.test (7 samples, 0.33%)</title><rect x="86.9" y="323.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="89.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (7 samples, 0.33%)</title><rect x="86.9" y="307.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="89.9" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$75/253601149.test (7 samples, 0.33%)</title><rect x="86.9" y="291.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="89.9" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (7 samples, 0.33%)</title><rect x="86.9" y="275.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="89.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$74/403170294.test (7 samples, 0.33%)</title><rect x="86.9" y="259.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="89.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (7 samples, 0.33%)</title><rect x="86.9" y="243.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="89.9" y="254.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.33%)</title><rect x="86.9" y="227.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.33%)</title><rect x="86.9" y="211.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="89.9" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.33%)</title><rect x="86.9" y="195.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="89.9" y="206.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.14%)</title><rect x="86.9" y="179.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="89.9" y="190.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.14%)</title><rect x="86.9" y="163.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="89.9" y="174.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.05%)</title><rect x="87.4" y="147.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.4" y="158.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.05%)</title><rect x="88.0" y="147.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.0" y="158.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.19%)</title><rect x="88.6" y="179.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="91.6" y="190.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.19%)</title><rect x="88.6" y="163.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.6" y="174.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.05%)</title><rect x="90.2" y="147.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.2" y="158.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.09%)</title><rect x="90.8" y="355.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="93.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (1 samples, 0.05%)</title><rect x="91.9" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.isConnect (1 samples, 0.05%)</title><rect x="91.9" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="94.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.05%)</title><rect x="91.9" y="339.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="94.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="91.9" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="94.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="91.9" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="94.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (22 samples, 1.03%)</title><rect x="92.4" y="371.0" width="12.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="95.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (22 samples, 1.03%)</title><rect x="92.4" y="355.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.4" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (22 samples, 1.03%)</title><rect x="92.4" y="339.0" width="12.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.4" y="350.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="92.4" y="323.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="95.4" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (21 samples, 0.98%)</title><rect x="93.0" y="323.0" width="11.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="96.0" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.accept (20 samples, 0.94%)</title><rect x="93.0" y="307.0" width="11.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.0" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (20 samples, 0.94%)</title><rect x="93.0" y="291.0" width="11.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="96.0" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (14 samples, 0.66%)</title><rect x="93.5" y="275.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.5" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1026326437.accept (13 samples, 0.61%)</title><rect x="94.1" y="259.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="97.1" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (11 samples, 0.52%)</title><rect x="95.2" y="243.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="98.2" y="254.0"></text>
</g>
<g>
<title>java/lang/String.trim (11 samples, 0.52%)</title><rect x="95.2" y="227.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="98.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (11 samples, 0.52%)</title><rect x="95.2" y="211.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="98.2" y="222.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.33%)</title><rect x="96.9" y="195.0" width="3.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="99.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/865059288.test (1 samples, 0.05%)</title><rect x="100.7" y="195.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="103.7" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.23%)</title><rect x="101.3" y="275.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="104.3" y="286.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.09%)</title><rect x="101.8" y="259.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.8" y="270.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.09%)</title><rect x="101.8" y="243.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.09%)</title><rect x="101.8" y="227.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.8" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.09%)</title><rect x="102.9" y="259.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="105.9" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.05%)</title><rect x="104.0" y="307.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="107.0" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.accept (1 samples, 0.05%)</title><rect x="104.0" y="291.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="107.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (4 samples, 0.19%)</title><rect x="104.6" y="387.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="107.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (3 samples, 0.14%)</title><rect x="105.2" y="371.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (3 samples, 0.14%)</title><rect x="105.2" y="355.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="106.3" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="109.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.05%)</title><rect x="106.3" y="323.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (14 samples, 0.66%)</title><rect x="106.8" y="387.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.8" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.38%)</title><rect x="110.1" y="371.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.1" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.09%)</title><rect x="111.8" y="355.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.8" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.14%)</title><rect x="112.9" y="355.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="114.6" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="117.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.05%)</title><rect x="114.6" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$310/618589503.apply (1 samples, 0.05%)</title><rect x="114.6" y="419.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.setRetryOnError (1 samples, 0.05%)</title><rect x="115.1" y="467.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (16 samples, 0.75%)</title><rect x="115.7" y="467.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (16 samples, 0.75%)</title><rect x="115.7" y="451.0" width="8.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (6 samples, 0.28%)</title><rect x="116.2" y="435.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="119.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (6 samples, 0.28%)</title><rect x="116.2" y="419.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="119.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.42%)</title><rect x="119.5" y="435.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="122.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.42%)</title><rect x="119.5" y="419.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="122.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.05%)</title><rect x="119.5" y="403.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="122.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="119.5" y="387.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.5" y="398.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="119.5" y="371.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="122.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8 samples, 0.38%)</title><rect x="120.1" y="403.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="123.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8 samples, 0.38%)</title><rect x="120.1" y="387.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="123.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.05%)</title><rect x="120.1" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="123.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.05%)</title><rect x="120.6" y="371.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="123.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.05%)</title><rect x="120.6" y="355.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="123.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.05%)</title><rect x="120.6" y="339.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.05%)</title><rect x="120.6" y="323.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="123.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.05%)</title><rect x="120.6" y="307.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="120.6" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="123.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.05%)</title><rect x="120.6" y="275.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="123.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6 samples, 0.28%)</title><rect x="121.2" y="371.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$270/1387273586.run (5 samples, 0.23%)</title><rect x="121.7" y="355.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5 samples, 0.23%)</title><rect x="121.7" y="339.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (1 samples, 0.05%)</title><rect x="121.7" y="323.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="124.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1 samples, 0.05%)</title><rect x="121.7" y="307.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="124.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (4 samples, 0.19%)</title><rect x="122.3" y="323.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="125.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.05%)</title><rect x="122.9" y="307.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.05%)</title><rect x="122.9" y="291.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$402/1777809380.run (1 samples, 0.05%)</title><rect x="122.9" y="275.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="125.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.05%)</title><rect x="122.9" y="259.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.05%)</title><rect x="122.9" y="243.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.05%)</title><rect x="122.9" y="227.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.05%)</title><rect x="122.9" y="211.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1 samples, 0.05%)</title><rect x="122.9" y="195.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.9" y="206.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="122.9" y="179.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="125.9" y="190.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="122.9" y="163.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="125.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (2 samples, 0.09%)</title><rect x="123.4" y="307.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="126.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.09%)</title><rect x="123.4" y="291.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.09%)</title><rect x="123.4" y="275.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="124.0" y="259.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.19%)</title><rect x="124.5" y="579.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="127.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.09%)</title><rect x="126.7" y="611.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.09%)</title><rect x="126.7" y="595.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.&lt;init&gt; (1 samples, 0.05%)</title><rect x="126.7" y="579.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.05%)</title><rect x="126.7" y="563.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.&lt;init&gt; (1 samples, 0.05%)</title><rect x="126.7" y="547.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="127.3" y="579.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="130.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="127.3" y="563.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.05%)</title><rect x="127.3" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="130.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (105 samples, 4.92%)</title><rect x="127.8" y="611.0" width="58.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="130.8" y="622.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.14%)</title><rect x="128.4" y="595.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.14%)</title><rect x="128.4" y="579.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="131.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.&lt;init&gt; (1 samples, 0.05%)</title><rect x="128.4" y="563.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="131.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.05%)</title><rect x="128.4" y="547.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="131.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.05%)</title><rect x="128.4" y="531.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$276/356294275.apply (1 samples, 0.05%)</title><rect x="128.9" y="563.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="131.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (1 samples, 0.05%)</title><rect x="128.9" y="547.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="131.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="129.5" y="563.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="132.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="129.5" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.05%)</title><rect x="129.5" y="531.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.09%)</title><rect x="130.0" y="595.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.09%)</title><rect x="130.0" y="579.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.05%)</title><rect x="130.0" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$274/776394132.accept (1 samples, 0.05%)</title><rect x="130.0" y="547.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$1 (1 samples, 0.05%)</title><rect x="130.0" y="531.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="133.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="130.6" y="563.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$274/776394132.accept (1 samples, 0.05%)</title><rect x="130.6" y="547.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (99 samples, 4.64%)</title><rect x="131.2" y="595.0" width="54.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.2" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (99 samples, 4.64%)</title><rect x="131.2" y="579.0" width="54.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.2" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (99 samples, 4.64%)</title><rect x="131.2" y="563.0" width="54.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.2" y="574.0">jdk/i..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="131.2" y="547.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.2" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.&lt;init&gt; (3 samples, 0.14%)</title><rect x="131.7" y="547.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.7" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="132.8" y="531.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="135.8" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (3 samples, 0.14%)</title><rect x="133.4" y="547.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="136.4" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.09%)</title><rect x="133.9" y="531.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (1 samples, 0.05%)</title><rect x="135.0" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.&lt;init&gt; (1 samples, 0.05%)</title><rect x="135.6" y="547.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="138.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (1 samples, 0.05%)</title><rect x="135.6" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (7 samples, 0.33%)</title><rect x="136.1" y="547.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="139.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (9 samples, 0.42%)</title><rect x="140.0" y="547.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.09%)</title><rect x="141.7" y="531.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="144.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.09%)</title><rect x="141.7" y="515.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="144.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$$Lambda$214/182580392.get$Lambda (2 samples, 0.09%)</title><rect x="141.7" y="499.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="144.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$Node.&lt;init&gt; (1 samples, 0.05%)</title><rect x="142.8" y="531.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.05%)</title><rect x="143.3" y="531.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="146.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (2 samples, 0.09%)</title><rect x="143.9" y="531.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (30 samples, 1.41%)</title><rect x="145.0" y="547.0" width="16.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (25 samples, 1.17%)</title><rect x="145.0" y="531.0" width="13.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.0" y="542.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.52%)</title><rect x="146.6" y="515.0" width="6.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="149.6" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (11 samples, 0.52%)</title><rect x="146.6" y="499.0" width="6.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="149.6" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (9 samples, 0.42%)</title><rect x="146.6" y="483.0" width="5.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="149.6" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.09%)</title><rect x="150.5" y="467.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="153.5" y="478.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.09%)</title><rect x="151.6" y="483.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="154.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (11 samples, 0.52%)</title><rect x="152.7" y="515.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.09%)</title><rect x="152.7" y="499.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.09%)</title><rect x="152.7" y="483.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="155.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (2 samples, 0.09%)</title><rect x="152.7" y="467.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.7" y="478.0"></text>
</g>
<g>
<title>java/util/Objects.hash (2 samples, 0.09%)</title><rect x="152.7" y="451.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.7" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (2 samples, 0.09%)</title><rect x="152.7" y="435.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (9 samples, 0.42%)</title><rect x="153.8" y="499.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.8" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (9 samples, 0.42%)</title><rect x="153.8" y="483.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.8" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (9 samples, 0.42%)</title><rect x="153.8" y="467.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.8" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (9 samples, 0.42%)</title><rect x="153.8" y="451.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.8" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (9 samples, 0.42%)</title><rect x="153.8" y="435.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="156.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getPlainConnection (5 samples, 0.23%)</title><rect x="158.8" y="531.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="161.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.&lt;init&gt; (5 samples, 0.23%)</title><rect x="158.8" y="515.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.8" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.open (5 samples, 0.23%)</title><rect x="158.8" y="499.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="161.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (41 samples, 1.92%)</title><rect x="161.6" y="547.0" width="22.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="164.6" y="558.0">j..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (39 samples, 1.83%)</title><rect x="162.7" y="531.0" width="21.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.7" y="542.0">j..</text>
</g>
<g>
<title>JVM_DoPrivileged (27 samples, 1.27%)</title><rect x="162.7" y="515.0" width="14.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="165.7" y="526.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.05%)</title><rect x="163.8" y="499.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="166.8" y="510.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.05%)</title><rect x="164.3" y="499.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="167.3" y="510.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.05%)</title><rect x="164.3" y="483.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="167.3" y="494.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.05%)</title><rect x="164.9" y="499.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="167.9" y="510.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (2 samples, 0.09%)</title><rect x="165.5" y="499.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="168.5" y="510.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.19%)</title><rect x="166.6" y="499.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="169.6" y="510.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.05%)</title><rect x="168.8" y="499.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="171.8" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (2 samples, 0.09%)</title><rect x="169.3" y="499.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="172.3" y="510.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (6 samples, 0.28%)</title><rect x="170.4" y="499.0" width="3.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="173.4" y="510.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (6 samples, 0.28%)</title><rect x="170.4" y="483.0" width="3.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="173.4" y="494.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.14%)</title><rect x="170.4" y="467.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="173.4" y="478.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.09%)</title><rect x="172.1" y="467.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="175.1" y="478.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.05%)</title><rect x="173.2" y="467.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="176.2" y="478.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (7 samples, 0.33%)</title><rect x="173.8" y="499.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="176.8" y="510.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.14%)</title><rect x="174.3" y="483.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="177.3" y="494.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.05%)</title><rect x="175.4" y="467.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="178.4" y="478.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.09%)</title><rect x="176.0" y="483.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="179.0" y="494.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="176.0" y="467.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="179.0" y="478.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.05%)</title><rect x="176.5" y="467.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="179.5" y="478.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="176.5" y="451.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="179.5" y="462.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.05%)</title><rect x="176.5" y="435.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="179.5" y="446.0"></text>
</g>
<g>
<title>nmethod::metadata_addr_at(int) const (1 samples, 0.05%)</title><rect x="177.1" y="483.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="180.1" y="494.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.05%)</title><rect x="177.6" y="515.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="180.6" y="526.0"></text>
</g>
<g>
<title>call_stub (3 samples, 0.14%)</title><rect x="178.2" y="515.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="181.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$217/1260205426.run (6 samples, 0.28%)</title><rect x="179.8" y="515.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="182.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (5 samples, 0.23%)</title><rect x="180.4" y="499.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="183.4" y="510.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (4 samples, 0.19%)</title><rect x="180.9" y="483.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="183.9" y="494.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (4 samples, 0.19%)</title><rect x="180.9" y="467.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="183.9" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (4 samples, 0.19%)</title><rect x="180.9" y="451.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="183.9" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (4 samples, 0.19%)</title><rect x="180.9" y="435.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="183.9" y="446.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (4 samples, 0.19%)</title><rect x="180.9" y="419.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="183.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.19%)</title><rect x="180.9" y="403.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="183.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="182.6" y="387.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="185.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.05%)</title><rect x="182.6" y="371.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.6" y="382.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.05%)</title><rect x="183.2" y="515.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="186.2" y="526.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.05%)</title><rect x="183.7" y="515.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="186.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (3 samples, 0.14%)</title><rect x="184.3" y="547.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="187.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;init&gt; (1 samples, 0.05%)</title><rect x="184.3" y="531.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="187.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.05%)</title><rect x="184.8" y="531.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.05%)</title><rect x="185.4" y="531.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="188.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (11 samples, 0.52%)</title><rect x="185.9" y="659.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="188.9" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="185.9" y="643.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="188.9" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="185.9" y="627.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="188.9" y="638.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="185.9" y="611.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="188.9" y="622.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (7 samples, 0.33%)</title><rect x="186.5" y="643.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="189.5" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.23%)</title><rect x="187.6" y="627.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="187.6" y="611.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="190.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="187.6" y="595.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="190.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.05%)</title><rect x="187.6" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="190.6" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.05%)</title><rect x="188.1" y="611.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.1" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.05%)</title><rect x="188.7" y="611.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (2 samples, 0.09%)</title><rect x="189.2" y="611.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (3 samples, 0.14%)</title><rect x="190.3" y="643.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.14%)</title><rect x="190.3" y="627.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="193.3" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="190.3" y="611.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="193.3" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="190.3" y="595.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="193.3" y="606.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="190.3" y="579.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="193.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.09%)</title><rect x="190.9" y="611.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.9" y="622.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.09%)</title><rect x="190.9" y="595.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="193.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (2 samples, 0.09%)</title><rect x="192.0" y="659.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.0" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="192.6" y="643.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="195.6" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.05%)</title><rect x="192.6" y="627.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="195.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (9 samples, 0.42%)</title><rect x="193.1" y="659.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (9 samples, 0.42%)</title><rect x="193.1" y="643.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="196.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (9 samples, 0.42%)</title><rect x="193.1" y="627.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="196.1" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="194.2" y="611.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="197.2" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="194.2" y="595.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="197.2" y="606.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="194.2" y="579.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="197.2" y="590.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (6 samples, 0.28%)</title><rect x="194.8" y="611.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.8" y="622.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (3 samples, 0.14%)</title><rect x="194.8" y="595.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="197.8" y="606.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.05%)</title><rect x="195.9" y="579.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.9" y="590.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (1 samples, 0.05%)</title><rect x="195.9" y="563.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.9" y="574.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (1 samples, 0.05%)</title><rect x="195.9" y="547.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.9" y="558.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (3 samples, 0.14%)</title><rect x="196.4" y="595.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.4" y="606.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (3 samples, 0.14%)</title><rect x="196.4" y="579.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="199.4" y="590.0"></text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.14%)</title><rect x="196.4" y="563.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="199.4" y="574.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.05%)</title><rect x="197.5" y="547.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="200.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (4 samples, 0.19%)</title><rect x="198.1" y="659.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (4 samples, 0.19%)</title><rect x="198.1" y="643.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="201.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (4 samples, 0.19%)</title><rect x="198.1" y="627.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="201.1" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.19%)</title><rect x="198.1" y="611.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="201.1" y="622.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.19%)</title><rect x="198.1" y="595.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="201.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.14%)</title><rect x="198.6" y="579.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="201.6" y="590.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.09%)</title><rect x="198.6" y="563.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="201.6" y="574.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.09%)</title><rect x="198.6" y="547.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="201.6" y="558.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.09%)</title><rect x="198.6" y="531.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="201.6" y="542.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.05%)</title><rect x="199.8" y="563.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="202.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (33 samples, 1.55%)</title><rect x="200.3" y="723.0" width="18.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.09%)</title><rect x="200.3" y="707.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="203.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.09%)</title><rect x="200.3" y="691.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="203.3" y="702.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="200.3" y="675.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="203.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="200.9" y="675.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="203.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (31 samples, 1.45%)</title><rect x="201.4" y="707.0" width="17.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="204.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.19%)</title><rect x="201.4" y="691.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="204.4" y="702.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="202.0" y="675.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="205.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="202.5" y="675.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="205.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.05%)</title><rect x="202.5" y="659.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="205.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$206/2123650476.accept (1 samples, 0.05%)</title><rect x="203.1" y="675.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="206.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$206/2123650476.accept (27 samples, 1.27%)</title><rect x="203.6" y="691.0" width="15.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.05%)</title><rect x="203.6" y="675.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="206.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$respond$0 (26 samples, 1.22%)</title><rect x="204.2" y="675.0" width="14.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="207.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (26 samples, 1.22%)</title><rect x="204.2" y="659.0" width="14.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (26 samples, 1.22%)</title><rect x="204.2" y="643.0" width="14.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="207.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (21 samples, 0.98%)</title><rect x="205.3" y="627.0" width="11.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="208.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.19%)</title><rect x="205.3" y="611.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="208.3" y="622.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.14%)</title><rect x="205.8" y="595.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="208.8" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="206.9" y="579.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="209.9" y="590.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="206.9" y="563.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="209.9" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="206.9" y="547.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="209.9" y="558.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="206.9" y="531.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="209.9" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (17 samples, 0.80%)</title><rect x="207.5" y="611.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="210.5" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (17 samples, 0.80%)</title><rect x="207.5" y="595.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="210.5" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (17 samples, 0.80%)</title><rect x="207.5" y="579.0" width="9.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="210.5" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (17 samples, 0.80%)</title><rect x="207.5" y="563.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.5" y="574.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.33%)</title><rect x="208.0" y="547.0" width="3.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="211.0" y="558.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.09%)</title><rect x="209.7" y="531.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="212.7" y="542.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.09%)</title><rect x="210.8" y="531.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="213.8" y="542.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.05%)</title><rect x="211.4" y="515.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="214.4" y="526.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.05%)</title><rect x="211.4" y="499.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="214.4" y="510.0"></text>
</g>
<g>
<title>__libc_send (8 samples, 0.38%)</title><rect x="211.9" y="547.0" width="4.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="214.9" y="558.0"></text>
</g>
<g>
<title>send@plt (1 samples, 0.05%)</title><rect x="216.3" y="547.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="219.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.14%)</title><rect x="216.9" y="627.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="219.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.09%)</title><rect x="217.5" y="611.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="220.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.09%)</title><rect x="217.5" y="595.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="220.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$172/1002107470.get (2 samples, 0.09%)</title><rect x="218.6" y="723.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="221.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$120/1851269310.get (48 samples, 2.25%)</title><rect x="219.7" y="739.0" width="26.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="222.7" y="750.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replicasPut$2 (48 samples, 2.25%)</title><rect x="219.7" y="723.0" width="26.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.7" y="734.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="219.7" y="707.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.7" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="219.7" y="691.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="222.7" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="219.7" y="675.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="222.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (47 samples, 2.20%)</title><rect x="220.2" y="707.0" width="26.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="223.2" y="718.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.09%)</title><rect x="220.8" y="691.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="223.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.09%)</title><rect x="220.8" y="675.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="223.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.09%)</title><rect x="220.8" y="659.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="223.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (2 samples, 0.09%)</title><rect x="220.8" y="643.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="223.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (2 samples, 0.09%)</title><rect x="220.8" y="627.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="223.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (44 samples, 2.06%)</title><rect x="221.9" y="691.0" width="24.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="224.9" y="702.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (44 samples, 2.06%)</title><rect x="221.9" y="675.0" width="24.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="224.9" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (42 samples, 1.97%)</title><rect x="222.4" y="659.0" width="23.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.4" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (4 samples, 0.19%)</title><rect x="224.1" y="643.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (4 samples, 0.19%)</title><rect x="224.1" y="627.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (35 samples, 1.64%)</title><rect x="226.3" y="643.0" width="19.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="229.3" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (35 samples, 1.64%)</title><rect x="226.3" y="627.0" width="19.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="229.3" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.61%)</title><rect x="238.5" y="611.0" width="7.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="241.5" y="622.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (13 samples, 0.61%)</title><rect x="238.5" y="595.0" width="7.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="241.5" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="244.6" y="579.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="247.6" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.05%)</title><rect x="244.6" y="563.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="247.6" y="574.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.05%)</title><rect x="245.1" y="579.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="248.1" y="590.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="245.7" y="659.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="248.7" y="670.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="245.7" y="643.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="248.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/SimpleRequests$$Lambda$383/1483224964.get (64 samples, 3.00%)</title><rect x="246.2" y="739.0" width="35.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.2" y="750.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/SimpleRequests.lambda$put$1 (64 samples, 3.00%)</title><rect x="246.2" y="723.0" width="35.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="249.2" y="734.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.14%)</title><rect x="246.8" y="707.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.14%)</title><rect x="246.8" y="691.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="249.8" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.09%)</title><rect x="246.8" y="675.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="249.8" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.09%)</title><rect x="246.8" y="659.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="249.8" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.09%)</title><rect x="246.8" y="643.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="249.8" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.09%)</title><rect x="246.8" y="627.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="249.8" y="638.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.09%)</title><rect x="246.8" y="611.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="249.8" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="246.8" y="595.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="249.8" y="606.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.05%)</title><rect x="247.3" y="595.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="250.3" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="247.9" y="675.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="250.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (59 samples, 2.77%)</title><rect x="248.4" y="707.0" width="32.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="251.4" y="718.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.09%)</title><rect x="250.1" y="691.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="253.1" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.09%)</title><rect x="250.1" y="675.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="253.1" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.09%)</title><rect x="250.1" y="659.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="253.1" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.09%)</title><rect x="250.1" y="643.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="253.1" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.09%)</title><rect x="250.1" y="627.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="253.1" y="638.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.09%)</title><rect x="250.1" y="611.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="253.1" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.09%)</title><rect x="250.1" y="595.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="253.1" y="606.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.05%)</title><rect x="250.1" y="579.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="253.1" y="590.0"></text>
</g>
<g>
<title>G1CollectedHeap::max_tlab_size() const (1 samples, 0.05%)</title><rect x="250.1" y="563.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="253.1" y="574.0"></text>
</g>
<g>
<title>G1ContiguousSpace::free() const (1 samples, 0.05%)</title><rect x="250.6" y="579.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="253.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.05%)</title><rect x="251.2" y="691.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="254.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.05%)</title><rect x="251.2" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="254.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.05%)</title><rect x="251.2" y="659.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="254.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (1 samples, 0.05%)</title><rect x="251.2" y="643.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="254.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (1 samples, 0.05%)</title><rect x="251.2" y="627.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="254.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (1 samples, 0.05%)</title><rect x="251.2" y="611.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="254.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (53 samples, 2.48%)</title><rect x="251.8" y="691.0" width="29.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="254.8" y="702.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.05%)</title><rect x="251.8" y="675.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="254.8" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.05%)</title><rect x="251.8" y="659.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="254.8" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="251.8" y="643.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="254.8" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="251.8" y="627.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="254.8" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="251.8" y="611.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="254.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (52 samples, 2.44%)</title><rect x="252.3" y="675.0" width="28.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.3" y="686.0">ja..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="252.3" y="659.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="255.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (51 samples, 2.39%)</title><rect x="252.9" y="659.0" width="28.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="255.9" y="670.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (3 samples, 0.14%)</title><rect x="254.0" y="643.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="257.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (3 samples, 0.14%)</title><rect x="254.0" y="627.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="257.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (46 samples, 2.16%)</title><rect x="255.6" y="643.0" width="25.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="258.6" y="654.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (46 samples, 2.16%)</title><rect x="255.6" y="627.0" width="25.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="258.6" y="638.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.61%)</title><rect x="273.9" y="611.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="276.9" y="622.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (13 samples, 0.61%)</title><rect x="273.9" y="595.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="276.9" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.19%)</title><rect x="278.9" y="579.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="281.9" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.19%)</title><rect x="278.9" y="563.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="281.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.emptyResponse (1 samples, 0.05%)</title><rect x="281.1" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.05%)</title><rect x="281.1" y="691.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="284.1" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="281.1" y="675.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="284.1" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.05%)</title><rect x="281.1" y="659.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="284.1" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="281.1" y="643.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="284.1" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="281.1" y="627.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="284.1" y="638.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="281.1" y="611.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="284.1" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="281.1" y="595.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="284.1" y="606.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.05%)</title><rect x="281.1" y="579.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="284.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (46 samples, 2.16%)</title><rect x="281.6" y="755.0" width="25.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="284.6" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (35 samples, 1.64%)</title><rect x="284.4" y="739.0" width="19.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="287.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (33 samples, 1.55%)</title><rect x="284.4" y="723.0" width="18.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="287.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (33 samples, 1.55%)</title><rect x="284.4" y="707.0" width="18.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="287.4" y="718.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.14%)</title><rect x="284.9" y="691.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="287.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (26 samples, 1.22%)</title><rect x="286.6" y="691.0" width="14.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.05%)</title><rect x="286.6" y="675.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.05%)</title><rect x="286.6" y="659.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="289.6" y="670.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="286.6" y="643.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="289.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (25 samples, 1.17%)</title><rect x="287.2" y="675.0" width="13.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="290.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.33%)</title><rect x="287.2" y="659.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="290.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.23%)</title><rect x="287.7" y="643.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="290.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.23%)</title><rect x="287.7" y="627.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="290.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.14%)</title><rect x="288.3" y="611.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="291.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.14%)</title><rect x="288.3" y="595.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="291.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.14%)</title><rect x="288.3" y="579.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.14%)</title><rect x="288.3" y="563.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="291.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.14%)</title><rect x="288.3" y="547.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="291.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.05%)</title><rect x="289.9" y="611.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="292.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="289.9" y="595.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="292.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.05%)</title><rect x="289.9" y="579.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="292.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.05%)</title><rect x="289.9" y="563.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="292.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.05%)</title><rect x="289.9" y="547.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="292.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="289.9" y="531.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="292.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$206/2123650476.accept (1 samples, 0.05%)</title><rect x="290.5" y="643.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="293.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$206/2123650476.accept (18 samples, 0.84%)</title><rect x="291.0" y="659.0" width="10.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="294.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$respond$0 (18 samples, 0.84%)</title><rect x="291.0" y="643.0" width="10.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="294.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (18 samples, 0.84%)</title><rect x="291.0" y="627.0" width="10.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="294.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (18 samples, 0.84%)</title><rect x="291.0" y="611.0" width="10.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="294.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.14%)</title><rect x="291.0" y="595.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="294.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.14%)</title><rect x="291.0" y="579.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.14%)</title><rect x="291.0" y="563.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="294.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="291.0" y="547.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="294.0" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="291.0" y="531.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="294.0" y="542.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.09%)</title><rect x="291.6" y="547.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="294.6" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (12 samples, 0.56%)</title><rect x="292.7" y="595.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="295.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.23%)</title><rect x="292.7" y="579.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="295.7" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.33%)</title><rect x="295.5" y="579.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="298.5" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.33%)</title><rect x="295.5" y="563.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="298.5" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (7 samples, 0.33%)</title><rect x="295.5" y="547.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="298.5" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (7 samples, 0.33%)</title><rect x="295.5" y="531.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.5" y="542.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.14%)</title><rect x="295.5" y="515.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="298.5" y="526.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.05%)</title><rect x="295.5" y="499.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="298.5" y="510.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="296.0" y="499.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="299.0" y="510.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.05%)</title><rect x="296.6" y="499.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="299.6" y="510.0"></text>
</g>
<g>
<title>__libc_send (4 samples, 0.19%)</title><rect x="297.1" y="515.0" width="2.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="300.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.14%)</title><rect x="299.3" y="595.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="302.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.09%)</title><rect x="299.9" y="579.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="302.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.09%)</title><rect x="299.9" y="563.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="302.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$183/172221686.apply (1 samples, 0.05%)</title><rect x="301.0" y="691.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="304.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$199/321800161.apply (2 samples, 0.09%)</title><rect x="301.5" y="691.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$183/172221686.apply (1 samples, 0.05%)</title><rect x="302.6" y="723.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replicasPut$3 (1 samples, 0.05%)</title><rect x="302.6" y="707.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="305.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.emptyResponse (1 samples, 0.05%)</title><rect x="302.6" y="691.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.6" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="302.6" y="675.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="305.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$199/321800161.apply (1 samples, 0.05%)</title><rect x="303.2" y="723.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="306.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replicasPut$4 (1 samples, 0.05%)</title><rect x="303.2" y="707.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="306.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.emptyResponse (1 samples, 0.05%)</title><rect x="303.2" y="691.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="306.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (6 samples, 0.28%)</title><rect x="303.8" y="739.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="306.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6 samples, 0.28%)</title><rect x="303.8" y="723.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FuturesUtils$$Lambda$192/574997146.accept (6 samples, 0.28%)</title><rect x="303.8" y="707.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="306.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FuturesUtils.lambda$atLeastAsync$0 (6 samples, 0.28%)</title><rect x="303.8" y="691.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 0.23%)</title><rect x="303.8" y="675.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="306.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.23%)</title><rect x="303.8" y="659.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="306.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.05%)</title><rect x="306.0" y="643.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="309.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.05%)</title><rect x="306.0" y="627.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="309.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.05%)</title><rect x="306.0" y="611.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="309.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="306.0" y="595.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (1 samples, 0.05%)</title><rect x="306.5" y="675.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="309.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (215 samples, 10.08%)</title><rect x="307.1" y="755.0" width="118.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="310.1" y="766.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (208 samples, 9.75%)</title><rect x="310.9" y="739.0" width="115.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.9" y="750.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (139 samples, 6.52%)</title><rect x="319.2" y="723.0" width="76.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="322.2" y="734.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.05%)</title><rect x="320.4" y="707.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="323.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.05%)</title><rect x="320.4" y="691.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="323.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.05%)</title><rect x="320.4" y="675.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="323.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (22 samples, 1.03%)</title><rect x="320.9" y="707.0" width="12.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="323.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (22 samples, 1.03%)</title><rect x="320.9" y="691.0" width="12.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="323.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 0.89%)</title><rect x="322.6" y="675.0" width="10.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="325.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.89%)</title><rect x="322.6" y="659.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="325.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 0.89%)</title><rect x="322.6" y="643.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="325.6" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.38%)</title><rect x="322.6" y="627.0" width="4.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="325.6" y="638.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.05%)</title><rect x="323.1" y="611.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="326.1" y="622.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.05%)</title><rect x="323.7" y="611.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="326.7" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.05%)</title><rect x="324.2" y="611.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="327.2" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.09%)</title><rect x="324.8" y="611.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="327.8" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.09%)</title><rect x="325.9" y="611.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="328.9" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.52%)</title><rect x="327.0" y="627.0" width="6.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="330.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (2 samples, 0.09%)</title><rect x="333.1" y="707.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="336.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (2 samples, 0.09%)</title><rect x="333.1" y="691.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="336.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (112 samples, 5.25%)</title><rect x="334.2" y="707.0" width="61.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="337.2" y="718.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (111 samples, 5.20%)</title><rect x="334.7" y="691.0" width="61.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="337.7" y="702.0">jdk/in..</text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.05%)</title><rect x="335.3" y="675.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="338.3" y="686.0"></text>
</g>
<g>
<title>Unsafe_Park (70 samples, 3.28%)</title><rect x="335.8" y="675.0" width="38.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="338.8" y="686.0">Uns..</text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (2 samples, 0.09%)</title><rect x="340.8" y="659.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="343.8" y="670.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (3 samples, 0.14%)</title><rect x="341.9" y="659.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="344.9" y="670.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.05%)</title><rect x="343.6" y="659.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="346.6" y="670.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.09%)</title><rect x="344.1" y="659.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="347.1" y="670.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (20 samples, 0.94%)</title><rect x="345.2" y="659.0" width="11.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="348.2" y="670.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.14%)</title><rect x="348.6" y="643.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="351.6" y="654.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (2 samples, 0.09%)</title><rect x="349.1" y="627.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="352.1" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (5 samples, 0.23%)</title><rect x="350.2" y="643.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="353.2" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.19%)</title><rect x="353.0" y="643.0" width="2.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="356.0" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.09%)</title><rect x="355.2" y="643.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="358.2" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (3 samples, 0.14%)</title><rect x="356.3" y="659.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="359.3" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.05%)</title><rect x="358.0" y="659.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="361.0" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.05%)</title><rect x="358.5" y="659.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="361.5" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="359.1" y="659.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="362.1" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (26 samples, 1.22%)</title><rect x="359.6" y="659.0" width="14.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="362.6" y="670.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.05%)</title><rect x="374.0" y="659.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="377.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.73%)</title><rect x="374.6" y="675.0" width="20.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="377.6" y="686.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (2 samples, 0.09%)</title><rect x="374.6" y="659.0" width="1.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="377.6" y="670.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.19%)</title><rect x="375.7" y="659.0" width="2.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="378.7" y="670.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.14%)</title><rect x="377.9" y="659.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="380.9" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.05%)</title><rect x="379.5" y="659.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="382.5" y="670.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (27 samples, 1.27%)</title><rect x="380.1" y="659.0" width="14.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="383.1" y="670.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.09%)</title><rect x="395.0" y="675.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="398.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (15 samples, 0.70%)</title><rect x="396.1" y="723.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (15 samples, 0.70%)</title><rect x="396.1" y="707.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (15 samples, 0.70%)</title><rect x="396.1" y="691.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="399.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.09%)</title><rect x="397.8" y="675.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (10 samples, 0.47%)</title><rect x="398.9" y="675.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="401.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.47%)</title><rect x="398.9" y="659.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="401.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.47%)</title><rect x="398.9" y="643.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="401.9" y="654.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.23%)</title><rect x="398.9" y="627.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="401.9" y="638.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.05%)</title><rect x="398.9" y="611.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="401.9" y="622.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.09%)</title><rect x="399.5" y="611.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="402.5" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.09%)</title><rect x="400.6" y="611.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="403.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.19%)</title><rect x="401.7" y="627.0" width="2.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="404.7" y="638.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="401.7" y="611.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="404.7" y="622.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="402.2" y="611.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="405.2" y="622.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.09%)</title><rect x="402.8" y="611.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="405.8" y="622.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.05%)</title><rect x="403.9" y="627.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="406.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (39 samples, 1.83%)</title><rect x="404.4" y="723.0" width="21.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.4" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (39 samples, 1.83%)</title><rect x="404.4" y="707.0" width="21.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="407.4" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (39 samples, 1.83%)</title><rect x="404.4" y="691.0" width="21.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="407.4" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (37 samples, 1.73%)</title><rect x="405.5" y="675.0" width="20.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="408.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (37 samples, 1.73%)</title><rect x="405.5" y="659.0" width="20.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="408.5" y="670.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.05%)</title><rect x="405.5" y="643.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="408.5" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (2 samples, 0.09%)</title><rect x="406.1" y="643.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="409.1" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.05%)</title><rect x="407.2" y="643.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="410.2" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.05%)</title><rect x="407.8" y="643.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="410.8" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (20 samples, 0.94%)</title><rect x="408.3" y="643.0" width="11.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="411.3" y="654.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="408.9" y="627.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="411.9" y="638.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (2 samples, 0.09%)</title><rect x="409.4" y="627.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="412.4" y="638.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.05%)</title><rect x="410.5" y="627.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="413.5" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.14%)</title><rect x="411.1" y="627.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="414.1" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.09%)</title><rect x="412.7" y="627.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="415.7" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.05%)</title><rect x="413.8" y="627.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="416.8" y="638.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.09%)</title><rect x="414.4" y="627.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="417.4" y="638.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.05%)</title><rect x="415.5" y="627.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="418.5" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_lock (6 samples, 0.28%)</title><rect x="416.1" y="627.0" width="3.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="419.1" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.56%)</title><rect x="419.4" y="643.0" width="6.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="422.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$344/2115454959.run (130 samples, 6.09%)</title><rect x="426.0" y="755.0" width="71.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="429.0" y="766.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (127 samples, 5.95%)</title><rect x="427.7" y="739.0" width="70.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.7" y="750.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (127 samples, 5.95%)</title><rect x="427.7" y="723.0" width="70.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="430.7" y="734.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (123 samples, 5.77%)</title><rect x="429.9" y="707.0" width="68.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="432.9" y="718.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (123 samples, 5.77%)</title><rect x="429.9" y="691.0" width="68.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.9" y="702.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (123 samples, 5.77%)</title><rect x="429.9" y="675.0" width="68.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="432.9" y="686.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (122 samples, 5.72%)</title><rect x="429.9" y="659.0" width="67.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="432.9" y="670.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (122 samples, 5.72%)</title><rect x="429.9" y="643.0" width="67.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="432.9" y="654.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (122 samples, 5.72%)</title><rect x="429.9" y="627.0" width="67.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="432.9" y="638.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (122 samples, 5.72%)</title><rect x="429.9" y="611.0" width="67.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="432.9" y="622.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$270/1387273586.run (1 samples, 0.05%)</title><rect x="429.9" y="595.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="432.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (121 samples, 5.67%)</title><rect x="430.4" y="595.0" width="67.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="433.4" y="606.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (60 samples, 2.81%)</title><rect x="432.1" y="579.0" width="33.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="435.1" y="590.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (51 samples, 2.39%)</title><rect x="433.2" y="563.0" width="28.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.2" y="574.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (46 samples, 2.16%)</title><rect x="436.0" y="547.0" width="25.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.0" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (44 samples, 2.06%)</title><rect x="436.0" y="531.0" width="24.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="439.0" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (44 samples, 2.06%)</title><rect x="436.0" y="515.0" width="24.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="439.0" y="526.0">j..</text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="436.0" y="499.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="439.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (13 samples, 0.61%)</title><rect x="436.5" y="499.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="439.5" y="510.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.09%)</title><rect x="438.2" y="483.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="441.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.09%)</title><rect x="439.3" y="483.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.09%)</title><rect x="439.3" y="467.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="442.3" y="478.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$41/1313916817.apply (1 samples, 0.05%)</title><rect x="440.4" y="483.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="443.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$372/98170111.apply (5 samples, 0.23%)</title><rect x="441.0" y="483.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="444.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (4 samples, 0.19%)</title><rect x="441.5" y="467.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="444.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (4 samples, 0.19%)</title><rect x="441.5" y="451.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="444.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (4 samples, 0.19%)</title><rect x="441.5" y="435.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="444.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (4 samples, 0.19%)</title><rect x="441.5" y="419.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="444.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4 samples, 0.19%)</title><rect x="441.5" y="403.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="444.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.19%)</title><rect x="441.5" y="387.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="444.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (26 samples, 1.22%)</title><rect x="443.7" y="499.0" width="14.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="446.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (26 samples, 1.22%)</title><rect x="443.7" y="483.0" width="14.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="446.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$312/838027427.apply (26 samples, 1.22%)</title><rect x="443.7" y="467.0" width="14.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="446.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (26 samples, 1.22%)</title><rect x="443.7" y="451.0" width="14.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (26 samples, 1.22%)</title><rect x="443.7" y="435.0" width="14.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="446.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$198/423295079.apply (24 samples, 1.13%)</title><rect x="443.7" y="419.0" width="13.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="446.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (24 samples, 1.13%)</title><rect x="443.7" y="403.0" width="13.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="446.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.09%)</title><rect x="444.3" y="387.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="447.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.09%)</title><rect x="444.3" y="371.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="447.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.05%)</title><rect x="444.8" y="355.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="447.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (1 samples, 0.05%)</title><rect x="445.4" y="387.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="448.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (20 samples, 0.94%)</title><rect x="445.9" y="387.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="448.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.05%)</title><rect x="445.9" y="371.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="448.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (9 samples, 0.42%)</title><rect x="446.5" y="371.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="449.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (9 samples, 0.42%)</title><rect x="446.5" y="355.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="449.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (9 samples, 0.42%)</title><rect x="446.5" y="339.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="449.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$362/304763652.accept (3 samples, 0.14%)</title><rect x="446.5" y="323.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (3 samples, 0.14%)</title><rect x="446.5" y="307.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="449.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (3 samples, 0.14%)</title><rect x="446.5" y="291.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="449.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (3 samples, 0.14%)</title><rect x="446.5" y="275.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="449.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.14%)</title><rect x="446.5" y="259.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.05%)</title><rect x="446.5" y="243.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="449.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.05%)</title><rect x="446.5" y="227.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="449.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.&lt;init&gt; (1 samples, 0.05%)</title><rect x="446.5" y="211.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="449.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.05%)</title><rect x="446.5" y="195.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="449.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.05%)</title><rect x="447.0" y="243.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="450.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.&lt;init&gt; (1 samples, 0.05%)</title><rect x="447.0" y="227.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="450.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="447.6" y="243.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="450.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="447.6" y="227.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="450.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.05%)</title><rect x="447.6" y="211.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="450.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="447.6" y="195.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="450.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$369/1082072813.accept (6 samples, 0.28%)</title><rect x="448.1" y="323.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="451.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (6 samples, 0.28%)</title><rect x="448.1" y="307.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="451.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (6 samples, 0.28%)</title><rect x="448.1" y="291.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="451.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (6 samples, 0.28%)</title><rect x="448.1" y="275.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="451.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (6 samples, 0.28%)</title><rect x="448.1" y="259.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.28%)</title><rect x="448.1" y="243.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="451.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.lambda$increase$0 (1 samples, 0.05%)</title><rect x="448.1" y="227.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.23%)</title><rect x="448.7" y="227.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="451.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.23%)</title><rect x="448.7" y="211.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.23%)</title><rect x="448.7" y="195.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="451.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (4 samples, 0.19%)</title><rect x="448.7" y="179.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="451.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (4 samples, 0.19%)</title><rect x="448.7" y="163.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (4 samples, 0.19%)</title><rect x="448.7" y="147.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="451.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.19%)</title><rect x="448.7" y="131.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="451.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.19%)</title><rect x="448.7" y="115.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="451.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (3 samples, 0.14%)</title><rect x="448.7" y="99.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="451.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (3 samples, 0.14%)</title><rect x="448.7" y="83.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="451.7" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (3 samples, 0.14%)</title><rect x="448.7" y="67.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="451.7" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (3 samples, 0.14%)</title><rect x="448.7" y="51.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="451.7" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$Node.&lt;init&gt; (3 samples, 0.14%)</title><rect x="448.7" y="35.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="451.7" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="450.4" y="99.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.4" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="450.4" y="83.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="453.4" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.05%)</title><rect x="450.9" y="179.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (10 samples, 0.47%)</title><rect x="451.5" y="371.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="454.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (1 samples, 0.05%)</title><rect x="451.5" y="355.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="454.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (1 samples, 0.05%)</title><rect x="451.5" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="454.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.05%)</title><rect x="451.5" y="323.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;init&gt; (1 samples, 0.05%)</title><rect x="451.5" y="307.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="454.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (9 samples, 0.42%)</title><rect x="452.0" y="355.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="455.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (5 samples, 0.23%)</title><rect x="452.0" y="339.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="455.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (1 samples, 0.05%)</title><rect x="452.0" y="323.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="455.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (1 samples, 0.05%)</title><rect x="452.0" y="307.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="455.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.05%)</title><rect x="452.0" y="291.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="455.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.05%)</title><rect x="452.0" y="275.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="455.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (4 samples, 0.19%)</title><rect x="452.6" y="323.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="455.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.05%)</title><rect x="452.6" y="307.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="455.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (3 samples, 0.14%)</title><rect x="453.1" y="307.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="456.1" y="318.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.05%)</title><rect x="453.7" y="291.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="456.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.&lt;init&gt; (1 samples, 0.05%)</title><rect x="454.2" y="291.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="457.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (4 samples, 0.19%)</title><rect x="454.8" y="339.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="457.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.05%)</title><rect x="454.8" y="323.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="457.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="454.8" y="307.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="457.8" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="454.8" y="291.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="457.8" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="454.8" y="275.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.8" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="454.8" y="259.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="457.8" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="454.8" y="243.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="457.8" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="454.8" y="227.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="457.8" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.05%)</title><rect x="455.3" y="323.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="458.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="455.3" y="307.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="458.3" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="455.3" y="291.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="458.3" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.09%)</title><rect x="455.9" y="323.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="458.9" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (2 samples, 0.09%)</title><rect x="455.9" y="307.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$204/1335605778.apply (2 samples, 0.09%)</title><rect x="457.0" y="419.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="460.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2 samples, 0.09%)</title><rect x="457.0" y="403.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="460.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (2 samples, 0.09%)</title><rect x="457.0" y="387.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="460.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.09%)</title><rect x="457.0" y="371.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="460.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.09%)</title><rect x="457.0" y="355.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="460.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$356/1019675645.get (2 samples, 0.09%)</title><rect x="458.1" y="499.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$380/1756385671.get (2 samples, 0.09%)</title><rect x="459.2" y="499.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.09%)</title><rect x="460.3" y="531.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.3" y="542.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.09%)</title><rect x="460.3" y="515.0" width="1.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="463.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (3 samples, 0.14%)</title><rect x="461.4" y="563.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="464.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (1 samples, 0.05%)</title><rect x="462.5" y="547.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="465.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedPredecessors (1 samples, 0.05%)</title><rect x="462.5" y="531.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="465.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.19%)</title><rect x="463.1" y="563.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.14%)</title><rect x="463.1" y="547.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="466.1" y="558.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="463.1" y="531.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="466.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$378/1745146989.run (2 samples, 0.09%)</title><rect x="463.6" y="531.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$378/1745146989.run (1 samples, 0.05%)</title><rect x="464.7" y="547.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="467.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (1 samples, 0.05%)</title><rect x="464.7" y="531.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="467.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1 samples, 0.05%)</title><rect x="464.7" y="515.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1 samples, 0.05%)</title><rect x="464.7" y="499.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="467.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="464.7" y="483.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.05%)</title><rect x="465.3" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="468.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (57 samples, 2.67%)</title><rect x="465.8" y="579.0" width="31.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="468.8" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (57 samples, 2.67%)</title><rect x="465.8" y="563.0" width="31.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.8" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (57 samples, 2.67%)</title><rect x="465.8" y="547.0" width="31.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="468.8" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (1 samples, 0.05%)</title><rect x="467.0" y="531.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="470.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (54 samples, 2.53%)</title><rect x="467.5" y="531.0" width="29.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.5" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$375/1468071988.run (7 samples, 0.33%)</title><rect x="468.6" y="515.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (7 samples, 0.33%)</title><rect x="468.6" y="499.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="471.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (3 samples, 0.14%)</title><rect x="470.8" y="483.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="473.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (45 samples, 2.11%)</title><rect x="472.5" y="515.0" width="24.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="475.5" y="526.0">j..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (39 samples, 1.83%)</title><rect x="474.7" y="499.0" width="21.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.7" y="510.0">j..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (39 samples, 1.83%)</title><rect x="474.7" y="483.0" width="21.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="477.7" y="494.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (39 samples, 1.83%)</title><rect x="474.7" y="467.0" width="21.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="477.7" y="478.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (36 samples, 1.69%)</title><rect x="476.4" y="451.0" width="19.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="479.4" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (4 samples, 0.19%)</title><rect x="476.4" y="435.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.4" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (4 samples, 0.19%)</title><rect x="476.4" y="419.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.4" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (4 samples, 0.19%)</title><rect x="476.4" y="403.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.4" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (32 samples, 1.50%)</title><rect x="478.6" y="435.0" width="17.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="481.6" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (14 samples, 0.66%)</title><rect x="488.5" y="419.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.5" y="430.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (1 samples, 0.05%)</title><rect x="490.2" y="403.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="493.2" y="414.0"></text>
</g>
<g>
<title>__GI___writev (8 samples, 0.38%)</title><rect x="490.7" y="403.0" width="4.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="493.7" y="414.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.05%)</title><rect x="495.2" y="403.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="498.2" y="414.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.05%)</title><rect x="495.7" y="403.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="498.7" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.09%)</title><rect x="496.3" y="499.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="499.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.05%)</title><rect x="497.4" y="659.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="500.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.05%)</title><rect x="497.4" y="643.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="500.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (408 samples, 19.13%)</title><rect x="497.9" y="755.0" width="225.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.9" y="766.0">jdk/internal/net/http/common/S..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (407 samples, 19.08%)</title><rect x="498.5" y="739.0" width="225.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.5" y="750.0">jdk/internal/net/http/common/S..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (141 samples, 6.61%)</title><rect x="498.5" y="723.0" width="78.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="501.5" y="734.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$270/1387273586.run (141 samples, 6.61%)</title><rect x="498.5" y="707.0" width="78.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.5" y="718.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (141 samples, 6.61%)</title><rect x="498.5" y="691.0" width="78.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="501.5" y="702.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (13 samples, 0.61%)</title><rect x="499.0" y="675.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="502.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (13 samples, 0.61%)</title><rect x="499.0" y="659.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="502.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (13 samples, 0.61%)</title><rect x="499.0" y="643.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="502.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (12 samples, 0.56%)</title><rect x="499.6" y="627.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="502.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (11 samples, 0.52%)</title><rect x="500.1" y="611.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="503.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (11 samples, 0.52%)</title><rect x="500.1" y="595.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (11 samples, 0.52%)</title><rect x="500.1" y="579.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="503.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (10 samples, 0.47%)</title><rect x="500.7" y="563.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="503.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (6 samples, 0.28%)</title><rect x="502.9" y="547.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="505.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.23%)</title><rect x="503.5" y="531.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="506.5" y="542.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="504.0" y="515.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="507.0" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="504.0" y="499.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="507.0" y="510.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="504.0" y="483.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="507.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.14%)</title><rect x="504.6" y="515.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="507.6" y="526.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.09%)</title><rect x="505.1" y="499.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="508.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (127 samples, 5.95%)</title><rect x="506.2" y="675.0" width="70.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="509.2" y="686.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (127 samples, 5.95%)</title><rect x="506.2" y="659.0" width="70.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="509.2" y="670.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (127 samples, 5.95%)</title><rect x="506.2" y="643.0" width="70.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="509.2" y="654.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (127 samples, 5.95%)</title><rect x="506.2" y="627.0" width="70.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.2" y="638.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (75 samples, 3.52%)</title><rect x="507.3" y="611.0" width="41.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="510.3" y="622.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (75 samples, 3.52%)</title><rect x="507.3" y="595.0" width="41.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="510.3" y="606.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (71 samples, 3.33%)</title><rect x="507.9" y="579.0" width="39.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="510.9" y="590.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (68 samples, 3.19%)</title><rect x="508.4" y="563.0" width="37.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="511.4" y="574.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (68 samples, 3.19%)</title><rect x="508.4" y="547.0" width="37.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="511.4" y="558.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (67 samples, 3.14%)</title><rect x="508.4" y="531.0" width="37.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.4" y="542.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (66 samples, 3.09%)</title><rect x="508.4" y="515.0" width="36.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="511.4" y="526.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (60 samples, 2.81%)</title><rect x="509.0" y="499.0" width="33.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="512.0" y="510.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (60 samples, 2.81%)</title><rect x="509.0" y="483.0" width="33.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.0" y="494.0">ja..</text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="509.0" y="467.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="512.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (49 samples, 2.30%)</title><rect x="509.5" y="467.0" width="27.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="512.5" y="478.0">j..</text>
</g>
<g>
<title>itable stub (3 samples, 0.14%)</title><rect x="510.7" y="451.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="513.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.09%)</title><rect x="512.3" y="451.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.09%)</title><rect x="512.3" y="435.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="515.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$167/1947942813.apply (26 samples, 1.22%)</title><rect x="513.4" y="451.0" width="14.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="516.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (25 samples, 1.17%)</title><rect x="514.0" y="435.0" width="13.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (25 samples, 1.17%)</title><rect x="514.0" y="419.0" width="13.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (25 samples, 1.17%)</title><rect x="514.0" y="403.0" width="13.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="517.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (22 samples, 1.03%)</title><rect x="515.1" y="387.0" width="12.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (12 samples, 0.56%)</title><rect x="515.1" y="371.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="518.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (12 samples, 0.56%)</title><rect x="515.1" y="355.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="518.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (12 samples, 0.56%)</title><rect x="515.1" y="339.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="518.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (10 samples, 0.47%)</title><rect x="516.2" y="323.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (9 samples, 0.42%)</title><rect x="516.7" y="307.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="519.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.19%)</title><rect x="516.7" y="291.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.7" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.05%)</title><rect x="516.7" y="275.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (3 samples, 0.14%)</title><rect x="517.3" y="275.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.05%)</title><rect x="518.4" y="259.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="521.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (5 samples, 0.23%)</title><rect x="519.0" y="291.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="522.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.14%)</title><rect x="520.1" y="275.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="523.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.05%)</title><rect x="521.7" y="371.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="524.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.05%)</title><rect x="521.7" y="355.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.42%)</title><rect x="522.3" y="371.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.09%)</title><rect x="522.3" y="355.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="525.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$397/1581807967.run (7 samples, 0.33%)</title><rect x="523.4" y="355.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="526.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (7 samples, 0.33%)</title><rect x="523.4" y="339.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.05%)</title><rect x="523.4" y="323.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="526.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (3 samples, 0.14%)</title><rect x="523.9" y="323.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="526.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (3 samples, 0.14%)</title><rect x="523.9" y="307.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="526.9" y="318.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (3 samples, 0.14%)</title><rect x="523.9" y="291.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="526.9" y="302.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (2 samples, 0.09%)</title><rect x="524.5" y="275.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="527.5" y="286.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (2 samples, 0.09%)</title><rect x="524.5" y="259.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="527.5" y="270.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.09%)</title><rect x="524.5" y="243.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="527.5" y="254.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.05%)</title><rect x="524.5" y="227.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="527.5" y="238.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.05%)</title><rect x="525.0" y="227.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="528.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (3 samples, 0.14%)</title><rect x="525.6" y="323.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="528.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (3 samples, 0.14%)</title><rect x="525.6" y="307.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="528.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (3 samples, 0.14%)</title><rect x="525.6" y="291.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="528.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (3 samples, 0.14%)</title><rect x="525.6" y="275.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="528.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (3 samples, 0.14%)</title><rect x="525.6" y="259.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="528.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (3 samples, 0.14%)</title><rect x="525.6" y="243.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="528.6" y="254.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (3 samples, 0.14%)</title><rect x="525.6" y="227.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="528.6" y="238.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="526.7" y="211.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="529.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/handlers/PutBodyHandler.apply (1 samples, 0.05%)</title><rect x="527.3" y="387.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="530.3" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.discarding (1 samples, 0.05%)</title><rect x="527.3" y="371.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$315/703902426.apply (16 samples, 0.75%)</title><rect x="527.8" y="451.0" width="8.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (15 samples, 0.70%)</title><rect x="528.4" y="435.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="531.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (12 samples, 0.56%)</title><rect x="528.4" y="419.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="531.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (11 samples, 0.52%)</title><rect x="528.9" y="403.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="531.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (11 samples, 0.52%)</title><rect x="528.9" y="387.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="531.9" y="398.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="530.0" y="371.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="533.0" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="530.0" y="355.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="533.0" y="366.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.05%)</title><rect x="530.0" y="339.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="533.0" y="350.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (8 samples, 0.38%)</title><rect x="530.6" y="371.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="533.6" y="382.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (4 samples, 0.19%)</title><rect x="530.6" y="355.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="533.6" y="366.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (2 samples, 0.09%)</title><rect x="531.7" y="339.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="534.7" y="350.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (2 samples, 0.09%)</title><rect x="531.7" y="323.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.7" y="334.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (2 samples, 0.09%)</title><rect x="531.7" y="307.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="534.7" y="318.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (4 samples, 0.19%)</title><rect x="532.8" y="355.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="535.8" y="366.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (4 samples, 0.19%)</title><rect x="532.8" y="339.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.8" y="350.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.09%)</title><rect x="532.8" y="323.0" width="1.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="535.8" y="334.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.09%)</title><rect x="532.8" y="307.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="535.8" y="318.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.05%)</title><rect x="533.9" y="323.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="536.9" y="334.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.05%)</title><rect x="534.4" y="323.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="537.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.14%)</title><rect x="535.0" y="419.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="538.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.14%)</title><rect x="535.0" y="403.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="538.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.14%)</title><rect x="535.0" y="387.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="538.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (9 samples, 0.42%)</title><rect x="536.7" y="467.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="539.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9 samples, 0.42%)</title><rect x="536.7" y="451.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="539.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.09%)</title><rect x="536.7" y="435.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="539.7" y="446.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="536.7" y="419.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="539.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$319/1455266356.apply (1 samples, 0.05%)</title><rect x="537.2" y="419.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="540.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$319/1455266356.apply (7 samples, 0.33%)</title><rect x="537.8" y="435.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="540.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (7 samples, 0.33%)</title><rect x="537.8" y="419.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="540.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (6 samples, 0.28%)</title><rect x="537.8" y="403.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="540.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (6 samples, 0.28%)</title><rect x="537.8" y="387.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="540.8" y="398.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.09%)</title><rect x="537.8" y="371.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="540.8" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.09%)</title><rect x="537.8" y="355.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="540.8" y="366.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.09%)</title><rect x="537.8" y="339.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="540.8" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.05%)</title><rect x="538.3" y="323.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="541.3" y="334.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (4 samples, 0.19%)</title><rect x="538.9" y="371.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="541.9" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (4 samples, 0.19%)</title><rect x="538.9" y="355.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.9" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (2 samples, 0.09%)</title><rect x="538.9" y="339.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (2 samples, 0.09%)</title><rect x="538.9" y="323.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="541.9" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.leftOf (1 samples, 0.05%)</title><rect x="539.4" y="307.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="542.4" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.09%)</title><rect x="540.0" y="339.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="543.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.05%)</title><rect x="541.1" y="403.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="544.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.05%)</title><rect x="541.1" y="387.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="544.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.05%)</title><rect x="541.1" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="544.1" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (1 samples, 0.05%)</title><rect x="541.1" y="355.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="544.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.05%)</title><rect x="541.6" y="467.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="544.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$382/489610158.apply (5 samples, 0.23%)</title><rect x="542.2" y="499.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="545.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (5 samples, 0.23%)</title><rect x="542.2" y="483.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="545.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (5 samples, 0.23%)</title><rect x="542.2" y="467.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="545.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.14%)</title><rect x="542.2" y="451.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="545.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.14%)</title><rect x="542.2" y="435.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="545.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.14%)</title><rect x="542.2" y="419.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="545.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (2 samples, 0.09%)</title><rect x="543.8" y="451.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="546.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (2 samples, 0.09%)</title><rect x="543.8" y="435.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.05%)</title><rect x="545.0" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="548.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.05%)</title><rect x="545.0" y="499.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="548.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.05%)</title><rect x="545.0" y="483.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="548.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="545.5" y="531.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="548.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.05%)</title><rect x="545.5" y="515.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="548.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.09%)</title><rect x="546.1" y="563.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="549.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.09%)</title><rect x="546.1" y="547.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="549.1" y="558.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.09%)</title><rect x="546.1" y="531.0" width="1.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="549.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (3 samples, 0.14%)</title><rect x="547.2" y="579.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="550.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (1 samples, 0.05%)</title><rect x="548.3" y="563.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="551.3" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1 samples, 0.05%)</title><rect x="548.3" y="547.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="551.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.05%)</title><rect x="548.3" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.05%)</title><rect x="548.3" y="515.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="551.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.05%)</title><rect x="548.3" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="551.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (50 samples, 2.34%)</title><rect x="548.8" y="611.0" width="27.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="551.8" y="622.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.09%)</title><rect x="551.6" y="595.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (1 samples, 0.05%)</title><rect x="552.7" y="595.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (1 samples, 0.05%)</title><rect x="552.7" y="579.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="555.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (8 samples, 0.38%)</title><rect x="553.3" y="595.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="556.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.19%)</title><rect x="555.5" y="579.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.5" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.19%)</title><rect x="555.5" y="563.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="558.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (4 samples, 0.19%)</title><rect x="557.7" y="595.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="560.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.14%)</title><rect x="558.2" y="579.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="561.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.14%)</title><rect x="558.2" y="563.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="561.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (14 samples, 0.66%)</title><rect x="559.9" y="595.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="562.9" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (14 samples, 0.66%)</title><rect x="559.9" y="579.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.9" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (14 samples, 0.66%)</title><rect x="559.9" y="563.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.9" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="561.6" y="547.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="564.6" y="558.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="561.6" y="531.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="564.6" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="561.6" y="515.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="564.6" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="561.6" y="499.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="564.6" y="510.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="561.6" y="483.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="564.6" y="494.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="561.6" y="467.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="564.6" y="478.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.05%)</title><rect x="561.6" y="451.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="564.6" y="462.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.19%)</title><rect x="562.1" y="547.0" width="2.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="565.1" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (6 samples, 0.28%)</title><rect x="564.3" y="547.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.3" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.accept (6 samples, 0.28%)</title><rect x="564.3" y="531.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.3" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6 samples, 0.28%)</title><rect x="564.3" y="515.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="567.3" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.14%)</title><rect x="565.4" y="499.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.4" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1026326437.accept (2 samples, 0.09%)</title><rect x="566.0" y="483.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="569.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.09%)</title><rect x="566.0" y="467.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="569.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.09%)</title><rect x="566.0" y="451.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="569.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.09%)</title><rect x="566.0" y="435.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.0" y="446.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="566.0" y="419.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="569.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/865059288.test (1 samples, 0.05%)</title><rect x="566.5" y="419.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="569.5" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.05%)</title><rect x="567.1" y="499.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.1" y="510.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="567.1" y="483.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="570.1" y="494.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="567.1" y="467.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.05%)</title><rect x="567.1" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="570.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (16 samples, 0.75%)</title><rect x="567.6" y="595.0" width="8.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (16 samples, 0.75%)</title><rect x="567.6" y="579.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="570.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.33%)</title><rect x="567.6" y="563.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="570.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.33%)</title><rect x="567.6" y="547.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (7 samples, 0.33%)</title><rect x="567.6" y="531.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.6" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="570.4" y="515.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="573.4" y="526.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="571.0" y="515.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="574.0" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.19%)</title><rect x="571.5" y="563.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.05%)</title><rect x="573.2" y="547.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="576.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.09%)</title><rect x="573.7" y="563.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="576.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.09%)</title><rect x="573.7" y="547.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="576.7" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.05%)</title><rect x="574.3" y="531.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="577.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (3 samples, 0.14%)</title><rect x="574.8" y="563.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="577.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.09%)</title><rect x="574.8" y="547.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="577.8" y="558.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.09%)</title><rect x="574.8" y="531.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="577.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.09%)</title><rect x="574.8" y="515.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="577.8" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.05%)</title><rect x="575.9" y="547.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="578.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (266 samples, 12.47%)</title><rect x="576.5" y="723.0" width="147.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="579.5" y="734.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (263 samples, 12.33%)</title><rect x="578.1" y="707.0" width="145.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="581.1" y="718.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.05%)</title><rect x="579.3" y="691.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="582.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.05%)</title><rect x="579.3" y="675.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="582.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.05%)</title><rect x="579.3" y="659.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="582.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.05%)</title><rect x="579.3" y="643.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="582.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.05%)</title><rect x="579.3" y="627.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="582.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="579.3" y="611.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="582.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.05%)</title><rect x="579.3" y="595.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="582.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (259 samples, 12.14%)</title><rect x="579.8" y="691.0" width="143.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="582.8" y="702.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$270/1387273586.run (257 samples, 12.05%)</title><rect x="580.9" y="675.0" width="142.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="583.9" y="686.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (256 samples, 12.00%)</title><rect x="581.5" y="659.0" width="141.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="584.5" y="670.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (255 samples, 11.95%)</title><rect x="582.0" y="643.0" width="141.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="585.0" y="654.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (254 samples, 11.91%)</title><rect x="582.0" y="627.0" width="140.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="585.0" y="638.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (254 samples, 11.91%)</title><rect x="582.0" y="611.0" width="140.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="585.0" y="622.0">jdk/internal/net/h..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="582.0" y="595.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="585.0" y="606.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.05%)</title><rect x="582.0" y="579.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="585.0" y="590.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.05%)</title><rect x="582.0" y="563.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="585.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$402/1777809380.run (207 samples, 9.70%)</title><rect x="582.6" y="595.0" width="114.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="585.6" y="606.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (207 samples, 9.70%)</title><rect x="582.6" y="579.0" width="114.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="585.6" y="590.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (207 samples, 9.70%)</title><rect x="582.6" y="563.0" width="114.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="585.6" y="574.0">jdk/internal/n..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (10 samples, 0.47%)</title><rect x="582.6" y="547.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.6" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.19%)</title><rect x="582.6" y="531.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.6" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.19%)</title><rect x="582.6" y="515.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="585.6" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.19%)</title><rect x="582.6" y="499.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.6" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.19%)</title><rect x="582.6" y="483.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="585.6" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.19%)</title><rect x="582.6" y="467.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="584.2" y="451.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="587.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="584.2" y="435.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.05%)</title><rect x="584.2" y="419.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="587.2" y="430.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.05%)</title><rect x="584.8" y="531.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="587.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.05%)</title><rect x="584.8" y="515.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="587.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.05%)</title><rect x="584.8" y="499.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="587.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.05%)</title><rect x="584.8" y="483.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="587.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (5 samples, 0.23%)</title><rect x="585.3" y="531.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="588.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.23%)</title><rect x="585.3" y="515.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (5 samples, 0.23%)</title><rect x="585.3" y="499.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="588.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.19%)</title><rect x="585.9" y="483.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="588.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.19%)</title><rect x="585.9" y="467.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="588.9" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.05%)</title><rect x="585.9" y="451.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="588.9" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (3 samples, 0.14%)</title><rect x="586.4" y="451.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="589.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (2 samples, 0.09%)</title><rect x="587.0" y="435.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="590.0" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.map (1 samples, 0.05%)</title><rect x="588.1" y="547.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="591.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$$Lambda$431/1557111109.apply (1 samples, 0.05%)</title><rect x="588.1" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="591.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.lambda$closeOrReturnToCache$2 (1 samples, 0.05%)</title><rect x="588.1" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.1" y="526.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.05%)</title><rect x="588.1" y="499.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="591.1" y="510.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="588.1" y="483.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="591.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (196 samples, 9.19%)</title><rect x="588.7" y="547.0" width="108.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.7" y="558.0">jdk/internal/..</text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.09%)</title><rect x="588.7" y="531.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="591.7" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.09%)</title><rect x="588.7" y="515.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="591.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.05%)</title><rect x="589.2" y="499.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="592.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (194 samples, 9.10%)</title><rect x="589.8" y="531.0" width="107.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="592.8" y="542.0">jdk/internal/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (29 samples, 1.36%)</title><rect x="591.4" y="515.0" width="16.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="594.4" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (28 samples, 1.31%)</title><rect x="591.4" y="499.0" width="15.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="594.4" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (4 samples, 0.19%)</title><rect x="591.4" y="483.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="594.4" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (24 samples, 1.13%)</title><rect x="593.6" y="483.0" width="13.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="596.6" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (10 samples, 0.47%)</title><rect x="601.4" y="467.0" width="5.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="604.4" y="478.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="606.9" y="499.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="609.9" y="510.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.05%)</title><rect x="606.9" y="483.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="609.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.05%)</title><rect x="607.5" y="515.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.5" y="526.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="607.5" y="499.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="610.5" y="510.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.05%)</title><rect x="607.5" y="483.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="610.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (134 samples, 6.28%)</title><rect x="608.0" y="515.0" width="74.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.0" y="526.0">jdk/inte..</text>
</g>
<g>
<title>java/util/AbstractList.listIterator (2 samples, 0.09%)</title><rect x="681.0" y="499.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.0" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (2 samples, 0.09%)</title><rect x="681.0" y="483.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.0" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (2 samples, 0.09%)</title><rect x="681.0" y="467.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.0" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (2 samples, 0.09%)</title><rect x="681.0" y="451.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="684.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (5 samples, 0.23%)</title><rect x="682.2" y="515.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.2" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.14%)</title><rect x="682.2" y="499.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.2" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="682.2" y="483.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="685.2" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.09%)</title><rect x="682.7" y="483.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="685.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.05%)</title><rect x="683.3" y="467.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.3" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.09%)</title><rect x="683.8" y="499.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="686.8" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.09%)</title><rect x="683.8" y="483.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.8" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList$Node.&lt;init&gt; (2 samples, 0.09%)</title><rect x="683.8" y="467.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (22 samples, 1.03%)</title><rect x="684.9" y="515.0" width="12.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="687.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (22 samples, 1.03%)</title><rect x="684.9" y="499.0" width="12.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="687.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (6 samples, 0.28%)</title><rect x="684.9" y="483.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (6 samples, 0.28%)</title><rect x="684.9" y="467.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (6 samples, 0.28%)</title><rect x="684.9" y="451.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="687.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4 samples, 0.19%)</title><rect x="685.5" y="435.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="688.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4 samples, 0.19%)</title><rect x="685.5" y="419.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="688.5" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.19%)</title><rect x="685.5" y="403.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="688.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.05%)</title><rect x="687.1" y="387.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.1" y="398.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.05%)</title><rect x="687.1" y="371.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="690.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (1 samples, 0.05%)</title><rect x="687.7" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="690.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (16 samples, 0.75%)</title><rect x="688.2" y="483.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.2" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.&lt;init&gt; (1 samples, 0.05%)</title><rect x="688.2" y="467.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="691.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (15 samples, 0.70%)</title><rect x="688.8" y="467.0" width="8.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (12 samples, 0.56%)</title><rect x="688.8" y="451.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (12 samples, 0.56%)</title><rect x="688.8" y="435.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="691.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (12 samples, 0.56%)</title><rect x="688.8" y="419.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.8" y="430.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.19%)</title><rect x="689.3" y="403.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="692.3" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.19%)</title><rect x="689.3" y="387.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="692.3" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.09%)</title><rect x="689.3" y="371.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="692.3" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="690.5" y="371.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="693.5" y="382.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="691.0" y="371.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="694.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="691.6" y="403.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="694.6" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="691.6" y="387.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="694.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="691.6" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="694.6" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="691.6" y="355.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="694.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.05%)</title><rect x="691.6" y="339.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.05%)</title><rect x="691.6" y="323.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="694.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6 samples, 0.28%)</title><rect x="692.1" y="403.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.1" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.09%)</title><rect x="694.3" y="387.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="697.3" y="398.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.09%)</title><rect x="694.3" y="371.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="697.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (2 samples, 0.09%)</title><rect x="695.4" y="451.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="698.4" y="462.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="696.0" y="435.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="699.0" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="696.0" y="419.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="699.0" y="430.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="696.0" y="403.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="699.0" y="414.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="696.0" y="387.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="699.0" y="398.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="696.0" y="371.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="699.0" y="382.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.05%)</title><rect x="696.0" y="355.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="699.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1 samples, 0.05%)</title><rect x="696.5" y="451.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (1 samples, 0.05%)</title><rect x="696.5" y="435.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="699.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="696.5" y="419.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$407/1655919259.accept (8 samples, 0.38%)</title><rect x="697.1" y="595.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (8 samples, 0.38%)</title><rect x="697.1" y="579.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="700.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (8 samples, 0.38%)</title><rect x="697.1" y="563.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (8 samples, 0.38%)</title><rect x="697.1" y="547.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="700.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 0.38%)</title><rect x="697.1" y="531.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="700.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7 samples, 0.33%)</title><rect x="697.6" y="515.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7 samples, 0.33%)</title><rect x="697.6" y="499.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.09%)</title><rect x="697.6" y="483.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.6" y="494.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.09%)</title><rect x="697.6" y="467.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="700.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$415/1645310768.accept (1 samples, 0.05%)</title><rect x="698.7" y="483.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="701.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (1 samples, 0.05%)</title><rect x="698.7" y="467.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="701.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (1 samples, 0.05%)</title><rect x="698.7" y="451.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.05%)</title><rect x="698.7" y="435.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.05%)</title><rect x="698.7" y="419.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$417/601776469.accept (4 samples, 0.19%)</title><rect x="699.3" y="483.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="702.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (3 samples, 0.14%)</title><rect x="699.9" y="467.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (3 samples, 0.14%)</title><rect x="699.9" y="451.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.9" y="462.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (1 samples, 0.05%)</title><rect x="701.0" y="435.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="704.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (37 samples, 1.73%)</title><rect x="701.5" y="595.0" width="20.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="704.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (37 samples, 1.73%)</title><rect x="701.5" y="579.0" width="20.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (37 samples, 1.73%)</title><rect x="701.5" y="563.0" width="20.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="704.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (37 samples, 1.73%)</title><rect x="701.5" y="547.0" width="20.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="704.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (37 samples, 1.73%)</title><rect x="701.5" y="531.0" width="20.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="704.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (36 samples, 1.69%)</title><rect x="702.1" y="515.0" width="19.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (36 samples, 1.69%)</title><rect x="702.1" y="499.0" width="19.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="705.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.09%)</title><rect x="702.1" y="483.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="705.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.05%)</title><rect x="702.1" y="467.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="705.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$420/1846817389.accept (1 samples, 0.05%)</title><rect x="702.6" y="467.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="705.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$420/1846817389.accept (34 samples, 1.59%)</title><rect x="703.2" y="483.0" width="18.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="706.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (33 samples, 1.55%)</title><rect x="703.7" y="467.0" width="18.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="706.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (33 samples, 1.55%)</title><rect x="703.7" y="451.0" width="18.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="706.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (33 samples, 1.55%)</title><rect x="703.7" y="435.0" width="18.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="706.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.09%)</title><rect x="703.7" y="419.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="706.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.05%)</title><rect x="703.7" y="403.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="706.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$428/1182523009.apply (1 samples, 0.05%)</title><rect x="704.3" y="403.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (1 samples, 0.05%)</title><rect x="704.3" y="387.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="707.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (31 samples, 1.45%)</title><rect x="704.8" y="419.0" width="17.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.14%)</title><rect x="705.4" y="403.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.14%)</title><rect x="705.4" y="387.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="708.4" y="398.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="705.9" y="371.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="708.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.05%)</title><rect x="706.5" y="371.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (27 samples, 1.27%)</title><rect x="707.0" y="403.0" width="15.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (26 samples, 1.22%)</title><rect x="707.0" y="387.0" width="14.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="710.0" y="398.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="707.6" y="371.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="710.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (24 samples, 1.13%)</title><rect x="708.2" y="371.0" width="13.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (24 samples, 1.13%)</title><rect x="708.2" y="355.0" width="13.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="711.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (24 samples, 1.13%)</title><rect x="708.2" y="339.0" width="13.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="711.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (1 samples, 0.05%)</title><rect x="708.2" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (23 samples, 1.08%)</title><rect x="708.7" y="323.0" width="12.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="711.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (1 samples, 0.05%)</title><rect x="709.3" y="307.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.compareAndSet (1 samples, 0.05%)</title><rect x="709.3" y="291.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 0.94%)</title><rect x="709.8" y="307.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="712.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.94%)</title><rect x="709.8" y="291.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="712.8" y="302.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.05%)</title><rect x="710.4" y="275.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="713.4" y="286.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.05%)</title><rect x="710.9" y="275.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="713.9" y="286.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.47%)</title><rect x="711.5" y="275.0" width="5.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="714.5" y="286.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.05%)</title><rect x="711.5" y="259.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="714.5" y="270.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.05%)</title><rect x="712.0" y="259.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="715.0" y="270.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.05%)</title><rect x="712.6" y="259.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="715.6" y="270.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.19%)</title><rect x="713.1" y="259.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="716.1" y="270.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="715.3" y="259.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="718.3" y="270.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.05%)</title><rect x="715.9" y="259.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="718.9" y="270.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="716.5" y="259.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="719.5" y="270.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.33%)</title><rect x="717.0" y="275.0" width="3.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="720.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="720.9" y="307.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="723.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$426/1467042078.accept (1 samples, 0.05%)</title><rect x="721.4" y="387.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="724.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (1 samples, 0.05%)</title><rect x="721.4" y="371.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="724.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (1 samples, 0.05%)</title><rect x="722.0" y="595.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="725.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (1 samples, 0.05%)</title><rect x="722.5" y="627.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.05%)</title><rect x="722.5" y="611.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="725.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="722.5" y="595.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="725.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.05%)</title><rect x="723.1" y="691.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="726.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.05%)</title><rect x="723.6" y="771.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="726.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.05%)</title><rect x="723.6" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="726.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.05%)</title><rect x="723.6" y="739.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="726.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.05%)</title><rect x="723.6" y="723.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="726.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.05%)</title><rect x="723.6" y="707.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="726.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.05%)</title><rect x="723.6" y="691.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="726.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="723.6" y="675.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="726.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (55 samples, 2.58%)</title><rect x="724.2" y="803.0" width="30.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="727.2" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (55 samples, 2.58%)</title><rect x="724.2" y="787.0" width="30.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="727.2" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (23 samples, 1.08%)</title><rect x="724.7" y="771.0" width="12.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="727.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (18 samples, 0.84%)</title><rect x="724.7" y="755.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="727.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (1 samples, 0.05%)</title><rect x="724.7" y="739.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="727.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (17 samples, 0.80%)</title><rect x="725.3" y="739.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="728.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (17 samples, 0.80%)</title><rect x="725.3" y="723.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="728.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (17 samples, 0.80%)</title><rect x="725.3" y="707.0" width="9.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="728.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (9 samples, 0.42%)</title><rect x="725.3" y="691.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.42%)</title><rect x="725.3" y="675.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="728.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (9 samples, 0.42%)</title><rect x="725.3" y="659.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="728.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.28%)</title><rect x="725.3" y="643.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="728.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.05%)</title><rect x="725.9" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="728.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.19%)</title><rect x="726.4" y="627.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="729.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.19%)</title><rect x="726.4" y="611.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="729.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.09%)</title><rect x="726.4" y="595.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="729.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.09%)</title><rect x="726.4" y="579.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="729.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.09%)</title><rect x="726.4" y="563.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="729.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.09%)</title><rect x="726.4" y="547.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="729.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.09%)</title><rect x="726.4" y="531.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="729.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.09%)</title><rect x="726.4" y="515.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="729.4" y="526.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.05%)</title><rect x="726.4" y="499.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="729.4" y="510.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.05%)</title><rect x="726.4" y="483.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="729.4" y="494.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.05%)</title><rect x="726.4" y="467.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="729.4" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="727.0" y="499.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="730.0" y="510.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.05%)</title><rect x="727.0" y="483.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="730.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.09%)</title><rect x="727.5" y="595.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="730.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.09%)</title><rect x="727.5" y="579.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="730.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.09%)</title><rect x="727.5" y="563.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="730.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="728.1" y="547.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="728.1" y="531.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="731.1" y="542.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="728.1" y="515.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="731.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.14%)</title><rect x="728.6" y="643.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.14%)</title><rect x="728.6" y="627.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.6" y="638.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.14%)</title><rect x="728.6" y="611.0" width="1.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="731.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (8 samples, 0.38%)</title><rect x="730.3" y="691.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="733.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.23%)</title><rect x="734.7" y="755.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="737.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.23%)</title><rect x="734.7" y="739.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="737.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="736.9" y="723.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="739.9" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="736.9" y="707.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="739.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.42%)</title><rect x="737.5" y="771.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.42%)</title><rect x="737.5" y="755.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="740.5" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.14%)</title><rect x="737.5" y="739.0" width="1.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="740.5" y="750.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.05%)</title><rect x="737.5" y="723.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="740.5" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="738.0" y="723.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="741.0" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.05%)</title><rect x="738.6" y="723.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="741.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.28%)</title><rect x="739.1" y="739.0" width="3.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="742.1" y="750.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (6 samples, 0.28%)</title><rect x="739.1" y="723.0" width="3.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="742.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (22 samples, 1.03%)</title><rect x="742.5" y="771.0" width="12.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="745.5" y="782.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="743.0" y="755.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="746.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (20 samples, 0.94%)</title><rect x="743.6" y="755.0" width="11.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="746.6" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (12 samples, 0.56%)</title><rect x="744.1" y="739.0" width="6.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="747.1" y="750.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.05%)</title><rect x="746.3" y="723.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="749.3" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.19%)</title><rect x="746.9" y="723.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="749.9" y="734.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.09%)</title><rect x="748.0" y="707.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="751.0" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.05%)</title><rect x="749.1" y="723.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="752.1" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.09%)</title><rect x="749.6" y="723.0" width="1.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="752.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.33%)</title><rect x="750.8" y="739.0" width="3.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="753.8" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="750.8" y="723.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="753.8" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="751.3" y="723.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="754.3" y="734.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.23%)</title><rect x="751.9" y="723.0" width="2.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="754.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (308 samples, 14.44%)</title><rect x="754.6" y="803.0" width="170.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="757.6" y="814.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.19%)</title><rect x="762.4" y="787.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="765.4" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.19%)</title><rect x="762.4" y="771.0" width="2.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="765.4" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.09%)</title><rect x="762.4" y="755.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="765.4" y="766.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.09%)</title><rect x="763.5" y="755.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="766.5" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.05%)</title><rect x="764.6" y="787.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="767.6" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (4 samples, 0.19%)</title><rect x="765.1" y="787.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="768.1" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (3 samples, 0.14%)</title><rect x="765.7" y="771.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="768.7" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (3 samples, 0.14%)</title><rect x="767.3" y="787.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="770.3" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.09%)</title><rect x="769.0" y="787.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="772.0" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.09%)</title><rect x="769.0" y="771.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="772.0" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.09%)</title><rect x="769.0" y="755.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="772.0" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.09%)</title><rect x="769.0" y="739.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="772.0" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.09%)</title><rect x="769.0" y="723.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="772.0" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (2 samples, 0.09%)</title><rect x="770.1" y="787.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="773.1" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (49 samples, 2.30%)</title><rect x="771.2" y="787.0" width="27.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="774.2" y="798.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$329/591297947.accept (38 samples, 1.78%)</title><rect x="772.3" y="771.0" width="21.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.3" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (38 samples, 1.78%)</title><rect x="772.3" y="755.0" width="21.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.3" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (38 samples, 1.78%)</title><rect x="772.3" y="739.0" width="21.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="775.3" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (38 samples, 1.78%)</title><rect x="772.3" y="723.0" width="21.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="775.3" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (38 samples, 1.78%)</title><rect x="772.3" y="707.0" width="21.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="775.3" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.05%)</title><rect x="772.3" y="691.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="775.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.05%)</title><rect x="772.3" y="675.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="775.3" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.05%)</title><rect x="772.3" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (37 samples, 1.73%)</title><rect x="772.9" y="691.0" width="20.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="775.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (37 samples, 1.73%)</title><rect x="772.9" y="675.0" width="20.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="775.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (37 samples, 1.73%)</title><rect x="772.9" y="659.0" width="20.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="775.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (37 samples, 1.73%)</title><rect x="772.9" y="643.0" width="20.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="775.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (37 samples, 1.73%)</title><rect x="772.9" y="627.0" width="20.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="775.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$242/950557252.run (36 samples, 1.69%)</title><rect x="773.4" y="611.0" width="19.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="776.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (35 samples, 1.64%)</title><rect x="774.0" y="595.0" width="19.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (7 samples, 0.33%)</title><rect x="774.0" y="579.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (7 samples, 0.33%)</title><rect x="774.0" y="563.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="777.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (7 samples, 0.33%)</title><rect x="774.0" y="547.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="777.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.33%)</title><rect x="774.0" y="531.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="777.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.23%)</title><rect x="775.1" y="515.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="778.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.23%)</title><rect x="775.1" y="499.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="778.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.23%)</title><rect x="775.1" y="483.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="778.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.23%)</title><rect x="775.1" y="467.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.09%)</title><rect x="775.6" y="451.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.09%)</title><rect x="775.6" y="435.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="778.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.09%)</title><rect x="775.6" y="419.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="778.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.09%)</title><rect x="775.6" y="403.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.09%)</title><rect x="775.6" y="387.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.05%)</title><rect x="776.8" y="451.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="779.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="776.8" y="435.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="779.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.05%)</title><rect x="776.8" y="419.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="779.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.05%)</title><rect x="776.8" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="779.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.05%)</title><rect x="776.8" y="387.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.05%)</title><rect x="777.3" y="451.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="780.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="777.3" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="780.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.05%)</title><rect x="777.3" y="419.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="780.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="777.3" y="403.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="777.3" y="387.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="780.3" y="398.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="777.3" y="371.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="780.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.14%)</title><rect x="777.9" y="579.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.05%)</title><rect x="779.0" y="563.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="782.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.05%)</title><rect x="779.0" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="782.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.05%)</title><rect x="779.0" y="531.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.0" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.05%)</title><rect x="779.0" y="515.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="782.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (25 samples, 1.17%)</title><rect x="779.5" y="579.0" width="13.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="782.5" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (23 samples, 1.08%)</title><rect x="780.6" y="563.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="783.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (23 samples, 1.08%)</title><rect x="780.6" y="547.0" width="12.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="783.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (23 samples, 1.08%)</title><rect x="780.6" y="531.0" width="12.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.14%)</title><rect x="780.6" y="515.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="783.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.14%)</title><rect x="780.6" y="499.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="783.6" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.14%)</title><rect x="780.6" y="483.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="783.6" y="494.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="781.7" y="467.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="784.7" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (19 samples, 0.89%)</title><rect x="782.3" y="515.0" width="10.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="785.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (19 samples, 0.89%)</title><rect x="782.3" y="499.0" width="10.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="785.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (15 samples, 0.70%)</title><rect x="784.5" y="483.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.5" y="494.0"></text>
</g>
<g>
<title>__errno_location (1 samples, 0.05%)</title><rect x="785.0" y="467.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="788.0" y="478.0"></text>
</g>
<g>
<title>__libc_read (12 samples, 0.56%)</title><rect x="785.6" y="467.0" width="6.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="788.6" y="478.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="792.2" y="467.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="795.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="792.8" y="515.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="795.8" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="792.8" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="795.8" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.05%)</title><rect x="792.8" y="483.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="795.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.05%)</title><rect x="792.8" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="795.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$336/1064311059.accept (9 samples, 0.42%)</title><rect x="793.3" y="771.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="796.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (7 samples, 0.33%)</title><rect x="794.5" y="755.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="797.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$328/1363851879.run (7 samples, 0.33%)</title><rect x="794.5" y="739.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="797.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (7 samples, 0.33%)</title><rect x="794.5" y="723.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="797.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (6 samples, 0.28%)</title><rect x="795.0" y="707.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="798.0" y="718.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.05%)</title><rect x="795.6" y="691.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="798.6" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.remove (1 samples, 0.05%)</title><rect x="796.1" y="691.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="799.1" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (2 samples, 0.09%)</title><rect x="796.7" y="691.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="799.7" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (2 samples, 0.09%)</title><rect x="796.7" y="675.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="799.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (1 samples, 0.05%)</title><rect x="797.8" y="691.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="800.8" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.setEventOps (1 samples, 0.05%)</title><rect x="797.8" y="675.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="800.8" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (2 samples, 0.09%)</title><rect x="798.3" y="787.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="801.3" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="798.9" y="771.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="801.9" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="798.9" y="755.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="801.9" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="798.9" y="739.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="801.9" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="798.9" y="723.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="801.9" y="734.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="798.9" y="707.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="801.9" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="798.9" y="691.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="801.9" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.05%)</title><rect x="798.9" y="675.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="801.9" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.05%)</title><rect x="798.9" y="659.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="801.9" y="670.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.05%)</title><rect x="798.9" y="643.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="801.9" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.05%)</title><rect x="798.9" y="627.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="801.9" y="638.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.05%)</title><rect x="798.9" y="611.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="801.9" y="622.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.05%)</title><rect x="798.9" y="595.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="801.9" y="606.0"></text>
</g>
<g>
<title>G1Policy::predict_yg_surv_rate(int, SurvRateGroup*) const (1 samples, 0.05%)</title><rect x="798.9" y="579.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="801.9" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.05%)</title><rect x="799.4" y="787.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="802.4" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (8 samples, 0.38%)</title><rect x="800.0" y="787.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="803.0" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.38%)</title><rect x="800.0" y="771.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="803.0" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (8 samples, 0.38%)</title><rect x="800.0" y="755.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="803.0" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (8 samples, 0.38%)</title><rect x="800.0" y="739.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="803.0" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (8 samples, 0.38%)</title><rect x="800.0" y="723.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="803.0" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.28%)</title><rect x="800.0" y="707.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="803.0" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (6 samples, 0.28%)</title><rect x="800.0" y="691.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="803.0" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.14%)</title><rect x="801.6" y="675.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="804.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$324/1343189537.test (1 samples, 0.05%)</title><rect x="802.8" y="659.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="805.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.09%)</title><rect x="803.3" y="707.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="806.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (40 samples, 1.88%)</title><rect x="804.4" y="787.0" width="22.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="807.4" y="798.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$250/1665419686.run (24 samples, 1.13%)</title><rect x="804.4" y="771.0" width="13.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (24 samples, 1.13%)</title><rect x="804.4" y="755.0" width="13.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="807.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (24 samples, 1.13%)</title><rect x="804.4" y="739.0" width="13.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="807.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19 samples, 0.89%)</title><rect x="807.2" y="723.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="810.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.19%)</title><rect x="807.2" y="707.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="810.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.19%)</title><rect x="807.2" y="691.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.2" y="702.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.09%)</title><rect x="807.2" y="675.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="810.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (2 samples, 0.09%)</title><rect x="808.3" y="675.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="811.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (15 samples, 0.70%)</title><rect x="809.4" y="707.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="812.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (15 samples, 0.70%)</title><rect x="809.4" y="691.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="812.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$242/950557252.run (13 samples, 0.61%)</title><rect x="809.9" y="675.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="812.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (13 samples, 0.61%)</title><rect x="809.9" y="659.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="812.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (13 samples, 0.61%)</title><rect x="809.9" y="643.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (11 samples, 0.52%)</title><rect x="811.1" y="627.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="814.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (5 samples, 0.23%)</title><rect x="811.1" y="611.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="814.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (5 samples, 0.23%)</title><rect x="811.1" y="595.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="814.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (5 samples, 0.23%)</title><rect x="811.1" y="579.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="814.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (5 samples, 0.23%)</title><rect x="811.1" y="563.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="814.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (5 samples, 0.23%)</title><rect x="811.1" y="547.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="814.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5 samples, 0.23%)</title><rect x="811.1" y="531.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="814.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (5 samples, 0.23%)</title><rect x="811.1" y="515.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="814.1" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.05%)</title><rect x="811.1" y="499.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="814.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.09%)</title><rect x="811.6" y="499.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="814.6" y="510.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.09%)</title><rect x="811.6" y="483.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="814.6" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.05%)</title><rect x="812.2" y="467.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="815.2" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.05%)</title><rect x="812.2" y="451.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="815.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.09%)</title><rect x="812.7" y="499.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="815.7" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.09%)</title><rect x="812.7" y="483.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="815.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (6 samples, 0.28%)</title><rect x="813.8" y="611.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="816.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.28%)</title><rect x="813.8" y="595.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="816.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.23%)</title><rect x="814.4" y="579.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="817.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.23%)</title><rect x="814.4" y="563.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="817.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.23%)</title><rect x="814.4" y="547.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="817.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.23%)</title><rect x="814.4" y="531.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="817.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.05%)</title><rect x="814.4" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="817.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.05%)</title><rect x="814.4" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="817.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.05%)</title><rect x="814.4" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="817.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.05%)</title><rect x="814.4" y="467.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="817.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="814.4" y="451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="817.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.09%)</title><rect x="814.9" y="515.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="817.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.09%)</title><rect x="814.9" y="499.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="817.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.09%)</title><rect x="814.9" y="483.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="817.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.09%)</title><rect x="814.9" y="467.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="817.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.09%)</title><rect x="814.9" y="451.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="817.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.09%)</title><rect x="814.9" y="435.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="817.9" y="446.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.09%)</title><rect x="814.9" y="419.0" width="1.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="817.9" y="430.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.09%)</title><rect x="814.9" y="403.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="817.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.09%)</title><rect x="816.0" y="515.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="819.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.09%)</title><rect x="816.0" y="499.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="819.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.09%)</title><rect x="816.0" y="483.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="819.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="816.6" y="467.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="819.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="816.6" y="451.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="819.6" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="816.6" y="435.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="819.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.05%)</title><rect x="817.1" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="820.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$260/374484389.run (16 samples, 0.75%)</title><rect x="817.7" y="771.0" width="8.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="820.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (16 samples, 0.75%)</title><rect x="817.7" y="755.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="820.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15 samples, 0.70%)</title><rect x="817.7" y="739.0" width="8.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="820.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.61%)</title><rect x="817.7" y="723.0" width="7.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="820.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (7 samples, 0.33%)</title><rect x="820.5" y="707.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="823.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.09%)</title><rect x="820.5" y="691.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.09%)</title><rect x="820.5" y="675.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="823.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.09%)</title><rect x="820.5" y="659.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="823.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.09%)</title><rect x="820.5" y="643.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.09%)</title><rect x="820.5" y="627.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="823.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.09%)</title><rect x="821.6" y="691.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="824.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.09%)</title><rect x="821.6" y="675.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="824.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.09%)</title><rect x="821.6" y="659.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="824.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.09%)</title><rect x="821.6" y="643.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="824.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.09%)</title><rect x="821.6" y="627.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="824.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.09%)</title><rect x="821.6" y="611.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="824.6" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.05%)</title><rect x="821.6" y="595.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="824.6" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.05%)</title><rect x="821.6" y="579.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="824.6" y="590.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.05%)</title><rect x="821.6" y="563.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="824.6" y="574.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.05%)</title><rect x="821.6" y="547.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="824.6" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="822.1" y="595.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="825.1" y="606.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.05%)</title><rect x="822.1" y="579.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="825.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.14%)</title><rect x="822.7" y="691.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="825.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.14%)</title><rect x="822.7" y="675.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="825.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.14%)</title><rect x="822.7" y="659.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="825.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.09%)</title><rect x="823.2" y="643.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="826.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.09%)</title><rect x="823.2" y="627.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="826.2" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.05%)</title><rect x="823.2" y="611.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="826.2" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="823.8" y="611.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="826.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.05%)</title><rect x="824.3" y="707.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="827.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$344/2115454959.run (2 samples, 0.09%)</title><rect x="824.9" y="723.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="827.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (2 samples, 0.09%)</title><rect x="824.9" y="707.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="827.9" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.09%)</title><rect x="824.9" y="691.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="827.9" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.05%)</title><rect x="824.9" y="675.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="827.9" y="686.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.05%)</title><rect x="824.9" y="659.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="827.9" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.05%)</title><rect x="825.4" y="675.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="828.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.05%)</title><rect x="826.0" y="739.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="829.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (53 samples, 2.48%)</title><rect x="826.5" y="787.0" width="29.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="829.5" y="798.0">jd..</text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.19%)</title><rect x="826.5" y="771.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="829.5" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.19%)</title><rect x="826.5" y="755.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="829.5" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.09%)</title><rect x="826.5" y="739.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="829.5" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="827.1" y="723.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="830.1" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.05%)</title><rect x="827.1" y="707.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="830.1" y="718.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.05%)</title><rect x="827.1" y="691.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="830.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.09%)</title><rect x="827.6" y="739.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.6" y="750.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.05%)</title><rect x="828.2" y="723.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="831.2" y="734.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.05%)</title><rect x="828.2" y="707.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="831.2" y="718.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="828.2" y="691.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="831.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (49 samples, 2.30%)</title><rect x="828.8" y="771.0" width="27.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="831.8" y="782.0">j..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (38 samples, 1.78%)</title><rect x="833.2" y="755.0" width="21.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="836.2" y="766.0">S..</text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (37 samples, 1.73%)</title><rect x="833.2" y="739.0" width="20.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="836.2" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.09%)</title><rect x="833.7" y="723.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="836.7" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (28 samples, 1.31%)</title><rect x="834.8" y="723.0" width="15.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="837.8" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (4 samples, 0.19%)</title><rect x="848.1" y="707.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="851.1" y="718.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.28%)</title><rect x="850.3" y="723.0" width="3.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="853.3" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="853.6" y="739.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="856.6" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.05%)</title><rect x="853.6" y="723.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="856.6" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.05%)</title><rect x="854.2" y="755.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="857.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (2 samples, 0.09%)</title><rect x="854.8" y="755.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="857.8" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="855.3" y="739.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="858.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.05%)</title><rect x="855.9" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="858.9" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.05%)</title><rect x="855.9" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="858.9" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.05%)</title><rect x="855.9" y="755.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="858.9" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.05%)</title><rect x="855.9" y="739.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="858.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (16 samples, 0.75%)</title><rect x="856.4" y="787.0" width="8.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="859.4" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.09%)</title><rect x="857.5" y="771.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="860.5" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.09%)</title><rect x="857.5" y="755.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="860.5" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="857.5" y="739.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="860.5" y="750.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="858.1" y="739.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="861.1" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.now (7 samples, 0.33%)</title><rect x="858.6" y="771.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="861.6" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (7 samples, 0.33%)</title><rect x="858.6" y="755.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="861.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (6 samples, 0.28%)</title><rect x="859.2" y="739.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="862.2" y="750.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.14%)</title><rect x="860.3" y="723.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="863.3" y="734.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (3 samples, 0.14%)</title><rect x="860.3" y="707.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="863.3" y="718.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="860.8" y="691.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="863.8" y="702.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="861.4" y="691.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="864.4" y="702.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.05%)</title><rect x="861.9" y="723.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="864.9" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (3 samples, 0.14%)</title><rect x="862.5" y="771.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="865.5" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (3 samples, 0.14%)</title><rect x="862.5" y="755.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="865.5" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (3 samples, 0.14%)</title><rect x="862.5" y="739.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="865.5" y="750.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (2 samples, 0.09%)</title><rect x="864.2" y="771.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.2" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2 samples, 0.09%)</title><rect x="864.2" y="755.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="867.2" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (2 samples, 0.09%)</title><rect x="864.2" y="739.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="867.2" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (2 samples, 0.09%)</title><rect x="864.2" y="723.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="867.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.channel (1 samples, 0.05%)</title><rect x="865.3" y="787.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="868.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (82 samples, 3.84%)</title><rect x="865.8" y="787.0" width="45.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="868.8" y="798.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (82 samples, 3.84%)</title><rect x="865.8" y="771.0" width="45.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="868.8" y="782.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (80 samples, 3.75%)</title><rect x="866.9" y="755.0" width="44.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="869.9" y="766.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (29 samples, 1.36%)</title><rect x="871.4" y="739.0" width="16.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="874.4" y="750.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (2 samples, 0.09%)</title><rect x="873.0" y="723.0" width="1.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="876.0" y="734.0"></text>
</g>
<g>
<title>epoll_wait (24 samples, 1.13%)</title><rect x="874.1" y="723.0" width="13.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="877.1" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (27 samples, 1.27%)</title><rect x="887.4" y="739.0" width="14.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="890.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (24 samples, 1.13%)</title><rect x="887.4" y="723.0" width="13.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="890.4" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="889.1" y="707.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="892.1" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.05%)</title><rect x="889.1" y="691.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="892.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (20 samples, 0.94%)</title><rect x="889.6" y="707.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="892.6" y="718.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (2 samples, 0.09%)</title><rect x="890.2" y="691.0" width="1.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="893.2" y="702.0"></text>
</g>
<g>
<title>__libc_read (16 samples, 0.75%)</title><rect x="891.3" y="691.0" width="8.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="894.3" y="702.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="900.1" y="691.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="903.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.14%)</title><rect x="900.7" y="723.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="903.7" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.14%)</title><rect x="900.7" y="707.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="903.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.14%)</title><rect x="900.7" y="691.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="903.7" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.14%)</title><rect x="900.7" y="675.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="903.7" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.05%)</title><rect x="901.8" y="659.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="904.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (10 samples, 0.47%)</title><rect x="902.3" y="739.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="905.3" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.getFDVal (8 samples, 0.38%)</title><rect x="903.4" y="723.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="906.4" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (2 samples, 0.09%)</title><rect x="907.9" y="739.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="910.9" y="750.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (2 samples, 0.09%)</title><rect x="907.9" y="723.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="910.9" y="734.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.05%)</title><rect x="908.4" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="911.4" y="718.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.05%)</title><rect x="908.4" y="691.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="911.4" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.05%)</title><rect x="908.4" y="675.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="911.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.09%)</title><rect x="909.0" y="739.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="912.0" y="750.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (2 samples, 0.09%)</title><rect x="909.0" y="723.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="912.0" y="734.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.09%)</title><rect x="909.0" y="707.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="912.0" y="718.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.09%)</title><rect x="909.0" y="691.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="912.0" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.09%)</title><rect x="909.0" y="675.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="912.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (2 samples, 0.09%)</title><rect x="910.1" y="739.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="913.1" y="750.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.09%)</title><rect x="910.1" y="723.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="913.1" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.09%)</title><rect x="910.1" y="707.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="913.1" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.09%)</title><rect x="910.1" y="691.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="913.1" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (2 samples, 0.09%)</title><rect x="910.1" y="675.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="913.1" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (13 samples, 0.61%)</title><rect x="911.2" y="787.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="914.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (13 samples, 0.61%)</title><rect x="911.2" y="771.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="914.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (11 samples, 0.52%)</title><rect x="912.3" y="755.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="915.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (4 samples, 0.19%)</title><rect x="913.4" y="739.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="916.4" y="750.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.05%)</title><rect x="913.4" y="723.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="916.4" y="734.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.14%)</title><rect x="913.9" y="723.0" width="1.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="916.9" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (3 samples, 0.14%)</title><rect x="915.6" y="739.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.6" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (1 samples, 0.05%)</title><rect x="915.6" y="723.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="918.6" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (1 samples, 0.05%)</title><rect x="915.6" y="707.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.6" y="718.0"></text>
</g>
<g>
<title>__libc_read (1 samples, 0.05%)</title><rect x="915.6" y="691.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="918.6" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (2 samples, 0.09%)</title><rect x="916.2" y="723.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="919.2" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (2 samples, 0.09%)</title><rect x="917.3" y="739.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="920.3" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (5 samples, 0.23%)</title><rect x="918.4" y="787.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="921.4" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (5 samples, 0.23%)</title><rect x="918.4" y="771.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="921.4" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (5 samples, 0.23%)</title><rect x="918.4" y="755.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="921.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (7 samples, 0.33%)</title><rect x="921.1" y="787.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="924.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (7 samples, 0.33%)</title><rect x="921.1" y="771.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="924.1" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (7 samples, 0.33%)</title><rect x="921.1" y="755.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="924.1" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (7 samples, 0.33%)</title><rect x="921.1" y="739.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="924.1" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (7 samples, 0.33%)</title><rect x="921.1" y="723.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="924.1" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (347 samples, 16.27%)</title><rect x="925.0" y="803.0" width="192.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="928.0" y="814.0">one/nio/server/SelectorTh..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="925.6" y="787.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="928.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.05%)</title><rect x="926.1" y="787.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="929.1" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.23%)</title><rect x="926.7" y="787.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="929.7" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.23%)</title><rect x="926.7" y="771.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="929.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (5 samples, 0.23%)</title><rect x="926.7" y="755.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="929.7" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (30 samples, 1.41%)</title><rect x="929.4" y="787.0" width="16.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="932.4" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (30 samples, 1.41%)</title><rect x="929.4" y="771.0" width="16.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="932.4" y="782.0"></text>
</g>
<g>
<title>JavaThread::check_special_condition_for_native_trans(JavaThread*) (1 samples, 0.05%)</title><rect x="931.7" y="755.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="934.7" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="931.7" y="739.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="934.7" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.05%)</title><rect x="932.2" y="755.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="935.2" y="766.0"></text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.23%)</title><rect x="932.8" y="755.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="935.8" y="766.0"></text>
</g>
<g>
<title>epoll_wait (18 samples, 0.84%)</title><rect x="935.5" y="755.0" width="10.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="938.5" y="766.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.05%)</title><rect x="945.5" y="755.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="948.5" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (308 samples, 14.44%)</title><rect x="946.0" y="787.0" width="170.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="949.0" y="798.0">one/nio/net/Session.pr..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="946.0" y="771.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="949.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (306 samples, 14.35%)</title><rect x="946.6" y="771.0" width="169.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="949.6" y="782.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (260 samples, 12.19%)</title><rect x="946.6" y="755.0" width="143.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="949.6" y="766.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="953.2" y="739.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="956.2" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="953.8" y="739.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="956.8" y="750.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="954.3" y="739.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="957.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (222 samples, 10.41%)</title><rect x="954.9" y="739.0" width="122.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="957.9" y="750.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (222 samples, 10.41%)</title><rect x="954.9" y="723.0" width="122.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="957.9" y="734.0">one/nio/http/Ht..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (212 samples, 9.94%)</title><rect x="954.9" y="707.0" width="117.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="957.9" y="718.0">RequestHandler..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.05%)</title><rect x="955.4" y="691.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="958.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="955.4" y="675.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="958.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="955.4" y="659.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="958.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (10 samples, 0.47%)</title><rect x="956.0" y="691.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="959.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.47%)</title><rect x="956.0" y="675.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="959.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.14%)</title><rect x="956.5" y="659.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="959.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.14%)</title><rect x="956.5" y="643.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="959.5" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.09%)</title><rect x="958.2" y="659.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="961.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.09%)</title><rect x="958.2" y="643.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="961.2" y="654.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.05%)</title><rect x="958.8" y="627.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="961.8" y="638.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.19%)</title><rect x="959.3" y="659.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="962.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.09%)</title><rect x="960.4" y="643.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="963.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.09%)</title><rect x="960.4" y="627.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="963.4" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.09%)</title><rect x="960.4" y="611.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="963.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (200 samples, 9.38%)</title><rect x="961.5" y="691.0" width="110.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="964.5" y="702.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.09%)</title><rect x="964.3" y="675.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.3" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="964.8" y="659.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="967.8" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="964.8" y="643.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="967.8" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="964.8" y="627.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="967.8" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="964.8" y="611.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="967.8" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="964.8" y="595.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="967.8" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="964.8" y="579.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="967.8" y="590.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="964.8" y="563.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="967.8" y="574.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::myThread() (1 samples, 0.05%)</title><rect x="964.8" y="547.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="967.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.replicasPut (167 samples, 7.83%)</title><rect x="965.4" y="675.0" width="92.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="968.4" y="686.0">ru/mail/pol..</text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.05%)</title><rect x="965.9" y="659.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="968.9" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.05%)</title><rect x="965.9" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="968.9" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="965.9" y="627.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="968.9" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="965.9" y="611.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="968.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/clustering/ConsistentHashingTopology.replicasFor (1 samples, 0.05%)</title><rect x="965.9" y="595.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="968.9" y="606.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.05%)</title><rect x="966.5" y="659.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="969.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (4 samples, 0.19%)</title><rect x="967.1" y="659.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="970.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (4 samples, 0.19%)</title><rect x="967.1" y="643.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="970.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.19%)</title><rect x="967.1" y="627.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="970.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.14%)</title><rect x="967.6" y="611.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="970.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.14%)</title><rect x="967.6" y="595.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="970.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.14%)</title><rect x="967.6" y="579.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="970.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.14%)</title><rect x="967.6" y="563.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="970.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.09%)</title><rect x="968.2" y="547.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="971.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.09%)</title><rect x="968.2" y="531.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.2" y="542.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.09%)</title><rect x="968.2" y="515.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="971.2" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.05%)</title><rect x="968.2" y="499.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="971.2" y="510.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.05%)</title><rect x="968.7" y="499.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="971.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.09%)</title><rect x="969.3" y="659.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="972.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.05%)</title><rect x="969.8" y="643.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="972.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.05%)</title><rect x="969.8" y="627.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="972.8" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="970.4" y="659.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="973.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (98 samples, 4.59%)</title><rect x="970.9" y="659.0" width="54.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="973.9" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (98 samples, 4.59%)</title><rect x="970.9" y="643.0" width="54.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="973.9" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (98 samples, 4.59%)</title><rect x="970.9" y="627.0" width="54.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="973.9" y="638.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (98 samples, 4.59%)</title><rect x="970.9" y="611.0" width="54.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="973.9" y="622.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.05%)</title><rect x="971.5" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="974.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.05%)</title><rect x="971.5" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="974.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.05%)</title><rect x="971.5" y="563.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="974.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (68 samples, 3.19%)</title><rect x="972.0" y="595.0" width="37.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="975.0" y="606.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (4 samples, 0.19%)</title><rect x="972.0" y="579.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="975.0" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (4 samples, 0.19%)</title><rect x="972.0" y="563.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="975.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.19%)</title><rect x="972.0" y="547.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="975.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.05%)</title><rect x="973.7" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="976.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.05%)</title><rect x="973.7" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="976.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.05%)</title><rect x="973.7" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="976.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.05%)</title><rect x="973.7" y="483.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="976.7" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (10 samples, 0.47%)</title><rect x="974.2" y="579.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="977.2" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (10 samples, 0.47%)</title><rect x="974.2" y="563.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="977.2" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (10 samples, 0.47%)</title><rect x="974.2" y="547.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="977.2" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (9 samples, 0.42%)</title><rect x="974.8" y="531.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="977.8" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.accept (9 samples, 0.42%)</title><rect x="974.8" y="515.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="977.8" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8 samples, 0.38%)</title><rect x="975.4" y="499.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="978.4" y="510.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (4 samples, 0.19%)</title><rect x="976.5" y="483.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="979.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1026326437.accept (4 samples, 0.19%)</title><rect x="976.5" y="467.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="979.5" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.19%)</title><rect x="976.5" y="451.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="979.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.09%)</title><rect x="976.5" y="435.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="979.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.09%)</title><rect x="976.5" y="419.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="979.5" y="430.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="976.5" y="403.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="979.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$73/1222768327.test (1 samples, 0.05%)</title><rect x="977.0" y="403.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="980.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$73/1222768327.test (2 samples, 0.09%)</title><rect x="977.6" y="435.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="980.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (2 samples, 0.09%)</title><rect x="977.6" y="419.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="980.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$72/1193471756.test (2 samples, 0.09%)</title><rect x="977.6" y="403.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="980.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.09%)</title><rect x="977.6" y="387.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="980.6" y="398.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.09%)</title><rect x="977.6" y="371.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="980.6" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.09%)</title><rect x="977.6" y="355.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="980.6" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.09%)</title><rect x="977.6" y="339.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="980.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.05%)</title><rect x="978.1" y="323.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="981.1" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.05%)</title><rect x="978.1" y="307.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="981.1" y="318.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="978.1" y="291.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="981.1" y="302.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="978.1" y="275.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.05%)</title><rect x="978.1" y="259.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="981.1" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.05%)</title><rect x="978.7" y="483.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="981.7" y="494.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.05%)</title><rect x="978.7" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.05%)</title><rect x="978.7" y="451.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="981.7" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="978.7" y="435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="981.7" y="446.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="978.7" y="419.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="981.7" y="430.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.05%)</title><rect x="978.7" y="403.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="981.7" y="414.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="978.7" y="387.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="981.7" y="398.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="978.7" y="371.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="981.7" y="382.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (1 samples, 0.05%)</title><rect x="978.7" y="355.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="981.7" y="366.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="978.7" y="339.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="981.7" y="350.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.05%)</title><rect x="978.7" y="323.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="981.7" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.05%)</title><rect x="979.2" y="483.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="982.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="979.2" y="467.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="982.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="979.2" y="451.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="982.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.05%)</title><rect x="979.2" y="435.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="982.2" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.05%)</title><rect x="979.8" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="982.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (1 samples, 0.05%)</title><rect x="980.3" y="579.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="983.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.05%)</title><rect x="980.3" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="983.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (50 samples, 2.34%)</title><rect x="980.9" y="579.0" width="27.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="983.9" y="590.0">j..</text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (50 samples, 2.34%)</title><rect x="980.9" y="563.0" width="27.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="983.9" y="574.0">s..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.05%)</title><rect x="980.9" y="547.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="983.9" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="980.9" y="531.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="983.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="980.9" y="515.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="983.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.05%)</title><rect x="981.4" y="547.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="984.4" y="558.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.05%)</title><rect x="981.4" y="531.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.4" y="542.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (48 samples, 2.25%)</title><rect x="982.0" y="547.0" width="26.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="985.0" y="558.0">j..</text>
</g>
<g>
<title>JVM_DoPrivileged (34 samples, 1.59%)</title><rect x="982.0" y="531.0" width="18.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="985.0" y="542.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::push(Metadata* const&amp;) (1 samples, 0.05%)</title><rect x="983.7" y="515.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="986.7" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (6 samples, 0.28%)</title><rect x="984.2" y="515.0" width="3.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="987.2" y="526.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.05%)</title><rect x="985.3" y="499.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="988.3" y="510.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.09%)</title><rect x="985.9" y="499.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="988.9" y="510.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.05%)</title><rect x="987.0" y="499.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="990.0" y="510.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.05%)</title><rect x="987.5" y="515.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="990.5" y="526.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.09%)</title><rect x="988.1" y="515.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="991.1" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.05%)</title><rect x="989.2" y="515.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="992.2" y="526.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (7 samples, 0.33%)</title><rect x="989.7" y="515.0" width="3.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="992.7" y="526.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (7 samples, 0.33%)</title><rect x="989.7" y="499.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="992.7" y="510.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.19%)</title><rect x="989.7" y="483.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="992.7" y="494.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.05%)</title><rect x="991.4" y="467.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="994.4" y="478.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (3 samples, 0.14%)</title><rect x="992.0" y="483.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="995.0" y="494.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (1 samples, 0.05%)</title><rect x="993.6" y="515.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="996.6" y="526.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (12 samples, 0.56%)</title><rect x="994.2" y="515.0" width="6.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="997.2" y="526.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (5 samples, 0.23%)</title><rect x="995.3" y="499.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="998.3" y="510.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (3 samples, 0.14%)</title><rect x="996.4" y="483.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="999.4" y="494.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="998.0" y="499.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1001.0" y="510.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.05%)</title><rect x="998.0" y="483.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1001.0" y="494.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="998.0" y="467.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1001.0" y="478.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.05%)</title><rect x="998.6" y="499.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1001.6" y="510.0"></text>
</g>
<g>
<title>nmethod::metadata_addr_at(int) const (2 samples, 0.09%)</title><rect x="999.1" y="499.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1002.1" y="510.0"></text>
</g>
<g>
<title>nmethod::metadata_at(int) const (1 samples, 0.05%)</title><rect x="1000.2" y="499.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1003.2" y="510.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.05%)</title><rect x="1000.8" y="531.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1003.8" y="542.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.09%)</title><rect x="1001.4" y="531.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1004.4" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (11 samples, 0.52%)</title><rect x="1002.5" y="531.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1005.5" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (10 samples, 0.47%)</title><rect x="1003.0" y="515.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1006.0" y="526.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.33%)</title><rect x="1003.6" y="499.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1006.6" y="510.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.33%)</title><rect x="1003.6" y="483.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1006.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.33%)</title><rect x="1003.6" y="467.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1006.6" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="1006.9" y="451.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1009.9" y="462.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (2 samples, 0.09%)</title><rect x="1007.4" y="499.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1010.4" y="510.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (1 samples, 0.05%)</title><rect x="1007.4" y="483.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1010.4" y="494.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.05%)</title><rect x="1007.4" y="467.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1010.4" y="478.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.05%)</title><rect x="1007.4" y="451.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1010.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.05%)</title><rect x="1007.4" y="435.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1010.4" y="446.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.05%)</title><rect x="1008.0" y="483.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1011.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.05%)</title><rect x="1008.0" y="467.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1011.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="1008.0" y="451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1011.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.05%)</title><rect x="1008.0" y="435.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1011.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.05%)</title><rect x="1008.5" y="579.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1011.5" y="590.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.05%)</title><rect x="1008.5" y="563.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1011.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (1 samples, 0.05%)</title><rect x="1009.1" y="579.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1012.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (18 samples, 0.84%)</title><rect x="1009.7" y="595.0" width="9.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1012.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (4 samples, 0.19%)</title><rect x="1009.7" y="579.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1012.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.19%)</title><rect x="1009.7" y="563.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1012.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.19%)</title><rect x="1009.7" y="547.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1012.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (4 samples, 0.19%)</title><rect x="1009.7" y="531.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1012.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (4 samples, 0.19%)</title><rect x="1009.7" y="515.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1012.7" y="526.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (4 samples, 0.19%)</title><rect x="1009.7" y="499.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1012.7" y="510.0"></text>
</g>
<g>
<title>java/util/logging/Logger.isLoggable (1 samples, 0.05%)</title><rect x="1010.8" y="483.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1013.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1 samples, 0.05%)</title><rect x="1011.3" y="483.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1014.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (14 samples, 0.66%)</title><rect x="1011.9" y="579.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1014.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (11 samples, 0.52%)</title><rect x="1013.0" y="563.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1016.0" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (6 samples, 0.28%)</title><rect x="1014.1" y="547.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1017.1" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (4 samples, 0.19%)</title><rect x="1014.1" y="531.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1017.1" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (2 samples, 0.09%)</title><rect x="1015.2" y="515.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1018.2" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (2 samples, 0.09%)</title><rect x="1015.2" y="499.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1018.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (2 samples, 0.09%)</title><rect x="1015.2" y="483.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1018.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.09%)</title><rect x="1016.3" y="531.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1019.3" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (1 samples, 0.05%)</title><rect x="1016.8" y="515.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1019.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (1 samples, 0.05%)</title><rect x="1017.4" y="547.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1020.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (1 samples, 0.05%)</title><rect x="1018.0" y="547.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1021.0" y="558.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="1018.5" y="547.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1021.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1019.1" y="563.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1022.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (10 samples, 0.47%)</title><rect x="1019.6" y="595.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1022.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (6 samples, 0.28%)</title><rect x="1019.6" y="579.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1022.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.28%)</title><rect x="1019.6" y="563.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1022.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.19%)</title><rect x="1020.7" y="547.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1023.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.05%)</title><rect x="1021.3" y="531.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1024.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.05%)</title><rect x="1021.3" y="515.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1024.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.05%)</title><rect x="1021.3" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1024.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.05%)</title><rect x="1021.3" y="483.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1024.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="1021.3" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1024.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.09%)</title><rect x="1021.8" y="531.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1024.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.09%)</title><rect x="1021.8" y="515.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1024.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.09%)</title><rect x="1021.8" y="499.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1024.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.09%)</title><rect x="1021.8" y="483.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1024.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.09%)</title><rect x="1021.8" y="467.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1024.8" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="1021.8" y="451.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1024.8" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.05%)</title><rect x="1021.8" y="435.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1024.8" y="446.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="1022.4" y="451.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1025.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (4 samples, 0.19%)</title><rect x="1022.9" y="579.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1025.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.19%)</title><rect x="1022.9" y="563.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1025.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.19%)</title><rect x="1022.9" y="547.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1025.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.05%)</title><rect x="1022.9" y="531.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1025.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.14%)</title><rect x="1023.5" y="531.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1026.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.14%)</title><rect x="1023.5" y="515.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1026.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (3 samples, 0.14%)</title><rect x="1023.5" y="499.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1026.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.05%)</title><rect x="1024.6" y="483.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1027.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (10 samples, 0.47%)</title><rect x="1025.1" y="659.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1028.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (10 samples, 0.47%)</title><rect x="1025.1" y="643.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1028.1" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (10 samples, 0.47%)</title><rect x="1025.1" y="627.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1028.1" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8 samples, 0.38%)</title><rect x="1026.2" y="611.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1029.2" y="622.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="1026.2" y="595.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1029.2" y="606.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1 samples, 0.05%)</title><rect x="1026.8" y="595.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1029.8" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="1026.8" y="579.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1029.8" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="1026.8" y="563.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1029.8" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="1026.8" y="547.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1029.8" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="1026.8" y="531.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1029.8" y="542.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="1026.8" y="515.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1029.8" y="526.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.05%)</title><rect x="1026.8" y="499.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1029.8" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (6 samples, 0.28%)</title><rect x="1027.4" y="595.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1030.4" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.accept (4 samples, 0.19%)</title><rect x="1027.9" y="579.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1030.9" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4 samples, 0.19%)</title><rect x="1027.9" y="563.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1030.9" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.05%)</title><rect x="1027.9" y="547.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1030.9" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.09%)</title><rect x="1028.5" y="547.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1031.5" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1026326437.accept (2 samples, 0.09%)</title><rect x="1028.5" y="531.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1031.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.09%)</title><rect x="1028.5" y="515.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1031.5" y="526.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.09%)</title><rect x="1028.5" y="499.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1031.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.09%)</title><rect x="1028.5" y="483.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1031.5" y="494.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="1028.5" y="467.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1031.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$72/1193471756.test (1 samples, 0.05%)</title><rect x="1029.0" y="467.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1032.0" y="478.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="1029.6" y="547.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1032.6" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.05%)</title><rect x="1030.1" y="579.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1033.1" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.accept (1 samples, 0.05%)</title><rect x="1030.1" y="563.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1033.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/clustering/ConsistentHashingTopology.replicasFor (17 samples, 0.80%)</title><rect x="1030.7" y="659.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1033.7" y="670.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (4 samples, 0.19%)</title><rect x="1030.7" y="643.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1033.7" y="654.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (1 samples, 0.05%)</title><rect x="1030.7" y="627.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1033.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (1 samples, 0.05%)</title><rect x="1030.7" y="611.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1033.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1030.7" y="595.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1033.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1030.7" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1033.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1030.7" y="563.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1033.7" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.05%)</title><rect x="1030.7" y="547.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1033.7" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1030.7" y="531.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1033.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1030.7" y="515.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1033.7" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1030.7" y="499.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1033.7" y="510.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1030.7" y="483.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1033.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (1 samples, 0.05%)</title><rect x="1031.2" y="627.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1034.2" y="638.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="1031.2" y="611.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1034.2" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (2 samples, 0.09%)</title><rect x="1031.8" y="627.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1034.8" y="638.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytesInternal (1 samples, 0.05%)</title><rect x="1032.3" y="611.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1035.3" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.05%)</title><rect x="1032.3" y="595.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1035.3" y="606.0"></text>
</g>
<g>
<title>com/google/common/hash/HashCode$BytesHashCode.asLong (1 samples, 0.05%)</title><rect x="1032.9" y="643.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1035.9" y="654.0"></text>
</g>
<g>
<title>com/google/common/hash/HashCode$BytesHashCode.padToLong (1 samples, 0.05%)</title><rect x="1032.9" y="627.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1035.9" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (1 samples, 0.05%)</title><rect x="1033.4" y="643.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1036.4" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="1033.4" y="627.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1036.4" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="1033.4" y="611.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1036.4" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (1 samples, 0.05%)</title><rect x="1033.4" y="595.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1036.4" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.05%)</title><rect x="1033.4" y="579.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1036.4" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.09%)</title><rect x="1034.0" y="643.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1037.0" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (2 samples, 0.09%)</title><rect x="1034.0" y="627.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1037.0" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (2 samples, 0.09%)</title><rect x="1034.0" y="611.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1037.0" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (2 samples, 0.09%)</title><rect x="1034.0" y="595.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1037.0" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (2 samples, 0.09%)</title><rect x="1034.0" y="579.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1037.0" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.09%)</title><rect x="1034.0" y="563.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1037.0" y="574.0"></text>
</g>
<g>
<title>java/util/HashSet.add (8 samples, 0.38%)</title><rect x="1035.1" y="643.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1038.1" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (8 samples, 0.38%)</title><rect x="1035.1" y="627.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1038.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (8 samples, 0.38%)</title><rect x="1035.1" y="611.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1038.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="1036.8" y="595.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1039.8" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.14%)</title><rect x="1037.3" y="595.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1040.3" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (1 samples, 0.05%)</title><rect x="1039.0" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1042.0" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (1 samples, 0.05%)</title><rect x="1039.5" y="643.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1042.5" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (1 samples, 0.05%)</title><rect x="1039.5" y="627.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1042.5" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1039.5" y="611.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1042.5" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1039.5" y="595.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1042.5" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.05%)</title><rect x="1039.5" y="579.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1042.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ByteUtils.getWrap (1 samples, 0.05%)</title><rect x="1040.1" y="659.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1043.1" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="1040.1" y="643.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1043.1" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="1040.1" y="627.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1043.1" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="1040.1" y="611.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1043.1" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="1040.1" y="595.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1043.1" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="1040.1" y="579.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1043.1" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="1040.1" y="563.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1043.1" y="574.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="1040.1" y="547.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1043.1" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="1040.1" y="531.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1043.1" y="542.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.05%)</title><rect x="1040.1" y="515.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1043.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.requestForReplica (31 samples, 1.45%)</title><rect x="1040.6" y="659.0" width="17.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1043.6" y="670.0"></text>
</g>
<g>
<title>java/net/URI.create (23 samples, 1.08%)</title><rect x="1040.6" y="643.0" width="12.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1043.6" y="654.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (23 samples, 1.08%)</title><rect x="1040.6" y="627.0" width="12.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1043.6" y="638.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (23 samples, 1.08%)</title><rect x="1040.6" y="611.0" width="12.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1043.6" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (1 samples, 0.05%)</title><rect x="1040.6" y="595.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1043.6" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.05%)</title><rect x="1041.2" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1044.2" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.05%)</title><rect x="1041.2" y="579.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.2" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (21 samples, 0.98%)</title><rect x="1041.7" y="595.0" width="11.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1044.7" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.05%)</title><rect x="1042.3" y="579.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1045.3" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.05%)</title><rect x="1042.3" y="563.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1045.3" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (14 samples, 0.66%)</title><rect x="1042.8" y="579.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1045.8" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (4 samples, 0.19%)</title><rect x="1044.5" y="563.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1047.5" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.05%)</title><rect x="1044.5" y="547.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1047.5" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.05%)</title><rect x="1044.5" y="531.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1047.5" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (1 samples, 0.05%)</title><rect x="1044.5" y="515.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1047.5" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (2 samples, 0.09%)</title><rect x="1045.1" y="547.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1048.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="1045.1" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1048.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="1045.1" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1048.1" y="526.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="1045.1" y="499.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1048.1" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.05%)</title><rect x="1045.6" y="531.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1048.6" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (1 samples, 0.05%)</title><rect x="1046.2" y="547.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1049.2" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (1 samples, 0.05%)</title><rect x="1046.2" y="531.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1049.2" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.05%)</title><rect x="1046.2" y="515.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1049.2" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.33%)</title><rect x="1046.7" y="563.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1049.7" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="1050.0" y="547.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1053.0" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.23%)</title><rect x="1050.6" y="579.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1053.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="1050.6" y="563.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1053.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.19%)</title><rect x="1051.1" y="563.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1054.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.19%)</title><rect x="1051.1" y="547.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1054.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.19%)</title><rect x="1051.1" y="531.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1054.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (7 samples, 0.33%)</title><rect x="1053.4" y="643.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1056.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (7 samples, 0.33%)</title><rect x="1053.4" y="627.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1056.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (4 samples, 0.19%)</title><rect x="1053.4" y="611.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1056.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$72/1193471756.test (4 samples, 0.19%)</title><rect x="1053.4" y="595.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1056.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (4 samples, 0.19%)</title><rect x="1053.4" y="579.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1056.4" y="590.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (4 samples, 0.19%)</title><rect x="1053.4" y="563.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1056.4" y="574.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (4 samples, 0.19%)</title><rect x="1053.4" y="547.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1056.4" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (4 samples, 0.19%)</title><rect x="1053.4" y="531.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1056.4" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.19%)</title><rect x="1053.4" y="515.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1056.4" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.19%)</title><rect x="1053.4" y="499.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1056.4" y="510.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.09%)</title><rect x="1054.5" y="483.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1057.5" y="494.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.09%)</title><rect x="1054.5" y="467.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1057.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.09%)</title><rect x="1054.5" y="451.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1057.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (3 samples, 0.14%)</title><rect x="1055.6" y="611.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1058.6" y="622.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (3 samples, 0.14%)</title><rect x="1055.6" y="595.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1058.6" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.05%)</title><rect x="1055.6" y="579.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1058.6" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.05%)</title><rect x="1056.1" y="579.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1059.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$124/371540559.apply (1 samples, 0.05%)</title><rect x="1056.7" y="579.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1059.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (1 samples, 0.05%)</title><rect x="1056.7" y="563.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1059.7" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1056.7" y="547.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1059.7" y="558.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="1056.7" y="531.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1059.7" y="542.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.05%)</title><rect x="1056.7" y="515.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1059.7" y="526.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1056.7" y="499.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1059.7" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="1056.7" y="483.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1059.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (1 samples, 0.05%)</title><rect x="1057.2" y="643.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1060.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (1 samples, 0.05%)</title><rect x="1057.2" y="627.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1060.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (1 samples, 0.05%)</title><rect x="1057.2" y="611.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1060.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.05%)</title><rect x="1057.2" y="595.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1060.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.respond (3 samples, 0.14%)</title><rect x="1057.8" y="675.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1060.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.14%)</title><rect x="1057.8" y="659.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1060.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.14%)</title><rect x="1057.8" y="643.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1060.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.14%)</title><rect x="1057.8" y="627.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1060.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$206/2123650476.accept (1 samples, 0.05%)</title><rect x="1058.9" y="611.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1061.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$respond$0 (1 samples, 0.05%)</title><rect x="1058.9" y="595.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1061.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (1 samples, 0.05%)</title><rect x="1058.9" y="579.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1061.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.05%)</title><rect x="1058.9" y="563.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1061.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.05%)</title><rect x="1058.9" y="547.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1061.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.05%)</title><rect x="1058.9" y="531.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1061.9" y="542.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1058.9" y="515.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1061.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/SimpleRequests.put (23 samples, 1.08%)</title><rect x="1059.4" y="675.0" width="12.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1062.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (23 samples, 1.08%)</title><rect x="1059.4" y="659.0" width="12.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1062.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (23 samples, 1.08%)</title><rect x="1059.4" y="643.0" width="12.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1062.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (23 samples, 1.08%)</title><rect x="1059.4" y="627.0" width="12.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1062.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (21 samples, 0.98%)</title><rect x="1060.0" y="611.0" width="11.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1063.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.14%)</title><rect x="1060.0" y="595.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1063.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.14%)</title><rect x="1060.0" y="579.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1063.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.14%)</title><rect x="1060.0" y="563.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1063.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.14%)</title><rect x="1060.0" y="547.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1063.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.14%)</title><rect x="1060.0" y="531.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1063.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.09%)</title><rect x="1061.7" y="595.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1064.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.09%)</title><rect x="1061.7" y="579.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.09%)</title><rect x="1061.7" y="563.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1064.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.09%)</title><rect x="1061.7" y="547.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.09%)</title><rect x="1061.7" y="531.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1064.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="1061.7" y="515.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.7" y="526.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.05%)</title><rect x="1061.7" y="499.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1064.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="1062.2" y="515.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1065.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (16 samples, 0.75%)</title><rect x="1062.8" y="595.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1065.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (16 samples, 0.75%)</title><rect x="1062.8" y="579.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1065.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (16 samples, 0.75%)</title><rect x="1062.8" y="563.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1065.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.05%)</title><rect x="1063.3" y="547.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1066.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.66%)</title><rect x="1063.9" y="547.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1066.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.66%)</title><rect x="1063.9" y="531.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1066.9" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.05%)</title><rect x="1063.9" y="515.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1066.9" y="526.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.42%)</title><rect x="1064.4" y="515.0" width="5.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1067.4" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.05%)</title><rect x="1065.5" y="499.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1068.5" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.05%)</title><rect x="1066.1" y="499.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1069.1" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.05%)</title><rect x="1066.6" y="499.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1069.6" y="510.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="1067.2" y="499.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1070.2" y="510.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.05%)</title><rect x="1067.7" y="499.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1070.7" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.09%)</title><rect x="1068.3" y="499.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1071.3" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.19%)</title><rect x="1069.4" y="515.0" width="2.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1072.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.replicasPut (1 samples, 0.05%)</title><rect x="1071.6" y="611.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1074.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (9 samples, 0.42%)</title><rect x="1072.2" y="707.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1075.2" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.42%)</title><rect x="1072.2" y="691.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1075.2" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.19%)</title><rect x="1072.2" y="675.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1075.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.23%)</title><rect x="1074.4" y="675.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1077.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.23%)</title><rect x="1074.4" y="659.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1077.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (5 samples, 0.23%)</title><rect x="1074.4" y="643.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1077.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.05%)</title><rect x="1077.1" y="707.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1080.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="1077.1" y="691.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1080.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="1077.1" y="675.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1080.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10 samples, 0.47%)</title><rect x="1077.7" y="739.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1080.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.28%)</title><rect x="1078.8" y="723.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1081.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.28%)</title><rect x="1078.8" y="707.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1081.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.28%)</title><rect x="1078.8" y="691.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1081.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.28%)</title><rect x="1078.8" y="675.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1081.8" y="686.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="1081.6" y="659.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1084.6" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="1082.1" y="723.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1085.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="1082.1" y="707.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1085.1" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="1082.1" y="691.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1085.1" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1082.1" y="675.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1085.1" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="1082.1" y="659.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1085.1" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.05%)</title><rect x="1082.7" y="723.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1085.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.47%)</title><rect x="1083.2" y="739.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1086.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="1088.2" y="723.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1091.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="1088.2" y="707.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1091.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.14%)</title><rect x="1088.8" y="739.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1091.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.14%)</title><rect x="1088.8" y="723.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1091.8" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="1089.3" y="707.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1092.3" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1089.3" y="691.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1092.3" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1089.3" y="675.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1092.3" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="1089.3" y="659.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1092.3" y="670.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (1 samples, 0.05%)</title><rect x="1089.3" y="643.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1092.3" y="654.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="1089.3" y="627.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1092.3" y="638.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.05%)</title><rect x="1089.3" y="611.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1092.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1089.9" y="707.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1092.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1089.9" y="691.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1092.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.05%)</title><rect x="1089.9" y="675.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1092.9" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="1089.9" y="659.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1092.9" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1089.9" y="643.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1092.9" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1089.9" y="627.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1092.9" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="1089.9" y="611.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1092.9" y="622.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="1089.9" y="595.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1092.9" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="1089.9" y="579.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1092.9" y="590.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.05%)</title><rect x="1089.9" y="563.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1092.9" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.09%)</title><rect x="1090.4" y="755.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (44 samples, 2.06%)</title><rect x="1091.5" y="755.0" width="24.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1094.5" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (43 samples, 2.02%)</title><rect x="1092.1" y="739.0" width="23.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1095.1" y="750.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (21 samples, 0.98%)</title><rect x="1094.3" y="723.0" width="11.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1097.3" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.09%)</title><rect x="1094.3" y="707.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1097.3" y="718.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.05%)</title><rect x="1095.4" y="707.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1098.4" y="718.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.05%)</title><rect x="1096.0" y="707.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1099.0" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="1096.5" y="707.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1099.5" y="718.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (5 samples, 0.23%)</title><rect x="1097.1" y="707.0" width="2.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1100.1" y="718.0"></text>
</g>
<g>
<title>arrayOopDesc::base_offset_in_bytes(BasicType) (2 samples, 0.09%)</title><rect x="1099.8" y="707.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1102.8" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.38%)</title><rect x="1100.9" y="707.0" width="4.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1103.9" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.23%)</title><rect x="1102.0" y="691.0" width="2.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1105.0" y="702.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (3 samples, 0.14%)</title><rect x="1103.1" y="675.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1106.1" y="686.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.05%)</title><rect x="1104.8" y="691.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1107.8" y="702.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.05%)</title><rect x="1105.4" y="707.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1108.4" y="718.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="1105.9" y="723.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1108.9" y="734.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.14%)</title><rect x="1106.5" y="723.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1109.5" y="734.0"></text>
</g>
<g>
<title>__recv (13 samples, 0.61%)</title><rect x="1108.1" y="723.0" width="7.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1111.1" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.05%)</title><rect x="1115.3" y="723.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1118.3" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="1115.9" y="771.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1118.9" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="1116.4" y="787.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1119.4" y="798.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="1116.4" y="771.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1119.4" y="782.0"></text>
</g>
<g>
<title>start_thread (132 samples, 6.19%)</title><rect x="1117.0" y="803.0" width="73.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1120.0" y="814.0">start_th..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (132 samples, 6.19%)</title><rect x="1117.0" y="787.0" width="73.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1120.0" y="798.0">thread_n..</text>
</g>
<g>
<title>Thread::call_run() (132 samples, 6.19%)</title><rect x="1117.0" y="771.0" width="73.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1120.0" y="782.0">Thread::..</text>
</g>
<g>
<title>GangWorker::loop() (132 samples, 6.19%)</title><rect x="1117.0" y="755.0" width="73.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1120.0" y="766.0">GangWork..</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (132 samples, 6.19%)</title><rect x="1117.0" y="739.0" width="73.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1120.0" y="750.0">G1ParTas..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (46 samples, 2.16%)</title><rect x="1117.0" y="723.0" width="25.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1120.0" y="734.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (3 samples, 0.14%)</title><rect x="1117.0" y="707.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1120.0" y="718.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.05%)</title><rect x="1118.1" y="691.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1121.1" y="702.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.05%)</title><rect x="1118.1" y="675.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1121.1" y="686.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (1 samples, 0.05%)</title><rect x="1118.1" y="659.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1121.1" y="670.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal_best_of_2(unsigned int, int*, StarTask&amp;) (1 samples, 0.05%)</title><rect x="1118.6" y="707.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1121.6" y="718.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (4 samples, 0.19%)</title><rect x="1119.2" y="707.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1122.2" y="718.0"></text>
</g>
<g>
<title>SpinPause (38 samples, 1.78%)</title><rect x="1121.4" y="707.0" width="21.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1124.4" y="718.0">S..</text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (85 samples, 3.98%)</title><rect x="1142.4" y="723.0" width="47.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1145.4" y="734.0">G1Re..</text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (85 samples, 3.98%)</title><rect x="1142.4" y="707.0" width="47.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1145.4" y="718.0">G1Re..</text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (85 samples, 3.98%)</title><rect x="1142.4" y="691.0" width="47.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1145.4" y="702.0">G1Co..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (85 samples, 3.98%)</title><rect x="1142.4" y="675.0" width="47.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1145.4" y="686.0">Dirt..</text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (85 samples, 3.98%)</title><rect x="1142.4" y="659.0" width="47.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1145.4" y="670.0">G1Re..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.05%)</title><rect x="1142.4" y="643.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1145.4" y="654.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (37 samples, 1.73%)</title><rect x="1143.0" y="643.0" width="20.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1146.0" y="654.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (7 samples, 0.33%)</title><rect x="1150.2" y="627.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1153.2" y="638.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (5 samples, 0.23%)</title><rect x="1151.3" y="611.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1154.3" y="622.0"></text>
</g>
<g>
<title>G1CollectedHeap::heap() (2 samples, 0.09%)</title><rect x="1151.3" y="595.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1154.3" y="606.0"></text>
</g>
<g>
<title>G1ContiguousSpace::used_region() const (1 samples, 0.05%)</title><rect x="1152.4" y="595.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.4" y="606.0"></text>
</g>
<g>
<title>HeapRegion::block_is_obj(HeapWord const*) const (2 samples, 0.09%)</title><rect x="1152.9" y="595.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.9" y="606.0"></text>
</g>
<g>
<title>G1ContiguousSpace::block_start(void const*) (5 samples, 0.23%)</title><rect x="1154.0" y="627.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1157.0" y="638.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (11 samples, 0.52%)</title><rect x="1156.8" y="627.0" width="6.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1159.8" y="638.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanObjsDuringUpdateRSClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanObjsDuringUpdateRSClosure, OopClosure, G1ScanObjsDuringUpdateRSClosure&gt;(void (G1ScanObjsDuringUpdateRSClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanObjsDuringUpdateRSClosure*, unsigned int*) (7 samples, 0.33%)</title><rect x="1159.0" y="611.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1162.0" y="622.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (1 samples, 0.05%)</title><rect x="1162.9" y="627.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1165.9" y="638.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanObjsDuringUpdateRSClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanObjsDuringUpdateRSClosure, OopClosure, G1ScanObjsDuringUpdateRSClosure&gt;(void (G1ScanObjsDuringUpdateRSClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanObjsDuringUpdateRSClosure*, unsigned int*) (1 samples, 0.05%)</title><rect x="1162.9" y="611.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1165.9" y="622.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (47 samples, 2.20%)</title><rect x="1163.4" y="643.0" width="26.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1166.4" y="654.0">G..</text>
</g>
<g>
<title>G1CardTable::mark_card_deferred(unsigned long) (1 samples, 0.05%)</title><rect x="1172.9" y="627.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.9" y="638.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (27 samples, 1.27%)</title><rect x="1173.4" y="627.0" width="14.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.4" y="638.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (13 samples, 0.61%)</title><rect x="1181.1" y="611.0" width="7.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.1" y="622.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (11 samples, 0.52%)</title><rect x="1182.3" y="595.0" width="6.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.3" y="606.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.05%)</title><rect x="1188.3" y="627.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1191.3" y="638.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;TypeArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.05%)</title><rect x="1188.9" y="627.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.9" y="638.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.05%)</title><rect x="1189.4" y="723.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.4" y="734.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.05%)</title><rect x="1189.4" y="707.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.4" y="718.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.05%)</title><rect x="1189.4" y="691.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.4" y="702.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (1 samples, 0.05%)</title><rect x="1189.4" y="675.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.4" y="686.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_card(MemRegion, unsigned int) (1 samples, 0.05%)</title><rect x="1189.4" y="659.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.4" y="670.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (1 samples, 0.05%)</title><rect x="1189.4" y="643.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.4" y="654.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanObjsDuringScanRSClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanObjsDuringScanRSClosure, OopClosure, G1ScanObjsDuringScanRSClosure&gt;(void (G1ScanObjsDuringScanRSClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanObjsDuringScanRSClosure*, unsigned int*) (1 samples, 0.05%)</title><rect x="1189.4" y="627.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.4" y="638.0"></text>
</g>
</g>
</svg>
