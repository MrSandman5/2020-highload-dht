<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="693"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="693"> </text>
<g id="frames">
<g>
<title>all (624 samples, 100.00%)</title><rect x="10.0" y="659.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="670.0">all</text>
</g>
<g>
<title>[C1 CompilerThre tid=2832] (3 samples, 0.48%)</title><rect x="10.0" y="643.0" width="5.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.48%)</title><rect x="10.0" y="627.0" width="5.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.48%)</title><rect x="10.0" y="611.0" width="5.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.48%)</title><rect x="10.0" y="595.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (3 samples, 0.48%)</title><rect x="10.0" y="579.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (3 samples, 0.48%)</title><rect x="10.0" y="563.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (3 samples, 0.48%)</title><rect x="10.0" y="547.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (3 samples, 0.48%)</title><rect x="10.0" y="531.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (3 samples, 0.48%)</title><rect x="10.0" y="515.0" width="5.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>Compilation::compile_method() (3 samples, 0.48%)</title><rect x="10.0" y="499.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (3 samples, 0.48%)</title><rect x="10.0" y="483.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (3 samples, 0.48%)</title><rect x="10.0" y="467.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (3 samples, 0.48%)</title><rect x="10.0" y="451.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 0.16%)</title><rect x="10.0" y="435.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (1 samples, 0.16%)</title><rect x="10.0" y="419.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.16%)</title><rect x="10.0" y="403.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value(int, Instruction*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.16%)</title><rect x="10.0" y="387.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>LinearScan::color_lir_opr(LIR_OprDesc*, int, LIR_OpVisitState::OprMode) (1 samples, 0.16%)</title><rect x="10.0" y="371.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>LinearScan::split_child_at_op_id(Interval*, int, LIR_OpVisitState::OprMode) (1 samples, 0.16%)</title><rect x="10.0" y="355.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (2 samples, 0.32%)</title><rect x="11.9" y="435.0" width="3.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="14.9" y="446.0"></text>
</g>
<g>
<title>[C2 CompilerThre tid=2831] (60 samples, 9.62%)</title><rect x="15.7" y="643.0" width="113.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="18.7" y="654.0">[C2 CompilerTh..</text>
</g>
<g>
<title>_int_malloc (1 samples, 0.16%)</title><rect x="15.7" y="627.0" width="1.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="18.7" y="638.0"></text>
</g>
<g>
<title>start_thread (59 samples, 9.46%)</title><rect x="17.6" y="627.0" width="111.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="20.6" y="638.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (59 samples, 9.46%)</title><rect x="17.6" y="611.0" width="111.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="20.6" y="622.0">thread_native..</text>
</g>
<g>
<title>Thread::call_run() (59 samples, 9.46%)</title><rect x="17.6" y="595.0" width="111.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="20.6" y="606.0">Thread::call_..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (59 samples, 9.46%)</title><rect x="17.6" y="579.0" width="111.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="20.6" y="590.0">JavaThread::t..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (59 samples, 9.46%)</title><rect x="17.6" y="563.0" width="111.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="20.6" y="574.0">CompileBroker..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (59 samples, 9.46%)</title><rect x="17.6" y="547.0" width="111.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="20.6" y="558.0">CompileBroker..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (59 samples, 9.46%)</title><rect x="17.6" y="531.0" width="111.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="20.6" y="542.0">C2Compiler::c..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (59 samples, 9.46%)</title><rect x="17.6" y="515.0" width="111.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="20.6" y="526.0">Compile::Comp..</text>
</g>
<g>
<title>Compile::Code_Gen() (41 samples, 6.57%)</title><rect x="17.6" y="499.0" width="77.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="20.6" y="510.0">Compile::..</text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.16%)</title><rect x="17.6" y="483.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="20.6" y="494.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.16%)</title><rect x="17.6" y="467.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="20.6" y="478.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.16%)</title><rect x="17.6" y="451.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="20.6" y="462.0"></text>
</g>
<g>
<title>Matcher::match() (2 samples, 0.32%)</title><rect x="19.5" y="483.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="22.5" y="494.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (2 samples, 0.32%)</title><rect x="19.5" y="467.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="22.5" y="478.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.16%)</title><rect x="21.3" y="451.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="24.3" y="462.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.16%)</title><rect x="21.3" y="435.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="24.3" y="446.0"></text>
</g>
<g>
<title>Node::match_edge(unsigned int) const (1 samples, 0.16%)</title><rect x="21.3" y="419.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="24.3" y="430.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (3 samples, 0.48%)</title><rect x="23.2" y="483.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="26.2" y="494.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (3 samples, 0.48%)</title><rect x="23.2" y="467.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="26.2" y="478.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.16%)</title><rect x="23.2" y="451.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="26.2" y="462.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.16%)</title><rect x="23.2" y="435.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="26.2" y="446.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.16%)</title><rect x="25.1" y="451.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="28.1" y="462.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.16%)</title><rect x="25.1" y="435.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="28.1" y="446.0"></text>
</g>
<g>
<title>checkCastPPNode::ideal_Opcode() const (1 samples, 0.16%)</title><rect x="27.0" y="451.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="30.0" y="462.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (35 samples, 5.61%)</title><rect x="28.9" y="483.0" width="66.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="31.9" y="494.0">PhaseCh..</text>
</g>
<g>
<title>MachNode::bottom_type() const (1 samples, 0.16%)</title><rect x="28.9" y="467.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="31.9" y="478.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.16%)</title><rect x="30.8" y="467.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="33.8" y="478.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.16%)</title><rect x="32.7" y="467.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="35.7" y="478.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.16%)</title><rect x="34.6" y="467.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="37.6" y="478.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.16%)</title><rect x="34.6" y="451.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="37.6" y="462.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.16%)</title><rect x="34.6" y="435.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="37.6" y="446.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (2 samples, 0.32%)</title><rect x="36.5" y="467.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="39.5" y="478.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.16%)</title><rect x="38.4" y="451.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="41.4" y="462.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (4 samples, 0.64%)</title><rect x="40.3" y="467.0" width="7.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="43.3" y="478.0"></text>
</g>
<g>
<title>PhaseChaitin::split_DEF(Node*, Block*, int, unsigned int, Node**, Node**, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.16%)</title><rect x="45.9" y="451.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="48.9" y="462.0"></text>
</g>
<g>
<title>PhaseChaitin::insert_proj(Block*, unsigned int, Node*, unsigned int) (1 samples, 0.16%)</title><rect x="45.9" y="435.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="48.9" y="446.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (8 samples, 1.28%)</title><rect x="47.8" y="467.0" width="15.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="50.8" y="478.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.16%)</title><rect x="53.5" y="451.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="56.5" y="462.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.32%)</title><rect x="55.4" y="451.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="58.4" y="462.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (2 samples, 0.32%)</title><rect x="59.2" y="451.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="62.2" y="462.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.16%)</title><rect x="61.1" y="435.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="64.1" y="446.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (6 samples, 0.96%)</title><rect x="62.9" y="467.0" width="11.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="65.9" y="478.0"></text>
</g>
<g>
<title>RegMask::is_vector(unsigned int) (1 samples, 0.16%)</title><rect x="70.5" y="451.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="73.5" y="462.0"></text>
</g>
<g>
<title>jmpConNode::oper_input_base() const (1 samples, 0.16%)</title><rect x="72.4" y="451.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="75.4" y="462.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.16%)</title><rect x="74.3" y="467.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="77.3" y="478.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (7 samples, 1.12%)</title><rect x="76.2" y="467.0" width="13.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="79.2" y="478.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (4 samples, 0.64%)</title><rect x="80.0" y="451.0" width="7.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="83.0" y="462.0"></text>
</g>
<g>
<title>PhaseChaitin::yank_if_dead_recurse(Node*, Node*, Block*, Node_List*, Node_List*) (1 samples, 0.16%)</title><rect x="87.5" y="451.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="90.5" y="462.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (2 samples, 0.32%)</title><rect x="89.4" y="467.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="92.4" y="478.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.16%)</title><rect x="93.2" y="467.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="96.2" y="478.0"></text>
</g>
<g>
<title>Compile::Optimize() (13 samples, 2.08%)</title><rect x="95.1" y="499.0" width="24.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="98.1" y="510.0">C..</text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) (7 samples, 1.12%)</title><rect x="95.1" y="483.0" width="13.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="98.1" y="494.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (7 samples, 1.12%)</title><rect x="95.1" y="467.0" width="13.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="98.1" y="478.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.48%)</title><rect x="95.1" y="451.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="98.1" y="462.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (3 samples, 0.48%)</title><rect x="95.1" y="435.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="98.1" y="446.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (3 samples, 0.48%)</title><rect x="95.1" y="419.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="98.1" y="430.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (1 samples, 0.16%)</title><rect x="97.0" y="403.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="100.0" y="414.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.16%)</title><rect x="97.0" y="387.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="100.0" y="398.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.16%)</title><rect x="97.0" y="371.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="100.0" y="382.0"></text>
</g>
<g>
<title>Type::operator new(unsigned long) (1 samples, 0.16%)</title><rect x="97.0" y="355.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="100.0" y="366.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.16%)</title><rect x="98.9" y="403.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="101.9" y="414.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.16%)</title><rect x="100.8" y="451.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="103.8" y="462.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (2 samples, 0.32%)</title><rect x="102.7" y="451.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="105.7" y="462.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.16%)</title><rect x="106.4" y="451.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="109.4" y="462.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.16%)</title><rect x="106.4" y="435.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="109.4" y="446.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.16%)</title><rect x="108.3" y="483.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="111.3" y="494.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.16%)</title><rect x="108.3" y="467.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="111.3" y="478.0"></text>
</g>
<g>
<title>HaltNode::bottom_type() const (1 samples, 0.16%)</title><rect x="110.2" y="483.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="113.2" y="494.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.48%)</title><rect x="112.1" y="483.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="115.1" y="494.0"></text>
</g>
<g>
<title>MultiNode::is_CFG() const (1 samples, 0.16%)</title><rect x="112.1" y="467.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="115.1" y="478.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.16%)</title><rect x="114.0" y="467.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="117.0" y="478.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.16%)</title><rect x="114.0" y="451.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="117.0" y="462.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_node(Node*) const (1 samples, 0.16%)</title><rect x="114.0" y="435.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="117.0" y="446.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.16%)</title><rect x="115.9" y="467.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="118.9" y="478.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.16%)</title><rect x="115.9" y="451.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="118.9" y="462.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.16%)</title><rect x="115.9" y="435.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="118.9" y="446.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.16%)</title><rect x="117.8" y="483.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="120.8" y="494.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.16%)</title><rect x="117.8" y="467.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="120.8" y="478.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.16%)</title><rect x="117.8" y="451.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="120.8" y="462.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.16%)</title><rect x="117.8" y="435.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="120.8" y="446.0"></text>
</g>
<g>
<title>idealize_test(PhaseGVN*, IfNode*) (1 samples, 0.16%)</title><rect x="117.8" y="419.0" width="1.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="120.8" y="430.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.16%)</title><rect x="117.8" y="403.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="120.8" y="414.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.16%)</title><rect x="117.8" y="387.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="120.8" y="398.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.16%)</title><rect x="117.8" y="371.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="120.8" y="382.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.80%)</title><rect x="119.7" y="499.0" width="9.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="122.7" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.80%)</title><rect x="119.7" y="483.0" width="9.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="122.7" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.80%)</title><rect x="119.7" y="467.0" width="9.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="122.7" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.80%)</title><rect x="119.7" y="451.0" width="9.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="122.7" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.80%)</title><rect x="119.7" y="435.0" width="9.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="122.7" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.80%)</title><rect x="119.7" y="419.0" width="9.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="122.7" y="430.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.80%)</title><rect x="119.7" y="403.0" width="9.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="122.7" y="414.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.80%)</title><rect x="119.7" y="387.0" width="9.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="122.7" y="398.0"></text>
</g>
<g>
<title>GraphKit::set_map_clone(SafePointNode*) (1 samples, 0.16%)</title><rect x="119.7" y="371.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="122.7" y="382.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.16%)</title><rect x="119.7" y="355.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="122.7" y="366.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.16%)</title><rect x="119.7" y="339.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="122.7" y="350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.64%)</title><rect x="121.6" y="371.0" width="7.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="124.6" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.64%)</title><rect x="121.6" y="355.0" width="7.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="124.6" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.64%)</title><rect x="121.6" y="339.0" width="7.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="124.6" y="350.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.64%)</title><rect x="121.6" y="323.0" width="7.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="124.6" y="334.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.64%)</title><rect x="121.6" y="307.0" width="7.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="124.6" y="318.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.64%)</title><rect x="121.6" y="291.0" width="7.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="124.6" y="302.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.16%)</title><rect x="121.6" y="275.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="124.6" y="286.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.16%)</title><rect x="121.6" y="259.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="124.6" y="270.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.48%)</title><rect x="123.5" y="275.0" width="5.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="126.5" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.48%)</title><rect x="123.5" y="259.0" width="5.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="126.5" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.48%)</title><rect x="123.5" y="243.0" width="5.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="126.5" y="254.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.48%)</title><rect x="123.5" y="227.0" width="5.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="126.5" y="238.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.16%)</title><rect x="123.5" y="211.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="126.5" y="222.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_unsafe_load_store(BasicType, LibraryCallKit::LoadStoreKind, LibraryCallKit::AccessKind) (1 samples, 0.16%)</title><rect x="123.5" y="195.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="126.5" y="206.0"></text>
</g>
<g>
<title>GraphKit::access_atomic_cmpxchg_bool_at(Node*, Node*, Node*, TypePtr const*, int, Node*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.16%)</title><rect x="123.5" y="179.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="126.5" y="190.0"></text>
</g>
<g>
<title>BarrierSetC2::atomic_cmpxchg_bool_at(C2AtomicAccess&amp;, Node*, Node*, Type const*) const (1 samples, 0.16%)</title><rect x="123.5" y="163.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="126.5" y="174.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::atomic_cmpxchg_bool_at_resolved(C2AtomicAccess&amp;, Node*, Node*, Type const*) const (1 samples, 0.16%)</title><rect x="123.5" y="147.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="126.5" y="158.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.16%)</title><rect x="123.5" y="131.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="126.5" y="142.0"></text>
</g>
<g>
<title>G1BarrierSetC2::g1_mark_card(GraphKit*, IdealKit&amp;, Node*, Node*, unsigned int, Node*, Node*, Node*, TypeFunc const*) const (1 samples, 0.16%)</title><rect x="123.5" y="115.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="126.5" y="126.0"></text>
</g>
<g>
<title>IdealKit::make_leaf_call(TypeFunc const*, unsigned char*, char const*, Node*, Node*, Node*, Node*) (1 samples, 0.16%)</title><rect x="123.5" y="99.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="126.5" y="110.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.16%)</title><rect x="123.5" y="83.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="126.5" y="94.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.16%)</title><rect x="123.5" y="67.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="126.5" y="78.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.32%)</title><rect x="125.4" y="211.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="128.4" y="222.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.32%)</title><rect x="125.4" y="195.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="128.4" y="206.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.32%)</title><rect x="125.4" y="179.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="128.4" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.32%)</title><rect x="125.4" y="163.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="128.4" y="174.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.32%)</title><rect x="125.4" y="147.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="128.4" y="158.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.32%)</title><rect x="125.4" y="131.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="128.4" y="142.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.16%)</title><rect x="125.4" y="115.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="128.4" y="126.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.16%)</title><rect x="125.4" y="99.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="128.4" y="110.0"></text>
</g>
<g>
<title>InlineTree::build_inline_tree_for_callee(ciMethod*, JVMState*, int) (1 samples, 0.16%)</title><rect x="125.4" y="83.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="128.4" y="94.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.16%)</title><rect x="127.2" y="115.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="130.2" y="126.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.16%)</title><rect x="127.2" y="99.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="130.2" y="110.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.16%)</title><rect x="127.2" y="83.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="130.2" y="94.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.16%)</title><rect x="127.2" y="67.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="130.2" y="78.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.16%)</title><rect x="127.2" y="51.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="130.2" y="62.0"></text>
</g>
<g>
<title>GraphKit::add_exception_states_from(JVMState*) (1 samples, 0.16%)</title><rect x="127.2" y="35.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="130.2" y="46.0"></text>
</g>
<g>
<title>[GC Thread#0 tid=2822] (4 samples, 0.64%)</title><rect x="129.1" y="643.0" width="7.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="132.1" y="654.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.64%)</title><rect x="129.1" y="627.0" width="7.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="132.1" y="638.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.64%)</title><rect x="129.1" y="611.0" width="7.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="132.1" y="622.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.64%)</title><rect x="129.1" y="595.0" width="7.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="132.1" y="606.0"></text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 0.64%)</title><rect x="129.1" y="579.0" width="7.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="132.1" y="590.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (4 samples, 0.64%)</title><rect x="129.1" y="563.0" width="7.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="132.1" y="574.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.48%)</title><rect x="129.1" y="547.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="132.1" y="558.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.16%)</title><rect x="129.1" y="531.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="132.1" y="542.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.16%)</title><rect x="131.0" y="531.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="134.0" y="542.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.16%)</title><rect x="131.0" y="515.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="134.0" y="526.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.16%)</title><rect x="132.9" y="531.0" width="1.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="135.9" y="542.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.16%)</title><rect x="134.8" y="547.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="137.8" y="558.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.16%)</title><rect x="134.8" y="531.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="137.8" y="542.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.16%)</title><rect x="134.8" y="515.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="137.8" y="526.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (1 samples, 0.16%)</title><rect x="134.8" y="499.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="137.8" y="510.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.16%)</title><rect x="134.8" y="483.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="137.8" y="494.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (1 samples, 0.16%)</title><rect x="134.8" y="467.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="137.8" y="478.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.16%)</title><rect x="134.8" y="451.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="137.8" y="462.0"></text>
</g>
<g>
<title>[GC Thread#1 tid=2881] (3 samples, 0.48%)</title><rect x="136.7" y="643.0" width="5.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="139.7" y="654.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.48%)</title><rect x="136.7" y="627.0" width="5.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="139.7" y="638.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.48%)</title><rect x="136.7" y="611.0" width="5.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="139.7" y="622.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.48%)</title><rect x="136.7" y="595.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="139.7" y="606.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.48%)</title><rect x="136.7" y="579.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="139.7" y="590.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (3 samples, 0.48%)</title><rect x="136.7" y="563.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="139.7" y="574.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.48%)</title><rect x="136.7" y="547.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="139.7" y="558.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.32%)</title><rect x="136.7" y="531.0" width="3.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="139.7" y="542.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.16%)</title><rect x="138.6" y="515.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="141.6" y="526.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.16%)</title><rect x="138.6" y="499.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="141.6" y="510.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (1 samples, 0.16%)</title><rect x="138.6" y="483.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="141.6" y="494.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.16%)</title><rect x="140.5" y="531.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="143.5" y="542.0"></text>
</g>
<g>
<title>[GC Thread#2 tid=2882] (4 samples, 0.64%)</title><rect x="142.4" y="643.0" width="7.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="145.4" y="654.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.64%)</title><rect x="142.4" y="627.0" width="7.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="145.4" y="638.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.64%)</title><rect x="142.4" y="611.0" width="7.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="145.4" y="622.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.64%)</title><rect x="142.4" y="595.0" width="7.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="145.4" y="606.0"></text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 0.64%)</title><rect x="142.4" y="579.0" width="7.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="145.4" y="590.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (4 samples, 0.64%)</title><rect x="142.4" y="563.0" width="7.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="145.4" y="574.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.48%)</title><rect x="142.4" y="547.0" width="5.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="145.4" y="558.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.32%)</title><rect x="142.4" y="531.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="145.4" y="542.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.32%)</title><rect x="142.4" y="515.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="145.4" y="526.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.16%)</title><rect x="144.3" y="499.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="147.3" y="510.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (1 samples, 0.16%)</title><rect x="144.3" y="483.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="147.3" y="494.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.16%)</title><rect x="146.2" y="531.0" width="1.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="149.2" y="542.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.16%)</title><rect x="148.0" y="547.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="151.0" y="558.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.16%)</title><rect x="148.0" y="531.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="151.0" y="542.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.16%)</title><rect x="148.0" y="515.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="151.0" y="526.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (1 samples, 0.16%)</title><rect x="148.0" y="499.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="151.0" y="510.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.16%)</title><rect x="148.0" y="483.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="151.0" y="494.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (1 samples, 0.16%)</title><rect x="148.0" y="467.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="151.0" y="478.0"></text>
</g>
<g>
<title>[GC Thread#3 tid=2883] (4 samples, 0.64%)</title><rect x="149.9" y="643.0" width="7.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="152.9" y="654.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.64%)</title><rect x="149.9" y="627.0" width="7.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="152.9" y="638.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.64%)</title><rect x="149.9" y="611.0" width="7.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="152.9" y="622.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.64%)</title><rect x="149.9" y="595.0" width="7.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="152.9" y="606.0"></text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 0.64%)</title><rect x="149.9" y="579.0" width="7.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="152.9" y="590.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (4 samples, 0.64%)</title><rect x="149.9" y="563.0" width="7.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="152.9" y="574.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.32%)</title><rect x="149.9" y="547.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="152.9" y="558.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.16%)</title><rect x="149.9" y="531.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="152.9" y="542.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.16%)</title><rect x="151.8" y="531.0" width="1.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="154.8" y="542.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.32%)</title><rect x="153.7" y="547.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="156.7" y="558.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.32%)</title><rect x="153.7" y="531.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="156.7" y="542.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.32%)</title><rect x="153.7" y="515.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="156.7" y="526.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (2 samples, 0.32%)</title><rect x="153.7" y="499.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="156.7" y="510.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.32%)</title><rect x="153.7" y="483.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="156.7" y="494.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.16%)</title><rect x="153.7" y="467.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="156.7" y="478.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.16%)</title><rect x="153.7" y="451.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="156.7" y="462.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.16%)</title><rect x="153.7" y="435.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="156.7" y="446.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (1 samples, 0.16%)</title><rect x="155.6" y="467.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="158.6" y="478.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.16%)</title><rect x="155.6" y="451.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="158.6" y="462.0"></text>
</g>
<g>
<title>[GC Thread#4 tid=2884] (3 samples, 0.48%)</title><rect x="157.5" y="643.0" width="5.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="160.5" y="654.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.48%)</title><rect x="157.5" y="627.0" width="5.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="160.5" y="638.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.48%)</title><rect x="157.5" y="611.0" width="5.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="160.5" y="622.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.48%)</title><rect x="157.5" y="595.0" width="5.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="160.5" y="606.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.48%)</title><rect x="157.5" y="579.0" width="5.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="160.5" y="590.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (3 samples, 0.48%)</title><rect x="157.5" y="563.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="160.5" y="574.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.32%)</title><rect x="157.5" y="547.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="160.5" y="558.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.32%)</title><rect x="157.5" y="531.0" width="3.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="160.5" y="542.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.16%)</title><rect x="161.3" y="547.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="164.3" y="558.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.16%)</title><rect x="161.3" y="531.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="164.3" y="542.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.16%)</title><rect x="161.3" y="515.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="164.3" y="526.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (1 samples, 0.16%)</title><rect x="161.3" y="499.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="164.3" y="510.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.16%)</title><rect x="161.3" y="483.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="164.3" y="494.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (1 samples, 0.16%)</title><rect x="161.3" y="467.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="164.3" y="478.0"></text>
</g>
<g>
<title>[GC Thread#5 tid=2885] (5 samples, 0.80%)</title><rect x="163.2" y="643.0" width="9.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="166.2" y="654.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.80%)</title><rect x="163.2" y="627.0" width="9.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="166.2" y="638.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.80%)</title><rect x="163.2" y="611.0" width="9.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="166.2" y="622.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.80%)</title><rect x="163.2" y="595.0" width="9.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="166.2" y="606.0"></text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 0.80%)</title><rect x="163.2" y="579.0" width="9.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="166.2" y="590.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 0.80%)</title><rect x="163.2" y="563.0" width="9.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="166.2" y="574.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (4 samples, 0.64%)</title><rect x="163.2" y="547.0" width="7.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="166.2" y="558.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.32%)</title><rect x="163.2" y="531.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="166.2" y="542.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.16%)</title><rect x="165.1" y="515.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="168.1" y="526.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.16%)</title><rect x="165.1" y="499.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="168.1" y="510.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (1 samples, 0.16%)</title><rect x="165.1" y="483.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="168.1" y="494.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.32%)</title><rect x="167.0" y="531.0" width="3.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="170.0" y="542.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.16%)</title><rect x="170.7" y="547.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="173.7" y="558.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.16%)</title><rect x="170.7" y="531.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="173.7" y="542.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.16%)</title><rect x="170.7" y="515.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="173.7" y="526.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (1 samples, 0.16%)</title><rect x="170.7" y="499.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="173.7" y="510.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.16%)</title><rect x="170.7" y="483.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="173.7" y="494.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (1 samples, 0.16%)</title><rect x="170.7" y="467.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="173.7" y="478.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.16%)</title><rect x="170.7" y="451.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="173.7" y="462.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.16%)</title><rect x="170.7" y="435.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="173.7" y="446.0"></text>
</g>
<g>
<title>[GC Thread#6 tid=2886] (4 samples, 0.64%)</title><rect x="172.6" y="643.0" width="7.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="175.6" y="654.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.64%)</title><rect x="172.6" y="627.0" width="7.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="175.6" y="638.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.64%)</title><rect x="172.6" y="611.0" width="7.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="175.6" y="622.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.64%)</title><rect x="172.6" y="595.0" width="7.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="175.6" y="606.0"></text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 0.64%)</title><rect x="172.6" y="579.0" width="7.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="175.6" y="590.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (4 samples, 0.64%)</title><rect x="172.6" y="563.0" width="7.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="175.6" y="574.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.32%)</title><rect x="172.6" y="547.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="175.6" y="558.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.32%)</title><rect x="172.6" y="531.0" width="3.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="175.6" y="542.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.32%)</title><rect x="176.4" y="547.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="179.4" y="558.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.32%)</title><rect x="176.4" y="531.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="179.4" y="542.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.32%)</title><rect x="176.4" y="515.0" width="3.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="179.4" y="526.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (2 samples, 0.32%)</title><rect x="176.4" y="499.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="179.4" y="510.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.32%)</title><rect x="176.4" y="483.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="179.4" y="494.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (2 samples, 0.32%)</title><rect x="176.4" y="467.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="179.4" y="478.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.32%)</title><rect x="176.4" y="451.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="179.4" y="462.0"></text>
</g>
<g>
<title>G1PLABAllocator::allocate_direct_or_new_plab(InCSetState, unsigned long, bool*) (1 samples, 0.16%)</title><rect x="178.3" y="435.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="181.3" y="446.0"></text>
</g>
<g>
<title>[GC Thread#7 tid=2887] (3 samples, 0.48%)</title><rect x="180.2" y="643.0" width="5.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="183.2" y="654.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.48%)</title><rect x="180.2" y="627.0" width="5.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="183.2" y="638.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.48%)</title><rect x="180.2" y="611.0" width="5.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="183.2" y="622.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.48%)</title><rect x="180.2" y="595.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="183.2" y="606.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.48%)</title><rect x="180.2" y="579.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="183.2" y="590.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (3 samples, 0.48%)</title><rect x="180.2" y="563.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="183.2" y="574.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.16%)</title><rect x="180.2" y="547.0" width="1.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="183.2" y="558.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.16%)</title><rect x="180.2" y="531.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="183.2" y="542.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.32%)</title><rect x="182.1" y="547.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="185.1" y="558.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.32%)</title><rect x="182.1" y="531.0" width="3.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="185.1" y="542.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.32%)</title><rect x="182.1" y="515.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="185.1" y="526.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (2 samples, 0.32%)</title><rect x="182.1" y="499.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="185.1" y="510.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.32%)</title><rect x="182.1" y="483.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="185.1" y="494.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (2 samples, 0.32%)</title><rect x="182.1" y="467.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="185.1" y="478.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.16%)</title><rect x="184.0" y="451.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="187.0" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=2839] (86 samples, 13.78%)</title><rect x="185.9" y="643.0" width="162.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="188.9" y="654.0">[NIO Selector #0 tid=..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (86 samples, 13.78%)</title><rect x="185.9" y="627.0" width="162.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="188.9" y="638.0">one/nio/server/Select..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.48%)</title><rect x="187.8" y="611.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.8" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.48%)</title><rect x="187.8" y="595.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="190.8" y="606.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.32%)</title><rect x="189.6" y="579.0" width="3.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="192.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (82 samples, 13.14%)</title><rect x="193.4" y="611.0" width="155.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="196.4" y="622.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (82 samples, 13.14%)</title><rect x="193.4" y="595.0" width="155.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="196.4" y="606.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (75 samples, 12.02%)</title><rect x="193.4" y="579.0" width="141.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.4" y="590.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (67 samples, 10.74%)</title><rect x="201.0" y="563.0" width="126.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.0" y="574.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (67 samples, 10.74%)</title><rect x="201.0" y="547.0" width="126.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="204.0" y="558.0">one/nio/http/Htt..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (64 samples, 10.26%)</title><rect x="201.0" y="531.0" width="121.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.0" y="542.0">RequestHandler0..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 1.44%)</title><rect x="201.0" y="515.0" width="17.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="204.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9 samples, 1.44%)</title><rect x="201.0" y="499.0" width="17.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="204.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.64%)</title><rect x="201.0" y="483.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="204.0" y="494.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.64%)</title><rect x="201.0" y="467.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.0" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.64%)</title><rect x="201.0" y="451.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.64%)</title><rect x="201.0" y="435.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.0" y="446.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.16%)</title><rect x="206.7" y="419.0" width="1.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="209.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.80%)</title><rect x="208.6" y="483.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.6" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.80%)</title><rect x="208.6" y="467.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.6" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.80%)</title><rect x="208.6" y="451.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.64%)</title><rect x="210.4" y="435.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="213.4" y="446.0"></text>
</g>
<g>
<title>__libc_send (3 samples, 0.48%)</title><rect x="210.4" y="419.0" width="5.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="213.4" y="430.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.16%)</title><rect x="216.1" y="419.0" width="1.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="219.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.48%)</title><rect x="218.0" y="515.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="221.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.48%)</title><rect x="218.0" y="499.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="221.0" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.48%)</title><rect x="218.0" y="483.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="221.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.48%)</title><rect x="218.0" y="467.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="221.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.48%)</title><rect x="218.0" y="451.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="221.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (52 samples, 8.33%)</title><rect x="223.7" y="515.0" width="98.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="226.7" y="526.0">ru/mail/poli..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (31 samples, 4.97%)</title><rect x="223.7" y="499.0" width="58.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="226.7" y="510.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (31 samples, 4.97%)</title><rect x="223.7" y="483.0" width="58.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="226.7" y="494.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (30 samples, 4.81%)</title><rect x="223.7" y="467.0" width="56.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="226.7" y="478.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (29 samples, 4.65%)</title><rect x="225.6" y="451.0" width="54.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="228.6" y="462.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (29 samples, 4.65%)</title><rect x="225.6" y="435.0" width="54.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="228.6" y="446.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (29 samples, 4.65%)</title><rect x="225.6" y="419.0" width="54.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="228.6" y="430.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (29 samples, 4.65%)</title><rect x="225.6" y="403.0" width="54.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="228.6" y="414.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (27 samples, 4.33%)</title><rect x="225.6" y="387.0" width="51.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="228.6" y="398.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (27 samples, 4.33%)</title><rect x="225.6" y="371.0" width="51.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="228.6" y="382.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (5 samples, 0.80%)</title><rect x="225.6" y="355.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="228.6" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (4 samples, 0.64%)</title><rect x="225.6" y="339.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="228.6" y="350.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.64%)</title><rect x="225.6" y="323.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="228.6" y="334.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.64%)</title><rect x="225.6" y="307.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="228.6" y="318.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.32%)</title><rect x="225.6" y="291.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="228.6" y="302.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.16%)</title><rect x="225.6" y="275.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="228.6" y="286.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.16%)</title><rect x="227.5" y="275.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.5" y="286.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.16%)</title><rect x="229.4" y="291.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="232.4" y="302.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.16%)</title><rect x="229.4" y="275.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="232.4" y="286.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.16%)</title><rect x="231.3" y="291.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="234.3" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractMap.&lt;init&gt; (1 samples, 0.16%)</title><rect x="231.3" y="275.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="234.3" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (1 samples, 0.16%)</title><rect x="233.1" y="339.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="236.1" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (1 samples, 0.16%)</title><rect x="233.1" y="323.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.1" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.16%)</title><rect x="233.1" y="307.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="236.1" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.16%)</title><rect x="233.1" y="291.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.1" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (16 samples, 2.56%)</title><rect x="235.0" y="355.0" width="30.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="238.0" y="366.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.flush (1 samples, 0.16%)</title><rect x="235.0" y="339.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="238.0" y="350.0"></text>
</g>
<g>
<title>java/io/PrintStream.flush (1 samples, 0.16%)</title><rect x="235.0" y="323.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="238.0" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.16%)</title><rect x="235.0" y="307.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="238.0" y="318.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.16%)</title><rect x="235.0" y="291.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="238.0" y="302.0"></text>
</g>
<g>
<title>java/io/OutputStream.flush (1 samples, 0.16%)</title><rect x="235.0" y="275.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="238.0" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (14 samples, 2.24%)</title><rect x="236.9" y="339.0" width="26.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="239.9" y="350.0">c..</text>
</g>
<g>
<title>java/io/FilterOutputStream.write (14 samples, 2.24%)</title><rect x="236.9" y="323.0" width="26.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="239.9" y="334.0">j..</text>
</g>
<g>
<title>java/io/PrintStream.write (14 samples, 2.24%)</title><rect x="236.9" y="307.0" width="26.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="239.9" y="318.0">j..</text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (13 samples, 2.08%)</title><rect x="238.8" y="291.0" width="24.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="241.8" y="302.0">j..</text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (12 samples, 1.92%)</title><rect x="240.7" y="275.0" width="22.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.7" y="286.0">j..</text>
</g>
<g>
<title>java/io/FileOutputStream.write (12 samples, 1.92%)</title><rect x="240.7" y="259.0" width="22.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="243.7" y="270.0">j..</text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (12 samples, 1.92%)</title><rect x="240.7" y="243.0" width="22.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="243.7" y="254.0">j..</text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (11 samples, 1.76%)</title><rect x="242.6" y="227.0" width="20.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="245.6" y="238.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.16%)</title><rect x="242.6" y="211.0" width="1.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="245.6" y="222.0"></text>
</g>
<g>
<title>writeBytes (10 samples, 1.60%)</title><rect x="244.5" y="211.0" width="18.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="247.5" y="222.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.16%)</title><rect x="244.5" y="195.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="247.5" y="206.0"></text>
</g>
<g>
<title>__libc_write (5 samples, 0.80%)</title><rect x="246.4" y="195.0" width="9.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="249.4" y="206.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (2 samples, 0.32%)</title><rect x="255.8" y="195.0" width="3.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="258.8" y="206.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.16%)</title><rect x="257.7" y="179.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="260.7" y="190.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.16%)</title><rect x="259.6" y="195.0" width="1.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="262.6" y="206.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.16%)</title><rect x="259.6" y="179.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="262.6" y="190.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.16%)</title><rect x="261.5" y="195.0" width="1.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="264.5" y="206.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.16%)</title><rect x="261.5" y="179.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="264.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.16%)</title><rect x="263.4" y="339.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="266.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.16%)</title><rect x="263.4" y="323.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="266.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.16%)</title><rect x="263.4" y="307.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.16%)</title><rect x="263.4" y="291.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="266.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.16%)</title><rect x="263.4" y="275.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="266.4" y="286.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.16%)</title><rect x="263.4" y="259.0" width="1.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="266.4" y="270.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.16%)</title><rect x="263.4" y="243.0" width="1.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="266.4" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (6 samples, 0.96%)</title><rect x="265.3" y="355.0" width="11.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="268.3" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (6 samples, 0.96%)</title><rect x="265.3" y="339.0" width="11.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="268.3" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (6 samples, 0.96%)</title><rect x="265.3" y="323.0" width="11.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="268.3" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (4 samples, 0.64%)</title><rect x="265.3" y="307.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="268.3" y="318.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.16%)</title><rect x="265.3" y="291.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="268.3" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.16%)</title><rect x="265.3" y="275.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="268.3" y="286.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.16%)</title><rect x="265.3" y="259.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="268.3" y="270.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (3 samples, 0.48%)</title><rect x="267.2" y="291.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="270.2" y="302.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (3 samples, 0.48%)</title><rect x="267.2" y="275.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="270.2" y="286.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (3 samples, 0.48%)</title><rect x="267.2" y="259.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="270.2" y="270.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (2 samples, 0.32%)</title><rect x="267.2" y="243.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="270.2" y="254.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (2 samples, 0.32%)</title><rect x="267.2" y="227.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="270.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (1 samples, 0.16%)</title><rect x="267.2" y="211.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="270.2" y="222.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.16%)</title><rect x="267.2" y="195.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.2" y="206.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.16%)</title><rect x="269.1" y="211.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.1" y="222.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.16%)</title><rect x="269.1" y="195.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="272.1" y="206.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.subformat (1 samples, 0.16%)</title><rect x="269.1" y="179.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="272.1" y="190.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (1 samples, 0.16%)</title><rect x="269.1" y="163.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="272.1" y="174.0"></text>
</g>
<g>
<title>java/util/Calendar.setTime (1 samples, 0.16%)</title><rect x="271.0" y="243.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="274.0" y="254.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (1 samples, 0.16%)</title><rect x="271.0" y="227.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="274.0" y="238.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 0.16%)</title><rect x="271.0" y="211.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.0" y="222.0"></text>
</g>
<g>
<title>java/util/Calendar.setFieldsComputed (1 samples, 0.16%)</title><rect x="271.0" y="195.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.32%)</title><rect x="272.9" y="307.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="275.9" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.32%)</title><rect x="272.9" y="291.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="275.9" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.16%)</title><rect x="272.9" y="275.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="275.9" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.16%)</title><rect x="272.9" y="259.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="275.9" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.16%)</title><rect x="274.7" y="275.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="277.7" y="286.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.16%)</title><rect x="274.7" y="259.0" width="1.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="277.7" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.32%)</title><rect x="276.6" y="387.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.6" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.16%)</title><rect x="280.4" y="467.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="283.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (21 samples, 3.37%)</title><rect x="282.3" y="499.0" width="39.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="285.3" y="510.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.32%)</title><rect x="282.3" y="483.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.3" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.32%)</title><rect x="282.3" y="467.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="285.3" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.32%)</title><rect x="282.3" y="451.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="285.3" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="284.2" y="435.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="287.2" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="284.2" y="419.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="287.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.16%)</title><rect x="284.2" y="403.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (19 samples, 3.04%)</title><rect x="286.1" y="483.0" width="35.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.1" y="494.0">ru/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.16%)</title><rect x="286.1" y="467.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="289.1" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="286.1" y="451.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="289.1" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="286.1" y="435.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="289.1" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="286.1" y="419.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="289.1" y="430.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.16%)</title><rect x="286.1" y="403.0" width="1.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="289.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.32%)</title><rect x="288.0" y="467.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="291.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.32%)</title><rect x="288.0" y="451.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (16 samples, 2.56%)</title><rect x="291.8" y="467.0" width="30.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="294.8" y="478.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.32%)</title><rect x="291.8" y="451.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="294.8" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.16%)</title><rect x="291.8" y="435.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="294.8" y="446.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.16%)</title><rect x="293.7" y="435.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="296.7" y="446.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.16%)</title><rect x="293.7" y="419.0" width="1.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="296.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (14 samples, 2.24%)</title><rect x="295.5" y="451.0" width="26.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="298.5" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (14 samples, 2.24%)</title><rect x="295.5" y="435.0" width="26.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.5" y="446.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.16%)</title><rect x="301.2" y="419.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="304.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.16%)</title><rect x="301.2" y="403.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="304.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.16%)</title><rect x="303.1" y="419.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="306.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.16%)</title><rect x="303.1" y="403.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="306.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.16%)</title><rect x="303.1" y="387.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.16%)</title><rect x="303.1" y="371.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="306.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.16%)</title><rect x="303.1" y="355.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="306.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.16%)</title><rect x="303.1" y="339.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="306.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.16%)</title><rect x="303.1" y="323.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="306.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.16%)</title><rect x="303.1" y="307.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.1" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.16%)</title><rect x="303.1" y="291.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="306.1" y="302.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.16%)</title><rect x="303.1" y="275.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="306.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (9 samples, 1.44%)</title><rect x="305.0" y="419.0" width="17.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="308.0" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 1.12%)</title><rect x="308.8" y="403.0" width="13.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="311.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 1.12%)</title><rect x="308.8" y="387.0" width="13.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="311.8" y="398.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 1.12%)</title><rect x="308.8" y="371.0" width="13.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="311.8" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.32%)</title><rect x="318.2" y="355.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="321.2" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.32%)</title><rect x="318.2" y="339.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="321.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.48%)</title><rect x="322.0" y="531.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="325.0" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.48%)</title><rect x="322.0" y="515.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="325.0" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.48%)</title><rect x="322.0" y="499.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="325.0" y="510.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.48%)</title><rect x="322.0" y="483.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.48%)</title><rect x="322.0" y="467.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="325.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.32%)</title><rect x="323.9" y="451.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="326.9" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.48%)</title><rect x="327.7" y="563.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="330.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.16%)</title><rect x="329.6" y="547.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="332.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.16%)</title><rect x="329.6" y="531.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.6" y="542.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.16%)</title><rect x="329.6" y="515.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="332.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.16%)</title><rect x="329.6" y="499.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="332.6" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.16%)</title><rect x="331.5" y="547.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.5" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.16%)</title><rect x="333.4" y="563.0" width="1.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="336.4" y="574.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.16%)</title><rect x="333.4" y="547.0" width="1.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="336.4" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 1.12%)</title><rect x="335.3" y="579.0" width="13.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="338.3" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 1.12%)</title><rect x="335.3" y="563.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.3" y="574.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.48%)</title><rect x="337.1" y="547.0" width="5.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="340.1" y="558.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.16%)</title><rect x="337.1" y="531.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="340.1" y="542.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.16%)</title><rect x="339.0" y="531.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="342.0" y="542.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.16%)</title><rect x="340.9" y="531.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="343.9" y="542.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.48%)</title><rect x="342.8" y="547.0" width="5.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="345.8" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=2840] (59 samples, 9.46%)</title><rect x="348.5" y="643.0" width="111.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="351.5" y="654.0">[NIO Selector..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (59 samples, 9.46%)</title><rect x="348.5" y="627.0" width="111.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="351.5" y="638.0">one/nio/serve..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 0.80%)</title><rect x="348.5" y="611.0" width="9.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="351.5" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 0.80%)</title><rect x="348.5" y="595.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="351.5" y="606.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.80%)</title><rect x="348.5" y="579.0" width="9.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="351.5" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (54 samples, 8.65%)</title><rect x="357.9" y="611.0" width="102.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="360.9" y="622.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (54 samples, 8.65%)</title><rect x="357.9" y="595.0" width="102.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="360.9" y="606.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (49 samples, 7.85%)</title><rect x="357.9" y="579.0" width="92.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="360.9" y="590.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (41 samples, 6.57%)</title><rect x="361.7" y="563.0" width="77.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="364.7" y="574.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (41 samples, 6.57%)</title><rect x="361.7" y="547.0" width="77.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.7" y="558.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (41 samples, 6.57%)</title><rect x="361.7" y="531.0" width="77.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="364.7" y="542.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 1.12%)</title><rect x="361.7" y="515.0" width="13.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="364.7" y="526.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.16%)</title><rect x="361.7" y="499.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="364.7" y="510.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.16%)</title><rect x="361.7" y="483.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="364.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.16%)</title><rect x="361.7" y="467.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="364.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.96%)</title><rect x="363.6" y="499.0" width="11.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.16%)</title><rect x="365.5" y="483.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="368.5" y="494.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.16%)</title><rect x="365.5" y="467.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="368.5" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.16%)</title><rect x="365.5" y="451.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="368.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.16%)</title><rect x="365.5" y="435.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.5" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.64%)</title><rect x="367.4" y="483.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.4" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.64%)</title><rect x="367.4" y="467.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="370.4" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.64%)</title><rect x="367.4" y="451.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="370.4" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.48%)</title><rect x="369.3" y="435.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="372.3" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.32%)</title><rect x="371.2" y="419.0" width="3.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="374.2" y="430.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.16%)</title><rect x="373.1" y="403.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="376.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (34 samples, 5.45%)</title><rect x="375.0" y="515.0" width="64.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="378.0" y="526.0">ru/mail..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (20 samples, 3.21%)</title><rect x="375.0" y="499.0" width="37.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="378.0" y="510.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (18 samples, 2.88%)</title><rect x="375.0" y="483.0" width="34.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="378.0" y="494.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (18 samples, 2.88%)</title><rect x="375.0" y="467.0" width="34.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.0" y="478.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (16 samples, 2.56%)</title><rect x="376.9" y="451.0" width="30.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="379.9" y="462.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (16 samples, 2.56%)</title><rect x="376.9" y="435.0" width="30.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="379.9" y="446.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (16 samples, 2.56%)</title><rect x="376.9" y="419.0" width="30.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="379.9" y="430.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (16 samples, 2.56%)</title><rect x="376.9" y="403.0" width="30.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="379.9" y="414.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (15 samples, 2.40%)</title><rect x="376.9" y="387.0" width="28.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.9" y="398.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (15 samples, 2.40%)</title><rect x="376.9" y="371.0" width="28.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="379.9" y="382.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (2 samples, 0.32%)</title><rect x="376.9" y="355.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.9" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (2 samples, 0.32%)</title><rect x="376.9" y="339.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="379.9" y="350.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (2 samples, 0.32%)</title><rect x="376.9" y="323.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="379.9" y="334.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (2 samples, 0.32%)</title><rect x="376.9" y="307.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="379.9" y="318.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.16%)</title><rect x="376.9" y="291.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.9" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.16%)</title><rect x="378.8" y="291.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="381.8" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.16%)</title><rect x="378.8" y="275.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="381.8" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.appendChars (1 samples, 0.16%)</title><rect x="378.8" y="259.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="381.8" y="270.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.16%)</title><rect x="378.8" y="243.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="381.8" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (7 samples, 1.12%)</title><rect x="380.6" y="355.0" width="13.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="383.6" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (6 samples, 0.96%)</title><rect x="380.6" y="339.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="383.6" y="350.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (6 samples, 0.96%)</title><rect x="380.6" y="323.0" width="11.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.6" y="334.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (6 samples, 0.96%)</title><rect x="380.6" y="307.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="383.6" y="318.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (4 samples, 0.64%)</title><rect x="384.4" y="291.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="387.4" y="302.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (4 samples, 0.64%)</title><rect x="384.4" y="275.0" width="7.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="387.4" y="286.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (4 samples, 0.64%)</title><rect x="384.4" y="259.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="387.4" y="270.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (4 samples, 0.64%)</title><rect x="384.4" y="243.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="387.4" y="254.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (4 samples, 0.64%)</title><rect x="384.4" y="227.0" width="7.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="387.4" y="238.0"></text>
</g>
<g>
<title>writeBytes (3 samples, 0.48%)</title><rect x="386.3" y="211.0" width="5.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="389.3" y="222.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.16%)</title><rect x="388.2" y="195.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="391.2" y="206.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.16%)</title><rect x="390.1" y="195.0" width="1.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="393.1" y="206.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.16%)</title><rect x="390.1" y="179.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="393.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.16%)</title><rect x="392.0" y="339.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="395.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.16%)</title><rect x="392.0" y="323.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="395.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.16%)</title><rect x="392.0" y="307.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="395.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.16%)</title><rect x="392.0" y="291.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="395.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.16%)</title><rect x="392.0" y="275.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.16%)</title><rect x="392.0" y="259.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="395.0" y="270.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.16%)</title><rect x="392.0" y="243.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="395.0" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (6 samples, 0.96%)</title><rect x="393.9" y="355.0" width="11.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.9" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (6 samples, 0.96%)</title><rect x="393.9" y="339.0" width="11.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.9" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (6 samples, 0.96%)</title><rect x="393.9" y="323.0" width="11.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="396.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.96%)</title><rect x="393.9" y="307.0" width="11.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="396.9" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.96%)</title><rect x="393.9" y="291.0" width="11.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="396.9" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.32%)</title><rect x="397.7" y="275.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.32%)</title><rect x="397.7" y="259.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="400.7" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.32%)</title><rect x="401.4" y="275.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="404.4" y="286.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.16%)</title><rect x="403.3" y="259.0" width="1.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="406.3" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.16%)</title><rect x="405.2" y="387.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="408.2" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (1 samples, 0.16%)</title><rect x="407.1" y="451.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="410.1" y="462.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.32%)</title><rect x="409.0" y="483.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="412.0" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.16%)</title><rect x="412.8" y="499.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.8" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.16%)</title><rect x="412.8" y="483.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.8" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="412.8" y="467.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="415.8" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="412.8" y="451.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.8" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="412.8" y="435.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.8" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.16%)</title><rect x="412.8" y="419.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="415.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (13 samples, 2.08%)</title><rect x="414.7" y="499.0" width="24.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.7" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (13 samples, 2.08%)</title><rect x="414.7" y="483.0" width="24.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="417.7" y="494.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.16%)</title><rect x="414.7" y="467.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.7" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.16%)</title><rect x="414.7" y="451.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="417.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (12 samples, 1.92%)</title><rect x="416.6" y="467.0" width="22.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="419.6" y="478.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.16%)</title><rect x="416.6" y="451.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="419.6" y="462.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.16%)</title><rect x="416.6" y="435.0" width="1.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="419.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (11 samples, 1.76%)</title><rect x="418.5" y="451.0" width="20.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="421.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (11 samples, 1.76%)</title><rect x="418.5" y="435.0" width="20.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.16%)</title><rect x="424.1" y="419.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 1.12%)</title><rect x="426.0" y="419.0" width="13.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.0" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 1.12%)</title><rect x="426.0" y="403.0" width="13.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="429.0" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 1.12%)</title><rect x="426.0" y="387.0" width="13.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="429.0" y="398.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 1.12%)</title><rect x="426.0" y="371.0" width="13.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="429.0" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.16%)</title><rect x="435.5" y="355.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="438.5" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.16%)</title><rect x="435.5" y="339.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="438.5" y="350.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.16%)</title><rect x="437.4" y="355.0" width="1.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="440.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.48%)</title><rect x="439.3" y="563.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="442.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.32%)</title><rect x="439.3" y="547.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="442.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.32%)</title><rect x="439.3" y="531.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.32%)</title><rect x="439.3" y="515.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="442.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.32%)</title><rect x="439.3" y="499.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="442.3" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.16%)</title><rect x="443.0" y="547.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="446.0" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.48%)</title><rect x="444.9" y="563.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="447.9" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 0.80%)</title><rect x="450.6" y="579.0" width="9.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (5 samples, 0.80%)</title><rect x="450.6" y="563.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="453.6" y="574.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.64%)</title><rect x="450.6" y="547.0" width="7.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="453.6" y="558.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.16%)</title><rect x="450.6" y="531.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="453.6" y="542.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.32%)</title><rect x="452.5" y="531.0" width="3.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="455.5" y="542.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.16%)</title><rect x="456.3" y="531.0" width="1.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="459.3" y="542.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.16%)</title><rect x="458.2" y="547.0" width="1.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="461.2" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=2841] (79 samples, 12.66%)</title><rect x="460.1" y="643.0" width="149.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="463.1" y="654.0">[NIO Selector #2 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (79 samples, 12.66%)</title><rect x="460.1" y="627.0" width="149.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="463.1" y="638.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 0.96%)</title><rect x="460.1" y="611.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="463.1" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 0.96%)</title><rect x="460.1" y="595.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="463.1" y="606.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.16%)</title><rect x="460.1" y="579.0" width="1.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="463.1" y="590.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.16%)</title><rect x="462.0" y="579.0" width="1.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="465.0" y="590.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.64%)</title><rect x="463.8" y="579.0" width="7.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="466.8" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (73 samples, 11.70%)</title><rect x="471.4" y="611.0" width="138.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="474.4" y="622.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (73 samples, 11.70%)</title><rect x="471.4" y="595.0" width="138.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.4" y="606.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (62 samples, 9.94%)</title><rect x="471.4" y="579.0" width="117.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.4" y="590.0">one/nio/http/H..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.16%)</title><rect x="473.3" y="563.0" width="1.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="476.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (58 samples, 9.29%)</title><rect x="475.2" y="563.0" width="109.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="478.2" y="574.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (58 samples, 9.29%)</title><rect x="475.2" y="547.0" width="109.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="478.2" y="558.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (58 samples, 9.29%)</title><rect x="475.2" y="531.0" width="109.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="478.2" y="542.0">RequestHandle..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 1.44%)</title><rect x="475.2" y="515.0" width="17.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.2" y="526.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.16%)</title><rect x="477.1" y="499.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.1" y="510.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.16%)</title><rect x="477.1" y="483.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="480.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.16%)</title><rect x="477.1" y="467.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.1" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 1.12%)</title><rect x="479.0" y="499.0" width="13.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.16%)</title><rect x="479.0" y="483.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="482.0" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.16%)</title><rect x="480.9" y="483.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="483.9" y="494.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.16%)</title><rect x="480.9" y="467.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="483.9" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.16%)</title><rect x="480.9" y="451.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="483.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.16%)</title><rect x="480.9" y="435.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="483.9" y="446.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.16%)</title><rect x="480.9" y="419.0" width="1.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="483.9" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.80%)</title><rect x="482.8" y="483.0" width="9.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.8" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.80%)</title><rect x="482.8" y="467.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="485.8" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.80%)</title><rect x="482.8" y="451.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.8" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.48%)</title><rect x="486.5" y="435.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="489.5" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.16%)</title><rect x="486.5" y="419.0" width="1.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="489.5" y="430.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.32%)</title><rect x="488.4" y="419.0" width="3.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="491.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.16%)</title><rect x="492.2" y="515.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="495.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.16%)</title><rect x="492.2" y="499.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="495.2" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.16%)</title><rect x="492.2" y="483.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="495.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.16%)</title><rect x="492.2" y="467.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="495.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.16%)</title><rect x="492.2" y="451.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="495.2" y="462.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.16%)</title><rect x="492.2" y="435.0" width="1.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="495.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (48 samples, 7.69%)</title><rect x="494.1" y="515.0" width="90.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="497.1" y="526.0">ru/mail/po..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (32 samples, 5.13%)</title><rect x="494.1" y="499.0" width="60.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="497.1" y="510.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (32 samples, 5.13%)</title><rect x="494.1" y="483.0" width="60.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="497.1" y="494.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (32 samples, 5.13%)</title><rect x="494.1" y="467.0" width="60.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="497.1" y="478.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (31 samples, 4.97%)</title><rect x="494.1" y="451.0" width="58.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.1" y="462.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (31 samples, 4.97%)</title><rect x="494.1" y="435.0" width="58.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.1" y="446.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (31 samples, 4.97%)</title><rect x="494.1" y="419.0" width="58.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="497.1" y="430.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (31 samples, 4.97%)</title><rect x="494.1" y="403.0" width="58.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.1" y="414.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (28 samples, 4.49%)</title><rect x="494.1" y="387.0" width="53.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="497.1" y="398.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (28 samples, 4.49%)</title><rect x="494.1" y="371.0" width="53.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.1" y="382.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (6 samples, 0.96%)</title><rect x="494.1" y="355.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.1" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (5 samples, 0.80%)</title><rect x="494.1" y="339.0" width="9.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.1" y="350.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (5 samples, 0.80%)</title><rect x="494.1" y="323.0" width="9.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="497.1" y="334.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (5 samples, 0.80%)</title><rect x="494.1" y="307.0" width="9.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.1" y="318.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.16%)</title><rect x="494.1" y="291.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="497.1" y="302.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.16%)</title><rect x="494.1" y="275.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="497.1" y="286.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.16%)</title><rect x="496.0" y="291.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="499.0" y="302.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.16%)</title><rect x="496.0" y="275.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="499.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.16%)</title><rect x="497.9" y="291.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="500.9" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.isLatin1 (1 samples, 0.16%)</title><rect x="497.9" y="275.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="500.9" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (2 samples, 0.32%)</title><rect x="499.8" y="291.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="502.8" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.16%)</title><rect x="501.7" y="275.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="504.7" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (1 samples, 0.16%)</title><rect x="503.6" y="339.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.6" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (16 samples, 2.56%)</title><rect x="505.4" y="355.0" width="30.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="508.4" y="366.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.flush (1 samples, 0.16%)</title><rect x="505.4" y="339.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="508.4" y="350.0"></text>
</g>
<g>
<title>java/io/PrintStream.flush (1 samples, 0.16%)</title><rect x="505.4" y="323.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="508.4" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.16%)</title><rect x="505.4" y="307.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.4" y="318.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.16%)</title><rect x="505.4" y="291.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="508.4" y="302.0"></text>
</g>
<g>
<title>java/io/OutputStream.flush (1 samples, 0.16%)</title><rect x="505.4" y="275.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="508.4" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (12 samples, 1.92%)</title><rect x="507.3" y="339.0" width="22.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="510.3" y="350.0">c..</text>
</g>
<g>
<title>java/io/FilterOutputStream.write (12 samples, 1.92%)</title><rect x="507.3" y="323.0" width="22.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="510.3" y="334.0">j..</text>
</g>
<g>
<title>java/io/PrintStream.write (12 samples, 1.92%)</title><rect x="507.3" y="307.0" width="22.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="510.3" y="318.0">j..</text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (10 samples, 1.60%)</title><rect x="509.2" y="291.0" width="18.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.2" y="302.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (9 samples, 1.44%)</title><rect x="511.1" y="275.0" width="17.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.1" y="286.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (8 samples, 1.28%)</title><rect x="511.1" y="259.0" width="15.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="514.1" y="270.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (8 samples, 1.28%)</title><rect x="511.1" y="243.0" width="15.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="514.1" y="254.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (7 samples, 1.12%)</title><rect x="513.0" y="227.0" width="13.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="516.0" y="238.0"></text>
</g>
<g>
<title>writeBytes (7 samples, 1.12%)</title><rect x="513.0" y="211.0" width="13.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="516.0" y="222.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.16%)</title><rect x="514.9" y="195.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="517.9" y="206.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.16%)</title><rect x="516.8" y="195.0" width="1.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="519.8" y="206.0"></text>
</g>
<g>
<title>jni_GetArrayLength (1 samples, 0.16%)</title><rect x="518.7" y="195.0" width="1.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="521.7" y="206.0"></text>
</g>
<g>
<title>jni_GetObjectField (3 samples, 0.48%)</title><rect x="520.6" y="195.0" width="5.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="523.6" y="206.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.16%)</title><rect x="522.5" y="179.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="525.5" y="190.0"></text>
</g>
<g>
<title>java_lang_ref_Reference::is_referent_field(oopDesc*, long) (1 samples, 0.16%)</title><rect x="522.5" y="163.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="525.5" y="174.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.16%)</title><rect x="524.4" y="179.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="527.4" y="190.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.16%)</title><rect x="526.2" y="259.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="529.2" y="270.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (1 samples, 0.16%)</title><rect x="528.1" y="291.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="531.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.48%)</title><rect x="530.0" y="339.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="533.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.48%)</title><rect x="530.0" y="323.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="533.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.32%)</title><rect x="530.0" y="307.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="533.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.32%)</title><rect x="530.0" y="291.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="533.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.32%)</title><rect x="530.0" y="275.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="533.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.32%)</title><rect x="530.0" y="259.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="533.0" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.32%)</title><rect x="530.0" y="243.0" width="3.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="533.0" y="254.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.16%)</title><rect x="531.9" y="227.0" width="1.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="534.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.16%)</title><rect x="533.8" y="307.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="536.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.16%)</title><rect x="533.8" y="291.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="536.8" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (6 samples, 0.96%)</title><rect x="535.7" y="355.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="538.7" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (6 samples, 0.96%)</title><rect x="535.7" y="339.0" width="11.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="538.7" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (6 samples, 0.96%)</title><rect x="535.7" y="323.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="538.7" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.16%)</title><rect x="535.7" y="307.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="538.7" y="318.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.16%)</title><rect x="535.7" y="291.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="538.7" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.16%)</title><rect x="535.7" y="275.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="538.7" y="286.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.16%)</title><rect x="535.7" y="259.0" width="1.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="538.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.80%)</title><rect x="537.6" y="307.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="540.6" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.80%)</title><rect x="537.6" y="291.0" width="9.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="540.6" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.16%)</title><rect x="537.6" y="275.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="540.6" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.16%)</title><rect x="537.6" y="259.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.6" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.32%)</title><rect x="539.5" y="275.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="542.5" y="286.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.16%)</title><rect x="541.4" y="259.0" width="1.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="544.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.32%)</title><rect x="543.3" y="275.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="546.3" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (3 samples, 0.48%)</title><rect x="547.1" y="387.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="550.1" y="398.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.16%)</title><rect x="552.7" y="451.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="555.7" y="462.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.16%)</title><rect x="552.7" y="435.0" width="1.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="555.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (16 samples, 2.56%)</title><rect x="554.6" y="499.0" width="30.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.6" y="510.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (16 samples, 2.56%)</title><rect x="554.6" y="483.0" width="30.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="557.6" y="494.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.16%)</title><rect x="554.6" y="467.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.6" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.16%)</title><rect x="554.6" y="451.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="557.6" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.16%)</title><rect x="556.5" y="467.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="559.5" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="556.5" y="451.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (14 samples, 2.24%)</title><rect x="558.4" y="467.0" width="26.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="561.4" y="478.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (14 samples, 2.24%)</title><rect x="558.4" y="451.0" width="26.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="561.4" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (14 samples, 2.24%)</title><rect x="558.4" y="435.0" width="26.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="561.4" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 1.28%)</title><rect x="569.7" y="419.0" width="15.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="572.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.96%)</title><rect x="573.5" y="403.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.96%)</title><rect x="573.5" y="387.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.5" y="398.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.96%)</title><rect x="573.5" y="371.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.16%)</title><rect x="584.9" y="563.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="587.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.16%)</title><rect x="586.8" y="563.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="589.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.16%)</title><rect x="586.8" y="547.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="589.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.16%)</title><rect x="586.8" y="531.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="589.8" y="542.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.16%)</title><rect x="586.8" y="515.0" width="1.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="589.8" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 1.76%)</title><rect x="588.7" y="579.0" width="20.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="591.7" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (11 samples, 1.76%)</title><rect x="588.7" y="563.0" width="20.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="591.7" y="574.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.64%)</title><rect x="596.2" y="547.0" width="7.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="599.2" y="558.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.16%)</title><rect x="598.1" y="531.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="601.1" y="542.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.16%)</title><rect x="600.0" y="531.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="603.0" y="542.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.16%)</title><rect x="601.9" y="531.0" width="1.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="604.9" y="542.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.48%)</title><rect x="603.8" y="547.0" width="5.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="606.8" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=2842] (35 samples, 5.61%)</title><rect x="609.5" y="643.0" width="66.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="612.5" y="654.0">[NIO Se..</text>
</g>
<g>
<title>[deoptimization] (1 samples, 0.16%)</title><rect x="609.5" y="627.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="612.5" y="638.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.16%)</title><rect x="609.5" y="611.0" width="1.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="612.5" y="622.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (34 samples, 5.45%)</title><rect x="611.3" y="627.0" width="64.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="614.3" y="638.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.32%)</title><rect x="611.3" y="611.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="614.3" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.32%)</title><rect x="611.3" y="595.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="614.3" y="606.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.32%)</title><rect x="611.3" y="579.0" width="3.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="614.3" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (32 samples, 5.13%)</title><rect x="615.1" y="611.0" width="60.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="618.1" y="622.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (32 samples, 5.13%)</title><rect x="615.1" y="595.0" width="60.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.1" y="606.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (26 samples, 4.17%)</title><rect x="615.1" y="579.0" width="49.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="618.1" y="590.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (22 samples, 3.53%)</title><rect x="618.9" y="563.0" width="41.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="621.9" y="574.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (22 samples, 3.53%)</title><rect x="618.9" y="547.0" width="41.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="621.9" y="558.0">one..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (22 samples, 3.53%)</title><rect x="618.9" y="531.0" width="41.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.9" y="542.0">Req..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.32%)</title><rect x="618.9" y="515.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="621.9" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.16%)</title><rect x="620.8" y="499.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.8" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.16%)</title><rect x="620.8" y="483.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="623.8" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.16%)</title><rect x="620.8" y="467.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.8" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.16%)</title><rect x="620.8" y="451.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="623.8" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.16%)</title><rect x="620.8" y="435.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.8" y="446.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.16%)</title><rect x="620.8" y="419.0" width="1.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="623.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (20 samples, 3.21%)</title><rect x="622.7" y="515.0" width="37.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="625.7" y="526.0">ru/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (12 samples, 1.92%)</title><rect x="622.7" y="499.0" width="22.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="625.7" y="510.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (12 samples, 1.92%)</title><rect x="622.7" y="483.0" width="22.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="625.7" y="494.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (12 samples, 1.92%)</title><rect x="622.7" y="467.0" width="22.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.7" y="478.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (12 samples, 1.92%)</title><rect x="622.7" y="451.0" width="22.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="625.7" y="462.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (12 samples, 1.92%)</title><rect x="622.7" y="435.0" width="22.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.7" y="446.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (12 samples, 1.92%)</title><rect x="622.7" y="419.0" width="22.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="625.7" y="430.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (12 samples, 1.92%)</title><rect x="622.7" y="403.0" width="22.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="625.7" y="414.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (12 samples, 1.92%)</title><rect x="622.7" y="387.0" width="22.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.7" y="398.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (12 samples, 1.92%)</title><rect x="622.7" y="371.0" width="22.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="625.7" y="382.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (2 samples, 0.32%)</title><rect x="622.7" y="355.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="625.7" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (2 samples, 0.32%)</title><rect x="622.7" y="339.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="625.7" y="350.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (2 samples, 0.32%)</title><rect x="622.7" y="323.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="625.7" y="334.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (2 samples, 0.32%)</title><rect x="622.7" y="307.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.16%)</title><rect x="622.7" y="291.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="625.7" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.16%)</title><rect x="622.7" y="275.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.7" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.appendChars (1 samples, 0.16%)</title><rect x="622.7" y="259.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="625.7" y="270.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.16%)</title><rect x="622.7" y="243.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="625.7" y="254.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.16%)</title><rect x="624.6" y="291.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="627.6" y="302.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.16%)</title><rect x="624.6" y="275.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="627.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.16%)</title><rect x="624.6" y="259.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="627.6" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.16%)</title><rect x="624.6" y="243.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="627.6" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.16%)</title><rect x="624.6" y="227.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="627.6" y="238.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.16%)</title><rect x="624.6" y="211.0" width="1.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="627.6" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (7 samples, 1.12%)</title><rect x="626.5" y="355.0" width="13.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.5" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.flush (1 samples, 0.16%)</title><rect x="626.5" y="339.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="629.5" y="350.0"></text>
</g>
<g>
<title>java/io/PrintStream.flush (1 samples, 0.16%)</title><rect x="626.5" y="323.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="629.5" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (5 samples, 0.80%)</title><rect x="628.4" y="339.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.4" y="350.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (5 samples, 0.80%)</title><rect x="628.4" y="323.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="631.4" y="334.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (5 samples, 0.80%)</title><rect x="628.4" y="307.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="631.4" y="318.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (5 samples, 0.80%)</title><rect x="628.4" y="291.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="631.4" y="302.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (5 samples, 0.80%)</title><rect x="628.4" y="275.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="631.4" y="286.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (5 samples, 0.80%)</title><rect x="628.4" y="259.0" width="9.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="631.4" y="270.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (5 samples, 0.80%)</title><rect x="628.4" y="243.0" width="9.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.4" y="254.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (5 samples, 0.80%)</title><rect x="628.4" y="227.0" width="9.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="631.4" y="238.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.16%)</title><rect x="630.3" y="211.0" width="1.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="633.3" y="222.0"></text>
</g>
<g>
<title>writeBytes (3 samples, 0.48%)</title><rect x="632.1" y="211.0" width="5.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="635.1" y="222.0"></text>
</g>
<g>
<title>__libc_write (3 samples, 0.48%)</title><rect x="632.1" y="195.0" width="5.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="635.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.16%)</title><rect x="637.8" y="339.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.16%)</title><rect x="637.8" y="323.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.16%)</title><rect x="637.8" y="307.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="640.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.16%)</title><rect x="637.8" y="291.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.8" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (3 samples, 0.48%)</title><rect x="639.7" y="355.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.7" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (3 samples, 0.48%)</title><rect x="639.7" y="339.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.7" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (3 samples, 0.48%)</title><rect x="639.7" y="323.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.7" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.16%)</title><rect x="639.7" y="307.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="642.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.32%)</title><rect x="641.6" y="307.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="644.6" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.32%)</title><rect x="641.6" y="291.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="644.6" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.16%)</title><rect x="641.6" y="275.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="644.6" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.16%)</title><rect x="641.6" y="259.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="644.6" y="270.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.16%)</title><rect x="641.6" y="243.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="644.6" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.16%)</title><rect x="643.5" y="275.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="646.5" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.16%)</title><rect x="645.4" y="499.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="648.4" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.16%)</title><rect x="645.4" y="483.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="648.4" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="645.4" y="467.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="648.4" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="645.4" y="451.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="648.4" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="645.4" y="435.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="648.4" y="446.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.16%)</title><rect x="645.4" y="419.0" width="1.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="648.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (7 samples, 1.12%)</title><rect x="647.3" y="499.0" width="13.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="650.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (7 samples, 1.12%)</title><rect x="647.3" y="483.0" width="13.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (7 samples, 1.12%)</title><rect x="647.3" y="467.0" width="13.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (7 samples, 1.12%)</title><rect x="647.3" y="451.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="650.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (7 samples, 1.12%)</title><rect x="647.3" y="435.0" width="13.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.96%)</title><rect x="649.2" y="419.0" width="11.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="652.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.96%)</title><rect x="649.2" y="403.0" width="11.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.2" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.96%)</title><rect x="649.2" y="387.0" width="11.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.2" y="398.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.96%)</title><rect x="649.2" y="371.0" width="11.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="652.2" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.16%)</title><rect x="656.7" y="355.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="659.7" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.16%)</title><rect x="656.7" y="339.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="659.7" y="350.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.16%)</title><rect x="658.6" y="355.0" width="1.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="661.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.16%)</title><rect x="660.5" y="563.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.16%)</title><rect x="660.5" y="547.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="663.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.16%)</title><rect x="660.5" y="531.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="663.5" y="542.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.16%)</title><rect x="660.5" y="515.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="663.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.16%)</title><rect x="660.5" y="499.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="663.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.16%)</title><rect x="662.4" y="563.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="665.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.16%)</title><rect x="662.4" y="547.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.16%)</title><rect x="662.4" y="531.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="665.4" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 0.96%)</title><rect x="664.3" y="579.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="667.3" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 0.96%)</title><rect x="664.3" y="563.0" width="11.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="667.3" y="574.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.64%)</title><rect x="664.3" y="547.0" width="7.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="667.3" y="558.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.32%)</title><rect x="664.3" y="531.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="667.3" y="542.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.16%)</title><rect x="668.1" y="531.0" width="1.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="671.1" y="542.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.16%)</title><rect x="670.0" y="531.0" width="1.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="673.0" y="542.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.16%)</title><rect x="670.0" y="515.0" width="1.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="673.0" y="526.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.32%)</title><rect x="671.9" y="547.0" width="3.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="674.9" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=2843] (73 samples, 11.70%)</title><rect x="675.6" y="643.0" width="138.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="678.6" y="654.0">[NIO Selector #4 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (73 samples, 11.70%)</title><rect x="675.6" y="627.0" width="138.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="678.6" y="638.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 1.12%)</title><rect x="675.6" y="611.0" width="13.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="678.6" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.16%)</title><rect x="677.5" y="595.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="680.5" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.16%)</title><rect x="677.5" y="579.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.5" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 0.80%)</title><rect x="679.4" y="595.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.4" y="606.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.80%)</title><rect x="679.4" y="579.0" width="9.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="682.4" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (66 samples, 10.58%)</title><rect x="688.9" y="611.0" width="124.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.9" y="622.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (66 samples, 10.58%)</title><rect x="688.9" y="595.0" width="124.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.9" y="606.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (58 samples, 9.29%)</title><rect x="688.9" y="579.0" width="109.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.9" y="590.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (50 samples, 8.01%)</title><rect x="694.6" y="563.0" width="94.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="697.6" y="574.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (50 samples, 8.01%)</title><rect x="694.6" y="547.0" width="94.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.6" y="558.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (49 samples, 7.85%)</title><rect x="694.6" y="531.0" width="92.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="697.6" y="542.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 1.60%)</title><rect x="694.6" y="515.0" width="18.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="697.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.16%)</title><rect x="696.4" y="499.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="699.4" y="510.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.16%)</title><rect x="696.4" y="483.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="699.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.16%)</title><rect x="696.4" y="467.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="699.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.96%)</title><rect x="698.3" y="499.0" width="11.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="701.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.32%)</title><rect x="698.3" y="483.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.3" y="494.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.16%)</title><rect x="700.2" y="467.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="703.2" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.16%)</title><rect x="700.2" y="451.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="703.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.16%)</title><rect x="700.2" y="435.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="703.2" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.64%)</title><rect x="702.1" y="483.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.1" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.&lt;init&gt; (1 samples, 0.16%)</title><rect x="702.1" y="467.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.1" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session$QueueItem.&lt;init&gt; (1 samples, 0.16%)</title><rect x="702.1" y="451.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="705.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.16%)</title><rect x="702.1" y="435.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="705.1" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.48%)</title><rect x="704.0" y="467.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="707.0" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.48%)</title><rect x="704.0" y="451.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.0" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.48%)</title><rect x="704.0" y="435.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="707.0" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.32%)</title><rect x="704.0" y="419.0" width="3.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="707.0" y="430.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.16%)</title><rect x="704.0" y="403.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="707.0" y="414.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.16%)</title><rect x="705.9" y="403.0" width="1.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="708.9" y="414.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.16%)</title><rect x="705.9" y="387.0" width="1.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="708.9" y="398.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.16%)</title><rect x="707.8" y="419.0" width="1.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="710.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.32%)</title><rect x="709.7" y="499.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="712.7" y="510.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.16%)</title><rect x="711.6" y="483.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="714.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.16%)</title><rect x="711.6" y="467.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="714.6" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.32%)</title><rect x="713.5" y="515.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="716.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.32%)</title><rect x="713.5" y="499.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="716.5" y="510.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.32%)</title><rect x="713.5" y="483.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.5" y="494.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.32%)</title><rect x="713.5" y="467.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="716.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.32%)</title><rect x="713.5" y="451.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="716.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.32%)</title><rect x="713.5" y="435.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="716.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (37 samples, 5.93%)</title><rect x="717.2" y="515.0" width="70.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="720.2" y="526.0">ru/mail..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (21 samples, 3.37%)</title><rect x="717.2" y="499.0" width="39.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="720.2" y="510.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (19 samples, 3.04%)</title><rect x="719.1" y="483.0" width="36.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="722.1" y="494.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (19 samples, 3.04%)</title><rect x="719.1" y="467.0" width="36.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="722.1" y="478.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (18 samples, 2.88%)</title><rect x="721.0" y="451.0" width="34.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.0" y="462.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (18 samples, 2.88%)</title><rect x="721.0" y="435.0" width="34.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="724.0" y="446.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (18 samples, 2.88%)</title><rect x="721.0" y="419.0" width="34.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="724.0" y="430.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (18 samples, 2.88%)</title><rect x="721.0" y="403.0" width="34.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="724.0" y="414.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (16 samples, 2.56%)</title><rect x="721.0" y="387.0" width="30.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="724.0" y="398.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (16 samples, 2.56%)</title><rect x="721.0" y="371.0" width="30.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="724.0" y="382.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (5 samples, 0.80%)</title><rect x="721.0" y="355.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.0" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (5 samples, 0.80%)</title><rect x="721.0" y="339.0" width="9.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.0" y="350.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (5 samples, 0.80%)</title><rect x="721.0" y="323.0" width="9.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.0" y="334.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (5 samples, 0.80%)</title><rect x="721.0" y="307.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="724.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.32%)</title><rect x="721.0" y="291.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="724.0" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.16%)</title><rect x="721.0" y="275.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.0" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.appendChars (1 samples, 0.16%)</title><rect x="721.0" y="259.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="724.0" y="270.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.16%)</title><rect x="721.0" y="243.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.0" y="254.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.16%)</title><rect x="722.9" y="275.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.32%)</title><rect x="724.8" y="291.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="727.8" y="302.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.16%)</title><rect x="728.6" y="291.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.6" y="302.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.16%)</title><rect x="728.6" y="275.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.16%)</title><rect x="728.6" y="259.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="731.6" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.16%)</title><rect x="728.6" y="243.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="731.6" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.16%)</title><rect x="728.6" y="227.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="731.6" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (10 samples, 1.60%)</title><rect x="730.5" y="355.0" width="18.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.5" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (8 samples, 1.28%)</title><rect x="730.5" y="339.0" width="15.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="733.5" y="350.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (8 samples, 1.28%)</title><rect x="730.5" y="323.0" width="15.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.5" y="334.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (8 samples, 1.28%)</title><rect x="730.5" y="307.0" width="15.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.5" y="318.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (8 samples, 1.28%)</title><rect x="730.5" y="291.0" width="15.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.5" y="302.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (8 samples, 1.28%)</title><rect x="730.5" y="275.0" width="15.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.5" y="286.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (8 samples, 1.28%)</title><rect x="730.5" y="259.0" width="15.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.5" y="270.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (8 samples, 1.28%)</title><rect x="730.5" y="243.0" width="15.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.5" y="254.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (8 samples, 1.28%)</title><rect x="730.5" y="227.0" width="15.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="733.5" y="238.0"></text>
</g>
<g>
<title>writeBytes (7 samples, 1.12%)</title><rect x="732.4" y="211.0" width="13.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="735.4" y="222.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.16%)</title><rect x="732.4" y="195.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="735.4" y="206.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.16%)</title><rect x="734.3" y="195.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="737.3" y="206.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.32%)</title><rect x="736.2" y="195.0" width="3.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="739.2" y="206.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.16%)</title><rect x="739.9" y="195.0" width="1.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="742.9" y="206.0"></text>
</g>
<g>
<title>jni_GetArrayLength (2 samples, 0.32%)</title><rect x="741.8" y="195.0" width="3.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="744.8" y="206.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.16%)</title><rect x="741.8" y="179.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="744.8" y="190.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.16%)</title><rect x="743.7" y="179.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="746.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.32%)</title><rect x="745.6" y="339.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="748.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.32%)</title><rect x="745.6" y="323.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="748.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.32%)</title><rect x="745.6" y="307.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="748.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.32%)</title><rect x="745.6" y="291.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="748.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.32%)</title><rect x="745.6" y="275.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="748.6" y="286.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.16%)</title><rect x="745.6" y="259.0" width="1.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="748.6" y="270.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.16%)</title><rect x="745.6" y="243.0" width="1.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="748.6" y="254.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.16%)</title><rect x="747.5" y="259.0" width="1.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="750.5" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.16%)</title><rect x="749.4" y="355.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="752.4" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.16%)</title><rect x="749.4" y="339.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="752.4" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.16%)</title><rect x="749.4" y="323.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="752.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.16%)</title><rect x="749.4" y="307.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="752.4" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.16%)</title><rect x="749.4" y="291.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="752.4" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.16%)</title><rect x="749.4" y="275.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="752.4" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.32%)</title><rect x="751.3" y="387.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.3" y="398.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.16%)</title><rect x="755.1" y="483.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="758.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (16 samples, 2.56%)</title><rect x="757.0" y="499.0" width="30.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="760.0" y="510.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (16 samples, 2.56%)</title><rect x="757.0" y="483.0" width="30.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="760.0" y="494.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.16%)</title><rect x="757.0" y="467.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="760.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.16%)</title><rect x="757.0" y="451.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="760.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.16%)</title><rect x="757.0" y="435.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="760.0" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.16%)</title><rect x="757.0" y="419.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (15 samples, 2.40%)</title><rect x="758.8" y="467.0" width="28.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="761.8" y="478.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.16%)</title><rect x="758.8" y="451.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="761.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (14 samples, 2.24%)</title><rect x="760.7" y="451.0" width="26.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="763.7" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (14 samples, 2.24%)</title><rect x="760.7" y="435.0" width="26.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.7" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.96%)</title><rect x="775.9" y="419.0" width="11.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.80%)</title><rect x="777.8" y="403.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.80%)</title><rect x="777.8" y="387.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="780.8" y="398.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.80%)</title><rect x="777.8" y="371.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="780.8" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.16%)</title><rect x="785.3" y="355.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="788.3" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.16%)</title><rect x="785.3" y="339.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="788.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.16%)</title><rect x="787.2" y="531.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.2" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.16%)</title><rect x="787.2" y="515.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="790.2" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.16%)</title><rect x="787.2" y="499.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.2" y="510.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.16%)</title><rect x="787.2" y="483.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.16%)</title><rect x="787.2" y="467.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="790.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.64%)</title><rect x="789.1" y="563.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="792.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.16%)</title><rect x="789.1" y="547.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="792.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.16%)</title><rect x="789.1" y="531.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="792.1" y="542.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.16%)</title><rect x="789.1" y="515.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="792.1" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.16%)</title><rect x="789.1" y="499.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="792.1" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.48%)</title><rect x="791.0" y="547.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="794.0" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.16%)</title><rect x="796.7" y="563.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="799.7" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.16%)</title><rect x="796.7" y="547.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="799.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.16%)</title><rect x="796.7" y="531.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="799.7" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 1.28%)</title><rect x="798.6" y="579.0" width="15.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="801.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 1.12%)</title><rect x="800.4" y="563.0" width="13.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="803.4" y="574.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.32%)</title><rect x="806.1" y="547.0" width="3.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="809.1" y="558.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.16%)</title><rect x="806.1" y="531.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="809.1" y="542.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.16%)</title><rect x="808.0" y="531.0" width="1.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="811.0" y="542.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.32%)</title><rect x="809.9" y="547.0" width="3.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="812.9" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=2844] (70 samples, 11.22%)</title><rect x="813.7" y="643.0" width="132.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="816.7" y="654.0">[NIO Selector #5..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (70 samples, 11.22%)</title><rect x="813.7" y="627.0" width="132.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="816.7" y="638.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 0.96%)</title><rect x="813.7" y="611.0" width="11.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.7" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 0.96%)</title><rect x="813.7" y="595.0" width="11.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="816.7" y="606.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.48%)</title><rect x="817.5" y="579.0" width="5.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="820.5" y="590.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.16%)</title><rect x="823.1" y="579.0" width="1.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="826.1" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (64 samples, 10.26%)</title><rect x="825.0" y="611.0" width="121.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="828.0" y="622.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (64 samples, 10.26%)</title><rect x="825.0" y="595.0" width="121.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="828.0" y="606.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (61 samples, 9.78%)</title><rect x="825.0" y="579.0" width="115.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="828.0" y="590.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (49 samples, 7.85%)</title><rect x="832.6" y="563.0" width="92.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.6" y="574.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (49 samples, 7.85%)</title><rect x="832.6" y="547.0" width="92.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.6" y="558.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (48 samples, 7.69%)</title><rect x="832.6" y="531.0" width="90.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.6" y="542.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.96%)</title><rect x="832.6" y="515.0" width="11.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.16%)</title><rect x="832.6" y="499.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="835.6" y="510.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.16%)</title><rect x="832.6" y="483.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="835.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.16%)</title><rect x="832.6" y="467.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.6" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.16%)</title><rect x="834.5" y="499.0" width="1.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="837.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.64%)</title><rect x="836.4" y="499.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="839.4" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.16%)</title><rect x="836.4" y="483.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="839.4" y="494.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.16%)</title><rect x="836.4" y="467.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="839.4" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.16%)</title><rect x="836.4" y="451.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="839.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.16%)</title><rect x="836.4" y="435.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="839.4" y="446.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.16%)</title><rect x="836.4" y="419.0" width="1.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="839.4" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.48%)</title><rect x="838.3" y="483.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="841.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.48%)</title><rect x="838.3" y="467.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="841.3" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.48%)</title><rect x="838.3" y="451.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="841.3" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.32%)</title><rect x="840.2" y="435.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="843.2" y="446.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.32%)</title><rect x="840.2" y="419.0" width="3.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="843.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.32%)</title><rect x="843.9" y="515.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="846.9" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.32%)</title><rect x="843.9" y="499.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="846.9" y="510.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.16%)</title><rect x="843.9" y="483.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="846.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.16%)</title><rect x="843.9" y="467.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="846.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.16%)</title><rect x="845.8" y="483.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="848.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.16%)</title><rect x="845.8" y="467.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.16%)</title><rect x="845.8" y="451.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="848.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (40 samples, 6.41%)</title><rect x="847.7" y="515.0" width="75.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.7" y="526.0">ru/mail/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (30 samples, 4.81%)</title><rect x="847.7" y="499.0" width="56.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="850.7" y="510.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (30 samples, 4.81%)</title><rect x="847.7" y="483.0" width="56.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="850.7" y="494.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (29 samples, 4.65%)</title><rect x="847.7" y="467.0" width="54.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="850.7" y="478.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (28 samples, 4.49%)</title><rect x="847.7" y="451.0" width="53.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.7" y="462.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (28 samples, 4.49%)</title><rect x="847.7" y="435.0" width="53.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.7" y="446.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (28 samples, 4.49%)</title><rect x="847.7" y="419.0" width="53.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="850.7" y="430.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (28 samples, 4.49%)</title><rect x="847.7" y="403.0" width="53.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.7" y="414.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (24 samples, 3.85%)</title><rect x="847.7" y="387.0" width="45.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.7" y="398.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (24 samples, 3.85%)</title><rect x="847.7" y="371.0" width="45.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="850.7" y="382.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (2 samples, 0.32%)</title><rect x="847.7" y="355.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="850.7" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (2 samples, 0.32%)</title><rect x="847.7" y="339.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.7" y="350.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (2 samples, 0.32%)</title><rect x="847.7" y="323.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="850.7" y="334.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (2 samples, 0.32%)</title><rect x="847.7" y="307.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.16%)</title><rect x="847.7" y="291.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.7" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.16%)</title><rect x="847.7" y="275.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.7" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.appendChars (1 samples, 0.16%)</title><rect x="847.7" y="259.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="850.7" y="270.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.16%)</title><rect x="847.7" y="243.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.7" y="254.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.16%)</title><rect x="849.6" y="291.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="852.6" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (12 samples, 1.92%)</title><rect x="851.5" y="355.0" width="22.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="854.5" y="366.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.flush (1 samples, 0.16%)</title><rect x="851.5" y="339.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="854.5" y="350.0"></text>
</g>
<g>
<title>java/io/PrintStream.flush (1 samples, 0.16%)</title><rect x="851.5" y="323.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="854.5" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.16%)</title><rect x="851.5" y="307.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="854.5" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (9 samples, 1.44%)</title><rect x="853.4" y="339.0" width="17.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.4" y="350.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (9 samples, 1.44%)</title><rect x="853.4" y="323.0" width="17.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="856.4" y="334.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (9 samples, 1.44%)</title><rect x="853.4" y="307.0" width="17.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="856.4" y="318.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (9 samples, 1.44%)</title><rect x="853.4" y="291.0" width="17.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.4" y="302.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (9 samples, 1.44%)</title><rect x="853.4" y="275.0" width="17.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="856.4" y="286.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (9 samples, 1.44%)</title><rect x="853.4" y="259.0" width="17.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="856.4" y="270.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (9 samples, 1.44%)</title><rect x="853.4" y="243.0" width="17.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="856.4" y="254.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (9 samples, 1.44%)</title><rect x="853.4" y="227.0" width="17.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="856.4" y="238.0"></text>
</g>
<g>
<title>writeBytes (9 samples, 1.44%)</title><rect x="853.4" y="211.0" width="17.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="856.4" y="222.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.16%)</title><rect x="853.4" y="195.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="856.4" y="206.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.32%)</title><rect x="855.3" y="195.0" width="3.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="858.3" y="206.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.16%)</title><rect x="859.1" y="195.0" width="1.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="862.1" y="206.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.16%)</title><rect x="859.1" y="179.0" width="1.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="862.1" y="190.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.16%)</title><rect x="859.1" y="163.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="862.1" y="174.0"></text>
</g>
<g>
<title>jni_GetObjectField (4 samples, 0.64%)</title><rect x="861.0" y="195.0" width="7.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="864.0" y="206.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (2 samples, 0.32%)</title><rect x="862.9" y="179.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="865.9" y="190.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.16%)</title><rect x="866.6" y="179.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="869.6" y="190.0"></text>
</g>
<g>
<title>java_lang_ref_Reference::is_referent_field(oopDesc*, long) (1 samples, 0.16%)</title><rect x="866.6" y="163.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="869.6" y="174.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.16%)</title><rect x="868.5" y="195.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="871.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.32%)</title><rect x="870.4" y="339.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.32%)</title><rect x="870.4" y="323.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="873.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.32%)</title><rect x="870.4" y="307.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="873.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.16%)</title><rect x="870.4" y="291.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.16%)</title><rect x="870.4" y="275.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="873.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.16%)</title><rect x="870.4" y="259.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="873.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (1 samples, 0.16%)</title><rect x="870.4" y="243.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="873.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.16%)</title><rect x="872.3" y="291.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="875.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.16%)</title><rect x="872.3" y="275.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="875.3" y="286.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.16%)</title><rect x="872.3" y="259.0" width="1.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="875.3" y="270.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.16%)</title><rect x="872.3" y="243.0" width="1.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="875.3" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (10 samples, 1.60%)</title><rect x="874.2" y="355.0" width="18.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="877.2" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (10 samples, 1.60%)</title><rect x="874.2" y="339.0" width="18.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="877.2" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (10 samples, 1.60%)</title><rect x="874.2" y="323.0" width="18.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="877.2" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (5 samples, 0.80%)</title><rect x="874.2" y="307.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="877.2" y="318.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.16%)</title><rect x="879.9" y="291.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="882.9" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.16%)</title><rect x="879.9" y="275.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="882.9" y="286.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.16%)</title><rect x="879.9" y="259.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="882.9" y="270.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.16%)</title><rect x="879.9" y="243.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="882.9" y="254.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.16%)</title><rect x="881.8" y="291.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="884.8" y="302.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.16%)</title><rect x="881.8" y="275.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.8" y="286.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.16%)</title><rect x="881.8" y="259.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="884.8" y="270.0"></text>
</g>
<g>
<title>java/util/Calendar.setTime (1 samples, 0.16%)</title><rect x="881.8" y="243.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="884.8" y="254.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (1 samples, 0.16%)</title><rect x="881.8" y="227.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="884.8" y="238.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 0.16%)</title><rect x="881.8" y="211.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="884.8" y="222.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 0.16%)</title><rect x="881.8" y="195.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.8" y="206.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getOffsets (1 samples, 0.16%)</title><rect x="881.8" y="179.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="884.8" y="190.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getOffsets (1 samples, 0.16%)</title><rect x="881.8" y="163.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.8" y="174.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.80%)</title><rect x="883.7" y="307.0" width="9.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="886.7" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.80%)</title><rect x="883.7" y="291.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="886.7" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.16%)</title><rect x="883.7" y="275.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="886.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.16%)</title><rect x="883.7" y="259.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="886.7" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.32%)</title><rect x="885.5" y="275.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="888.5" y="286.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.16%)</title><rect x="887.4" y="259.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="890.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.32%)</title><rect x="889.3" y="275.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="892.3" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (4 samples, 0.64%)</title><rect x="893.1" y="387.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="896.1" y="398.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.16%)</title><rect x="900.7" y="451.0" width="1.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="903.7" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.16%)</title><rect x="902.6" y="467.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="905.6" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.32%)</title><rect x="904.5" y="499.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.5" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.32%)</title><rect x="904.5" y="483.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="907.5" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.32%)</title><rect x="904.5" y="467.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="907.5" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.32%)</title><rect x="904.5" y="451.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="907.5" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.16%)</title><rect x="904.5" y="435.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.16%)</title><rect x="906.3" y="435.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="909.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (8 samples, 1.28%)</title><rect x="908.2" y="499.0" width="15.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="911.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (8 samples, 1.28%)</title><rect x="908.2" y="483.0" width="15.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="911.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (8 samples, 1.28%)</title><rect x="908.2" y="467.0" width="15.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="911.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (8 samples, 1.28%)</title><rect x="908.2" y="451.0" width="15.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="911.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (8 samples, 1.28%)</title><rect x="908.2" y="435.0" width="15.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="911.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 1.12%)</title><rect x="910.1" y="419.0" width="13.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.1" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.64%)</title><rect x="915.8" y="403.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="918.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.64%)</title><rect x="915.8" y="387.0" width="7.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="918.8" y="398.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.64%)</title><rect x="915.8" y="371.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="918.8" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.32%)</title><rect x="919.6" y="355.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="922.6" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.32%)</title><rect x="919.6" y="339.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="922.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.16%)</title><rect x="923.4" y="531.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="926.4" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.16%)</title><rect x="923.4" y="515.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="926.4" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.16%)</title><rect x="923.4" y="499.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="926.4" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 1.12%)</title><rect x="925.3" y="563.0" width="13.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="928.3" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.32%)</title><rect x="930.9" y="547.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="933.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.32%)</title><rect x="930.9" y="531.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="933.9" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.32%)</title><rect x="934.7" y="547.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="937.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.32%)</title><rect x="934.7" y="531.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="937.7" y="542.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.32%)</title><rect x="934.7" y="515.0" width="3.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="937.7" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.16%)</title><rect x="938.5" y="563.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="941.5" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.16%)</title><rect x="938.5" y="547.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="941.5" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (3 samples, 0.48%)</title><rect x="940.4" y="579.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="943.4" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.48%)</title><rect x="940.4" y="563.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="943.4" y="574.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.48%)</title><rect x="940.4" y="547.0" width="5.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="943.4" y="558.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.16%)</title><rect x="940.4" y="531.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="943.4" y="542.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.16%)</title><rect x="942.3" y="531.0" width="1.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="945.3" y="542.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.16%)</title><rect x="942.3" y="515.0" width="1.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="945.3" y="526.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.16%)</title><rect x="944.2" y="531.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="947.2" y="542.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=2845] (54 samples, 8.65%)</title><rect x="946.1" y="643.0" width="102.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="949.1" y="654.0">[NIO Selecto..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (54 samples, 8.65%)</title><rect x="946.1" y="627.0" width="102.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="949.1" y="638.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 0.80%)</title><rect x="946.1" y="611.0" width="9.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="949.1" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 0.80%)</title><rect x="946.1" y="595.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="949.1" y="606.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.16%)</title><rect x="946.1" y="579.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="949.1" y="590.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.16%)</title><rect x="947.9" y="579.0" width="1.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="950.9" y="590.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.48%)</title><rect x="949.8" y="579.0" width="5.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="952.8" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (49 samples, 7.85%)</title><rect x="955.5" y="611.0" width="92.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="958.5" y="622.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (49 samples, 7.85%)</title><rect x="955.5" y="595.0" width="92.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="958.5" y="606.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (42 samples, 6.73%)</title><rect x="955.5" y="579.0" width="79.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="958.5" y="590.0">one/nio/h..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.16%)</title><rect x="955.5" y="563.0" width="1.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="958.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (38 samples, 6.09%)</title><rect x="957.4" y="563.0" width="71.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.4" y="574.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (38 samples, 6.09%)</title><rect x="957.4" y="547.0" width="71.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="960.4" y="558.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (36 samples, 5.77%)</title><rect x="957.4" y="531.0" width="68.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="960.4" y="542.0">Request..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (11 samples, 1.76%)</title><rect x="957.4" y="515.0" width="20.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.4" y="526.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.32%)</title><rect x="957.4" y="499.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="960.4" y="510.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.32%)</title><rect x="957.4" y="483.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="960.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.32%)</title><rect x="957.4" y="467.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9 samples, 1.44%)</title><rect x="961.2" y="499.0" width="17.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="964.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.32%)</title><rect x="961.2" y="483.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="964.2" y="494.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.32%)</title><rect x="961.2" y="467.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="964.2" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.32%)</title><rect x="961.2" y="451.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="964.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.32%)</title><rect x="961.2" y="435.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="964.2" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 1.12%)</title><rect x="965.0" y="483.0" width="13.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="968.0" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.&lt;init&gt; (1 samples, 0.16%)</title><rect x="965.0" y="467.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="968.0" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session$QueueItem.&lt;init&gt; (1 samples, 0.16%)</title><rect x="965.0" y="451.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="968.0" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.96%)</title><rect x="966.9" y="467.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="969.9" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 0.96%)</title><rect x="966.9" y="451.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="969.9" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 0.80%)</title><rect x="968.8" y="435.0" width="9.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="971.8" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.16%)</title><rect x="968.8" y="419.0" width="1.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="971.8" y="430.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.16%)</title><rect x="968.8" y="403.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="971.8" y="414.0"></text>
</g>
<g>
<title>__libc_send (3 samples, 0.48%)</title><rect x="970.6" y="419.0" width="5.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="973.6" y="430.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.16%)</title><rect x="976.3" y="419.0" width="1.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="979.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.32%)</title><rect x="978.2" y="515.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="981.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.32%)</title><rect x="978.2" y="499.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="981.2" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.16%)</title><rect x="978.2" y="483.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.16%)</title><rect x="978.2" y="467.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.2" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.16%)</title><rect x="978.2" y="451.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="981.2" y="462.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.16%)</title><rect x="978.2" y="435.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="981.2" y="446.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.16%)</title><rect x="978.2" y="419.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="981.2" y="430.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.16%)</title><rect x="978.2" y="403.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="981.2" y="414.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.16%)</title><rect x="978.2" y="387.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="981.2" y="398.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.16%)</title><rect x="978.2" y="371.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="981.2" y="382.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.16%)</title><rect x="978.2" y="355.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="981.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.16%)</title><rect x="980.1" y="483.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="983.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (23 samples, 3.69%)</title><rect x="982.0" y="515.0" width="43.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="985.0" y="526.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (13 samples, 2.08%)</title><rect x="982.0" y="499.0" width="24.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="985.0" y="510.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (12 samples, 1.92%)</title><rect x="982.0" y="483.0" width="22.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="985.0" y="494.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (12 samples, 1.92%)</title><rect x="982.0" y="467.0" width="22.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="985.0" y="478.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (12 samples, 1.92%)</title><rect x="982.0" y="451.0" width="22.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="985.0" y="462.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (12 samples, 1.92%)</title><rect x="982.0" y="435.0" width="22.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="985.0" y="446.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (12 samples, 1.92%)</title><rect x="982.0" y="419.0" width="22.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="985.0" y="430.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (12 samples, 1.92%)</title><rect x="982.0" y="403.0" width="22.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="985.0" y="414.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (12 samples, 1.92%)</title><rect x="982.0" y="387.0" width="22.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="985.0" y="398.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (12 samples, 1.92%)</title><rect x="982.0" y="371.0" width="22.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="985.0" y="382.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (10 samples, 1.60%)</title><rect x="982.0" y="355.0" width="18.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="985.0" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (5 samples, 0.80%)</title><rect x="982.0" y="339.0" width="9.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="985.0" y="350.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (5 samples, 0.80%)</title><rect x="982.0" y="323.0" width="9.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="985.0" y="334.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (5 samples, 0.80%)</title><rect x="982.0" y="307.0" width="9.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="985.0" y="318.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (5 samples, 0.80%)</title><rect x="982.0" y="291.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="985.0" y="302.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (4 samples, 0.64%)</title><rect x="983.9" y="275.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="986.9" y="286.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (4 samples, 0.64%)</title><rect x="983.9" y="259.0" width="7.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="986.9" y="270.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (4 samples, 0.64%)</title><rect x="983.9" y="243.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="986.9" y="254.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (4 samples, 0.64%)</title><rect x="983.9" y="227.0" width="7.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="986.9" y="238.0"></text>
</g>
<g>
<title>writeBytes (4 samples, 0.64%)</title><rect x="983.9" y="211.0" width="7.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="986.9" y="222.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.16%)</title><rect x="985.8" y="195.0" width="1.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="988.8" y="206.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.16%)</title><rect x="987.7" y="195.0" width="1.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="990.7" y="206.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.16%)</title><rect x="989.6" y="195.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="992.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.48%)</title><rect x="991.4" y="339.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="994.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.48%)</title><rect x="991.4" y="323.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="994.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.16%)</title><rect x="991.4" y="307.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="994.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.16%)</title><rect x="991.4" y="291.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="994.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.16%)</title><rect x="991.4" y="275.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="994.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.16%)</title><rect x="991.4" y="259.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="994.4" y="270.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.16%)</title><rect x="991.4" y="243.0" width="1.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="994.4" y="254.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.16%)</title><rect x="991.4" y="227.0" width="1.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="994.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.32%)</title><rect x="993.3" y="307.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="996.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.32%)</title><rect x="993.3" y="291.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="996.3" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.16%)</title><rect x="995.2" y="275.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="998.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.32%)</title><rect x="997.1" y="339.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1000.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.32%)</title><rect x="997.1" y="323.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1000.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.32%)</title><rect x="997.1" y="307.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1000.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.32%)</title><rect x="997.1" y="291.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1000.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.32%)</title><rect x="997.1" y="275.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1000.1" y="286.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.16%)</title><rect x="997.1" y="259.0" width="1.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1000.1" y="270.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.16%)</title><rect x="997.1" y="243.0" width="1.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1000.1" y="254.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.16%)</title><rect x="999.0" y="259.0" width="1.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1002.0" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.32%)</title><rect x="1000.9" y="355.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1003.9" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.32%)</title><rect x="1000.9" y="339.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1003.9" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.32%)</title><rect x="1000.9" y="323.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1003.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.32%)</title><rect x="1000.9" y="307.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1003.9" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.32%)</title><rect x="1000.9" y="291.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1003.9" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.32%)</title><rect x="1000.9" y="275.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1003.9" y="286.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.16%)</title><rect x="1004.7" y="483.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1007.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (10 samples, 1.60%)</title><rect x="1006.6" y="499.0" width="18.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1009.6" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.16%)</title><rect x="1006.6" y="483.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1009.6" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.16%)</title><rect x="1006.6" y="467.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1009.6" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="1006.6" y="451.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1009.6" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="1006.6" y="435.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1009.6" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="1006.6" y="419.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1009.6" y="430.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.16%)</title><rect x="1006.6" y="403.0" width="1.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1009.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (9 samples, 1.44%)</title><rect x="1008.5" y="483.0" width="17.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1011.5" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.16%)</title><rect x="1008.5" y="467.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1011.5" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="1008.5" y="451.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1011.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (8 samples, 1.28%)</title><rect x="1010.4" y="467.0" width="15.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1013.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (8 samples, 1.28%)</title><rect x="1010.4" y="451.0" width="15.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1013.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (8 samples, 1.28%)</title><rect x="1010.4" y="435.0" width="15.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1013.4" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.16%)</title><rect x="1014.1" y="419.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1017.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.80%)</title><rect x="1016.0" y="419.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1019.0" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.16%)</title><rect x="1023.6" y="403.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1026.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.16%)</title><rect x="1023.6" y="387.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1026.6" y="398.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.16%)</title><rect x="1023.6" y="371.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1026.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.32%)</title><rect x="1025.5" y="531.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1028.5" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.32%)</title><rect x="1025.5" y="515.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1028.5" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.32%)</title><rect x="1025.5" y="499.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1028.5" y="510.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.32%)</title><rect x="1025.5" y="483.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1028.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.32%)</title><rect x="1025.5" y="467.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1028.5" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.32%)</title><rect x="1029.3" y="563.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1032.3" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.16%)</title><rect x="1031.2" y="547.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1034.2" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.16%)</title><rect x="1031.2" y="531.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1034.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.16%)</title><rect x="1033.0" y="563.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1036.0" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 1.12%)</title><rect x="1034.9" y="579.0" width="13.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1037.9" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 1.12%)</title><rect x="1034.9" y="563.0" width="13.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1037.9" y="574.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.64%)</title><rect x="1036.8" y="547.0" width="7.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1039.8" y="558.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.16%)</title><rect x="1036.8" y="531.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1039.8" y="542.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.48%)</title><rect x="1038.7" y="531.0" width="5.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1041.7" y="542.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.16%)</title><rect x="1040.6" y="515.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1043.6" y="526.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.16%)</title><rect x="1042.5" y="515.0" width="1.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1045.5" y="526.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.16%)</title><rect x="1044.4" y="547.0" width="1.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1047.4" y="558.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.16%)</title><rect x="1046.3" y="547.0" width="1.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1049.3" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=2846] (75 samples, 12.02%)</title><rect x="1048.2" y="643.0" width="141.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1051.2" y="654.0">[NIO Selector #7 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (75 samples, 12.02%)</title><rect x="1048.2" y="627.0" width="141.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1051.2" y="638.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.64%)</title><rect x="1048.2" y="611.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1051.2" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.64%)</title><rect x="1048.2" y="595.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1051.2" y="606.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.16%)</title><rect x="1048.2" y="579.0" width="1.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1051.2" y="590.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.16%)</title><rect x="1050.1" y="579.0" width="1.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1053.1" y="590.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.16%)</title><rect x="1052.0" y="579.0" width="1.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1055.0" y="590.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.16%)</title><rect x="1053.8" y="579.0" width="1.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1056.8" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (71 samples, 11.38%)</title><rect x="1055.7" y="611.0" width="134.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1058.7" y="622.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (71 samples, 11.38%)</title><rect x="1055.7" y="595.0" width="134.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1058.7" y="606.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (64 samples, 10.26%)</title><rect x="1055.7" y="579.0" width="121.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1058.7" y="590.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (53 samples, 8.49%)</title><rect x="1063.3" y="563.0" width="100.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1066.3" y="574.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (53 samples, 8.49%)</title><rect x="1063.3" y="547.0" width="100.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1066.3" y="558.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (53 samples, 8.49%)</title><rect x="1063.3" y="531.0" width="100.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1066.3" y="542.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (13 samples, 2.08%)</title><rect x="1063.3" y="515.0" width="24.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1066.3" y="526.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.80%)</title><rect x="1063.3" y="499.0" width="9.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1066.3" y="510.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.80%)</title><rect x="1063.3" y="483.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1066.3" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.80%)</title><rect x="1063.3" y="467.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1066.3" y="478.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.16%)</title><rect x="1070.9" y="451.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1073.9" y="462.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.16%)</title><rect x="1070.9" y="435.0" width="1.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1073.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.96%)</title><rect x="1072.8" y="499.0" width="11.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.64%)</title><rect x="1072.8" y="483.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1075.8" y="494.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.16%)</title><rect x="1078.4" y="467.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1081.4" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.16%)</title><rect x="1078.4" y="451.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1081.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.16%)</title><rect x="1078.4" y="435.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1081.4" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.32%)</title><rect x="1080.3" y="483.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1083.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.32%)</title><rect x="1080.3" y="467.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1083.3" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.32%)</title><rect x="1080.3" y="451.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1083.3" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.32%)</title><rect x="1080.3" y="435.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1083.3" y="446.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.32%)</title><rect x="1080.3" y="419.0" width="3.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1083.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.32%)</title><rect x="1084.1" y="499.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1087.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.16%)</title><rect x="1087.9" y="515.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1090.9" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.16%)</title><rect x="1087.9" y="499.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1090.9" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.16%)</title><rect x="1087.9" y="483.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1090.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.16%)</title><rect x="1087.9" y="467.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1090.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.16%)</title><rect x="1087.9" y="451.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1090.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (39 samples, 6.25%)</title><rect x="1089.8" y="515.0" width="73.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1092.8" y="526.0">ru/mail/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (23 samples, 3.69%)</title><rect x="1089.8" y="499.0" width="43.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1092.8" y="510.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (23 samples, 3.69%)</title><rect x="1089.8" y="483.0" width="43.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1092.8" y="494.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (23 samples, 3.69%)</title><rect x="1089.8" y="467.0" width="43.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1092.8" y="478.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (23 samples, 3.69%)</title><rect x="1089.8" y="451.0" width="43.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1092.8" y="462.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (23 samples, 3.69%)</title><rect x="1089.8" y="435.0" width="43.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1092.8" y="446.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (23 samples, 3.69%)</title><rect x="1089.8" y="419.0" width="43.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1092.8" y="430.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (23 samples, 3.69%)</title><rect x="1089.8" y="403.0" width="43.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1092.8" y="414.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (22 samples, 3.53%)</title><rect x="1089.8" y="387.0" width="41.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1092.8" y="398.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (22 samples, 3.53%)</title><rect x="1089.8" y="371.0" width="41.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1092.8" y="382.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (2 samples, 0.32%)</title><rect x="1089.8" y="355.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1092.8" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.16%)</title><rect x="1089.8" y="339.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1092.8" y="350.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.16%)</title><rect x="1089.8" y="323.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1092.8" y="334.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.16%)</title><rect x="1089.8" y="307.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1092.8" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (1 samples, 0.16%)</title><rect x="1089.8" y="291.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1092.8" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (1 samples, 0.16%)</title><rect x="1091.7" y="339.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1094.7" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (1 samples, 0.16%)</title><rect x="1091.7" y="323.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1094.7" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.16%)</title><rect x="1091.7" y="307.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.7" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.16%)</title><rect x="1091.7" y="291.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1094.7" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.16%)</title><rect x="1091.7" y="275.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1094.7" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (11 samples, 1.76%)</title><rect x="1093.6" y="355.0" width="20.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1096.6" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (6 samples, 0.96%)</title><rect x="1093.6" y="339.0" width="11.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1096.6" y="350.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (6 samples, 0.96%)</title><rect x="1093.6" y="323.0" width="11.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1096.6" y="334.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (6 samples, 0.96%)</title><rect x="1093.6" y="307.0" width="11.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1096.6" y="318.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (6 samples, 0.96%)</title><rect x="1093.6" y="291.0" width="11.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1096.6" y="302.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (6 samples, 0.96%)</title><rect x="1093.6" y="275.0" width="11.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1096.6" y="286.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (6 samples, 0.96%)</title><rect x="1093.6" y="259.0" width="11.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1096.6" y="270.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (6 samples, 0.96%)</title><rect x="1093.6" y="243.0" width="11.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1096.6" y="254.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (6 samples, 0.96%)</title><rect x="1093.6" y="227.0" width="11.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1096.6" y="238.0"></text>
</g>
<g>
<title>writeBytes (6 samples, 0.96%)</title><rect x="1093.6" y="211.0" width="11.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1096.6" y="222.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.16%)</title><rect x="1093.6" y="195.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1096.6" y="206.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.32%)</title><rect x="1095.4" y="195.0" width="3.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1098.4" y="206.0"></text>
</g>
<g>
<title>jni_GetArrayLength (1 samples, 0.16%)</title><rect x="1099.2" y="195.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1102.2" y="206.0"></text>
</g>
<g>
<title>jni_GetObjectField (2 samples, 0.32%)</title><rect x="1101.1" y="195.0" width="3.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1104.1" y="206.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.16%)</title><rect x="1101.1" y="179.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1104.1" y="190.0"></text>
</g>
<g>
<title>java_lang_ref_Reference::is_referent_field(oopDesc*, long) (1 samples, 0.16%)</title><rect x="1101.1" y="163.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1104.1" y="174.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.16%)</title><rect x="1103.0" y="179.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1106.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.48%)</title><rect x="1104.9" y="339.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1107.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.48%)</title><rect x="1104.9" y="323.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1107.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.32%)</title><rect x="1106.8" y="307.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1109.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.32%)</title><rect x="1106.8" y="291.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1109.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.32%)</title><rect x="1106.8" y="275.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1109.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.32%)</title><rect x="1106.8" y="259.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1109.8" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.32%)</title><rect x="1106.8" y="243.0" width="3.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1109.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.32%)</title><rect x="1110.6" y="339.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1113.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.32%)</title><rect x="1110.6" y="323.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1113.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.32%)</title><rect x="1110.6" y="307.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1113.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.32%)</title><rect x="1110.6" y="291.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1113.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.32%)</title><rect x="1110.6" y="275.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1113.6" y="286.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.32%)</title><rect x="1110.6" y="259.0" width="3.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1113.6" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (9 samples, 1.44%)</title><rect x="1114.4" y="355.0" width="17.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1117.4" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (9 samples, 1.44%)</title><rect x="1114.4" y="339.0" width="17.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1117.4" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (9 samples, 1.44%)</title><rect x="1114.4" y="323.0" width="17.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1117.4" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (5 samples, 0.80%)</title><rect x="1114.4" y="307.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1117.4" y="318.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (3 samples, 0.48%)</title><rect x="1118.1" y="291.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1121.1" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (1 samples, 0.16%)</title><rect x="1118.1" y="275.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1121.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.16%)</title><rect x="1118.1" y="259.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1121.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.16%)</title><rect x="1118.1" y="243.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1121.1" y="254.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (2 samples, 0.32%)</title><rect x="1120.0" y="275.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1123.0" y="286.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (2 samples, 0.32%)</title><rect x="1120.0" y="259.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1123.0" y="270.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (1 samples, 0.16%)</title><rect x="1121.9" y="243.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1124.9" y="254.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (1 samples, 0.16%)</title><rect x="1121.9" y="227.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1124.9" y="238.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.16%)</title><rect x="1121.9" y="211.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1124.9" y="222.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.16%)</title><rect x="1121.9" y="195.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1124.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.32%)</title><rect x="1123.8" y="307.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1126.8" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.32%)</title><rect x="1123.8" y="291.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1126.8" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.32%)</title><rect x="1123.8" y="275.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1126.8" y="286.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.32%)</title><rect x="1123.8" y="259.0" width="3.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1126.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.32%)</title><rect x="1127.6" y="307.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1130.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.32%)</title><rect x="1127.6" y="291.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1130.6" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.32%)</title><rect x="1127.6" y="275.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1130.6" y="286.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.16%)</title><rect x="1129.5" y="259.0" width="1.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1132.5" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.16%)</title><rect x="1131.4" y="387.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1134.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (16 samples, 2.56%)</title><rect x="1133.3" y="499.0" width="30.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1136.3" y="510.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.16%)</title><rect x="1133.3" y="483.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1136.3" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.16%)</title><rect x="1133.3" y="467.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1136.3" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="1133.3" y="451.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1136.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (15 samples, 2.40%)</title><rect x="1135.2" y="483.0" width="28.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1138.2" y="494.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.32%)</title><rect x="1135.2" y="467.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1138.2" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.32%)</title><rect x="1135.2" y="451.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1138.2" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.16%)</title><rect x="1138.9" y="467.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1141.9" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="1138.9" y="451.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1141.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.16%)</title><rect x="1138.9" y="435.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1141.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.32%)</title><rect x="1140.8" y="467.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1143.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.32%)</title><rect x="1140.8" y="451.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1143.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.16%)</title><rect x="1142.7" y="435.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1145.7" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.16%)</title><rect x="1142.7" y="419.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1145.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (10 samples, 1.60%)</title><rect x="1144.6" y="467.0" width="18.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1147.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (10 samples, 1.60%)</title><rect x="1144.6" y="451.0" width="18.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1147.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (10 samples, 1.60%)</title><rect x="1144.6" y="435.0" width="18.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1147.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 1.12%)</title><rect x="1150.3" y="419.0" width="13.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1153.3" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.80%)</title><rect x="1154.1" y="403.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1157.1" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.80%)</title><rect x="1154.1" y="387.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1157.1" y="398.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.80%)</title><rect x="1154.1" y="371.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.1" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.16%)</title><rect x="1161.6" y="355.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1164.6" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.16%)</title><rect x="1161.6" y="339.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1164.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.80%)</title><rect x="1163.5" y="563.0" width="9.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1166.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.16%)</title><rect x="1167.3" y="547.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1170.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.16%)</title><rect x="1167.3" y="531.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1170.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.16%)</title><rect x="1167.3" y="515.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1170.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.16%)</title><rect x="1167.3" y="499.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1170.3" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.32%)</title><rect x="1169.2" y="547.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1172.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.16%)</title><rect x="1173.0" y="563.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1176.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.16%)</title><rect x="1174.9" y="563.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1177.9" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.16%)</title><rect x="1174.9" y="547.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1177.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.16%)</title><rect x="1174.9" y="531.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1177.9" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.16%)</title><rect x="1174.9" y="515.0" width="1.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1177.9" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 1.12%)</title><rect x="1176.8" y="579.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1179.8" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 1.12%)</title><rect x="1176.8" y="563.0" width="13.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1179.8" y="574.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.64%)</title><rect x="1176.8" y="547.0" width="7.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1179.8" y="558.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.16%)</title><rect x="1176.8" y="531.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1179.8" y="542.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.48%)</title><rect x="1178.7" y="531.0" width="5.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1181.7" y="542.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.16%)</title><rect x="1182.4" y="515.0" width="1.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1185.4" y="526.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.48%)</title><rect x="1184.3" y="547.0" width="5.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1187.3" y="558.0"></text>
</g>
</g>
</svg>
