<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="565"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="565"> </text>
<g id="frames">
<g>
<title>all (424 samples, 100.00%)</title><rect x="10.0" y="531.0" width="1180.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="542.0">all</text>
</g>
<g>
<title>[GC Thread#0 tid=52953] (5 samples, 1.18%)</title><rect x="10.0" y="515.0" width="13.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>start_thread (5 samples, 1.18%)</title><rect x="10.0" y="499.0" width="13.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 1.18%)</title><rect x="10.0" y="483.0" width="13.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 1.18%)</title><rect x="10.0" y="467.0" width="13.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 1.18%)</title><rect x="10.0" y="451.0" width="13.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 1.18%)</title><rect x="10.0" y="435.0" width="13.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.47%)</title><rect x="10.0" y="419.0" width="5.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.24%)</title><rect x="10.0" y="403.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.24%)</title><rect x="10.0" y="387.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.24%)</title><rect x="12.8" y="403.0" width="2.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="15.8" y="414.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.71%)</title><rect x="15.6" y="419.0" width="8.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.6" y="430.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.71%)</title><rect x="15.6" y="403.0" width="8.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="18.6" y="414.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.71%)</title><rect x="15.6" y="387.0" width="8.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="18.6" y="398.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (3 samples, 0.71%)</title><rect x="15.6" y="371.0" width="8.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="18.6" y="382.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.71%)</title><rect x="15.6" y="355.0" width="8.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="18.6" y="366.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.24%)</title><rect x="15.6" y="339.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="18.6" y="350.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (2 samples, 0.47%)</title><rect x="18.3" y="339.0" width="5.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="21.3" y="350.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.24%)</title><rect x="21.1" y="323.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="24.1" y="334.0"></text>
</g>
<g>
<title>[GC Thread#1 tid=53028] (2 samples, 0.47%)</title><rect x="23.9" y="515.0" width="5.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="26.9" y="526.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.47%)</title><rect x="23.9" y="499.0" width="5.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="26.9" y="510.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.47%)</title><rect x="23.9" y="483.0" width="5.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="26.9" y="494.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.47%)</title><rect x="23.9" y="467.0" width="5.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="26.9" y="478.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.47%)</title><rect x="23.9" y="451.0" width="5.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="26.9" y="462.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.47%)</title><rect x="23.9" y="435.0" width="5.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="26.9" y="446.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.47%)</title><rect x="23.9" y="419.0" width="5.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="26.9" y="430.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.47%)</title><rect x="23.9" y="403.0" width="5.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="26.9" y="414.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.47%)</title><rect x="23.9" y="387.0" width="5.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="26.9" y="398.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (2 samples, 0.47%)</title><rect x="23.9" y="371.0" width="5.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="26.9" y="382.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.47%)</title><rect x="23.9" y="355.0" width="5.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="26.9" y="366.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (2 samples, 0.47%)</title><rect x="23.9" y="339.0" width="5.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="26.9" y="350.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanObjsDuringUpdateRSClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanObjsDuringUpdateRSClosure, OopClosure, G1ScanObjsDuringUpdateRSClosure&gt;(void (G1ScanObjsDuringUpdateRSClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanObjsDuringUpdateRSClosure*, unsigned int*) (1 samples, 0.24%)</title><rect x="26.7" y="323.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="29.7" y="334.0"></text>
</g>
<g>
<title>[GC Thread#2 tid=53029] (2 samples, 0.47%)</title><rect x="29.5" y="515.0" width="5.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="32.5" y="526.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.47%)</title><rect x="29.5" y="499.0" width="5.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="32.5" y="510.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.47%)</title><rect x="29.5" y="483.0" width="5.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="32.5" y="494.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.47%)</title><rect x="29.5" y="467.0" width="5.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="32.5" y="478.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.47%)</title><rect x="29.5" y="451.0" width="5.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="32.5" y="462.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.47%)</title><rect x="29.5" y="435.0" width="5.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="32.5" y="446.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.47%)</title><rect x="29.5" y="419.0" width="5.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="32.5" y="430.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.47%)</title><rect x="29.5" y="403.0" width="5.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="32.5" y="414.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.47%)</title><rect x="29.5" y="387.0" width="5.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="32.5" y="398.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (2 samples, 0.47%)</title><rect x="29.5" y="371.0" width="5.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="32.5" y="382.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.47%)</title><rect x="29.5" y="355.0" width="5.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="32.5" y="366.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.24%)</title><rect x="29.5" y="339.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="32.5" y="350.0"></text>
</g>
<g>
<title>G1ContiguousSpace::block_start(void const*) (1 samples, 0.24%)</title><rect x="29.5" y="323.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="32.5" y="334.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (1 samples, 0.24%)</title><rect x="32.3" y="339.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="35.3" y="350.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.24%)</title><rect x="32.3" y="323.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="35.3" y="334.0"></text>
</g>
<g>
<title>[GC Thread#3 tid=53030] (2 samples, 0.47%)</title><rect x="35.0" y="515.0" width="5.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="38.0" y="526.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.47%)</title><rect x="35.0" y="499.0" width="5.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="38.0" y="510.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.47%)</title><rect x="35.0" y="483.0" width="5.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="38.0" y="494.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.47%)</title><rect x="35.0" y="467.0" width="5.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="38.0" y="478.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.47%)</title><rect x="35.0" y="451.0" width="5.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="38.0" y="462.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.47%)</title><rect x="35.0" y="435.0" width="5.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="38.0" y="446.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.47%)</title><rect x="35.0" y="419.0" width="5.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="38.0" y="430.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.47%)</title><rect x="35.0" y="403.0" width="5.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="38.0" y="414.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.47%)</title><rect x="35.0" y="387.0" width="5.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="38.0" y="398.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (2 samples, 0.47%)</title><rect x="35.0" y="371.0" width="5.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="38.0" y="382.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.47%)</title><rect x="35.0" y="355.0" width="5.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="38.0" y="366.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.24%)</title><rect x="35.0" y="339.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="38.0" y="350.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (1 samples, 0.24%)</title><rect x="37.8" y="339.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="40.8" y="350.0"></text>
</g>
<g>
<title>[GC Thread#4 tid=53031] (6 samples, 1.42%)</title><rect x="40.6" y="515.0" width="16.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="43.6" y="526.0"></text>
</g>
<g>
<title>start_thread (6 samples, 1.42%)</title><rect x="40.6" y="499.0" width="16.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="43.6" y="510.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 1.42%)</title><rect x="40.6" y="483.0" width="16.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="43.6" y="494.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 1.42%)</title><rect x="40.6" y="467.0" width="16.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="43.6" y="478.0"></text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 1.42%)</title><rect x="40.6" y="451.0" width="16.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="43.6" y="462.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 1.42%)</title><rect x="40.6" y="435.0" width="16.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="43.6" y="446.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.71%)</title><rect x="40.6" y="419.0" width="8.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="43.6" y="430.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.24%)</title><rect x="40.6" y="403.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="43.6" y="414.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.24%)</title><rect x="43.4" y="403.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="46.4" y="414.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.24%)</title><rect x="46.2" y="403.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="49.2" y="414.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.71%)</title><rect x="49.0" y="419.0" width="8.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="52.0" y="430.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.71%)</title><rect x="49.0" y="403.0" width="8.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="52.0" y="414.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.71%)</title><rect x="49.0" y="387.0" width="8.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="52.0" y="398.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (3 samples, 0.71%)</title><rect x="49.0" y="371.0" width="8.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="52.0" y="382.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.71%)</title><rect x="49.0" y="355.0" width="8.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="52.0" y="366.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.24%)</title><rect x="49.0" y="339.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="52.0" y="350.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.24%)</title><rect x="49.0" y="323.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="52.0" y="334.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (2 samples, 0.47%)</title><rect x="51.7" y="339.0" width="5.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="54.7" y="350.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.24%)</title><rect x="54.5" y="323.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="57.5" y="334.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.24%)</title><rect x="54.5" y="307.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="57.5" y="318.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (1 samples, 0.24%)</title><rect x="54.5" y="291.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="57.5" y="302.0"></text>
</g>
<g>
<title>[GC Thread#5 tid=53032] (2 samples, 0.47%)</title><rect x="57.3" y="515.0" width="5.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="60.3" y="526.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.47%)</title><rect x="57.3" y="499.0" width="5.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="60.3" y="510.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.47%)</title><rect x="57.3" y="483.0" width="5.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="60.3" y="494.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.47%)</title><rect x="57.3" y="467.0" width="5.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="60.3" y="478.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.47%)</title><rect x="57.3" y="451.0" width="5.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="60.3" y="462.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.47%)</title><rect x="57.3" y="435.0" width="5.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="60.3" y="446.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.47%)</title><rect x="57.3" y="419.0" width="5.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="60.3" y="430.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.47%)</title><rect x="57.3" y="403.0" width="5.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="60.3" y="414.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.47%)</title><rect x="57.3" y="387.0" width="5.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="60.3" y="398.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (2 samples, 0.47%)</title><rect x="57.3" y="371.0" width="5.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="60.3" y="382.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.47%)</title><rect x="57.3" y="355.0" width="5.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="60.3" y="366.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (2 samples, 0.47%)</title><rect x="57.3" y="339.0" width="5.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="60.3" y="350.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.47%)</title><rect x="57.3" y="323.0" width="5.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="60.3" y="334.0"></text>
</g>
<g>
<title>[GC Thread#6 tid=53033] (5 samples, 1.18%)</title><rect x="62.9" y="515.0" width="13.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="65.9" y="526.0"></text>
</g>
<g>
<title>start_thread (5 samples, 1.18%)</title><rect x="62.9" y="499.0" width="13.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="65.9" y="510.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 1.18%)</title><rect x="62.9" y="483.0" width="13.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="65.9" y="494.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 1.18%)</title><rect x="62.9" y="467.0" width="13.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="65.9" y="478.0"></text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 1.18%)</title><rect x="62.9" y="451.0" width="13.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="65.9" y="462.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 1.18%)</title><rect x="62.9" y="435.0" width="13.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="65.9" y="446.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.47%)</title><rect x="62.9" y="419.0" width="5.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="65.9" y="430.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.47%)</title><rect x="62.9" y="403.0" width="5.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="65.9" y="414.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.71%)</title><rect x="68.4" y="419.0" width="8.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="71.4" y="430.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.71%)</title><rect x="68.4" y="403.0" width="8.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="71.4" y="414.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.71%)</title><rect x="68.4" y="387.0" width="8.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="71.4" y="398.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (3 samples, 0.71%)</title><rect x="68.4" y="371.0" width="8.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="71.4" y="382.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.71%)</title><rect x="68.4" y="355.0" width="8.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="71.4" y="366.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.24%)</title><rect x="68.4" y="339.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="71.4" y="350.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (1 samples, 0.24%)</title><rect x="68.4" y="323.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="71.4" y="334.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (2 samples, 0.47%)</title><rect x="71.2" y="339.0" width="5.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="74.2" y="350.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.47%)</title><rect x="71.2" y="323.0" width="5.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="74.2" y="334.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.24%)</title><rect x="74.0" y="307.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="77.0" y="318.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (1 samples, 0.24%)</title><rect x="74.0" y="291.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="77.0" y="302.0"></text>
</g>
<g>
<title>[GC Thread#7 tid=53034] (5 samples, 1.18%)</title><rect x="76.8" y="515.0" width="13.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="79.8" y="526.0"></text>
</g>
<g>
<title>start_thread (5 samples, 1.18%)</title><rect x="76.8" y="499.0" width="13.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="79.8" y="510.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 1.18%)</title><rect x="76.8" y="483.0" width="13.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="79.8" y="494.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 1.18%)</title><rect x="76.8" y="467.0" width="13.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="79.8" y="478.0"></text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 1.18%)</title><rect x="76.8" y="451.0" width="13.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="79.8" y="462.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 1.18%)</title><rect x="76.8" y="435.0" width="13.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="79.8" y="446.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.71%)</title><rect x="76.8" y="419.0" width="8.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="79.8" y="430.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.24%)</title><rect x="76.8" y="403.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="79.8" y="414.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.24%)</title><rect x="76.8" y="387.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="79.8" y="398.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.47%)</title><rect x="79.6" y="403.0" width="5.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="82.6" y="414.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.47%)</title><rect x="85.1" y="419.0" width="5.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="88.1" y="430.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.47%)</title><rect x="85.1" y="403.0" width="5.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="88.1" y="414.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.47%)</title><rect x="85.1" y="387.0" width="5.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="88.1" y="398.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (2 samples, 0.47%)</title><rect x="85.1" y="371.0" width="5.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="88.1" y="382.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.47%)</title><rect x="85.1" y="355.0" width="5.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="88.1" y="366.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (2 samples, 0.47%)</title><rect x="85.1" y="339.0" width="5.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="88.1" y="350.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.47%)</title><rect x="85.1" y="323.0" width="5.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="88.1" y="334.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.24%)</title><rect x="87.9" y="307.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="90.9" y="318.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (1 samples, 0.24%)</title><rect x="87.9" y="291.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="90.9" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=52973] (32 samples, 7.55%)</title><rect x="90.7" y="515.0" width="89.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="93.7" y="526.0">[NIO Selec..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (32 samples, 7.55%)</title><rect x="90.7" y="499.0" width="89.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="93.7" y="510.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.47%)</title><rect x="90.7" y="483.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="93.7" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.47%)</title><rect x="90.7" y="467.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.7" y="478.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.47%)</title><rect x="90.7" y="451.0" width="5.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="93.7" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (30 samples, 7.08%)</title><rect x="96.3" y="483.0" width="83.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.3" y="494.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (30 samples, 7.08%)</title><rect x="96.3" y="467.0" width="83.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="99.3" y="478.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (25 samples, 5.90%)</title><rect x="96.3" y="451.0" width="69.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="99.3" y="462.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (17 samples, 4.01%)</title><rect x="96.3" y="435.0" width="47.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="99.3" y="446.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (17 samples, 4.01%)</title><rect x="96.3" y="419.0" width="47.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="99.3" y="430.0">one/..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (17 samples, 4.01%)</title><rect x="96.3" y="403.0" width="47.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.3" y="414.0">Requ..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (17 samples, 4.01%)</title><rect x="96.3" y="387.0" width="47.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="99.3" y="398.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (14 samples, 3.30%)</title><rect x="96.3" y="371.0" width="38.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.3" y="382.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (14 samples, 3.30%)</title><rect x="96.3" y="355.0" width="38.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.3" y="366.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (14 samples, 3.30%)</title><rect x="96.3" y="339.0" width="38.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.3" y="350.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (14 samples, 3.30%)</title><rect x="96.3" y="323.0" width="38.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="99.3" y="334.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (13 samples, 3.07%)</title><rect x="99.1" y="307.0" width="36.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="102.1" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (13 samples, 3.07%)</title><rect x="99.1" y="291.0" width="36.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="102.1" y="302.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (13 samples, 3.07%)</title><rect x="99.1" y="275.0" width="36.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="102.1" y="286.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (12 samples, 2.83%)</title><rect x="99.1" y="259.0" width="33.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="102.1" y="270.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (12 samples, 2.83%)</title><rect x="99.1" y="243.0" width="33.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.1" y="254.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.24%)</title><rect x="99.1" y="227.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.1" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.24%)</title><rect x="99.1" y="211.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="102.1" y="222.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.24%)</title><rect x="99.1" y="195.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="102.1" y="206.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.24%)</title><rect x="99.1" y="179.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="102.1" y="190.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.24%)</title><rect x="99.1" y="163.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.1" y="174.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.24%)</title><rect x="99.1" y="147.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="102.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.24%)</title><rect x="99.1" y="131.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="102.1" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.24%)</title><rect x="99.1" y="115.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="102.1" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.24%)</title><rect x="99.1" y="99.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.1" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (7 samples, 1.65%)</title><rect x="101.8" y="227.0" width="19.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.8" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.flush (1 samples, 0.24%)</title><rect x="101.8" y="211.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.8" y="222.0"></text>
</g>
<g>
<title>java/io/PrintStream.flush (1 samples, 0.24%)</title><rect x="101.8" y="195.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="104.8" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (6 samples, 1.42%)</title><rect x="104.6" y="211.0" width="16.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="107.6" y="222.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (6 samples, 1.42%)</title><rect x="104.6" y="195.0" width="16.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="107.6" y="206.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (6 samples, 1.42%)</title><rect x="104.6" y="179.0" width="16.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="107.6" y="190.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (6 samples, 1.42%)</title><rect x="104.6" y="163.0" width="16.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="107.6" y="174.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (6 samples, 1.42%)</title><rect x="104.6" y="147.0" width="16.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="107.6" y="158.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (6 samples, 1.42%)</title><rect x="104.6" y="131.0" width="16.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="107.6" y="142.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (6 samples, 1.42%)</title><rect x="104.6" y="115.0" width="16.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="107.6" y="126.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (5 samples, 1.18%)</title><rect x="107.4" y="99.0" width="13.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="110.4" y="110.0"></text>
</g>
<g>
<title>writeBytes (5 samples, 1.18%)</title><rect x="107.4" y="83.0" width="13.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="110.4" y="94.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.24%)</title><rect x="107.4" y="67.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="110.4" y="78.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.24%)</title><rect x="110.2" y="67.0" width="2.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="113.2" y="78.0"></text>
</g>
<g>
<title>jni_GetObjectField (2 samples, 0.47%)</title><rect x="113.0" y="67.0" width="5.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="116.0" y="78.0"></text>
</g>
<g>
<title>AccessBarrierSupport::resolve_unknown_oop_ref_strength(unsigned long, oopDesc*, long) (1 samples, 0.24%)</title><rect x="113.0" y="51.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="116.0" y="62.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.24%)</title><rect x="115.8" y="51.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="118.8" y="62.0"></text>
</g>
<g>
<title>java_lang_ref_Reference::is_referent_field(oopDesc*, long) (1 samples, 0.24%)</title><rect x="115.8" y="35.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="118.8" y="46.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.24%)</title><rect x="118.5" y="67.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="121.5" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (4 samples, 0.94%)</title><rect x="121.3" y="227.0" width="11.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.3" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (4 samples, 0.94%)</title><rect x="121.3" y="211.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.3" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (4 samples, 0.94%)</title><rect x="121.3" y="195.0" width="11.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="124.3" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.24%)</title><rect x="124.1" y="179.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="127.1" y="190.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.24%)</title><rect x="124.1" y="163.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.1" y="174.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.24%)</title><rect x="124.1" y="147.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.1" y="158.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.24%)</title><rect x="124.1" y="131.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.1" y="142.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (1 samples, 0.24%)</title><rect x="124.1" y="115.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.1" y="126.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (1 samples, 0.24%)</title><rect x="124.1" y="99.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="127.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (1 samples, 0.24%)</title><rect x="124.1" y="83.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="127.1" y="94.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.24%)</title><rect x="124.1" y="67.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.1" y="78.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.canEncode (1 samples, 0.24%)</title><rect x="124.1" y="51.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.1" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.47%)</title><rect x="126.9" y="179.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="129.9" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.47%)</title><rect x="126.9" y="163.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.9" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.47%)</title><rect x="126.9" y="147.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.24%)</title><rect x="132.5" y="259.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="135.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (3 samples, 0.71%)</title><rect x="135.2" y="371.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.2" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.24%)</title><rect x="135.2" y="355.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.47%)</title><rect x="138.0" y="355.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="141.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.47%)</title><rect x="138.0" y="339.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="141.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.24%)</title><rect x="138.0" y="323.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="141.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.24%)</title><rect x="138.0" y="307.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="141.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.24%)</title><rect x="138.0" y="291.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="141.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.24%)</title><rect x="138.0" y="275.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="141.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.24%)</title><rect x="138.0" y="259.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="141.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.24%)</title><rect x="140.8" y="323.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="143.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.24%)</title><rect x="140.8" y="307.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="143.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.24%)</title><rect x="140.8" y="291.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.24%)</title><rect x="140.8" y="275.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.24%)</title><rect x="140.8" y="259.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.8" y="270.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.24%)</title><rect x="140.8" y="243.0" width="2.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="143.8" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.71%)</title><rect x="143.6" y="435.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.47%)</title><rect x="143.6" y="419.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="146.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.47%)</title><rect x="143.6" y="403.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.6" y="414.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.47%)</title><rect x="143.6" y="387.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.47%)</title><rect x="143.6" y="371.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.6" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="146.4" y="355.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="149.2" y="419.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.2" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="149.2" y="403.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.2" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 1.18%)</title><rect x="151.9" y="435.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.9" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="163.1" y="419.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="166.1" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 1.18%)</title><rect x="165.8" y="451.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.8" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (5 samples, 1.18%)</title><rect x="165.8" y="435.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="168.8" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.47%)</title><rect x="165.8" y="419.0" width="5.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="168.8" y="430.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.47%)</title><rect x="165.8" y="403.0" width="5.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="168.8" y="414.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.47%)</title><rect x="171.4" y="419.0" width="5.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="174.4" y="430.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.24%)</title><rect x="177.0" y="419.0" width="2.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="180.0" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=52974] (15 samples, 3.54%)</title><rect x="179.8" y="515.0" width="41.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="182.8" y="526.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (15 samples, 3.54%)</title><rect x="179.8" y="499.0" width="41.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="182.8" y="510.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.47%)</title><rect x="182.5" y="483.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="185.5" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.47%)</title><rect x="182.5" y="467.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.5" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (12 samples, 2.83%)</title><rect x="188.1" y="483.0" width="33.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.1" y="494.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (12 samples, 2.83%)</title><rect x="188.1" y="467.0" width="33.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.1" y="478.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9 samples, 2.12%)</title><rect x="188.1" y="451.0" width="25.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.1" y="462.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7 samples, 1.65%)</title><rect x="188.1" y="435.0" width="19.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7 samples, 1.65%)</title><rect x="188.1" y="419.0" width="19.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="191.1" y="430.0"></text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (7 samples, 1.65%)</title><rect x="188.1" y="403.0" width="19.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="191.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (7 samples, 1.65%)</title><rect x="188.1" y="387.0" width="19.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.1" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (6 samples, 1.42%)</title><rect x="188.1" y="371.0" width="16.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="191.1" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (6 samples, 1.42%)</title><rect x="188.1" y="355.0" width="16.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.1" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (6 samples, 1.42%)</title><rect x="188.1" y="339.0" width="16.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.1" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (6 samples, 1.42%)</title><rect x="188.1" y="323.0" width="16.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.1" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (5 samples, 1.18%)</title><rect x="190.9" y="307.0" width="13.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.9" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (5 samples, 1.18%)</title><rect x="190.9" y="291.0" width="13.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="193.9" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (5 samples, 1.18%)</title><rect x="190.9" y="275.0" width="13.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.9" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (5 samples, 1.18%)</title><rect x="190.9" y="259.0" width="13.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="193.9" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (5 samples, 1.18%)</title><rect x="190.9" y="243.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.9" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (3 samples, 0.71%)</title><rect x="190.9" y="227.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.9" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (2 samples, 0.47%)</title><rect x="190.9" y="211.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.9" y="222.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.24%)</title><rect x="193.7" y="195.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="196.7" y="206.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.24%)</title><rect x="193.7" y="179.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="196.7" y="190.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.24%)</title><rect x="193.7" y="163.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.7" y="174.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.24%)</title><rect x="193.7" y="147.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="196.7" y="158.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.24%)</title><rect x="193.7" y="131.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.7" y="142.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.24%)</title><rect x="193.7" y="115.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="196.7" y="126.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.24%)</title><rect x="193.7" y="99.0" width="2.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="196.7" y="110.0"></text>
</g>
<g>
<title>handleWrite (1 samples, 0.24%)</title><rect x="193.7" y="83.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="196.7" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.24%)</title><rect x="196.5" y="211.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.24%)</title><rect x="196.5" y="195.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="199.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.24%)</title><rect x="196.5" y="179.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="199.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.24%)</title><rect x="196.5" y="163.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="199.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.24%)</title><rect x="196.5" y="147.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.24%)</title><rect x="196.5" y="131.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="199.5" y="142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="196.5" y="115.0" width="2.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="199.5" y="126.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.24%)</title><rect x="196.5" y="99.0" width="2.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="199.5" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.47%)</title><rect x="199.2" y="227.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="202.2" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.47%)</title><rect x="199.2" y="211.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.2" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.47%)</title><rect x="199.2" y="195.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.2" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.24%)</title><rect x="199.2" y="179.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="202.2" y="190.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.24%)</title><rect x="202.0" y="179.0" width="2.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="205.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (1 samples, 0.24%)</title><rect x="204.8" y="371.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="207.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.24%)</title><rect x="204.8" y="355.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.24%)</title><rect x="204.8" y="339.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.24%)</title><rect x="204.8" y="323.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="207.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.24%)</title><rect x="204.8" y="307.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="207.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.24%)</title><rect x="207.6" y="435.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.6" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="207.6" y="419.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="210.6" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="207.6" y="403.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="210.6" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.24%)</title><rect x="210.4" y="435.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="213.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.24%)</title><rect x="210.4" y="419.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="213.4" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.24%)</title><rect x="210.4" y="403.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="213.4" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (3 samples, 0.71%)</title><rect x="213.2" y="451.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.2" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.71%)</title><rect x="213.2" y="435.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="216.2" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.71%)</title><rect x="213.2" y="419.0" width="8.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="216.2" y="430.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.24%)</title><rect x="213.2" y="403.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="216.2" y="414.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.47%)</title><rect x="215.9" y="403.0" width="5.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="218.9" y="414.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.24%)</title><rect x="218.7" y="387.0" width="2.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="221.7" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=52975] (28 samples, 6.60%)</title><rect x="221.5" y="515.0" width="77.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="224.5" y="526.0">[NIO Sele..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (28 samples, 6.60%)</title><rect x="221.5" y="499.0" width="77.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.5" y="510.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.94%)</title><rect x="221.5" y="483.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="224.5" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.94%)</title><rect x="221.5" y="467.0" width="11.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="224.5" y="478.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.24%)</title><rect x="221.5" y="451.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="224.5" y="462.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.71%)</title><rect x="224.3" y="451.0" width="8.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="227.3" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (24 samples, 5.66%)</title><rect x="232.6" y="483.0" width="66.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.6" y="494.0">one/nio..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.24%)</title><rect x="232.6" y="467.0" width="2.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="235.6" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (23 samples, 5.42%)</title><rect x="235.4" y="467.0" width="64.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.4" y="478.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (20 samples, 4.72%)</title><rect x="235.4" y="451.0" width="55.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="238.4" y="462.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (19 samples, 4.48%)</title><rect x="235.4" y="435.0" width="52.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="238.4" y="446.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (19 samples, 4.48%)</title><rect x="235.4" y="419.0" width="52.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="238.4" y="430.0">one/n..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (18 samples, 4.25%)</title><rect x="235.4" y="403.0" width="50.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="238.4" y="414.0">Reque..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (18 samples, 4.25%)</title><rect x="235.4" y="387.0" width="50.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="238.4" y="398.0">ru/ma..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (17 samples, 4.01%)</title><rect x="235.4" y="371.0" width="47.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="238.4" y="382.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (17 samples, 4.01%)</title><rect x="235.4" y="355.0" width="47.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="238.4" y="366.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (17 samples, 4.01%)</title><rect x="235.4" y="339.0" width="47.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="238.4" y="350.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (17 samples, 4.01%)</title><rect x="235.4" y="323.0" width="47.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="238.4" y="334.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (16 samples, 3.77%)</title><rect x="238.2" y="307.0" width="44.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="241.2" y="318.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (16 samples, 3.77%)</title><rect x="238.2" y="291.0" width="44.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="241.2" y="302.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (16 samples, 3.77%)</title><rect x="238.2" y="275.0" width="44.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="241.2" y="286.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (16 samples, 3.77%)</title><rect x="238.2" y="259.0" width="44.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="241.2" y="270.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (16 samples, 3.77%)</title><rect x="238.2" y="243.0" width="44.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="241.2" y="254.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.24%)</title><rect x="238.2" y="227.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="241.2" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.24%)</title><rect x="238.2" y="211.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="241.2" y="222.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.24%)</title><rect x="238.2" y="195.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.2" y="206.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.24%)</title><rect x="238.2" y="179.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.2" y="190.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.24%)</title><rect x="238.2" y="163.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="241.2" y="174.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.24%)</title><rect x="238.2" y="147.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.2" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.24%)</title><rect x="238.2" y="131.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="241.2" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.24%)</title><rect x="238.2" y="115.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="241.2" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.24%)</title><rect x="238.2" y="99.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="241.2" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (10 samples, 2.36%)</title><rect x="241.0" y="227.0" width="27.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="244.0" y="238.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.flush (1 samples, 0.24%)</title><rect x="241.0" y="211.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="244.0" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (7 samples, 1.65%)</title><rect x="243.8" y="211.0" width="19.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="246.8" y="222.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (7 samples, 1.65%)</title><rect x="243.8" y="195.0" width="19.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="246.8" y="206.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (7 samples, 1.65%)</title><rect x="243.8" y="179.0" width="19.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="246.8" y="190.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (7 samples, 1.65%)</title><rect x="243.8" y="163.0" width="19.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="246.8" y="174.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (7 samples, 1.65%)</title><rect x="243.8" y="147.0" width="19.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="246.8" y="158.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (7 samples, 1.65%)</title><rect x="243.8" y="131.0" width="19.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.8" y="142.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (7 samples, 1.65%)</title><rect x="243.8" y="115.0" width="19.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.8" y="126.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (7 samples, 1.65%)</title><rect x="243.8" y="99.0" width="19.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="246.8" y="110.0"></text>
</g>
<g>
<title>writeBytes (7 samples, 1.65%)</title><rect x="243.8" y="83.0" width="19.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="246.8" y="94.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.47%)</title><rect x="243.8" y="67.0" width="5.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="246.8" y="78.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.24%)</title><rect x="249.3" y="67.0" width="2.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="252.3" y="78.0"></text>
</g>
<g>
<title>jni_GetObjectField (3 samples, 0.71%)</title><rect x="252.1" y="67.0" width="8.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="255.1" y="78.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (2 samples, 0.47%)</title><rect x="252.1" y="51.0" width="5.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="255.1" y="62.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.24%)</title><rect x="257.7" y="51.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="260.7" y="62.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.24%)</title><rect x="260.5" y="67.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="263.5" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.47%)</title><rect x="263.3" y="211.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="266.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.47%)</title><rect x="263.3" y="195.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="266.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.47%)</title><rect x="263.3" y="179.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="266.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.47%)</title><rect x="263.3" y="163.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="266.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.47%)</title><rect x="263.3" y="147.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="266.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.47%)</title><rect x="263.3" y="131.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="266.3" y="142.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.24%)</title><rect x="263.3" y="115.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="266.3" y="126.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.24%)</title><rect x="263.3" y="99.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="266.3" y="110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="266.0" y="115.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="269.0" y="126.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.24%)</title><rect x="266.0" y="99.0" width="2.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="269.0" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (5 samples, 1.18%)</title><rect x="268.8" y="227.0" width="13.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.8" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (5 samples, 1.18%)</title><rect x="268.8" y="211.0" width="13.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.8" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (4 samples, 0.94%)</title><rect x="271.6" y="195.0" width="11.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="274.6" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 0.47%)</title><rect x="271.6" y="179.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="274.6" y="190.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.24%)</title><rect x="274.4" y="163.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="277.4" y="174.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.24%)</title><rect x="274.4" y="147.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="277.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.47%)</title><rect x="277.2" y="179.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.2" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.47%)</title><rect x="277.2" y="163.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="280.2" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.24%)</title><rect x="280.0" y="147.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (1 samples, 0.24%)</title><rect x="282.7" y="371.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="285.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.24%)</title><rect x="282.7" y="355.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.24%)</title><rect x="282.7" y="339.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.24%)</title><rect x="282.7" y="323.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="285.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.24%)</title><rect x="282.7" y="307.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.24%)</title><rect x="282.7" y="291.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="285.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.24%)</title><rect x="282.7" y="275.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.24%)</title><rect x="282.7" y="259.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="285.7" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.24%)</title><rect x="282.7" y="243.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="285.7" y="254.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.24%)</title><rect x="282.7" y="227.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="285.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.24%)</title><rect x="285.5" y="403.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="288.5" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.24%)</title><rect x="285.5" y="387.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="288.5" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.24%)</title><rect x="285.5" y="371.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="288.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.24%)</title><rect x="288.3" y="435.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.3" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="288.3" y="419.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="291.3" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="288.3" y="403.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="291.3" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (3 samples, 0.71%)</title><rect x="291.1" y="451.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="294.1" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.71%)</title><rect x="291.1" y="435.0" width="8.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="294.1" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.24%)</title><rect x="291.1" y="419.0" width="2.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="294.1" y="430.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.24%)</title><rect x="291.1" y="403.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="294.1" y="414.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.47%)</title><rect x="293.9" y="419.0" width="5.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="296.9" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=52976] (27 samples, 6.37%)</title><rect x="299.4" y="515.0" width="75.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="302.4" y="526.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (27 samples, 6.37%)</title><rect x="299.4" y="499.0" width="75.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="302.4" y="510.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.47%)</title><rect x="299.4" y="483.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="302.4" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.47%)</title><rect x="299.4" y="467.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="302.4" y="478.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.24%)</title><rect x="302.2" y="451.0" width="2.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="305.2" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (25 samples, 5.90%)</title><rect x="305.0" y="483.0" width="69.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.0" y="494.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (25 samples, 5.90%)</title><rect x="305.0" y="467.0" width="69.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="308.0" y="478.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (19 samples, 4.48%)</title><rect x="307.8" y="451.0" width="52.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.8" y="462.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (14 samples, 3.30%)</title><rect x="310.6" y="435.0" width="38.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.6" y="446.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (14 samples, 3.30%)</title><rect x="310.6" y="419.0" width="38.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.6" y="430.0">one..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (14 samples, 3.30%)</title><rect x="310.6" y="403.0" width="38.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.6" y="414.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.71%)</title><rect x="310.6" y="387.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="313.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.71%)</title><rect x="310.6" y="371.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.6" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.24%)</title><rect x="313.3" y="355.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="316.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.24%)</title><rect x="313.3" y="339.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="316.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (1 samples, 0.24%)</title><rect x="313.3" y="323.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.3" y="334.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.24%)</title><rect x="316.1" y="355.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="319.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (11 samples, 2.59%)</title><rect x="318.9" y="387.0" width="30.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="321.9" y="398.0">ru..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (10 samples, 2.36%)</title><rect x="318.9" y="371.0" width="27.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="321.9" y="382.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (10 samples, 2.36%)</title><rect x="318.9" y="355.0" width="27.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="321.9" y="366.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (10 samples, 2.36%)</title><rect x="318.9" y="339.0" width="27.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="321.9" y="350.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (10 samples, 2.36%)</title><rect x="318.9" y="323.0" width="27.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="321.9" y="334.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (10 samples, 2.36%)</title><rect x="318.9" y="307.0" width="27.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="321.9" y="318.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (10 samples, 2.36%)</title><rect x="318.9" y="291.0" width="27.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="321.9" y="302.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (10 samples, 2.36%)</title><rect x="318.9" y="275.0" width="27.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="321.9" y="286.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (9 samples, 2.12%)</title><rect x="321.7" y="259.0" width="25.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="324.7" y="270.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (9 samples, 2.12%)</title><rect x="321.7" y="243.0" width="25.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="324.7" y="254.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (2 samples, 0.47%)</title><rect x="321.7" y="227.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="324.7" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.24%)</title><rect x="321.7" y="211.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.7" y="222.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.24%)</title><rect x="321.7" y="195.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.7" y="206.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.24%)</title><rect x="321.7" y="179.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="324.7" y="190.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.24%)</title><rect x="321.7" y="163.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="324.7" y="174.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.24%)</title><rect x="321.7" y="147.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.24%)</title><rect x="321.7" y="131.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="324.7" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.24%)</title><rect x="321.7" y="115.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="324.7" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.24%)</title><rect x="321.7" y="99.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="324.7" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (1 samples, 0.24%)</title><rect x="324.5" y="211.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="327.5" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (1 samples, 0.24%)</title><rect x="324.5" y="195.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="327.5" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (6 samples, 1.42%)</title><rect x="327.3" y="227.0" width="16.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="330.3" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.flush (1 samples, 0.24%)</title><rect x="327.3" y="211.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="330.3" y="222.0"></text>
</g>
<g>
<title>java/io/PrintStream.flush (1 samples, 0.24%)</title><rect x="327.3" y="195.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="330.3" y="206.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.24%)</title><rect x="327.3" y="179.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="330.3" y="190.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.24%)</title><rect x="327.3" y="163.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="330.3" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (2 samples, 0.47%)</title><rect x="330.0" y="211.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="333.0" y="222.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (2 samples, 0.47%)</title><rect x="330.0" y="195.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="333.0" y="206.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (2 samples, 0.47%)</title><rect x="330.0" y="179.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="333.0" y="190.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (2 samples, 0.47%)</title><rect x="330.0" y="163.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="333.0" y="174.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (2 samples, 0.47%)</title><rect x="330.0" y="147.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="333.0" y="158.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (2 samples, 0.47%)</title><rect x="330.0" y="131.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="333.0" y="142.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (2 samples, 0.47%)</title><rect x="330.0" y="115.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="333.0" y="126.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (2 samples, 0.47%)</title><rect x="330.0" y="99.0" width="5.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="333.0" y="110.0"></text>
</g>
<g>
<title>writeBytes (2 samples, 0.47%)</title><rect x="330.0" y="83.0" width="5.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="333.0" y="94.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.24%)</title><rect x="330.0" y="67.0" width="2.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="333.0" y="78.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.24%)</title><rect x="332.8" y="67.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="335.8" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.47%)</title><rect x="335.6" y="211.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.47%)</title><rect x="335.6" y="195.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="338.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.47%)</title><rect x="335.6" y="179.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="338.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.47%)</title><rect x="335.6" y="163.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.47%)</title><rect x="335.6" y="147.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.47%)</title><rect x="335.6" y="131.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.6" y="142.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.47%)</title><rect x="335.6" y="115.0" width="5.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="338.6" y="126.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.24%)</title><rect x="335.6" y="99.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="338.6" y="110.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.24%)</title><rect x="338.4" y="99.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="341.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.24%)</title><rect x="341.2" y="211.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="344.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.24%)</title><rect x="341.2" y="195.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="344.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.24%)</title><rect x="341.2" y="179.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="344.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.24%)</title><rect x="341.2" y="163.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="344.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.24%)</title><rect x="341.2" y="147.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="344.2" y="158.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.24%)</title><rect x="341.2" y="131.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="344.2" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.24%)</title><rect x="344.0" y="227.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="347.0" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.24%)</title><rect x="344.0" y="211.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="347.0" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.24%)</title><rect x="344.0" y="195.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (1 samples, 0.24%)</title><rect x="346.7" y="371.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="349.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.24%)</title><rect x="349.5" y="435.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.5" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="349.5" y="419.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="352.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.24%)</title><rect x="352.3" y="435.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="355.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.24%)</title><rect x="352.3" y="419.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="355.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.24%)</title><rect x="352.3" y="403.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="355.3" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.47%)</title><rect x="355.1" y="435.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="358.1" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 1.18%)</title><rect x="360.7" y="451.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="363.7" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (5 samples, 1.18%)</title><rect x="360.7" y="435.0" width="13.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.7" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.71%)</title><rect x="360.7" y="419.0" width="8.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="363.7" y="430.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.24%)</title><rect x="360.7" y="403.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="363.7" y="414.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.24%)</title><rect x="363.4" y="403.0" width="2.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="366.4" y="414.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.24%)</title><rect x="366.2" y="403.0" width="2.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="369.2" y="414.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.24%)</title><rect x="366.2" y="387.0" width="2.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="369.2" y="398.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.47%)</title><rect x="369.0" y="419.0" width="5.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="372.0" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=52977] (32 samples, 7.55%)</title><rect x="374.6" y="515.0" width="89.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="377.6" y="526.0">[NIO Selec..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (32 samples, 7.55%)</title><rect x="374.6" y="499.0" width="89.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="377.6" y="510.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.71%)</title><rect x="374.6" y="483.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="377.6" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.24%)</title><rect x="374.6" y="467.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="377.6" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.24%)</title><rect x="374.6" y="451.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="377.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.47%)</title><rect x="377.4" y="467.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="380.4" y="478.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.24%)</title><rect x="377.4" y="451.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="380.4" y="462.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.24%)</title><rect x="380.1" y="451.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="383.1" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (29 samples, 6.84%)</title><rect x="382.9" y="483.0" width="80.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="385.9" y="494.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (29 samples, 6.84%)</title><rect x="382.9" y="467.0" width="80.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="385.9" y="478.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (23 samples, 5.42%)</title><rect x="382.9" y="451.0" width="64.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="385.9" y="462.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (20 samples, 4.72%)</title><rect x="382.9" y="435.0" width="55.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="385.9" y="446.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (20 samples, 4.72%)</title><rect x="382.9" y="419.0" width="55.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="385.9" y="430.0">one/n..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (18 samples, 4.25%)</title><rect x="382.9" y="403.0" width="50.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="385.9" y="414.0">Reque..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (18 samples, 4.25%)</title><rect x="382.9" y="387.0" width="50.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="385.9" y="398.0">ru/ma..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (14 samples, 3.30%)</title><rect x="382.9" y="371.0" width="39.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="385.9" y="382.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (14 samples, 3.30%)</title><rect x="382.9" y="355.0" width="39.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="385.9" y="366.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (14 samples, 3.30%)</title><rect x="382.9" y="339.0" width="39.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="385.9" y="350.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (14 samples, 3.30%)</title><rect x="382.9" y="323.0" width="39.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="385.9" y="334.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (13 samples, 3.07%)</title><rect x="382.9" y="307.0" width="36.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="385.9" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (13 samples, 3.07%)</title><rect x="382.9" y="291.0" width="36.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="385.9" y="302.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (13 samples, 3.07%)</title><rect x="382.9" y="275.0" width="36.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="385.9" y="286.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (12 samples, 2.83%)</title><rect x="382.9" y="259.0" width="33.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="385.9" y="270.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (12 samples, 2.83%)</title><rect x="382.9" y="243.0" width="33.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="385.9" y="254.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (2 samples, 0.47%)</title><rect x="382.9" y="227.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="385.9" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (2 samples, 0.47%)</title><rect x="382.9" y="211.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="385.9" y="222.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (2 samples, 0.47%)</title><rect x="382.9" y="195.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="385.9" y="206.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (2 samples, 0.47%)</title><rect x="382.9" y="179.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="385.9" y="190.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (2 samples, 0.47%)</title><rect x="382.9" y="163.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="385.9" y="174.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (2 samples, 0.47%)</title><rect x="382.9" y="147.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="385.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.47%)</title><rect x="382.9" y="131.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="385.9" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.47%)</title><rect x="382.9" y="115.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="385.9" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.47%)</title><rect x="382.9" y="99.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="385.9" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (8 samples, 1.89%)</title><rect x="388.5" y="227.0" width="22.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="391.5" y="238.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (7 samples, 1.65%)</title><rect x="388.5" y="211.0" width="19.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.5" y="222.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (7 samples, 1.65%)</title><rect x="388.5" y="195.0" width="19.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="391.5" y="206.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (7 samples, 1.65%)</title><rect x="388.5" y="179.0" width="19.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="391.5" y="190.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (7 samples, 1.65%)</title><rect x="388.5" y="163.0" width="19.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="391.5" y="174.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (6 samples, 1.42%)</title><rect x="391.3" y="147.0" width="16.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.3" y="158.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (6 samples, 1.42%)</title><rect x="391.3" y="131.0" width="16.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.3" y="142.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (6 samples, 1.42%)</title><rect x="391.3" y="115.0" width="16.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="394.3" y="126.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (6 samples, 1.42%)</title><rect x="391.3" y="99.0" width="16.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="394.3" y="110.0"></text>
</g>
<g>
<title>writeBytes (6 samples, 1.42%)</title><rect x="391.3" y="83.0" width="16.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="394.3" y="94.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.24%)</title><rect x="391.3" y="67.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="394.3" y="78.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.24%)</title><rect x="394.1" y="67.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="397.1" y="78.0"></text>
</g>
<g>
<title>jni_GetObjectField (4 samples, 0.94%)</title><rect x="396.8" y="67.0" width="11.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="399.8" y="78.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.24%)</title><rect x="396.8" y="51.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="399.8" y="62.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.24%)</title><rect x="399.6" y="51.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="402.6" y="62.0"></text>
</g>
<g>
<title>java_lang_ref_Reference::is_referent_field(oopDesc*, long) (1 samples, 0.24%)</title><rect x="399.6" y="35.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="402.6" y="46.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.24%)</title><rect x="402.4" y="51.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="405.4" y="62.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.24%)</title><rect x="405.2" y="51.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="408.2" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.24%)</title><rect x="408.0" y="211.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="411.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.24%)</title><rect x="408.0" y="195.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="411.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.24%)</title><rect x="408.0" y="179.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="411.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.24%)</title><rect x="408.0" y="163.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="411.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.24%)</title><rect x="408.0" y="147.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.24%)</title><rect x="408.0" y="131.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.0" y="142.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.24%)</title><rect x="408.0" y="115.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="411.0" y="126.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.47%)</title><rect x="410.8" y="227.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="413.8" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.47%)</title><rect x="410.8" y="211.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="413.8" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.47%)</title><rect x="410.8" y="195.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.47%)</title><rect x="410.8" y="179.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="413.8" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.47%)</title><rect x="410.8" y="163.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.8" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.47%)</title><rect x="410.8" y="147.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="413.8" y="158.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.24%)</title><rect x="413.5" y="131.0" width="2.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="416.5" y="142.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.24%)</title><rect x="416.3" y="259.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="419.3" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.24%)</title><rect x="416.3" y="243.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="419.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.24%)</title><rect x="416.3" y="227.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="419.3" y="238.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.24%)</title><rect x="419.1" y="307.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="422.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (4 samples, 0.94%)</title><rect x="421.9" y="371.0" width="11.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="424.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.94%)</title><rect x="421.9" y="355.0" width="11.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="424.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.71%)</title><rect x="424.7" y="339.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="427.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.47%)</title><rect x="424.7" y="323.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="427.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.47%)</title><rect x="424.7" y="307.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="427.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.47%)</title><rect x="424.7" y="291.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.47%)</title><rect x="424.7" y="275.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.47%)</title><rect x="424.7" y="259.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="427.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.24%)</title><rect x="427.5" y="243.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="430.5" y="254.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.24%)</title><rect x="427.5" y="227.0" width="2.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="430.5" y="238.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.24%)</title><rect x="427.5" y="211.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="430.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.24%)</title><rect x="430.2" y="323.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.24%)</title><rect x="430.2" y="307.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="433.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.24%)</title><rect x="430.2" y="291.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.24%)</title><rect x="430.2" y="275.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="433.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.24%)</title><rect x="430.2" y="259.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="433.2" y="270.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.24%)</title><rect x="430.2" y="243.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="433.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.47%)</title><rect x="433.0" y="403.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.0" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.47%)</title><rect x="433.0" y="387.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.0" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.47%)</title><rect x="433.0" y="371.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="436.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.47%)</title><rect x="433.0" y="355.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.47%)</title><rect x="433.0" y="339.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="436.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.24%)</title><rect x="438.6" y="435.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="441.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.24%)</title><rect x="438.6" y="419.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="441.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.24%)</title><rect x="438.6" y="403.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="441.6" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.47%)</title><rect x="441.4" y="435.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="444.4" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 1.42%)</title><rect x="446.9" y="451.0" width="16.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="449.9" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 1.42%)</title><rect x="446.9" y="435.0" width="16.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="449.9" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.71%)</title><rect x="446.9" y="419.0" width="8.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="449.9" y="430.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.24%)</title><rect x="446.9" y="403.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="449.9" y="414.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.47%)</title><rect x="449.7" y="403.0" width="5.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="452.7" y="414.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.24%)</title><rect x="452.5" y="387.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="455.5" y="398.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.71%)</title><rect x="455.3" y="419.0" width="8.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="458.3" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=52978] (14 samples, 3.30%)</title><rect x="463.6" y="515.0" width="39.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="466.6" y="526.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14 samples, 3.30%)</title><rect x="463.6" y="499.0" width="39.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.6" y="510.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.process (14 samples, 3.30%)</title><rect x="463.6" y="483.0" width="39.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.6" y="494.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (14 samples, 3.30%)</title><rect x="463.6" y="467.0" width="39.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="466.6" y="478.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (14 samples, 3.30%)</title><rect x="463.6" y="451.0" width="39.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.6" y="462.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (12 samples, 2.83%)</title><rect x="463.6" y="435.0" width="33.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.6" y="446.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (12 samples, 2.83%)</title><rect x="463.6" y="419.0" width="33.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="466.6" y="430.0">on..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (11 samples, 2.59%)</title><rect x="463.6" y="403.0" width="30.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.6" y="414.0">Re..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (11 samples, 2.59%)</title><rect x="463.6" y="387.0" width="30.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.6" y="398.0">ru..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (10 samples, 2.36%)</title><rect x="463.6" y="371.0" width="27.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.6" y="382.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (10 samples, 2.36%)</title><rect x="463.6" y="355.0" width="27.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="466.6" y="366.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (10 samples, 2.36%)</title><rect x="463.6" y="339.0" width="27.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.6" y="350.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (10 samples, 2.36%)</title><rect x="463.6" y="323.0" width="27.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.6" y="334.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (10 samples, 2.36%)</title><rect x="463.6" y="307.0" width="27.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.6" y="318.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (10 samples, 2.36%)</title><rect x="463.6" y="291.0" width="27.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.6" y="302.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (10 samples, 2.36%)</title><rect x="463.6" y="275.0" width="27.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.6" y="286.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (9 samples, 2.12%)</title><rect x="463.6" y="259.0" width="25.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.6" y="270.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (9 samples, 2.12%)</title><rect x="463.6" y="243.0" width="25.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.6" y="254.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (5 samples, 1.18%)</title><rect x="463.6" y="227.0" width="13.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.6" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (2 samples, 0.47%)</title><rect x="463.6" y="211.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.6" y="222.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (2 samples, 0.47%)</title><rect x="463.6" y="195.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.6" y="206.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (2 samples, 0.47%)</title><rect x="463.6" y="179.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.6" y="190.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (2 samples, 0.47%)</title><rect x="463.6" y="163.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.6" y="174.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (2 samples, 0.47%)</title><rect x="463.6" y="147.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.6" y="158.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (2 samples, 0.47%)</title><rect x="463.6" y="131.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="466.6" y="142.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (2 samples, 0.47%)</title><rect x="463.6" y="115.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="466.6" y="126.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (2 samples, 0.47%)</title><rect x="463.6" y="99.0" width="5.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="466.6" y="110.0"></text>
</g>
<g>
<title>writeBytes (2 samples, 0.47%)</title><rect x="463.6" y="83.0" width="5.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="466.6" y="94.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.24%)</title><rect x="463.6" y="67.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="466.6" y="78.0"></text>
</g>
<g>
<title>jni_GetArrayLength (1 samples, 0.24%)</title><rect x="466.4" y="67.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="469.4" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.71%)</title><rect x="469.2" y="211.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="472.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.71%)</title><rect x="469.2" y="195.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="472.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.71%)</title><rect x="469.2" y="179.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="472.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.71%)</title><rect x="469.2" y="163.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="472.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.71%)</title><rect x="469.2" y="147.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="472.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.71%)</title><rect x="469.2" y="131.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="472.2" y="142.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.47%)</title><rect x="469.2" y="115.0" width="5.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="472.2" y="126.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.47%)</title><rect x="469.2" y="99.0" width="5.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="472.2" y="110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="474.8" y="115.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="477.8" y="126.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.24%)</title><rect x="474.8" y="99.0" width="2.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="477.8" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (4 samples, 0.94%)</title><rect x="477.5" y="227.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.5" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (4 samples, 0.94%)</title><rect x="477.5" y="211.0" width="11.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="480.5" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (4 samples, 0.94%)</title><rect x="477.5" y="195.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.5" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (3 samples, 0.71%)</title><rect x="477.5" y="179.0" width="8.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.5" y="190.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (3 samples, 0.71%)</title><rect x="477.5" y="163.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.5" y="174.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (3 samples, 0.71%)</title><rect x="477.5" y="147.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.5" y="158.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (3 samples, 0.71%)</title><rect x="477.5" y="131.0" width="8.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="480.5" y="142.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (3 samples, 0.71%)</title><rect x="477.5" y="115.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.5" y="126.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (3 samples, 0.71%)</title><rect x="477.5" y="99.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (3 samples, 0.71%)</title><rect x="477.5" y="83.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.5" y="94.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.71%)</title><rect x="477.5" y="67.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="480.5" y="78.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.24%)</title><rect x="477.5" y="51.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.5" y="62.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.canEncode (2 samples, 0.47%)</title><rect x="480.3" y="51.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="483.3" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.24%)</title><rect x="485.9" y="179.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="488.9" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.24%)</title><rect x="485.9" y="163.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="488.9" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.24%)</title><rect x="485.9" y="147.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="488.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.24%)</title><rect x="488.7" y="259.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (1 samples, 0.24%)</title><rect x="491.5" y="371.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.24%)</title><rect x="491.5" y="355.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.24%)</title><rect x="491.5" y="339.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.24%)</title><rect x="494.2" y="403.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.2" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.24%)</title><rect x="494.2" y="387.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.2" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.24%)</title><rect x="494.2" y="371.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="497.2" y="382.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.24%)</title><rect x="494.2" y="355.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.24%)</title><rect x="494.2" y="339.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.24%)</title><rect x="497.0" y="435.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="500.0" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.24%)</title><rect x="497.0" y="419.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="500.0" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="499.8" y="435.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="502.8" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="499.8" y="419.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="502.8" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=52979] (39 samples, 9.20%)</title><rect x="502.6" y="515.0" width="108.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="505.6" y="526.0">[NIO Selector..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (39 samples, 9.20%)</title><rect x="502.6" y="499.0" width="108.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="505.6" y="510.0">one/nio/serve..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.94%)</title><rect x="505.4" y="483.0" width="11.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="508.4" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.94%)</title><rect x="505.4" y="467.0" width="11.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="508.4" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.24%)</title><rect x="505.4" y="451.0" width="2.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="508.4" y="462.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.24%)</title><rect x="508.2" y="451.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="511.2" y="462.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.47%)</title><rect x="510.9" y="451.0" width="5.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="513.9" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (34 samples, 8.02%)</title><rect x="516.5" y="483.0" width="94.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="519.5" y="494.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (34 samples, 8.02%)</title><rect x="516.5" y="467.0" width="94.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.5" y="478.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (21 samples, 4.95%)</title><rect x="516.5" y="451.0" width="58.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.5" y="462.0">one/ni..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.24%)</title><rect x="516.5" y="435.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="519.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (18 samples, 4.25%)</title><rect x="519.3" y="435.0" width="50.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.3" y="446.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (18 samples, 4.25%)</title><rect x="519.3" y="419.0" width="50.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="522.3" y="430.0">one/n..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (17 samples, 4.01%)</title><rect x="519.3" y="403.0" width="47.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="522.3" y="414.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.24%)</title><rect x="519.3" y="387.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.24%)</title><rect x="519.3" y="371.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="522.3" y="382.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.24%)</title><rect x="519.3" y="355.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (16 samples, 3.77%)</title><rect x="522.1" y="387.0" width="44.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="525.1" y="398.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (16 samples, 3.77%)</title><rect x="522.1" y="371.0" width="44.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="525.1" y="382.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (16 samples, 3.77%)</title><rect x="522.1" y="355.0" width="44.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="525.1" y="366.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (16 samples, 3.77%)</title><rect x="522.1" y="339.0" width="44.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="525.1" y="350.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (16 samples, 3.77%)</title><rect x="522.1" y="323.0" width="44.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="525.1" y="334.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (16 samples, 3.77%)</title><rect x="522.1" y="307.0" width="44.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="525.1" y="318.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (16 samples, 3.77%)</title><rect x="522.1" y="291.0" width="44.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="525.1" y="302.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (16 samples, 3.77%)</title><rect x="522.1" y="275.0" width="44.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="525.1" y="286.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (16 samples, 3.77%)</title><rect x="522.1" y="259.0" width="44.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="525.1" y="270.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (16 samples, 3.77%)</title><rect x="522.1" y="243.0" width="44.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="525.1" y="254.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.24%)</title><rect x="522.1" y="227.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="525.1" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.24%)</title><rect x="522.1" y="211.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.1" y="222.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.24%)</title><rect x="522.1" y="195.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="525.1" y="206.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.24%)</title><rect x="522.1" y="179.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="525.1" y="190.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.24%)</title><rect x="522.1" y="163.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="525.1" y="174.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.24%)</title><rect x="522.1" y="147.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="525.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.24%)</title><rect x="522.1" y="131.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.1" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.24%)</title><rect x="522.1" y="115.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="525.1" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.24%)</title><rect x="522.1" y="99.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="525.1" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (12 samples, 2.83%)</title><rect x="524.9" y="227.0" width="33.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.9" y="238.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.flush (2 samples, 0.47%)</title><rect x="524.9" y="211.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.9" y="222.0"></text>
</g>
<g>
<title>java/io/PrintStream.flush (1 samples, 0.24%)</title><rect x="527.6" y="195.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="530.6" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (8 samples, 1.89%)</title><rect x="530.4" y="211.0" width="22.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="533.4" y="222.0">c..</text>
</g>
<g>
<title>java/io/FilterOutputStream.write (8 samples, 1.89%)</title><rect x="530.4" y="195.0" width="22.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="533.4" y="206.0">j..</text>
</g>
<g>
<title>java/io/PrintStream.write (8 samples, 1.89%)</title><rect x="530.4" y="179.0" width="22.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="533.4" y="190.0">j..</text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (8 samples, 1.89%)</title><rect x="530.4" y="163.0" width="22.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="533.4" y="174.0">j..</text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (8 samples, 1.89%)</title><rect x="530.4" y="147.0" width="22.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.4" y="158.0">j..</text>
</g>
<g>
<title>java/io/FileOutputStream.write (8 samples, 1.89%)</title><rect x="530.4" y="131.0" width="22.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="533.4" y="142.0">j..</text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (7 samples, 1.65%)</title><rect x="533.2" y="115.0" width="19.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="536.2" y="126.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (7 samples, 1.65%)</title><rect x="533.2" y="99.0" width="19.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="536.2" y="110.0"></text>
</g>
<g>
<title>writeBytes (7 samples, 1.65%)</title><rect x="533.2" y="83.0" width="19.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="536.2" y="94.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.24%)</title><rect x="533.2" y="67.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="536.2" y="78.0"></text>
</g>
<g>
<title>__libc_write (3 samples, 0.71%)</title><rect x="536.0" y="67.0" width="8.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="539.0" y="78.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.24%)</title><rect x="544.3" y="67.0" width="2.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="547.3" y="78.0"></text>
</g>
<g>
<title>arrayOopDesc::base_offset_in_bytes(BasicType) (1 samples, 0.24%)</title><rect x="547.1" y="67.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="550.1" y="78.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.24%)</title><rect x="549.9" y="67.0" width="2.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="552.9" y="78.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.24%)</title><rect x="549.9" y="51.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="552.9" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.47%)</title><rect x="552.7" y="211.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="555.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.47%)</title><rect x="552.7" y="195.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="555.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.47%)</title><rect x="552.7" y="179.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.24%)</title><rect x="555.5" y="163.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.24%)</title><rect x="555.5" y="147.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="558.5" y="158.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.24%)</title><rect x="555.5" y="131.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="558.5" y="142.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.24%)</title><rect x="555.5" y="115.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="558.5" y="126.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (3 samples, 0.71%)</title><rect x="558.3" y="227.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="561.3" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.47%)</title><rect x="558.3" y="211.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="561.3" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.24%)</title><rect x="561.0" y="195.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.24%)</title><rect x="561.0" y="179.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.0" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.24%)</title><rect x="561.0" y="163.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.0" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.24%)</title><rect x="561.0" y="147.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="564.0" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (1 samples, 0.24%)</title><rect x="563.8" y="211.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="566.8" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.24%)</title><rect x="563.8" y="195.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="566.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.24%)</title><rect x="563.8" y="179.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="566.8" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.24%)</title><rect x="563.8" y="163.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="566.8" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.24%)</title><rect x="563.8" y="147.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="566.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.24%)</title><rect x="566.6" y="403.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="569.6" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.24%)</title><rect x="566.6" y="387.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="569.6" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.24%)</title><rect x="566.6" y="371.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="569.6" y="382.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.24%)</title><rect x="566.6" y="355.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="569.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.24%)</title><rect x="566.6" y="339.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.24%)</title><rect x="569.4" y="435.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="572.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.24%)</title><rect x="569.4" y="419.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="572.4" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.24%)</title><rect x="569.4" y="403.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="572.4" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="572.2" y="435.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="575.2" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (13 samples, 3.07%)</title><rect x="575.0" y="451.0" width="36.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.0" y="462.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (13 samples, 3.07%)</title><rect x="575.0" y="435.0" width="36.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="578.0" y="446.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 1.18%)</title><rect x="575.0" y="419.0" width="13.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="578.0" y="430.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.24%)</title><rect x="577.7" y="403.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="580.7" y="414.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.24%)</title><rect x="580.5" y="403.0" width="2.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="583.5" y="414.0"></text>
</g>
<g>
<title>arrayOopDesc::base_offset_in_bytes(BasicType) (1 samples, 0.24%)</title><rect x="583.3" y="403.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="586.3" y="414.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.24%)</title><rect x="586.1" y="403.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="589.1" y="414.0"></text>
</g>
<g>
<title>__recv (8 samples, 1.89%)</title><rect x="588.9" y="419.0" width="22.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="591.9" y="430.0">_..</text>
</g>
<g>
<title>[NIO Selector #7 tid=52980] (24 samples, 5.66%)</title><rect x="611.1" y="515.0" width="66.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="614.1" y="526.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (24 samples, 5.66%)</title><rect x="611.1" y="499.0" width="66.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="614.1" y="510.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.47%)</title><rect x="611.1" y="483.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="614.1" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.47%)</title><rect x="611.1" y="467.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="614.1" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.47%)</title><rect x="616.7" y="483.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="619.7" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.47%)</title><rect x="616.7" y="467.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.7" y="478.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.24%)</title><rect x="616.7" y="451.0" width="2.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="619.7" y="462.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.24%)</title><rect x="619.5" y="451.0" width="2.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="622.5" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (20 samples, 4.72%)</title><rect x="622.3" y="483.0" width="55.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.3" y="494.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (20 samples, 4.72%)</title><rect x="622.3" y="467.0" width="55.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="625.3" y="478.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (17 samples, 4.01%)</title><rect x="622.3" y="451.0" width="47.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="625.3" y="462.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (15 samples, 3.54%)</title><rect x="625.0" y="435.0" width="41.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.0" y="446.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (15 samples, 3.54%)</title><rect x="625.0" y="419.0" width="41.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.0" y="430.0">one..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (15 samples, 3.54%)</title><rect x="625.0" y="403.0" width="41.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.0" y="414.0">Req..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (15 samples, 3.54%)</title><rect x="625.0" y="387.0" width="41.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.0" y="398.0">ru/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (13 samples, 3.07%)</title><rect x="625.0" y="371.0" width="36.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.0" y="382.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (13 samples, 3.07%)</title><rect x="625.0" y="355.0" width="36.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.0" y="366.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (13 samples, 3.07%)</title><rect x="625.0" y="339.0" width="36.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.0" y="350.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (13 samples, 3.07%)</title><rect x="625.0" y="323.0" width="36.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.0" y="334.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (13 samples, 3.07%)</title><rect x="625.0" y="307.0" width="36.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.0" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (13 samples, 3.07%)</title><rect x="625.0" y="291.0" width="36.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.0" y="302.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (13 samples, 3.07%)</title><rect x="625.0" y="275.0" width="36.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.0" y="286.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (10 samples, 2.36%)</title><rect x="630.6" y="259.0" width="27.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="633.6" y="270.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (10 samples, 2.36%)</title><rect x="630.6" y="243.0" width="27.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.6" y="254.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (3 samples, 0.71%)</title><rect x="630.6" y="227.0" width="8.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="633.6" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (3 samples, 0.71%)</title><rect x="630.6" y="211.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.6" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (3 samples, 0.71%)</title><rect x="630.6" y="195.0" width="8.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="633.6" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.24%)</title><rect x="636.2" y="179.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="639.2" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.24%)</title><rect x="636.2" y="163.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="639.2" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.24%)</title><rect x="636.2" y="147.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="639.2" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (5 samples, 1.18%)</title><rect x="639.0" y="227.0" width="13.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.0" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (2 samples, 0.47%)</title><rect x="639.0" y="211.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="642.0" y="222.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (2 samples, 0.47%)</title><rect x="639.0" y="195.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="642.0" y="206.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (2 samples, 0.47%)</title><rect x="639.0" y="179.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="642.0" y="190.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (2 samples, 0.47%)</title><rect x="639.0" y="163.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="642.0" y="174.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (2 samples, 0.47%)</title><rect x="639.0" y="147.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="642.0" y="158.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (2 samples, 0.47%)</title><rect x="639.0" y="131.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.0" y="142.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (2 samples, 0.47%)</title><rect x="639.0" y="115.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.0" y="126.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (2 samples, 0.47%)</title><rect x="639.0" y="99.0" width="5.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="642.0" y="110.0"></text>
</g>
<g>
<title>handleWrite (1 samples, 0.24%)</title><rect x="639.0" y="83.0" width="2.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="642.0" y="94.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.24%)</title><rect x="641.7" y="83.0" width="2.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="644.7" y="94.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.24%)</title><rect x="641.7" y="67.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="644.7" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.47%)</title><rect x="644.5" y="211.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="647.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.47%)</title><rect x="644.5" y="195.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="647.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.47%)</title><rect x="644.5" y="179.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="647.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.47%)</title><rect x="644.5" y="163.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="647.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.47%)</title><rect x="644.5" y="147.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="647.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.47%)</title><rect x="644.5" y="131.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="647.5" y="142.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.24%)</title><rect x="644.5" y="115.0" width="2.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="647.5" y="126.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.24%)</title><rect x="644.5" y="99.0" width="2.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="647.5" y="110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="647.3" y="115.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="650.3" y="126.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.24%)</title><rect x="647.3" y="99.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="650.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.24%)</title><rect x="650.1" y="211.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="653.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.24%)</title><rect x="650.1" y="195.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="653.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.24%)</title><rect x="650.1" y="179.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="653.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.24%)</title><rect x="650.1" y="163.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="653.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.24%)</title><rect x="650.1" y="147.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.1" y="158.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.24%)</title><rect x="650.1" y="131.0" width="2.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="653.1" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.47%)</title><rect x="652.9" y="227.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.9" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.47%)</title><rect x="652.9" y="211.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="655.9" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.47%)</title><rect x="652.9" y="195.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="655.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.24%)</title><rect x="655.7" y="179.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="658.7" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.24%)</title><rect x="655.7" y="163.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="658.7" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.24%)</title><rect x="655.7" y="147.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.7" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.24%)</title><rect x="658.4" y="259.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="661.4" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.24%)</title><rect x="658.4" y="243.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="661.4" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.24%)</title><rect x="658.4" y="227.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (2 samples, 0.47%)</title><rect x="661.2" y="371.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="664.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.24%)</title><rect x="664.0" y="355.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="667.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.24%)</title><rect x="664.0" y="339.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="667.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.24%)</title><rect x="664.0" y="323.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="667.0" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="666.8" y="435.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.8" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (3 samples, 0.71%)</title><rect x="669.6" y="451.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="672.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.71%)</title><rect x="669.6" y="435.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="672.6" y="446.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.24%)</title><rect x="672.4" y="419.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="675.4" y="430.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.24%)</title><rect x="672.4" y="403.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="675.4" y="414.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.24%)</title><rect x="675.1" y="419.0" width="2.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="678.1" y="430.0"></text>
</g>
<g>
<title>[pool-3-thread-1 tid=53019] (24 samples, 5.66%)</title><rect x="677.9" y="515.0" width="66.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="680.9" y="526.0">[pool-3..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.24%)</title><rect x="677.9" y="499.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="680.9" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.24%)</title><rect x="677.9" y="483.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="680.9" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.24%)</title><rect x="677.9" y="467.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="680.9" y="478.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.24%)</title><rect x="677.9" y="451.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="680.9" y="462.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.24%)</title><rect x="680.7" y="499.0" width="2.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="683.7" y="510.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.24%)</title><rect x="680.7" y="483.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="683.7" y="494.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.24%)</title><rect x="680.7" y="467.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="683.7" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (22 samples, 5.19%)</title><rect x="683.5" y="499.0" width="61.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="686.5" y="510.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (22 samples, 5.19%)</title><rect x="683.5" y="483.0" width="61.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="686.5" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (22 samples, 5.19%)</title><rect x="683.5" y="467.0" width="61.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.5" y="478.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 2.12%)</title><rect x="683.5" y="451.0" width="25.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.5" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (9 samples, 2.12%)</title><rect x="683.5" y="435.0" width="25.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.5" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 1.65%)</title><rect x="683.5" y="419.0" width="19.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.24%)</title><rect x="683.5" y="403.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.24%)</title><rect x="683.5" y="387.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="686.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.24%)</title><rect x="683.5" y="371.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="686.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.24%)</title><rect x="683.5" y="355.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.24%)</title><rect x="683.5" y="339.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.5" y="350.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.24%)</title><rect x="683.5" y="323.0" width="2.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="686.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 1.42%)</title><rect x="686.3" y="403.0" width="16.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 1.42%)</title><rect x="686.3" y="387.0" width="16.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="689.3" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.94%)</title><rect x="686.3" y="371.0" width="11.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="689.3" y="382.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (4 samples, 0.94%)</title><rect x="686.3" y="355.0" width="11.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="689.3" y="366.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.47%)</title><rect x="697.4" y="371.0" width="5.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="700.4" y="382.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.24%)</title><rect x="697.4" y="355.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="700.4" y="366.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.24%)</title><rect x="700.2" y="355.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="703.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.47%)</title><rect x="703.0" y="419.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="706.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.47%)</title><rect x="703.0" y="403.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.47%)</title><rect x="703.0" y="387.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="706.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.47%)</title><rect x="703.0" y="371.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="706.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.47%)</title><rect x="703.0" y="355.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="706.0" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.24%)</title><rect x="703.0" y="339.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="706.0" y="350.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.24%)</title><rect x="703.0" y="323.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="706.0" y="334.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.24%)</title><rect x="705.8" y="339.0" width="2.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="708.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.run (13 samples, 3.07%)</title><rect x="708.5" y="451.0" width="36.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.5" y="462.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (13 samples, 3.07%)</title><rect x="708.5" y="435.0" width="36.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="711.5" y="446.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.94%)</title><rect x="708.5" y="419.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="711.5" y="430.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.24%)</title><rect x="708.5" y="403.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="711.5" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.24%)</title><rect x="708.5" y="387.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="711.5" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.24%)</title><rect x="708.5" y="371.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="711.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.24%)</title><rect x="711.3" y="403.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="714.3" y="414.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.24%)</title><rect x="711.3" y="387.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="714.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.24%)</title><rect x="711.3" y="371.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="714.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.47%)</title><rect x="714.1" y="403.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="717.1" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.24%)</title><rect x="714.1" y="387.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.24%)</title><rect x="716.9" y="387.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="719.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.24%)</title><rect x="716.9" y="371.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.24%)</title><rect x="716.9" y="355.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="719.9" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.24%)</title><rect x="716.9" y="339.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (9 samples, 2.12%)</title><rect x="719.7" y="419.0" width="25.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="722.7" y="430.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (9 samples, 2.12%)</title><rect x="719.7" y="403.0" width="25.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="722.7" y="414.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (9 samples, 2.12%)</title><rect x="719.7" y="387.0" width="25.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="722.7" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (9 samples, 2.12%)</title><rect x="719.7" y="371.0" width="25.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="722.7" y="382.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.24%)</title><rect x="722.5" y="355.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="725.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.24%)</title><rect x="722.5" y="339.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="725.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (1 samples, 0.24%)</title><rect x="725.2" y="355.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="728.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.24%)</title><rect x="728.0" y="355.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="731.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.24%)</title><rect x="728.0" y="339.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.24%)</title><rect x="728.0" y="323.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.24%)</title><rect x="728.0" y="307.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.0" y="318.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.24%)</title><rect x="728.0" y="291.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 1.18%)</title><rect x="730.8" y="355.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.8" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.94%)</title><rect x="733.6" y="339.0" width="11.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="736.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.94%)</title><rect x="733.6" y="323.0" width="11.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="736.6" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.71%)</title><rect x="733.6" y="307.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.24%)</title><rect x="741.9" y="307.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="744.9" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-2 tid=53020] (22 samples, 5.19%)</title><rect x="744.7" y="515.0" width="61.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="747.7" y="526.0">[pool-..</text>
</g>
<g>
<title>java/lang/Thread.run (22 samples, 5.19%)</title><rect x="744.7" y="499.0" width="61.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.7" y="510.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (22 samples, 5.19%)</title><rect x="744.7" y="483.0" width="61.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.7" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (22 samples, 5.19%)</title><rect x="744.7" y="467.0" width="61.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="747.7" y="478.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 2.12%)</title><rect x="744.7" y="451.0" width="25.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.7" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (9 samples, 2.12%)</title><rect x="744.7" y="435.0" width="25.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="747.7" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 2.12%)</title><rect x="744.7" y="419.0" width="25.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.7" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.24%)</title><rect x="744.7" y="403.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.24%)</title><rect x="744.7" y="387.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.24%)</title><rect x="744.7" y="371.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.24%)</title><rect x="744.7" y="355.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.7" y="366.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="744.7" y="339.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="747.7" y="350.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.24%)</title><rect x="744.7" y="323.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="747.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.47%)</title><rect x="747.5" y="403.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="750.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.47%)</title><rect x="747.5" y="387.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="750.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.24%)</title><rect x="747.5" y="371.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="750.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.24%)</title><rect x="747.5" y="355.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="750.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.24%)</title><rect x="747.5" y="339.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.5" y="350.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.24%)</title><rect x="747.5" y="323.0" width="2.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="750.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.24%)</title><rect x="750.3" y="371.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="753.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 1.42%)</title><rect x="753.1" y="403.0" width="16.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="756.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 1.42%)</title><rect x="753.1" y="387.0" width="16.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.1" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.94%)</title><rect x="753.1" y="371.0" width="11.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="756.1" y="382.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.24%)</title><rect x="753.1" y="355.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="756.1" y="366.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.71%)</title><rect x="755.8" y="355.0" width="8.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="758.8" y="366.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.47%)</title><rect x="764.2" y="371.0" width="5.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="767.2" y="382.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.47%)</title><rect x="764.2" y="355.0" width="5.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="767.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.run (13 samples, 3.07%)</title><rect x="769.8" y="451.0" width="36.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="772.8" y="462.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (13 samples, 3.07%)</title><rect x="769.8" y="435.0" width="36.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="772.8" y="446.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 1.18%)</title><rect x="769.8" y="419.0" width="13.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="772.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 1.18%)</title><rect x="769.8" y="403.0" width="13.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="772.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.47%)</title><rect x="769.8" y="387.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="772.8" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.24%)</title><rect x="772.5" y="371.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="775.5" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.24%)</title><rect x="772.5" y="355.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="775.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.24%)</title><rect x="772.5" y="339.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="775.5" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.71%)</title><rect x="775.3" y="387.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="778.3" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.71%)</title><rect x="775.3" y="371.0" width="8.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="778.3" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.71%)</title><rect x="775.3" y="355.0" width="8.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.3" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.71%)</title><rect x="775.3" y="339.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="778.3" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.47%)</title><rect x="775.3" y="323.0" width="5.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="778.3" y="334.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.24%)</title><rect x="775.3" y="307.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="778.3" y="318.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.24%)</title><rect x="778.1" y="307.0" width="2.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="781.1" y="318.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.24%)</title><rect x="780.9" y="323.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="783.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (8 samples, 1.89%)</title><rect x="783.7" y="419.0" width="22.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="786.7" y="430.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (8 samples, 1.89%)</title><rect x="783.7" y="403.0" width="22.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="786.7" y="414.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (8 samples, 1.89%)</title><rect x="783.7" y="387.0" width="22.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="786.7" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (8 samples, 1.89%)</title><rect x="783.7" y="371.0" width="22.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="786.7" y="382.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.71%)</title><rect x="783.7" y="355.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="786.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.71%)</title><rect x="783.7" y="339.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="786.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (2 samples, 0.47%)</title><rect x="792.0" y="355.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="795.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.71%)</title><rect x="797.6" y="355.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="800.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.71%)</title><rect x="797.6" y="339.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="800.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.71%)</title><rect x="797.6" y="323.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="800.6" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.71%)</title><rect x="797.6" y="307.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="800.6" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-3 tid=53021] (20 samples, 4.72%)</title><rect x="805.9" y="515.0" width="55.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="808.9" y="526.0">[pool..</text>
</g>
<g>
<title>java/lang/Thread.run (20 samples, 4.72%)</title><rect x="805.9" y="499.0" width="55.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.9" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (20 samples, 4.72%)</title><rect x="805.9" y="483.0" width="55.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="808.9" y="494.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (20 samples, 4.72%)</title><rect x="805.9" y="467.0" width="55.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="808.9" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 2.59%)</title><rect x="805.9" y="451.0" width="30.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="808.9" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (11 samples, 2.59%)</title><rect x="805.9" y="435.0" width="30.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="808.9" y="446.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 2.59%)</title><rect x="805.9" y="419.0" width="30.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="808.9" y="430.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.24%)</title><rect x="805.9" y="403.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.24%)</title><rect x="805.9" y="387.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="808.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.24%)</title><rect x="805.9" y="371.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (4 samples, 0.94%)</title><rect x="808.7" y="403.0" width="11.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="811.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.94%)</title><rect x="808.7" y="387.0" width="11.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.71%)</title><rect x="808.7" y="371.0" width="8.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="811.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.71%)</title><rect x="808.7" y="355.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.71%)</title><rect x="808.7" y="339.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="811.7" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.24%)</title><rect x="808.7" y="323.0" width="2.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="811.7" y="334.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.24%)</title><rect x="808.7" y="307.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="811.7" y="318.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.47%)</title><rect x="811.5" y="323.0" width="5.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="814.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.24%)</title><rect x="817.1" y="371.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="820.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 1.42%)</title><rect x="819.9" y="403.0" width="16.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="822.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 1.42%)</title><rect x="819.9" y="387.0" width="16.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="822.9" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 1.18%)</title><rect x="819.9" y="371.0" width="13.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="822.9" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.47%)</title><rect x="822.6" y="355.0" width="5.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="825.6" y="366.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.24%)</title><rect x="828.2" y="355.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="831.2" y="366.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.24%)</title><rect x="831.0" y="355.0" width="2.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="834.0" y="366.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="833.8" y="371.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="836.8" y="382.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.24%)</title><rect x="833.8" y="355.0" width="2.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="836.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.run (9 samples, 2.12%)</title><rect x="836.6" y="451.0" width="25.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="839.6" y="462.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (9 samples, 2.12%)</title><rect x="836.6" y="435.0" width="25.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="839.6" y="446.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.47%)</title><rect x="836.6" y="419.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="839.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.47%)</title><rect x="836.6" y="403.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="839.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.47%)</title><rect x="836.6" y="387.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="839.6" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.47%)</title><rect x="836.6" y="371.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="839.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.47%)</title><rect x="836.6" y="355.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="839.6" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.47%)</title><rect x="836.6" y="339.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="839.6" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.24%)</title><rect x="836.6" y="323.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="839.6" y="334.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.24%)</title><rect x="836.6" y="307.0" width="2.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="839.6" y="318.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.24%)</title><rect x="836.6" y="291.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="839.6" y="302.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.24%)</title><rect x="839.3" y="323.0" width="2.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="842.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (7 samples, 1.65%)</title><rect x="842.1" y="419.0" width="19.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="845.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (7 samples, 1.65%)</title><rect x="842.1" y="403.0" width="19.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="845.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (7 samples, 1.65%)</title><rect x="842.1" y="387.0" width="19.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="845.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (7 samples, 1.65%)</title><rect x="842.1" y="371.0" width="19.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="845.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (2 samples, 0.47%)</title><rect x="844.9" y="355.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="847.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.24%)</title><rect x="850.5" y="355.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="853.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.24%)</title><rect x="850.5" y="339.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.24%)</title><rect x="850.5" y="323.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="853.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.24%)</title><rect x="850.5" y="307.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.5" y="318.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.24%)</title><rect x="850.5" y="291.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="853.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.71%)</title><rect x="853.3" y="355.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.3" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.71%)</title><rect x="853.3" y="339.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="856.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.71%)</title><rect x="853.3" y="323.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.3" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.47%)</title><rect x="853.3" y="307.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.3" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.24%)</title><rect x="858.8" y="307.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="861.8" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-4 tid=53022] (24 samples, 5.66%)</title><rect x="861.6" y="515.0" width="66.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="864.6" y="526.0">[pool-3..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.24%)</title><rect x="861.6" y="499.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="864.6" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.24%)</title><rect x="861.6" y="483.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="864.6" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.24%)</title><rect x="861.6" y="467.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="864.6" y="478.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.24%)</title><rect x="861.6" y="451.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="864.6" y="462.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.24%)</title><rect x="861.6" y="435.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="864.6" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.run (23 samples, 5.42%)</title><rect x="864.4" y="499.0" width="64.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="867.4" y="510.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (23 samples, 5.42%)</title><rect x="864.4" y="483.0" width="64.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="867.4" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (23 samples, 5.42%)</title><rect x="864.4" y="467.0" width="64.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="867.4" y="478.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 2.12%)</title><rect x="864.4" y="451.0" width="25.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="867.4" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (9 samples, 2.12%)</title><rect x="864.4" y="435.0" width="25.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="867.4" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 1.65%)</title><rect x="864.4" y="419.0" width="19.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="867.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.71%)</title><rect x="864.4" y="403.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="867.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.71%)</title><rect x="864.4" y="387.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="867.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.71%)</title><rect x="864.4" y="371.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="867.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.71%)</title><rect x="864.4" y="355.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="867.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.71%)</title><rect x="864.4" y="339.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="867.4" y="350.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.71%)</title><rect x="864.4" y="323.0" width="8.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="867.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.94%)</title><rect x="872.7" y="403.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="875.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.94%)</title><rect x="872.7" y="387.0" width="11.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="875.7" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.71%)</title><rect x="872.7" y="371.0" width="8.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="875.7" y="382.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.24%)</title><rect x="872.7" y="355.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="875.7" y="366.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.47%)</title><rect x="875.5" y="355.0" width="5.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="878.5" y="366.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="881.1" y="371.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="884.1" y="382.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.24%)</title><rect x="881.1" y="355.0" width="2.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="884.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.47%)</title><rect x="883.9" y="419.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="886.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.47%)</title><rect x="883.9" y="403.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="886.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.47%)</title><rect x="883.9" y="387.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="886.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.47%)</title><rect x="883.9" y="371.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="886.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.47%)</title><rect x="883.9" y="355.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="886.9" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.24%)</title><rect x="883.9" y="339.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="886.9" y="350.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.24%)</title><rect x="883.9" y="323.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="886.9" y="334.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.24%)</title><rect x="886.7" y="339.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="889.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.run (14 samples, 3.30%)</title><rect x="889.4" y="451.0" width="39.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="892.4" y="462.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (14 samples, 3.30%)</title><rect x="889.4" y="435.0" width="39.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="892.4" y="446.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.94%)</title><rect x="889.4" y="419.0" width="11.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="892.4" y="430.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.24%)</title><rect x="892.2" y="403.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="895.2" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.24%)</title><rect x="892.2" y="387.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="895.2" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.24%)</title><rect x="892.2" y="371.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="895.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.47%)</title><rect x="895.0" y="403.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.0" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.24%)</title><rect x="895.0" y="387.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="898.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.24%)</title><rect x="897.8" y="387.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="900.8" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.24%)</title><rect x="897.8" y="371.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="900.8" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.24%)</title><rect x="897.8" y="355.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="900.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.24%)</title><rect x="897.8" y="339.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.8" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.24%)</title><rect x="897.8" y="323.0" width="2.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="900.8" y="334.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.24%)</title><rect x="897.8" y="307.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="900.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (10 samples, 2.36%)</title><rect x="900.6" y="419.0" width="27.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="903.6" y="430.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.24%)</title><rect x="900.6" y="403.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="903.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.24%)</title><rect x="900.6" y="387.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="903.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.24%)</title><rect x="900.6" y="371.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="903.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (1 samples, 0.24%)</title><rect x="900.6" y="355.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="903.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (1 samples, 0.24%)</title><rect x="900.6" y="339.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="903.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.24%)</title><rect x="903.3" y="403.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="906.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (8 samples, 1.89%)</title><rect x="906.1" y="403.0" width="22.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="909.1" y="414.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (8 samples, 1.89%)</title><rect x="906.1" y="387.0" width="22.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="909.1" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (8 samples, 1.89%)</title><rect x="906.1" y="371.0" width="22.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="909.1" y="382.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.24%)</title><rect x="906.1" y="355.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="909.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.24%)</title><rect x="906.1" y="339.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="909.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (4 samples, 0.94%)</title><rect x="908.9" y="355.0" width="11.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="911.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.24%)</title><rect x="920.0" y="355.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="923.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.24%)</title><rect x="920.0" y="339.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="923.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.24%)</title><rect x="920.0" y="323.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="923.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.24%)</title><rect x="920.0" y="307.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="923.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.24%)</title><rect x="920.0" y="291.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="923.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.47%)</title><rect x="922.8" y="355.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="925.8" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.47%)</title><rect x="922.8" y="339.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="925.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.47%)</title><rect x="922.8" y="323.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="925.8" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.47%)</title><rect x="922.8" y="307.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="925.8" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-5 tid=53023] (27 samples, 6.37%)</title><rect x="928.4" y="515.0" width="75.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="931.4" y="526.0">[pool-3-..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.47%)</title><rect x="928.4" y="499.0" width="5.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="931.4" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.47%)</title><rect x="928.4" y="483.0" width="5.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="931.4" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.47%)</title><rect x="928.4" y="467.0" width="5.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="931.4" y="478.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.24%)</title><rect x="928.4" y="451.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="931.4" y="462.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.24%)</title><rect x="931.2" y="451.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="934.2" y="462.0"></text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.24%)</title><rect x="934.0" y="499.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="937.0" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (24 samples, 5.66%)</title><rect x="936.7" y="499.0" width="66.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="939.7" y="510.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (24 samples, 5.66%)</title><rect x="936.7" y="483.0" width="66.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="939.7" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (24 samples, 5.66%)</title><rect x="936.7" y="467.0" width="66.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="939.7" y="478.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.24%)</title><rect x="936.7" y="451.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="939.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.24%)</title><rect x="936.7" y="435.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="939.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (1 samples, 0.24%)</title><rect x="936.7" y="419.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="939.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (1 samples, 0.24%)</title><rect x="936.7" y="403.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="939.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 2.12%)</title><rect x="939.5" y="451.0" width="25.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="942.5" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (9 samples, 2.12%)</title><rect x="939.5" y="435.0" width="25.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="942.5" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 1.65%)</title><rect x="939.5" y="419.0" width="19.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="942.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.24%)</title><rect x="939.5" y="403.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="942.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.24%)</title><rect x="939.5" y="387.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="942.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.24%)</title><rect x="939.5" y="371.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="942.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.24%)</title><rect x="942.3" y="403.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="945.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.24%)</title><rect x="942.3" y="387.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="945.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.24%)</title><rect x="942.3" y="371.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="945.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.24%)</title><rect x="942.3" y="355.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="945.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.24%)</title><rect x="942.3" y="339.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="945.3" y="350.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.24%)</title><rect x="942.3" y="323.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="945.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 1.18%)</title><rect x="945.1" y="403.0" width="13.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="948.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 1.18%)</title><rect x="945.1" y="387.0" width="13.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="948.1" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.94%)</title><rect x="945.1" y="371.0" width="11.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="948.1" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.24%)</title><rect x="947.9" y="355.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="950.9" y="366.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.24%)</title><rect x="947.9" y="339.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="950.9" y="350.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.24%)</title><rect x="950.7" y="355.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="953.7" y="366.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.24%)</title><rect x="953.4" y="355.0" width="2.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="956.4" y="366.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="956.2" y="371.0" width="2.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="959.2" y="382.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.24%)</title><rect x="956.2" y="355.0" width="2.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="959.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.47%)</title><rect x="959.0" y="419.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="962.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.47%)</title><rect x="959.0" y="403.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="962.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.47%)</title><rect x="959.0" y="387.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="962.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.47%)</title><rect x="959.0" y="371.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="962.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.47%)</title><rect x="959.0" y="355.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="962.0" y="366.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.24%)</title><rect x="959.0" y="339.0" width="2.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="962.0" y="350.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.24%)</title><rect x="959.0" y="323.0" width="2.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="962.0" y="334.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.24%)</title><rect x="961.8" y="339.0" width="2.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="964.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.run (14 samples, 3.30%)</title><rect x="964.6" y="451.0" width="38.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="967.6" y="462.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (14 samples, 3.30%)</title><rect x="964.6" y="435.0" width="38.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.6" y="446.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.94%)</title><rect x="967.4" y="419.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="970.4" y="430.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.24%)</title><rect x="967.4" y="403.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="970.4" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.24%)</title><rect x="967.4" y="387.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="970.4" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.24%)</title><rect x="967.4" y="371.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="970.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.71%)</title><rect x="970.1" y="403.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="973.1" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.24%)</title><rect x="970.1" y="387.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="973.1" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.24%)</title><rect x="970.1" y="371.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="973.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.24%)</title><rect x="970.1" y="355.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="973.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.24%)</title><rect x="970.1" y="339.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="973.1" y="350.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.24%)</title><rect x="970.1" y="323.0" width="2.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="973.1" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.47%)</title><rect x="972.9" y="387.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="975.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.47%)</title><rect x="972.9" y="371.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="975.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.47%)</title><rect x="972.9" y="355.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="975.9" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.47%)</title><rect x="972.9" y="339.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="975.9" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.24%)</title><rect x="972.9" y="323.0" width="2.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="975.9" y="334.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.24%)</title><rect x="972.9" y="307.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="975.9" y="318.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.24%)</title><rect x="975.7" y="323.0" width="2.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="978.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (9 samples, 2.12%)</title><rect x="978.5" y="419.0" width="25.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="981.5" y="430.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.24%)</title><rect x="978.5" y="403.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="981.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.24%)</title><rect x="978.5" y="387.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="981.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock.readLock (1 samples, 0.24%)</title><rect x="981.3" y="403.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="984.3" y="414.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.24%)</title><rect x="981.3" y="387.0" width="2.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="984.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (7 samples, 1.65%)</title><rect x="984.1" y="403.0" width="19.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="987.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (7 samples, 1.65%)</title><rect x="984.1" y="387.0" width="19.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="987.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (7 samples, 1.65%)</title><rect x="984.1" y="371.0" width="19.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="987.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (4 samples, 0.94%)</title><rect x="984.1" y="355.0" width="11.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="987.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.24%)</title><rect x="995.2" y="355.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="998.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.24%)</title><rect x="995.2" y="339.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="998.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.47%)</title><rect x="998.0" y="355.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1001.0" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.47%)</title><rect x="998.0" y="339.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1001.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.47%)</title><rect x="998.0" y="323.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1001.0" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.47%)</title><rect x="998.0" y="307.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1001.0" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-6 tid=53024] (26 samples, 6.13%)</title><rect x="1003.5" y="515.0" width="72.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1006.5" y="526.0">[pool-3-..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.24%)</title><rect x="1003.5" y="499.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1006.5" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.24%)</title><rect x="1003.5" y="483.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1006.5" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.24%)</title><rect x="1003.5" y="467.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1006.5" y="478.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.24%)</title><rect x="1003.5" y="451.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1006.5" y="462.0"></text>
</g>
<g>
<title>[no_Java_frame] (2 samples, 0.47%)</title><rect x="1006.3" y="499.0" width="5.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1009.3" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (23 samples, 5.42%)</title><rect x="1011.9" y="499.0" width="64.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1014.9" y="510.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (23 samples, 5.42%)</title><rect x="1011.9" y="483.0" width="64.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1014.9" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (23 samples, 5.42%)</title><rect x="1011.9" y="467.0" width="64.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1014.9" y="478.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 2.12%)</title><rect x="1011.9" y="451.0" width="25.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1014.9" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (9 samples, 2.12%)</title><rect x="1011.9" y="435.0" width="25.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1014.9" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 1.89%)</title><rect x="1011.9" y="419.0" width="22.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1014.9" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.47%)</title><rect x="1014.7" y="403.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1017.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.47%)</title><rect x="1014.7" y="387.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1017.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.47%)</title><rect x="1014.7" y="371.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1017.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.47%)</title><rect x="1014.7" y="355.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1017.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.47%)</title><rect x="1014.7" y="339.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1017.7" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.24%)</title><rect x="1014.7" y="323.0" width="2.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1017.7" y="334.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.24%)</title><rect x="1014.7" y="307.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1017.7" y="318.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.24%)</title><rect x="1017.5" y="323.0" width="2.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1020.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 1.18%)</title><rect x="1020.2" y="403.0" width="14.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1023.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 1.18%)</title><rect x="1020.2" y="387.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1023.2" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.71%)</title><rect x="1020.2" y="371.0" width="8.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1023.2" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.24%)</title><rect x="1020.2" y="355.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1023.2" y="366.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.47%)</title><rect x="1023.0" y="355.0" width="5.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1026.0" y="366.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.47%)</title><rect x="1028.6" y="371.0" width="5.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1031.6" y="382.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.24%)</title><rect x="1028.6" y="355.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1031.6" y="366.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.24%)</title><rect x="1031.4" y="355.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1034.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.24%)</title><rect x="1034.2" y="419.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1037.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.24%)</title><rect x="1034.2" y="403.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1037.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.24%)</title><rect x="1034.2" y="387.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1037.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.24%)</title><rect x="1034.2" y="371.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1037.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.24%)</title><rect x="1034.2" y="355.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1037.2" y="366.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.24%)</title><rect x="1034.2" y="339.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1037.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.run (14 samples, 3.30%)</title><rect x="1036.9" y="451.0" width="39.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1039.9" y="462.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (14 samples, 3.30%)</title><rect x="1036.9" y="435.0" width="39.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1039.9" y="446.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8 samples, 1.89%)</title><rect x="1036.9" y="419.0" width="22.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1039.9" y="430.0">o..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.24%)</title><rect x="1036.9" y="403.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1039.9" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.24%)</title><rect x="1036.9" y="387.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1039.9" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.24%)</title><rect x="1036.9" y="371.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1039.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 1.42%)</title><rect x="1039.7" y="403.0" width="16.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1042.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.71%)</title><rect x="1039.7" y="387.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1042.7" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.47%)</title><rect x="1042.5" y="371.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1045.5" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.47%)</title><rect x="1042.5" y="355.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1045.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.47%)</title><rect x="1042.5" y="339.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1045.5" y="350.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.24%)</title><rect x="1045.3" y="323.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1048.3" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.71%)</title><rect x="1048.1" y="387.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.71%)</title><rect x="1048.1" y="371.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.1" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.47%)</title><rect x="1050.8" y="355.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1053.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.47%)</title><rect x="1050.8" y="339.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1053.8" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.47%)</title><rect x="1050.8" y="323.0" width="5.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1053.8" y="334.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.24%)</title><rect x="1053.6" y="307.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1056.6" y="318.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.24%)</title><rect x="1053.6" y="291.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1056.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.24%)</title><rect x="1056.4" y="403.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1059.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.24%)</title><rect x="1056.4" y="387.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1059.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.24%)</title><rect x="1056.4" y="371.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1059.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (6 samples, 1.42%)</title><rect x="1059.2" y="419.0" width="16.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1062.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (6 samples, 1.42%)</title><rect x="1059.2" y="403.0" width="16.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1062.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (6 samples, 1.42%)</title><rect x="1059.2" y="387.0" width="16.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1062.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (6 samples, 1.42%)</title><rect x="1059.2" y="371.0" width="16.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1062.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.24%)</title><rect x="1059.2" y="355.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1062.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.24%)</title><rect x="1059.2" y="339.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1062.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (3 samples, 0.71%)</title><rect x="1062.0" y="355.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1065.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.47%)</title><rect x="1070.3" y="355.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1073.3" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.47%)</title><rect x="1070.3" y="339.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1073.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.47%)</title><rect x="1070.3" y="323.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1073.3" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.47%)</title><rect x="1070.3" y="307.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1073.3" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-7 tid=53026] (20 samples, 4.72%)</title><rect x="1075.9" y="515.0" width="55.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1078.9" y="526.0">[pool..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.47%)</title><rect x="1075.9" y="499.0" width="5.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1078.9" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.47%)</title><rect x="1075.9" y="483.0" width="5.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1078.9" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.47%)</title><rect x="1075.9" y="467.0" width="5.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1078.9" y="478.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.47%)</title><rect x="1075.9" y="451.0" width="5.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1078.9" y="462.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.24%)</title><rect x="1078.7" y="435.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1081.7" y="446.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.24%)</title><rect x="1081.5" y="499.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1084.5" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (17 samples, 4.01%)</title><rect x="1084.2" y="499.0" width="47.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1087.2" y="510.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17 samples, 4.01%)</title><rect x="1084.2" y="483.0" width="47.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1087.2" y="494.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17 samples, 4.01%)</title><rect x="1084.2" y="467.0" width="47.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.2" y="478.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (7 samples, 1.65%)</title><rect x="1084.2" y="451.0" width="19.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1087.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 1.42%)</title><rect x="1087.0" y="435.0" width="16.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1090.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 1.42%)</title><rect x="1087.0" y="419.0" width="16.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1090.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.71%)</title><rect x="1087.0" y="403.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1090.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.71%)</title><rect x="1087.0" y="387.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1090.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.71%)</title><rect x="1087.0" y="371.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.71%)</title><rect x="1087.0" y="355.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1090.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.71%)</title><rect x="1087.0" y="339.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1090.0" y="350.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.47%)</title><rect x="1087.0" y="323.0" width="5.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1090.0" y="334.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.24%)</title><rect x="1087.0" y="307.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1090.0" y="318.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.24%)</title><rect x="1089.8" y="307.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1092.8" y="318.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.24%)</title><rect x="1092.6" y="323.0" width="2.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1095.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.71%)</title><rect x="1095.4" y="403.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1098.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.71%)</title><rect x="1095.4" y="387.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1098.4" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.24%)</title><rect x="1095.4" y="371.0" width="2.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1098.4" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.24%)</title><rect x="1095.4" y="355.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1098.4" y="366.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.24%)</title><rect x="1095.4" y="339.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1098.4" y="350.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.24%)</title><rect x="1095.4" y="323.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1098.4" y="334.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.47%)</title><rect x="1098.2" y="371.0" width="5.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1101.2" y="382.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.47%)</title><rect x="1098.2" y="355.0" width="5.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1101.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.run (10 samples, 2.36%)</title><rect x="1103.7" y="451.0" width="27.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1106.7" y="462.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (10 samples, 2.36%)</title><rect x="1103.7" y="435.0" width="27.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1106.7" y="446.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.94%)</title><rect x="1103.7" y="419.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1106.7" y="430.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.47%)</title><rect x="1103.7" y="403.0" width="5.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1106.7" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.47%)</title><rect x="1103.7" y="387.0" width="5.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1106.7" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.47%)</title><rect x="1103.7" y="371.0" width="5.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1106.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.47%)</title><rect x="1109.3" y="403.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1112.3" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.47%)</title><rect x="1109.3" y="387.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1112.3" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.47%)</title><rect x="1109.3" y="371.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1112.3" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.47%)</title><rect x="1109.3" y="355.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1112.3" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.47%)</title><rect x="1109.3" y="339.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1112.3" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.47%)</title><rect x="1109.3" y="323.0" width="5.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1112.3" y="334.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.24%)</title><rect x="1109.3" y="307.0" width="2.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1112.3" y="318.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.24%)</title><rect x="1112.1" y="307.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1115.1" y="318.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.24%)</title><rect x="1112.1" y="291.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1115.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (6 samples, 1.42%)</title><rect x="1114.9" y="419.0" width="16.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1117.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (6 samples, 1.42%)</title><rect x="1114.9" y="403.0" width="16.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1117.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (6 samples, 1.42%)</title><rect x="1114.9" y="387.0" width="16.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1117.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (6 samples, 1.42%)</title><rect x="1114.9" y="371.0" width="16.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.24%)</title><rect x="1114.9" y="355.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1117.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.24%)</title><rect x="1114.9" y="339.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1117.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (2 samples, 0.47%)</title><rect x="1117.6" y="355.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1120.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.71%)</title><rect x="1123.2" y="355.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1126.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.71%)</title><rect x="1123.2" y="339.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1126.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.71%)</title><rect x="1123.2" y="323.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1126.2" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.71%)</title><rect x="1123.2" y="307.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1126.2" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-8 tid=53025] (21 samples, 4.95%)</title><rect x="1131.6" y="515.0" width="58.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1134.6" y="526.0">[pool-..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.47%)</title><rect x="1131.6" y="499.0" width="5.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1134.6" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.47%)</title><rect x="1131.6" y="483.0" width="5.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1134.6" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.47%)</title><rect x="1131.6" y="467.0" width="5.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1134.6" y="478.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.47%)</title><rect x="1131.6" y="451.0" width="5.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1134.6" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.run (19 samples, 4.48%)</title><rect x="1137.1" y="499.0" width="52.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1140.1" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (19 samples, 4.48%)</title><rect x="1137.1" y="483.0" width="52.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1140.1" y="494.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (19 samples, 4.48%)</title><rect x="1137.1" y="467.0" width="52.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1140.1" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.71%)</title><rect x="1137.1" y="451.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1140.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.71%)</title><rect x="1137.1" y="435.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1140.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.71%)</title><rect x="1137.1" y="419.0" width="8.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1140.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.71%)</title><rect x="1137.1" y="403.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1140.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.71%)</title><rect x="1137.1" y="387.0" width="8.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1140.1" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.47%)</title><rect x="1137.1" y="371.0" width="5.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1140.1" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.24%)</title><rect x="1137.1" y="355.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1140.1" y="366.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.24%)</title><rect x="1137.1" y="339.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1140.1" y="350.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.24%)</title><rect x="1139.9" y="355.0" width="2.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1142.9" y="366.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="1142.7" y="371.0" width="2.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1145.7" y="382.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.24%)</title><rect x="1142.7" y="355.0" width="2.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1145.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.run (16 samples, 3.77%)</title><rect x="1145.5" y="451.0" width="44.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1148.5" y="462.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (16 samples, 3.77%)</title><rect x="1145.5" y="435.0" width="44.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1148.5" y="446.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 2.36%)</title><rect x="1145.5" y="419.0" width="27.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1148.5" y="430.0">o..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.71%)</title><rect x="1145.5" y="403.0" width="8.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1148.5" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.71%)</title><rect x="1145.5" y="387.0" width="8.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1148.5" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.47%)</title><rect x="1145.5" y="371.0" width="5.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1148.5" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.47%)</title><rect x="1145.5" y="355.0" width="5.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1148.5" y="366.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.24%)</title><rect x="1151.0" y="371.0" width="2.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1154.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.24%)</title><rect x="1153.8" y="403.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1156.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.24%)</title><rect x="1153.8" y="387.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1156.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.24%)</title><rect x="1153.8" y="371.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1156.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 1.42%)</title><rect x="1156.6" y="403.0" width="16.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1159.6" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.24%)</title><rect x="1156.6" y="387.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1159.6" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.18%)</title><rect x="1159.4" y="387.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1162.4" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.18%)</title><rect x="1159.4" y="371.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1162.4" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.94%)</title><rect x="1162.2" y="355.0" width="11.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1165.2" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.94%)</title><rect x="1162.2" y="339.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1165.2" y="350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.24%)</title><rect x="1162.2" y="323.0" width="2.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1165.2" y="334.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.24%)</title><rect x="1162.2" y="307.0" width="2.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1165.2" y="318.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.47%)</title><rect x="1165.0" y="323.0" width="5.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1168.0" y="334.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.24%)</title><rect x="1170.5" y="323.0" width="2.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1173.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (6 samples, 1.42%)</title><rect x="1173.3" y="419.0" width="16.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1176.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (6 samples, 1.42%)</title><rect x="1173.3" y="403.0" width="16.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1176.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (6 samples, 1.42%)</title><rect x="1173.3" y="387.0" width="16.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1176.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (6 samples, 1.42%)</title><rect x="1173.3" y="371.0" width="16.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1176.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.24%)</title><rect x="1173.3" y="355.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1176.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.24%)</title><rect x="1173.3" y="339.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1176.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.24%)</title><rect x="1173.3" y="323.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1176.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.24%)</title><rect x="1176.1" y="355.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1179.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.24%)</title><rect x="1176.1" y="339.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1179.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.24%)</title><rect x="1176.1" y="323.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1179.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.24%)</title><rect x="1176.1" y="307.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1179.1" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.24%)</title><rect x="1176.1" y="291.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1179.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.94%)</title><rect x="1178.9" y="355.0" width="11.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1181.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.47%)</title><rect x="1184.4" y="339.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1187.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.47%)</title><rect x="1184.4" y="323.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1187.4" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.24%)</title><rect x="1184.4" y="307.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1187.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.24%)</title><rect x="1187.2" y="307.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1190.2" y="318.0"></text>
</g>
</g>
</svg>
