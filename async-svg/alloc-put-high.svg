<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (29,924 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>[JMX server connection timeout 35 tid=7200] (19 samples, 0.06%)</title><rect x="10.0" y="883.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (19 samples, 0.06%)</title><rect x="10.0" y="867.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (19 samples, 0.06%)</title><rect x="10.0" y="851.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (19 samples, 0.06%)</title><rect x="10.0" y="835.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1773364394.linkToTargetMethod (19 samples, 0.06%)</title><rect x="10.0" y="819.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1675904620.invoke (19 samples, 0.06%)</title><rect x="10.0" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.06%)</title><rect x="10.0" y="787.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (19 samples, 0.06%)</title><rect x="10.0" y="771.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (19 samples, 0.06%)</title><rect x="10.0" y="755.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.06%)</title><rect x="10.0" y="739.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=6986] (3,477 samples, 11.62%)</title><rect x="10.7" y="883.0" width="137.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="13.7" y="894.0">[NIO Selector #0 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,477 samples, 11.62%)</title><rect x="10.7" y="867.0" width="137.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.7" y="878.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (98 samples, 0.33%)</title><rect x="10.7" y="851.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.7" y="862.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (98 samples, 0.33%)</title><rect x="10.7" y="835.0" width="3.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="13.7" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,379 samples, 11.29%)</title><rect x="14.6" y="851.0" width="133.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.6" y="862.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,379 samples, 11.29%)</title><rect x="14.6" y="835.0" width="133.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.6" y="846.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,379 samples, 11.29%)</title><rect x="14.6" y="819.0" width="133.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.6" y="830.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,521 samples, 8.42%)</title><rect x="14.6" y="803.0" width="99.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.6" y="814.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,521 samples, 8.42%)</title><rect x="14.6" y="787.0" width="99.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.6" y="798.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (2,433 samples, 8.13%)</title><rect x="14.6" y="771.0" width="96.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.6" y="782.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (188 samples, 0.63%)</title><rect x="14.6" y="755.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (188 samples, 0.63%)</title><rect x="14.6" y="739.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (126 samples, 0.42%)</title><rect x="14.6" y="723.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (126 samples, 0.42%)</title><rect x="14.6" y="707.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.6" y="718.0"></text>
</g>
<g>
<title>byte[] (126 samples, 0.42%)</title><rect x="14.6" y="691.0" width="5.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="17.6" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (62 samples, 0.21%)</title><rect x="19.6" y="723.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="22.6" y="734.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (62 samples, 0.21%)</title><rect x="19.6" y="707.0" width="2.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="22.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (87 samples, 0.29%)</title><rect x="22.0" y="755.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (87 samples, 0.29%)</title><rect x="22.0" y="739.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (87 samples, 0.29%)</title><rect x="22.0" y="723.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (87 samples, 0.29%)</title><rect x="22.0" y="707.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.0" y="718.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.13%)</title><rect x="22.0" y="691.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="25.0" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (48 samples, 0.16%)</title><rect x="23.6" y="691.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.6" y="702.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.16%)</title><rect x="23.6" y="675.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="26.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (2,158 samples, 7.21%)</title><rect x="25.5" y="755.0" width="85.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.5" y="766.0">ru/mail/po..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1,396 samples, 4.67%)</title><rect x="25.5" y="739.0" width="55.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="28.5" y="750.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1,396 samples, 4.67%)</title><rect x="25.5" y="723.0" width="55.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.5" y="734.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1,364 samples, 4.56%)</title><rect x="25.5" y="707.0" width="53.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="28.5" y="718.0">ch/qo..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (98 samples, 0.33%)</title><rect x="25.5" y="691.0" width="3.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="28.5" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1,266 samples, 4.23%)</title><rect x="29.3" y="691.0" width="49.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.3" y="702.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1,266 samples, 4.23%)</title><rect x="29.3" y="675.0" width="49.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.3" y="686.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1,266 samples, 4.23%)</title><rect x="29.3" y="659.0" width="49.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.3" y="670.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1,266 samples, 4.23%)</title><rect x="29.3" y="643.0" width="49.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="32.3" y="654.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1,266 samples, 4.23%)</title><rect x="29.3" y="627.0" width="49.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.3" y="638.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1,266 samples, 4.23%)</title><rect x="29.3" y="611.0" width="49.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.3" y="622.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (276 samples, 0.92%)</title><rect x="29.3" y="595.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="32.3" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (276 samples, 0.92%)</title><rect x="29.3" y="579.0" width="10.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="32.3" y="590.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (276 samples, 0.92%)</title><rect x="29.3" y="563.0" width="10.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.3" y="574.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (276 samples, 0.92%)</title><rect x="29.3" y="547.0" width="10.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.3" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (30 samples, 0.10%)</title><rect x="29.3" y="531.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="32.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (131 samples, 0.44%)</title><rect x="30.5" y="531.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.5" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (131 samples, 0.44%)</title><rect x="30.5" y="515.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="33.5" y="526.0"></text>
</g>
<g>
<title>byte[] (131 samples, 0.44%)</title><rect x="30.5" y="499.0" width="5.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="33.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (115 samples, 0.38%)</title><rect x="35.7" y="531.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="38.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (115 samples, 0.38%)</title><rect x="35.7" y="515.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="38.7" y="526.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.10%)</title><rect x="35.7" y="499.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="38.7" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (84 samples, 0.28%)</title><rect x="36.9" y="499.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.9" y="510.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.28%)</title><rect x="36.9" y="483.0" width="3.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="39.9" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (8 samples, 0.03%)</title><rect x="40.2" y="595.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="43.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.03%)</title><rect x="40.2" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="43.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.03%)</title><rect x="40.2" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="43.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (8 samples, 0.03%)</title><rect x="40.2" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="43.2" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.03%)</title><rect x="40.2" y="531.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="43.2" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (982 samples, 3.28%)</title><rect x="40.5" y="595.0" width="38.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.5" y="606.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (798 samples, 2.67%)</title><rect x="40.5" y="579.0" width="31.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="43.5" y="590.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (798 samples, 2.67%)</title><rect x="40.5" y="563.0" width="31.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.5" y="574.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (8 samples, 0.03%)</title><rect x="40.5" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.5" y="558.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (7 samples, 0.02%)</title><rect x="40.6" y="531.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.6" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (34 samples, 0.11%)</title><rect x="40.8" y="547.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="43.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (52 samples, 0.17%)</title><rect x="42.2" y="547.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="45.2" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (52 samples, 0.17%)</title><rect x="42.2" y="531.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.2" y="542.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.17%)</title><rect x="42.2" y="515.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="45.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (458 samples, 1.53%)</title><rect x="44.2" y="547.0" width="18.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.2" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (458 samples, 1.53%)</title><rect x="44.2" y="531.0" width="18.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.2" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (458 samples, 1.53%)</title><rect x="44.2" y="515.0" width="18.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="47.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (458 samples, 1.53%)</title><rect x="44.2" y="499.0" width="18.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.2" y="510.0"></text>
</g>
<g>
<title>byte[] (458 samples, 1.53%)</title><rect x="44.2" y="483.0" width="18.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="47.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (246 samples, 0.82%)</title><rect x="62.3" y="547.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (246 samples, 0.82%)</title><rect x="62.3" y="531.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (49 samples, 0.16%)</title><rect x="62.3" y="515.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="65.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (197 samples, 0.66%)</title><rect x="64.2" y="515.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="67.2" y="526.0"></text>
</g>
<g>
<title>byte[] (197 samples, 0.66%)</title><rect x="64.2" y="499.0" width="7.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="67.2" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (184 samples, 0.61%)</title><rect x="72.0" y="579.0" width="7.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (184 samples, 0.61%)</title><rect x="72.0" y="563.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (184 samples, 0.61%)</title><rect x="72.0" y="547.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (184 samples, 0.61%)</title><rect x="72.0" y="531.0" width="7.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="75.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (184 samples, 0.61%)</title><rect x="72.0" y="515.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="75.0" y="526.0"></text>
</g>
<g>
<title>byte[] (184 samples, 0.61%)</title><rect x="72.0" y="499.0" width="7.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="75.0" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (32 samples, 0.11%)</title><rect x="79.2" y="707.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="82.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (51 samples, 0.17%)</title><rect x="80.5" y="739.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="83.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (51 samples, 0.17%)</title><rect x="80.5" y="723.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (51 samples, 0.17%)</title><rect x="80.5" y="707.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="83.5" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (51 samples, 0.17%)</title><rect x="80.5" y="691.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.5" y="702.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.17%)</title><rect x="80.5" y="675.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="83.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (57 samples, 0.19%)</title><rect x="82.5" y="739.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (57 samples, 0.19%)</title><rect x="82.5" y="723.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.5" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (57 samples, 0.19%)</title><rect x="82.5" y="707.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="85.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (654 samples, 2.19%)</title><rect x="84.8" y="739.0" width="25.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.8" y="750.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (91 samples, 0.30%)</title><rect x="84.8" y="723.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.8" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (91 samples, 0.30%)</title><rect x="84.8" y="707.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.8" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (91 samples, 0.30%)</title><rect x="84.8" y="691.0" width="3.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="87.8" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (43 samples, 0.14%)</title><rect x="88.4" y="723.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="91.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (149 samples, 0.50%)</title><rect x="90.0" y="723.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="93.0" y="734.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.20%)</title><rect x="90.0" y="707.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="93.0" y="718.0"></text>
</g>
<g>
<title>java.lang.String[] (55 samples, 0.18%)</title><rect x="92.5" y="707.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="95.5" y="718.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.11%)</title><rect x="94.6" y="707.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="97.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (371 samples, 1.24%)</title><rect x="95.9" y="723.0" width="14.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.9" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (147 samples, 0.49%)</title><rect x="95.9" y="707.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="98.9" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (147 samples, 0.49%)</title><rect x="95.9" y="691.0" width="5.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="98.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (220 samples, 0.74%)</title><rect x="101.9" y="707.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.9" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (154 samples, 0.51%)</title><rect x="101.9" y="691.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.9" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (154 samples, 0.51%)</title><rect x="101.9" y="675.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.9" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (154 samples, 0.51%)</title><rect x="101.9" y="659.0" width="6.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="104.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (22 samples, 0.07%)</title><rect x="108.0" y="691.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="111.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (22 samples, 0.07%)</title><rect x="108.0" y="675.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.0" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (17 samples, 0.06%)</title><rect x="108.1" y="659.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="111.1" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (44 samples, 0.15%)</title><rect x="108.8" y="691.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="111.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (88 samples, 0.29%)</title><rect x="110.6" y="771.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (88 samples, 0.29%)</title><rect x="110.6" y="755.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (88 samples, 0.29%)</title><rect x="110.6" y="739.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="113.6" y="750.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.12%)</title><rect x="110.6" y="723.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="113.6" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (53 samples, 0.18%)</title><rect x="111.9" y="723.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="114.9" y="734.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.18%)</title><rect x="111.9" y="707.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="114.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (372 samples, 1.24%)</title><rect x="114.0" y="803.0" width="14.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.0" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (61 samples, 0.20%)</title><rect x="114.0" y="787.0" width="2.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="117.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (113 samples, 0.38%)</title><rect x="116.4" y="787.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.4" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (113 samples, 0.38%)</title><rect x="116.4" y="771.0" width="4.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="119.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (198 samples, 0.66%)</title><rect x="120.9" y="787.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="123.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (198 samples, 0.66%)</title><rect x="120.9" y="771.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="123.9" y="782.0"></text>
</g>
<g>
<title>char[] (107 samples, 0.36%)</title><rect x="120.9" y="755.0" width="4.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="123.9" y="766.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.13%)</title><rect x="125.1" y="755.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="128.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (53 samples, 0.18%)</title><rect x="126.6" y="755.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (53 samples, 0.18%)</title><rect x="126.6" y="739.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (53 samples, 0.18%)</title><rect x="126.6" y="723.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.6" y="734.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.18%)</title><rect x="126.6" y="707.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="129.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (37 samples, 0.12%)</title><rect x="128.7" y="803.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="131.7" y="814.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.12%)</title><rect x="128.7" y="787.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="131.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (74 samples, 0.25%)</title><rect x="130.2" y="803.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (74 samples, 0.25%)</title><rect x="130.2" y="787.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (74 samples, 0.25%)</title><rect x="130.2" y="771.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="133.2" y="782.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.10%)</title><rect x="130.2" y="755.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="133.2" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (43 samples, 0.14%)</title><rect x="131.4" y="755.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.4" y="766.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.14%)</title><rect x="131.4" y="739.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="134.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (375 samples, 1.25%)</title><rect x="133.1" y="803.0" width="14.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (375 samples, 1.25%)</title><rect x="133.1" y="787.0" width="14.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.1" y="798.0"></text>
</g>
<g>
<title>char[] (172 samples, 0.57%)</title><rect x="133.1" y="771.0" width="6.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="136.1" y="782.0"></text>
</g>
<g>
<title>java.lang.String (74 samples, 0.25%)</title><rect x="139.9" y="771.0" width="2.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="142.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (129 samples, 0.43%)</title><rect x="142.8" y="771.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (129 samples, 0.43%)</title><rect x="142.8" y="755.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="145.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (129 samples, 0.43%)</title><rect x="142.8" y="739.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.8" y="750.0"></text>
</g>
<g>
<title>byte[] (129 samples, 0.43%)</title><rect x="142.8" y="723.0" width="5.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="145.8" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=6987] (3,491 samples, 11.67%)</title><rect x="147.9" y="883.0" width="137.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="150.9" y="894.0">[NIO Selector #1 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,491 samples, 11.67%)</title><rect x="147.9" y="867.0" width="137.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.9" y="878.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/Session.process (3,491 samples, 11.67%)</title><rect x="147.9" y="851.0" width="137.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.9" y="862.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,491 samples, 11.67%)</title><rect x="147.9" y="835.0" width="137.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="150.9" y="846.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,491 samples, 11.67%)</title><rect x="147.9" y="819.0" width="137.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="150.9" y="830.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,585 samples, 8.64%)</title><rect x="147.9" y="803.0" width="101.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="150.9" y="814.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,585 samples, 8.64%)</title><rect x="147.9" y="787.0" width="101.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.9" y="798.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (2,498 samples, 8.35%)</title><rect x="147.9" y="771.0" width="98.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.9" y="782.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (201 samples, 0.67%)</title><rect x="147.9" y="755.0" width="7.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="150.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (201 samples, 0.67%)</title><rect x="147.9" y="739.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (123 samples, 0.41%)</title><rect x="147.9" y="723.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (123 samples, 0.41%)</title><rect x="147.9" y="707.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.9" y="718.0"></text>
</g>
<g>
<title>byte[] (123 samples, 0.41%)</title><rect x="147.9" y="691.0" width="4.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="150.9" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (78 samples, 0.26%)</title><rect x="152.7" y="723.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.7" y="734.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (78 samples, 0.26%)</title><rect x="152.7" y="707.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="155.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (71 samples, 0.24%)</title><rect x="155.8" y="755.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (71 samples, 0.24%)</title><rect x="155.8" y="739.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (71 samples, 0.24%)</title><rect x="155.8" y="723.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (71 samples, 0.24%)</title><rect x="155.8" y="707.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="158.8" y="718.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.12%)</title><rect x="155.8" y="691.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="158.8" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 0.12%)</title><rect x="157.2" y="691.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="160.2" y="702.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.12%)</title><rect x="157.2" y="675.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="160.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (2,226 samples, 7.44%)</title><rect x="158.6" y="755.0" width="87.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="161.6" y="766.0">ru/mail/po..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1,532 samples, 5.12%)</title><rect x="158.6" y="739.0" width="60.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.6" y="750.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1,532 samples, 5.12%)</title><rect x="158.6" y="723.0" width="60.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="161.6" y="734.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1,511 samples, 5.05%)</title><rect x="158.6" y="707.0" width="59.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.6" y="718.0">ch/qos..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (118 samples, 0.39%)</title><rect x="158.6" y="691.0" width="4.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="161.6" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1,393 samples, 4.66%)</title><rect x="163.2" y="691.0" width="55.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.2" y="702.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1,393 samples, 4.66%)</title><rect x="163.2" y="675.0" width="55.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="166.2" y="686.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1,393 samples, 4.66%)</title><rect x="163.2" y="659.0" width="55.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="166.2" y="670.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1,393 samples, 4.66%)</title><rect x="163.2" y="643.0" width="55.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.2" y="654.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1,393 samples, 4.66%)</title><rect x="163.2" y="627.0" width="55.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.2" y="638.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1,393 samples, 4.66%)</title><rect x="163.2" y="611.0" width="55.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.2" y="622.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (290 samples, 0.97%)</title><rect x="163.2" y="595.0" width="11.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.2" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (290 samples, 0.97%)</title><rect x="163.2" y="579.0" width="11.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="166.2" y="590.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (290 samples, 0.97%)</title><rect x="163.2" y="563.0" width="11.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.2" y="574.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (290 samples, 0.97%)</title><rect x="163.2" y="547.0" width="11.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.2" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (38 samples, 0.13%)</title><rect x="163.2" y="531.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="166.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (136 samples, 0.45%)</title><rect x="164.7" y="531.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="167.7" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (136 samples, 0.45%)</title><rect x="164.7" y="515.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="167.7" y="526.0"></text>
</g>
<g>
<title>byte[] (136 samples, 0.45%)</title><rect x="164.7" y="499.0" width="5.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="167.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (116 samples, 0.39%)</title><rect x="170.1" y="531.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="173.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (116 samples, 0.39%)</title><rect x="170.1" y="515.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="173.1" y="526.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.15%)</title><rect x="170.1" y="499.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="173.1" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (71 samples, 0.24%)</title><rect x="171.9" y="499.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="174.9" y="510.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.24%)</title><rect x="171.9" y="483.0" width="2.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="174.9" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (7 samples, 0.02%)</title><rect x="174.7" y="595.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="177.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.02%)</title><rect x="174.7" y="579.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.02%)</title><rect x="174.7" y="563.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="177.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (7 samples, 0.02%)</title><rect x="174.7" y="547.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (7 samples, 0.02%)</title><rect x="174.7" y="531.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="177.7" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1,096 samples, 3.66%)</title><rect x="174.9" y="595.0" width="43.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.9" y="606.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (882 samples, 2.95%)</title><rect x="174.9" y="579.0" width="34.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="177.9" y="590.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (882 samples, 2.95%)</title><rect x="174.9" y="563.0" width="34.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="177.9" y="574.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (9 samples, 0.03%)</title><rect x="174.9" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="177.9" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (38 samples, 0.13%)</title><rect x="175.3" y="547.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="178.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (46 samples, 0.15%)</title><rect x="176.8" y="547.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="179.8" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (46 samples, 0.15%)</title><rect x="176.8" y="531.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="179.8" y="542.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.15%)</title><rect x="176.8" y="515.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="179.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (525 samples, 1.75%)</title><rect x="178.6" y="547.0" width="20.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="181.6" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (525 samples, 1.75%)</title><rect x="178.6" y="531.0" width="20.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="181.6" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (525 samples, 1.75%)</title><rect x="178.6" y="515.0" width="20.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (525 samples, 1.75%)</title><rect x="178.6" y="499.0" width="20.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.6" y="510.0"></text>
</g>
<g>
<title>byte[] (525 samples, 1.75%)</title><rect x="178.6" y="483.0" width="20.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="181.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (264 samples, 0.88%)</title><rect x="199.3" y="547.0" width="10.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="202.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (264 samples, 0.88%)</title><rect x="199.3" y="531.0" width="10.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="202.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (50 samples, 0.17%)</title><rect x="199.3" y="515.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="202.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (214 samples, 0.72%)</title><rect x="201.3" y="515.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="204.3" y="526.0"></text>
</g>
<g>
<title>byte[] (214 samples, 0.72%)</title><rect x="201.3" y="499.0" width="8.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="204.3" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (214 samples, 0.72%)</title><rect x="209.7" y="579.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="212.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (214 samples, 0.72%)</title><rect x="209.7" y="563.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (214 samples, 0.72%)</title><rect x="209.7" y="547.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="212.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (214 samples, 0.72%)</title><rect x="209.7" y="531.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (214 samples, 0.72%)</title><rect x="209.7" y="515.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="212.7" y="526.0"></text>
</g>
<g>
<title>byte[] (214 samples, 0.72%)</title><rect x="209.7" y="499.0" width="8.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="212.7" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (21 samples, 0.07%)</title><rect x="218.2" y="707.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="221.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (42 samples, 0.14%)</title><rect x="219.0" y="739.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.0" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (42 samples, 0.14%)</title><rect x="219.0" y="723.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (42 samples, 0.14%)</title><rect x="219.0" y="707.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.0" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (42 samples, 0.14%)</title><rect x="219.0" y="691.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.0" y="702.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.14%)</title><rect x="219.0" y="675.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="222.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (76 samples, 0.25%)</title><rect x="220.7" y="739.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="223.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (76 samples, 0.25%)</title><rect x="220.7" y="723.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.7" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (76 samples, 0.25%)</title><rect x="220.7" y="707.0" width="2.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="223.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (576 samples, 1.92%)</title><rect x="223.6" y="739.0" width="22.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="226.6" y="750.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (72 samples, 0.24%)</title><rect x="223.6" y="723.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="226.6" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (72 samples, 0.24%)</title><rect x="223.6" y="707.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="226.6" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (72 samples, 0.24%)</title><rect x="223.6" y="691.0" width="2.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="226.6" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (53 samples, 0.18%)</title><rect x="226.5" y="723.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="229.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (141 samples, 0.47%)</title><rect x="228.6" y="723.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.6" y="734.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.22%)</title><rect x="228.6" y="707.0" width="2.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="231.6" y="718.0"></text>
</g>
<g>
<title>java.lang.String[] (50 samples, 0.17%)</title><rect x="231.1" y="707.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="234.1" y="718.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.09%)</title><rect x="233.1" y="707.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="236.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (310 samples, 1.04%)</title><rect x="234.1" y="723.0" width="12.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="237.1" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (130 samples, 0.43%)</title><rect x="234.1" y="707.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.1" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (130 samples, 0.43%)</title><rect x="234.1" y="691.0" width="5.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="237.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (178 samples, 0.59%)</title><rect x="239.3" y="707.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="242.3" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (141 samples, 0.47%)</title><rect x="239.3" y="691.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="242.3" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (141 samples, 0.47%)</title><rect x="239.3" y="675.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="242.3" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (141 samples, 0.47%)</title><rect x="239.3" y="659.0" width="5.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="242.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (8 samples, 0.03%)</title><rect x="244.9" y="691.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="247.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (8 samples, 0.03%)</title><rect x="244.9" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="247.9" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (7 samples, 0.02%)</title><rect x="244.9" y="659.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="247.9" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (29 samples, 0.10%)</title><rect x="245.2" y="691.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="248.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (87 samples, 0.29%)</title><rect x="246.4" y="771.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="249.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (87 samples, 0.29%)</title><rect x="246.4" y="755.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (87 samples, 0.29%)</title><rect x="246.4" y="739.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.4" y="750.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.10%)</title><rect x="246.4" y="723.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="249.4" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (58 samples, 0.19%)</title><rect x="247.5" y="723.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="250.5" y="734.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.19%)</title><rect x="247.5" y="707.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="250.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (425 samples, 1.42%)</title><rect x="249.8" y="803.0" width="16.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="252.8" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (65 samples, 0.22%)</title><rect x="249.8" y="787.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="252.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (126 samples, 0.42%)</title><rect x="252.4" y="787.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="255.4" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (126 samples, 0.42%)</title><rect x="252.4" y="771.0" width="4.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="255.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (234 samples, 0.78%)</title><rect x="257.3" y="787.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (234 samples, 0.78%)</title><rect x="257.3" y="771.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="260.3" y="782.0"></text>
</g>
<g>
<title>char[] (152 samples, 0.51%)</title><rect x="257.3" y="755.0" width="6.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="260.3" y="766.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.10%)</title><rect x="263.3" y="755.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="266.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (53 samples, 0.18%)</title><rect x="264.5" y="755.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="267.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (53 samples, 0.18%)</title><rect x="264.5" y="739.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="267.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (53 samples, 0.18%)</title><rect x="264.5" y="723.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="267.5" y="734.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.18%)</title><rect x="264.5" y="707.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="267.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (29 samples, 0.10%)</title><rect x="266.6" y="803.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="269.6" y="814.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.10%)</title><rect x="266.6" y="787.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="269.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (88 samples, 0.29%)</title><rect x="267.7" y="803.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="270.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (88 samples, 0.29%)</title><rect x="267.7" y="787.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="270.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (88 samples, 0.29%)</title><rect x="267.7" y="771.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="270.7" y="782.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.12%)</title><rect x="267.7" y="755.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="270.7" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (51 samples, 0.17%)</title><rect x="269.2" y="755.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="272.2" y="766.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.17%)</title><rect x="269.2" y="739.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="272.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (364 samples, 1.22%)</title><rect x="271.2" y="803.0" width="14.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="274.2" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (364 samples, 1.22%)</title><rect x="271.2" y="787.0" width="14.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="274.2" y="798.0"></text>
</g>
<g>
<title>char[] (166 samples, 0.55%)</title><rect x="271.2" y="771.0" width="6.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="274.2" y="782.0"></text>
</g>
<g>
<title>java.lang.String (72 samples, 0.24%)</title><rect x="277.7" y="771.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="280.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (126 samples, 0.42%)</title><rect x="280.6" y="771.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="283.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (126 samples, 0.42%)</title><rect x="280.6" y="755.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="283.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (126 samples, 0.42%)</title><rect x="280.6" y="739.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="283.6" y="750.0"></text>
</g>
<g>
<title>byte[] (126 samples, 0.42%)</title><rect x="280.6" y="723.0" width="4.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="283.6" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=6988] (3,499 samples, 11.69%)</title><rect x="285.5" y="883.0" width="138.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="288.5" y="894.0">[NIO Selector #2 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,499 samples, 11.69%)</title><rect x="285.5" y="867.0" width="138.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="288.5" y="878.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/Session.process (3,499 samples, 11.69%)</title><rect x="285.5" y="851.0" width="138.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="288.5" y="862.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,499 samples, 11.69%)</title><rect x="285.5" y="835.0" width="138.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="288.5" y="846.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,499 samples, 11.69%)</title><rect x="285.5" y="819.0" width="138.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="288.5" y="830.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,615 samples, 8.74%)</title><rect x="285.5" y="803.0" width="103.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.5" y="814.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,615 samples, 8.74%)</title><rect x="285.5" y="787.0" width="103.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.5" y="798.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (2,531 samples, 8.46%)</title><rect x="285.5" y="771.0" width="99.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="288.5" y="782.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (183 samples, 0.61%)</title><rect x="285.5" y="755.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="288.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (183 samples, 0.61%)</title><rect x="285.5" y="739.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="288.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (125 samples, 0.42%)</title><rect x="285.5" y="723.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="288.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (125 samples, 0.42%)</title><rect x="285.5" y="707.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="288.5" y="718.0"></text>
</g>
<g>
<title>byte[] (125 samples, 0.42%)</title><rect x="285.5" y="691.0" width="4.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="288.5" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (58 samples, 0.19%)</title><rect x="290.4" y="723.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="293.4" y="734.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (58 samples, 0.19%)</title><rect x="290.4" y="707.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="293.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (98 samples, 0.33%)</title><rect x="292.7" y="755.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="295.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (98 samples, 0.33%)</title><rect x="292.7" y="739.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (98 samples, 0.33%)</title><rect x="292.7" y="723.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (98 samples, 0.33%)</title><rect x="292.7" y="707.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.7" y="718.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.15%)</title><rect x="292.7" y="691.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="295.7" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (54 samples, 0.18%)</title><rect x="294.5" y="691.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="297.5" y="702.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.18%)</title><rect x="294.5" y="675.0" width="2.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="297.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (2,250 samples, 7.52%)</title><rect x="296.6" y="755.0" width="88.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="299.6" y="766.0">ru/mail/po..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1,526 samples, 5.10%)</title><rect x="296.6" y="739.0" width="60.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.6" y="750.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1,526 samples, 5.10%)</title><rect x="296.6" y="723.0" width="60.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.6" y="734.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1,495 samples, 5.00%)</title><rect x="296.6" y="707.0" width="59.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="299.6" y="718.0">ch/qos..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (117 samples, 0.39%)</title><rect x="296.6" y="691.0" width="4.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="299.6" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1,378 samples, 4.60%)</title><rect x="301.2" y="691.0" width="54.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="304.2" y="702.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1,378 samples, 4.60%)</title><rect x="301.2" y="675.0" width="54.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="304.2" y="686.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1,378 samples, 4.60%)</title><rect x="301.2" y="659.0" width="54.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="304.2" y="670.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1,378 samples, 4.60%)</title><rect x="301.2" y="643.0" width="54.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="304.2" y="654.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1,378 samples, 4.60%)</title><rect x="301.2" y="627.0" width="54.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="304.2" y="638.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1,378 samples, 4.60%)</title><rect x="301.2" y="611.0" width="54.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="304.2" y="622.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (286 samples, 0.96%)</title><rect x="301.2" y="595.0" width="11.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.2" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (286 samples, 0.96%)</title><rect x="301.2" y="579.0" width="11.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.2" y="590.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (286 samples, 0.96%)</title><rect x="301.2" y="563.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="304.2" y="574.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (286 samples, 0.96%)</title><rect x="301.2" y="547.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.2" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (29 samples, 0.10%)</title><rect x="301.2" y="531.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="304.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (142 samples, 0.47%)</title><rect x="302.4" y="531.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="305.4" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (142 samples, 0.47%)</title><rect x="302.4" y="515.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="305.4" y="526.0"></text>
</g>
<g>
<title>byte[] (142 samples, 0.47%)</title><rect x="302.4" y="499.0" width="5.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="305.4" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (115 samples, 0.38%)</title><rect x="308.0" y="531.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="311.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (115 samples, 0.38%)</title><rect x="308.0" y="515.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="311.0" y="526.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.13%)</title><rect x="308.0" y="499.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="311.0" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (77 samples, 0.26%)</title><rect x="309.5" y="499.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="312.5" y="510.0"></text>
</g>
<g>
<title>byte[] (77 samples, 0.26%)</title><rect x="309.5" y="483.0" width="3.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="312.5" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1,091 samples, 3.65%)</title><rect x="312.5" y="595.0" width="43.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="315.5" y="606.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (873 samples, 2.92%)</title><rect x="312.5" y="579.0" width="34.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="315.5" y="590.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (873 samples, 2.92%)</title><rect x="312.5" y="563.0" width="34.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="315.5" y="574.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (19 samples, 0.06%)</title><rect x="312.5" y="547.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="315.5" y="558.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (16 samples, 0.05%)</title><rect x="312.7" y="531.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="315.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (7 samples, 0.02%)</title><rect x="313.0" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.0" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.02%)</title><rect x="313.0" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="316.0" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (39 samples, 0.13%)</title><rect x="313.3" y="547.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="316.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (55 samples, 0.18%)</title><rect x="314.8" y="547.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="317.8" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (55 samples, 0.18%)</title><rect x="314.8" y="531.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="317.8" y="542.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.18%)</title><rect x="314.8" y="515.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="317.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (492 samples, 1.64%)</title><rect x="317.0" y="547.0" width="19.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="320.0" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (492 samples, 1.64%)</title><rect x="317.0" y="531.0" width="19.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="320.0" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (492 samples, 1.64%)</title><rect x="317.0" y="515.0" width="19.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="320.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (492 samples, 1.64%)</title><rect x="317.0" y="499.0" width="19.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="320.0" y="510.0"></text>
</g>
<g>
<title>byte[] (492 samples, 1.64%)</title><rect x="317.0" y="483.0" width="19.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="320.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (268 samples, 0.90%)</title><rect x="336.4" y="547.0" width="10.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="339.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (268 samples, 0.90%)</title><rect x="336.4" y="531.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="339.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (52 samples, 0.17%)</title><rect x="336.4" y="515.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="339.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (216 samples, 0.72%)</title><rect x="338.4" y="515.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="341.4" y="526.0"></text>
</g>
<g>
<title>byte[] (216 samples, 0.72%)</title><rect x="338.4" y="499.0" width="8.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="341.4" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (218 samples, 0.73%)</title><rect x="347.0" y="579.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="350.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (218 samples, 0.73%)</title><rect x="347.0" y="563.0" width="8.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="350.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (218 samples, 0.73%)</title><rect x="347.0" y="547.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (218 samples, 0.73%)</title><rect x="347.0" y="531.0" width="8.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="350.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (218 samples, 0.73%)</title><rect x="347.0" y="515.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.0" y="526.0"></text>
</g>
<g>
<title>byte[] (218 samples, 0.73%)</title><rect x="347.0" y="499.0" width="8.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="350.0" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (31 samples, 0.10%)</title><rect x="355.6" y="707.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="358.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (46 samples, 0.15%)</title><rect x="356.8" y="739.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="359.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (46 samples, 0.15%)</title><rect x="356.8" y="723.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="359.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (46 samples, 0.15%)</title><rect x="356.8" y="707.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="359.8" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (46 samples, 0.15%)</title><rect x="356.8" y="691.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="359.8" y="702.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.15%)</title><rect x="356.8" y="675.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="359.8" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (84 samples, 0.28%)</title><rect x="358.6" y="739.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="361.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (84 samples, 0.28%)</title><rect x="358.6" y="723.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="361.6" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (84 samples, 0.28%)</title><rect x="358.6" y="707.0" width="3.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="361.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (594 samples, 1.99%)</title><rect x="361.9" y="739.0" width="23.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="364.9" y="750.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (77 samples, 0.26%)</title><rect x="361.9" y="723.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="364.9" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (77 samples, 0.26%)</title><rect x="361.9" y="707.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="364.9" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (77 samples, 0.26%)</title><rect x="361.9" y="691.0" width="3.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="364.9" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (41 samples, 0.14%)</title><rect x="364.9" y="723.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="367.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (147 samples, 0.49%)</title><rect x="366.6" y="723.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="369.6" y="734.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.20%)</title><rect x="366.6" y="707.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="369.6" y="718.0"></text>
</g>
<g>
<title>java.lang.String[] (54 samples, 0.18%)</title><rect x="368.9" y="707.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="371.9" y="718.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.11%)</title><rect x="371.0" y="707.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="374.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (329 samples, 1.10%)</title><rect x="372.4" y="723.0" width="12.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="375.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (145 samples, 0.48%)</title><rect x="372.4" y="707.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="375.4" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (145 samples, 0.48%)</title><rect x="372.4" y="691.0" width="5.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="375.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (179 samples, 0.60%)</title><rect x="378.3" y="707.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="381.3" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (121 samples, 0.40%)</title><rect x="378.3" y="691.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="381.3" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (121 samples, 0.40%)</title><rect x="378.3" y="675.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="381.3" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (121 samples, 0.40%)</title><rect x="378.3" y="659.0" width="4.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="381.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (20 samples, 0.07%)</title><rect x="383.0" y="691.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (20 samples, 0.07%)</title><rect x="383.0" y="675.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="386.0" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (14 samples, 0.05%)</title><rect x="383.3" y="659.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="386.3" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (38 samples, 0.13%)</title><rect x="383.8" y="691.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="386.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (84 samples, 0.28%)</title><rect x="385.3" y="771.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="388.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (84 samples, 0.28%)</title><rect x="385.3" y="755.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (84 samples, 0.28%)</title><rect x="385.3" y="739.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="388.3" y="750.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.09%)</title><rect x="385.3" y="723.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="388.3" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (58 samples, 0.19%)</title><rect x="386.4" y="723.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.4" y="734.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.19%)</title><rect x="386.4" y="707.0" width="2.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="389.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (439 samples, 1.47%)</title><rect x="388.6" y="803.0" width="17.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="391.6" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (78 samples, 0.26%)</title><rect x="388.6" y="787.0" width="3.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="391.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (108 samples, 0.36%)</title><rect x="391.7" y="787.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="394.7" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (108 samples, 0.36%)</title><rect x="391.7" y="771.0" width="4.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="394.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (253 samples, 0.85%)</title><rect x="396.0" y="787.0" width="9.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="399.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (253 samples, 0.85%)</title><rect x="396.0" y="771.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="399.0" y="782.0"></text>
</g>
<g>
<title>char[] (154 samples, 0.51%)</title><rect x="396.0" y="755.0" width="6.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="399.0" y="766.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.11%)</title><rect x="402.0" y="755.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="405.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (67 samples, 0.22%)</title><rect x="403.3" y="755.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="406.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (67 samples, 0.22%)</title><rect x="403.3" y="739.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="406.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (67 samples, 0.22%)</title><rect x="403.3" y="723.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="406.3" y="734.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.22%)</title><rect x="403.3" y="707.0" width="2.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="406.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (32 samples, 0.11%)</title><rect x="405.9" y="803.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="408.9" y="814.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.11%)</title><rect x="405.9" y="787.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="408.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (54 samples, 0.18%)</title><rect x="407.2" y="803.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="410.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (54 samples, 0.18%)</title><rect x="407.2" y="787.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="410.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (54 samples, 0.18%)</title><rect x="407.2" y="771.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="410.2" y="782.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.13%)</title><rect x="407.2" y="755.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="410.2" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.05%)</title><rect x="408.7" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.7" y="766.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.05%)</title><rect x="408.7" y="739.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="411.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (359 samples, 1.20%)</title><rect x="409.3" y="803.0" width="14.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="412.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (359 samples, 1.20%)</title><rect x="409.3" y="787.0" width="14.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="412.3" y="798.0"></text>
</g>
<g>
<title>char[] (167 samples, 0.56%)</title><rect x="409.3" y="771.0" width="6.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="412.3" y="782.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.24%)</title><rect x="415.9" y="771.0" width="2.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="418.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (121 samples, 0.40%)</title><rect x="418.7" y="771.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="421.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (121 samples, 0.40%)</title><rect x="418.7" y="755.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="421.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (121 samples, 0.40%)</title><rect x="418.7" y="739.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="421.7" y="750.0"></text>
</g>
<g>
<title>byte[] (121 samples, 0.40%)</title><rect x="418.7" y="723.0" width="4.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="421.7" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=6989] (3,480 samples, 11.63%)</title><rect x="423.5" y="883.0" width="137.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="426.5" y="894.0">[NIO Selector #3 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,480 samples, 11.63%)</title><rect x="423.5" y="867.0" width="137.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="426.5" y="878.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (91 samples, 0.30%)</title><rect x="423.5" y="851.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="426.5" y="862.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (91 samples, 0.30%)</title><rect x="423.5" y="835.0" width="3.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="426.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,389 samples, 11.33%)</title><rect x="427.1" y="851.0" width="133.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.1" y="862.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,389 samples, 11.33%)</title><rect x="427.1" y="835.0" width="133.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.1" y="846.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,389 samples, 11.33%)</title><rect x="427.1" y="819.0" width="133.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="430.1" y="830.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,554 samples, 8.53%)</title><rect x="427.1" y="803.0" width="100.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.1" y="814.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,554 samples, 8.53%)</title><rect x="427.1" y="787.0" width="100.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.1" y="798.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (2,478 samples, 8.28%)</title><rect x="427.1" y="771.0" width="97.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="430.1" y="782.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (191 samples, 0.64%)</title><rect x="427.1" y="755.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (191 samples, 0.64%)</title><rect x="427.1" y="739.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (120 samples, 0.40%)</title><rect x="427.1" y="723.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="430.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (120 samples, 0.40%)</title><rect x="427.1" y="707.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.1" y="718.0"></text>
</g>
<g>
<title>byte[] (120 samples, 0.40%)</title><rect x="427.1" y="691.0" width="4.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="430.1" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (71 samples, 0.24%)</title><rect x="431.8" y="723.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="434.8" y="734.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (71 samples, 0.24%)</title><rect x="431.8" y="707.0" width="2.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="434.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (94 samples, 0.31%)</title><rect x="434.6" y="755.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="437.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (94 samples, 0.31%)</title><rect x="434.6" y="739.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="437.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (94 samples, 0.31%)</title><rect x="434.6" y="723.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="437.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (94 samples, 0.31%)</title><rect x="434.6" y="707.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="437.6" y="718.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.12%)</title><rect x="434.6" y="691.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="437.6" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (57 samples, 0.19%)</title><rect x="436.1" y="691.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="439.1" y="702.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.19%)</title><rect x="436.1" y="675.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="439.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (2,193 samples, 7.33%)</title><rect x="438.3" y="755.0" width="86.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.3" y="766.0">ru/mail/po..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1,460 samples, 4.88%)</title><rect x="438.3" y="739.0" width="57.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="441.3" y="750.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1,460 samples, 4.88%)</title><rect x="438.3" y="723.0" width="57.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="441.3" y="734.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1,427 samples, 4.77%)</title><rect x="438.3" y="707.0" width="56.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="441.3" y="718.0">ch/qos..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (108 samples, 0.36%)</title><rect x="438.3" y="691.0" width="4.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="441.3" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1,319 samples, 4.41%)</title><rect x="442.6" y="691.0" width="52.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="445.6" y="702.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1,319 samples, 4.41%)</title><rect x="442.6" y="675.0" width="52.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.6" y="686.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1,319 samples, 4.41%)</title><rect x="442.6" y="659.0" width="52.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="445.6" y="670.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1,319 samples, 4.41%)</title><rect x="442.6" y="643.0" width="52.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="445.6" y="654.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1,319 samples, 4.41%)</title><rect x="442.6" y="627.0" width="52.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="445.6" y="638.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1,319 samples, 4.41%)</title><rect x="442.6" y="611.0" width="52.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="445.6" y="622.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (255 samples, 0.85%)</title><rect x="442.6" y="595.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="445.6" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (255 samples, 0.85%)</title><rect x="442.6" y="579.0" width="10.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="445.6" y="590.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (255 samples, 0.85%)</title><rect x="442.6" y="563.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="445.6" y="574.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (255 samples, 0.85%)</title><rect x="442.6" y="547.0" width="10.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="445.6" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (40 samples, 0.13%)</title><rect x="442.6" y="531.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="445.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (122 samples, 0.41%)</title><rect x="444.2" y="531.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="447.2" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (122 samples, 0.41%)</title><rect x="444.2" y="515.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="447.2" y="526.0"></text>
</g>
<g>
<title>byte[] (122 samples, 0.41%)</title><rect x="444.2" y="499.0" width="4.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="447.2" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (93 samples, 0.31%)</title><rect x="449.0" y="531.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="452.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (93 samples, 0.31%)</title><rect x="449.0" y="515.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.0" y="526.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.11%)</title><rect x="449.0" y="499.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="452.0" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (59 samples, 0.20%)</title><rect x="450.3" y="499.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.3" y="510.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.20%)</title><rect x="450.3" y="483.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="453.3" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1,061 samples, 3.55%)</title><rect x="452.8" y="595.0" width="41.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="455.8" y="606.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (835 samples, 2.79%)</title><rect x="452.8" y="579.0" width="32.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.8" y="590.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (835 samples, 2.79%)</title><rect x="452.8" y="563.0" width="32.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="455.8" y="574.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (14 samples, 0.05%)</title><rect x="452.8" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="455.8" y="558.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (9 samples, 0.03%)</title><rect x="453.0" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="456.0" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (37 samples, 0.12%)</title><rect x="453.3" y="547.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="456.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (44 samples, 0.15%)</title><rect x="454.8" y="547.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="457.8" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (44 samples, 0.15%)</title><rect x="454.8" y="531.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="457.8" y="542.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.15%)</title><rect x="454.8" y="515.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="457.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (491 samples, 1.64%)</title><rect x="456.5" y="547.0" width="19.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="459.5" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (491 samples, 1.64%)</title><rect x="456.5" y="531.0" width="19.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="459.5" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (491 samples, 1.64%)</title><rect x="456.5" y="515.0" width="19.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="459.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (491 samples, 1.64%)</title><rect x="456.5" y="499.0" width="19.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="459.5" y="510.0"></text>
</g>
<g>
<title>byte[] (491 samples, 1.64%)</title><rect x="456.5" y="483.0" width="19.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="459.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (249 samples, 0.83%)</title><rect x="475.9" y="547.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="478.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (249 samples, 0.83%)</title><rect x="475.9" y="531.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="478.9" y="542.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.13%)</title><rect x="475.9" y="515.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="478.9" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (210 samples, 0.70%)</title><rect x="477.4" y="515.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.4" y="526.0"></text>
</g>
<g>
<title>byte[] (210 samples, 0.70%)</title><rect x="477.4" y="499.0" width="8.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="480.4" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (226 samples, 0.76%)</title><rect x="485.7" y="579.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (226 samples, 0.76%)</title><rect x="485.7" y="563.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="488.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (226 samples, 0.76%)</title><rect x="485.7" y="547.0" width="8.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="488.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (226 samples, 0.76%)</title><rect x="485.7" y="531.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="488.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (226 samples, 0.76%)</title><rect x="485.7" y="515.0" width="8.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="488.7" y="526.0"></text>
</g>
<g>
<title>byte[] (226 samples, 0.76%)</title><rect x="485.7" y="499.0" width="8.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="488.7" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.11%)</title><rect x="494.6" y="707.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="497.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (51 samples, 0.17%)</title><rect x="495.9" y="739.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="498.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (51 samples, 0.17%)</title><rect x="495.9" y="723.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="498.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (51 samples, 0.17%)</title><rect x="495.9" y="707.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="498.9" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (51 samples, 0.17%)</title><rect x="495.9" y="691.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="498.9" y="702.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.17%)</title><rect x="495.9" y="675.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="498.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (75 samples, 0.25%)</title><rect x="497.9" y="739.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (75 samples, 0.25%)</title><rect x="497.9" y="723.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="500.9" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (75 samples, 0.25%)</title><rect x="497.9" y="707.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="500.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (607 samples, 2.03%)</title><rect x="500.9" y="739.0" width="23.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="503.9" y="750.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (67 samples, 0.22%)</title><rect x="500.9" y="723.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="503.9" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (67 samples, 0.22%)</title><rect x="500.9" y="707.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="503.9" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (67 samples, 0.22%)</title><rect x="500.9" y="691.0" width="2.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="503.9" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (41 samples, 0.14%)</title><rect x="503.5" y="723.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="506.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (167 samples, 0.56%)</title><rect x="505.1" y="723.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="508.1" y="734.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.24%)</title><rect x="505.1" y="707.0" width="2.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="508.1" y="718.0"></text>
</g>
<g>
<title>java.lang.String[] (51 samples, 0.17%)</title><rect x="507.9" y="707.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="510.9" y="718.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.15%)</title><rect x="509.9" y="707.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="512.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (332 samples, 1.11%)</title><rect x="511.7" y="723.0" width="13.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.7" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (143 samples, 0.48%)</title><rect x="511.7" y="707.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="514.7" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (143 samples, 0.48%)</title><rect x="511.7" y="691.0" width="5.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="514.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (187 samples, 0.62%)</title><rect x="517.4" y="707.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.4" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (143 samples, 0.48%)</title><rect x="517.4" y="691.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="520.4" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (143 samples, 0.48%)</title><rect x="517.4" y="675.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.4" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (143 samples, 0.48%)</title><rect x="517.4" y="659.0" width="5.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="520.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (17 samples, 0.06%)</title><rect x="523.1" y="691.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="526.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (17 samples, 0.06%)</title><rect x="523.1" y="675.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="526.1" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (9 samples, 0.03%)</title><rect x="523.1" y="659.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="526.1" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (8 samples, 0.03%)</title><rect x="523.4" y="659.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="526.4" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (27 samples, 0.09%)</title><rect x="523.7" y="691.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="526.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (76 samples, 0.25%)</title><rect x="524.8" y="771.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="527.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (76 samples, 0.25%)</title><rect x="524.8" y="755.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="527.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (76 samples, 0.25%)</title><rect x="524.8" y="739.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="527.8" y="750.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.10%)</title><rect x="524.8" y="723.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="527.8" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (46 samples, 0.15%)</title><rect x="526.0" y="723.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="529.0" y="734.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.15%)</title><rect x="526.0" y="707.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="529.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (350 samples, 1.17%)</title><rect x="527.8" y="803.0" width="13.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="530.8" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (65 samples, 0.22%)</title><rect x="527.8" y="787.0" width="2.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="530.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (104 samples, 0.35%)</title><rect x="530.4" y="787.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="533.4" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (104 samples, 0.35%)</title><rect x="530.4" y="771.0" width="4.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="533.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (181 samples, 0.60%)</title><rect x="534.5" y="787.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="537.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (181 samples, 0.60%)</title><rect x="534.5" y="771.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="537.5" y="782.0"></text>
</g>
<g>
<title>char[] (95 samples, 0.32%)</title><rect x="534.5" y="755.0" width="3.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="537.5" y="766.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.11%)</title><rect x="538.2" y="755.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="541.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (52 samples, 0.17%)</title><rect x="539.5" y="755.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="542.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (52 samples, 0.17%)</title><rect x="539.5" y="739.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="542.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (52 samples, 0.17%)</title><rect x="539.5" y="723.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="542.5" y="734.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.17%)</title><rect x="539.5" y="707.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="542.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (38 samples, 0.13%)</title><rect x="541.6" y="803.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="544.6" y="814.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.13%)</title><rect x="541.6" y="787.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="544.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (73 samples, 0.24%)</title><rect x="543.1" y="803.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (73 samples, 0.24%)</title><rect x="543.1" y="787.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (73 samples, 0.24%)</title><rect x="543.1" y="771.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.1" y="782.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.13%)</title><rect x="543.1" y="755.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="546.1" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (34 samples, 0.11%)</title><rect x="544.6" y="755.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="547.6" y="766.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.11%)</title><rect x="544.6" y="739.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="547.6" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (374 samples, 1.25%)</title><rect x="546.0" y="803.0" width="14.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="549.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (374 samples, 1.25%)</title><rect x="546.0" y="787.0" width="14.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="549.0" y="798.0"></text>
</g>
<g>
<title>char[] (193 samples, 0.64%)</title><rect x="546.0" y="771.0" width="7.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="549.0" y="782.0"></text>
</g>
<g>
<title>java.lang.String (61 samples, 0.20%)</title><rect x="553.6" y="771.0" width="2.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="556.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (120 samples, 0.40%)</title><rect x="556.0" y="771.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="559.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (120 samples, 0.40%)</title><rect x="556.0" y="755.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (120 samples, 0.40%)</title><rect x="556.0" y="739.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="559.0" y="750.0"></text>
</g>
<g>
<title>byte[] (120 samples, 0.40%)</title><rect x="556.0" y="723.0" width="4.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="559.0" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=6990] (3,634 samples, 12.14%)</title><rect x="560.7" y="883.0" width="143.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="563.7" y="894.0">[NIO Selector #4 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,634 samples, 12.14%)</title><rect x="560.7" y="867.0" width="143.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="563.7" y="878.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (106 samples, 0.35%)</title><rect x="560.7" y="851.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.7" y="862.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (106 samples, 0.35%)</title><rect x="560.7" y="835.0" width="4.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="563.7" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,528 samples, 11.79%)</title><rect x="564.9" y="851.0" width="139.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.9" y="862.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,528 samples, 11.79%)</title><rect x="564.9" y="835.0" width="139.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.9" y="846.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,528 samples, 11.79%)</title><rect x="564.9" y="819.0" width="139.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.9" y="830.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,683 samples, 8.97%)</title><rect x="564.9" y="803.0" width="105.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.9" y="814.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,683 samples, 8.97%)</title><rect x="564.9" y="787.0" width="105.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.9" y="798.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (2,589 samples, 8.65%)</title><rect x="564.9" y="771.0" width="102.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.9" y="782.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (196 samples, 0.65%)</title><rect x="564.9" y="755.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (196 samples, 0.65%)</title><rect x="564.9" y="739.0" width="7.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (129 samples, 0.43%)</title><rect x="564.9" y="723.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="567.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (129 samples, 0.43%)</title><rect x="564.9" y="707.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.9" y="718.0"></text>
</g>
<g>
<title>byte[] (129 samples, 0.43%)</title><rect x="564.9" y="691.0" width="5.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="567.9" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (67 samples, 0.22%)</title><rect x="570.0" y="723.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="573.0" y="734.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (67 samples, 0.22%)</title><rect x="570.0" y="707.0" width="2.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="573.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (76 samples, 0.25%)</title><rect x="572.6" y="755.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="575.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (76 samples, 0.25%)</title><rect x="572.6" y="739.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="575.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (76 samples, 0.25%)</title><rect x="572.6" y="723.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (76 samples, 0.25%)</title><rect x="572.6" y="707.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="575.6" y="718.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.12%)</title><rect x="572.6" y="691.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="575.6" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (41 samples, 0.14%)</title><rect x="574.0" y="691.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="577.0" y="702.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.14%)</title><rect x="574.0" y="675.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="577.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (2,317 samples, 7.74%)</title><rect x="575.6" y="755.0" width="91.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="578.6" y="766.0">ru/mail/pol..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1,586 samples, 5.30%)</title><rect x="575.6" y="739.0" width="62.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.6" y="750.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1,586 samples, 5.30%)</title><rect x="575.6" y="723.0" width="62.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="578.6" y="734.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1,558 samples, 5.21%)</title><rect x="575.6" y="707.0" width="61.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.6" y="718.0">ch/qos..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (110 samples, 0.37%)</title><rect x="575.6" y="691.0" width="4.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="578.6" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1,448 samples, 4.84%)</title><rect x="580.0" y="691.0" width="57.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="583.0" y="702.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1,448 samples, 4.84%)</title><rect x="580.0" y="675.0" width="57.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="583.0" y="686.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1,448 samples, 4.84%)</title><rect x="580.0" y="659.0" width="57.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="583.0" y="670.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1,448 samples, 4.84%)</title><rect x="580.0" y="643.0" width="57.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="583.0" y="654.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1,448 samples, 4.84%)</title><rect x="580.0" y="627.0" width="57.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="583.0" y="638.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1,448 samples, 4.84%)</title><rect x="580.0" y="611.0" width="57.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="583.0" y="622.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (299 samples, 1.00%)</title><rect x="580.0" y="595.0" width="11.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="583.0" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (299 samples, 1.00%)</title><rect x="580.0" y="579.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.0" y="590.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (299 samples, 1.00%)</title><rect x="580.0" y="563.0" width="11.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="583.0" y="574.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (299 samples, 1.00%)</title><rect x="580.0" y="547.0" width="11.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="583.0" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (29 samples, 0.10%)</title><rect x="580.0" y="531.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="583.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (142 samples, 0.47%)</title><rect x="581.1" y="531.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="584.1" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (142 samples, 0.47%)</title><rect x="581.1" y="515.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="584.1" y="526.0"></text>
</g>
<g>
<title>byte[] (142 samples, 0.47%)</title><rect x="581.1" y="499.0" width="5.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="584.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (128 samples, 0.43%)</title><rect x="586.7" y="531.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="589.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (128 samples, 0.43%)</title><rect x="586.7" y="515.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="589.7" y="526.0"></text>
</g>
<g>
<title>java.lang.String (53 samples, 0.18%)</title><rect x="586.7" y="499.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="589.7" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (75 samples, 0.25%)</title><rect x="588.8" y="499.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="591.8" y="510.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.25%)</title><rect x="588.8" y="483.0" width="3.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="591.8" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1,147 samples, 3.83%)</title><rect x="591.8" y="595.0" width="45.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.8" y="606.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (915 samples, 3.06%)</title><rect x="591.8" y="579.0" width="36.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.8" y="590.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (915 samples, 3.06%)</title><rect x="591.8" y="563.0" width="36.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="594.8" y="574.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (8 samples, 0.03%)</title><rect x="591.8" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="594.8" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (43 samples, 0.14%)</title><rect x="592.2" y="547.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="595.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (47 samples, 0.16%)</title><rect x="593.8" y="547.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="596.8" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (47 samples, 0.16%)</title><rect x="593.8" y="531.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="596.8" y="542.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.16%)</title><rect x="593.8" y="515.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="596.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (513 samples, 1.71%)</title><rect x="595.7" y="547.0" width="20.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="598.7" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (513 samples, 1.71%)</title><rect x="595.7" y="531.0" width="20.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="598.7" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (513 samples, 1.71%)</title><rect x="595.7" y="515.0" width="20.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (513 samples, 1.71%)</title><rect x="595.7" y="499.0" width="20.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="598.7" y="510.0"></text>
</g>
<g>
<title>byte[] (473 samples, 1.58%)</title><rect x="595.7" y="483.0" width="18.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="598.7" y="494.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.13%)</title><rect x="614.4" y="483.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="617.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (304 samples, 1.02%)</title><rect x="615.9" y="547.0" width="12.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="618.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (304 samples, 1.02%)</title><rect x="615.9" y="531.0" width="12.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.9" y="542.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.13%)</title><rect x="615.9" y="515.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="618.9" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (265 samples, 0.89%)</title><rect x="617.5" y="515.0" width="10.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.5" y="526.0"></text>
</g>
<g>
<title>byte[] (249 samples, 0.83%)</title><rect x="617.5" y="499.0" width="9.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="620.5" y="510.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.05%)</title><rect x="627.3" y="499.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="630.3" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (232 samples, 0.78%)</title><rect x="627.9" y="579.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="630.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (232 samples, 0.78%)</title><rect x="627.9" y="563.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="630.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (232 samples, 0.78%)</title><rect x="627.9" y="547.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="630.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (232 samples, 0.78%)</title><rect x="627.9" y="531.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (232 samples, 0.78%)</title><rect x="627.9" y="515.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="630.9" y="526.0"></text>
</g>
<g>
<title>byte[] (222 samples, 0.74%)</title><rect x="627.9" y="499.0" width="8.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="630.9" y="510.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.03%)</title><rect x="636.7" y="499.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="639.7" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (28 samples, 0.09%)</title><rect x="637.1" y="707.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="640.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (57 samples, 0.19%)</title><rect x="638.2" y="739.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="641.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (57 samples, 0.19%)</title><rect x="638.2" y="723.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="641.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (57 samples, 0.19%)</title><rect x="638.2" y="707.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="641.2" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (57 samples, 0.19%)</title><rect x="638.2" y="691.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="641.2" y="702.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.19%)</title><rect x="638.2" y="675.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="641.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (54 samples, 0.18%)</title><rect x="640.4" y="739.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (54 samples, 0.18%)</title><rect x="640.4" y="723.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="643.4" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (54 samples, 0.18%)</title><rect x="640.4" y="707.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="643.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (620 samples, 2.07%)</title><rect x="642.5" y="739.0" width="24.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.5" y="750.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (74 samples, 0.25%)</title><rect x="642.5" y="723.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (74 samples, 0.25%)</title><rect x="642.5" y="707.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="645.5" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (74 samples, 0.25%)</title><rect x="642.5" y="691.0" width="3.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="645.5" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (34 samples, 0.11%)</title><rect x="645.5" y="723.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="648.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (134 samples, 0.45%)</title><rect x="646.8" y="723.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.8" y="734.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.20%)</title><rect x="646.8" y="707.0" width="2.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="649.8" y="718.0"></text>
</g>
<g>
<title>java.lang.String[] (36 samples, 0.12%)</title><rect x="649.2" y="707.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="652.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.12%)</title><rect x="650.6" y="707.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="653.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (378 samples, 1.26%)</title><rect x="652.1" y="723.0" width="14.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="655.1" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (167 samples, 0.56%)</title><rect x="652.1" y="707.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.1" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (167 samples, 0.56%)</title><rect x="652.1" y="691.0" width="6.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="655.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (207 samples, 0.69%)</title><rect x="658.8" y="707.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="661.8" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (155 samples, 0.52%)</title><rect x="658.8" y="691.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.8" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (155 samples, 0.52%)</title><rect x="658.8" y="675.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="661.8" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (155 samples, 0.52%)</title><rect x="658.8" y="659.0" width="6.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="661.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (13 samples, 0.04%)</title><rect x="664.9" y="691.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (13 samples, 0.04%)</title><rect x="664.9" y="675.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="667.9" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (10 samples, 0.03%)</title><rect x="665.1" y="659.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="668.1" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (39 samples, 0.13%)</title><rect x="665.5" y="691.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="668.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (94 samples, 0.31%)</title><rect x="667.0" y="771.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="670.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (94 samples, 0.31%)</title><rect x="667.0" y="755.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="670.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (94 samples, 0.31%)</title><rect x="667.0" y="739.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="670.0" y="750.0"></text>
</g>
<g>
<title>java.lang.String (47 samples, 0.16%)</title><rect x="667.0" y="723.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="670.0" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (47 samples, 0.16%)</title><rect x="668.9" y="723.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="671.9" y="734.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.16%)</title><rect x="668.9" y="707.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="671.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (370 samples, 1.24%)</title><rect x="670.7" y="803.0" width="14.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.7" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (58 samples, 0.19%)</title><rect x="670.7" y="787.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="673.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (111 samples, 0.37%)</title><rect x="673.0" y="787.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.0" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (111 samples, 0.37%)</title><rect x="673.0" y="771.0" width="4.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="676.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (201 samples, 0.67%)</title><rect x="677.4" y="787.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (201 samples, 0.67%)</title><rect x="677.4" y="771.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.4" y="782.0"></text>
</g>
<g>
<title>char[] (95 samples, 0.32%)</title><rect x="677.4" y="755.0" width="3.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="680.4" y="766.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 0.14%)</title><rect x="681.1" y="755.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="684.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (65 samples, 0.22%)</title><rect x="682.7" y="755.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="685.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (65 samples, 0.22%)</title><rect x="682.7" y="739.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (65 samples, 0.22%)</title><rect x="682.7" y="723.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="685.7" y="734.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.22%)</title><rect x="682.7" y="707.0" width="2.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="685.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (29 samples, 0.10%)</title><rect x="685.3" y="803.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="688.3" y="814.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.10%)</title><rect x="685.3" y="787.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="688.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (79 samples, 0.26%)</title><rect x="686.4" y="803.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (79 samples, 0.26%)</title><rect x="686.4" y="787.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="689.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (79 samples, 0.26%)</title><rect x="686.4" y="771.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="689.4" y="782.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.13%)</title><rect x="686.4" y="755.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="689.4" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (39 samples, 0.13%)</title><rect x="688.0" y="755.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.0" y="766.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.13%)</title><rect x="688.0" y="739.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="691.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (367 samples, 1.23%)</title><rect x="689.6" y="803.0" width="14.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="692.6" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (367 samples, 1.23%)</title><rect x="689.6" y="787.0" width="14.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="692.6" y="798.0"></text>
</g>
<g>
<title>char[] (177 samples, 0.59%)</title><rect x="689.6" y="771.0" width="6.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="692.6" y="782.0"></text>
</g>
<g>
<title>java.lang.String (68 samples, 0.23%)</title><rect x="696.5" y="771.0" width="2.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="699.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (122 samples, 0.41%)</title><rect x="699.2" y="771.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (122 samples, 0.41%)</title><rect x="699.2" y="755.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="702.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (122 samples, 0.41%)</title><rect x="699.2" y="739.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="702.2" y="750.0"></text>
</g>
<g>
<title>byte[] (122 samples, 0.41%)</title><rect x="699.2" y="723.0" width="4.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="702.2" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=6991] (3,496 samples, 11.68%)</title><rect x="704.0" y="883.0" width="137.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="707.0" y="894.0">[NIO Selector #5 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,496 samples, 11.68%)</title><rect x="704.0" y="867.0" width="137.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="707.0" y="878.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/Session.process (3,496 samples, 11.68%)</title><rect x="704.0" y="851.0" width="137.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="707.0" y="862.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,496 samples, 11.68%)</title><rect x="704.0" y="835.0" width="137.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.0" y="846.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,496 samples, 11.68%)</title><rect x="704.0" y="819.0" width="137.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="707.0" y="830.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,620 samples, 8.76%)</title><rect x="704.0" y="803.0" width="103.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.0" y="814.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,620 samples, 8.76%)</title><rect x="704.0" y="787.0" width="103.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="707.0" y="798.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (2,533 samples, 8.46%)</title><rect x="704.0" y="771.0" width="99.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="707.0" y="782.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (193 samples, 0.64%)</title><rect x="704.0" y="755.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (193 samples, 0.64%)</title><rect x="704.0" y="739.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="707.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (128 samples, 0.43%)</title><rect x="704.0" y="723.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="707.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (128 samples, 0.43%)</title><rect x="704.0" y="707.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="707.0" y="718.0"></text>
</g>
<g>
<title>byte[] (128 samples, 0.43%)</title><rect x="704.0" y="691.0" width="5.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="707.0" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (65 samples, 0.22%)</title><rect x="709.1" y="723.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="712.1" y="734.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (65 samples, 0.22%)</title><rect x="709.1" y="707.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="712.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (86 samples, 0.29%)</title><rect x="711.6" y="755.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="714.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (86 samples, 0.29%)</title><rect x="711.6" y="739.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="714.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (86 samples, 0.29%)</title><rect x="711.6" y="723.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="714.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (86 samples, 0.29%)</title><rect x="711.6" y="707.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.6" y="718.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.10%)</title><rect x="711.6" y="691.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="714.6" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (55 samples, 0.18%)</title><rect x="712.9" y="691.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="715.9" y="702.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.18%)</title><rect x="712.9" y="675.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="715.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (2,254 samples, 7.53%)</title><rect x="715.0" y="755.0" width="88.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="718.0" y="766.0">ru/mail/po..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1,516 samples, 5.07%)</title><rect x="715.0" y="739.0" width="59.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="718.0" y="750.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1,516 samples, 5.07%)</title><rect x="715.0" y="723.0" width="59.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="718.0" y="734.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1,491 samples, 4.98%)</title><rect x="715.0" y="707.0" width="58.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.0" y="718.0">ch/qos..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (136 samples, 0.45%)</title><rect x="715.0" y="691.0" width="5.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="718.0" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1,355 samples, 4.53%)</title><rect x="720.4" y="691.0" width="53.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="723.4" y="702.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1,355 samples, 4.53%)</title><rect x="720.4" y="675.0" width="53.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="723.4" y="686.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1,355 samples, 4.53%)</title><rect x="720.4" y="659.0" width="53.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="723.4" y="670.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1,355 samples, 4.53%)</title><rect x="720.4" y="643.0" width="53.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="723.4" y="654.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1,355 samples, 4.53%)</title><rect x="720.4" y="627.0" width="53.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="723.4" y="638.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1,355 samples, 4.53%)</title><rect x="720.4" y="611.0" width="53.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="723.4" y="622.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (247 samples, 0.83%)</title><rect x="720.4" y="595.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="723.4" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (247 samples, 0.83%)</title><rect x="720.4" y="579.0" width="9.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="723.4" y="590.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (247 samples, 0.83%)</title><rect x="720.4" y="563.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="723.4" y="574.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (247 samples, 0.83%)</title><rect x="720.4" y="547.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="723.4" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (32 samples, 0.11%)</title><rect x="720.4" y="531.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="723.4" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (112 samples, 0.37%)</title><rect x="721.7" y="531.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="724.7" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (112 samples, 0.37%)</title><rect x="721.7" y="515.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.7" y="526.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.37%)</title><rect x="721.7" y="499.0" width="4.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="724.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (103 samples, 0.34%)</title><rect x="726.1" y="531.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (103 samples, 0.34%)</title><rect x="726.1" y="515.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="729.1" y="526.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.10%)</title><rect x="726.1" y="499.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="729.1" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (74 samples, 0.25%)</title><rect x="727.2" y="499.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.2" y="510.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.25%)</title><rect x="727.2" y="483.0" width="2.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="730.2" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1,102 samples, 3.68%)</title><rect x="730.4" y="595.0" width="43.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.4" y="606.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (909 samples, 3.04%)</title><rect x="730.4" y="579.0" width="35.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.4" y="590.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (909 samples, 3.04%)</title><rect x="730.4" y="563.0" width="35.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.4" y="574.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (16 samples, 0.05%)</title><rect x="730.4" y="547.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.4" y="558.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (12 samples, 0.04%)</title><rect x="730.5" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (7 samples, 0.02%)</title><rect x="730.7" y="515.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.02%)</title><rect x="730.7" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.7" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (45 samples, 0.15%)</title><rect x="731.0" y="547.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="734.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (45 samples, 0.15%)</title><rect x="732.8" y="547.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="735.8" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (45 samples, 0.15%)</title><rect x="732.8" y="531.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.8" y="542.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.15%)</title><rect x="732.8" y="515.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="735.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (519 samples, 1.73%)</title><rect x="734.5" y="547.0" width="20.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="737.5" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (519 samples, 1.73%)</title><rect x="734.5" y="531.0" width="20.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="737.5" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (519 samples, 1.73%)</title><rect x="734.5" y="515.0" width="20.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="737.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (519 samples, 1.73%)</title><rect x="734.5" y="499.0" width="20.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="737.5" y="510.0"></text>
</g>
<g>
<title>byte[] (519 samples, 1.73%)</title><rect x="734.5" y="483.0" width="20.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="737.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (284 samples, 0.95%)</title><rect x="755.0" y="547.0" width="11.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="758.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (284 samples, 0.95%)</title><rect x="755.0" y="531.0" width="11.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="758.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.13%)</title><rect x="755.0" y="515.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="758.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (246 samples, 0.82%)</title><rect x="756.5" y="515.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="759.5" y="526.0"></text>
</g>
<g>
<title>byte[] (246 samples, 0.82%)</title><rect x="756.5" y="499.0" width="9.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="759.5" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (193 samples, 0.64%)</title><rect x="766.2" y="579.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="769.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (193 samples, 0.64%)</title><rect x="766.2" y="563.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="769.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (193 samples, 0.64%)</title><rect x="766.2" y="547.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (193 samples, 0.64%)</title><rect x="766.2" y="531.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="769.2" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (193 samples, 0.64%)</title><rect x="766.2" y="515.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="769.2" y="526.0"></text>
</g>
<g>
<title>byte[] (193 samples, 0.64%)</title><rect x="766.2" y="499.0" width="7.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="769.2" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (25 samples, 0.08%)</title><rect x="773.8" y="707.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="776.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (52 samples, 0.17%)</title><rect x="774.8" y="739.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (52 samples, 0.17%)</title><rect x="774.8" y="723.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (52 samples, 0.17%)</title><rect x="774.8" y="707.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="777.8" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (52 samples, 0.17%)</title><rect x="774.8" y="691.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.8" y="702.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.17%)</title><rect x="774.8" y="675.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="777.8" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (72 samples, 0.24%)</title><rect x="776.9" y="739.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="779.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (72 samples, 0.24%)</title><rect x="776.9" y="723.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="779.9" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (72 samples, 0.24%)</title><rect x="776.9" y="707.0" width="2.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="779.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (614 samples, 2.05%)</title><rect x="779.7" y="739.0" width="24.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="782.7" y="750.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (72 samples, 0.24%)</title><rect x="779.7" y="723.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="782.7" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (72 samples, 0.24%)</title><rect x="779.7" y="707.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.7" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (72 samples, 0.24%)</title><rect x="779.7" y="691.0" width="2.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="782.7" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (34 samples, 0.11%)</title><rect x="782.5" y="723.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="785.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (166 samples, 0.55%)</title><rect x="783.9" y="723.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="786.9" y="734.0"></text>
</g>
<g>
<title>byte[] (72 samples, 0.24%)</title><rect x="783.9" y="707.0" width="2.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="786.9" y="718.0"></text>
</g>
<g>
<title>java.lang.String[] (58 samples, 0.19%)</title><rect x="786.7" y="707.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="789.7" y="718.0"></text>
</g>
<g>
<title>java.lang.String (36 samples, 0.12%)</title><rect x="789.0" y="707.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="792.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (342 samples, 1.14%)</title><rect x="790.4" y="723.0" width="13.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="793.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (142 samples, 0.47%)</title><rect x="790.4" y="707.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="793.4" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (142 samples, 0.47%)</title><rect x="790.4" y="691.0" width="5.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="793.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (196 samples, 0.65%)</title><rect x="796.2" y="707.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="799.2" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (152 samples, 0.51%)</title><rect x="796.2" y="691.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="799.2" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (152 samples, 0.51%)</title><rect x="796.2" y="675.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="799.2" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (152 samples, 0.51%)</title><rect x="796.2" y="659.0" width="6.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="799.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (14 samples, 0.05%)</title><rect x="802.2" y="691.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (14 samples, 0.05%)</title><rect x="802.2" y="675.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="805.2" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (10 samples, 0.03%)</title><rect x="802.3" y="659.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="805.3" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (30 samples, 0.10%)</title><rect x="802.7" y="691.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="805.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (87 samples, 0.29%)</title><rect x="803.9" y="771.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="806.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (87 samples, 0.29%)</title><rect x="803.9" y="755.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="806.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (87 samples, 0.29%)</title><rect x="803.9" y="739.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="806.9" y="750.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.11%)</title><rect x="803.9" y="723.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="806.9" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (54 samples, 0.18%)</title><rect x="805.2" y="723.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="808.2" y="734.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.18%)</title><rect x="805.2" y="707.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="808.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (402 samples, 1.34%)</title><rect x="807.3" y="803.0" width="15.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="810.3" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (46 samples, 0.15%)</title><rect x="807.3" y="787.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="810.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (125 samples, 0.42%)</title><rect x="809.2" y="787.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="812.2" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (125 samples, 0.42%)</title><rect x="809.2" y="771.0" width="4.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="812.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (231 samples, 0.77%)</title><rect x="814.1" y="787.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="817.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (231 samples, 0.77%)</title><rect x="814.1" y="771.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="817.1" y="782.0"></text>
</g>
<g>
<title>char[] (129 samples, 0.43%)</title><rect x="814.1" y="755.0" width="5.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="817.1" y="766.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.13%)</title><rect x="819.2" y="755.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="822.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (62 samples, 0.21%)</title><rect x="820.7" y="755.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="823.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (62 samples, 0.21%)</title><rect x="820.7" y="739.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="823.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (62 samples, 0.21%)</title><rect x="820.7" y="723.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="823.7" y="734.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.21%)</title><rect x="820.7" y="707.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="823.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (33 samples, 0.11%)</title><rect x="823.2" y="803.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="826.2" y="814.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.11%)</title><rect x="823.2" y="787.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="826.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (84 samples, 0.28%)</title><rect x="824.5" y="803.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="827.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (84 samples, 0.28%)</title><rect x="824.5" y="787.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (84 samples, 0.28%)</title><rect x="824.5" y="771.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="827.5" y="782.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.15%)</title><rect x="824.5" y="755.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="827.5" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (39 samples, 0.13%)</title><rect x="826.3" y="755.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="829.3" y="766.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.13%)</title><rect x="826.3" y="739.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="829.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (357 samples, 1.19%)</title><rect x="827.8" y="803.0" width="14.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="830.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (357 samples, 1.19%)</title><rect x="827.8" y="787.0" width="14.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.8" y="798.0"></text>
</g>
<g>
<title>char[] (149 samples, 0.50%)</title><rect x="827.8" y="771.0" width="5.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="830.8" y="782.0"></text>
</g>
<g>
<title>java.lang.String (81 samples, 0.27%)</title><rect x="833.7" y="771.0" width="3.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="836.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (127 samples, 0.42%)</title><rect x="836.9" y="771.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="839.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (127 samples, 0.42%)</title><rect x="836.9" y="755.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="839.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (127 samples, 0.42%)</title><rect x="836.9" y="739.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="839.9" y="750.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.42%)</title><rect x="836.9" y="723.0" width="5.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="839.9" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=6992] (3,488 samples, 11.66%)</title><rect x="841.9" y="883.0" width="137.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="844.9" y="894.0">[NIO Selector #6 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,488 samples, 11.66%)</title><rect x="841.9" y="867.0" width="137.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="844.9" y="878.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (93 samples, 0.31%)</title><rect x="841.9" y="851.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="844.9" y="862.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (93 samples, 0.31%)</title><rect x="841.9" y="835.0" width="3.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="844.9" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,395 samples, 11.35%)</title><rect x="845.6" y="851.0" width="133.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.6" y="862.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,395 samples, 11.35%)</title><rect x="845.6" y="835.0" width="133.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="848.6" y="846.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,395 samples, 11.35%)</title><rect x="845.6" y="819.0" width="133.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="848.6" y="830.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,591 samples, 8.66%)</title><rect x="845.6" y="803.0" width="102.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="848.6" y="814.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,591 samples, 8.66%)</title><rect x="845.6" y="787.0" width="102.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.6" y="798.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (2,511 samples, 8.39%)</title><rect x="845.6" y="771.0" width="99.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="848.6" y="782.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (195 samples, 0.65%)</title><rect x="845.6" y="755.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="848.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (195 samples, 0.65%)</title><rect x="845.6" y="739.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="848.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (135 samples, 0.45%)</title><rect x="845.6" y="723.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (135 samples, 0.45%)</title><rect x="845.6" y="707.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="848.6" y="718.0"></text>
</g>
<g>
<title>byte[] (135 samples, 0.45%)</title><rect x="845.6" y="691.0" width="5.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="848.6" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (60 samples, 0.20%)</title><rect x="850.9" y="723.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.9" y="734.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (60 samples, 0.20%)</title><rect x="850.9" y="707.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="853.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (84 samples, 0.28%)</title><rect x="853.2" y="755.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="856.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (84 samples, 0.28%)</title><rect x="853.2" y="739.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (84 samples, 0.28%)</title><rect x="853.2" y="723.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="856.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (84 samples, 0.28%)</title><rect x="853.2" y="707.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="856.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.11%)</title><rect x="853.2" y="691.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="856.2" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (50 samples, 0.17%)</title><rect x="854.6" y="691.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="857.6" y="702.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.17%)</title><rect x="854.6" y="675.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="857.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (2,232 samples, 7.46%)</title><rect x="856.6" y="755.0" width="88.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="859.6" y="766.0">ru/mail/po..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1,473 samples, 4.92%)</title><rect x="856.6" y="739.0" width="58.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="859.6" y="750.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1,473 samples, 4.92%)</title><rect x="856.6" y="723.0" width="58.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="859.6" y="734.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1,427 samples, 4.77%)</title><rect x="856.6" y="707.0" width="56.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="859.6" y="718.0">ch/qos..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (107 samples, 0.36%)</title><rect x="856.6" y="691.0" width="4.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="859.6" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1,320 samples, 4.41%)</title><rect x="860.8" y="691.0" width="52.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="863.8" y="702.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1,320 samples, 4.41%)</title><rect x="860.8" y="675.0" width="52.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="863.8" y="686.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1,320 samples, 4.41%)</title><rect x="860.8" y="659.0" width="52.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="863.8" y="670.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1,320 samples, 4.41%)</title><rect x="860.8" y="643.0" width="52.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="863.8" y="654.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1,320 samples, 4.41%)</title><rect x="860.8" y="627.0" width="52.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="863.8" y="638.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1,320 samples, 4.41%)</title><rect x="860.8" y="611.0" width="52.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="863.8" y="622.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (285 samples, 0.95%)</title><rect x="860.8" y="595.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="863.8" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (285 samples, 0.95%)</title><rect x="860.8" y="579.0" width="11.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="863.8" y="590.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (285 samples, 0.95%)</title><rect x="860.8" y="563.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="863.8" y="574.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (285 samples, 0.95%)</title><rect x="860.8" y="547.0" width="11.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="863.8" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (33 samples, 0.11%)</title><rect x="860.8" y="531.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="863.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (126 samples, 0.42%)</title><rect x="862.1" y="531.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="865.1" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (126 samples, 0.42%)</title><rect x="862.1" y="515.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="865.1" y="526.0"></text>
</g>
<g>
<title>byte[] (126 samples, 0.42%)</title><rect x="862.1" y="499.0" width="4.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="865.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (126 samples, 0.42%)</title><rect x="867.0" y="531.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="870.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (126 samples, 0.42%)</title><rect x="867.0" y="515.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="870.0" y="526.0"></text>
</g>
<g>
<title>java.lang.String (51 samples, 0.17%)</title><rect x="867.0" y="499.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="870.0" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (75 samples, 0.25%)</title><rect x="869.1" y="499.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="872.1" y="510.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.25%)</title><rect x="869.1" y="483.0" width="2.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="872.1" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1,030 samples, 3.44%)</title><rect x="872.2" y="595.0" width="40.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="875.2" y="606.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (828 samples, 2.77%)</title><rect x="872.2" y="579.0" width="32.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="875.2" y="590.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (828 samples, 2.77%)</title><rect x="872.2" y="563.0" width="32.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="875.2" y="574.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (14 samples, 0.05%)</title><rect x="872.2" y="547.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="875.2" y="558.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (12 samples, 0.04%)</title><rect x="872.3" y="531.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="875.3" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (35 samples, 0.12%)</title><rect x="872.8" y="547.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="875.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (47 samples, 0.16%)</title><rect x="874.1" y="547.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="877.1" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (47 samples, 0.16%)</title><rect x="874.1" y="531.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="877.1" y="542.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.16%)</title><rect x="874.1" y="515.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="877.1" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (487 samples, 1.63%)</title><rect x="876.0" y="547.0" width="19.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="879.0" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (487 samples, 1.63%)</title><rect x="876.0" y="531.0" width="19.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="879.0" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (487 samples, 1.63%)</title><rect x="876.0" y="515.0" width="19.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="879.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (487 samples, 1.63%)</title><rect x="876.0" y="499.0" width="19.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="879.0" y="510.0"></text>
</g>
<g>
<title>byte[] (487 samples, 1.63%)</title><rect x="876.0" y="483.0" width="19.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="879.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (245 samples, 0.82%)</title><rect x="895.2" y="547.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="898.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (245 samples, 0.82%)</title><rect x="895.2" y="531.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="898.2" y="542.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.10%)</title><rect x="895.2" y="515.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="898.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (214 samples, 0.72%)</title><rect x="896.4" y="515.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="899.4" y="526.0"></text>
</g>
<g>
<title>byte[] (214 samples, 0.72%)</title><rect x="896.4" y="499.0" width="8.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="899.4" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (202 samples, 0.68%)</title><rect x="904.9" y="579.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="907.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (202 samples, 0.68%)</title><rect x="904.9" y="563.0" width="7.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="907.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (202 samples, 0.68%)</title><rect x="904.9" y="547.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="907.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (202 samples, 0.68%)</title><rect x="904.9" y="531.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (202 samples, 0.68%)</title><rect x="904.9" y="515.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="907.9" y="526.0"></text>
</g>
<g>
<title>byte[] (202 samples, 0.68%)</title><rect x="904.9" y="499.0" width="7.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="907.9" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (46 samples, 0.15%)</title><rect x="912.8" y="707.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="915.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (55 samples, 0.18%)</title><rect x="914.6" y="739.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="917.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (55 samples, 0.18%)</title><rect x="914.6" y="723.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="917.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (55 samples, 0.18%)</title><rect x="914.6" y="707.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="917.6" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (55 samples, 0.18%)</title><rect x="914.6" y="691.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="917.6" y="702.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.18%)</title><rect x="914.6" y="675.0" width="2.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="917.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (76 samples, 0.25%)</title><rect x="916.8" y="739.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="919.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (76 samples, 0.25%)</title><rect x="916.8" y="723.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="919.8" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (76 samples, 0.25%)</title><rect x="916.8" y="707.0" width="3.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="919.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (628 samples, 2.10%)</title><rect x="919.8" y="739.0" width="24.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="922.8" y="750.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (81 samples, 0.27%)</title><rect x="919.8" y="723.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="922.8" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (81 samples, 0.27%)</title><rect x="919.8" y="707.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="922.8" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (81 samples, 0.27%)</title><rect x="919.8" y="691.0" width="3.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="922.8" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (44 samples, 0.15%)</title><rect x="923.0" y="723.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="926.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (161 samples, 0.54%)</title><rect x="924.7" y="723.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="927.7" y="734.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.24%)</title><rect x="924.7" y="707.0" width="2.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="927.7" y="718.0"></text>
</g>
<g>
<title>java.lang.String[] (50 samples, 0.17%)</title><rect x="927.5" y="707.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="930.5" y="718.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.13%)</title><rect x="929.5" y="707.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="932.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (342 samples, 1.14%)</title><rect x="931.1" y="723.0" width="13.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="934.1" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (157 samples, 0.52%)</title><rect x="931.1" y="707.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="934.1" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (157 samples, 0.52%)</title><rect x="931.1" y="691.0" width="6.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="934.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (181 samples, 0.60%)</title><rect x="937.4" y="707.0" width="7.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="940.4" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (132 samples, 0.44%)</title><rect x="937.4" y="691.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="940.4" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (132 samples, 0.44%)</title><rect x="937.4" y="675.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="940.4" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (132 samples, 0.44%)</title><rect x="937.4" y="659.0" width="5.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="940.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (17 samples, 0.06%)</title><rect x="942.6" y="691.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="945.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (17 samples, 0.06%)</title><rect x="942.6" y="675.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="945.6" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (7 samples, 0.02%)</title><rect x="942.6" y="659.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="945.6" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (10 samples, 0.03%)</title><rect x="942.9" y="659.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="945.9" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (32 samples, 0.11%)</title><rect x="943.3" y="691.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="946.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (80 samples, 0.27%)</title><rect x="944.6" y="771.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (80 samples, 0.27%)</title><rect x="944.6" y="755.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (80 samples, 0.27%)</title><rect x="944.6" y="739.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="947.6" y="750.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.12%)</title><rect x="944.6" y="723.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="947.6" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (43 samples, 0.14%)</title><rect x="946.0" y="723.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="949.0" y="734.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.14%)</title><rect x="946.0" y="707.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="949.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (331 samples, 1.11%)</title><rect x="947.7" y="803.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="950.7" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (58 samples, 0.19%)</title><rect x="947.7" y="787.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="950.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (98 samples, 0.33%)</title><rect x="950.0" y="787.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="953.0" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (98 samples, 0.33%)</title><rect x="950.0" y="771.0" width="3.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="953.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (175 samples, 0.58%)</title><rect x="953.9" y="787.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="956.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (175 samples, 0.58%)</title><rect x="953.9" y="771.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="956.9" y="782.0"></text>
</g>
<g>
<title>char[] (85 samples, 0.28%)</title><rect x="953.9" y="755.0" width="3.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="956.9" y="766.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.13%)</title><rect x="957.2" y="755.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="960.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (52 samples, 0.17%)</title><rect x="958.7" y="755.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="961.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (52 samples, 0.17%)</title><rect x="958.7" y="739.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="961.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (52 samples, 0.17%)</title><rect x="958.7" y="723.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="961.7" y="734.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.17%)</title><rect x="958.7" y="707.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="961.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (39 samples, 0.13%)</title><rect x="960.8" y="803.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="963.8" y="814.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.13%)</title><rect x="960.8" y="787.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="963.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (61 samples, 0.20%)</title><rect x="962.3" y="803.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="965.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (61 samples, 0.20%)</title><rect x="962.3" y="787.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="965.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (61 samples, 0.20%)</title><rect x="962.3" y="771.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="965.3" y="782.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.11%)</title><rect x="962.3" y="755.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="965.3" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.09%)</title><rect x="963.6" y="755.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="966.6" y="766.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.09%)</title><rect x="963.6" y="739.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="966.6" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (373 samples, 1.25%)</title><rect x="964.7" y="803.0" width="14.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="967.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (373 samples, 1.25%)</title><rect x="964.7" y="787.0" width="14.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.7" y="798.0"></text>
</g>
<g>
<title>char[] (168 samples, 0.56%)</title><rect x="964.7" y="771.0" width="6.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="967.7" y="782.0"></text>
</g>
<g>
<title>java.lang.String (85 samples, 0.28%)</title><rect x="971.3" y="771.0" width="3.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="974.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (120 samples, 0.40%)</title><rect x="974.7" y="771.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="977.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (120 samples, 0.40%)</title><rect x="974.7" y="755.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="977.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (120 samples, 0.40%)</title><rect x="974.7" y="739.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="977.7" y="750.0"></text>
</g>
<g>
<title>byte[] (120 samples, 0.40%)</title><rect x="974.7" y="723.0" width="4.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="977.7" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=6993] (3,476 samples, 11.62%)</title><rect x="979.4" y="883.0" width="137.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="982.4" y="894.0">[NIO Selector #7 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,476 samples, 11.62%)</title><rect x="979.4" y="867.0" width="137.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="982.4" y="878.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (97 samples, 0.32%)</title><rect x="979.4" y="851.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="982.4" y="862.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (97 samples, 0.32%)</title><rect x="979.4" y="835.0" width="3.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="982.4" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,379 samples, 11.29%)</title><rect x="983.3" y="851.0" width="133.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="986.3" y="862.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,379 samples, 11.29%)</title><rect x="983.3" y="835.0" width="133.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="986.3" y="846.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,379 samples, 11.29%)</title><rect x="983.3" y="819.0" width="133.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="986.3" y="830.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,543 samples, 8.50%)</title><rect x="983.3" y="803.0" width="100.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="986.3" y="814.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,543 samples, 8.50%)</title><rect x="983.3" y="787.0" width="100.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="986.3" y="798.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (2,462 samples, 8.23%)</title><rect x="983.3" y="771.0" width="97.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="986.3" y="782.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (202 samples, 0.68%)</title><rect x="983.3" y="755.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="986.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (202 samples, 0.68%)</title><rect x="983.3" y="739.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="986.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (132 samples, 0.44%)</title><rect x="983.3" y="723.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="986.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (132 samples, 0.44%)</title><rect x="983.3" y="707.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="986.3" y="718.0"></text>
</g>
<g>
<title>byte[] (132 samples, 0.44%)</title><rect x="983.3" y="691.0" width="5.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="986.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (70 samples, 0.23%)</title><rect x="988.5" y="723.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="991.5" y="734.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (70 samples, 0.23%)</title><rect x="988.5" y="707.0" width="2.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="991.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (89 samples, 0.30%)</title><rect x="991.2" y="755.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="994.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (89 samples, 0.30%)</title><rect x="991.2" y="739.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="994.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (89 samples, 0.30%)</title><rect x="991.2" y="723.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="994.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (89 samples, 0.30%)</title><rect x="991.2" y="707.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="994.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String (42 samples, 0.14%)</title><rect x="991.2" y="691.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="994.2" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (47 samples, 0.16%)</title><rect x="992.9" y="691.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="995.9" y="702.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.16%)</title><rect x="992.9" y="675.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="995.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (2,171 samples, 7.26%)</title><rect x="994.7" y="755.0" width="85.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="997.7" y="766.0">ru/mail/po..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1,436 samples, 4.80%)</title><rect x="994.7" y="739.0" width="56.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="997.7" y="750.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1,436 samples, 4.80%)</title><rect x="994.7" y="723.0" width="56.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="997.7" y="734.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1,402 samples, 4.69%)</title><rect x="994.7" y="707.0" width="55.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="997.7" y="718.0">ch/qo..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (123 samples, 0.41%)</title><rect x="994.7" y="691.0" width="4.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="997.7" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1,279 samples, 4.27%)</title><rect x="999.6" y="691.0" width="50.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1002.6" y="702.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1,279 samples, 4.27%)</title><rect x="999.6" y="675.0" width="50.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1002.6" y="686.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1,279 samples, 4.27%)</title><rect x="999.6" y="659.0" width="50.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1002.6" y="670.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1,279 samples, 4.27%)</title><rect x="999.6" y="643.0" width="50.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1002.6" y="654.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1,279 samples, 4.27%)</title><rect x="999.6" y="627.0" width="50.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1002.6" y="638.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1,279 samples, 4.27%)</title><rect x="999.6" y="611.0" width="50.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1002.6" y="622.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (244 samples, 0.82%)</title><rect x="999.6" y="595.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1002.6" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (244 samples, 0.82%)</title><rect x="999.6" y="579.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1002.6" y="590.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (244 samples, 0.82%)</title><rect x="999.6" y="563.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1002.6" y="574.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (244 samples, 0.82%)</title><rect x="999.6" y="547.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1002.6" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (24 samples, 0.08%)</title><rect x="999.6" y="531.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1002.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (112 samples, 0.37%)</title><rect x="1000.5" y="531.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1003.5" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (112 samples, 0.37%)</title><rect x="1000.5" y="515.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1003.5" y="526.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.37%)</title><rect x="1000.5" y="499.0" width="4.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1003.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (108 samples, 0.36%)</title><rect x="1004.9" y="531.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1007.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (108 samples, 0.36%)</title><rect x="1004.9" y="515.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1007.9" y="526.0"></text>
</g>
<g>
<title>java.lang.String (46 samples, 0.15%)</title><rect x="1004.9" y="499.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1007.9" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (62 samples, 0.21%)</title><rect x="1006.8" y="499.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1009.8" y="510.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.21%)</title><rect x="1006.8" y="483.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1009.8" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1,031 samples, 3.45%)</title><rect x="1009.4" y="595.0" width="40.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1012.4" y="606.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (810 samples, 2.71%)</title><rect x="1009.4" y="579.0" width="31.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1012.4" y="590.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (810 samples, 2.71%)</title><rect x="1009.4" y="563.0" width="31.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1012.4" y="574.0">ch..</text>
</g>
<g>
<title>java.lang.StringBuilder (40 samples, 0.13%)</title><rect x="1009.6" y="547.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1012.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (50 samples, 0.17%)</title><rect x="1011.2" y="547.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1014.2" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (50 samples, 0.17%)</title><rect x="1011.2" y="531.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1014.2" y="542.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.17%)</title><rect x="1011.2" y="515.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1014.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (462 samples, 1.54%)</title><rect x="1013.1" y="547.0" width="18.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1016.1" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (462 samples, 1.54%)</title><rect x="1013.1" y="531.0" width="18.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1016.1" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (462 samples, 1.54%)</title><rect x="1013.1" y="515.0" width="18.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1016.1" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (462 samples, 1.54%)</title><rect x="1013.1" y="499.0" width="18.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1016.1" y="510.0"></text>
</g>
<g>
<title>byte[] (462 samples, 1.54%)</title><rect x="1013.1" y="483.0" width="18.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1016.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (252 samples, 0.84%)</title><rect x="1031.4" y="547.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1034.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (252 samples, 0.84%)</title><rect x="1031.4" y="531.0" width="9.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1034.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.13%)</title><rect x="1031.4" y="515.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1034.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (214 samples, 0.72%)</title><rect x="1032.9" y="515.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1035.9" y="526.0"></text>
</g>
<g>
<title>byte[] (214 samples, 0.72%)</title><rect x="1032.9" y="499.0" width="8.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1035.9" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (221 samples, 0.74%)</title><rect x="1041.3" y="579.0" width="8.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1044.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (221 samples, 0.74%)</title><rect x="1041.3" y="563.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1044.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (221 samples, 0.74%)</title><rect x="1041.3" y="547.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1044.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (221 samples, 0.74%)</title><rect x="1041.3" y="531.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.3" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (221 samples, 0.74%)</title><rect x="1041.3" y="515.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1044.3" y="526.0"></text>
</g>
<g>
<title>byte[] (221 samples, 0.74%)</title><rect x="1041.3" y="499.0" width="8.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1044.3" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (34 samples, 0.11%)</title><rect x="1050.0" y="707.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1053.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (45 samples, 0.15%)</title><rect x="1051.4" y="739.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1054.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (45 samples, 0.15%)</title><rect x="1051.4" y="723.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1054.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (45 samples, 0.15%)</title><rect x="1051.4" y="707.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1054.4" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (45 samples, 0.15%)</title><rect x="1051.4" y="691.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1054.4" y="702.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.15%)</title><rect x="1051.4" y="675.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1054.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (75 samples, 0.25%)</title><rect x="1053.1" y="739.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1056.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (75 samples, 0.25%)</title><rect x="1053.1" y="723.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1056.1" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (75 samples, 0.25%)</title><rect x="1053.1" y="707.0" width="3.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1056.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (615 samples, 2.06%)</title><rect x="1056.1" y="739.0" width="24.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1059.1" y="750.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (75 samples, 0.25%)</title><rect x="1056.1" y="723.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1059.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (75 samples, 0.25%)</title><rect x="1056.1" y="707.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1059.1" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (75 samples, 0.25%)</title><rect x="1056.1" y="691.0" width="2.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1059.1" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (41 samples, 0.14%)</title><rect x="1059.0" y="723.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1062.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (153 samples, 0.51%)</title><rect x="1060.7" y="723.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1063.7" y="734.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.22%)</title><rect x="1060.7" y="707.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1063.7" y="718.0"></text>
</g>
<g>
<title>java.lang.String[] (50 samples, 0.17%)</title><rect x="1063.2" y="707.0" width="2.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1066.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.13%)</title><rect x="1065.2" y="707.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1068.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (346 samples, 1.16%)</title><rect x="1066.7" y="723.0" width="13.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1069.7" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (166 samples, 0.55%)</title><rect x="1066.7" y="707.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1069.7" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (166 samples, 0.55%)</title><rect x="1066.7" y="691.0" width="6.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1069.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (177 samples, 0.59%)</title><rect x="1073.4" y="707.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1076.4" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (139 samples, 0.46%)</title><rect x="1073.4" y="691.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1076.4" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (139 samples, 0.46%)</title><rect x="1073.4" y="675.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1076.4" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (139 samples, 0.46%)</title><rect x="1073.4" y="659.0" width="5.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1076.4" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (32 samples, 0.11%)</title><rect x="1079.1" y="691.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1082.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (81 samples, 0.27%)</title><rect x="1080.3" y="771.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1083.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (81 samples, 0.27%)</title><rect x="1080.3" y="755.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1083.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (81 samples, 0.27%)</title><rect x="1080.3" y="739.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1083.3" y="750.0"></text>
</g>
<g>
<title>java.lang.String (36 samples, 0.12%)</title><rect x="1080.3" y="723.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1083.3" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (45 samples, 0.15%)</title><rect x="1081.8" y="723.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1084.8" y="734.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.15%)</title><rect x="1081.8" y="707.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1084.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (383 samples, 1.28%)</title><rect x="1083.5" y="803.0" width="15.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1086.5" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (59 samples, 0.20%)</title><rect x="1083.5" y="787.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1086.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (123 samples, 0.41%)</title><rect x="1085.9" y="787.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1088.9" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (123 samples, 0.41%)</title><rect x="1085.9" y="771.0" width="4.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1088.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (201 samples, 0.67%)</title><rect x="1090.7" y="787.0" width="7.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1093.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (201 samples, 0.67%)</title><rect x="1090.7" y="771.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1093.7" y="782.0"></text>
</g>
<g>
<title>char[] (98 samples, 0.33%)</title><rect x="1090.7" y="755.0" width="3.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1093.7" y="766.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.15%)</title><rect x="1094.6" y="755.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1097.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (58 samples, 0.19%)</title><rect x="1096.3" y="755.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1099.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (58 samples, 0.19%)</title><rect x="1096.3" y="739.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1099.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (58 samples, 0.19%)</title><rect x="1096.3" y="723.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1099.3" y="734.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.19%)</title><rect x="1096.3" y="707.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1099.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (42 samples, 0.14%)</title><rect x="1098.6" y="803.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1101.6" y="814.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.14%)</title><rect x="1098.6" y="787.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1101.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (59 samples, 0.20%)</title><rect x="1100.3" y="803.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1103.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (59 samples, 0.20%)</title><rect x="1100.3" y="787.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1103.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (59 samples, 0.20%)</title><rect x="1100.3" y="771.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1103.3" y="782.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.10%)</title><rect x="1100.3" y="755.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1103.3" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.09%)</title><rect x="1101.5" y="755.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1104.5" y="766.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.09%)</title><rect x="1101.5" y="739.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1104.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (352 samples, 1.18%)</title><rect x="1102.6" y="803.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1105.6" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (352 samples, 1.18%)</title><rect x="1102.6" y="787.0" width="13.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1105.6" y="798.0"></text>
</g>
<g>
<title>char[] (172 samples, 0.57%)</title><rect x="1102.6" y="771.0" width="6.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1105.6" y="782.0"></text>
</g>
<g>
<title>java.lang.String (68 samples, 0.23%)</title><rect x="1109.4" y="771.0" width="2.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1112.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (112 samples, 0.37%)</title><rect x="1112.1" y="771.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1115.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (112 samples, 0.37%)</title><rect x="1112.1" y="755.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1115.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (112 samples, 0.37%)</title><rect x="1112.1" y="739.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1115.1" y="750.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.37%)</title><rect x="1112.1" y="723.0" width="4.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1115.1" y="734.0"></text>
</g>
<g>
<title>[RMI TCP Connection(1)-127.0.0.1 tid=7198] (1,201 samples, 4.01%)</title><rect x="1116.5" y="883.0" width="47.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1119.5" y="894.0">[RMI..</text>
</g>
<g>
<title>java/lang/Thread.run (1,201 samples, 4.01%)</title><rect x="1116.5" y="867.0" width="47.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1119.5" y="878.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,201 samples, 4.01%)</title><rect x="1116.5" y="851.0" width="47.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1119.5" y="862.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,201 samples, 4.01%)</title><rect x="1116.5" y="835.0" width="47.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1119.5" y="846.0">java..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (1,201 samples, 4.01%)</title><rect x="1116.5" y="819.0" width="47.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1119.5" y="830.0">sun/..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,201 samples, 4.01%)</title><rect x="1116.5" y="803.0" width="47.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1119.5" y="814.0">java..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$93/1386574298.run (1,201 samples, 4.01%)</title><rect x="1116.5" y="787.0" width="47.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1119.5" y="798.0">sun/..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (1,201 samples, 4.01%)</title><rect x="1116.5" y="771.0" width="47.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1119.5" y="782.0">sun/..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (1,201 samples, 4.01%)</title><rect x="1116.5" y="755.0" width="47.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.5" y="766.0">sun/..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (1,201 samples, 4.01%)</title><rect x="1116.5" y="739.0" width="47.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1119.5" y="750.0">sun/..</text>
</g>
<g>
<title>java.io.DataOutputStream (18 samples, 0.06%)</title><rect x="1116.5" y="723.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1119.5" y="734.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (1,183 samples, 3.95%)</title><rect x="1117.2" y="723.0" width="46.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1120.2" y="734.0">sun/..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,015 samples, 3.39%)</title><rect x="1117.2" y="707.0" width="40.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1120.2" y="718.0">jav..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (1,015 samples, 3.39%)</title><rect x="1117.2" y="691.0" width="40.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.2" y="702.0">sun..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (1,015 samples, 3.39%)</title><rect x="1117.2" y="675.0" width="40.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1120.2" y="686.0">sun..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (1,015 samples, 3.39%)</title><rect x="1117.2" y="659.0" width="40.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1120.2" y="670.0">sun..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (526 samples, 1.76%)</title><rect x="1117.2" y="643.0" width="20.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1120.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (526 samples, 1.76%)</title><rect x="1117.2" y="627.0" width="20.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1120.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (525 samples, 1.75%)</title><rect x="1117.2" y="611.0" width="20.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1120.2" y="622.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (525 samples, 1.75%)</title><rect x="1117.2" y="595.0" width="20.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1120.2" y="606.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (448 samples, 1.50%)</title><rect x="1117.2" y="579.0" width="17.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1120.2" y="590.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (446 samples, 1.49%)</title><rect x="1117.3" y="563.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.3" y="574.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (446 samples, 1.49%)</title><rect x="1117.3" y="547.0" width="17.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1120.3" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (446 samples, 1.49%)</title><rect x="1117.3" y="531.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.3" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (446 samples, 1.49%)</title><rect x="1117.3" y="515.0" width="17.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1120.3" y="526.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (445 samples, 1.49%)</title><rect x="1117.4" y="499.0" width="17.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1120.4" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (445 samples, 1.49%)</title><rect x="1117.4" y="483.0" width="17.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1120.4" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (445 samples, 1.49%)</title><rect x="1117.4" y="467.0" width="17.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.4" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (445 samples, 1.49%)</title><rect x="1117.4" y="451.0" width="17.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.4" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (445 samples, 1.49%)</title><rect x="1117.4" y="435.0" width="17.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1120.4" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (445 samples, 1.49%)</title><rect x="1117.4" y="419.0" width="17.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1120.4" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (445 samples, 1.49%)</title><rect x="1117.4" y="403.0" width="17.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1120.4" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (445 samples, 1.49%)</title><rect x="1117.4" y="387.0" width="17.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1120.4" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (398 samples, 1.33%)</title><rect x="1117.4" y="371.0" width="15.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.4" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (398 samples, 1.33%)</title><rect x="1117.4" y="355.0" width="15.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1120.4" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (397 samples, 1.33%)</title><rect x="1117.4" y="339.0" width="15.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.4" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (397 samples, 1.33%)</title><rect x="1117.4" y="323.0" width="15.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1120.4" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (139 samples, 0.46%)</title><rect x="1117.4" y="307.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1120.4" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (116 samples, 0.39%)</title><rect x="1117.4" y="291.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1120.4" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (107 samples, 0.36%)</title><rect x="1117.4" y="275.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1120.4" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (107 samples, 0.36%)</title><rect x="1117.4" y="259.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1120.4" y="270.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (7 samples, 0.02%)</title><rect x="1117.4" y="243.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1120.4" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (62 samples, 0.21%)</title><rect x="1117.7" y="243.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1120.7" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (8 samples, 0.03%)</title><rect x="1117.7" y="227.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1120.7" y="238.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (54 samples, 0.18%)</title><rect x="1118.0" y="227.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1121.0" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap (7 samples, 0.02%)</title><rect x="1118.0" y="211.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1121.0" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (47 samples, 0.16%)</title><rect x="1118.3" y="211.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.3" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (47 samples, 0.16%)</title><rect x="1118.3" y="195.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1121.3" y="206.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (36 samples, 0.12%)</title><rect x="1120.2" y="243.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1123.2" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (36 samples, 0.12%)</title><rect x="1120.2" y="227.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1123.2" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (9 samples, 0.03%)</title><rect x="1121.6" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1124.6" y="286.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (9 samples, 0.03%)</title><rect x="1121.6" y="259.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1124.6" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (23 samples, 0.08%)</title><rect x="1121.9" y="291.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1124.9" y="302.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (18 samples, 0.06%)</title><rect x="1122.0" y="275.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1125.0" y="286.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (14 samples, 0.05%)</title><rect x="1122.0" y="259.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1125.0" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.04%)</title><rect x="1122.8" y="307.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1125.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.02%)</title><rect x="1123.4" y="307.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1126.4" y="318.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (130 samples, 0.43%)</title><rect x="1123.7" y="307.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1126.7" y="318.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (11 samples, 0.04%)</title><rect x="1123.7" y="291.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1126.7" y="302.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (119 samples, 0.40%)</title><rect x="1124.1" y="291.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1127.1" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (116 samples, 0.39%)</title><rect x="1124.2" y="275.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1127.2" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (116 samples, 0.39%)</title><rect x="1124.2" y="259.0" width="4.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1127.2" y="270.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (107 samples, 0.36%)</title><rect x="1128.8" y="307.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1131.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (92 samples, 0.31%)</title><rect x="1128.8" y="291.0" width="3.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1131.8" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (15 samples, 0.05%)</title><rect x="1132.4" y="291.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1135.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (15 samples, 0.05%)</title><rect x="1132.4" y="275.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1135.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (15 samples, 0.05%)</title><rect x="1132.4" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1135.4" y="270.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (15 samples, 0.05%)</title><rect x="1132.4" y="243.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1135.4" y="254.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (15 samples, 0.05%)</title><rect x="1132.4" y="227.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1135.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (15 samples, 0.05%)</title><rect x="1132.4" y="211.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1135.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor13.invoke (11 samples, 0.04%)</title><rect x="1132.4" y="195.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1135.4" y="206.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getLockedSynchronizers (11 samples, 0.04%)</title><rect x="1132.4" y="179.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1135.4" y="190.0"></text>
</g>
<g>
<title>java.lang.management.LockInfo[] (11 samples, 0.04%)</title><rect x="1132.4" y="163.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1135.4" y="174.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (47 samples, 0.16%)</title><rect x="1133.1" y="371.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1136.1" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (47 samples, 0.16%)</title><rect x="1133.1" y="355.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1136.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (47 samples, 0.16%)</title><rect x="1133.1" y="339.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1136.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (47 samples, 0.16%)</title><rect x="1133.1" y="323.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1136.1" y="334.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (47 samples, 0.16%)</title><rect x="1133.1" y="307.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1136.1" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (47 samples, 0.16%)</title><rect x="1133.1" y="291.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1136.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (47 samples, 0.16%)</title><rect x="1133.1" y="275.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (47 samples, 0.16%)</title><rect x="1133.1" y="259.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1136.1" y="270.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (47 samples, 0.16%)</title><rect x="1133.1" y="243.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1136.1" y="254.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (47 samples, 0.16%)</title><rect x="1133.1" y="227.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1136.1" y="238.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement (9 samples, 0.03%)</title><rect x="1133.3" y="211.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1136.3" y="222.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (13 samples, 0.04%)</title><rect x="1133.6" y="211.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1136.6" y="222.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (7 samples, 0.02%)</title><rect x="1134.1" y="211.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1137.1" y="222.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (13 samples, 0.04%)</title><rect x="1134.4" y="211.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1137.4" y="222.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (13 samples, 0.04%)</title><rect x="1134.4" y="195.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1137.4" y="206.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (7 samples, 0.02%)</title><rect x="1134.4" y="179.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1137.4" y="190.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (7 samples, 0.02%)</title><rect x="1134.4" y="163.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1137.4" y="174.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.02%)</title><rect x="1134.4" y="147.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1137.4" y="158.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getClassLoaderFor (12 samples, 0.04%)</title><rect x="1134.9" y="579.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.9" y="590.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.withPermissions (10 samples, 0.03%)</title><rect x="1135.0" y="563.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1138.0" y="574.0"></text>
</g>
<g>
<title>java/security/Permissions.add (10 samples, 0.03%)</title><rect x="1135.0" y="547.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1138.0" y="558.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (65 samples, 0.22%)</title><rect x="1135.4" y="579.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1138.4" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (15 samples, 0.05%)</title><rect x="1135.4" y="563.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1138.4" y="574.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (15 samples, 0.05%)</title><rect x="1135.4" y="547.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1138.4" y="558.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (15 samples, 0.05%)</title><rect x="1135.4" y="531.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1138.4" y="542.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (13 samples, 0.04%)</title><rect x="1135.5" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1138.5" y="526.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (10 samples, 0.03%)</title><rect x="1135.5" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1138.5" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (10 samples, 0.03%)</title><rect x="1135.5" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1138.5" y="494.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (10 samples, 0.03%)</title><rect x="1135.5" y="467.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1138.5" y="478.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (50 samples, 0.17%)</title><rect x="1136.0" y="563.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1139.0" y="574.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (50 samples, 0.17%)</title><rect x="1136.0" y="547.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1139.0" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (17 samples, 0.06%)</title><rect x="1136.0" y="531.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1139.0" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (17 samples, 0.06%)</title><rect x="1136.0" y="515.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.0" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (17 samples, 0.06%)</title><rect x="1136.0" y="499.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (17 samples, 0.06%)</title><rect x="1136.0" y="483.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1139.0" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (17 samples, 0.06%)</title><rect x="1136.0" y="467.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1139.0" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (17 samples, 0.06%)</title><rect x="1136.0" y="451.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1139.0" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (17 samples, 0.06%)</title><rect x="1136.0" y="435.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1139.0" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (17 samples, 0.06%)</title><rect x="1136.0" y="419.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1139.0" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (11 samples, 0.04%)</title><rect x="1136.0" y="403.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1139.0" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (11 samples, 0.04%)</title><rect x="1136.0" y="387.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1139.0" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (11 samples, 0.04%)</title><rect x="1136.0" y="371.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1139.0" y="382.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (33 samples, 0.11%)</title><rect x="1136.6" y="531.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1139.6" y="542.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (33 samples, 0.11%)</title><rect x="1136.6" y="515.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1139.6" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (33 samples, 0.11%)</title><rect x="1136.6" y="499.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1139.6" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (27 samples, 0.09%)</title><rect x="1136.6" y="483.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1139.6" y="494.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.04%)</title><rect x="1136.6" y="467.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1139.6" y="478.0"></text>
</g>
<g>
<title>char[] (7 samples, 0.02%)</title><rect x="1137.1" y="467.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1140.1" y="478.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (9 samples, 0.03%)</title><rect x="1137.4" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1140.4" y="478.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (217 samples, 0.73%)</title><rect x="1137.9" y="643.0" width="8.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1140.9" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (217 samples, 0.73%)</title><rect x="1137.9" y="627.0" width="8.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1140.9" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (217 samples, 0.73%)</title><rect x="1137.9" y="611.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1140.9" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (217 samples, 0.73%)</title><rect x="1137.9" y="595.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1140.9" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (217 samples, 0.73%)</title><rect x="1137.9" y="579.0" width="8.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1140.9" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (213 samples, 0.71%)</title><rect x="1137.9" y="563.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.9" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (8 samples, 0.03%)</title><rect x="1137.9" y="547.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1140.9" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (205 samples, 0.69%)</title><rect x="1138.3" y="547.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1141.3" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (205 samples, 0.69%)</title><rect x="1138.3" y="531.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1141.3" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (201 samples, 0.67%)</title><rect x="1138.4" y="515.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1141.4" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (198 samples, 0.66%)</title><rect x="1138.4" y="499.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1141.4" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (198 samples, 0.66%)</title><rect x="1138.4" y="483.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1141.4" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (32 samples, 0.11%)</title><rect x="1138.6" y="467.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1141.6" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (32 samples, 0.11%)</title><rect x="1138.6" y="451.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1141.6" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (32 samples, 0.11%)</title><rect x="1138.6" y="435.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1141.6" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (32 samples, 0.11%)</title><rect x="1138.6" y="419.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.6" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (32 samples, 0.11%)</title><rect x="1138.6" y="403.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1141.6" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (32 samples, 0.11%)</title><rect x="1138.6" y="387.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1141.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (32 samples, 0.11%)</title><rect x="1138.6" y="371.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1141.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (32 samples, 0.11%)</title><rect x="1138.6" y="355.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1141.6" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (32 samples, 0.11%)</title><rect x="1138.6" y="339.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.6" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (30 samples, 0.10%)</title><rect x="1138.7" y="323.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1141.7" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (30 samples, 0.10%)</title><rect x="1138.7" y="307.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1141.7" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (26 samples, 0.09%)</title><rect x="1138.7" y="291.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1141.7" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (26 samples, 0.09%)</title><rect x="1138.7" y="275.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.7" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (26 samples, 0.09%)</title><rect x="1138.7" y="259.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1141.7" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (23 samples, 0.08%)</title><rect x="1138.8" y="243.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1141.8" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (20 samples, 0.07%)</title><rect x="1138.8" y="227.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1141.8" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (20 samples, 0.07%)</title><rect x="1138.8" y="211.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1141.8" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (19 samples, 0.06%)</title><rect x="1138.9" y="195.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1141.9" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (19 samples, 0.06%)</title><rect x="1138.9" y="179.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.9" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (19 samples, 0.06%)</title><rect x="1138.9" y="163.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1141.9" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (13 samples, 0.04%)</title><rect x="1139.1" y="147.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1142.1" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (11 samples, 0.04%)</title><rect x="1139.2" y="131.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1142.2" y="142.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (11 samples, 0.04%)</title><rect x="1139.2" y="115.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1142.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (11 samples, 0.04%)</title><rect x="1139.2" y="99.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.2" y="110.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (11 samples, 0.04%)</title><rect x="1139.2" y="83.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.2" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (11 samples, 0.04%)</title><rect x="1139.2" y="67.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1142.2" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (11 samples, 0.04%)</title><rect x="1139.2" y="51.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1142.2" y="62.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (11 samples, 0.04%)</title><rect x="1139.2" y="35.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1142.2" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (161 samples, 0.54%)</title><rect x="1139.9" y="467.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1142.9" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (160 samples, 0.53%)</title><rect x="1139.9" y="451.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (160 samples, 0.53%)</title><rect x="1139.9" y="435.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (160 samples, 0.53%)</title><rect x="1139.9" y="419.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1142.9" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (160 samples, 0.53%)</title><rect x="1139.9" y="403.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1142.9" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (157 samples, 0.52%)</title><rect x="1140.0" y="387.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1143.0" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (157 samples, 0.52%)</title><rect x="1140.0" y="371.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1143.0" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (75 samples, 0.25%)</title><rect x="1140.0" y="355.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1143.0" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (18 samples, 0.06%)</title><rect x="1140.0" y="339.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.0" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (14 samples, 0.05%)</title><rect x="1140.0" y="323.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1143.0" y="334.0"></text>
</g>
<g>
<title>int[] (7 samples, 0.02%)</title><rect x="1140.0" y="307.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1143.0" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.02%)</title><rect x="1140.3" y="307.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1143.3" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (57 samples, 0.19%)</title><rect x="1140.7" y="339.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1143.7" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (45 samples, 0.15%)</title><rect x="1140.7" y="323.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.7" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (45 samples, 0.15%)</title><rect x="1140.7" y="307.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1143.7" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (45 samples, 0.15%)</title><rect x="1140.7" y="291.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1143.7" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (39 samples, 0.13%)</title><rect x="1140.9" y="275.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1143.9" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (33 samples, 0.11%)</title><rect x="1140.9" y="259.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1143.9" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (31 samples, 0.10%)</title><rect x="1141.0" y="243.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1144.0" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (30 samples, 0.10%)</title><rect x="1141.1" y="227.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1144.1" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (27 samples, 0.09%)</title><rect x="1141.2" y="211.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1144.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (27 samples, 0.09%)</title><rect x="1141.2" y="195.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1144.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (27 samples, 0.09%)</title><rect x="1141.2" y="179.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1144.2" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (27 samples, 0.09%)</title><rect x="1141.2" y="163.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1144.2" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (26 samples, 0.09%)</title><rect x="1141.2" y="147.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1144.2" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (26 samples, 0.09%)</title><rect x="1141.2" y="131.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1144.2" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (19 samples, 0.06%)</title><rect x="1141.2" y="115.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1144.2" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (19 samples, 0.06%)</title><rect x="1141.2" y="99.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1144.2" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (18 samples, 0.06%)</title><rect x="1141.2" y="83.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1144.2" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.04%)</title><rect x="1141.4" y="67.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1144.4" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (7 samples, 0.02%)</title><rect x="1142.0" y="115.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1145.0" y="126.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (7 samples, 0.02%)</title><rect x="1142.0" y="99.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1145.0" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (12 samples, 0.04%)</title><rect x="1142.5" y="323.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1145.5" y="334.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (12 samples, 0.04%)</title><rect x="1142.5" y="307.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1145.5" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (32 samples, 0.11%)</title><rect x="1143.0" y="355.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1146.0" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (18 samples, 0.06%)</title><rect x="1143.0" y="339.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1146.0" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (16 samples, 0.05%)</title><rect x="1143.0" y="323.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1146.0" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.04%)</title><rect x="1143.1" y="307.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1146.1" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (14 samples, 0.05%)</title><rect x="1143.7" y="339.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1146.7" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (14 samples, 0.05%)</title><rect x="1143.7" y="323.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.7" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (13 samples, 0.04%)</title><rect x="1143.7" y="307.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1146.7" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (12 samples, 0.04%)</title><rect x="1143.7" y="291.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1146.7" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (12 samples, 0.04%)</title><rect x="1143.7" y="275.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1146.7" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (8 samples, 0.03%)</title><rect x="1143.9" y="259.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1146.9" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (47 samples, 0.16%)</title><rect x="1144.3" y="355.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1147.3" y="366.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (47 samples, 0.16%)</title><rect x="1144.3" y="339.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1147.3" y="350.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (111 samples, 0.37%)</title><rect x="1146.5" y="643.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1149.5" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (105 samples, 0.35%)</title><rect x="1146.7" y="627.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1149.7" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (105 samples, 0.35%)</title><rect x="1146.7" y="611.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1149.7" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (105 samples, 0.35%)</title><rect x="1146.7" y="595.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1149.7" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (15 samples, 0.05%)</title><rect x="1146.7" y="579.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1149.7" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (15 samples, 0.05%)</title><rect x="1146.7" y="563.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1149.7" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (15 samples, 0.05%)</title><rect x="1146.7" y="547.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1149.7" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (8 samples, 0.03%)</title><rect x="1147.0" y="531.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1150.0" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (90 samples, 0.30%)</title><rect x="1147.3" y="579.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1150.3" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (88 samples, 0.29%)</title><rect x="1147.4" y="563.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1150.4" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (88 samples, 0.29%)</title><rect x="1147.4" y="547.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1150.4" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (88 samples, 0.29%)</title><rect x="1147.4" y="531.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1150.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (88 samples, 0.29%)</title><rect x="1147.4" y="515.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1150.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (72 samples, 0.24%)</title><rect x="1147.4" y="499.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1150.4" y="510.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (72 samples, 0.24%)</title><rect x="1147.4" y="483.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1150.4" y="494.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (72 samples, 0.24%)</title><rect x="1147.4" y="467.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1150.4" y="478.0"></text>
</g>
<g>
<title>char[] (9 samples, 0.03%)</title><rect x="1147.4" y="451.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1150.4" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.03%)</title><rect x="1147.8" y="451.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1150.8" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.04%)</title><rect x="1148.1" y="451.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1151.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.04%)</title><rect x="1148.1" y="435.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1151.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.04%)</title><rect x="1148.1" y="419.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1151.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.toCharArray (7 samples, 0.02%)</title><rect x="1148.6" y="451.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1151.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toChars (7 samples, 0.02%)</title><rect x="1148.6" y="435.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1151.6" y="446.0"></text>
</g>
<g>
<title>char[] (7 samples, 0.02%)</title><rect x="1148.6" y="419.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1151.6" y="430.0"></text>
</g>
<g>
<title>javax/management/ObjectName.addProperty (10 samples, 0.03%)</title><rect x="1149.1" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1152.1" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.put (10 samples, 0.03%)</title><rect x="1149.1" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1152.1" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (10 samples, 0.03%)</title><rect x="1149.1" y="419.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1152.1" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (9 samples, 0.03%)</title><rect x="1149.2" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1152.2" y="414.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (9 samples, 0.03%)</title><rect x="1149.2" y="387.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1152.2" y="398.0"></text>
</g>
<g>
<title>javax/management/ObjectName.setCanonicalName (18 samples, 0.06%)</title><rect x="1149.5" y="451.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1152.5" y="462.0"></text>
</g>
<g>
<title>javax.management.ObjectName$Property[] (12 samples, 0.04%)</title><rect x="1149.8" y="435.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1152.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor36.invoke (16 samples, 0.05%)</title><rect x="1150.3" y="499.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1153.3" y="510.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.readObject (16 samples, 0.05%)</title><rect x="1150.3" y="483.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1153.3" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadObject (16 samples, 0.05%)</title><rect x="1150.3" y="467.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1153.3" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadFields (16 samples, 0.05%)</title><rect x="1150.3" y="451.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1153.3" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (16 samples, 0.05%)</title><rect x="1150.3" y="435.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1153.3" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (16 samples, 0.05%)</title><rect x="1150.3" y="419.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1153.3" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (16 samples, 0.05%)</title><rect x="1150.3" y="403.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1153.3" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (16 samples, 0.05%)</title><rect x="1150.3" y="387.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1153.3" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (8 samples, 0.03%)</title><rect x="1150.6" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1153.6" y="382.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (159 samples, 0.53%)</title><rect x="1150.9" y="643.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1153.9" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (158 samples, 0.53%)</title><rect x="1150.9" y="627.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1153.9" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (158 samples, 0.53%)</title><rect x="1150.9" y="611.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1153.9" y="622.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (158 samples, 0.53%)</title><rect x="1150.9" y="595.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1153.9" y="606.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (158 samples, 0.53%)</title><rect x="1150.9" y="579.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1153.9" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (158 samples, 0.53%)</title><rect x="1150.9" y="563.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1153.9" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (87 samples, 0.29%)</title><rect x="1151.1" y="547.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1154.1" y="558.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.10%)</title><rect x="1151.1" y="531.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1154.1" y="542.0"></text>
</g>
<g>
<title>char[] (14 samples, 0.05%)</title><rect x="1152.3" y="531.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1155.3" y="542.0"></text>
</g>
<g>
<title>char[] (44 samples, 0.15%)</title><rect x="1152.8" y="531.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1155.8" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (36 samples, 0.12%)</title><rect x="1154.5" y="547.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1157.5" y="558.0"></text>
</g>
<g>
<title>int[] (23 samples, 0.08%)</title><rect x="1154.5" y="531.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1157.5" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.04%)</title><rect x="1155.5" y="531.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1158.5" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$ReplaceTable.&lt;init&gt; (30 samples, 0.10%)</title><rect x="1156.0" y="547.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1159.0" y="558.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (7 samples, 0.02%)</title><rect x="1156.0" y="531.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1159.0" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (22 samples, 0.07%)</title><rect x="1156.3" y="531.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.3" y="542.0"></text>
</g>
<g>
<title>int[] (13 samples, 0.04%)</title><rect x="1156.3" y="515.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1159.3" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.02%)</title><rect x="1156.9" y="515.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1159.9" y="526.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (168 samples, 0.56%)</title><rect x="1157.2" y="707.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1160.2" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (168 samples, 0.56%)</title><rect x="1157.2" y="691.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1160.2" y="702.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (167 samples, 0.56%)</title><rect x="1157.3" y="675.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1160.3" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (166 samples, 0.55%)</title><rect x="1157.3" y="659.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1160.3" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (114 samples, 0.38%)</title><rect x="1157.4" y="643.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1160.4" y="654.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.04%)</title><rect x="1157.4" y="627.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1160.4" y="638.0"></text>
</g>
<g>
<title>char[] (8 samples, 0.03%)</title><rect x="1157.9" y="627.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1160.9" y="638.0"></text>
</g>
<g>
<title>char[] (40 samples, 0.13%)</title><rect x="1158.2" y="627.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1161.2" y="638.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (53 samples, 0.18%)</title><rect x="1159.8" y="627.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1162.8" y="638.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.05%)</title><rect x="1159.8" y="611.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1162.8" y="622.0"></text>
</g>
<g>
<title>char[] (35 samples, 0.12%)</title><rect x="1160.5" y="611.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1163.5" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (50 samples, 0.17%)</title><rect x="1161.9" y="643.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1164.9" y="654.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.06%)</title><rect x="1161.9" y="627.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1164.9" y="638.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable$HandleList[] (8 samples, 0.03%)</title><rect x="1162.6" y="627.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1165.6" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (24 samples, 0.08%)</title><rect x="1162.9" y="627.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1165.9" y="638.0"></text>
</g>
<g>
<title>[pool-1-thread-2 tid=7169] (663 samples, 2.22%)</title><rect x="1163.9" y="883.0" width="26.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1166.9" y="894.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (663 samples, 2.22%)</title><rect x="1163.9" y="867.0" width="26.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1166.9" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (663 samples, 2.22%)</title><rect x="1163.9" y="851.0" width="26.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1166.9" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (663 samples, 2.22%)</title><rect x="1163.9" y="835.0" width="26.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1166.9" y="846.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$58/152065618.run (663 samples, 2.22%)</title><rect x="1163.9" y="819.0" width="26.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1166.9" y="830.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$flush$5 (663 samples, 2.22%)</title><rect x="1163.9" y="803.0" width="26.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1166.9" y="814.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.serialize (662 samples, 2.21%)</title><rect x="1163.9" y="787.0" width="26.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1166.9" y="798.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.write (662 samples, 2.21%)</title><rect x="1163.9" y="771.0" width="26.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1166.9" y="782.0">r..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (182 samples, 0.61%)</title><rect x="1163.9" y="755.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1166.9" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (182 samples, 0.61%)</title><rect x="1163.9" y="739.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1166.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$59/2145435247.apply (182 samples, 0.61%)</title><rect x="1163.9" y="723.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1166.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (182 samples, 0.61%)</title><rect x="1163.9" y="707.0" width="7.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1166.9" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (84 samples, 0.28%)</title><rect x="1163.9" y="691.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1166.9" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (84 samples, 0.28%)</title><rect x="1163.9" y="675.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1166.9" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (84 samples, 0.28%)</title><rect x="1163.9" y="659.0" width="3.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1166.9" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (75 samples, 0.25%)</title><rect x="1167.2" y="691.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1170.2" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (75 samples, 0.25%)</title><rect x="1167.2" y="675.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1170.2" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (23 samples, 0.08%)</title><rect x="1170.2" y="691.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1173.2" y="702.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (30 samples, 0.10%)</title><rect x="1171.1" y="755.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1174.1" y="766.0"></text>
</g>
<g>
<title>java.lang.Integer (30 samples, 0.10%)</title><rect x="1171.1" y="739.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1174.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (88 samples, 0.29%)</title><rect x="1172.3" y="755.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1175.3" y="766.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (88 samples, 0.29%)</title><rect x="1172.3" y="739.0" width="3.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1175.3" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.03%)</title><rect x="1175.7" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1178.7" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.03%)</title><rect x="1175.7" y="739.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1178.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.03%)</title><rect x="1175.7" y="723.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1178.7" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.03%)</title><rect x="1175.7" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1178.7" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.03%)</title><rect x="1175.7" y="691.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1178.7" y="702.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.03%)</title><rect x="1175.7" y="675.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1178.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (40 samples, 0.13%)</title><rect x="1176.1" y="755.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1179.1" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (40 samples, 0.13%)</title><rect x="1176.1" y="739.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1179.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (40 samples, 0.13%)</title><rect x="1176.1" y="723.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1179.1" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (40 samples, 0.13%)</title><rect x="1176.1" y="707.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1179.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.fromInt (218 samples, 0.73%)</title><rect x="1177.7" y="755.0" width="8.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1180.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (218 samples, 0.73%)</title><rect x="1177.7" y="739.0" width="8.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1180.7" y="750.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (145 samples, 0.48%)</title><rect x="1177.7" y="723.0" width="5.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1180.7" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (73 samples, 0.24%)</title><rect x="1183.4" y="723.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1186.4" y="734.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.24%)</title><rect x="1183.4" y="707.0" width="2.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1186.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.fromLong (94 samples, 0.31%)</title><rect x="1186.3" y="755.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1189.3" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (94 samples, 0.31%)</title><rect x="1186.3" y="739.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1189.3" y="750.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (81 samples, 0.27%)</title><rect x="1186.3" y="723.0" width="3.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1189.3" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.04%)</title><rect x="1189.5" y="723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1192.5" y="734.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.04%)</title><rect x="1189.5" y="707.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1192.5" y="718.0"></text>
</g>
</g>
</svg>
