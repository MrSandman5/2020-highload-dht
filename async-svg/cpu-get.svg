<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="597"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="597"> </text>
<g id="frames">
<g>
<title>all (1,393 samples, 100.00%)</title><rect x="10.0" y="563.0" width="1180.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="574.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=18629] (8 samples, 0.57%)</title><rect x="10.0" y="547.0" width="6.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (8 samples, 0.57%)</title><rect x="10.0" y="531.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.29%)</title><rect x="10.0" y="515.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.22%)</title><rect x="10.8" y="499.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.8" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.07%)</title><rect x="10.8" y="483.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="13.8" y="494.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.07%)</title><rect x="11.7" y="483.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="14.7" y="494.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.07%)</title><rect x="12.5" y="483.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="15.5" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (4 samples, 0.29%)</title><rect x="13.4" y="515.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (4 samples, 0.29%)</title><rect x="13.4" y="499.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.4" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3 samples, 0.22%)</title><rect x="13.4" y="483.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="16.4" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 0.07%)</title><rect x="13.4" y="467.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.07%)</title><rect x="13.4" y="451.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.4" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (1 samples, 0.07%)</title><rect x="13.4" y="435.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="16.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (1 samples, 0.07%)</title><rect x="13.4" y="419.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="16.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (1 samples, 0.07%)</title><rect x="13.4" y="403.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.07%)</title><rect x="13.4" y="387.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="16.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.07%)</title><rect x="13.4" y="371.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.07%)</title><rect x="13.4" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.07%)</title><rect x="13.4" y="339.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="16.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.07%)</title><rect x="13.4" y="323.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="16.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.07%)</title><rect x="13.4" y="307.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.14%)</title><rect x="14.2" y="467.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.14%)</title><rect x="14.2" y="451.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="14.2" y="435.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="14.2" y="419.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.07%)</title><rect x="14.2" y="403.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="15.1" y="435.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.1" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.07%)</title><rect x="15.9" y="483.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.9" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.07%)</title><rect x="15.9" y="467.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.9" y="478.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=18630] (10 samples, 0.72%)</title><rect x="16.8" y="547.0" width="8.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="19.8" y="558.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (10 samples, 0.72%)</title><rect x="16.8" y="531.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.8" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.22%)</title><rect x="16.8" y="515.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.8" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.07%)</title><rect x="16.8" y="499.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.8" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.14%)</title><rect x="17.6" y="499.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="20.6" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.07%)</title><rect x="17.6" y="483.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="20.6" y="494.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.07%)</title><rect x="18.5" y="483.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="21.5" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (7 samples, 0.50%)</title><rect x="19.3" y="515.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.3" y="526.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="20.2" y="499.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="23.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5 samples, 0.36%)</title><rect x="21.0" y="499.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="24.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5 samples, 0.36%)</title><rect x="21.0" y="483.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.0" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4 samples, 0.29%)</title><rect x="21.0" y="467.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4 samples, 0.29%)</title><rect x="21.0" y="451.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.0" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (2 samples, 0.14%)</title><rect x="21.0" y="435.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (2 samples, 0.14%)</title><rect x="21.0" y="419.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (2 samples, 0.14%)</title><rect x="21.0" y="403.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.14%)</title><rect x="21.0" y="387.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.14%)</title><rect x="21.0" y="371.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.07%)</title><rect x="21.0" y="355.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="21.9" y="355.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="21.9" y="339.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="21.9" y="323.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="21.9" y="307.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="21.9" y="291.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.9" y="302.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.07%)</title><rect x="21.9" y="275.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="24.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.14%)</title><rect x="22.7" y="435.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="25.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.07%)</title><rect x="24.4" y="467.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="27.4" y="478.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.07%)</title><rect x="24.4" y="451.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.4" y="462.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.07%)</title><rect x="24.4" y="435.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.4" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=18631] (13 samples, 0.93%)</title><rect x="25.2" y="547.0" width="11.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="28.2" y="558.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (13 samples, 0.93%)</title><rect x="25.2" y="531.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="28.2" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 0.50%)</title><rect x="25.2" y="515.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.2" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (7 samples, 0.50%)</title><rect x="25.2" y="499.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.2" y="510.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.14%)</title><rect x="25.2" y="483.0" width="1.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="28.2" y="494.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.07%)</title><rect x="26.9" y="483.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="29.9" y="494.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.29%)</title><rect x="27.8" y="483.0" width="3.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="30.8" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (6 samples, 0.43%)</title><rect x="31.2" y="515.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5 samples, 0.36%)</title><rect x="31.2" y="499.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.14%)</title><rect x="31.2" y="483.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.2" y="494.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="31.2" y="467.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="34.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 0.07%)</title><rect x="32.0" y="467.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="35.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.07%)</title><rect x="32.0" y="451.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="35.0" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (1 samples, 0.07%)</title><rect x="32.0" y="435.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (1 samples, 0.07%)</title><rect x="32.0" y="419.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="35.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (1 samples, 0.07%)</title><rect x="32.0" y="403.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="35.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.07%)</title><rect x="32.0" y="387.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.07%)</title><rect x="32.0" y="371.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="35.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="32.0" y="355.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="32.0" y="339.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="32.0" y="323.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="35.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="32.0" y="307.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="32.0" y="291.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="35.0" y="302.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.07%)</title><rect x="32.0" y="275.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="35.0" y="286.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.07%)</title><rect x="32.0" y="259.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="35.0" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (3 samples, 0.22%)</title><rect x="32.9" y="483.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.9" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.22%)</title><rect x="32.9" y="467.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.9" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.14%)</title><rect x="32.9" y="451.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="35.9" y="462.0"></text>
</g>
<g>
<title>arrayOopDesc::base_offset_in_bytes(BasicType) (1 samples, 0.07%)</title><rect x="32.9" y="435.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="35.9" y="446.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.07%)</title><rect x="33.7" y="435.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="36.7" y="446.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.07%)</title><rect x="33.7" y="419.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="36.7" y="430.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.07%)</title><rect x="34.6" y="451.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="37.6" y="462.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.07%)</title><rect x="35.4" y="499.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="38.4" y="510.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.07%)</title><rect x="35.4" y="483.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="38.4" y="494.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=18632] (7 samples, 0.50%)</title><rect x="36.3" y="547.0" width="5.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="39.3" y="558.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (7 samples, 0.50%)</title><rect x="36.3" y="531.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.3" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.22%)</title><rect x="37.1" y="515.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="40.1" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.22%)</title><rect x="37.1" y="499.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.1" y="510.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.22%)</title><rect x="37.1" y="483.0" width="2.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="40.1" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3 samples, 0.22%)</title><rect x="39.6" y="515.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.6" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2 samples, 0.14%)</title><rect x="40.5" y="499.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.14%)</title><rect x="40.5" y="483.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="43.5" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2 samples, 0.14%)</title><rect x="40.5" y="467.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.5" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2 samples, 0.14%)</title><rect x="40.5" y="451.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="43.5" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (2 samples, 0.14%)</title><rect x="40.5" y="435.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="43.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (2 samples, 0.14%)</title><rect x="40.5" y="419.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (2 samples, 0.14%)</title><rect x="40.5" y="403.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.14%)</title><rect x="40.5" y="387.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.14%)</title><rect x="40.5" y="371.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="43.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="41.3" y="355.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="44.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="41.3" y="339.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="44.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="41.3" y="323.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="44.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="41.3" y="307.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="44.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="41.3" y="291.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="44.3" y="302.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="41.3" y="275.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="44.3" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=18633] (7 samples, 0.50%)</title><rect x="42.2" y="547.0" width="5.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="45.2" y="558.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (7 samples, 0.50%)</title><rect x="42.2" y="531.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="45.2" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 0.36%)</title><rect x="42.2" y="515.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="45.2" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 0.36%)</title><rect x="42.2" y="499.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="45.2" y="510.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.07%)</title><rect x="42.2" y="483.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="45.2" y="494.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.29%)</title><rect x="43.0" y="483.0" width="3.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="46.0" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2 samples, 0.14%)</title><rect x="46.4" y="515.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2 samples, 0.14%)</title><rect x="46.4" y="499.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.4" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.07%)</title><rect x="46.4" y="483.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.4" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 0.07%)</title><rect x="46.4" y="467.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.07%)</title><rect x="46.4" y="451.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.4" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (1 samples, 0.07%)</title><rect x="46.4" y="435.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="49.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.07%)</title><rect x="46.4" y="419.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.07%)</title><rect x="46.4" y="403.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="46.4" y="387.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.07%)</title><rect x="46.4" y="371.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.4" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.07%)</title><rect x="47.3" y="483.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.07%)</title><rect x="47.3" y="467.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="50.3" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.07%)</title><rect x="47.3" y="451.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="50.3" y="462.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.07%)</title><rect x="47.3" y="435.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="50.3" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=18634] (10 samples, 0.72%)</title><rect x="48.1" y="547.0" width="8.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="51.1" y="558.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (10 samples, 0.72%)</title><rect x="48.1" y="531.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="51.1" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.07%)</title><rect x="48.1" y="515.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.1" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.07%)</title><rect x="48.1" y="499.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.1" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 0.43%)</title><rect x="49.0" y="515.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="52.0" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 0.43%)</title><rect x="49.0" y="499.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.0" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.14%)</title><rect x="49.0" y="483.0" width="1.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="52.0" y="494.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.07%)</title><rect x="50.7" y="483.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="53.7" y="494.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.07%)</title><rect x="50.7" y="467.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="53.7" y="478.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.07%)</title><rect x="51.5" y="483.0" width="0.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="54.5" y="494.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.14%)</title><rect x="52.4" y="483.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="55.4" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3 samples, 0.22%)</title><rect x="54.0" y="515.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3 samples, 0.22%)</title><rect x="54.0" y="499.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.14%)</title><rect x="54.0" y="483.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="57.0" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2 samples, 0.14%)</title><rect x="54.0" y="467.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="57.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2 samples, 0.14%)</title><rect x="54.0" y="451.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.0" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (2 samples, 0.14%)</title><rect x="54.0" y="435.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (2 samples, 0.14%)</title><rect x="54.0" y="419.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (2 samples, 0.14%)</title><rect x="54.0" y="403.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.14%)</title><rect x="54.0" y="387.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.14%)</title><rect x="54.0" y="371.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="57.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.14%)</title><rect x="54.0" y="355.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="57.0" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.07%)</title><rect x="55.7" y="483.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.7" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.07%)</title><rect x="55.7" y="467.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.7" y="478.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.07%)</title><rect x="55.7" y="451.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="58.7" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=18635] (11 samples, 0.79%)</title><rect x="56.6" y="547.0" width="9.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="59.6" y="558.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (11 samples, 0.79%)</title><rect x="56.6" y="531.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="59.6" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.22%)</title><rect x="56.6" y="515.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="59.6" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.22%)</title><rect x="56.6" y="499.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="59.6" y="510.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.07%)</title><rect x="57.4" y="483.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="60.4" y="494.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.07%)</title><rect x="58.3" y="483.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="61.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (8 samples, 0.57%)</title><rect x="59.1" y="515.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8 samples, 0.57%)</title><rect x="59.1" y="499.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6 samples, 0.43%)</title><rect x="59.1" y="483.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.1" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4 samples, 0.29%)</title><rect x="59.1" y="467.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.1" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4 samples, 0.29%)</title><rect x="59.1" y="451.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.1" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (2 samples, 0.14%)</title><rect x="60.0" y="435.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (2 samples, 0.14%)</title><rect x="60.0" y="419.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (2 samples, 0.14%)</title><rect x="60.0" y="403.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.14%)</title><rect x="60.0" y="387.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.14%)</title><rect x="60.0" y="371.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="63.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.14%)</title><rect x="60.0" y="355.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="60.0" y="339.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="60.0" y="323.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="60.0" y="307.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="60.0" y="291.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.0" y="302.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="60.0" y="275.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="63.0" y="286.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="60.8" y="275.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="63.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.07%)</title><rect x="61.7" y="435.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.07%)</title><rect x="61.7" y="419.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.07%)</title><rect x="61.7" y="403.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="64.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="61.7" y="387.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="64.7" y="398.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.07%)</title><rect x="61.7" y="371.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="64.7" y="382.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.07%)</title><rect x="61.7" y="355.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="64.7" y="366.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.07%)</title><rect x="61.7" y="339.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="64.7" y="350.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="61.7" y="323.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="64.7" y="334.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="61.7" y="307.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="64.7" y="318.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="61.7" y="291.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="64.7" y="302.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.07%)</title><rect x="61.7" y="275.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="64.7" y="286.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.07%)</title><rect x="61.7" y="259.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="64.7" y="270.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.07%)</title><rect x="61.7" y="243.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="64.7" y="254.0"></text>
</g>
<g>
<title>G1MonitoringSupport::update_eden_size() (1 samples, 0.07%)</title><rect x="61.7" y="227.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="64.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.14%)</title><rect x="62.5" y="467.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.5" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.14%)</title><rect x="62.5" y="451.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.14%)</title><rect x="62.5" y="435.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="63.4" y="419.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="66.4" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.07%)</title><rect x="63.4" y="403.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.4" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.14%)</title><rect x="64.2" y="483.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.2" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.14%)</title><rect x="64.2" y="467.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.2" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.07%)</title><rect x="64.2" y="451.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="67.2" y="462.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.07%)</title><rect x="64.2" y="435.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="67.2" y="446.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.07%)</title><rect x="65.1" y="451.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="68.1" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=18636] (9 samples, 0.65%)</title><rect x="65.9" y="547.0" width="7.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="68.9" y="558.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9 samples, 0.65%)</title><rect x="65.9" y="531.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="68.9" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.07%)</title><rect x="65.9" y="515.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.9" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.07%)</title><rect x="65.9" y="499.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.9" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.07%)</title><rect x="65.9" y="483.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.9" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.22%)</title><rect x="66.8" y="515.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.8" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.22%)</title><rect x="66.8" y="499.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.8" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.07%)</title><rect x="67.6" y="483.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="70.6" y="494.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.07%)</title><rect x="68.4" y="483.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="71.4" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5 samples, 0.36%)</title><rect x="69.3" y="515.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.3" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5 samples, 0.36%)</title><rect x="69.3" y="499.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.07%)</title><rect x="69.3" y="483.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 0.07%)</title><rect x="69.3" y="467.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.3" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.07%)</title><rect x="69.3" y="451.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.3" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (1 samples, 0.07%)</title><rect x="69.3" y="435.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="72.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (1 samples, 0.07%)</title><rect x="69.3" y="419.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (1 samples, 0.07%)</title><rect x="69.3" y="403.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.07%)</title><rect x="69.3" y="387.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.07%)</title><rect x="69.3" y="371.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="72.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.07%)</title><rect x="69.3" y="355.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.3" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.29%)</title><rect x="70.1" y="483.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.1" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.29%)</title><rect x="70.1" y="467.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.1" y="478.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.14%)</title><rect x="71.0" y="451.0" width="1.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="74.0" y="462.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.07%)</title><rect x="71.0" y="435.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="74.0" y="446.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.07%)</title><rect x="71.8" y="435.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="74.8" y="446.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.07%)</title><rect x="71.8" y="419.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="74.8" y="430.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.07%)</title><rect x="72.7" y="451.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="75.7" y="462.0"></text>
</g>
<g>
<title>[pool-3-thread-1 tid=18655] (177 samples, 12.71%)</title><rect x="73.5" y="547.0" width="150.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="76.5" y="558.0">[pool-3-thread-1 ti..</text>
</g>
<g>
<title>java/lang/Thread.run (177 samples, 12.71%)</title><rect x="73.5" y="531.0" width="150.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.5" y="542.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (177 samples, 12.71%)</title><rect x="73.5" y="515.0" width="150.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.5" y="526.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (177 samples, 12.71%)</title><rect x="73.5" y="499.0" width="150.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.5" y="510.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.22%)</title><rect x="73.5" y="483.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.22%)</title><rect x="73.5" y="467.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.22%)</title><rect x="73.5" y="451.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="76.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.22%)</title><rect x="73.5" y="435.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.22%)</title><rect x="73.5" y="419.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.5" y="430.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.14%)</title><rect x="73.5" y="403.0" width="1.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="76.5" y="414.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.07%)</title><rect x="73.5" y="387.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="76.5" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="74.4" y="387.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="77.4" y="398.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="75.2" y="403.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="78.2" y="414.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.07%)</title><rect x="75.2" y="387.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="78.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.run (174 samples, 12.49%)</title><rect x="76.1" y="483.0" width="147.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="79.1" y="494.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (174 samples, 12.49%)</title><rect x="76.1" y="467.0" width="147.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.1" y="478.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (174 samples, 12.49%)</title><rect x="76.1" y="451.0" width="147.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.1" y="462.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (174 samples, 12.49%)</title><rect x="76.1" y="435.0" width="147.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.1" y="446.0">ru/mail/polis/dao/D..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (8 samples, 0.57%)</title><rect x="76.1" y="419.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="79.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (8 samples, 0.57%)</title><rect x="76.1" y="403.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="79.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (8 samples, 0.57%)</title><rect x="76.1" y="387.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (8 samples, 0.57%)</title><rect x="76.1" y="371.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (8 samples, 0.57%)</title><rect x="76.1" y="355.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.50%)</title><rect x="76.9" y="339.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.07%)</title><rect x="76.9" y="323.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="79.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.hasNext (1 samples, 0.07%)</title><rect x="76.9" y="307.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="79.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6 samples, 0.43%)</title><rect x="77.8" y="323.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.8" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6 samples, 0.43%)</title><rect x="77.8" y="307.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6 samples, 0.43%)</title><rect x="77.8" y="291.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.8" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6 samples, 0.43%)</title><rect x="77.8" y="275.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.43%)</title><rect x="77.8" y="259.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.43%)</title><rect x="77.8" y="243.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6 samples, 0.43%)</title><rect x="77.8" y="227.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (6 samples, 0.43%)</title><rect x="77.8" y="211.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (6 samples, 0.43%)</title><rect x="77.8" y="195.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (6 samples, 0.43%)</title><rect x="77.8" y="179.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3 samples, 0.22%)</title><rect x="77.8" y="163.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.22%)</title><rect x="77.8" y="147.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="80.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.22%)</title><rect x="77.8" y="131.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.22%)</title><rect x="77.8" y="115.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="80.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.14%)</title><rect x="77.8" y="99.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.8" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.14%)</title><rect x="77.8" y="83.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.8" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.14%)</title><rect x="77.8" y="67.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.8" y="78.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.14%)</title><rect x="77.8" y="51.0" width="1.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="80.8" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="79.5" y="99.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.5" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="79.5" y="83.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="82.5" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.22%)</title><rect x="80.3" y="163.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.22%)</title><rect x="80.3" y="147.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.14%)</title><rect x="80.3" y="131.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.3" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.07%)</title><rect x="80.3" y="115.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.3" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.07%)</title><rect x="80.3" y="99.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="81.2" y="115.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.2" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="81.2" y="99.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.2" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.07%)</title><rect x="81.2" y="83.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.2" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.07%)</title><rect x="82.0" y="131.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (1 samples, 0.07%)</title><rect x="82.8" y="419.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.8" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.07%)</title><rect x="82.8" y="403.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.8" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.07%)</title><rect x="82.8" y="387.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.8" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.07%)</title><rect x="82.8" y="371.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.8" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="82.8" y="355.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.8" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="82.8" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.8" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="82.8" y="323.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="82.8" y="307.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (165 samples, 11.84%)</title><rect x="83.7" y="419.0" width="139.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.7" y="430.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (165 samples, 11.84%)</title><rect x="83.7" y="403.0" width="139.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="86.7" y="414.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (162 samples, 11.63%)</title><rect x="84.5" y="387.0" width="137.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.5" y="398.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6 samples, 0.43%)</title><rect x="84.5" y="371.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6 samples, 0.43%)</title><rect x="84.5" y="355.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.5" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6 samples, 0.43%)</title><rect x="84.5" y="339.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6 samples, 0.43%)</title><rect x="84.5" y="323.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6 samples, 0.43%)</title><rect x="84.5" y="307.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6 samples, 0.43%)</title><rect x="84.5" y="291.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.43%)</title><rect x="84.5" y="275.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.43%)</title><rect x="84.5" y="259.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6 samples, 0.43%)</title><rect x="84.5" y="243.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (6 samples, 0.43%)</title><rect x="84.5" y="227.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (6 samples, 0.43%)</title><rect x="84.5" y="211.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (6 samples, 0.43%)</title><rect x="84.5" y="195.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3 samples, 0.22%)</title><rect x="84.5" y="179.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.5" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.07%)</title><rect x="84.5" y="163.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.14%)</title><rect x="85.4" y="163.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.14%)</title><rect x="85.4" y="147.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.14%)</title><rect x="85.4" y="131.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="88.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.14%)</title><rect x="85.4" y="115.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="88.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.14%)</title><rect x="85.4" y="99.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="88.4" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.14%)</title><rect x="85.4" y="83.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.4" y="94.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.14%)</title><rect x="85.4" y="67.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="88.4" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.22%)</title><rect x="87.1" y="179.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.1" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.22%)</title><rect x="87.1" y="163.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.22%)</title><rect x="87.1" y="147.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.22%)</title><rect x="87.1" y="131.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.22%)</title><rect x="87.1" y="115.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.22%)</title><rect x="87.1" y="99.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="90.1" y="110.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.22%)</title><rect x="87.1" y="83.0" width="2.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="90.1" y="94.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (151 samples, 10.84%)</title><rect x="89.6" y="371.0" width="127.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="92.6" y="382.0">java/util/Collec..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (151 samples, 10.84%)</title><rect x="89.6" y="355.0" width="127.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.6" y="366.0">java/lang/Iterab..</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.hasNext (1 samples, 0.07%)</title><rect x="89.6" y="339.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="92.6" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.14%)</title><rect x="90.5" y="339.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.5" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (2 samples, 0.14%)</title><rect x="90.5" y="323.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.5" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (2 samples, 0.14%)</title><rect x="90.5" y="307.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.5" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.&lt;init&gt; (1 samples, 0.07%)</title><rect x="90.5" y="291.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="93.5" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.&lt;init&gt; (1 samples, 0.07%)</title><rect x="90.5" y="275.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="93.5" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absHighest (1 samples, 0.07%)</title><rect x="91.3" y="291.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$83/1445426015.accept (148 samples, 10.62%)</title><rect x="92.2" y="339.0" width="125.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.2" y="350.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (148 samples, 10.62%)</title><rect x="92.2" y="323.0" width="125.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="95.2" y="334.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (148 samples, 10.62%)</title><rect x="92.2" y="307.0" width="125.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="95.2" y="318.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (148 samples, 10.62%)</title><rect x="92.2" y="291.0" width="125.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="95.2" y="302.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (148 samples, 10.62%)</title><rect x="92.2" y="275.0" width="125.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="95.2" y="286.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.29%)</title><rect x="92.2" y="259.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.2" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.29%)</title><rect x="92.2" y="243.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="95.2" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.14%)</title><rect x="93.9" y="227.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.9" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.14%)</title><rect x="93.9" y="211.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="96.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (144 samples, 10.34%)</title><rect x="95.6" y="259.0" width="121.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.6" y="270.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.14%)</title><rect x="95.6" y="243.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="98.6" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="95.6" y="227.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.6" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="96.4" y="211.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="99.4" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="96.4" y="195.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.4" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="96.4" y="179.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="99.4" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="96.4" y="163.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="99.4" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.07%)</title><rect x="96.4" y="147.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="99.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (1 samples, 0.07%)</title><rect x="97.3" y="243.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="100.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (1 samples, 0.07%)</title><rect x="97.3" y="227.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="100.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (1 samples, 0.07%)</title><rect x="97.3" y="211.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (51 samples, 3.66%)</title><rect x="98.1" y="243.0" width="43.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.1" y="254.0">ru/m..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.07%)</title><rect x="98.1" y="227.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="101.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (50 samples, 3.59%)</title><rect x="98.9" y="227.0" width="42.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.9" y="238.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (50 samples, 3.59%)</title><rect x="98.9" y="211.0" width="42.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.9" y="222.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.07%)</title><rect x="98.9" y="195.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.9" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.07%)</title><rect x="98.9" y="179.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="101.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.07%)</title><rect x="99.8" y="195.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.8" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.07%)</title><rect x="99.8" y="179.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="102.8" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.07%)</title><rect x="99.8" y="163.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.8" y="174.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.07%)</title><rect x="99.8" y="147.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.8" y="158.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.07%)</title><rect x="99.8" y="131.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (44 samples, 3.16%)</title><rect x="100.6" y="195.0" width="37.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="103.6" y="206.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (36 samples, 2.58%)</title><rect x="100.6" y="179.0" width="30.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="103.6" y="190.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (36 samples, 2.58%)</title><rect x="100.6" y="163.0" width="30.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.6" y="174.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (35 samples, 2.51%)</title><rect x="101.5" y="147.0" width="29.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.5" y="158.0">su..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.07%)</title><rect x="102.3" y="131.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="105.3" y="142.0"></text>
</g>
<g>
<title>__pread (30 samples, 2.15%)</title><rect x="103.2" y="131.0" width="25.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="106.2" y="142.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.07%)</title><rect x="128.6" y="131.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="131.6" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.14%)</title><rect x="129.4" y="131.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="132.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.50%)</title><rect x="131.1" y="179.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="134.1" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="133.7" y="163.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.7" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.07%)</title><rect x="133.7" y="147.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.22%)</title><rect x="134.5" y="163.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="137.5" y="174.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.07%)</title><rect x="136.2" y="147.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="139.2" y="158.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.07%)</title><rect x="136.2" y="131.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="139.2" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="136.2" y="115.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="139.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="137.1" y="179.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.1" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="137.1" y="163.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.1" y="174.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="137.1" y="147.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="140.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.29%)</title><rect x="137.9" y="195.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.9" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="140.5" y="179.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="143.5" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="140.5" y="163.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="143.5" y="174.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.07%)</title><rect x="140.5" y="147.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="143.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (90 samples, 6.46%)</title><rect x="141.3" y="243.0" width="76.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.3" y="254.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (90 samples, 6.46%)</title><rect x="141.3" y="227.0" width="76.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.3" y="238.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.29%)</title><rect x="141.3" y="211.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.3" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.29%)</title><rect x="141.3" y="195.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.3" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.07%)</title><rect x="143.8" y="179.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.8" y="190.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.07%)</title><rect x="143.8" y="163.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.8" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.07%)</title><rect x="143.8" y="147.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (77 samples, 5.53%)</title><rect x="144.7" y="211.0" width="65.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="147.7" y="222.0">sun/nio..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (9 samples, 0.65%)</title><rect x="144.7" y="195.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="147.7" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.36%)</title><rect x="147.2" y="179.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.2" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.07%)</title><rect x="148.1" y="163.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.22%)</title><rect x="148.9" y="163.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.22%)</title><rect x="148.9" y="147.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.22%)</title><rect x="148.9" y="131.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (1 samples, 0.07%)</title><rect x="149.8" y="115.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="152.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.07%)</title><rect x="150.6" y="115.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.6" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.07%)</title><rect x="151.5" y="179.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (61 samples, 4.38%)</title><rect x="152.3" y="195.0" width="51.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.3" y="206.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (61 samples, 4.38%)</title><rect x="152.3" y="179.0" width="51.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.3" y="190.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (61 samples, 4.38%)</title><rect x="152.3" y="163.0" width="51.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.3" y="174.0">sun/n..</text>
</g>
<g>
<title>__pread (55 samples, 3.95%)</title><rect x="153.2" y="147.0" width="46.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="156.2" y="158.0">__pr..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.14%)</title><rect x="199.7" y="147.0" width="1.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="202.7" y="158.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.22%)</title><rect x="201.4" y="147.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="204.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.29%)</title><rect x="204.0" y="195.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.0" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="205.7" y="179.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.7" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.07%)</title><rect x="205.7" y="163.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="208.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.07%)</title><rect x="206.5" y="179.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="209.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.22%)</title><rect x="207.4" y="195.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="210.4" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="209.1" y="179.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="212.1" y="190.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="209.1" y="163.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="212.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (7 samples, 0.50%)</title><rect x="209.9" y="211.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="212.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.22%)</title><rect x="213.3" y="195.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="216.3" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.14%)</title><rect x="215.8" y="211.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="218.8" y="222.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="216.7" y="195.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="219.7" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="216.7" y="179.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="219.7" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.07%)</title><rect x="216.7" y="163.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="219.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.36%)</title><rect x="217.5" y="371.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.36%)</title><rect x="217.5" y="355.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="220.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.36%)</title><rect x="217.5" y="339.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="220.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.36%)</title><rect x="217.5" y="323.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="220.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.36%)</title><rect x="217.5" y="307.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="220.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.36%)</title><rect x="217.5" y="291.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="220.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.36%)</title><rect x="217.5" y="275.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="220.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.29%)</title><rect x="218.4" y="259.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="221.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.29%)</title><rect x="218.4" y="243.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="221.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4 samples, 0.29%)</title><rect x="218.4" y="227.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="221.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (4 samples, 0.29%)</title><rect x="218.4" y="211.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (4 samples, 0.29%)</title><rect x="218.4" y="195.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="221.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (4 samples, 0.29%)</title><rect x="218.4" y="179.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="221.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.07%)</title><rect x="218.4" y="163.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="221.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.07%)</title><rect x="218.4" y="147.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.07%)</title><rect x="218.4" y="131.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="221.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.07%)</title><rect x="218.4" y="115.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="221.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.07%)</title><rect x="218.4" y="99.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="221.4" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.07%)</title><rect x="218.4" y="83.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="221.4" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="218.4" y="67.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="221.4" y="78.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.07%)</title><rect x="218.4" y="51.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="221.4" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.22%)</title><rect x="219.2" y="163.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="222.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.22%)</title><rect x="219.2" y="147.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.22%)</title><rect x="219.2" y="131.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.22%)</title><rect x="219.2" y="115.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.22%)</title><rect x="219.2" y="99.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="222.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.22%)</title><rect x="219.2" y="83.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="222.2" y="94.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.14%)</title><rect x="219.2" y="67.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="222.2" y="78.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.07%)</title><rect x="220.9" y="67.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="223.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (2 samples, 0.14%)</title><rect x="221.8" y="387.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="224.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (2 samples, 0.14%)</title><rect x="221.8" y="371.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="224.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (2 samples, 0.14%)</title><rect x="221.8" y="355.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="224.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (2 samples, 0.14%)</title><rect x="221.8" y="339.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="224.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (2 samples, 0.14%)</title><rect x="221.8" y="323.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="224.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (2 samples, 0.14%)</title><rect x="221.8" y="307.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="224.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (2 samples, 0.14%)</title><rect x="221.8" y="291.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="224.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.07%)</title><rect x="222.6" y="275.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="225.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="222.6" y="259.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="225.6" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="222.6" y="243.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="225.6" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.07%)</title><rect x="222.6" y="227.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="225.6" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.07%)</title><rect x="222.6" y="211.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="225.6" y="222.0"></text>
</g>
<g>
<title>[pool-3-thread-2 tid=18659] (167 samples, 11.99%)</title><rect x="223.5" y="547.0" width="141.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="226.5" y="558.0">[pool-3-thread-2 t..</text>
</g>
<g>
<title>java/lang/Thread.run (167 samples, 11.99%)</title><rect x="223.5" y="531.0" width="141.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="226.5" y="542.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (167 samples, 11.99%)</title><rect x="223.5" y="515.0" width="141.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="226.5" y="526.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (167 samples, 11.99%)</title><rect x="223.5" y="499.0" width="141.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="226.5" y="510.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.14%)</title><rect x="223.5" y="483.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="226.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.07%)</title><rect x="224.3" y="467.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.07%)</title><rect x="224.3" y="451.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="227.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="224.3" y="435.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="227.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="224.3" y="419.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="227.3" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="224.3" y="403.0" width="0.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="227.3" y="414.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.07%)</title><rect x="224.3" y="387.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="227.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.run (165 samples, 11.84%)</title><rect x="225.2" y="483.0" width="139.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="228.2" y="494.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (165 samples, 11.84%)</title><rect x="225.2" y="467.0" width="139.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="228.2" y="478.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (165 samples, 11.84%)</title><rect x="225.2" y="451.0" width="139.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="228.2" y="462.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.22%)</title><rect x="225.2" y="435.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="228.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.07%)</title><rect x="226.0" y="419.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.0" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="226.0" y="403.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="229.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="226.0" y="387.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.07%)</title><rect x="226.0" y="371.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="229.0" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.07%)</title><rect x="226.0" y="355.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="229.0" y="366.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.07%)</title><rect x="226.0" y="339.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="229.0" y="350.0"></text>
</g>
<g>
<title>arrayOopDesc::base_offset_in_bytes(BasicType) (1 samples, 0.07%)</title><rect x="226.0" y="323.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="229.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="226.9" y="419.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="229.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (162 samples, 11.63%)</title><rect x="227.7" y="435.0" width="137.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="230.7" y="446.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (7 samples, 0.50%)</title><rect x="227.7" y="419.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (7 samples, 0.50%)</title><rect x="227.7" y="403.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (7 samples, 0.50%)</title><rect x="227.7" y="387.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="230.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (7 samples, 0.50%)</title><rect x="227.7" y="371.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (7 samples, 0.50%)</title><rect x="227.7" y="355.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.50%)</title><rect x="227.7" y="339.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7 samples, 0.50%)</title><rect x="227.7" y="323.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7 samples, 0.50%)</title><rect x="227.7" y="307.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7 samples, 0.50%)</title><rect x="227.7" y="291.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="230.7" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7 samples, 0.50%)</title><rect x="227.7" y="275.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.50%)</title><rect x="227.7" y="259.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.50%)</title><rect x="227.7" y="243.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="230.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (7 samples, 0.50%)</title><rect x="227.7" y="227.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.50%)</title><rect x="227.7" y="211.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="230.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.50%)</title><rect x="227.7" y="195.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (7 samples, 0.50%)</title><rect x="227.7" y="179.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.07%)</title><rect x="227.7" y="163.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="230.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.07%)</title><rect x="227.7" y="147.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.07%)</title><rect x="227.7" y="131.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="230.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.07%)</title><rect x="227.7" y="115.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="230.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.07%)</title><rect x="227.7" y="99.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="230.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.07%)</title><rect x="227.7" y="83.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.7" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="227.7" y="67.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="230.7" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.43%)</title><rect x="228.5" y="163.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="231.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.43%)</title><rect x="228.5" y="147.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="231.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.07%)</title><rect x="228.5" y="131.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="231.5" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.07%)</title><rect x="228.5" y="115.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="231.5" y="126.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.07%)</title><rect x="228.5" y="99.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="231.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.36%)</title><rect x="229.4" y="131.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.4" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.07%)</title><rect x="229.4" y="115.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="232.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.22%)</title><rect x="230.2" y="115.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="233.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.22%)</title><rect x="230.2" y="99.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="233.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.22%)</title><rect x="230.2" y="83.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="233.2" y="94.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.14%)</title><rect x="230.2" y="67.0" width="1.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="233.2" y="78.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.07%)</title><rect x="231.9" y="67.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="234.9" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="232.8" y="115.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="235.8" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="232.8" y="99.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (155 samples, 11.13%)</title><rect x="233.6" y="419.0" width="131.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="236.6" y="430.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (155 samples, 11.13%)</title><rect x="233.6" y="403.0" width="131.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="236.6" y="414.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.07%)</title><rect x="233.6" y="387.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="236.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.07%)</title><rect x="233.6" y="371.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="236.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.07%)</title><rect x="233.6" y="355.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="236.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.07%)</title><rect x="233.6" y="339.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.07%)</title><rect x="233.6" y="323.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.07%)</title><rect x="233.6" y="307.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.07%)</title><rect x="233.6" y="291.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="236.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (154 samples, 11.06%)</title><rect x="234.5" y="387.0" width="130.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="237.5" y="398.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8 samples, 0.57%)</title><rect x="234.5" y="371.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="237.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8 samples, 0.57%)</title><rect x="234.5" y="355.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.5" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8 samples, 0.57%)</title><rect x="234.5" y="339.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8 samples, 0.57%)</title><rect x="234.5" y="323.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8 samples, 0.57%)</title><rect x="234.5" y="307.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="237.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8 samples, 0.57%)</title><rect x="234.5" y="291.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.57%)</title><rect x="234.5" y="275.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.57%)</title><rect x="234.5" y="259.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="237.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (7 samples, 0.50%)</title><rect x="234.5" y="243.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="237.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.50%)</title><rect x="234.5" y="227.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="237.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.50%)</title><rect x="234.5" y="211.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (7 samples, 0.50%)</title><rect x="234.5" y="195.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.07%)</title><rect x="234.5" y="179.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="237.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.07%)</title><rect x="234.5" y="163.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.07%)</title><rect x="234.5" y="147.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="237.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.07%)</title><rect x="234.5" y="131.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.5" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.07%)</title><rect x="234.5" y="115.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="237.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.43%)</title><rect x="235.3" y="179.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.43%)</title><rect x="235.3" y="163.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="238.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.29%)</title><rect x="235.3" y="147.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="238.3" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.14%)</title><rect x="235.3" y="131.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="238.3" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.07%)</title><rect x="236.2" y="115.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="239.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.14%)</title><rect x="237.0" y="131.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="240.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.14%)</title><rect x="237.0" y="115.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="240.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.14%)</title><rect x="237.0" y="99.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.0" y="110.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.07%)</title><rect x="237.9" y="83.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="240.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.14%)</title><rect x="238.7" y="147.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="241.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.07%)</title><rect x="240.4" y="243.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="243.4" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.07%)</title><rect x="240.4" y="227.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="243.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.07%)</title><rect x="240.4" y="211.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="243.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.07%)</title><rect x="240.4" y="195.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="243.4" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="240.4" y="179.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.4" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.07%)</title><rect x="240.4" y="163.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="243.4" y="174.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (144 samples, 10.34%)</title><rect x="241.3" y="371.0" width="121.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="244.3" y="382.0">java/util/Colle..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (144 samples, 10.34%)</title><rect x="241.3" y="355.0" width="121.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="244.3" y="366.0">java/lang/Itera..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.07%)</title><rect x="241.3" y="339.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="244.3" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.07%)</title><rect x="241.3" y="323.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="244.3" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (1 samples, 0.07%)</title><rect x="241.3" y="307.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="244.3" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.&lt;init&gt; (1 samples, 0.07%)</title><rect x="241.3" y="291.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="244.3" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.&lt;init&gt; (1 samples, 0.07%)</title><rect x="241.3" y="275.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="244.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$83/1445426015.accept (143 samples, 10.27%)</title><rect x="242.1" y="339.0" width="121.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.1" y="350.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (143 samples, 10.27%)</title><rect x="242.1" y="323.0" width="121.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="245.1" y="334.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (143 samples, 10.27%)</title><rect x="242.1" y="307.0" width="121.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="245.1" y="318.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (143 samples, 10.27%)</title><rect x="242.1" y="291.0" width="121.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="245.1" y="302.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (143 samples, 10.27%)</title><rect x="242.1" y="275.0" width="121.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="245.1" y="286.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="242.1" y="259.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="245.1" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.07%)</title><rect x="242.1" y="243.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="245.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.07%)</title><rect x="242.1" y="227.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="245.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (142 samples, 10.19%)</title><rect x="243.0" y="259.0" width="120.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="246.0" y="270.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.22%)</title><rect x="243.0" y="243.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="243.8" y="227.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="243.8" y="211.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="246.8" y="222.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.07%)</title><rect x="244.6" y="195.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="247.6" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (1 samples, 0.07%)</title><rect x="245.5" y="243.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="248.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (1 samples, 0.07%)</title><rect x="245.5" y="227.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="248.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (1 samples, 0.07%)</title><rect x="245.5" y="211.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="248.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (54 samples, 3.88%)</title><rect x="246.3" y="243.0" width="45.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="249.3" y="254.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.07%)</title><rect x="246.3" y="227.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="249.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="246.3" y="211.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="249.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="246.3" y="195.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="249.3" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="246.3" y="179.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="249.3" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="246.3" y="163.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="249.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="246.3" y="147.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="249.3" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.07%)</title><rect x="246.3" y="131.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.3" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.07%)</title><rect x="247.2" y="227.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.2" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="247.2" y="211.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="250.2" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="247.2" y="195.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="250.2" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="247.2" y="179.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.2" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.07%)</title><rect x="247.2" y="163.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="250.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.07%)</title><rect x="247.2" y="147.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="250.2" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.07%)</title><rect x="247.2" y="131.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="250.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (52 samples, 3.73%)</title><rect x="248.0" y="227.0" width="44.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="251.0" y="238.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (52 samples, 3.73%)</title><rect x="248.0" y="211.0" width="44.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="251.0" y="222.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (49 samples, 3.52%)</title><rect x="248.0" y="195.0" width="41.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="251.0" y="206.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (42 samples, 3.02%)</title><rect x="248.9" y="179.0" width="35.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="251.9" y="190.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (42 samples, 3.02%)</title><rect x="248.9" y="163.0" width="35.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="251.9" y="174.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (42 samples, 3.02%)</title><rect x="248.9" y="147.0" width="35.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="251.9" y="158.0">sun..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.14%)</title><rect x="252.3" y="131.0" width="1.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="255.3" y="142.0"></text>
</g>
<g>
<title>__pread (31 samples, 2.23%)</title><rect x="254.0" y="131.0" width="26.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="257.0" y="142.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.22%)</title><rect x="280.2" y="131.0" width="2.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="283.2" y="142.0"></text>
</g>
<g>
<title>convertReturnVal (2 samples, 0.14%)</title><rect x="282.8" y="131.0" width="1.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="285.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.36%)</title><rect x="284.5" y="179.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="287.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.29%)</title><rect x="285.3" y="163.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="288.3" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.capacity (2 samples, 0.14%)</title><rect x="287.0" y="147.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="290.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="287.8" y="131.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="288.7" y="179.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="291.7" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="288.7" y="163.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="291.7" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.07%)</title><rect x="288.7" y="147.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="291.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.22%)</title><rect x="289.5" y="195.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="292.5" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="290.4" y="179.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="293.4" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="290.4" y="163.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="293.4" y="174.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.07%)</title><rect x="290.4" y="147.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="293.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.07%)</title><rect x="291.2" y="179.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="294.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (84 samples, 6.03%)</title><rect x="292.1" y="243.0" width="71.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="295.1" y="254.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (84 samples, 6.03%)</title><rect x="292.1" y="227.0" width="71.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.1" y="238.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (7 samples, 0.50%)</title><rect x="292.1" y="211.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="295.1" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (7 samples, 0.50%)</title><rect x="292.1" y="195.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.1" y="206.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.14%)</title><rect x="293.8" y="179.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="296.8" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.22%)</title><rect x="295.5" y="179.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="298.5" y="190.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.07%)</title><rect x="297.2" y="163.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="300.2" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.07%)</title><rect x="297.2" y="147.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="300.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (67 samples, 4.81%)</title><rect x="298.0" y="211.0" width="56.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="301.0" y="222.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (10 samples, 0.72%)</title><rect x="298.0" y="195.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="301.0" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (6 samples, 0.43%)</title><rect x="301.4" y="179.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="304.4" y="190.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (1 samples, 0.07%)</title><rect x="302.2" y="163.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="305.2" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.07%)</title><rect x="303.1" y="163.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="306.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.22%)</title><rect x="303.9" y="163.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.22%)</title><rect x="303.9" y="147.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="306.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.22%)</title><rect x="303.9" y="131.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.9" y="142.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.07%)</title><rect x="306.5" y="195.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="309.5" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.07%)</title><rect x="306.5" y="179.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="309.5" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (1 samples, 0.07%)</title><rect x="306.5" y="163.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="309.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (53 samples, 3.80%)</title><rect x="307.3" y="195.0" width="44.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="310.3" y="206.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (52 samples, 3.73%)</title><rect x="308.2" y="179.0" width="44.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="311.2" y="190.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (52 samples, 3.73%)</title><rect x="308.2" y="163.0" width="44.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="311.2" y="174.0">sun/..</text>
</g>
<g>
<title>__pread (47 samples, 3.37%)</title><rect x="310.7" y="147.0" width="39.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="313.7" y="158.0">__p..</text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.07%)</title><rect x="350.5" y="147.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="353.5" y="158.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.07%)</title><rect x="351.4" y="147.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="354.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.14%)</title><rect x="352.2" y="195.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="355.2" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="353.1" y="179.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="356.1" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.07%)</title><rect x="353.1" y="163.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="356.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="353.9" y="195.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="356.9" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="353.9" y="179.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="356.9" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.07%)</title><rect x="353.9" y="163.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="356.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (9 samples, 0.65%)</title><rect x="354.8" y="211.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.8" y="222.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="360.7" y="195.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="363.7" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="360.7" y="179.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="363.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.07%)</title><rect x="361.5" y="195.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.5" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.07%)</title><rect x="362.4" y="211.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="365.4" y="222.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="362.4" y="195.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="365.4" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="362.4" y="179.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="365.4" y="190.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.07%)</title><rect x="362.4" y="163.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="365.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.14%)</title><rect x="363.2" y="371.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="366.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.14%)</title><rect x="363.2" y="355.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="366.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.14%)</title><rect x="363.2" y="339.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="366.2" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2 samples, 0.14%)</title><rect x="363.2" y="323.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="366.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2 samples, 0.14%)</title><rect x="363.2" y="307.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="366.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2 samples, 0.14%)</title><rect x="363.2" y="291.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="366.2" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2 samples, 0.14%)</title><rect x="363.2" y="275.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="366.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.14%)</title><rect x="363.2" y="259.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="366.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.14%)</title><rect x="363.2" y="243.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="366.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2 samples, 0.14%)</title><rect x="363.2" y="227.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="366.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (2 samples, 0.14%)</title><rect x="363.2" y="211.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="366.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (2 samples, 0.14%)</title><rect x="363.2" y="195.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (2 samples, 0.14%)</title><rect x="363.2" y="179.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="366.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.07%)</title><rect x="363.2" y="163.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="366.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.07%)</title><rect x="363.2" y="147.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="366.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.07%)</title><rect x="363.2" y="131.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="366.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.07%)</title><rect x="363.2" y="115.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="366.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.07%)</title><rect x="363.2" y="99.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="366.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.07%)</title><rect x="363.2" y="83.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="366.2" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="363.2" y="67.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.2" y="78.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.07%)</title><rect x="363.2" y="51.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="366.2" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.07%)</title><rect x="364.1" y="163.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.07%)</title><rect x="364.1" y="147.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="367.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.07%)</title><rect x="364.1" y="131.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="367.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.07%)</title><rect x="364.1" y="115.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="367.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.07%)</title><rect x="364.1" y="99.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="367.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="364.1" y="83.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="367.1" y="94.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.07%)</title><rect x="364.1" y="67.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="367.1" y="78.0"></text>
</g>
<g>
<title>[pool-3-thread-3 tid=18653] (166 samples, 11.92%)</title><rect x="364.9" y="547.0" width="140.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="367.9" y="558.0">[pool-3-thread-3 t..</text>
</g>
<g>
<title>java/lang/Thread.run (166 samples, 11.92%)</title><rect x="364.9" y="531.0" width="140.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="367.9" y="542.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (166 samples, 11.92%)</title><rect x="364.9" y="515.0" width="140.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="367.9" y="526.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (166 samples, 11.92%)</title><rect x="364.9" y="499.0" width="140.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="367.9" y="510.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.43%)</title><rect x="364.9" y="483.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="367.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.43%)</title><rect x="364.9" y="467.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="367.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.43%)</title><rect x="364.9" y="451.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.43%)</title><rect x="364.9" y="435.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="367.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.43%)</title><rect x="364.9" y="419.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="367.9" y="430.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.14%)</title><rect x="365.8" y="403.0" width="1.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="368.8" y="414.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="365.8" y="387.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="368.8" y="398.0"></text>
</g>
<g>
<title>pthread_mutex_trylock@plt (1 samples, 0.07%)</title><rect x="366.6" y="387.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="369.6" y="398.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="367.5" y="403.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="370.5" y="414.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.07%)</title><rect x="367.5" y="387.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="370.5" y="398.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.14%)</title><rect x="368.3" y="403.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="371.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.run (160 samples, 11.49%)</title><rect x="370.0" y="483.0" width="135.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="373.0" y="494.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (160 samples, 11.49%)</title><rect x="370.0" y="467.0" width="135.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="373.0" y="478.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (160 samples, 11.49%)</title><rect x="370.0" y="451.0" width="135.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="373.0" y="462.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.22%)</title><rect x="370.0" y="435.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="373.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.14%)</title><rect x="370.0" y="419.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="373.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.07%)</title><rect x="370.0" y="403.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="373.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="370.9" y="403.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="373.9" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="370.9" y="387.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="373.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.07%)</title><rect x="370.9" y="371.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="373.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.07%)</title><rect x="370.9" y="355.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="373.9" y="366.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.07%)</title><rect x="370.9" y="339.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="373.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="371.7" y="419.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (157 samples, 11.27%)</title><rect x="372.6" y="435.0" width="132.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="375.6" y="446.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (5 samples, 0.36%)</title><rect x="372.6" y="419.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="375.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (5 samples, 0.36%)</title><rect x="372.6" y="403.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="375.6" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (5 samples, 0.36%)</title><rect x="372.6" y="387.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (5 samples, 0.36%)</title><rect x="372.6" y="371.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="375.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.36%)</title><rect x="372.6" y="355.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="375.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.36%)</title><rect x="372.6" y="339.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="375.6" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.36%)</title><rect x="372.6" y="323.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="375.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.36%)</title><rect x="372.6" y="307.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="375.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.36%)</title><rect x="372.6" y="291.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.6" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.36%)</title><rect x="372.6" y="275.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="375.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.36%)</title><rect x="372.6" y="259.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.36%)</title><rect x="372.6" y="243.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="375.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5 samples, 0.36%)</title><rect x="372.6" y="227.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="375.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.36%)</title><rect x="372.6" y="211.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.36%)</title><rect x="372.6" y="195.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="375.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (5 samples, 0.36%)</title><rect x="372.6" y="179.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="375.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.36%)</title><rect x="372.6" y="163.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="375.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.36%)</title><rect x="372.6" y="147.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.36%)</title><rect x="372.6" y="131.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.6" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.22%)</title><rect x="372.6" y="115.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.6" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.14%)</title><rect x="373.4" y="99.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="376.4" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.14%)</title><rect x="373.4" y="83.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="376.4" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.14%)</title><rect x="373.4" y="67.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="376.4" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.07%)</title><rect x="374.2" y="51.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="377.2" y="62.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (1 samples, 0.07%)</title><rect x="374.2" y="35.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="377.2" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.14%)</title><rect x="375.1" y="115.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="378.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.14%)</title><rect x="375.1" y="99.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="378.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.14%)</title><rect x="375.1" y="83.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="378.1" y="94.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.14%)</title><rect x="375.1" y="67.0" width="1.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="378.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (152 samples, 10.91%)</title><rect x="376.8" y="419.0" width="128.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="379.8" y="430.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (152 samples, 10.91%)</title><rect x="376.8" y="403.0" width="128.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="379.8" y="414.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (148 samples, 10.62%)</title><rect x="376.8" y="387.0" width="125.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="379.8" y="398.0">ru/mail/polis/d..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (11 samples, 0.79%)</title><rect x="376.8" y="371.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="379.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (11 samples, 0.79%)</title><rect x="376.8" y="355.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="379.8" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (11 samples, 0.79%)</title><rect x="376.8" y="339.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="379.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (11 samples, 0.79%)</title><rect x="376.8" y="323.0" width="9.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="379.8" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (11 samples, 0.79%)</title><rect x="376.8" y="307.0" width="9.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="379.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (11 samples, 0.79%)</title><rect x="376.8" y="291.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="379.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.79%)</title><rect x="376.8" y="275.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="379.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.79%)</title><rect x="376.8" y="259.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="379.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (11 samples, 0.79%)</title><rect x="376.8" y="243.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="379.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.79%)</title><rect x="376.8" y="227.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.79%)</title><rect x="376.8" y="211.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="379.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (11 samples, 0.79%)</title><rect x="376.8" y="195.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="379.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (7 samples, 0.50%)</title><rect x="376.8" y="179.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="379.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.50%)</title><rect x="376.8" y="163.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="379.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.50%)</title><rect x="376.8" y="147.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.50%)</title><rect x="376.8" y="131.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="379.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.50%)</title><rect x="376.8" y="115.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="379.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.50%)</title><rect x="376.8" y="99.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.8" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.50%)</title><rect x="376.8" y="83.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="379.8" y="94.0"></text>
</g>
<g>
<title>__pread (7 samples, 0.50%)</title><rect x="376.8" y="67.0" width="5.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="379.8" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.29%)</title><rect x="382.7" y="179.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="385.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.29%)</title><rect x="382.7" y="163.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="385.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.22%)</title><rect x="382.7" y="147.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="385.7" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.07%)</title><rect x="382.7" y="131.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="385.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.07%)</title><rect x="383.6" y="131.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.07%)</title><rect x="383.6" y="115.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="386.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="383.6" y="99.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="386.6" y="110.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.07%)</title><rect x="383.6" y="83.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="386.6" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="384.4" y="131.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="387.4" y="142.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="384.4" y="115.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="387.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.07%)</title><rect x="385.3" y="147.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="388.3" y="158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (130 samples, 9.33%)</title><rect x="386.1" y="371.0" width="110.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="389.1" y="382.0">java/util/Col..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (130 samples, 9.33%)</title><rect x="386.1" y="355.0" width="110.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.1" y="366.0">java/lang/Ite..</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (1 samples, 0.07%)</title><rect x="386.1" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="389.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$83/1445426015.accept (129 samples, 9.26%)</title><rect x="387.0" y="339.0" width="109.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="390.0" y="350.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (129 samples, 9.26%)</title><rect x="387.0" y="323.0" width="109.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.0" y="334.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (129 samples, 9.26%)</title><rect x="387.0" y="307.0" width="109.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.0" y="318.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (129 samples, 9.26%)</title><rect x="387.0" y="291.0" width="109.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="390.0" y="302.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (129 samples, 9.26%)</title><rect x="387.0" y="275.0" width="109.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.0" y="286.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.29%)</title><rect x="387.0" y="259.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.0" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.29%)</title><rect x="387.0" y="243.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.29%)</title><rect x="387.0" y="227.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.0" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.14%)</title><rect x="387.8" y="211.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.8" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.07%)</title><rect x="389.5" y="211.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="392.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (125 samples, 8.97%)</title><rect x="390.3" y="259.0" width="105.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="393.3" y="270.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (46 samples, 3.30%)</title><rect x="390.3" y="243.0" width="39.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="393.3" y="254.0">ru/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.22%)</title><rect x="390.3" y="227.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="393.3" y="238.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.07%)</title><rect x="391.2" y="211.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="394.2" y="222.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.07%)</title><rect x="392.0" y="211.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="395.0" y="222.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.07%)</title><rect x="392.0" y="195.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="395.0" y="206.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.07%)</title><rect x="392.0" y="179.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="395.0" y="190.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="392.0" y="163.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="395.0" y="174.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="392.0" y="147.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="395.0" y="158.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.07%)</title><rect x="392.0" y="131.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="395.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (43 samples, 3.09%)</title><rect x="392.9" y="227.0" width="36.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="395.9" y="238.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (43 samples, 3.09%)</title><rect x="392.9" y="211.0" width="36.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="395.9" y="222.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (37 samples, 2.66%)</title><rect x="395.4" y="195.0" width="31.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="398.4" y="206.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (33 samples, 2.37%)</title><rect x="395.4" y="179.0" width="28.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="398.4" y="190.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (33 samples, 2.37%)</title><rect x="395.4" y="163.0" width="28.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="398.4" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (33 samples, 2.37%)</title><rect x="395.4" y="147.0" width="28.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="398.4" y="158.0">s..</text>
</g>
<g>
<title>__pread (32 samples, 2.30%)</title><rect x="396.3" y="131.0" width="27.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="399.3" y="142.0">_..</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.29%)</title><rect x="423.4" y="179.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="426.4" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="423.4" y="163.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="426.4" y="174.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="423.4" y="147.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="426.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.22%)</title><rect x="424.2" y="163.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="427.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.22%)</title><rect x="426.8" y="195.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="429.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (79 samples, 5.67%)</title><rect x="429.3" y="243.0" width="66.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="432.3" y="254.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (79 samples, 5.67%)</title><rect x="429.3" y="227.0" width="66.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="432.3" y="238.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (8 samples, 0.57%)</title><rect x="430.2" y="211.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="433.2" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (8 samples, 0.57%)</title><rect x="430.2" y="195.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="433.2" y="206.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.07%)</title><rect x="434.4" y="179.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="437.4" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.14%)</title><rect x="435.2" y="179.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="438.2" y="190.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.14%)</title><rect x="435.2" y="163.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="438.2" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.14%)</title><rect x="435.2" y="147.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="438.2" y="158.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="436.1" y="131.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="439.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (60 samples, 4.31%)</title><rect x="436.9" y="211.0" width="50.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.9" y="222.0">sun/n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.50%)</title><rect x="437.8" y="195.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="440.8" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.14%)</title><rect x="441.2" y="179.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.14%)</title><rect x="441.2" y="163.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="444.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.14%)</title><rect x="441.2" y="147.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="444.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.14%)</title><rect x="441.2" y="131.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="444.2" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.07%)</title><rect x="442.9" y="179.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="445.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (51 samples, 3.66%)</title><rect x="443.7" y="195.0" width="43.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="446.7" y="206.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (51 samples, 3.66%)</title><rect x="443.7" y="179.0" width="43.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="446.7" y="190.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (51 samples, 3.66%)</title><rect x="443.7" y="163.0" width="43.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="446.7" y="174.0">sun/..</text>
</g>
<g>
<title>__pread (46 samples, 3.30%)</title><rect x="446.3" y="147.0" width="38.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="449.3" y="158.0">__p..</text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.07%)</title><rect x="485.2" y="147.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="488.2" y="158.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.07%)</title><rect x="486.1" y="147.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="489.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="486.9" y="195.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="489.9" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="486.9" y="179.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="489.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (8 samples, 0.57%)</title><rect x="487.8" y="211.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.14%)</title><rect x="492.8" y="195.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="495.8" y="206.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.07%)</title><rect x="493.7" y="179.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="496.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.14%)</title><rect x="494.5" y="211.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="497.5" y="222.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="494.5" y="195.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="497.5" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="494.5" y="179.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="497.5" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.07%)</title><rect x="494.5" y="163.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="497.5" y="174.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.07%)</title><rect x="494.5" y="147.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="497.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="495.4" y="195.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="498.4" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="495.4" y="179.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="498.4" y="190.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.07%)</title><rect x="495.4" y="163.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="498.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (7 samples, 0.50%)</title><rect x="496.2" y="371.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (7 samples, 0.50%)</title><rect x="496.2" y="355.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="499.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.50%)</title><rect x="496.2" y="339.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="499.2" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7 samples, 0.50%)</title><rect x="496.2" y="323.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="499.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7 samples, 0.50%)</title><rect x="496.2" y="307.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="499.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7 samples, 0.50%)</title><rect x="496.2" y="291.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.2" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7 samples, 0.50%)</title><rect x="496.2" y="275.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.50%)</title><rect x="496.2" y="259.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="499.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.50%)</title><rect x="496.2" y="243.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="499.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6 samples, 0.43%)</title><rect x="496.2" y="227.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="499.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (6 samples, 0.43%)</title><rect x="496.2" y="211.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="499.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (6 samples, 0.43%)</title><rect x="496.2" y="195.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="499.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (6 samples, 0.43%)</title><rect x="496.2" y="179.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="499.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3 samples, 0.22%)</title><rect x="496.2" y="163.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="499.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.22%)</title><rect x="496.2" y="147.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="499.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.22%)</title><rect x="496.2" y="131.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="499.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.14%)</title><rect x="496.2" y="115.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="499.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.07%)</title><rect x="496.2" y="99.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="499.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.07%)</title><rect x="496.2" y="83.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="499.2" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="496.2" y="67.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="499.2" y="78.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.07%)</title><rect x="496.2" y="51.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="499.2" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="497.1" y="99.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="500.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.07%)</title><rect x="497.1" y="83.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="500.1" y="94.0"></text>
</g>
<g>
<title>java/nio/Buffer.capacity (1 samples, 0.07%)</title><rect x="497.1" y="67.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="500.1" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="497.1" y="51.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="500.1" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.07%)</title><rect x="497.9" y="115.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="500.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.22%)</title><rect x="498.8" y="163.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.22%)</title><rect x="498.8" y="147.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.22%)</title><rect x="498.8" y="131.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="501.8" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.07%)</title><rect x="498.8" y="115.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="501.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.14%)</title><rect x="499.6" y="115.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="502.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.14%)</title><rect x="499.6" y="99.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="502.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.14%)</title><rect x="499.6" y="83.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="502.6" y="94.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.07%)</title><rect x="500.5" y="67.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="503.5" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.07%)</title><rect x="501.3" y="227.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="504.3" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.07%)</title><rect x="501.3" y="211.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="504.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.07%)</title><rect x="501.3" y="195.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.07%)</title><rect x="501.3" y="179.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.07%)</title><rect x="501.3" y="163.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="504.3" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.07%)</title><rect x="501.3" y="147.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="504.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (4 samples, 0.29%)</title><rect x="502.2" y="387.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="505.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (3 samples, 0.22%)</title><rect x="502.2" y="371.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="505.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (3 samples, 0.22%)</title><rect x="502.2" y="355.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (3 samples, 0.22%)</title><rect x="502.2" y="339.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="505.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (3 samples, 0.22%)</title><rect x="502.2" y="323.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="505.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (3 samples, 0.22%)</title><rect x="502.2" y="307.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="505.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.22%)</title><rect x="502.2" y="291.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="505.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.07%)</title><rect x="503.9" y="275.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="506.9" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="503.9" y="259.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="506.9" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="503.9" y="243.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="506.9" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.07%)</title><rect x="503.9" y="227.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="506.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.07%)</title><rect x="504.7" y="371.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="507.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.07%)</title><rect x="504.7" y="355.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="507.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.07%)</title><rect x="504.7" y="339.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="507.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (1 samples, 0.07%)</title><rect x="504.7" y="323.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="507.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.07%)</title><rect x="504.7" y="307.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="507.7" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-4 tid=18654] (161 samples, 11.56%)</title><rect x="505.5" y="547.0" width="136.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="508.5" y="558.0">[pool-3-thread-4 ..</text>
</g>
<g>
<title>java/lang/Thread.run (161 samples, 11.56%)</title><rect x="505.5" y="531.0" width="136.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="508.5" y="542.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (161 samples, 11.56%)</title><rect x="505.5" y="515.0" width="136.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="508.5" y="526.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (161 samples, 11.56%)</title><rect x="505.5" y="499.0" width="136.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.5" y="510.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.43%)</title><rect x="505.5" y="483.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.43%)</title><rect x="505.5" y="467.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.43%)</title><rect x="505.5" y="451.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="508.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.07%)</title><rect x="505.5" y="435.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="508.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.07%)</title><rect x="506.4" y="435.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (1 samples, 0.07%)</title><rect x="506.4" y="419.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="509.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.29%)</title><rect x="507.2" y="435.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="510.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.29%)</title><rect x="507.2" y="419.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="510.2" y="430.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.22%)</title><rect x="507.2" y="403.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="510.2" y="414.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.07%)</title><rect x="507.2" y="387.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="510.2" y="398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.14%)</title><rect x="508.1" y="387.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="511.1" y="398.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="508.9" y="371.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="511.9" y="382.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="509.8" y="403.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="512.8" y="414.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.07%)</title><rect x="509.8" y="387.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="512.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.run (155 samples, 11.13%)</title><rect x="510.6" y="483.0" width="131.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.6" y="494.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (155 samples, 11.13%)</title><rect x="510.6" y="467.0" width="131.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="513.6" y="478.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (155 samples, 11.13%)</title><rect x="510.6" y="451.0" width="131.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="513.6" y="462.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.07%)</title><rect x="510.6" y="435.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="513.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.07%)</title><rect x="510.6" y="419.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="513.6" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="510.6" y="403.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="510.6" y="387.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="513.6" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.07%)</title><rect x="510.6" y="371.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="513.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.07%)</title><rect x="510.6" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="513.6" y="366.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.07%)</title><rect x="510.6" y="339.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="513.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (154 samples, 11.06%)</title><rect x="511.5" y="435.0" width="130.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="514.5" y="446.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (4 samples, 0.29%)</title><rect x="512.3" y="419.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (4 samples, 0.29%)</title><rect x="512.3" y="403.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (4 samples, 0.29%)</title><rect x="512.3" y="387.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="515.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (4 samples, 0.29%)</title><rect x="512.3" y="371.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="515.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.29%)</title><rect x="512.3" y="355.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.29%)</title><rect x="512.3" y="339.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.29%)</title><rect x="512.3" y="323.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.29%)</title><rect x="512.3" y="307.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="515.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.29%)</title><rect x="512.3" y="291.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="515.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.29%)</title><rect x="512.3" y="275.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.29%)</title><rect x="512.3" y="259.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.29%)</title><rect x="512.3" y="243.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="515.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4 samples, 0.29%)</title><rect x="512.3" y="227.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="515.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (4 samples, 0.29%)</title><rect x="512.3" y="211.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="515.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (4 samples, 0.29%)</title><rect x="512.3" y="195.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (4 samples, 0.29%)</title><rect x="512.3" y="179.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.29%)</title><rect x="512.3" y="163.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.29%)</title><rect x="512.3" y="147.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="515.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.29%)</title><rect x="512.3" y="131.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="515.3" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.07%)</title><rect x="512.3" y="115.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="515.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.14%)</title><rect x="513.2" y="115.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="516.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.14%)</title><rect x="513.2" y="99.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="516.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.14%)</title><rect x="513.2" y="83.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="516.2" y="94.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.07%)</title><rect x="513.2" y="67.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="516.2" y="78.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.07%)</title><rect x="514.0" y="67.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="517.0" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="514.9" y="115.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="517.9" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="514.9" y="99.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="517.9" y="110.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="514.9" y="83.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="517.9" y="94.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.07%)</title><rect x="515.7" y="419.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="518.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (1 samples, 0.07%)</title><rect x="515.7" y="403.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="518.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$97/1524262454.apply (1 samples, 0.07%)</title><rect x="515.7" y="387.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (1 samples, 0.07%)</title><rect x="515.7" y="371.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="518.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.07%)</title><rect x="515.7" y="355.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="518.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.07%)</title><rect x="515.7" y="339.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="518.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.07%)</title><rect x="515.7" y="323.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.7" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="515.7" y="307.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.7" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="515.7" y="291.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.7" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="515.7" y="275.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.7" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="515.7" y="259.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.7" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="515.7" y="243.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.7" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.07%)</title><rect x="515.7" y="227.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="518.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (148 samples, 10.62%)</title><rect x="516.6" y="419.0" width="125.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.6" y="430.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (148 samples, 10.62%)</title><rect x="516.6" y="403.0" width="125.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="519.6" y="414.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (148 samples, 10.62%)</title><rect x="516.6" y="387.0" width="125.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="519.6" y="398.0">ru/mail/polis/d..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (7 samples, 0.50%)</title><rect x="516.6" y="371.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="519.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (7 samples, 0.50%)</title><rect x="516.6" y="355.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.6" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7 samples, 0.50%)</title><rect x="516.6" y="339.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="519.6" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7 samples, 0.50%)</title><rect x="516.6" y="323.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="519.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7 samples, 0.50%)</title><rect x="516.6" y="307.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="519.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7 samples, 0.50%)</title><rect x="516.6" y="291.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="519.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.50%)</title><rect x="516.6" y="275.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="519.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.50%)</title><rect x="516.6" y="259.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6 samples, 0.43%)</title><rect x="516.6" y="243.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (6 samples, 0.43%)</title><rect x="516.6" y="227.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="519.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (6 samples, 0.43%)</title><rect x="516.6" y="211.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="519.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (6 samples, 0.43%)</title><rect x="516.6" y="195.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.14%)</title><rect x="516.6" y="179.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.14%)</title><rect x="516.6" y="163.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.14%)</title><rect x="516.6" y="147.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.07%)</title><rect x="516.6" y="131.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="519.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.07%)</title><rect x="516.6" y="115.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="519.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.07%)</title><rect x="516.6" y="99.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="519.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="516.6" y="83.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.6" y="94.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.07%)</title><rect x="516.6" y="67.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="519.6" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.07%)</title><rect x="517.4" y="131.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.29%)</title><rect x="518.3" y="179.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="521.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.29%)</title><rect x="518.3" y="163.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="521.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.07%)</title><rect x="518.3" y="147.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="521.3" y="158.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.07%)</title><rect x="518.3" y="131.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="521.3" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.07%)</title><rect x="518.3" y="115.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="521.3" y="126.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.07%)</title><rect x="518.3" y="99.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="521.3" y="110.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.07%)</title><rect x="518.3" y="83.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="521.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.22%)</title><rect x="519.1" y="147.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="522.1" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.07%)</title><rect x="519.1" y="131.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.1" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.07%)</title><rect x="519.1" y="115.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="522.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.07%)</title><rect x="519.1" y="99.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.07%)</title><rect x="519.1" y="83.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="522.1" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.07%)</title><rect x="519.1" y="67.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="522.1" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.07%)</title><rect x="519.9" y="131.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.07%)</title><rect x="519.9" y="115.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="522.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="519.9" y="99.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.9" y="110.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.07%)</title><rect x="519.9" y="83.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="522.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="520.8" y="131.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="523.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.07%)</title><rect x="520.8" y="115.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="523.8" y="126.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.07%)</title><rect x="521.6" y="243.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="524.6" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.07%)</title><rect x="521.6" y="227.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.07%)</title><rect x="521.6" y="211.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="524.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.07%)</title><rect x="521.6" y="195.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="524.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compare (1 samples, 0.07%)</title><rect x="521.6" y="179.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="524.6" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (138 samples, 9.91%)</title><rect x="522.5" y="371.0" width="116.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="525.5" y="382.0">java/util/Coll..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (138 samples, 9.91%)</title><rect x="522.5" y="355.0" width="116.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="525.5" y="366.0">java/lang/Iter..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$83/1445426015.accept (138 samples, 9.91%)</title><rect x="522.5" y="339.0" width="116.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="525.5" y="350.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (138 samples, 9.91%)</title><rect x="522.5" y="323.0" width="116.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="525.5" y="334.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (138 samples, 9.91%)</title><rect x="522.5" y="307.0" width="116.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="525.5" y="318.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (138 samples, 9.91%)</title><rect x="522.5" y="291.0" width="116.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="525.5" y="302.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (138 samples, 9.91%)</title><rect x="522.5" y="275.0" width="116.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="525.5" y="286.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.14%)</title><rect x="522.5" y="259.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="525.5" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.14%)</title><rect x="522.5" y="243.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="525.5" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.14%)</title><rect x="522.5" y="227.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="525.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (136 samples, 9.76%)</title><rect x="524.2" y="259.0" width="115.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="527.2" y="270.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.14%)</title><rect x="524.2" y="243.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="527.2" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="524.2" y="227.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="527.2" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="524.2" y="211.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="527.2" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="524.2" y="195.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="527.2" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.14%)</title><rect x="524.2" y="179.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="527.2" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.14%)</title><rect x="524.2" y="163.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="527.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.14%)</title><rect x="524.2" y="147.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="527.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (44 samples, 3.16%)</title><rect x="525.9" y="243.0" width="37.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="528.9" y="254.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.14%)</title><rect x="528.4" y="227.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="531.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="528.4" y="211.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="531.4" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="528.4" y="195.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="531.4" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="529.3" y="179.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="532.3" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="529.3" y="163.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.3" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.14%)</title><rect x="530.1" y="227.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="533.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (37 samples, 2.66%)</title><rect x="531.8" y="227.0" width="31.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="534.8" y="238.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (37 samples, 2.66%)</title><rect x="531.8" y="211.0" width="31.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="534.8" y="222.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.07%)</title><rect x="532.7" y="195.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="535.7" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.07%)</title><rect x="532.7" y="179.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="535.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.07%)</title><rect x="533.5" y="195.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="536.5" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.07%)</title><rect x="533.5" y="179.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="536.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (33 samples, 2.37%)</title><rect x="534.4" y="195.0" width="27.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="537.4" y="206.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (32 samples, 2.30%)</title><rect x="534.4" y="179.0" width="27.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="537.4" y="190.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (32 samples, 2.30%)</title><rect x="534.4" y="163.0" width="27.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="537.4" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (32 samples, 2.30%)</title><rect x="534.4" y="147.0" width="27.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.4" y="158.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.14%)</title><rect x="534.4" y="131.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="537.4" y="142.0"></text>
</g>
<g>
<title>__pread (27 samples, 1.94%)</title><rect x="536.0" y="131.0" width="22.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="539.0" y="142.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.14%)</title><rect x="558.9" y="131.0" width="1.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="561.9" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.07%)</title><rect x="560.6" y="131.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="563.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="561.5" y="179.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.07%)</title><rect x="561.5" y="163.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.07%)</title><rect x="562.3" y="195.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="565.3" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (90 samples, 6.46%)</title><rect x="563.2" y="243.0" width="76.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="566.2" y="254.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (90 samples, 6.46%)</title><rect x="563.2" y="227.0" width="76.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="566.2" y="238.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.29%)</title><rect x="563.2" y="211.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="566.2" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.29%)</title><rect x="563.2" y="195.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="566.2" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.07%)</title><rect x="565.7" y="179.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="568.7" y="190.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.07%)</title><rect x="565.7" y="163.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.7" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.07%)</title><rect x="565.7" y="147.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.7" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="565.7" y="131.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="568.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (70 samples, 5.03%)</title><rect x="566.5" y="211.0" width="59.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.5" y="222.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.36%)</title><rect x="566.5" y="195.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="569.5" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.14%)</title><rect x="568.2" y="179.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.14%)</title><rect x="568.2" y="163.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="571.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.14%)</title><rect x="568.2" y="147.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="571.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.14%)</title><rect x="568.2" y="131.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="571.2" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.07%)</title><rect x="569.9" y="179.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="572.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (57 samples, 4.09%)</title><rect x="570.8" y="195.0" width="48.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="573.8" y="206.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (57 samples, 4.09%)</title><rect x="570.8" y="179.0" width="48.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.8" y="190.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (57 samples, 4.09%)</title><rect x="570.8" y="163.0" width="48.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="573.8" y="174.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.07%)</title><rect x="574.2" y="147.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="577.2" y="158.0"></text>
</g>
<g>
<title>__pread (49 samples, 3.52%)</title><rect x="575.0" y="147.0" width="41.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="578.0" y="158.0">__p..</text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.14%)</title><rect x="616.5" y="147.0" width="1.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="619.5" y="158.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.07%)</title><rect x="618.2" y="147.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="621.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.29%)</title><rect x="619.1" y="195.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="622.1" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.22%)</title><rect x="619.9" y="179.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="622.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (4 samples, 0.29%)</title><rect x="622.4" y="195.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.4" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.29%)</title><rect x="622.4" y="179.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.4" y="190.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.22%)</title><rect x="623.3" y="163.0" width="2.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="626.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (14 samples, 1.01%)</title><rect x="625.8" y="211.0" width="11.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.8" y="222.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="632.6" y="195.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="635.6" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="632.6" y="179.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="635.6" y="190.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.07%)</title><rect x="632.6" y="163.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="635.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.36%)</title><rect x="633.5" y="195.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="636.5" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="636.8" y="179.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="639.8" y="190.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.07%)</title><rect x="636.8" y="163.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="639.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.14%)</title><rect x="637.7" y="211.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.7" y="222.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.14%)</title><rect x="637.7" y="195.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="640.7" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.14%)</title><rect x="637.7" y="179.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="640.7" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.14%)</title><rect x="637.7" y="163.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="640.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.22%)</title><rect x="639.4" y="371.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.22%)</title><rect x="639.4" y="355.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.22%)</title><rect x="639.4" y="339.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="642.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.22%)</title><rect x="639.4" y="323.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.22%)</title><rect x="639.4" y="307.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3 samples, 0.22%)</title><rect x="639.4" y="291.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="642.4" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 0.22%)</title><rect x="639.4" y="275.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="642.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.22%)</title><rect x="639.4" y="259.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="642.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.22%)</title><rect x="639.4" y="243.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.22%)</title><rect x="639.4" y="227.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="642.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.22%)</title><rect x="639.4" y="211.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="642.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.22%)</title><rect x="639.4" y="195.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="642.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (3 samples, 0.22%)</title><rect x="639.4" y="179.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.07%)</title><rect x="639.4" y="163.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.07%)</title><rect x="639.4" y="147.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="642.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.07%)</title><rect x="639.4" y="131.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="642.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.07%)</title><rect x="639.4" y="115.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.14%)</title><rect x="640.2" y="163.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="643.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.14%)</title><rect x="640.2" y="147.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.14%)</title><rect x="640.2" y="131.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.14%)</title><rect x="640.2" y="115.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.14%)</title><rect x="640.2" y="99.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="643.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.14%)</title><rect x="640.2" y="83.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.2" y="94.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.14%)</title><rect x="640.2" y="67.0" width="1.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="643.2" y="78.0"></text>
</g>
<g>
<title>[pool-3-thread-5 tid=18652] (147 samples, 10.55%)</title><rect x="641.9" y="547.0" width="124.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="644.9" y="558.0">[pool-3-thread-..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.07%)</title><rect x="641.9" y="531.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="644.9" y="542.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="641.9" y="515.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="644.9" y="526.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.07%)</title><rect x="641.9" y="499.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="644.9" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (146 samples, 10.48%)</title><rect x="642.8" y="531.0" width="123.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="645.8" y="542.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (146 samples, 10.48%)</title><rect x="642.8" y="515.0" width="123.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="645.8" y="526.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (146 samples, 10.48%)</title><rect x="642.8" y="499.0" width="123.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="645.8" y="510.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.14%)</title><rect x="642.8" y="483.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2 samples, 0.14%)</title><rect x="642.8" y="467.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.14%)</title><rect x="642.8" y="451.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.14%)</title><rect x="642.8" y="435.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.14%)</title><rect x="642.8" y="419.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="645.8" y="430.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.14%)</title><rect x="642.8" y="403.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="645.8" y="414.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="643.6" y="387.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="646.6" y="398.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.07%)</title><rect x="643.6" y="371.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="646.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.run (144 samples, 10.34%)</title><rect x="644.5" y="483.0" width="122.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="647.5" y="494.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (144 samples, 10.34%)</title><rect x="644.5" y="467.0" width="122.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="647.5" y="478.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (144 samples, 10.34%)</title><rect x="644.5" y="451.0" width="122.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.5" y="462.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (144 samples, 10.34%)</title><rect x="644.5" y="435.0" width="122.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="647.5" y="446.0">ru/mail/polis/d..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (7 samples, 0.50%)</title><rect x="644.5" y="419.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="647.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (7 samples, 0.50%)</title><rect x="644.5" y="403.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="647.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (7 samples, 0.50%)</title><rect x="644.5" y="387.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="647.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (6 samples, 0.43%)</title><rect x="645.3" y="371.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="648.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.43%)</title><rect x="645.3" y="355.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="648.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.43%)</title><rect x="645.3" y="339.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="648.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6 samples, 0.43%)</title><rect x="645.3" y="323.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="648.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6 samples, 0.43%)</title><rect x="645.3" y="307.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="648.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6 samples, 0.43%)</title><rect x="645.3" y="291.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="648.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6 samples, 0.43%)</title><rect x="645.3" y="275.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.43%)</title><rect x="645.3" y="259.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="648.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.43%)</title><rect x="645.3" y="243.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="648.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6 samples, 0.43%)</title><rect x="645.3" y="227.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="648.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (6 samples, 0.43%)</title><rect x="645.3" y="211.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="648.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (6 samples, 0.43%)</title><rect x="645.3" y="195.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (6 samples, 0.43%)</title><rect x="645.3" y="179.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="648.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3 samples, 0.22%)</title><rect x="645.3" y="163.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.07%)</title><rect x="646.2" y="147.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.2" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="646.2" y="131.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="649.2" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="646.2" y="115.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="649.2" y="126.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="646.2" y="99.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="646.2" y="83.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="649.2" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.07%)</title><rect x="647.0" y="147.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="650.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.07%)</title><rect x="647.0" y="131.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="650.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.07%)</title><rect x="647.0" y="115.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.07%)</title><rect x="647.0" y="99.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="650.0" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.07%)</title><rect x="647.0" y="83.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="650.0" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="647.0" y="67.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.0" y="78.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.07%)</title><rect x="647.0" y="51.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="650.0" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.22%)</title><rect x="647.9" y="163.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="650.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.22%)</title><rect x="647.9" y="147.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.07%)</title><rect x="647.9" y="131.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="650.9" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.07%)</title><rect x="647.9" y="115.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="650.9" y="126.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.07%)</title><rect x="647.9" y="99.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="650.9" y="110.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.07%)</title><rect x="647.9" y="83.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.9" y="94.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.07%)</title><rect x="647.9" y="67.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.9" y="78.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="647.9" y="51.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="650.9" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.14%)</title><rect x="648.7" y="131.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="651.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.14%)</title><rect x="648.7" y="115.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="651.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.14%)</title><rect x="648.7" y="99.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="651.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.14%)</title><rect x="648.7" y="83.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="651.7" y="94.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.07%)</title><rect x="648.7" y="67.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="651.7" y="78.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.07%)</title><rect x="649.6" y="67.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="652.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (137 samples, 9.83%)</title><rect x="650.4" y="419.0" width="116.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="653.4" y="430.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (137 samples, 9.83%)</title><rect x="650.4" y="403.0" width="116.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="653.4" y="414.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (135 samples, 9.69%)</title><rect x="650.4" y="387.0" width="114.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="653.4" y="398.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (9 samples, 0.65%)</title><rect x="650.4" y="371.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="653.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (9 samples, 0.65%)</title><rect x="650.4" y="355.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="653.4" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8 samples, 0.57%)</title><rect x="651.2" y="339.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.2" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8 samples, 0.57%)</title><rect x="651.2" y="323.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8 samples, 0.57%)</title><rect x="651.2" y="307.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8 samples, 0.57%)</title><rect x="651.2" y="291.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="654.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.57%)</title><rect x="651.2" y="275.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="654.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.57%)</title><rect x="651.2" y="259.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (8 samples, 0.57%)</title><rect x="651.2" y="243.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="654.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (8 samples, 0.57%)</title><rect x="651.2" y="227.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (8 samples, 0.57%)</title><rect x="651.2" y="211.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="654.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (8 samples, 0.57%)</title><rect x="651.2" y="195.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="654.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.29%)</title><rect x="651.2" y="179.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.29%)</title><rect x="651.2" y="163.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="654.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.29%)</title><rect x="651.2" y="147.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.07%)</title><rect x="651.2" y="131.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="654.2" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.07%)</title><rect x="651.2" y="115.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.22%)</title><rect x="652.1" y="131.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="655.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.22%)</title><rect x="652.1" y="115.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="655.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.22%)</title><rect x="652.1" y="99.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="655.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.22%)</title><rect x="652.1" y="83.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="655.1" y="94.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.22%)</title><rect x="652.1" y="67.0" width="2.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="655.1" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.29%)</title><rect x="654.6" y="179.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.29%)</title><rect x="654.6" y="163.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="657.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.29%)</title><rect x="654.6" y="147.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="657.6" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.07%)</title><rect x="654.6" y="131.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.6" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.07%)</title><rect x="654.6" y="115.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="657.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.07%)</title><rect x="654.6" y="99.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.07%)</title><rect x="654.6" y="83.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.6" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.07%)</title><rect x="654.6" y="67.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.6" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.22%)</title><rect x="655.5" y="131.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="658.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.22%)</title><rect x="655.5" y="115.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="658.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.22%)</title><rect x="655.5" y="99.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="658.5" y="110.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.14%)</title><rect x="655.5" y="83.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="658.5" y="94.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.07%)</title><rect x="657.2" y="83.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="660.2" y="94.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (118 samples, 8.47%)</title><rect x="658.0" y="371.0" width="100.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="661.0" y="382.0">java/util/Co..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (118 samples, 8.47%)</title><rect x="658.0" y="355.0" width="100.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="661.0" y="366.0">java/lang/It..</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (1 samples, 0.07%)</title><rect x="658.0" y="339.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$83/1445426015.accept (117 samples, 8.40%)</title><rect x="658.9" y="339.0" width="99.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="661.9" y="350.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (117 samples, 8.40%)</title><rect x="658.9" y="323.0" width="99.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.9" y="334.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (117 samples, 8.40%)</title><rect x="658.9" y="307.0" width="99.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="661.9" y="318.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (117 samples, 8.40%)</title><rect x="658.9" y="291.0" width="99.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="661.9" y="302.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (117 samples, 8.40%)</title><rect x="658.9" y="275.0" width="99.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.9" y="286.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.29%)</title><rect x="658.9" y="259.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="661.9" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.29%)</title><rect x="658.9" y="243.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.9" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.07%)</title><rect x="661.4" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="664.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (113 samples, 8.11%)</title><rect x="662.3" y="259.0" width="95.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.3" y="270.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.07%)</title><rect x="662.3" y="243.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="665.3" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="662.3" y="227.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="665.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="662.3" y="211.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="665.3" y="222.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.07%)</title><rect x="662.3" y="195.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.3" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.07%)</title><rect x="663.1" y="243.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="666.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (38 samples, 2.73%)</title><rect x="664.0" y="243.0" width="32.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="667.0" y="254.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.07%)</title><rect x="664.8" y="227.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="667.8" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="664.8" y="211.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="667.8" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="664.8" y="195.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="667.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.07%)</title><rect x="664.8" y="179.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="667.8" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.07%)</title><rect x="665.6" y="227.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="668.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (35 samples, 2.51%)</title><rect x="666.5" y="227.0" width="29.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="669.5" y="238.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (35 samples, 2.51%)</title><rect x="666.5" y="211.0" width="29.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.5" y="222.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.14%)</title><rect x="667.3" y="195.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="670.3" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.14%)</title><rect x="667.3" y="179.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="670.3" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.14%)</title><rect x="667.3" y="163.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.3" y="174.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.14%)</title><rect x="667.3" y="147.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="670.3" y="158.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.14%)</title><rect x="667.3" y="131.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (29 samples, 2.08%)</title><rect x="669.0" y="195.0" width="24.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="672.0" y="206.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (23 samples, 1.65%)</title><rect x="669.0" y="179.0" width="19.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="672.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (23 samples, 1.65%)</title><rect x="669.0" y="163.0" width="19.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="672.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (23 samples, 1.65%)</title><rect x="669.0" y="147.0" width="19.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="672.0" y="158.0"></text>
</g>
<g>
<title>__pread (22 samples, 1.58%)</title><rect x="669.0" y="131.0" width="18.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="672.0" y="142.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.07%)</title><rect x="687.7" y="131.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="690.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.43%)</title><rect x="688.5" y="179.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="691.5" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="688.5" y="163.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="691.5" y="174.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="688.5" y="147.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="691.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (5 samples, 0.36%)</title><rect x="689.4" y="163.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.4" y="174.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.07%)</title><rect x="692.8" y="147.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.8" y="158.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.07%)</title><rect x="692.8" y="131.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.14%)</title><rect x="693.6" y="195.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="696.6" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.07%)</title><rect x="695.3" y="195.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="698.3" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="695.3" y="179.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="698.3" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="695.3" y="163.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="698.3" y="174.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.07%)</title><rect x="695.3" y="147.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="698.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (73 samples, 5.24%)</title><rect x="696.1" y="243.0" width="61.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.1" y="254.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (73 samples, 5.24%)</title><rect x="696.1" y="227.0" width="61.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="699.1" y="238.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (7 samples, 0.50%)</title><rect x="696.1" y="211.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.1" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (7 samples, 0.50%)</title><rect x="696.1" y="195.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.1" y="206.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.14%)</title><rect x="698.7" y="179.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="699.5" y="163.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.5" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="700.4" y="179.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.4" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.07%)</title><rect x="701.2" y="179.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.2" y="190.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.07%)</title><rect x="701.2" y="163.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="704.2" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.07%)</title><rect x="701.2" y="147.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (60 samples, 4.31%)</title><rect x="702.1" y="211.0" width="50.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="705.1" y="222.0">sun/n..</text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.07%)</title><rect x="702.9" y="195.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="705.9" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.50%)</title><rect x="703.8" y="195.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="706.8" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.14%)</title><rect x="705.5" y="179.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="708.5" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (3 samples, 0.22%)</title><rect x="707.2" y="179.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="710.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (49 samples, 3.52%)</title><rect x="709.7" y="195.0" width="41.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.7" y="206.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (49 samples, 3.52%)</title><rect x="709.7" y="179.0" width="41.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.7" y="190.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (49 samples, 3.52%)</title><rect x="709.7" y="163.0" width="41.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="712.7" y="174.0">sun..</text>
</g>
<g>
<title>__pread (41 samples, 2.94%)</title><rect x="713.1" y="147.0" width="34.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="716.1" y="158.0">__..</text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.14%)</title><rect x="747.8" y="147.0" width="1.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="750.8" y="158.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.07%)</title><rect x="749.5" y="147.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="752.5" y="158.0"></text>
</g>
<g>
<title>pread64@plt (1 samples, 0.07%)</title><rect x="750.4" y="147.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="753.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.14%)</title><rect x="751.2" y="195.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="754.2" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.14%)</title><rect x="751.2" y="179.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.2" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.14%)</title><rect x="751.2" y="163.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="754.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.43%)</title><rect x="752.9" y="211.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="755.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.07%)</title><rect x="757.1" y="195.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="760.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (8 samples, 0.57%)</title><rect x="758.0" y="371.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="761.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (8 samples, 0.57%)</title><rect x="758.0" y="355.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="761.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.57%)</title><rect x="758.0" y="339.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="761.0" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8 samples, 0.57%)</title><rect x="758.0" y="323.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="761.0" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8 samples, 0.57%)</title><rect x="758.0" y="307.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8 samples, 0.57%)</title><rect x="758.0" y="291.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="761.0" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8 samples, 0.57%)</title><rect x="758.0" y="275.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.57%)</title><rect x="758.0" y="259.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="761.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.57%)</title><rect x="758.0" y="243.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (8 samples, 0.57%)</title><rect x="758.0" y="227.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="761.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (8 samples, 0.57%)</title><rect x="758.0" y="211.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="761.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (8 samples, 0.57%)</title><rect x="758.0" y="195.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="761.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (8 samples, 0.57%)</title><rect x="758.0" y="179.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="761.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.07%)</title><rect x="758.0" y="163.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="761.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.07%)</title><rect x="758.0" y="147.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="761.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.07%)</title><rect x="758.0" y="131.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="761.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.07%)</title><rect x="758.0" y="115.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="761.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.07%)</title><rect x="758.0" y="99.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.0" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.07%)</title><rect x="758.0" y="83.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="761.0" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="758.0" y="67.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="761.0" y="78.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.07%)</title><rect x="758.0" y="51.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="761.0" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.50%)</title><rect x="758.8" y="163.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="761.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.50%)</title><rect x="758.8" y="147.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="761.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.50%)</title><rect x="758.8" y="131.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="761.8" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.07%)</title><rect x="758.8" y="115.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="761.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.43%)</title><rect x="759.7" y="115.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="762.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.43%)</title><rect x="759.7" y="99.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.43%)</title><rect x="759.7" y="83.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="762.7" y="94.0"></text>
</g>
<g>
<title>__pread (6 samples, 0.43%)</title><rect x="759.7" y="67.0" width="5.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="762.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (2 samples, 0.14%)</title><rect x="764.8" y="387.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="767.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (2 samples, 0.14%)</title><rect x="764.8" y="371.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="767.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (2 samples, 0.14%)</title><rect x="764.8" y="355.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="767.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (2 samples, 0.14%)</title><rect x="764.8" y="339.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="767.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (2 samples, 0.14%)</title><rect x="764.8" y="323.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="767.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (2 samples, 0.14%)</title><rect x="764.8" y="307.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="767.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (2 samples, 0.14%)</title><rect x="764.8" y="291.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="767.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.07%)</title><rect x="765.6" y="275.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="768.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="765.6" y="259.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="768.6" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="765.6" y="243.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="768.6" y="254.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.07%)</title><rect x="765.6" y="227.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="768.6" y="238.0"></text>
</g>
<g>
<title>[pool-3-thread-6 tid=18658] (173 samples, 12.42%)</title><rect x="766.5" y="547.0" width="146.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="769.5" y="558.0">[pool-3-thread-6 t..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.07%)</title><rect x="766.5" y="531.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="769.5" y="542.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="766.5" y="515.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="769.5" y="526.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.07%)</title><rect x="766.5" y="499.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="769.5" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (172 samples, 12.35%)</title><rect x="767.3" y="531.0" width="145.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="770.3" y="542.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (172 samples, 12.35%)</title><rect x="767.3" y="515.0" width="145.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="770.3" y="526.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (172 samples, 12.35%)</title><rect x="767.3" y="499.0" width="145.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="770.3" y="510.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 0.36%)</title><rect x="767.3" y="483.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (5 samples, 0.36%)</title><rect x="767.3" y="467.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="770.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 0.36%)</title><rect x="767.3" y="451.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="770.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.36%)</title><rect x="767.3" y="435.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="770.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.36%)</title><rect x="767.3" y="419.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="770.3" y="430.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.29%)</title><rect x="767.3" y="403.0" width="3.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="770.3" y="414.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.07%)</title><rect x="767.3" y="387.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="770.3" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.07%)</title><rect x="768.1" y="387.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="771.1" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="769.0" y="387.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="772.0" y="398.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.07%)</title><rect x="769.8" y="387.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="772.8" y="398.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="770.7" y="403.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="773.7" y="414.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.07%)</title><rect x="770.7" y="387.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="773.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.run (167 samples, 11.99%)</title><rect x="771.5" y="483.0" width="141.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="774.5" y="494.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (167 samples, 11.99%)</title><rect x="771.5" y="467.0" width="141.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="774.5" y="478.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (167 samples, 11.99%)</title><rect x="771.5" y="451.0" width="141.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="774.5" y="462.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.14%)</title><rect x="772.4" y="435.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="775.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.07%)</title><rect x="772.4" y="419.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.4" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="772.4" y="403.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="775.4" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="772.4" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.4" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.07%)</title><rect x="772.4" y="371.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="775.4" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.07%)</title><rect x="772.4" y="355.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="775.4" y="366.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.07%)</title><rect x="772.4" y="339.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="775.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="773.2" y="419.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="776.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (164 samples, 11.77%)</title><rect x="774.1" y="435.0" width="138.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="777.1" y="446.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (2 samples, 0.14%)</title><rect x="774.1" y="419.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="777.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.14%)</title><rect x="774.1" y="403.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.14%)</title><rect x="774.1" y="387.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2 samples, 0.14%)</title><rect x="774.1" y="371.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="777.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.14%)</title><rect x="774.1" y="355.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="777.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.14%)</title><rect x="774.1" y="339.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2 samples, 0.14%)</title><rect x="774.1" y="323.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="777.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2 samples, 0.14%)</title><rect x="774.1" y="307.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="777.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2 samples, 0.14%)</title><rect x="774.1" y="291.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="777.1" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2 samples, 0.14%)</title><rect x="774.1" y="275.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.14%)</title><rect x="774.1" y="259.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="777.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.14%)</title><rect x="774.1" y="243.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2 samples, 0.14%)</title><rect x="774.1" y="227.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="777.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (2 samples, 0.14%)</title><rect x="774.1" y="211.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="777.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (2 samples, 0.14%)</title><rect x="774.1" y="195.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="777.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (2 samples, 0.14%)</title><rect x="774.1" y="179.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="777.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.14%)</title><rect x="774.1" y="163.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="777.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.14%)</title><rect x="774.1" y="147.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="777.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.14%)</title><rect x="774.1" y="131.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="777.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.07%)</title><rect x="774.1" y="115.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="777.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.07%)</title><rect x="774.1" y="99.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.07%)</title><rect x="774.1" y="83.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="777.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="774.1" y="67.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="777.1" y="78.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.07%)</title><rect x="774.1" y="51.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="777.1" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.07%)</title><rect x="774.9" y="115.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="777.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (162 samples, 11.63%)</title><rect x="775.8" y="419.0" width="137.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="778.8" y="430.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (162 samples, 11.63%)</title><rect x="775.8" y="403.0" width="137.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.8" y="414.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (1 samples, 0.07%)</title><rect x="775.8" y="387.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="778.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.07%)</title><rect x="775.8" y="371.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="778.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (160 samples, 11.49%)</title><rect x="776.6" y="387.0" width="135.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="779.6" y="398.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (13 samples, 0.93%)</title><rect x="776.6" y="371.0" width="11.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (13 samples, 0.93%)</title><rect x="776.6" y="355.0" width="11.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="779.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.07%)</title><rect x="776.6" y="339.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.&lt;init&gt; (1 samples, 0.07%)</title><rect x="776.6" y="323.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1 samples, 0.07%)</title><rect x="776.6" y="307.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="779.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (12 samples, 0.86%)</title><rect x="777.5" y="339.0" width="10.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="780.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (12 samples, 0.86%)</title><rect x="777.5" y="323.0" width="10.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="780.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (12 samples, 0.86%)</title><rect x="777.5" y="307.0" width="10.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="780.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (12 samples, 0.86%)</title><rect x="777.5" y="291.0" width="10.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="780.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.86%)</title><rect x="777.5" y="275.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="780.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.86%)</title><rect x="777.5" y="259.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="780.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (12 samples, 0.86%)</title><rect x="777.5" y="243.0" width="10.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="780.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (12 samples, 0.86%)</title><rect x="777.5" y="227.0" width="10.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (12 samples, 0.86%)</title><rect x="777.5" y="211.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="780.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (12 samples, 0.86%)</title><rect x="777.5" y="195.0" width="10.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (6 samples, 0.43%)</title><rect x="777.5" y="179.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="780.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.43%)</title><rect x="777.5" y="163.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.43%)</title><rect x="777.5" y="147.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="780.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.36%)</title><rect x="778.3" y="131.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="781.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.36%)</title><rect x="778.3" y="115.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.36%)</title><rect x="778.3" y="99.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.36%)</title><rect x="778.3" y="83.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.3" y="94.0"></text>
</g>
<g>
<title>__pread (5 samples, 0.36%)</title><rect x="778.3" y="67.0" width="4.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="781.3" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.43%)</title><rect x="782.5" y="179.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="785.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.43%)</title><rect x="782.5" y="163.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="785.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.36%)</title><rect x="782.5" y="147.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="785.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.29%)</title><rect x="782.5" y="131.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="785.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.29%)</title><rect x="782.5" y="115.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.29%)</title><rect x="782.5" y="99.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="785.5" y="110.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.07%)</title><rect x="782.5" y="83.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="785.5" y="94.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.22%)</title><rect x="783.4" y="83.0" width="2.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="786.4" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="785.9" y="131.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="788.9" y="142.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="785.9" y="115.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="788.9" y="126.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="785.9" y="99.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="788.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.07%)</title><rect x="786.8" y="147.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.8" y="158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (138 samples, 9.91%)</title><rect x="787.6" y="371.0" width="116.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="790.6" y="382.0">java/util/Coll..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (138 samples, 9.91%)</title><rect x="787.6" y="355.0" width="116.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.6" y="366.0">java/lang/Iter..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$83/1445426015.accept (138 samples, 9.91%)</title><rect x="787.6" y="339.0" width="116.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="790.6" y="350.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (138 samples, 9.91%)</title><rect x="787.6" y="323.0" width="116.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="790.6" y="334.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (138 samples, 9.91%)</title><rect x="787.6" y="307.0" width="116.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.6" y="318.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (138 samples, 9.91%)</title><rect x="787.6" y="291.0" width="116.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="790.6" y="302.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (138 samples, 9.91%)</title><rect x="787.6" y="275.0" width="116.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="790.6" y="286.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.14%)</title><rect x="787.6" y="259.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="790.6" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.14%)</title><rect x="787.6" y="243.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="790.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (136 samples, 9.76%)</title><rect x="789.3" y="259.0" width="115.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="792.3" y="270.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.14%)</title><rect x="789.3" y="243.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.3" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="789.3" y="227.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="792.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="789.3" y="211.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="792.3" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="789.3" y="195.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="792.3" y="206.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.07%)</title><rect x="790.2" y="195.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="793.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (40 samples, 2.87%)</title><rect x="791.0" y="243.0" width="33.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="794.0" y="254.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.07%)</title><rect x="791.0" y="227.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="794.0" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="791.0" y="211.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="794.0" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="791.0" y="195.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.0" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.14%)</title><rect x="791.9" y="227.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (37 samples, 2.66%)</title><rect x="793.6" y="227.0" width="31.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="796.6" y="238.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (37 samples, 2.66%)</title><rect x="793.6" y="211.0" width="31.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="796.6" y="222.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (31 samples, 2.23%)</title><rect x="795.3" y="195.0" width="26.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.3" y="206.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (26 samples, 1.87%)</title><rect x="795.3" y="179.0" width="22.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="798.3" y="190.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (26 samples, 1.87%)</title><rect x="795.3" y="163.0" width="22.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="798.3" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (26 samples, 1.87%)</title><rect x="795.3" y="147.0" width="22.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="798.3" y="158.0">s..</text>
</g>
<g>
<title>__pread (23 samples, 1.65%)</title><rect x="795.3" y="131.0" width="19.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="798.3" y="142.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.14%)</title><rect x="814.7" y="131.0" width="1.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="817.7" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.07%)</title><rect x="816.4" y="131.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="819.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.36%)</title><rect x="817.3" y="179.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="820.3" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.14%)</title><rect x="817.3" y="163.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="820.3" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.07%)</title><rect x="818.1" y="147.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="821.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.22%)</title><rect x="819.0" y="163.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="822.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.29%)</title><rect x="821.5" y="195.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="824.5" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="822.4" y="179.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="825.4" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="822.4" y="163.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="825.4" y="174.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.07%)</title><rect x="822.4" y="147.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="825.4" y="158.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.07%)</title><rect x="822.4" y="131.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="825.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.14%)</title><rect x="823.2" y="179.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="826.2" y="190.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="824.1" y="163.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="827.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (94 samples, 6.75%)</title><rect x="824.9" y="243.0" width="79.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="827.9" y="254.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (94 samples, 6.75%)</title><rect x="824.9" y="227.0" width="79.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="827.9" y="238.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (9 samples, 0.65%)</title><rect x="825.8" y="211.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="828.8" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (9 samples, 0.65%)</title><rect x="825.8" y="195.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="828.8" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="829.1" y="179.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="832.1" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.29%)</title><rect x="830.0" y="179.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="833.0" y="190.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.29%)</title><rect x="830.0" y="163.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="833.0" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.29%)</title><rect x="830.0" y="147.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="833.0" y="158.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.14%)</title><rect x="830.8" y="131.0" width="1.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="833.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.07%)</title><rect x="832.5" y="131.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="835.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (75 samples, 5.38%)</title><rect x="833.4" y="211.0" width="63.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="836.4" y="222.0">sun/nio..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (9 samples, 0.65%)</title><rect x="833.4" y="195.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="836.4" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.22%)</title><rect x="837.6" y="179.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="840.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.14%)</title><rect x="838.5" y="163.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="841.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.14%)</title><rect x="838.5" y="147.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="841.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.14%)</title><rect x="838.5" y="131.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="841.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.07%)</title><rect x="839.3" y="115.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="842.3" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.07%)</title><rect x="840.2" y="179.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="843.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (59 samples, 4.24%)</title><rect x="841.0" y="195.0" width="50.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="844.0" y="206.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (59 samples, 4.24%)</title><rect x="841.0" y="179.0" width="50.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="844.0" y="190.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (59 samples, 4.24%)</title><rect x="841.0" y="163.0" width="50.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="844.0" y="174.0">sun/n..</text>
</g>
<g>
<title>__pread (55 samples, 3.95%)</title><rect x="842.7" y="147.0" width="46.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="845.7" y="158.0">__pr..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.07%)</title><rect x="889.3" y="147.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="892.3" y="158.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.07%)</title><rect x="890.1" y="147.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="893.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.43%)</title><rect x="891.0" y="195.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="894.0" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.14%)</title><rect x="891.0" y="179.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="894.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.07%)</title><rect x="892.7" y="179.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="895.7" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.07%)</title><rect x="892.7" y="163.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="895.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.22%)</title><rect x="893.5" y="179.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="896.1" y="195.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.1" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="896.1" y="179.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="899.1" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.07%)</title><rect x="896.1" y="163.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (8 samples, 0.57%)</title><rect x="896.9" y="211.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="899.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.14%)</title><rect x="902.0" y="195.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.07%)</title><rect x="903.7" y="211.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="906.7" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="903.7" y="195.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.7" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="903.7" y="179.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="906.7" y="190.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.07%)</title><rect x="903.7" y="163.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="906.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.65%)</title><rect x="904.5" y="371.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="907.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.65%)</title><rect x="904.5" y="355.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="907.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.65%)</title><rect x="904.5" y="339.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.5" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.07%)</title><rect x="904.5" y="323.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="907.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.07%)</title><rect x="904.5" y="307.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.07%)</title><rect x="904.5" y="291.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="907.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.07%)</title><rect x="904.5" y="275.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="907.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.07%)</title><rect x="904.5" y="259.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.5" y="270.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.07%)</title><rect x="904.5" y="243.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="907.5" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.07%)</title><rect x="904.5" y="227.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.07%)</title><rect x="904.5" y="211.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.07%)</title><rect x="904.5" y="195.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="907.5" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="904.5" y="179.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="907.5" y="190.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.07%)</title><rect x="904.5" y="163.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="907.5" y="174.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7 samples, 0.50%)</title><rect x="905.4" y="323.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="908.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7 samples, 0.50%)</title><rect x="905.4" y="307.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="908.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7 samples, 0.50%)</title><rect x="905.4" y="291.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="908.4" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7 samples, 0.50%)</title><rect x="905.4" y="275.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="908.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.50%)</title><rect x="905.4" y="259.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.50%)</title><rect x="905.4" y="243.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="908.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (7 samples, 0.50%)</title><rect x="905.4" y="227.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="908.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.50%)</title><rect x="905.4" y="211.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="908.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.50%)</title><rect x="905.4" y="195.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="908.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (7 samples, 0.50%)</title><rect x="905.4" y="179.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="908.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.50%)</title><rect x="905.4" y="163.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.50%)</title><rect x="905.4" y="147.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="908.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.50%)</title><rect x="905.4" y="131.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="908.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.43%)</title><rect x="905.4" y="115.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="908.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.43%)</title><rect x="905.4" y="99.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="908.4" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.43%)</title><rect x="905.4" y="83.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="908.4" y="94.0"></text>
</g>
<g>
<title>__pread (6 samples, 0.43%)</title><rect x="905.4" y="67.0" width="5.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="908.4" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="910.5" y="115.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="913.5" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="910.5" y="99.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="913.5" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.07%)</title><rect x="910.5" y="83.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="913.5" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.07%)</title><rect x="911.3" y="323.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="914.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (1 samples, 0.07%)</title><rect x="912.2" y="387.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="915.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (1 samples, 0.07%)</title><rect x="912.2" y="371.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (1 samples, 0.07%)</title><rect x="912.2" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.07%)</title><rect x="912.2" y="339.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="915.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (1 samples, 0.07%)</title><rect x="912.2" y="323.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="915.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (1 samples, 0.07%)</title><rect x="912.2" y="307.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="915.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.07%)</title><rect x="912.2" y="291.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="915.2" y="302.0"></text>
</g>
<g>
<title>[pool-3-thread-7 tid=18657] (167 samples, 11.99%)</title><rect x="913.0" y="547.0" width="141.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="916.0" y="558.0">[pool-3-thread-7 t..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.07%)</title><rect x="913.0" y="531.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="916.0" y="542.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="913.0" y="515.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="916.0" y="526.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.07%)</title><rect x="913.0" y="499.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="916.0" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (166 samples, 11.92%)</title><rect x="913.8" y="531.0" width="140.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="916.8" y="542.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (166 samples, 11.92%)</title><rect x="913.8" y="515.0" width="140.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="916.8" y="526.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (166 samples, 11.92%)</title><rect x="913.8" y="499.0" width="140.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="916.8" y="510.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.22%)</title><rect x="913.8" y="483.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="916.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.22%)</title><rect x="913.8" y="467.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="916.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.22%)</title><rect x="913.8" y="451.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="916.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.22%)</title><rect x="913.8" y="435.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.22%)</title><rect x="913.8" y="419.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="916.8" y="430.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.14%)</title><rect x="914.7" y="403.0" width="1.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="917.7" y="414.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.14%)</title><rect x="914.7" y="387.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="917.7" y="398.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.07%)</title><rect x="914.7" y="371.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="917.7" y="382.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="915.5" y="371.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="918.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.run (163 samples, 11.70%)</title><rect x="916.4" y="483.0" width="138.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="919.4" y="494.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (163 samples, 11.70%)</title><rect x="916.4" y="467.0" width="138.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="919.4" y="478.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (163 samples, 11.70%)</title><rect x="916.4" y="451.0" width="138.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="919.4" y="462.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.43%)</title><rect x="916.4" y="435.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="919.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.14%)</title><rect x="917.2" y="419.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="920.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.14%)</title><rect x="917.2" y="403.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="920.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.14%)</title><rect x="917.2" y="387.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="920.2" y="398.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="917.2" y="371.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="920.2" y="382.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.07%)</title><rect x="917.2" y="355.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="920.2" y="366.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="918.1" y="371.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="921.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.22%)</title><rect x="918.9" y="419.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="921.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.07%)</title><rect x="918.9" y="403.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="921.9" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.14%)</title><rect x="919.8" y="403.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="922.8" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.14%)</title><rect x="919.8" y="387.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="922.8" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.14%)</title><rect x="919.8" y="371.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="922.8" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.14%)</title><rect x="919.8" y="355.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="922.8" y="366.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.07%)</title><rect x="919.8" y="339.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="922.8" y="350.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.07%)</title><rect x="920.6" y="339.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="923.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (157 samples, 11.27%)</title><rect x="921.5" y="435.0" width="133.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="924.5" y="446.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (2 samples, 0.14%)</title><rect x="921.5" y="419.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="924.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.14%)</title><rect x="921.5" y="403.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="924.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.14%)</title><rect x="921.5" y="387.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="924.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2 samples, 0.14%)</title><rect x="921.5" y="371.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="924.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.14%)</title><rect x="921.5" y="355.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="924.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.14%)</title><rect x="921.5" y="339.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="924.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2 samples, 0.14%)</title><rect x="921.5" y="323.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="924.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2 samples, 0.14%)</title><rect x="921.5" y="307.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="924.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2 samples, 0.14%)</title><rect x="921.5" y="291.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="924.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2 samples, 0.14%)</title><rect x="921.5" y="275.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="924.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.14%)</title><rect x="921.5" y="259.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="924.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.14%)</title><rect x="921.5" y="243.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="924.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2 samples, 0.14%)</title><rect x="921.5" y="227.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="924.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (2 samples, 0.14%)</title><rect x="921.5" y="211.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="924.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (2 samples, 0.14%)</title><rect x="921.5" y="195.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="924.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (2 samples, 0.14%)</title><rect x="921.5" y="179.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="924.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.07%)</title><rect x="921.5" y="163.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="924.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.07%)</title><rect x="921.5" y="147.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="924.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.07%)</title><rect x="921.5" y="131.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="924.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.07%)</title><rect x="921.5" y="115.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="924.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.07%)</title><rect x="921.5" y="99.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="924.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.07%)</title><rect x="921.5" y="83.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="924.5" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="921.5" y="67.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="924.5" y="78.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.07%)</title><rect x="921.5" y="51.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="924.5" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.07%)</title><rect x="922.3" y="163.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="925.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.07%)</title><rect x="922.3" y="147.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="925.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.07%)</title><rect x="922.3" y="131.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="925.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.07%)</title><rect x="922.3" y="115.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="925.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.07%)</title><rect x="922.3" y="99.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="925.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="922.3" y="83.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="925.3" y="94.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.07%)</title><rect x="922.3" y="67.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="925.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (1 samples, 0.07%)</title><rect x="923.2" y="419.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="926.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.07%)</title><rect x="923.2" y="403.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="926.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.07%)</title><rect x="923.2" y="387.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="926.2" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.07%)</title><rect x="923.2" y="371.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="926.2" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="923.2" y="355.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="926.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="923.2" y="339.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="926.2" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="923.2" y="323.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="926.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="923.2" y="307.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="926.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (154 samples, 11.06%)</title><rect x="924.0" y="419.0" width="130.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="927.0" y="430.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (154 samples, 11.06%)</title><rect x="924.0" y="403.0" width="130.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="927.0" y="414.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.07%)</title><rect x="924.0" y="387.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="927.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.07%)</title><rect x="924.0" y="371.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="927.0" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (1 samples, 0.07%)</title><rect x="924.9" y="387.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="927.9" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.07%)</title><rect x="924.9" y="371.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="927.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.07%)</title><rect x="925.7" y="387.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="928.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.07%)</title><rect x="925.7" y="371.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="928.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.07%)</title><rect x="925.7" y="355.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="928.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.07%)</title><rect x="925.7" y="339.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="928.7" y="350.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.07%)</title><rect x="925.7" y="323.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="928.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (148 samples, 10.62%)</title><rect x="926.6" y="387.0" width="125.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="929.6" y="398.0">ru/mail/polis/d..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (16 samples, 1.15%)</title><rect x="926.6" y="371.0" width="13.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="929.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (16 samples, 1.15%)</title><rect x="926.6" y="355.0" width="13.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="929.6" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (16 samples, 1.15%)</title><rect x="926.6" y="339.0" width="13.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="929.6" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (16 samples, 1.15%)</title><rect x="926.6" y="323.0" width="13.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="929.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (16 samples, 1.15%)</title><rect x="926.6" y="307.0" width="13.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="929.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (16 samples, 1.15%)</title><rect x="926.6" y="291.0" width="13.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="929.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 1.15%)</title><rect x="926.6" y="275.0" width="13.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="929.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 1.15%)</title><rect x="926.6" y="259.0" width="13.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="929.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (14 samples, 1.01%)</title><rect x="926.6" y="243.0" width="11.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="929.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.07%)</title><rect x="926.6" y="227.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="929.6" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (1 samples, 0.07%)</title><rect x="926.6" y="211.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="929.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$73/306670327.apply (1 samples, 0.07%)</title><rect x="926.6" y="195.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="929.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (1 samples, 0.07%)</title><rect x="926.6" y="179.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="929.6" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.07%)</title><rect x="926.6" y="163.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="929.6" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.07%)</title><rect x="926.6" y="147.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="929.6" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.07%)</title><rect x="926.6" y="131.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="929.6" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="926.6" y="115.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="929.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="926.6" y="99.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="929.6" y="110.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="926.6" y="83.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="929.6" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="926.6" y="67.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="929.6" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="926.6" y="51.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="929.6" y="62.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.07%)</title><rect x="926.6" y="35.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="929.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (13 samples, 0.93%)</title><rect x="927.4" y="227.0" width="11.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="930.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (13 samples, 0.93%)</title><rect x="927.4" y="211.0" width="11.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="930.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (13 samples, 0.93%)</title><rect x="927.4" y="195.0" width="11.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.29%)</title><rect x="927.4" y="179.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="930.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.29%)</title><rect x="927.4" y="163.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="930.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.29%)</title><rect x="927.4" y="147.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="930.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.29%)</title><rect x="927.4" y="131.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.29%)</title><rect x="927.4" y="115.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="930.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.29%)</title><rect x="927.4" y="99.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="930.4" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.29%)</title><rect x="927.4" y="83.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="930.4" y="94.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.22%)</title><rect x="927.4" y="67.0" width="2.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="930.4" y="78.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.07%)</title><rect x="929.9" y="67.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="932.9" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (9 samples, 0.65%)</title><rect x="930.8" y="179.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="933.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (9 samples, 0.65%)</title><rect x="930.8" y="163.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="933.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (8 samples, 0.57%)</title><rect x="930.8" y="147.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.8" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.07%)</title><rect x="930.8" y="131.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="933.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.43%)</title><rect x="931.6" y="131.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="934.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.43%)</title><rect x="931.6" y="115.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="934.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.43%)</title><rect x="931.6" y="99.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="934.6" y="110.0"></text>
</g>
<g>
<title>__pread (6 samples, 0.43%)</title><rect x="931.6" y="83.0" width="5.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="934.6" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="936.7" y="131.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="939.7" y="142.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="936.7" y="115.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="939.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.07%)</title><rect x="937.6" y="147.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="940.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.07%)</title><rect x="937.6" y="131.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="940.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.14%)</title><rect x="938.4" y="243.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="941.4" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.14%)</title><rect x="938.4" y="227.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="941.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.14%)</title><rect x="938.4" y="211.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="941.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.14%)</title><rect x="938.4" y="195.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="941.4" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compare (1 samples, 0.07%)</title><rect x="938.4" y="179.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="941.4" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="939.3" y="179.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="942.3" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.07%)</title><rect x="939.3" y="163.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="942.3" y="174.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (127 samples, 9.12%)</title><rect x="940.1" y="371.0" width="107.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="943.1" y="382.0">java/util/Col..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (127 samples, 9.12%)</title><rect x="940.1" y="355.0" width="107.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="943.1" y="366.0">java/lang/Ite..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$83/1445426015.accept (127 samples, 9.12%)</title><rect x="940.1" y="339.0" width="107.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="943.1" y="350.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (127 samples, 9.12%)</title><rect x="940.1" y="323.0" width="107.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="943.1" y="334.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (127 samples, 9.12%)</title><rect x="940.1" y="307.0" width="107.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="943.1" y="318.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (127 samples, 9.12%)</title><rect x="940.1" y="291.0" width="107.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="943.1" y="302.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (127 samples, 9.12%)</title><rect x="940.1" y="275.0" width="107.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="943.1" y="286.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="940.1" y="259.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="943.1" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.07%)</title><rect x="940.1" y="243.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="943.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.07%)</title><rect x="940.1" y="227.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="943.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (126 samples, 9.05%)</title><rect x="941.0" y="259.0" width="106.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="944.0" y="270.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (48 samples, 3.45%)</title><rect x="941.0" y="243.0" width="40.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="944.0" y="254.0">ru/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.22%)</title><rect x="941.8" y="227.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="944.8" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (44 samples, 3.16%)</title><rect x="944.3" y="227.0" width="37.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="947.3" y="238.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (44 samples, 3.16%)</title><rect x="944.3" y="211.0" width="37.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="947.3" y="222.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.07%)</title><rect x="945.2" y="195.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="948.2" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.07%)</title><rect x="945.2" y="179.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="948.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.14%)</title><rect x="946.0" y="195.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="949.0" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.07%)</title><rect x="946.9" y="179.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="949.9" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.07%)</title><rect x="946.9" y="163.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="949.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (34 samples, 2.44%)</title><rect x="947.7" y="195.0" width="28.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="950.7" y="206.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (30 samples, 2.15%)</title><rect x="947.7" y="179.0" width="25.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="950.7" y="190.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (30 samples, 2.15%)</title><rect x="947.7" y="163.0" width="25.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="950.7" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (30 samples, 2.15%)</title><rect x="947.7" y="147.0" width="25.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="950.7" y="158.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.07%)</title><rect x="947.7" y="131.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="950.7" y="142.0"></text>
</g>
<g>
<title>__pread (27 samples, 1.94%)</title><rect x="948.6" y="131.0" width="22.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="951.6" y="142.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.07%)</title><rect x="971.5" y="131.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="974.5" y="142.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.07%)</title><rect x="972.3" y="131.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="975.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.29%)</title><rect x="973.1" y="179.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="976.1" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.29%)</title><rect x="973.1" y="163.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="976.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.43%)</title><rect x="976.5" y="195.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="979.5" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="979.1" y="179.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="982.1" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="979.1" y="163.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="982.1" y="174.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.07%)</title><rect x="979.1" y="147.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="982.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.14%)</title><rect x="979.9" y="179.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="982.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (78 samples, 5.60%)</title><rect x="981.6" y="243.0" width="66.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="984.6" y="254.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (1 samples, 0.07%)</title><rect x="981.6" y="227.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="984.6" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.07%)</title><rect x="981.6" y="211.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="984.6" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (77 samples, 5.53%)</title><rect x="982.5" y="227.0" width="65.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="985.5" y="238.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.22%)</title><rect x="982.5" y="211.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="985.5" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.22%)</title><rect x="982.5" y="195.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="985.5" y="206.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.07%)</title><rect x="983.3" y="179.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="986.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="983.3" y="163.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="986.3" y="174.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.07%)</title><rect x="984.2" y="179.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="987.2" y="190.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.07%)</title><rect x="984.2" y="163.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="987.2" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.07%)</title><rect x="984.2" y="147.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="987.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (65 samples, 4.67%)</title><rect x="985.0" y="211.0" width="55.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="988.0" y="222.0">sun/n..</text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.07%)</title><rect x="985.0" y="195.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="988.0" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.22%)</title><rect x="985.9" y="195.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="988.9" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.07%)</title><rect x="987.5" y="179.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="990.5" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.07%)</title><rect x="987.5" y="163.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="990.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (58 samples, 4.16%)</title><rect x="988.4" y="195.0" width="49.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="991.4" y="206.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (57 samples, 4.09%)</title><rect x="989.2" y="179.0" width="48.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="992.2" y="190.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (57 samples, 4.09%)</title><rect x="989.2" y="163.0" width="48.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="992.2" y="174.0">sun/..</text>
</g>
<g>
<title>__pread (51 samples, 3.66%)</title><rect x="991.8" y="147.0" width="43.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="994.8" y="158.0">__pr..</text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.22%)</title><rect x="1035.0" y="147.0" width="2.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1038.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.14%)</title><rect x="1037.5" y="195.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1040.5" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="1037.5" y="179.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1040.5" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.07%)</title><rect x="1037.5" y="163.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1040.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.07%)</title><rect x="1038.4" y="179.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1041.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="1039.2" y="195.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1042.2" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="1039.2" y="179.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1042.2" y="190.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="1039.2" y="163.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1042.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (8 samples, 0.57%)</title><rect x="1040.1" y="211.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1043.1" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.07%)</title><rect x="1046.8" y="211.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1049.8" y="222.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="1046.8" y="195.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1049.8" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="1046.8" y="179.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1049.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.36%)</title><rect x="1047.7" y="371.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1050.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.36%)</title><rect x="1047.7" y="355.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1050.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.36%)</title><rect x="1047.7" y="339.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1050.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.36%)</title><rect x="1047.7" y="323.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1050.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.36%)</title><rect x="1047.7" y="307.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1050.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.36%)</title><rect x="1047.7" y="291.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1050.7" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.36%)</title><rect x="1047.7" y="275.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1050.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.36%)</title><rect x="1047.7" y="259.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1050.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.36%)</title><rect x="1047.7" y="243.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1050.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5 samples, 0.36%)</title><rect x="1047.7" y="227.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1050.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.36%)</title><rect x="1047.7" y="211.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1050.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.36%)</title><rect x="1047.7" y="195.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1050.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (5 samples, 0.36%)</title><rect x="1047.7" y="179.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1050.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.36%)</title><rect x="1047.7" y="163.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1050.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.36%)</title><rect x="1047.7" y="147.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1050.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.07%)</title><rect x="1047.7" y="131.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1050.7" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.07%)</title><rect x="1047.7" y="115.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1050.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.29%)</title><rect x="1048.5" y="131.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1051.5" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.07%)</title><rect x="1048.5" y="115.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1051.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.14%)</title><rect x="1049.4" y="115.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1052.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.14%)</title><rect x="1049.4" y="99.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1052.4" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.14%)</title><rect x="1049.4" y="83.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1052.4" y="94.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.14%)</title><rect x="1049.4" y="67.0" width="1.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1052.4" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="1051.1" y="115.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1054.1" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="1051.1" y="99.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1054.1" y="110.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="1051.1" y="83.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1054.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (3 samples, 0.22%)</title><rect x="1051.9" y="387.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1054.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (3 samples, 0.22%)</title><rect x="1051.9" y="371.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1054.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (3 samples, 0.22%)</title><rect x="1051.9" y="355.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1054.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (3 samples, 0.22%)</title><rect x="1051.9" y="339.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1054.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (3 samples, 0.22%)</title><rect x="1051.9" y="323.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1054.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (3 samples, 0.22%)</title><rect x="1051.9" y="307.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1054.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.22%)</title><rect x="1051.9" y="291.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1054.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.22%)</title><rect x="1051.9" y="275.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1054.9" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.22%)</title><rect x="1051.9" y="259.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1054.9" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.22%)</title><rect x="1051.9" y="243.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1054.9" y="254.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.22%)</title><rect x="1051.9" y="227.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1054.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.07%)</title><rect x="1053.6" y="211.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1056.6" y="222.0"></text>
</g>
<g>
<title>[pool-3-thread-8 tid=18656] (160 samples, 11.49%)</title><rect x="1054.5" y="547.0" width="135.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1057.5" y="558.0">[pool-3-thread-8 ..</text>
</g>
<g>
<title>java/lang/Thread.run (160 samples, 11.49%)</title><rect x="1054.5" y="531.0" width="135.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1057.5" y="542.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (160 samples, 11.49%)</title><rect x="1054.5" y="515.0" width="135.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1057.5" y="526.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (160 samples, 11.49%)</title><rect x="1054.5" y="499.0" width="135.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1057.5" y="510.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.29%)</title><rect x="1054.5" y="483.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1057.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.22%)</title><rect x="1054.5" y="467.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1057.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.22%)</title><rect x="1054.5" y="451.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1057.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="1056.2" y="435.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1059.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="1056.2" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1059.2" y="430.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.07%)</title><rect x="1056.2" y="403.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1059.2" y="414.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="1056.2" y="387.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1059.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.07%)</title><rect x="1057.0" y="467.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1060.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.run (156 samples, 11.20%)</title><rect x="1057.9" y="483.0" width="132.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1060.9" y="494.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (156 samples, 11.20%)</title><rect x="1057.9" y="467.0" width="132.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1060.9" y="478.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (156 samples, 11.20%)</title><rect x="1057.9" y="451.0" width="132.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1060.9" y="462.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.07%)</title><rect x="1057.9" y="435.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1060.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.07%)</title><rect x="1057.9" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1060.9" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="1057.9" y="403.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1060.9" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.07%)</title><rect x="1057.9" y="387.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1060.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.07%)</title><rect x="1057.9" y="371.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1060.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.07%)</title><rect x="1057.9" y="355.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1060.9" y="366.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.07%)</title><rect x="1057.9" y="339.0" width="0.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1060.9" y="350.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.07%)</title><rect x="1057.9" y="323.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1060.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (155 samples, 11.13%)</title><rect x="1058.7" y="435.0" width="131.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1061.7" y="446.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (4 samples, 0.29%)</title><rect x="1058.7" y="419.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1061.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (4 samples, 0.29%)</title><rect x="1058.7" y="403.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1061.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3 samples, 0.22%)</title><rect x="1059.5" y="387.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1062.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3 samples, 0.22%)</title><rect x="1059.5" y="371.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1062.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.22%)</title><rect x="1059.5" y="355.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1062.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.22%)</title><rect x="1059.5" y="339.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1062.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.22%)</title><rect x="1059.5" y="323.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1062.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.22%)</title><rect x="1059.5" y="307.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1062.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3 samples, 0.22%)</title><rect x="1059.5" y="291.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1062.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 0.22%)</title><rect x="1059.5" y="275.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1062.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.22%)</title><rect x="1059.5" y="259.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1062.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.22%)</title><rect x="1059.5" y="243.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1062.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.22%)</title><rect x="1059.5" y="227.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1062.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.22%)</title><rect x="1059.5" y="211.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1062.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.22%)</title><rect x="1059.5" y="195.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1062.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (3 samples, 0.22%)</title><rect x="1059.5" y="179.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1062.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.14%)</title><rect x="1059.5" y="163.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1062.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.14%)</title><rect x="1059.5" y="147.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1062.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.14%)</title><rect x="1059.5" y="131.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1062.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.07%)</title><rect x="1059.5" y="115.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1062.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="1059.5" y="99.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1062.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.07%)</title><rect x="1059.5" y="83.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1062.5" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.07%)</title><rect x="1060.4" y="115.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1063.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.07%)</title><rect x="1060.4" y="99.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1063.4" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.07%)</title><rect x="1061.2" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.07%)</title><rect x="1061.2" y="147.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1064.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.07%)</title><rect x="1061.2" y="131.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.07%)</title><rect x="1061.2" y="115.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1064.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.07%)</title><rect x="1061.2" y="99.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1064.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="1061.2" y="83.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1064.2" y="94.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.07%)</title><rect x="1061.2" y="67.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1064.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (151 samples, 10.84%)</title><rect x="1062.1" y="419.0" width="127.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1065.1" y="430.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (151 samples, 10.84%)</title><rect x="1062.1" y="403.0" width="127.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1065.1" y="414.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.14%)</title><rect x="1062.1" y="387.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1065.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.14%)</title><rect x="1062.1" y="371.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1065.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.14%)</title><rect x="1062.1" y="355.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1065.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (147 samples, 10.55%)</title><rect x="1063.8" y="387.0" width="124.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1066.8" y="398.0">ru/mail/polis/d..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (9 samples, 0.65%)</title><rect x="1063.8" y="371.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1066.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (9 samples, 0.65%)</title><rect x="1063.8" y="355.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1066.8" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (9 samples, 0.65%)</title><rect x="1063.8" y="339.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1066.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (9 samples, 0.65%)</title><rect x="1063.8" y="323.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1066.8" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (1 samples, 0.07%)</title><rect x="1063.8" y="307.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1066.8" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.07%)</title><rect x="1063.8" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1066.8" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8 samples, 0.57%)</title><rect x="1064.6" y="307.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1067.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8 samples, 0.57%)</title><rect x="1064.6" y="291.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1067.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.57%)</title><rect x="1064.6" y="275.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1067.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.57%)</title><rect x="1064.6" y="259.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1067.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (8 samples, 0.57%)</title><rect x="1064.6" y="243.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1067.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (8 samples, 0.57%)</title><rect x="1064.6" y="227.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1067.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (8 samples, 0.57%)</title><rect x="1064.6" y="211.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1067.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (8 samples, 0.57%)</title><rect x="1064.6" y="195.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1067.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.14%)</title><rect x="1064.6" y="179.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1067.6" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.07%)</title><rect x="1064.6" y="163.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1067.6" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1064.6" y="147.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1067.6" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1064.6" y="131.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1067.6" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1064.6" y="115.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1067.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.07%)</title><rect x="1064.6" y="99.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1067.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.07%)</title><rect x="1064.6" y="83.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1067.6" y="94.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.07%)</title><rect x="1064.6" y="67.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1067.6" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.07%)</title><rect x="1065.5" y="163.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1068.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.07%)</title><rect x="1065.5" y="147.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1068.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.07%)</title><rect x="1065.5" y="131.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1068.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.07%)</title><rect x="1065.5" y="115.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1068.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.07%)</title><rect x="1065.5" y="99.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1068.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.07%)</title><rect x="1065.5" y="83.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1068.5" y="94.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.07%)</title><rect x="1065.5" y="67.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1068.5" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.43%)</title><rect x="1066.3" y="179.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1069.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.43%)</title><rect x="1066.3" y="163.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1069.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.36%)</title><rect x="1066.3" y="147.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1069.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.29%)</title><rect x="1066.3" y="131.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1069.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.29%)</title><rect x="1066.3" y="115.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1069.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.29%)</title><rect x="1066.3" y="99.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1069.3" y="110.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.29%)</title><rect x="1066.3" y="83.0" width="3.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1069.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.07%)</title><rect x="1069.7" y="131.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1072.7" y="142.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="1069.7" y="115.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1072.7" y="126.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="1069.7" y="99.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1072.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.07%)</title><rect x="1070.6" y="147.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1073.6" y="158.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="1070.6" y="131.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1073.6" y="142.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (135 samples, 9.69%)</title><rect x="1071.4" y="371.0" width="114.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1074.4" y="382.0">java/util/Coll..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (135 samples, 9.69%)</title><rect x="1071.4" y="355.0" width="114.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1074.4" y="366.0">java/lang/Iter..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$83/1445426015.accept (135 samples, 9.69%)</title><rect x="1071.4" y="339.0" width="114.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1074.4" y="350.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (135 samples, 9.69%)</title><rect x="1071.4" y="323.0" width="114.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1074.4" y="334.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (135 samples, 9.69%)</title><rect x="1071.4" y="307.0" width="114.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1074.4" y="318.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (135 samples, 9.69%)</title><rect x="1071.4" y="291.0" width="114.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1074.4" y="302.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (135 samples, 9.69%)</title><rect x="1071.4" y="275.0" width="114.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1074.4" y="286.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.14%)</title><rect x="1071.4" y="259.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1074.4" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.14%)</title><rect x="1071.4" y="243.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1074.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (133 samples, 9.55%)</title><rect x="1073.1" y="259.0" width="112.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1076.1" y="270.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (50 samples, 3.59%)</title><rect x="1073.1" y="243.0" width="42.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1076.1" y="254.0">ru/m..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.14%)</title><rect x="1073.1" y="227.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1076.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (48 samples, 3.45%)</title><rect x="1074.8" y="227.0" width="40.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1077.8" y="238.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (48 samples, 3.45%)</title><rect x="1074.8" y="211.0" width="40.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1077.8" y="222.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.07%)</title><rect x="1077.3" y="195.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1080.3" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.07%)</title><rect x="1077.3" y="179.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1080.3" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.07%)</title><rect x="1077.3" y="163.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1080.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (38 samples, 2.73%)</title><rect x="1078.2" y="195.0" width="32.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1081.2" y="206.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.14%)</title><rect x="1078.2" y="179.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1081.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (28 samples, 2.01%)</title><rect x="1079.9" y="179.0" width="23.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1082.9" y="190.0">s..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.07%)</title><rect x="1079.9" y="163.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1082.9" y="174.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.07%)</title><rect x="1079.9" y="147.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1082.9" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.07%)</title><rect x="1079.9" y="131.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1082.9" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.07%)</title><rect x="1079.9" y="115.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1082.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (27 samples, 1.94%)</title><rect x="1080.7" y="163.0" width="22.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1083.7" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (27 samples, 1.94%)</title><rect x="1080.7" y="147.0" width="22.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1083.7" y="158.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.07%)</title><rect x="1080.7" y="131.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1083.7" y="142.0"></text>
</g>
<g>
<title>__pread (26 samples, 1.87%)</title><rect x="1081.6" y="131.0" width="22.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1084.6" y="142.0">_..</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.57%)</title><rect x="1103.6" y="179.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1106.6" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.14%)</title><rect x="1104.4" y="163.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1107.4" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.14%)</title><rect x="1104.4" y="147.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1107.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (5 samples, 0.36%)</title><rect x="1106.1" y="163.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1109.1" y="174.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.07%)</title><rect x="1108.7" y="147.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1111.7" y="158.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.07%)</title><rect x="1108.7" y="131.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1111.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (1 samples, 0.07%)</title><rect x="1109.5" y="147.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1112.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.36%)</title><rect x="1110.4" y="195.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1113.4" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="1112.1" y="179.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1115.1" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="1112.1" y="163.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1115.1" y="174.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.07%)</title><rect x="1112.1" y="147.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1115.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.14%)</title><rect x="1112.9" y="179.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1115.9" y="190.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.07%)</title><rect x="1113.8" y="163.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1116.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.07%)</title><rect x="1114.6" y="195.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.6" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="1114.6" y="179.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1117.6" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="1114.6" y="163.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1117.6" y="174.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.07%)</title><rect x="1114.6" y="147.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1117.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (83 samples, 5.96%)</title><rect x="1115.5" y="243.0" width="70.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1118.5" y="254.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (83 samples, 5.96%)</title><rect x="1115.5" y="227.0" width="70.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1118.5" y="238.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.36%)</title><rect x="1115.5" y="211.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1118.5" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.36%)</title><rect x="1115.5" y="195.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1118.5" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.14%)</title><rect x="1118.0" y="179.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1121.0" y="190.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.14%)</title><rect x="1118.0" y="163.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1121.0" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.14%)</title><rect x="1118.0" y="147.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1121.0" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="1118.8" y="131.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1121.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (67 samples, 4.81%)</title><rect x="1119.7" y="211.0" width="56.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.7" y="222.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.50%)</title><rect x="1120.5" y="195.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1123.5" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.22%)</title><rect x="1123.1" y="179.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1126.1" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.07%)</title><rect x="1123.1" y="163.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1126.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.14%)</title><rect x="1123.9" y="163.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1126.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.14%)</title><rect x="1123.9" y="147.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1126.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.14%)</title><rect x="1123.9" y="131.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1126.9" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.07%)</title><rect x="1125.6" y="179.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (54 samples, 3.88%)</title><rect x="1126.5" y="195.0" width="45.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.5" y="206.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (53 samples, 3.80%)</title><rect x="1127.3" y="179.0" width="44.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1130.3" y="190.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (53 samples, 3.80%)</title><rect x="1127.3" y="163.0" width="44.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1130.3" y="174.0">sun/..</text>
</g>
<g>
<title>__pread (44 samples, 3.16%)</title><rect x="1129.9" y="147.0" width="37.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1132.9" y="158.0">__p..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.22%)</title><rect x="1167.1" y="147.0" width="2.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1170.1" y="158.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.14%)</title><rect x="1169.7" y="147.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1172.7" y="158.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.07%)</title><rect x="1171.4" y="147.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1174.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.14%)</title><rect x="1172.2" y="195.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1175.2" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.14%)</title><rect x="1172.2" y="179.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1175.2" y="190.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="1173.1" y="163.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1176.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.22%)</title><rect x="1173.9" y="195.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1176.9" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.22%)</title><rect x="1173.9" y="179.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1176.9" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.14%)</title><rect x="1173.9" y="163.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1176.9" y="174.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="1175.6" y="163.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1178.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (10 samples, 0.72%)</title><rect x="1176.4" y="211.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1179.4" y="222.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="1179.8" y="195.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.8" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="1179.8" y="179.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.8" y="190.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.07%)</title><rect x="1179.8" y="163.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1182.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.36%)</title><rect x="1180.7" y="195.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1183.7" y="206.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.07%)</title><rect x="1181.5" y="179.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1184.5" y="190.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.22%)</title><rect x="1182.4" y="179.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.4" y="190.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (2 samples, 0.14%)</title><rect x="1183.2" y="163.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.07%)</title><rect x="1184.9" y="211.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1187.9" y="222.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="1184.9" y="195.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.9" y="206.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.07%)</title><rect x="1184.9" y="179.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.22%)</title><rect x="1185.8" y="371.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1188.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.22%)</title><rect x="1185.8" y="355.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1188.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.22%)</title><rect x="1185.8" y="339.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.22%)</title><rect x="1185.8" y="323.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.8" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.22%)</title><rect x="1185.8" y="307.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3 samples, 0.22%)</title><rect x="1185.8" y="291.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1188.8" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 0.22%)</title><rect x="1185.8" y="275.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1188.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.22%)</title><rect x="1185.8" y="259.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1188.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.22%)</title><rect x="1185.8" y="243.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.22%)</title><rect x="1185.8" y="227.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1188.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.22%)</title><rect x="1185.8" y="211.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.22%)</title><rect x="1185.8" y="195.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1188.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (3 samples, 0.22%)</title><rect x="1185.8" y="179.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1188.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.22%)</title><rect x="1185.8" y="163.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1188.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.22%)</title><rect x="1185.8" y="147.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1188.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.07%)</title><rect x="1185.8" y="131.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1188.8" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.07%)</title><rect x="1185.8" y="115.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1188.8" y="126.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.07%)</title><rect x="1185.8" y="99.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1188.8" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.14%)</title><rect x="1186.6" y="131.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1189.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.14%)</title><rect x="1186.6" y="115.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1189.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.14%)</title><rect x="1186.6" y="99.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1189.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.14%)</title><rect x="1186.6" y="83.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1189.6" y="94.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.07%)</title><rect x="1187.5" y="67.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1190.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (2 samples, 0.14%)</title><rect x="1188.3" y="387.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (1 samples, 0.07%)</title><rect x="1188.3" y="371.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1188.3" y="355.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1188.3" y="339.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (1 samples, 0.07%)</title><rect x="1188.3" y="323.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1191.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (1 samples, 0.07%)</title><rect x="1188.3" y="307.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1191.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (1 samples, 0.07%)</title><rect x="1188.3" y="291.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.07%)</title><rect x="1188.3" y="275.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.3" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="1188.3" y="259.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1191.3" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="1188.3" y="243.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1191.3" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.07%)</title><rect x="1188.3" y="227.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.3" y="238.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.07%)</title><rect x="1188.3" y="211.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (1 samples, 0.07%)</title><rect x="1189.2" y="371.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1192.2" y="382.0"></text>
</g>
</g>
</svg>
