<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="742" onload="init(evt)" viewBox="0 0 1200 742" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="725"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="725"> </text>
<g id="frames">
<g>
<title>all (3,553 samples, 100.00%)</title><rect x="10.0" y="691.0" width="1180.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="702.0">all</text>
</g>
<g>
<title>[C2 CompilerThre tid=117845] (14 samples, 0.39%)</title><rect x="10.0" y="675.0" width="4.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>start_thread (14 samples, 0.39%)</title><rect x="10.0" y="659.0" width="4.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (14 samples, 0.39%)</title><rect x="10.0" y="643.0" width="4.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>Thread::call_run() (14 samples, 0.39%)</title><rect x="10.0" y="627.0" width="4.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (14 samples, 0.39%)</title><rect x="10.0" y="611.0" width="4.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (14 samples, 0.39%)</title><rect x="10.0" y="595.0" width="4.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (14 samples, 0.39%)</title><rect x="10.0" y="579.0" width="4.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (14 samples, 0.39%)</title><rect x="10.0" y="563.0" width="4.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (14 samples, 0.39%)</title><rect x="10.0" y="547.0" width="4.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (8 samples, 0.23%)</title><rect x="10.0" y="531.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.03%)</title><rect x="10.0" y="515.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.03%)</title><rect x="10.0" y="499.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.03%)</title><rect x="10.0" y="483.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.03%)</title><rect x="10.3" y="515.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.3" y="526.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.03%)</title><rect x="10.3" y="499.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.3" y="510.0"></text>
</g>
<g>
<title>MachTypeNode::bottom_type() const (1 samples, 0.03%)</title><rect x="10.3" y="483.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.3" y="494.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (6 samples, 0.17%)</title><rect x="10.7" y="515.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.7" y="526.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.03%)</title><rect x="11.0" y="499.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="14.0" y="510.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.03%)</title><rect x="11.3" y="499.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="14.3" y="510.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.03%)</title><rect x="11.7" y="499.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.7" y="510.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.03%)</title><rect x="11.7" y="483.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="14.7" y="494.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.03%)</title><rect x="11.7" y="467.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="14.7" y="478.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.03%)</title><rect x="12.0" y="499.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.0" y="510.0"></text>
</g>
<g>
<title>loadConINode::ideal_Opcode() const (1 samples, 0.03%)</title><rect x="12.3" y="499.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="15.3" y="510.0"></text>
</g>
<g>
<title>Compile::Optimize() (5 samples, 0.14%)</title><rect x="12.7" y="531.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="15.7" y="542.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) (2 samples, 0.06%)</title><rect x="12.7" y="515.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="15.7" y="526.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.06%)</title><rect x="12.7" y="499.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.7" y="510.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.03%)</title><rect x="12.7" y="483.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.7" y="494.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.03%)</title><rect x="12.7" y="467.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.7" y="478.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%)</title><rect x="12.7" y="451.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="15.7" y="462.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.03%)</title><rect x="13.0" y="483.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.0" y="494.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.03%)</title><rect x="13.3" y="515.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="16.3" y="526.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.03%)</title><rect x="13.3" y="499.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="16.3" y="510.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="13.3" y="483.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="16.3" y="494.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.03%)</title><rect x="13.3" y="467.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="16.3" y="478.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.06%)</title><rect x="13.7" y="515.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.7" y="526.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.03%)</title><rect x="13.7" y="499.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="16.7" y="510.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.03%)</title><rect x="14.0" y="499.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="17.0" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="14.3" y="531.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="17.3" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="14.3" y="515.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.3" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="14.3" y="499.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="17.3" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="14.3" y="483.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="17.3" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="14.3" y="467.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="17.3" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="14.3" y="451.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.3" y="462.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="14.3" y="435.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.3" y="446.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="14.3" y="419.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="17.3" y="430.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="14.3" y="403.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="17.3" y="414.0"></text>
</g>
<g>
<title>InlineTree::should_inline(ciMethod*, ciMethod*, int, ciCallProfile&amp;, WarmCallInfo*) (1 samples, 0.03%)</title><rect x="14.3" y="387.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="17.3" y="398.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.03%)</title><rect x="14.3" y="371.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="17.3" y="382.0"></text>
</g>
<g>
<title>[GC Thread#0 tid=117836] (3 samples, 0.08%)</title><rect x="14.6" y="675.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="17.6" y="686.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.08%)</title><rect x="14.6" y="659.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="17.6" y="670.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.08%)</title><rect x="14.6" y="643.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="17.6" y="654.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.08%)</title><rect x="14.6" y="627.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="17.6" y="638.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.08%)</title><rect x="14.6" y="611.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="17.6" y="622.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (3 samples, 0.08%)</title><rect x="14.6" y="595.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="17.6" y="606.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.06%)</title><rect x="14.6" y="579.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="17.6" y="590.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.06%)</title><rect x="14.6" y="563.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="17.6" y="574.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="15.3" y="579.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="18.3" y="590.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (1 samples, 0.03%)</title><rect x="15.3" y="563.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="18.3" y="574.0"></text>
</g>
<g>
<title>G1ParCopyHelper::trim_queue_partially() (1 samples, 0.03%)</title><rect x="15.3" y="547.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="18.3" y="558.0"></text>
</g>
<g>
<title>[GC Thread#1 tid=117894] (2 samples, 0.06%)</title><rect x="15.6" y="675.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="18.6" y="686.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.06%)</title><rect x="15.6" y="659.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="18.6" y="670.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.06%)</title><rect x="15.6" y="643.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="18.6" y="654.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.06%)</title><rect x="15.6" y="627.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="18.6" y="638.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.06%)</title><rect x="15.6" y="611.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="18.6" y="622.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.06%)</title><rect x="15.6" y="595.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="18.6" y="606.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.03%)</title><rect x="15.6" y="579.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="18.6" y="590.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="15.6" y="563.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="18.6" y="574.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="16.0" y="579.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="19.0" y="590.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="16.0" y="563.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="19.0" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.03%)</title><rect x="16.0" y="547.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="19.0" y="558.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (1 samples, 0.03%)</title><rect x="16.0" y="531.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="19.0" y="542.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.03%)</title><rect x="16.0" y="515.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="19.0" y="526.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.03%)</title><rect x="16.0" y="499.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="19.0" y="510.0"></text>
</g>
<g>
<title>[GC Thread#2 tid=117895] (2 samples, 0.06%)</title><rect x="16.3" y="675.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="19.3" y="686.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.06%)</title><rect x="16.3" y="659.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="19.3" y="670.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.06%)</title><rect x="16.3" y="643.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="19.3" y="654.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.06%)</title><rect x="16.3" y="627.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="19.3" y="638.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.06%)</title><rect x="16.3" y="611.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="19.3" y="622.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.06%)</title><rect x="16.3" y="595.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="19.3" y="606.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.06%)</title><rect x="16.3" y="579.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="19.3" y="590.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.06%)</title><rect x="16.3" y="563.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="19.3" y="574.0"></text>
</g>
<g>
<title>[GC Thread#3 tid=117896] (2 samples, 0.06%)</title><rect x="17.0" y="675.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="20.0" y="686.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.06%)</title><rect x="17.0" y="659.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="20.0" y="670.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.06%)</title><rect x="17.0" y="643.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="20.0" y="654.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.06%)</title><rect x="17.0" y="627.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="20.0" y="638.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.06%)</title><rect x="17.0" y="611.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="20.0" y="622.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.06%)</title><rect x="17.0" y="595.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="20.0" y="606.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.06%)</title><rect x="17.0" y="579.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="20.0" y="590.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.06%)</title><rect x="17.0" y="563.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="20.0" y="574.0"></text>
</g>
<g>
<title>[GC Thread#4 tid=117897] (2 samples, 0.06%)</title><rect x="17.6" y="675.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="20.6" y="686.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.06%)</title><rect x="17.6" y="659.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="20.6" y="670.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.06%)</title><rect x="17.6" y="643.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="20.6" y="654.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.06%)</title><rect x="17.6" y="627.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="20.6" y="638.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.06%)</title><rect x="17.6" y="611.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="20.6" y="622.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.06%)</title><rect x="17.6" y="595.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="20.6" y="606.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.06%)</title><rect x="17.6" y="579.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="20.6" y="590.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.06%)</title><rect x="17.6" y="563.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="20.6" y="574.0"></text>
</g>
<g>
<title>[GC Thread#5 tid=117898] (2 samples, 0.06%)</title><rect x="18.3" y="675.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="21.3" y="686.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.06%)</title><rect x="18.3" y="659.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="21.3" y="670.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.06%)</title><rect x="18.3" y="643.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="21.3" y="654.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.06%)</title><rect x="18.3" y="627.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="21.3" y="638.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.06%)</title><rect x="18.3" y="611.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="21.3" y="622.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.06%)</title><rect x="18.3" y="595.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="21.3" y="606.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.06%)</title><rect x="18.3" y="579.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="21.3" y="590.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.03%)</title><rect x="18.3" y="563.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="21.3" y="574.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="18.6" y="563.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="21.6" y="574.0"></text>
</g>
<g>
<title>[GC Thread#6 tid=117899] (2 samples, 0.06%)</title><rect x="19.0" y="675.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="22.0" y="686.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.06%)</title><rect x="19.0" y="659.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="22.0" y="670.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.06%)</title><rect x="19.0" y="643.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="22.0" y="654.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.06%)</title><rect x="19.0" y="627.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="22.0" y="638.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.06%)</title><rect x="19.0" y="611.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="22.0" y="622.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.06%)</title><rect x="19.0" y="595.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="22.0" y="606.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.06%)</title><rect x="19.0" y="579.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="22.0" y="590.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.06%)</title><rect x="19.0" y="563.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="22.0" y="574.0"></text>
</g>
<g>
<title>[GC Thread#7 tid=117900] (4 samples, 0.11%)</title><rect x="19.6" y="675.0" width="1.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="22.6" y="686.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.11%)</title><rect x="19.6" y="659.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="22.6" y="670.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.11%)</title><rect x="19.6" y="643.0" width="1.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="22.6" y="654.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.11%)</title><rect x="19.6" y="627.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="22.6" y="638.0"></text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 0.11%)</title><rect x="19.6" y="611.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="22.6" y="622.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (4 samples, 0.11%)</title><rect x="19.6" y="595.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="22.6" y="606.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (4 samples, 0.11%)</title><rect x="19.6" y="579.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="22.6" y="590.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.11%)</title><rect x="19.6" y="563.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="22.6" y="574.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=117865] (17 samples, 0.48%)</title><rect x="21.0" y="675.0" width="5.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="24.0" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.06%)</title><rect x="21.0" y="659.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="24.0" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.06%)</title><rect x="21.0" y="643.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="24.0" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.06%)</title><rect x="21.0" y="627.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="24.0" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.06%)</title><rect x="21.0" y="611.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="24.0" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.03%)</title><rect x="21.3" y="595.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="24.3" y="606.0"></text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.03%)</title><rect x="21.6" y="659.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="24.6" y="670.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14 samples, 0.39%)</title><rect x="22.0" y="659.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.0" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.08%)</title><rect x="22.3" y="643.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.3" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.08%)</title><rect x="22.3" y="627.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.3" y="638.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.08%)</title><rect x="22.3" y="611.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="25.3" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (10 samples, 0.28%)</title><rect x="23.3" y="643.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.3" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="23.3" y="627.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="26.3" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="23.3" y="611.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="26.3" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.03%)</title><rect x="23.3" y="595.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="26.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9 samples, 0.25%)</title><rect x="23.6" y="627.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6 samples, 0.17%)</title><rect x="23.6" y="611.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5 samples, 0.14%)</title><rect x="23.6" y="595.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="26.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5 samples, 0.14%)</title><rect x="23.6" y="579.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="26.6" y="590.0"></text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (5 samples, 0.14%)</title><rect x="23.6" y="563.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (5 samples, 0.14%)</title><rect x="23.6" y="547.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.6" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (5 samples, 0.14%)</title><rect x="23.6" y="531.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="26.6" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (5 samples, 0.14%)</title><rect x="23.6" y="515.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.6" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (5 samples, 0.14%)</title><rect x="23.6" y="499.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.6" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (5 samples, 0.14%)</title><rect x="23.6" y="483.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.6" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (5 samples, 0.14%)</title><rect x="23.6" y="467.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.6" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (5 samples, 0.14%)</title><rect x="23.6" y="451.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.6" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (4 samples, 0.11%)</title><rect x="23.9" y="435.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.9" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (4 samples, 0.11%)</title><rect x="23.9" y="419.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.9" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (4 samples, 0.11%)</title><rect x="23.9" y="403.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.9" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (2 samples, 0.06%)</title><rect x="23.9" y="387.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.9" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (2 samples, 0.06%)</title><rect x="23.9" y="371.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.9" y="382.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (2 samples, 0.06%)</title><rect x="23.9" y="355.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.9" y="366.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (2 samples, 0.06%)</title><rect x="23.9" y="339.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.9" y="350.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (2 samples, 0.06%)</title><rect x="23.9" y="323.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.9" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (2 samples, 0.06%)</title><rect x="23.9" y="307.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.9" y="318.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (2 samples, 0.06%)</title><rect x="23.9" y="291.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.9" y="302.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (2 samples, 0.06%)</title><rect x="23.9" y="275.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.9" y="286.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (2 samples, 0.06%)</title><rect x="23.9" y="259.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="26.9" y="270.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.03%)</title><rect x="24.3" y="243.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="27.3" y="254.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.03%)</title><rect x="24.3" y="227.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="27.3" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.06%)</title><rect x="24.6" y="387.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.6" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.03%)</title><rect x="24.6" y="371.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="27.6" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.03%)</title><rect x="24.6" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="24.6" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="27.6" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="24.6" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.6" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="24.6" y="307.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.6" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="24.6" y="291.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.6" y="302.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="24.6" y="275.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="27.6" y="286.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="24.6" y="259.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="27.6" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (1 samples, 0.03%)</title><rect x="24.9" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.9" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="24.9" y="355.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.03%)</title><rect x="24.9" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.03%)</title><rect x="24.9" y="323.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.9" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="24.9" y="307.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="25.3" y="595.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.3" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (3 samples, 0.08%)</title><rect x="25.6" y="611.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.6" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.06%)</title><rect x="25.6" y="595.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.6" y="606.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.06%)</title><rect x="25.6" y="579.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="28.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.03%)</title><rect x="26.3" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="29.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.03%)</title><rect x="26.3" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="29.3" y="590.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=117866] (15 samples, 0.42%)</title><rect x="26.6" y="675.0" width="5.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="29.6" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="26.6" y="659.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="29.6" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="26.6" y="643.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="29.6" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.03%)</title><rect x="26.6" y="627.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="29.6" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="26.6" y="611.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="29.6" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.03%)</title><rect x="26.6" y="595.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="29.6" y="606.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14 samples, 0.39%)</title><rect x="26.9" y="659.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="29.9" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.08%)</title><rect x="26.9" y="643.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="29.9" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.08%)</title><rect x="26.9" y="627.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="29.9" y="638.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.06%)</title><rect x="27.3" y="611.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="30.3" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (11 samples, 0.31%)</title><rect x="27.9" y="643.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.9" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.08%)</title><rect x="27.9" y="627.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="30.9" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.08%)</title><rect x="27.9" y="611.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="30.9" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.08%)</title><rect x="27.9" y="595.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="30.9" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.06%)</title><rect x="28.3" y="579.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="31.3" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8 samples, 0.23%)</title><rect x="28.9" y="627.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6 samples, 0.17%)</title><rect x="28.9" y="611.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="31.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5 samples, 0.14%)</title><rect x="29.3" y="595.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5 samples, 0.14%)</title><rect x="29.3" y="579.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.3" y="590.0"></text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (4 samples, 0.11%)</title><rect x="29.3" y="563.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (4 samples, 0.11%)</title><rect x="29.3" y="547.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.3" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (4 samples, 0.11%)</title><rect x="29.3" y="531.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="32.3" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (4 samples, 0.11%)</title><rect x="29.3" y="515.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.3" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (4 samples, 0.11%)</title><rect x="29.3" y="499.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.3" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (4 samples, 0.11%)</title><rect x="29.3" y="483.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.3" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (4 samples, 0.11%)</title><rect x="29.3" y="467.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.3" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (4 samples, 0.11%)</title><rect x="29.3" y="451.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.3" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (4 samples, 0.11%)</title><rect x="29.3" y="435.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.3" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (4 samples, 0.11%)</title><rect x="29.3" y="419.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.3" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (4 samples, 0.11%)</title><rect x="29.3" y="403.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="32.3" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (3 samples, 0.08%)</title><rect x="29.3" y="387.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.3" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (3 samples, 0.08%)</title><rect x="29.3" y="371.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.3" y="382.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (3 samples, 0.08%)</title><rect x="29.3" y="355.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.3" y="366.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (3 samples, 0.08%)</title><rect x="29.3" y="339.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.3" y="350.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (2 samples, 0.06%)</title><rect x="29.3" y="323.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="32.3" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (2 samples, 0.06%)</title><rect x="29.3" y="307.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="32.3" y="318.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (2 samples, 0.06%)</title><rect x="29.3" y="291.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="32.3" y="302.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (2 samples, 0.06%)</title><rect x="29.3" y="275.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="32.3" y="286.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (2 samples, 0.06%)</title><rect x="29.3" y="259.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="32.3" y="270.0"></text>
</g>
<g>
<title>writeBytes (2 samples, 0.06%)</title><rect x="29.3" y="243.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="32.3" y="254.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.03%)</title><rect x="29.3" y="227.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="32.3" y="238.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.03%)</title><rect x="29.6" y="227.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="32.6" y="238.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.03%)</title><rect x="29.6" y="211.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="32.6" y="222.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (1 samples, 0.03%)</title><rect x="29.9" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.9" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.03%)</title><rect x="30.3" y="387.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.3" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.03%)</title><rect x="30.3" y="371.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.3" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.03%)</title><rect x="30.3" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="33.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="30.3" y="339.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.3" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="30.3" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="33.3" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="30.3" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.3" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="30.3" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.03%)</title><rect x="30.6" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.06%)</title><rect x="30.9" y="611.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.9" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.06%)</title><rect x="30.9" y="595.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.9" y="606.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.03%)</title><rect x="30.9" y="579.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="33.9" y="590.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="30.9" y="563.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="33.9" y="574.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="30.9" y="547.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="33.9" y="558.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (1 samples, 0.03%)</title><rect x="30.9" y="531.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="33.9" y="542.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.03%)</title><rect x="31.3" y="579.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="34.3" y="590.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=117867] (17 samples, 0.48%)</title><rect x="31.6" y="675.0" width="5.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="34.6" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.11%)</title><rect x="31.6" y="659.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="34.6" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.11%)</title><rect x="31.6" y="643.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="34.6" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (4 samples, 0.11%)</title><rect x="31.6" y="627.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="34.6" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (4 samples, 0.11%)</title><rect x="31.6" y="611.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="34.6" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.03%)</title><rect x="32.6" y="595.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="35.6" y="606.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (13 samples, 0.37%)</title><rect x="32.9" y="659.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="35.9" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.08%)</title><rect x="33.2" y="643.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="36.2" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.08%)</title><rect x="33.2" y="627.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="36.2" y="638.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.08%)</title><rect x="33.2" y="611.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="36.2" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (9 samples, 0.25%)</title><rect x="34.2" y="643.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="37.2" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="34.2" y="627.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="37.2" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="34.2" y="611.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="37.2" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="34.2" y="595.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="37.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8 samples, 0.23%)</title><rect x="34.6" y="627.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (7 samples, 0.20%)</title><rect x="34.6" y="611.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="37.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7 samples, 0.20%)</title><rect x="34.6" y="595.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="37.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7 samples, 0.20%)</title><rect x="34.6" y="579.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.6" y="590.0"></text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (7 samples, 0.20%)</title><rect x="34.6" y="563.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (7 samples, 0.20%)</title><rect x="34.6" y="547.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="37.6" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (7 samples, 0.20%)</title><rect x="34.6" y="531.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.6" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (7 samples, 0.20%)</title><rect x="34.6" y="515.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="37.6" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (7 samples, 0.20%)</title><rect x="34.6" y="499.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="37.6" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (6 samples, 0.17%)</title><rect x="34.6" y="483.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.6" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (6 samples, 0.17%)</title><rect x="34.6" y="467.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.6" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (6 samples, 0.17%)</title><rect x="34.6" y="451.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.6" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (6 samples, 0.17%)</title><rect x="34.6" y="435.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.6" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (6 samples, 0.17%)</title><rect x="34.6" y="419.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="37.6" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (6 samples, 0.17%)</title><rect x="34.6" y="403.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.6" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (3 samples, 0.08%)</title><rect x="34.6" y="387.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="37.6" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (3 samples, 0.08%)</title><rect x="34.6" y="371.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="37.6" y="382.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (3 samples, 0.08%)</title><rect x="34.6" y="355.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.6" y="366.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (3 samples, 0.08%)</title><rect x="34.6" y="339.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="37.6" y="350.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (3 samples, 0.08%)</title><rect x="34.6" y="323.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="37.6" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (3 samples, 0.08%)</title><rect x="34.6" y="307.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="37.6" y="318.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (3 samples, 0.08%)</title><rect x="34.6" y="291.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.6" y="302.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (3 samples, 0.08%)</title><rect x="34.6" y="275.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.6" y="286.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (3 samples, 0.08%)</title><rect x="34.6" y="259.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="37.6" y="270.0"></text>
</g>
<g>
<title>writeBytes (3 samples, 0.08%)</title><rect x="34.6" y="243.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="37.6" y="254.0"></text>
</g>
<g>
<title>__libc_write (3 samples, 0.08%)</title><rect x="34.6" y="227.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="37.6" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (3 samples, 0.08%)</title><rect x="35.6" y="387.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="38.6" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (3 samples, 0.08%)</title><rect x="35.6" y="371.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="38.6" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (3 samples, 0.08%)</title><rect x="35.6" y="355.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="38.6" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 0.06%)</title><rect x="35.9" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="38.9" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="35.9" y="323.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="38.9" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="35.9" y="307.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="38.9" y="318.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="35.9" y="291.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="38.9" y="302.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.03%)</title><rect x="36.2" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="39.2" y="334.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.03%)</title><rect x="36.2" y="307.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="39.2" y="318.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.03%)</title><rect x="36.2" y="291.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.2" y="302.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="36.6" y="483.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="39.6" y="494.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="36.6" y="467.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="39.6" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.03%)</title><rect x="36.9" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.9" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.03%)</title><rect x="36.9" y="595.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.9" y="606.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.03%)</title><rect x="36.9" y="579.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="39.9" y="590.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="36.9" y="563.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="39.9" y="574.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=117868] (15 samples, 0.42%)</title><rect x="37.2" y="675.0" width="5.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="40.2" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.14%)</title><rect x="37.2" y="659.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="40.2" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.14%)</title><rect x="37.2" y="643.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="40.2" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (5 samples, 0.14%)</title><rect x="37.2" y="627.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="40.2" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (5 samples, 0.14%)</title><rect x="37.2" y="611.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="40.2" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.03%)</title><rect x="38.6" y="595.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="41.6" y="606.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (10 samples, 0.28%)</title><rect x="38.9" y="659.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.9" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.03%)</title><rect x="39.2" y="643.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.2" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (8 samples, 0.23%)</title><rect x="39.6" y="643.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.6" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.06%)</title><rect x="39.6" y="627.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="42.6" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.06%)</title><rect x="39.6" y="611.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="42.6" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.06%)</title><rect x="39.6" y="595.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="42.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6 samples, 0.17%)</title><rect x="40.2" y="627.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5 samples, 0.14%)</title><rect x="40.2" y="611.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="43.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 0.08%)</title><rect x="40.2" y="595.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.08%)</title><rect x="40.2" y="579.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="43.2" y="590.0"></text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (3 samples, 0.08%)</title><rect x="40.2" y="563.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (3 samples, 0.08%)</title><rect x="40.2" y="547.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.2" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (3 samples, 0.08%)</title><rect x="40.2" y="531.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.2" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (3 samples, 0.08%)</title><rect x="40.2" y="515.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.2" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (3 samples, 0.08%)</title><rect x="40.2" y="499.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="43.2" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (3 samples, 0.08%)</title><rect x="40.2" y="483.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.2" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (3 samples, 0.08%)</title><rect x="40.2" y="467.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.2" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (3 samples, 0.08%)</title><rect x="40.2" y="451.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="43.2" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (3 samples, 0.08%)</title><rect x="40.2" y="435.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.2" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (3 samples, 0.08%)</title><rect x="40.2" y="419.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="43.2" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (3 samples, 0.08%)</title><rect x="40.2" y="403.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.2" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.03%)</title><rect x="40.2" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.2" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.03%)</title><rect x="40.2" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.2" y="382.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.03%)</title><rect x="40.2" y="355.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.2" y="366.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.03%)</title><rect x="40.2" y="339.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.2" y="350.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.03%)</title><rect x="40.2" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="43.2" y="334.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.03%)</title><rect x="40.2" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="43.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="40.2" y="291.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="43.2" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="40.2" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.2" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.03%)</title><rect x="40.2" y="259.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.2" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (2 samples, 0.06%)</title><rect x="40.6" y="387.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.6" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.03%)</title><rect x="40.6" y="371.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="43.6" y="382.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.03%)</title><rect x="40.6" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="43.6" y="366.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.03%)</title><rect x="40.6" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="43.6" y="350.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.03%)</title><rect x="40.6" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.6" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.03%)</title><rect x="40.6" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.6" y="318.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.03%)</title><rect x="40.6" y="291.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.6" y="302.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.03%)</title><rect x="40.6" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="43.6" y="286.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.03%)</title><rect x="40.6" y="259.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="43.6" y="270.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.03%)</title><rect x="40.6" y="243.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="43.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="40.9" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="43.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="40.9" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="43.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="40.9" y="339.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="40.9" y="323.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="43.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="40.9" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="43.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="40.9" y="291.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.9" y="302.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.03%)</title><rect x="40.9" y="275.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="43.9" y="286.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.03%)</title><rect x="40.9" y="259.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="43.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.06%)</title><rect x="41.2" y="595.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="44.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.03%)</title><rect x="41.2" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="44.2" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="41.2" y="563.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="44.2" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.03%)</title><rect x="41.2" y="547.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="44.2" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="41.2" y="531.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="44.2" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="41.2" y="515.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="44.2" y="526.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="41.2" y="499.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="44.2" y="510.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="41.2" y="483.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="44.2" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.03%)</title><rect x="41.6" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.03%)</title><rect x="41.9" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="44.9" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.03%)</title><rect x="41.9" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.9" y="606.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=117869] (16 samples, 0.45%)</title><rect x="42.2" y="675.0" width="5.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="45.2" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="42.2" y="659.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="45.2" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="42.2" y="643.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="45.2" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.03%)</title><rect x="42.2" y="627.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="45.2" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="42.2" y="611.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="45.2" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.03%)</title><rect x="42.2" y="595.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="45.2" y="606.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (15 samples, 0.42%)</title><rect x="42.5" y="659.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="45.5" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.03%)</title><rect x="42.9" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.9" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.03%)</title><rect x="42.9" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.9" y="638.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.03%)</title><rect x="42.9" y="611.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="45.9" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (13 samples, 0.37%)</title><rect x="43.2" y="643.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.2" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="43.2" y="627.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="46.2" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="43.2" y="611.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="46.2" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.03%)</title><rect x="43.2" y="595.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="46.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (12 samples, 0.34%)</title><rect x="43.5" y="627.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (11 samples, 0.31%)</title><rect x="43.5" y="611.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="46.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (11 samples, 0.31%)</title><rect x="43.5" y="595.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (11 samples, 0.31%)</title><rect x="43.5" y="579.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="46.5" y="590.0"></text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (11 samples, 0.31%)</title><rect x="43.5" y="563.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (11 samples, 0.31%)</title><rect x="43.5" y="547.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="46.5" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (10 samples, 0.28%)</title><rect x="43.5" y="531.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="46.5" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (10 samples, 0.28%)</title><rect x="43.5" y="515.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.5" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (10 samples, 0.28%)</title><rect x="43.5" y="499.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="46.5" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (10 samples, 0.28%)</title><rect x="43.5" y="483.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="46.5" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (10 samples, 0.28%)</title><rect x="43.5" y="467.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="46.5" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (10 samples, 0.28%)</title><rect x="43.5" y="451.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="46.5" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (9 samples, 0.25%)</title><rect x="43.5" y="435.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="46.5" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (9 samples, 0.25%)</title><rect x="43.5" y="419.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="46.5" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (9 samples, 0.25%)</title><rect x="43.5" y="403.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="46.5" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.03%)</title><rect x="43.5" y="387.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.5" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.03%)</title><rect x="43.5" y="371.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="46.5" y="382.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.03%)</title><rect x="43.5" y="355.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="46.5" y="366.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.03%)</title><rect x="43.5" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="46.5" y="350.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.03%)</title><rect x="43.5" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="46.5" y="334.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.03%)</title><rect x="43.5" y="307.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="46.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="43.5" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.5" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="43.5" y="275.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.5" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.03%)</title><rect x="43.5" y="259.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.5" y="270.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="43.5" y="243.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="46.5" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (6 samples, 0.17%)</title><rect x="43.9" y="387.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="46.9" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (6 samples, 0.17%)</title><rect x="43.9" y="371.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="46.9" y="382.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (6 samples, 0.17%)</title><rect x="43.9" y="355.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.9" y="366.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (6 samples, 0.17%)</title><rect x="43.9" y="339.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.9" y="350.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (5 samples, 0.14%)</title><rect x="43.9" y="323.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.9" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (5 samples, 0.14%)</title><rect x="43.9" y="307.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.9" y="318.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (5 samples, 0.14%)</title><rect x="43.9" y="291.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.9" y="302.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (5 samples, 0.14%)</title><rect x="43.9" y="275.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.9" y="286.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (3 samples, 0.08%)</title><rect x="44.5" y="259.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="47.5" y="270.0"></text>
</g>
<g>
<title>writeBytes (3 samples, 0.08%)</title><rect x="44.5" y="243.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="47.5" y="254.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.03%)</title><rect x="44.5" y="227.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="47.5" y="238.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.03%)</title><rect x="44.9" y="227.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="47.9" y="238.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.03%)</title><rect x="45.2" y="227.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="48.2" y="238.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.03%)</title><rect x="45.2" y="211.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="48.2" y="222.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (1 samples, 0.03%)</title><rect x="45.5" y="323.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.5" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.06%)</title><rect x="45.9" y="387.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.9" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.03%)</title><rect x="45.9" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.9" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.03%)</title><rect x="45.9" y="355.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.9" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.03%)</title><rect x="45.9" y="339.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.9" y="350.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.03%)</title><rect x="45.9" y="323.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.9" y="334.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.03%)</title><rect x="45.9" y="307.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.9" y="318.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.03%)</title><rect x="45.9" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.9" y="302.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (1 samples, 0.03%)</title><rect x="45.9" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.9" y="286.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (1 samples, 0.03%)</title><rect x="45.9" y="259.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.9" y="270.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.03%)</title><rect x="45.9" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.9" y="254.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.03%)</title><rect x="45.9" y="227.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.9" y="238.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="45.9" y="211.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="48.9" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (1 samples, 0.03%)</title><rect x="46.2" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.2" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="46.2" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="49.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.03%)</title><rect x="46.2" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.03%)</title><rect x="46.2" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.2" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="46.2" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.2" y="318.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="46.2" y="291.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="49.2" y="302.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="46.2" y="275.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="49.2" y="286.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="46.2" y="259.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="49.2" y="270.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="46.2" y="243.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="49.2" y="254.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="46.2" y="227.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="49.2" y="238.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="46.2" y="211.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="49.2" y="222.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="46.2" y="195.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="49.2" y="206.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="46.2" y="179.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="49.2" y="190.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.03%)</title><rect x="46.2" y="163.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="49.2" y="174.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.03%)</title><rect x="46.2" y="147.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="49.2" y="158.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.03%)</title><rect x="46.2" y="131.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="49.2" y="142.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.03%)</title><rect x="46.2" y="115.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="49.2" y="126.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="46.5" y="435.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="46.9" y="531.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="46.9" y="515.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.9" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="46.9" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.9" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="46.9" y="483.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.9" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.03%)</title><rect x="47.2" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="50.2" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.03%)</title><rect x="47.2" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="50.2" y="606.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.03%)</title><rect x="47.2" y="579.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="50.2" y="590.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=117870] (17 samples, 0.48%)</title><rect x="47.5" y="675.0" width="5.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="50.5" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.06%)</title><rect x="47.5" y="659.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="50.5" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.06%)</title><rect x="47.5" y="643.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="50.5" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.06%)</title><rect x="47.5" y="627.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="50.5" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.06%)</title><rect x="47.5" y="611.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="50.5" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.03%)</title><rect x="47.9" y="595.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="50.9" y="606.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (15 samples, 0.42%)</title><rect x="48.2" y="659.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.2" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.06%)</title><rect x="48.2" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.2" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.06%)</title><rect x="48.2" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="51.2" y="638.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.03%)</title><rect x="48.5" y="611.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="51.5" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (13 samples, 0.37%)</title><rect x="48.9" y="643.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="51.9" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.06%)</title><rect x="49.2" y="627.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="52.2" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.06%)</title><rect x="49.2" y="611.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="52.2" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.06%)</title><rect x="49.2" y="595.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="52.2" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.03%)</title><rect x="49.5" y="579.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="52.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (10 samples, 0.28%)</title><rect x="49.9" y="627.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8 samples, 0.23%)</title><rect x="49.9" y="611.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="52.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5 samples, 0.14%)</title><rect x="49.9" y="595.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5 samples, 0.14%)</title><rect x="49.9" y="579.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.9" y="590.0"></text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (5 samples, 0.14%)</title><rect x="49.9" y="563.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.03%)</title><rect x="49.9" y="547.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="52.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.03%)</title><rect x="49.9" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.9" y="542.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="49.9" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="49.9" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="52.9" y="510.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="49.9" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="52.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="49.9" y="467.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (4 samples, 0.11%)</title><rect x="50.2" y="547.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.2" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (4 samples, 0.11%)</title><rect x="50.2" y="531.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.2" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (4 samples, 0.11%)</title><rect x="50.2" y="515.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.2" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (4 samples, 0.11%)</title><rect x="50.2" y="499.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="53.2" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (4 samples, 0.11%)</title><rect x="50.2" y="483.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.2" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (4 samples, 0.11%)</title><rect x="50.2" y="467.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.2" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (4 samples, 0.11%)</title><rect x="50.2" y="451.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.2" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (4 samples, 0.11%)</title><rect x="50.2" y="435.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.2" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (4 samples, 0.11%)</title><rect x="50.2" y="419.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.2" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (4 samples, 0.11%)</title><rect x="50.2" y="403.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.2" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.03%)</title><rect x="50.2" y="387.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="53.2" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getThreadName (1 samples, 0.03%)</title><rect x="50.2" y="371.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.2" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.03%)</title><rect x="50.5" y="387.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.5" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.03%)</title><rect x="50.5" y="371.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.5" y="382.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.03%)</title><rect x="50.5" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="53.5" y="366.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.03%)</title><rect x="50.5" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.5" y="350.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.03%)</title><rect x="50.5" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="53.5" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.03%)</title><rect x="50.5" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.5" y="318.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.03%)</title><rect x="50.5" y="291.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.5" y="302.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.03%)</title><rect x="50.5" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="53.5" y="286.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.03%)</title><rect x="50.5" y="259.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="53.5" y="270.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.03%)</title><rect x="50.5" y="243.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="53.5" y="254.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="50.5" y="227.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="53.5" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.06%)</title><rect x="50.8" y="387.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.8" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.06%)</title><rect x="50.8" y="371.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.8" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.06%)</title><rect x="50.8" y="355.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="53.8" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.03%)</title><rect x="51.2" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.08%)</title><rect x="51.5" y="595.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="54.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.06%)</title><rect x="51.5" y="579.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="51.8" y="563.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="51.8" y="547.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.8" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="51.8" y="531.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="54.8" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="52.2" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="55.2" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="52.2" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.2" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="52.2" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="55.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="52.2" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.03%)</title><rect x="52.2" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="55.2" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.06%)</title><rect x="52.5" y="611.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.5" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.06%)</title><rect x="52.5" y="595.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.5" y="606.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.03%)</title><rect x="52.5" y="579.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="55.5" y="590.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="52.8" y="579.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="55.8" y="590.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=117871] (15 samples, 0.42%)</title><rect x="53.2" y="675.0" width="5.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="56.2" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="53.2" y="659.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="56.2" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="53.2" y="643.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="56.2" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.03%)</title><rect x="53.2" y="627.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="56.2" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="53.2" y="611.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="56.2" y="622.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.03%)</title><rect x="53.5" y="659.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="56.5" y="670.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.03%)</title><rect x="53.5" y="643.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="56.5" y="654.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (13 samples, 0.37%)</title><rect x="53.8" y="659.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.8" y="670.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="53.8" y="643.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="56.8" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (12 samples, 0.34%)</title><rect x="54.2" y="643.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.2" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.11%)</title><rect x="54.5" y="627.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="57.5" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.11%)</title><rect x="54.5" y="611.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="57.5" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (4 samples, 0.11%)</title><rect x="54.5" y="595.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="57.5" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.06%)</title><rect x="55.2" y="579.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="58.2" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (7 samples, 0.20%)</title><rect x="55.8" y="627.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="58.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6 samples, 0.17%)</title><rect x="55.8" y="611.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5 samples, 0.14%)</title><rect x="55.8" y="595.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5 samples, 0.14%)</title><rect x="55.8" y="579.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.8" y="590.0"></text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (5 samples, 0.14%)</title><rect x="55.8" y="563.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (5 samples, 0.14%)</title><rect x="55.8" y="547.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="58.8" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (5 samples, 0.14%)</title><rect x="55.8" y="531.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="58.8" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (5 samples, 0.14%)</title><rect x="55.8" y="515.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.8" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (5 samples, 0.14%)</title><rect x="55.8" y="499.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.8" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (5 samples, 0.14%)</title><rect x="55.8" y="483.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.8" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (5 samples, 0.14%)</title><rect x="55.8" y="467.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.8" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (5 samples, 0.14%)</title><rect x="55.8" y="451.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.8" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (5 samples, 0.14%)</title><rect x="55.8" y="435.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.8" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (5 samples, 0.14%)</title><rect x="55.8" y="419.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.8" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (5 samples, 0.14%)</title><rect x="55.8" y="403.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="58.8" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (4 samples, 0.11%)</title><rect x="55.8" y="387.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="58.8" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (4 samples, 0.11%)</title><rect x="55.8" y="371.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.8" y="382.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (4 samples, 0.11%)</title><rect x="55.8" y="355.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.8" y="366.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (4 samples, 0.11%)</title><rect x="55.8" y="339.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.8" y="350.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (4 samples, 0.11%)</title><rect x="55.8" y="323.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.8" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (4 samples, 0.11%)</title><rect x="55.8" y="307.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="58.8" y="318.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (4 samples, 0.11%)</title><rect x="55.8" y="291.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.8" y="302.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (4 samples, 0.11%)</title><rect x="55.8" y="275.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="58.8" y="286.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (3 samples, 0.08%)</title><rect x="56.2" y="259.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="59.2" y="270.0"></text>
</g>
<g>
<title>writeBytes (3 samples, 0.08%)</title><rect x="56.2" y="243.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="59.2" y="254.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.06%)</title><rect x="56.2" y="227.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="59.2" y="238.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.03%)</title><rect x="56.8" y="227.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="59.8" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.03%)</title><rect x="57.2" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.2" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.03%)</title><rect x="57.2" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.2" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.03%)</title><rect x="57.2" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="60.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.03%)</title><rect x="57.5" y="595.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.03%)</title><rect x="57.5" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="57.5" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="60.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="57.5" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="57.5" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="60.5" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.03%)</title><rect x="57.8" y="611.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.8" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.03%)</title><rect x="57.8" y="595.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="60.8" y="606.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.03%)</title><rect x="57.8" y="579.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="60.8" y="590.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=117872] (15 samples, 0.42%)</title><rect x="58.2" y="675.0" width="4.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="61.2" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="58.2" y="659.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="61.2" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="58.2" y="643.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="61.2" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.03%)</title><rect x="58.2" y="627.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="61.2" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="58.2" y="611.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="61.2" y="622.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14 samples, 0.39%)</title><rect x="58.5" y="659.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.5" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.06%)</title><rect x="58.5" y="643.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="61.5" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.03%)</title><rect x="58.5" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.5" y="638.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.03%)</title><rect x="58.5" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.5" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.03%)</title><rect x="58.8" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.8" y="638.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.03%)</title><rect x="58.8" y="611.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="61.8" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (12 samples, 0.34%)</title><rect x="59.2" y="643.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="62.2" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.06%)</title><rect x="59.5" y="627.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="62.5" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="59.5" y="611.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="62.5" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="59.8" y="611.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="62.8" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.03%)</title><rect x="59.8" y="595.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="62.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9 samples, 0.25%)</title><rect x="60.1" y="627.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9 samples, 0.25%)</title><rect x="60.1" y="611.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (8 samples, 0.23%)</title><rect x="60.1" y="595.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="63.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (8 samples, 0.23%)</title><rect x="60.1" y="579.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.1" y="590.0"></text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (8 samples, 0.23%)</title><rect x="60.1" y="563.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (8 samples, 0.23%)</title><rect x="60.1" y="547.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.1" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (7 samples, 0.20%)</title><rect x="60.1" y="531.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="63.1" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (7 samples, 0.20%)</title><rect x="60.1" y="515.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.1" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (7 samples, 0.20%)</title><rect x="60.1" y="499.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.1" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (7 samples, 0.20%)</title><rect x="60.1" y="483.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.1" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (7 samples, 0.20%)</title><rect x="60.1" y="467.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.1" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (7 samples, 0.20%)</title><rect x="60.1" y="451.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="63.1" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (6 samples, 0.17%)</title><rect x="60.1" y="435.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.1" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (5 samples, 0.14%)</title><rect x="60.1" y="419.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.1" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (5 samples, 0.14%)</title><rect x="60.1" y="403.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.1" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (3 samples, 0.08%)</title><rect x="60.1" y="387.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.1" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (3 samples, 0.08%)</title><rect x="60.1" y="371.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="63.1" y="382.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (3 samples, 0.08%)</title><rect x="60.1" y="355.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="63.1" y="366.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (3 samples, 0.08%)</title><rect x="60.1" y="339.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.1" y="350.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (3 samples, 0.08%)</title><rect x="60.1" y="323.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.1" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (3 samples, 0.08%)</title><rect x="60.1" y="307.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.1" y="318.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (3 samples, 0.08%)</title><rect x="60.1" y="291.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.1" y="302.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (3 samples, 0.08%)</title><rect x="60.1" y="275.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.1" y="286.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (3 samples, 0.08%)</title><rect x="60.1" y="259.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="63.1" y="270.0"></text>
</g>
<g>
<title>writeBytes (3 samples, 0.08%)</title><rect x="60.1" y="243.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="63.1" y="254.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.03%)</title><rect x="60.1" y="227.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="63.1" y="238.0"></text>
</g>
<g>
<title>jni_GetObjectField (2 samples, 0.06%)</title><rect x="60.5" y="227.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="63.5" y="238.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.03%)</title><rect x="60.5" y="211.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="63.5" y="222.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.03%)</title><rect x="60.8" y="211.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="63.8" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.06%)</title><rect x="61.1" y="387.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.1" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.06%)</title><rect x="61.1" y="371.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="64.1" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.06%)</title><rect x="61.1" y="355.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.1" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.03%)</title><rect x="61.1" y="339.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.1" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="61.1" y="323.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="64.1" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="61.1" y="307.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="64.1" y="318.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="61.1" y="291.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="64.1" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="61.5" y="339.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="64.5" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="61.5" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.5" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.03%)</title><rect x="61.5" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="64.5" y="318.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="61.5" y="291.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="64.5" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.03%)</title><rect x="61.8" y="419.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.8" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.03%)</title><rect x="61.8" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.8" y="414.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="62.1" y="435.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="65.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (1 samples, 0.03%)</title><rect x="62.5" y="531.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="65.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="62.5" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.03%)</title><rect x="62.5" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="62.5" y="483.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="62.5" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="62.5" y="451.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="65.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="62.5" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="62.5" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.5" y="430.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.03%)</title><rect x="62.5" y="403.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="65.5" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.03%)</title><rect x="62.8" y="595.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.03%)</title><rect x="62.8" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="65.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="62.8" y="563.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="62.8" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.8" y="558.0"></text>
</g>
<g>
<title>[RMI TCP Connection(2)-127.0.0.1 tid=119841] (6 samples, 0.17%)</title><rect x="63.1" y="675.0" width="2.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="66.1" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6 samples, 0.17%)</title><rect x="63.1" y="659.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="66.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6 samples, 0.17%)</title><rect x="63.1" y="643.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6 samples, 0.17%)</title><rect x="63.1" y="627.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="66.1" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (6 samples, 0.17%)</title><rect x="63.1" y="611.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="66.1" y="622.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (6 samples, 0.17%)</title><rect x="63.1" y="595.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="66.1" y="606.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$130/1986636843.run (6 samples, 0.17%)</title><rect x="63.1" y="579.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.1" y="590.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (6 samples, 0.17%)</title><rect x="63.1" y="563.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.1" y="574.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (6 samples, 0.17%)</title><rect x="63.1" y="547.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.1" y="558.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (6 samples, 0.17%)</title><rect x="63.1" y="531.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.1" y="542.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (6 samples, 0.17%)</title><rect x="63.1" y="515.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.1" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (6 samples, 0.17%)</title><rect x="63.1" y="499.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="66.1" y="510.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (6 samples, 0.17%)</title><rect x="63.1" y="483.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.1" y="494.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (6 samples, 0.17%)</title><rect x="63.1" y="467.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.1" y="478.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (6 samples, 0.17%)</title><rect x="63.1" y="451.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="66.1" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.08%)</title><rect x="63.1" y="435.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.08%)</title><rect x="63.1" y="419.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (3 samples, 0.08%)</title><rect x="63.1" y="403.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="66.1" y="414.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (2 samples, 0.06%)</title><rect x="63.5" y="387.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="66.5" y="398.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 0.03%)</title><rect x="63.5" y="371.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.5" y="382.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (1 samples, 0.03%)</title><rect x="63.5" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.5" y="366.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (1 samples, 0.03%)</title><rect x="63.5" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="66.5" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (1 samples, 0.03%)</title><rect x="63.5" y="323.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.5" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (1 samples, 0.03%)</title><rect x="63.5" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="66.5" y="318.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (1 samples, 0.03%)</title><rect x="63.5" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="66.5" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (1 samples, 0.03%)</title><rect x="63.5" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="66.5" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (1 samples, 0.03%)</title><rect x="63.5" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.5" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (1 samples, 0.03%)</title><rect x="63.5" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="66.5" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.03%)</title><rect x="63.5" y="227.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.5" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.03%)</title><rect x="63.5" y="211.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="66.5" y="222.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.03%)</title><rect x="63.5" y="195.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="66.5" y="206.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.03%)</title><rect x="63.5" y="179.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.5" y="190.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.03%)</title><rect x="63.5" y="163.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="66.5" y="174.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (1 samples, 0.03%)</title><rect x="63.5" y="147.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.5" y="158.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.03%)</title><rect x="63.5" y="131.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.5" y="142.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (1 samples, 0.03%)</title><rect x="63.5" y="115.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.5" y="126.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.03%)</title><rect x="63.5" y="99.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="66.5" y="110.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (1 samples, 0.03%)</title><rect x="63.5" y="83.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.5" y="94.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (1 samples, 0.03%)</title><rect x="63.8" y="371.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.8" y="382.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (1 samples, 0.03%)</title><rect x="63.8" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.8" y="366.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (1 samples, 0.03%)</title><rect x="63.8" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.8" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.03%)</title><rect x="63.8" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.8" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.03%)</title><rect x="63.8" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="66.8" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.03%)</title><rect x="63.8" y="291.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="66.8" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (1 samples, 0.03%)</title><rect x="63.8" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.8" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.03%)</title><rect x="63.8" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="66.8" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (1 samples, 0.03%)</title><rect x="63.8" y="243.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.8" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.03%)</title><rect x="63.8" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.8" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.03%)</title><rect x="63.8" y="211.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.8" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.03%)</title><rect x="63.8" y="195.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="66.8" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.03%)</title><rect x="63.8" y="179.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.8" y="190.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.resolveClass (1 samples, 0.03%)</title><rect x="63.8" y="163.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="66.8" y="174.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader.loadClass (1 samples, 0.03%)</title><rect x="63.8" y="147.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.8" y="158.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader$2.loadClass (1 samples, 0.03%)</title><rect x="63.8" y="131.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.8" y="142.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClass (1 samples, 0.03%)</title><rect x="63.8" y="115.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.8" y="126.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClassForName (1 samples, 0.03%)</title><rect x="63.8" y="99.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.8" y="110.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 0.03%)</title><rect x="63.8" y="83.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="66.8" y="94.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 0.03%)</title><rect x="63.8" y="67.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.8" y="78.0"></text>
</g>
<g>
<title>Java_java_lang_Class_forName0 (1 samples, 0.03%)</title><rect x="63.8" y="51.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="66.8" y="62.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="63.8" y="35.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="66.8" y="46.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (1 samples, 0.03%)</title><rect x="64.1" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.1" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.03%)</title><rect x="64.1" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.1" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.03%)</title><rect x="64.1" y="403.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.1" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.03%)</title><rect x="64.1" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.1" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.03%)</title><rect x="64.1" y="371.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.1" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.03%)</title><rect x="64.1" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.1" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.03%)</title><rect x="64.1" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.03%)</title><rect x="64.1" y="323.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="67.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor41.invoke (1 samples, 0.03%)</title><rect x="64.1" y="307.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.writeObject (1 samples, 0.03%)</title><rect x="64.1" y="291.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.1" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.03%)</title><rect x="64.1" y="275.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="67.1" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.03%)</title><rect x="64.1" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.1" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.lookup (1 samples, 0.03%)</title><rect x="64.1" y="243.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.1" y="254.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (1 samples, 0.03%)</title><rect x="64.5" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.5" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.03%)</title><rect x="64.5" y="419.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.5" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.03%)</title><rect x="64.5" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.5" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.03%)</title><rect x="64.5" y="387.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.5" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (1 samples, 0.03%)</title><rect x="64.5" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.5" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.03%)</title><rect x="64.5" y="355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.5" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.03%)</title><rect x="64.5" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.5" y="350.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.resolveClass (1 samples, 0.03%)</title><rect x="64.5" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="67.5" y="334.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader.loadClass (1 samples, 0.03%)</title><rect x="64.5" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="67.5" y="318.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader$2.loadClass (1 samples, 0.03%)</title><rect x="64.5" y="291.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.5" y="302.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClass (1 samples, 0.03%)</title><rect x="64.5" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.5" y="286.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClass (1 samples, 0.03%)</title><rect x="64.5" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="67.5" y="270.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 0.03%)</title><rect x="64.5" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="67.5" y="254.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 0.03%)</title><rect x="64.5" y="227.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.5" y="238.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (1 samples, 0.03%)</title><rect x="64.8" y="435.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.8" y="446.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (1 samples, 0.03%)</title><rect x="64.8" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.8" y="430.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (1 samples, 0.03%)</title><rect x="64.8" y="403.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.8" y="414.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (1 samples, 0.03%)</title><rect x="64.8" y="387.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="67.8" y="398.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (1 samples, 0.03%)</title><rect x="64.8" y="371.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.8" y="382.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.03%)</title><rect x="64.8" y="355.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.8" y="366.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.03%)</title><rect x="64.8" y="339.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="67.8" y="350.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.03%)</title><rect x="64.8" y="323.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="67.8" y="334.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.03%)</title><rect x="64.8" y="307.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="67.8" y="318.0"></text>
</g>
<g>
<title>[VM Thread tid=117841] (1 samples, 0.03%)</title><rect x="65.1" y="675.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="68.1" y="686.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.03%)</title><rect x="65.1" y="659.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="68.1" y="670.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.03%)</title><rect x="65.1" y="643.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="68.1" y="654.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.03%)</title><rect x="65.1" y="627.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="68.1" y="638.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.03%)</title><rect x="65.1" y="611.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="68.1" y="622.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.03%)</title><rect x="65.1" y="595.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="68.1" y="606.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 0.03%)</title><rect x="65.1" y="579.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="68.1" y="590.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.03%)</title><rect x="65.1" y="563.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="68.1" y="574.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.03%)</title><rect x="65.1" y="547.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="68.1" y="558.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.03%)</title><rect x="65.1" y="531.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="68.1" y="542.0"></text>
</g>
<g>
<title>G1CollectedHeap::free_collection_set(G1CollectionSet*, EvacuationInfo&amp;, unsigned long const*) (1 samples, 0.03%)</title><rect x="65.1" y="515.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="68.1" y="526.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*, unsigned int) (1 samples, 0.03%)</title><rect x="65.1" y="499.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="68.1" y="510.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.03%)</title><rect x="65.1" y="483.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="68.1" y="494.0"></text>
</g>
<g>
<title>__new_sem_post (1 samples, 0.03%)</title><rect x="65.1" y="467.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="68.1" y="478.0"></text>
</g>
<g>
<title>[pool-3-thread-1 tid=117884] (411 samples, 11.57%)</title><rect x="65.5" y="675.0" width="136.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="68.5" y="686.0">[pool-3-thread-1 ..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="65.5" y="659.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="68.5" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="65.5" y="643.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="68.5" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.03%)</title><rect x="65.5" y="627.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="68.5" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="65.5" y="611.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="68.5" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.run (410 samples, 11.54%)</title><rect x="65.8" y="659.0" width="136.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.8" y="670.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (410 samples, 11.54%)</title><rect x="65.8" y="643.0" width="136.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.8" y="654.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (410 samples, 11.54%)</title><rect x="65.8" y="627.0" width="136.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="68.8" y="638.0">java/util/concurr..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.run (410 samples, 11.54%)</title><rect x="65.8" y="611.0" width="136.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.8" y="622.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (410 samples, 11.54%)</title><rect x="65.8" y="595.0" width="136.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.8" y="606.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (410 samples, 11.54%)</title><rect x="65.8" y="579.0" width="136.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.8" y="590.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (410 samples, 11.54%)</title><rect x="65.8" y="563.0" width="136.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.8" y="574.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (10 samples, 0.28%)</title><rect x="65.8" y="547.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="68.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (10 samples, 0.28%)</title><rect x="65.8" y="531.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.8" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (10 samples, 0.28%)</title><rect x="65.8" y="515.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.8" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (10 samples, 0.28%)</title><rect x="65.8" y="499.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (10 samples, 0.28%)</title><rect x="65.8" y="483.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.8" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.28%)</title><rect x="65.8" y="467.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.8" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.03%)</title><rect x="65.8" y="451.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.8" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.03%)</title><rect x="65.8" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.8" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.03%)</title><rect x="65.8" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.03%)</title><rect x="65.8" y="403.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.03%)</title><rect x="65.8" y="387.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.8" y="398.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.03%)</title><rect x="65.8" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.03%)</title><rect x="65.8" y="355.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.03%)</title><rect x="65.8" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.03%)</title><rect x="65.8" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.03%)</title><rect x="65.8" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.8" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.03%)</title><rect x="65.8" y="291.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.8" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="65.8" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.8" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="65.8" y="259.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (9 samples, 0.25%)</title><rect x="66.1" y="451.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.1" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (9 samples, 0.25%)</title><rect x="66.1" y="435.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.1" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (9 samples, 0.25%)</title><rect x="66.1" y="419.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.1" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (9 samples, 0.25%)</title><rect x="66.1" y="403.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.25%)</title><rect x="66.1" y="387.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.25%)</title><rect x="66.1" y="371.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (9 samples, 0.25%)</title><rect x="66.1" y="355.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (9 samples, 0.25%)</title><rect x="66.1" y="339.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (9 samples, 0.25%)</title><rect x="66.1" y="323.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (9 samples, 0.25%)</title><rect x="66.1" y="307.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3 samples, 0.08%)</title><rect x="66.1" y="291.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.08%)</title><rect x="66.1" y="275.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.08%)</title><rect x="66.1" y="259.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.08%)</title><rect x="66.1" y="243.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.08%)</title><rect x="66.1" y="227.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.08%)</title><rect x="66.1" y="211.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.1" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.08%)</title><rect x="66.1" y="195.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.1" y="206.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.06%)</title><rect x="66.1" y="179.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="69.1" y="190.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="66.8" y="179.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="69.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.17%)</title><rect x="67.1" y="291.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="70.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.17%)</title><rect x="67.1" y="275.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.14%)</title><rect x="67.1" y="259.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="70.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.14%)</title><rect x="67.1" y="243.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.14%)</title><rect x="67.1" y="227.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="70.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.14%)</title><rect x="67.1" y="211.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="70.1" y="222.0"></text>
</g>
<g>
<title>__pread (5 samples, 0.14%)</title><rect x="67.1" y="195.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="70.1" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.03%)</title><rect x="68.8" y="259.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.03%)</title><rect x="69.1" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.1" y="558.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="69.1" y="531.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="72.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (399 samples, 11.23%)</title><rect x="69.4" y="547.0" width="132.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.4" y="558.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (399 samples, 11.23%)</title><rect x="69.4" y="531.0" width="132.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="72.4" y="542.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="69.4" y="515.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.4" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="69.4" y="499.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.4" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="69.4" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.4" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="69.4" y="467.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.4" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (1 samples, 0.03%)</title><rect x="69.8" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="72.8" y="526.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.03%)</title><rect x="69.8" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.8" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.03%)</title><rect x="69.8" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (393 samples, 11.06%)</title><rect x="70.1" y="515.0" width="130.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.1" y="526.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (34 samples, 0.96%)</title><rect x="70.1" y="499.0" width="11.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.1" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (34 samples, 0.96%)</title><rect x="70.1" y="483.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.1" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (34 samples, 0.96%)</title><rect x="70.1" y="467.0" width="11.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.1" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (34 samples, 0.96%)</title><rect x="70.1" y="451.0" width="11.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.1" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (34 samples, 0.96%)</title><rect x="70.1" y="435.0" width="11.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.1" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (34 samples, 0.96%)</title><rect x="70.1" y="419.0" width="11.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="73.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (34 samples, 0.96%)</title><rect x="70.1" y="403.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (34 samples, 0.96%)</title><rect x="70.1" y="387.0" width="11.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="73.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (30 samples, 0.84%)</title><rect x="70.1" y="371.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (30 samples, 0.84%)</title><rect x="70.1" y="355.0" width="10.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (30 samples, 0.84%)</title><rect x="70.1" y="339.0" width="10.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (30 samples, 0.84%)</title><rect x="70.1" y="323.0" width="10.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (13 samples, 0.37%)</title><rect x="70.1" y="307.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.1" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="70.1" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (12 samples, 0.34%)</title><rect x="70.4" y="291.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="73.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (12 samples, 0.34%)</title><rect x="70.4" y="275.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.03%)</title><rect x="70.8" y="259.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.8" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="70.8" y="243.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (8 samples, 0.23%)</title><rect x="71.1" y="259.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.20%)</title><rect x="71.1" y="243.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.20%)</title><rect x="71.1" y="227.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.20%)</title><rect x="71.1" y="211.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.1" y="222.0"></text>
</g>
<g>
<title>__pread (6 samples, 0.17%)</title><rect x="71.4" y="195.0" width="2.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="74.4" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="73.4" y="243.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="76.4" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="73.4" y="227.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.4" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="73.4" y="211.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.4" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.06%)</title><rect x="73.8" y="259.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.8" y="270.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.06%)</title><rect x="73.8" y="243.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="76.8" y="254.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.06%)</title><rect x="73.8" y="227.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="76.8" y="238.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.06%)</title><rect x="73.8" y="211.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="76.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (17 samples, 0.48%)</title><rect x="74.4" y="307.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (17 samples, 0.48%)</title><rect x="74.4" y="291.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.06%)</title><rect x="74.4" y="275.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="77.4" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.06%)</title><rect x="74.4" y="259.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="77.4" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (13 samples, 0.37%)</title><rect x="75.1" y="275.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (12 samples, 0.34%)</title><rect x="75.1" y="259.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="78.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (12 samples, 0.34%)</title><rect x="75.1" y="243.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (12 samples, 0.34%)</title><rect x="75.1" y="227.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.1" y="238.0"></text>
</g>
<g>
<title>__pread (10 samples, 0.28%)</title><rect x="75.4" y="211.0" width="3.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="78.4" y="222.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="78.7" y="211.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="81.7" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="79.1" y="259.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.1" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="79.1" y="243.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="82.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.06%)</title><rect x="79.4" y="275.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.4" y="286.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="79.7" y="259.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="82.7" y="270.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.11%)</title><rect x="80.1" y="371.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.11%)</title><rect x="80.1" y="355.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="83.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.11%)</title><rect x="80.1" y="339.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.11%)</title><rect x="80.1" y="323.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.06%)</title><rect x="80.4" y="307.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="83.4" y="318.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.06%)</title><rect x="80.4" y="291.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.03%)</title><rect x="81.1" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="84.1" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="81.1" y="291.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.1" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="81.1" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.1" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="81.1" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.1" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (352 samples, 9.91%)</title><rect x="81.4" y="499.0" width="116.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.4" y="510.0">java/util/Coll..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (352 samples, 9.91%)</title><rect x="81.4" y="483.0" width="116.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.4" y="494.0">java/lang/Iter..</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.hasNext (1 samples, 0.03%)</title><rect x="81.4" y="467.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.4" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.hasNext (1 samples, 0.03%)</title><rect x="81.4" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1546833500.accept (351 samples, 9.88%)</title><rect x="81.7" y="467.0" width="116.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.7" y="478.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (349 samples, 9.82%)</title><rect x="82.1" y="451.0" width="115.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="85.1" y="462.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (349 samples, 9.82%)</title><rect x="82.1" y="435.0" width="115.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="85.1" y="446.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (349 samples, 9.82%)</title><rect x="82.1" y="419.0" width="115.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.1" y="430.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (349 samples, 9.82%)</title><rect x="82.1" y="403.0" width="115.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.1" y="414.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.17%)</title><rect x="82.1" y="387.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="85.1" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="82.1" y="371.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.1" y="382.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="82.1" y="355.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.1" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.03%)</title><rect x="82.4" y="371.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.4" y="382.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.08%)</title><rect x="82.7" y="371.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.7" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.06%)</title><rect x="83.1" y="355.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.1" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="83.7" y="371.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="86.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (343 samples, 9.65%)</title><rect x="84.1" y="387.0" width="113.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.1" y="398.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.06%)</title><rect x="84.1" y="371.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.1" y="382.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="84.1" y="355.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="87.1" y="366.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="84.1" y="339.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="87.1" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="84.4" y="355.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.4" y="366.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="84.4" y="339.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="87.4" y="350.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="84.4" y="323.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="87.4" y="334.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="84.4" y="307.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="87.4" y="318.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="84.4" y="291.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="87.4" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (1 samples, 0.03%)</title><rect x="84.7" y="371.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.7" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.rewind (1 samples, 0.03%)</title><rect x="84.7" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (12 samples, 0.34%)</title><rect x="85.1" y="371.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="88.1" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.25%)</title><rect x="86.1" y="355.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.20%)</title><rect x="86.7" y="339.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.7" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="88.4" y="323.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="91.4" y="334.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="88.7" y="323.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="91.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (122 samples, 3.43%)</title><rect x="89.0" y="371.0" width="40.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="92.0" y="382.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.11%)</title><rect x="89.4" y="355.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="92.4" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.11%)</title><rect x="89.4" y="339.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="92.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.11%)</title><rect x="89.4" y="323.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="92.4" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (12 samples, 0.34%)</title><rect x="90.7" y="355.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.7" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="90.7" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.31%)</title><rect x="91.0" y="339.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.31%)</title><rect x="91.0" y="323.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="94.0" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.11%)</title><rect x="93.4" y="307.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="96.4" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.06%)</title><rect x="93.7" y="291.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="96.7" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.06%)</title><rect x="93.7" y="275.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.7" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.06%)</title><rect x="93.7" y="259.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="96.7" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="94.4" y="291.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="94.4" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (105 samples, 2.96%)</title><rect x="94.7" y="355.0" width="34.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="97.7" y="366.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (105 samples, 2.96%)</title><rect x="94.7" y="339.0" width="34.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.7" y="350.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.08%)</title><rect x="94.7" y="323.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="97.7" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.08%)</title><rect x="94.7" y="307.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="97.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (93 samples, 2.62%)</title><rect x="95.7" y="323.0" width="30.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.7" y="334.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="95.7" y="307.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (85 samples, 2.39%)</title><rect x="96.0" y="307.0" width="28.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.0" y="318.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (85 samples, 2.39%)</title><rect x="96.0" y="291.0" width="28.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="99.0" y="302.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (85 samples, 2.39%)</title><rect x="96.0" y="275.0" width="28.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.0" y="286.0">su..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.06%)</title><rect x="97.0" y="259.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="100.0" y="270.0"></text>
</g>
<g>
<title>__pread (74 samples, 2.08%)</title><rect x="97.7" y="259.0" width="24.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="100.7" y="270.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.08%)</title><rect x="122.3" y="259.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="125.3" y="270.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="123.3" y="259.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="126.3" y="270.0"></text>
</g>
<g>
<title>convertReturnVal (2 samples, 0.06%)</title><rect x="123.6" y="259.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="126.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (7 samples, 0.20%)</title><rect x="124.2" y="307.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="127.2" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.20%)</title><rect x="124.2" y="291.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="127.2" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (5 samples, 0.14%)</title><rect x="124.2" y="275.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="127.2" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (4 samples, 0.11%)</title><rect x="124.6" y="259.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.6" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.06%)</title><rect x="125.9" y="275.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.17%)</title><rect x="126.6" y="323.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.11%)</title><rect x="127.2" y="307.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.08%)</title><rect x="128.6" y="323.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="131.6" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.06%)</title><rect x="128.6" y="307.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="131.6" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.06%)</title><rect x="128.6" y="291.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="131.6" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="128.9" y="275.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="131.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="129.2" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.2" y="318.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="129.2" y="291.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="132.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (206 samples, 5.80%)</title><rect x="129.6" y="371.0" width="68.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="132.6" y="382.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (205 samples, 5.77%)</title><rect x="129.9" y="355.0" width="68.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.9" y="366.0">sun/nio..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (3 samples, 0.08%)</title><rect x="129.9" y="339.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (6 samples, 0.17%)</title><rect x="130.9" y="339.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="133.9" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (6 samples, 0.17%)</title><rect x="130.9" y="323.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.9" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.14%)</title><rect x="131.2" y="307.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="134.2" y="318.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.11%)</title><rect x="131.6" y="291.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="134.6" y="302.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.11%)</title><rect x="131.6" y="275.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (182 samples, 5.12%)</title><rect x="132.9" y="339.0" width="60.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.9" y="350.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (22 samples, 0.62%)</title><rect x="132.9" y="323.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="133.2" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.2" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="133.2" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.2" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (20 samples, 0.56%)</title><rect x="133.5" y="307.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (4 samples, 0.11%)</title><rect x="136.9" y="291.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="139.9" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.03%)</title><rect x="137.9" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.9" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.06%)</title><rect x="138.2" y="291.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="141.2" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.06%)</title><rect x="138.2" y="275.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="141.2" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="138.5" y="259.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="141.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (4 samples, 0.11%)</title><rect x="138.9" y="291.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (4 samples, 0.11%)</title><rect x="138.9" y="275.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="141.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.08%)</title><rect x="139.2" y="259.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="142.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (1 samples, 0.03%)</title><rect x="139.5" y="243.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (1 samples, 0.03%)</title><rect x="139.5" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.03%)</title><rect x="139.9" y="243.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="142.9" y="254.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.03%)</title><rect x="139.9" y="227.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="142.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (139 samples, 3.91%)</title><rect x="140.2" y="323.0" width="46.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="143.2" y="334.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (137 samples, 3.86%)</title><rect x="140.9" y="307.0" width="45.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="143.9" y="318.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (137 samples, 3.86%)</title><rect x="140.9" y="291.0" width="45.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.9" y="302.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.06%)</title><rect x="141.2" y="275.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="144.2" y="286.0"></text>
</g>
<g>
<title>__pread (127 samples, 3.57%)</title><rect x="141.8" y="275.0" width="42.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="144.8" y="286.0">__pr..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.08%)</title><rect x="184.0" y="275.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="187.0" y="286.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.11%)</title><rect x="185.0" y="275.0" width="1.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="188.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (10 samples, 0.28%)</title><rect x="186.4" y="323.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="189.4" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="186.4" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="189.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (9 samples, 0.25%)</title><rect x="186.7" y="307.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="189.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (11 samples, 0.31%)</title><rect x="189.7" y="323.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="192.7" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.17%)</title><rect x="191.3" y="307.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="194.3" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.08%)</title><rect x="191.7" y="291.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="194.7" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.06%)</title><rect x="192.7" y="291.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (12 samples, 0.34%)</title><rect x="193.3" y="339.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.11%)</title><rect x="196.0" y="323.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.0" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="197.0" y="307.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="200.0" y="318.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (1 samples, 0.03%)</title><rect x="197.0" y="291.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="200.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.06%)</title><rect x="197.3" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="200.3" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="197.6" y="323.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="200.6" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="197.6" y="307.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="200.6" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.03%)</title><rect x="197.6" y="291.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="200.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (1 samples, 0.03%)</title><rect x="198.0" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="201.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (7 samples, 0.20%)</title><rect x="198.3" y="499.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="201.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (7 samples, 0.20%)</title><rect x="198.3" y="483.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="201.3" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.20%)</title><rect x="198.3" y="467.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="201.3" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7 samples, 0.20%)</title><rect x="198.3" y="451.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.3" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7 samples, 0.20%)</title><rect x="198.3" y="435.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="201.3" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7 samples, 0.20%)</title><rect x="198.3" y="419.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="201.3" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7 samples, 0.20%)</title><rect x="198.3" y="403.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="201.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.20%)</title><rect x="198.3" y="387.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="201.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.20%)</title><rect x="198.3" y="371.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="201.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (7 samples, 0.20%)</title><rect x="198.3" y="355.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="201.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.20%)</title><rect x="198.3" y="339.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.20%)</title><rect x="198.3" y="323.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (7 samples, 0.20%)</title><rect x="198.3" y="307.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="201.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.11%)</title><rect x="198.3" y="291.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.11%)</title><rect x="198.3" y="275.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="201.3" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.11%)</title><rect x="198.3" y="259.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="201.3" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.08%)</title><rect x="198.3" y="243.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="201.3" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="198.3" y="227.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.3" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="198.3" y="211.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="201.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="198.3" y="195.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.3" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.06%)</title><rect x="198.6" y="227.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="201.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.06%)</title><rect x="198.6" y="211.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.6" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.06%)</title><rect x="198.6" y="195.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="201.6" y="206.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.06%)</title><rect x="198.6" y="179.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="201.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.03%)</title><rect x="199.3" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="202.3" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="199.3" y="227.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="202.3" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.08%)</title><rect x="199.6" y="291.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.08%)</title><rect x="199.6" y="275.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="202.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.03%)</title><rect x="199.6" y="259.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="202.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="199.6" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="202.6" y="254.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="199.6" y="227.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="202.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.03%)</title><rect x="200.0" y="259.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="203.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.03%)</title><rect x="200.3" y="259.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="203.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (4 samples, 0.11%)</title><rect x="200.6" y="515.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="203.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (4 samples, 0.11%)</title><rect x="200.6" y="499.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="203.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (4 samples, 0.11%)</title><rect x="200.6" y="483.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="203.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (4 samples, 0.11%)</title><rect x="200.6" y="467.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="203.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (4 samples, 0.11%)</title><rect x="200.6" y="451.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="203.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (4 samples, 0.11%)</title><rect x="200.6" y="435.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="203.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="200.6" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.08%)</title><rect x="201.0" y="419.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="204.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="201.6" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="201.6" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="204.6" y="398.0"></text>
</g>
<g>
<title>[pool-3-thread-2 tid=117890] (425 samples, 11.96%)</title><rect x="202.0" y="675.0" width="141.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="205.0" y="686.0">[pool-3-thread-2 t..</text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.03%)</title><rect x="202.0" y="659.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="205.0" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.run (424 samples, 11.93%)</title><rect x="202.3" y="659.0" width="140.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="205.3" y="670.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (424 samples, 11.93%)</title><rect x="202.3" y="643.0" width="140.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="205.3" y="654.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (424 samples, 11.93%)</title><rect x="202.3" y="627.0" width="140.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="205.3" y="638.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.03%)</title><rect x="202.3" y="611.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="205.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.03%)</title><rect x="202.3" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="205.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="202.3" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="205.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="202.3" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="205.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="202.3" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="205.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.run (423 samples, 11.91%)</title><rect x="202.6" y="611.0" width="140.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="205.6" y="622.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (423 samples, 11.91%)</title><rect x="202.6" y="595.0" width="140.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="205.6" y="606.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (423 samples, 11.91%)</title><rect x="202.6" y="579.0" width="140.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="205.6" y="590.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.06%)</title><rect x="202.6" y="563.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.6" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.06%)</title><rect x="202.6" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="205.6" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.06%)</title><rect x="202.6" y="531.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="205.6" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.06%)</title><rect x="202.6" y="515.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="205.6" y="526.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="202.6" y="499.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="205.6" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.03%)</title><rect x="203.0" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="206.0" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.03%)</title><rect x="203.0" y="483.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (421 samples, 11.85%)</title><rect x="203.3" y="563.0" width="139.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="206.3" y="574.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (4 samples, 0.11%)</title><rect x="203.3" y="547.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.3" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (4 samples, 0.11%)</title><rect x="203.3" y="531.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.3" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (4 samples, 0.11%)</title><rect x="203.3" y="515.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="206.3" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (4 samples, 0.11%)</title><rect x="203.3" y="499.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.11%)</title><rect x="203.3" y="483.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="206.3" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.11%)</title><rect x="203.3" y="467.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="206.3" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.11%)</title><rect x="203.3" y="451.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="206.3" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.11%)</title><rect x="203.3" y="435.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="206.3" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.11%)</title><rect x="203.3" y="419.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.3" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.11%)</title><rect x="203.3" y="403.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="206.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.11%)</title><rect x="203.3" y="387.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="206.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.11%)</title><rect x="203.3" y="371.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="206.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4 samples, 0.11%)</title><rect x="203.3" y="355.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="206.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (4 samples, 0.11%)</title><rect x="203.3" y="339.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="206.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (4 samples, 0.11%)</title><rect x="203.3" y="323.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="206.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (4 samples, 0.11%)</title><rect x="203.3" y="307.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="206.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.03%)</title><rect x="203.3" y="291.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="206.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.03%)</title><rect x="203.3" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="206.3" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.03%)</title><rect x="203.3" y="259.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.3" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.03%)</title><rect x="203.3" y="243.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="206.3" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.03%)</title><rect x="203.3" y="227.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="206.3" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.03%)</title><rect x="203.3" y="211.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="203.3" y="195.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="206.3" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.08%)</title><rect x="203.6" y="291.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="206.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.08%)</title><rect x="203.6" y="275.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.08%)</title><rect x="203.6" y="259.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.08%)</title><rect x="203.6" y="243.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="206.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.08%)</title><rect x="203.6" y="227.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="206.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.08%)</title><rect x="203.6" y="211.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="206.6" y="222.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.03%)</title><rect x="204.3" y="195.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="207.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (417 samples, 11.74%)</title><rect x="204.6" y="547.0" width="138.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.6" y="558.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (417 samples, 11.74%)</title><rect x="204.6" y="531.0" width="138.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.6" y="542.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (417 samples, 11.74%)</title><rect x="204.6" y="515.0" width="138.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="207.6" y="526.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (39 samples, 1.10%)</title><rect x="204.6" y="499.0" width="13.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="207.6" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (39 samples, 1.10%)</title><rect x="204.6" y="483.0" width="13.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="207.6" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (39 samples, 1.10%)</title><rect x="204.6" y="467.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="207.6" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (39 samples, 1.10%)</title><rect x="204.6" y="451.0" width="13.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.6" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (39 samples, 1.10%)</title><rect x="204.6" y="435.0" width="13.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="207.6" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (38 samples, 1.07%)</title><rect x="205.0" y="419.0" width="12.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="208.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (38 samples, 1.07%)</title><rect x="205.0" y="403.0" width="12.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (38 samples, 1.07%)</title><rect x="205.0" y="387.0" width="12.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="208.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (38 samples, 1.07%)</title><rect x="205.0" y="371.0" width="12.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="208.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (38 samples, 1.07%)</title><rect x="205.0" y="355.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (38 samples, 1.07%)</title><rect x="205.0" y="339.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (37 samples, 1.04%)</title><rect x="205.3" y="323.0" width="12.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="208.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (15 samples, 0.42%)</title><rect x="205.3" y="307.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="208.3" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.06%)</title><rect x="205.3" y="291.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.3" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="205.3" y="275.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="208.3" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="205.3" y="259.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="208.3" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="205.6" y="243.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="208.6" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="205.6" y="227.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.6" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="205.6" y="211.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="208.6" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="205.6" y="195.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="208.6" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 0.37%)</title><rect x="205.9" y="291.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="208.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 0.37%)</title><rect x="205.9" y="275.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.31%)</title><rect x="205.9" y="259.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="208.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (10 samples, 0.28%)</title><rect x="205.9" y="243.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.9" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (10 samples, 0.28%)</title><rect x="205.9" y="227.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="208.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (10 samples, 0.28%)</title><rect x="205.9" y="211.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="208.9" y="222.0"></text>
</g>
<g>
<title>__pread (9 samples, 0.25%)</title><rect x="205.9" y="195.0" width="3.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="208.9" y="206.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="208.9" y="195.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="211.9" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="209.3" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="212.3" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="209.3" y="227.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="212.3" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="209.3" y="211.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="212.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.06%)</title><rect x="209.6" y="259.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="212.6" y="270.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="209.6" y="243.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="212.6" y="254.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="209.6" y="227.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="212.6" y="238.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="209.6" y="211.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="212.6" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="209.9" y="243.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="212.9" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (22 samples, 0.62%)</title><rect x="210.3" y="307.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="213.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (22 samples, 0.62%)</title><rect x="210.3" y="291.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="213.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.03%)</title><rect x="210.9" y="275.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="213.9" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="210.9" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="213.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.03%)</title><rect x="211.3" y="275.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.3" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.03%)</title><rect x="211.3" y="259.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.3" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="211.3" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.3" y="254.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="211.3" y="227.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.3" y="238.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="211.3" y="211.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="214.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (16 samples, 0.45%)</title><rect x="211.6" y="275.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="214.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (14 samples, 0.39%)</title><rect x="211.9" y="259.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="214.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (14 samples, 0.39%)</title><rect x="211.9" y="243.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.9" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (14 samples, 0.39%)</title><rect x="211.9" y="227.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="214.9" y="238.0"></text>
</g>
<g>
<title>__pread (11 samples, 0.31%)</title><rect x="211.9" y="211.0" width="3.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="214.9" y="222.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="215.6" y="211.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="218.6" y="222.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.06%)</title><rect x="215.9" y="211.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="218.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="216.6" y="259.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.03%)</title><rect x="216.6" y="243.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="219.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.06%)</title><rect x="216.9" y="275.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="219.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.06%)</title><rect x="216.9" y="259.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="219.9" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (377 samples, 10.61%)</title><rect x="217.6" y="499.0" width="125.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="220.6" y="510.0">java/util/Colle..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (377 samples, 10.61%)</title><rect x="217.6" y="483.0" width="125.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="220.6" y="494.0">java/lang/Itera..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1546833500.accept (377 samples, 10.61%)</title><rect x="217.6" y="467.0" width="125.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="220.6" y="478.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (375 samples, 10.55%)</title><rect x="218.2" y="451.0" width="124.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="221.2" y="462.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (375 samples, 10.55%)</title><rect x="218.2" y="435.0" width="124.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="221.2" y="446.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (375 samples, 10.55%)</title><rect x="218.2" y="419.0" width="124.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="221.2" y="430.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (375 samples, 10.55%)</title><rect x="218.2" y="403.0" width="124.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="221.2" y="414.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.14%)</title><rect x="218.2" y="387.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="221.2" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="218.6" y="371.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="221.6" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.03%)</title><rect x="218.9" y="371.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="221.9" y="382.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.06%)</title><rect x="219.2" y="371.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="222.2" y="382.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.03%)</title><rect x="219.6" y="355.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="222.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (370 samples, 10.41%)</title><rect x="219.9" y="387.0" width="122.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="222.9" y="398.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.06%)</title><rect x="220.6" y="371.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="223.6" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="220.6" y="355.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="223.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="220.6" y="339.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="223.6" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.31%)</title><rect x="221.2" y="371.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="224.2" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.28%)</title><rect x="221.6" y="355.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="224.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.23%)</title><rect x="222.2" y="339.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="225.2" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="223.2" y="323.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="226.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.06%)</title><rect x="223.5" y="307.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.06%)</title><rect x="223.5" y="291.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="226.5" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.06%)</title><rect x="223.5" y="275.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="226.5" y="286.0"></text>
</g>
<g>
<title>unsafe_arraycopy (2 samples, 0.06%)</title><rect x="224.2" y="323.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="227.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (130 samples, 3.66%)</title><rect x="224.9" y="371.0" width="43.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.9" y="382.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.17%)</title><rect x="225.5" y="355.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="228.5" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="226.5" y="339.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="226.5" y="323.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="229.5" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.31%)</title><rect x="227.5" y="355.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.5" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.23%)</title><rect x="228.5" y="339.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="231.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.23%)</title><rect x="228.5" y="323.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="231.5" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="230.2" y="307.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="233.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.08%)</title><rect x="230.2" y="291.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="233.2" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.08%)</title><rect x="230.2" y="275.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.2" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="230.9" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="233.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (111 samples, 3.12%)</title><rect x="231.2" y="355.0" width="36.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="234.2" y="366.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (111 samples, 3.12%)</title><rect x="231.2" y="339.0" width="36.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="234.2" y="350.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.14%)</title><rect x="231.2" y="323.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="234.2" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.14%)</title><rect x="231.2" y="307.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="234.2" y="318.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="232.5" y="291.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="235.5" y="302.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="232.5" y="275.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="235.5" y="286.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="232.5" y="259.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="235.5" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (101 samples, 2.84%)</title><rect x="232.8" y="323.0" width="33.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="235.8" y="334.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.11%)</title><rect x="233.2" y="307.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="236.2" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.06%)</title><rect x="233.8" y="291.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="236.8" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="234.2" y="275.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (80 samples, 2.25%)</title><rect x="234.5" y="307.0" width="26.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.5" y="318.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (80 samples, 2.25%)</title><rect x="234.5" y="291.0" width="26.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.5" y="302.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (79 samples, 2.22%)</title><rect x="234.8" y="275.0" width="26.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.8" y="286.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.06%)</title><rect x="235.8" y="259.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="238.8" y="270.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.06%)</title><rect x="235.8" y="243.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="238.8" y="254.0"></text>
</g>
<g>
<title>__pread (65 samples, 1.83%)</title><rect x="236.5" y="259.0" width="21.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="239.5" y="270.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.06%)</title><rect x="258.1" y="259.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="261.1" y="270.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (7 samples, 0.20%)</title><rect x="258.8" y="259.0" width="2.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="261.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.08%)</title><rect x="261.1" y="307.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="264.1" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.08%)</title><rect x="261.1" y="291.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="264.1" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.08%)</title><rect x="261.1" y="275.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (13 samples, 0.37%)</title><rect x="262.1" y="307.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="265.1" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (10 samples, 0.28%)</title><rect x="262.4" y="291.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="265.4" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (5 samples, 0.14%)</title><rect x="262.4" y="275.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="265.4" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (3 samples, 0.08%)</title><rect x="263.1" y="259.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="266.1" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.14%)</title><rect x="264.1" y="275.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="267.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (2 samples, 0.06%)</title><rect x="265.7" y="291.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="268.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.14%)</title><rect x="266.4" y="323.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="269.4" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="266.7" y="307.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="269.7" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="266.7" y="291.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="269.7" y="302.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="266.7" y="275.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="269.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.08%)</title><rect x="267.1" y="307.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="270.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (225 samples, 6.33%)</title><rect x="268.1" y="371.0" width="74.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="271.1" y="382.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (1 samples, 0.03%)</title><rect x="268.4" y="355.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="271.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="268.4" y="339.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (223 samples, 6.28%)</title><rect x="268.7" y="355.0" width="74.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.7" y="366.0">sun/nio/..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (2 samples, 0.06%)</title><rect x="269.0" y="339.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="272.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (7 samples, 0.20%)</title><rect x="269.7" y="339.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="272.7" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (6 samples, 0.17%)</title><rect x="270.0" y="323.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="273.0" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel$1.&lt;init&gt; (1 samples, 0.03%)</title><rect x="270.7" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.7" y="318.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.08%)</title><rect x="271.0" y="307.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="274.0" y="318.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.06%)</title><rect x="271.4" y="291.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="274.4" y="302.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.06%)</title><rect x="271.4" y="275.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="274.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (193 samples, 5.43%)</title><rect x="272.0" y="339.0" width="64.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="275.0" y="350.0">sun/nio..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (19 samples, 0.53%)</title><rect x="272.4" y="323.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="275.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="272.4" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="275.4" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="272.4" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (18 samples, 0.51%)</title><rect x="272.7" y="307.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="275.7" y="318.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.reachabilityFence (2 samples, 0.06%)</title><rect x="274.4" y="291.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="277.4" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.06%)</title><rect x="275.0" y="291.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="278.0" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="275.4" y="275.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="278.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (1 samples, 0.03%)</title><rect x="275.4" y="259.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.4" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.03%)</title><rect x="275.7" y="291.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="278.7" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="275.7" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.7" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="275.7" y="259.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (8 samples, 0.23%)</title><rect x="276.0" y="291.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (8 samples, 0.23%)</title><rect x="276.0" y="275.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="279.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (6 samples, 0.17%)</title><rect x="276.7" y="259.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="279.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (5 samples, 0.14%)</title><rect x="277.0" y="243.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="280.0" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (150 samples, 4.22%)</title><rect x="278.7" y="323.0" width="49.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="281.7" y="334.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (149 samples, 4.19%)</title><rect x="279.0" y="307.0" width="49.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.0" y="318.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (149 samples, 4.19%)</title><rect x="279.0" y="291.0" width="49.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="282.0" y="302.0">sun/n..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (3 samples, 0.08%)</title><rect x="282.7" y="275.0" width="1.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="285.7" y="286.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="283.3" y="259.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="286.3" y="270.0"></text>
</g>
<g>
<title>__pread (123 samples, 3.46%)</title><rect x="283.7" y="275.0" width="40.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="286.7" y="286.0">__p..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.17%)</title><rect x="324.5" y="275.0" width="2.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="327.5" y="286.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.14%)</title><rect x="326.5" y="275.0" width="1.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="329.5" y="286.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="328.2" y="275.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="331.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (14 samples, 0.39%)</title><rect x="328.5" y="323.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="331.5" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.06%)</title><rect x="329.2" y="307.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.2" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.06%)</title><rect x="329.2" y="291.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="332.2" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.06%)</title><rect x="329.2" y="275.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="332.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (10 samples, 0.28%)</title><rect x="329.8" y="307.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.8" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (2 samples, 0.06%)</title><rect x="332.5" y="291.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="335.5" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (2 samples, 0.06%)</title><rect x="332.5" y="275.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="335.5" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (1 samples, 0.03%)</title><rect x="332.8" y="259.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (9 samples, 0.25%)</title><rect x="333.1" y="323.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="336.1" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.17%)</title><rect x="334.1" y="307.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="337.1" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (5 samples, 0.14%)</title><rect x="334.5" y="291.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="337.5" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (20 samples, 0.56%)</title><rect x="336.1" y="339.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="339.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="338.8" y="323.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="341.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (11 samples, 0.31%)</title><rect x="339.1" y="323.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="342.1" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="342.1" y="307.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="345.1" y="318.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.03%)</title><rect x="342.1" y="291.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="345.1" y="302.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.03%)</title><rect x="342.4" y="307.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="345.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.03%)</title><rect x="342.8" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="345.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="342.8" y="483.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="345.8" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="342.8" y="467.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="345.8" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.03%)</title><rect x="342.8" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="345.8" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.03%)</title><rect x="342.8" y="435.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="345.8" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.03%)</title><rect x="342.8" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="345.8" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1 samples, 0.03%)</title><rect x="342.8" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="345.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.03%)</title><rect x="342.8" y="387.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="345.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.03%)</title><rect x="342.8" y="371.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="345.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1 samples, 0.03%)</title><rect x="342.8" y="355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="345.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (1 samples, 0.03%)</title><rect x="342.8" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="345.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (1 samples, 0.03%)</title><rect x="342.8" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="345.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (1 samples, 0.03%)</title><rect x="342.8" y="307.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="345.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.03%)</title><rect x="342.8" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="345.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.03%)</title><rect x="342.8" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="345.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.03%)</title><rect x="342.8" y="259.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="345.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.03%)</title><rect x="342.8" y="243.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="345.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.03%)</title><rect x="342.8" y="227.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="345.8" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="342.8" y="211.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="345.8" y="222.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.03%)</title><rect x="342.8" y="195.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="345.8" y="206.0"></text>
</g>
<g>
<title>[pool-3-thread-3 tid=117889] (434 samples, 12.22%)</title><rect x="343.1" y="675.0" width="144.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="346.1" y="686.0">[pool-3-thread-3 t..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="343.1" y="659.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="346.1" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="343.1" y="643.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="346.1" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.03%)</title><rect x="343.1" y="627.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="346.1" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="343.1" y="611.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="346.1" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.run (433 samples, 12.19%)</title><rect x="343.4" y="659.0" width="143.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="346.4" y="670.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (433 samples, 12.19%)</title><rect x="343.4" y="643.0" width="143.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="346.4" y="654.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (433 samples, 12.19%)</title><rect x="343.4" y="627.0" width="143.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="346.4" y="638.0">java/util/concurre..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.run (433 samples, 12.19%)</title><rect x="343.4" y="611.0" width="143.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="346.4" y="622.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (433 samples, 12.19%)</title><rect x="343.4" y="595.0" width="143.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="346.4" y="606.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (433 samples, 12.19%)</title><rect x="343.4" y="579.0" width="143.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="346.4" y="590.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.11%)</title><rect x="343.4" y="563.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="346.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.11%)</title><rect x="343.4" y="547.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="346.4" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.11%)</title><rect x="343.4" y="531.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="346.4" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.11%)</title><rect x="343.4" y="515.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="346.4" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.11%)</title><rect x="343.4" y="499.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="346.4" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.11%)</title><rect x="343.4" y="483.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="346.4" y="494.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.06%)</title><rect x="343.8" y="467.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="346.8" y="478.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.06%)</title><rect x="343.8" y="451.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="346.8" y="462.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="344.4" y="467.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="347.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (429 samples, 12.07%)</title><rect x="344.8" y="563.0" width="142.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="347.8" y="574.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (13 samples, 0.37%)</title><rect x="344.8" y="547.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (13 samples, 0.37%)</title><rect x="344.8" y="531.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="347.8" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (13 samples, 0.37%)</title><rect x="344.8" y="515.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="347.8" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (13 samples, 0.37%)</title><rect x="344.8" y="499.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="347.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (13 samples, 0.37%)</title><rect x="344.8" y="483.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="347.8" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.37%)</title><rect x="344.8" y="467.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="347.8" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="344.8" y="451.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="347.8" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (12 samples, 0.34%)</title><rect x="345.1" y="451.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="348.1" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (12 samples, 0.34%)</title><rect x="345.1" y="435.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="348.1" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (12 samples, 0.34%)</title><rect x="345.1" y="419.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="348.1" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (12 samples, 0.34%)</title><rect x="345.1" y="403.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="348.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.34%)</title><rect x="345.1" y="387.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.34%)</title><rect x="345.1" y="371.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="348.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (12 samples, 0.34%)</title><rect x="345.1" y="355.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="348.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (12 samples, 0.34%)</title><rect x="345.1" y="339.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="348.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (12 samples, 0.34%)</title><rect x="345.1" y="323.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (12 samples, 0.34%)</title><rect x="345.1" y="307.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="348.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (6 samples, 0.17%)</title><rect x="345.1" y="291.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="348.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.17%)</title><rect x="345.1" y="275.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="348.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.17%)</title><rect x="345.1" y="259.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="348.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.17%)</title><rect x="345.1" y="243.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="348.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.08%)</title><rect x="345.1" y="227.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="348.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.08%)</title><rect x="345.1" y="211.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="348.1" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.08%)</title><rect x="345.1" y="195.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.1" y="206.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.08%)</title><rect x="345.1" y="179.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="348.1" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.08%)</title><rect x="346.1" y="227.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="349.1" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.06%)</title><rect x="346.1" y="211.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="349.1" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.06%)</title><rect x="346.1" y="195.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="349.1" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (1 samples, 0.03%)</title><rect x="346.8" y="211.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="349.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.17%)</title><rect x="347.1" y="291.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="350.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.17%)</title><rect x="347.1" y="275.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="350.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.17%)</title><rect x="347.1" y="259.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="350.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.17%)</title><rect x="347.1" y="243.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.17%)</title><rect x="347.1" y="227.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="350.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.17%)</title><rect x="347.1" y="211.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="350.1" y="222.0"></text>
</g>
<g>
<title>__pread (6 samples, 0.17%)</title><rect x="347.1" y="195.0" width="2.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="350.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (416 samples, 11.71%)</title><rect x="349.1" y="547.0" width="138.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.1" y="558.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (416 samples, 11.71%)</title><rect x="349.1" y="531.0" width="138.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.1" y="542.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="349.1" y="515.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="352.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="349.1" y="499.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="352.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.03%)</title><rect x="349.1" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="352.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (414 samples, 11.65%)</title><rect x="349.4" y="515.0" width="137.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="352.4" y="526.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (35 samples, 0.99%)</title><rect x="349.4" y="499.0" width="11.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="352.4" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (35 samples, 0.99%)</title><rect x="349.4" y="483.0" width="11.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="352.4" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (34 samples, 0.96%)</title><rect x="349.8" y="467.0" width="11.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="352.8" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (34 samples, 0.96%)</title><rect x="349.8" y="451.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="352.8" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (34 samples, 0.96%)</title><rect x="349.8" y="435.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="352.8" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (34 samples, 0.96%)</title><rect x="349.8" y="419.0" width="11.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="352.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (34 samples, 0.96%)</title><rect x="349.8" y="403.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="352.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (34 samples, 0.96%)</title><rect x="349.8" y="387.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="352.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (34 samples, 0.96%)</title><rect x="349.8" y="371.0" width="11.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="352.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (34 samples, 0.96%)</title><rect x="349.8" y="355.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="352.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (34 samples, 0.96%)</title><rect x="349.8" y="339.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="352.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (34 samples, 0.96%)</title><rect x="349.8" y="323.0" width="11.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="352.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.06%)</title><rect x="349.8" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="352.8" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="349.8" y="291.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.8" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="349.8" y="275.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="352.8" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="349.8" y="259.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="352.8" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="349.8" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="352.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="349.8" y="227.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="352.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="350.1" y="243.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="353.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.03%)</title><rect x="350.1" y="227.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="353.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (11 samples, 0.31%)</title><rect x="350.4" y="307.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="353.4" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.06%)</title><rect x="350.4" y="291.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="353.4" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="350.4" y="275.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="353.4" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="350.4" y="259.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="353.4" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="351.1" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="354.1" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="351.1" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="354.1" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="351.1" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="354.1" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="351.1" y="243.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="354.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="351.1" y="227.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="354.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (8 samples, 0.23%)</title><rect x="351.4" y="291.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="354.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (8 samples, 0.23%)</title><rect x="351.4" y="275.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="354.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.03%)</title><rect x="351.4" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="354.4" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="351.4" y="243.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="354.4" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.17%)</title><rect x="351.7" y="259.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="354.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.11%)</title><rect x="351.7" y="243.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="354.7" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.11%)</title><rect x="351.7" y="227.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="354.7" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.11%)</title><rect x="351.7" y="211.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="354.7" y="222.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.11%)</title><rect x="351.7" y="195.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="354.7" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.06%)</title><rect x="353.1" y="243.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="356.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (1 samples, 0.03%)</title><rect x="353.1" y="227.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="356.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (1 samples, 0.03%)</title><rect x="353.4" y="227.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="356.4" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.03%)</title><rect x="353.7" y="259.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="356.7" y="270.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="353.7" y="243.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="356.7" y="254.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.03%)</title><rect x="353.7" y="227.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="356.7" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (21 samples, 0.59%)</title><rect x="354.1" y="307.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="357.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (21 samples, 0.59%)</title><rect x="354.1" y="291.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.06%)</title><rect x="354.1" y="275.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="357.1" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.06%)</title><rect x="354.1" y="259.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="357.1" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="354.4" y="243.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="357.4" y="254.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="354.4" y="227.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="357.4" y="238.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="354.4" y="211.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="357.4" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (17 samples, 0.48%)</title><rect x="354.7" y="275.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="357.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (17 samples, 0.48%)</title><rect x="354.7" y="259.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="357.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (16 samples, 0.45%)</title><rect x="355.1" y="243.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="358.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (16 samples, 0.45%)</title><rect x="355.1" y="227.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="358.1" y="238.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.03%)</title><rect x="355.4" y="211.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="358.4" y="222.0"></text>
</g>
<g>
<title>__pread (13 samples, 0.37%)</title><rect x="355.7" y="211.0" width="4.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="358.7" y="222.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="360.0" y="211.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="363.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.03%)</title><rect x="360.4" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="363.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.03%)</title><rect x="360.7" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="363.7" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (370 samples, 10.41%)</title><rect x="361.0" y="499.0" width="122.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="364.0" y="510.0">java/util/Colle..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (370 samples, 10.41%)</title><rect x="361.0" y="483.0" width="122.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="364.0" y="494.0">java/lang/Itera..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1546833500.accept (370 samples, 10.41%)</title><rect x="361.0" y="467.0" width="122.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="364.0" y="478.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (370 samples, 10.41%)</title><rect x="361.0" y="451.0" width="122.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="364.0" y="462.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (370 samples, 10.41%)</title><rect x="361.0" y="435.0" width="122.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="364.0" y="446.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (370 samples, 10.41%)</title><rect x="361.0" y="419.0" width="122.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="364.0" y="430.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (370 samples, 10.41%)</title><rect x="361.0" y="403.0" width="122.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="364.0" y="414.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.14%)</title><rect x="361.4" y="387.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="364.4" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.08%)</title><rect x="361.4" y="371.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="364.4" y="382.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="362.4" y="371.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="365.4" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="362.7" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="365.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (364 samples, 10.24%)</title><rect x="363.0" y="387.0" width="120.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="366.0" y="398.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 0.37%)</title><rect x="363.0" y="371.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="366.0" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.28%)</title><rect x="364.0" y="355.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="367.0" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.28%)</title><rect x="364.0" y="339.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.0" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.11%)</title><rect x="365.4" y="323.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="368.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.08%)</title><rect x="365.7" y="307.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.7" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.08%)</title><rect x="365.7" y="291.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="368.7" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="366.4" y="275.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="369.4" y="286.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="366.7" y="323.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="369.7" y="334.0"></text>
</g>
<g>
<title>unsafe_arraycopy (1 samples, 0.03%)</title><rect x="367.0" y="323.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="370.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (118 samples, 3.32%)</title><rect x="367.4" y="371.0" width="39.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="370.4" y="382.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="367.7" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="370.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="367.7" y="339.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="370.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="367.7" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="370.7" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.39%)</title><rect x="368.0" y="355.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="371.0" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.34%)</title><rect x="368.7" y="339.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="371.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.34%)</title><rect x="368.7" y="323.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="371.7" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.11%)</title><rect x="371.3" y="307.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="374.3" y="318.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="372.0" y="291.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="375.0" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="372.3" y="291.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="375.3" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="372.3" y="275.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="375.3" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="372.3" y="259.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="375.3" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (102 samples, 2.87%)</title><rect x="372.7" y="355.0" width="33.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="375.7" y="366.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (101 samples, 2.84%)</title><rect x="373.0" y="339.0" width="33.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="376.0" y="350.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (7 samples, 0.20%)</title><rect x="373.0" y="323.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="376.0" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (7 samples, 0.20%)</title><rect x="373.0" y="307.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="376.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (91 samples, 2.56%)</title><rect x="375.3" y="323.0" width="30.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="378.3" y="334.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="375.3" y="307.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="378.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="375.3" y="291.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="378.3" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="375.3" y="275.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="378.3" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="375.3" y="259.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="378.3" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (1 samples, 0.03%)</title><rect x="375.3" y="243.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="378.3" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (76 samples, 2.14%)</title><rect x="375.7" y="307.0" width="25.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="378.7" y="318.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (76 samples, 2.14%)</title><rect x="375.7" y="291.0" width="25.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="378.7" y="302.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (76 samples, 2.14%)</title><rect x="375.7" y="275.0" width="25.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="378.7" y="286.0">s..</text>
</g>
<g>
<title>__pread (68 samples, 1.91%)</title><rect x="377.0" y="259.0" width="22.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="380.0" y="270.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.06%)</title><rect x="399.6" y="259.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="402.6" y="270.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="400.2" y="259.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="403.2" y="270.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.03%)</title><rect x="400.6" y="259.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="403.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="400.9" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="403.9" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="400.9" y="291.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="403.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (13 samples, 0.37%)</title><rect x="401.2" y="307.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="404.2" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (10 samples, 0.28%)</title><rect x="401.2" y="291.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="404.2" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.08%)</title><rect x="401.6" y="275.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="404.6" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (3 samples, 0.08%)</title><rect x="401.6" y="259.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="404.6" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (6 samples, 0.17%)</title><rect x="402.6" y="275.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="405.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (3 samples, 0.08%)</title><rect x="404.6" y="291.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="407.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.06%)</title><rect x="405.5" y="323.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.03%)</title><rect x="406.2" y="323.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="409.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="406.2" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="409.2" y="318.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="406.2" y="291.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="409.2" y="302.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.03%)</title><rect x="406.2" y="275.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="409.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (233 samples, 6.56%)</title><rect x="406.5" y="371.0" width="77.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="409.5" y="382.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (232 samples, 6.53%)</title><rect x="406.9" y="355.0" width="77.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="409.9" y="366.0">sun/nio/c..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (3 samples, 0.08%)</title><rect x="407.2" y="339.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="410.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (7 samples, 0.20%)</title><rect x="408.2" y="339.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="411.2" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (7 samples, 0.20%)</title><rect x="408.2" y="323.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="411.2" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.17%)</title><rect x="408.5" y="307.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="411.5" y="318.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.14%)</title><rect x="408.9" y="291.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="411.9" y="302.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.14%)</title><rect x="408.9" y="275.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (197 samples, 5.54%)</title><rect x="410.5" y="339.0" width="65.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.5" y="350.0">sun/nio..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (23 samples, 0.65%)</title><rect x="410.5" y="323.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="411.2" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.2" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="411.2" y="291.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="414.2" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (20 samples, 0.56%)</title><rect x="411.5" y="307.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (6 samples, 0.17%)</title><rect x="413.9" y="291.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.9" y="302.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="414.5" y="275.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="417.5" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.08%)</title><rect x="414.8" y="275.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="417.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (3 samples, 0.08%)</title><rect x="414.8" y="259.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="417.8" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.11%)</title><rect x="415.8" y="291.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="418.8" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.11%)</title><rect x="415.8" y="275.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="418.8" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.11%)</title><rect x="415.8" y="259.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="418.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.08%)</title><rect x="417.2" y="291.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="420.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.08%)</title><rect x="417.2" y="275.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="420.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.08%)</title><rect x="417.2" y="259.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="420.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.03%)</title><rect x="417.8" y="243.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="420.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (151 samples, 4.25%)</title><rect x="418.2" y="323.0" width="50.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="421.2" y="334.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (151 samples, 4.25%)</title><rect x="418.2" y="307.0" width="50.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="421.2" y="318.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (151 samples, 4.25%)</title><rect x="418.2" y="291.0" width="50.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="421.2" y="302.0">sun/n..</text>
</g>
<g>
<title>__pread (141 samples, 3.97%)</title><rect x="419.5" y="275.0" width="46.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="422.5" y="286.0">__pr..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.11%)</title><rect x="466.3" y="275.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="469.3" y="286.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.06%)</title><rect x="467.7" y="275.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="470.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (15 samples, 0.42%)</title><rect x="468.3" y="323.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="471.3" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.20%)</title><rect x="469.0" y="307.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.0" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.11%)</title><rect x="469.0" y="291.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="472.0" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (4 samples, 0.11%)</title><rect x="469.0" y="275.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="472.0" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.08%)</title><rect x="470.3" y="291.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="473.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (6 samples, 0.17%)</title><rect x="471.3" y="307.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="474.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (8 samples, 0.23%)</title><rect x="473.3" y="323.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="476.3" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.20%)</title><rect x="473.6" y="307.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.6" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (5 samples, 0.14%)</title><rect x="474.3" y="291.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="477.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (22 samples, 0.62%)</title><rect x="476.0" y="339.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.03%)</title><rect x="480.9" y="323.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="483.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (6 samples, 0.17%)</title><rect x="481.3" y="323.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.3" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="482.6" y="307.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="485.6" y="318.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.03%)</title><rect x="482.6" y="291.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="485.6" y="302.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.03%)</title><rect x="482.9" y="307.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="485.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.06%)</title><rect x="483.3" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.3" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="483.6" y="323.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="486.6" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="483.6" y="307.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="486.6" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="483.6" y="291.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="486.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.25%)</title><rect x="483.9" y="499.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="486.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.25%)</title><rect x="483.9" y="483.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="486.9" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.25%)</title><rect x="483.9" y="467.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="486.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (9 samples, 0.25%)</title><rect x="483.9" y="451.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.9" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (9 samples, 0.25%)</title><rect x="483.9" y="435.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="486.9" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (9 samples, 0.25%)</title><rect x="483.9" y="419.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.9" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (9 samples, 0.25%)</title><rect x="483.9" y="403.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.25%)</title><rect x="483.9" y="387.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.25%)</title><rect x="483.9" y="371.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="486.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (9 samples, 0.25%)</title><rect x="483.9" y="355.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="486.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (9 samples, 0.25%)</title><rect x="483.9" y="339.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (9 samples, 0.25%)</title><rect x="483.9" y="323.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="486.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (9 samples, 0.25%)</title><rect x="483.9" y="307.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="486.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.06%)</title><rect x="483.9" y="291.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.9" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="483.9" y="275.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.9" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="483.9" y="259.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="486.9" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="483.9" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="486.9" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="483.9" y="227.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="483.9" y="211.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="486.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.03%)</title><rect x="484.3" y="275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.3" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.03%)</title><rect x="484.3" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="487.3" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.03%)</title><rect x="484.3" y="243.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="487.3" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="484.3" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.3" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.20%)</title><rect x="484.6" y="291.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="487.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.20%)</title><rect x="484.6" y="275.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.03%)</title><rect x="484.6" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.6" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="484.6" y="243.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.6" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="484.6" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.6" y="238.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="484.6" y="211.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="487.6" y="222.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="484.6" y="195.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.6" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.17%)</title><rect x="484.9" y="259.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.17%)</title><rect x="484.9" y="243.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.9" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.17%)</title><rect x="484.9" y="227.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="487.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.17%)</title><rect x="484.9" y="211.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="487.9" y="222.0"></text>
</g>
<g>
<title>__pread (6 samples, 0.17%)</title><rect x="484.9" y="195.0" width="2.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="487.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (1 samples, 0.03%)</title><rect x="486.9" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (1 samples, 0.03%)</title><rect x="486.9" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="489.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="486.9" y="483.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="489.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.03%)</title><rect x="486.9" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="489.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (1 samples, 0.03%)</title><rect x="486.9" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="489.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (1 samples, 0.03%)</title><rect x="486.9" y="435.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="489.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (1 samples, 0.03%)</title><rect x="486.9" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="489.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="486.9" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="489.9" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="486.9" y="387.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="489.9" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="486.9" y="371.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="489.9" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compare (1 samples, 0.03%)</title><rect x="486.9" y="355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="489.9" y="366.0"></text>
</g>
<g>
<title>java/lang/Byte.compare (1 samples, 0.03%)</title><rect x="486.9" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="489.9" y="350.0"></text>
</g>
<g>
<title>[pool-3-thread-4 tid=117887] (461 samples, 12.97%)</title><rect x="487.2" y="675.0" width="153.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="490.2" y="686.0">[pool-3-thread-4 ti..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.08%)</title><rect x="487.2" y="659.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="490.2" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.08%)</title><rect x="487.2" y="643.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="490.2" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (3 samples, 0.08%)</title><rect x="487.2" y="627.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="490.2" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.08%)</title><rect x="487.2" y="611.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="490.2" y="622.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.06%)</title><rect x="488.2" y="659.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="491.2" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.06%)</title><rect x="488.2" y="643.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="491.2" y="654.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.03%)</title><rect x="488.2" y="627.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="491.2" y="638.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.03%)</title><rect x="488.6" y="627.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="491.6" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.run (456 samples, 12.83%)</title><rect x="488.9" y="659.0" width="151.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.9" y="670.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (456 samples, 12.83%)</title><rect x="488.9" y="643.0" width="151.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="491.9" y="654.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (456 samples, 12.83%)</title><rect x="488.9" y="627.0" width="151.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="491.9" y="638.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.03%)</title><rect x="488.9" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.03%)</title><rect x="488.9" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.run (455 samples, 12.81%)</title><rect x="489.2" y="611.0" width="151.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="492.2" y="622.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (455 samples, 12.81%)</title><rect x="489.2" y="595.0" width="151.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="492.2" y="606.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (455 samples, 12.81%)</title><rect x="489.2" y="579.0" width="151.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="492.2" y="590.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.11%)</title><rect x="489.2" y="563.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="492.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.06%)</title><rect x="489.6" y="547.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="492.6" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.06%)</title><rect x="489.6" y="531.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="492.6" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.06%)</title><rect x="489.6" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="492.6" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.03%)</title><rect x="489.6" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.6" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.03%)</title><rect x="489.6" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="492.6" y="494.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="489.6" y="467.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="492.6" y="478.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="489.6" y="451.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="492.6" y="462.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="489.9" y="499.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="492.9" y="510.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="489.9" y="483.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="492.9" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="490.2" y="547.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="493.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="490.2" y="531.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="490.2" y="515.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (451 samples, 12.69%)</title><rect x="490.6" y="563.0" width="149.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="493.6" y="574.0">ru/mail/polis/dao/D..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (13 samples, 0.37%)</title><rect x="490.9" y="547.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="493.9" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (13 samples, 0.37%)</title><rect x="490.9" y="531.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="493.9" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (13 samples, 0.37%)</title><rect x="490.9" y="515.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="493.9" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (13 samples, 0.37%)</title><rect x="490.9" y="499.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="493.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (13 samples, 0.37%)</title><rect x="490.9" y="483.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.9" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.34%)</title><rect x="490.9" y="467.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.9" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.06%)</title><rect x="490.9" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="493.9" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.06%)</title><rect x="490.9" y="435.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="493.9" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2 samples, 0.06%)</title><rect x="490.9" y="419.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="493.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.03%)</title><rect x="491.2" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="494.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.03%)</title><rect x="491.2" y="387.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.2" y="398.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.03%)</title><rect x="491.2" y="371.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="494.2" y="382.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.03%)</title><rect x="491.2" y="355.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.03%)</title><rect x="491.2" y="339.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="494.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.03%)</title><rect x="491.2" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="491.2" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.2" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.03%)</title><rect x="491.2" y="291.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="494.2" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (10 samples, 0.28%)</title><rect x="491.6" y="451.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.6" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (10 samples, 0.28%)</title><rect x="491.6" y="435.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="494.6" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (10 samples, 0.28%)</title><rect x="491.6" y="419.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="494.6" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (10 samples, 0.28%)</title><rect x="491.6" y="403.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="494.6" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.28%)</title><rect x="491.6" y="387.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="494.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.28%)</title><rect x="491.6" y="371.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="494.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (9 samples, 0.25%)</title><rect x="491.6" y="355.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (9 samples, 0.25%)</title><rect x="491.6" y="339.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="494.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (9 samples, 0.25%)</title><rect x="491.6" y="323.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (9 samples, 0.25%)</title><rect x="491.6" y="307.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="494.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.06%)</title><rect x="491.6" y="291.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.06%)</title><rect x="491.6" y="275.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="494.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.06%)</title><rect x="491.6" y="259.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.03%)</title><rect x="491.6" y="243.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="494.6" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="491.6" y="227.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.03%)</title><rect x="491.9" y="243.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.9" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.03%)</title><rect x="491.9" y="227.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="494.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.03%)</title><rect x="491.9" y="211.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="491.9" y="195.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.9" y="206.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.03%)</title><rect x="491.9" y="179.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="494.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.20%)</title><rect x="492.2" y="291.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="495.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.20%)</title><rect x="492.2" y="275.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="495.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.17%)</title><rect x="492.2" y="259.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="495.2" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.14%)</title><rect x="492.2" y="243.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="495.2" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.14%)</title><rect x="492.2" y="227.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="495.2" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.14%)</title><rect x="492.2" y="211.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="495.2" y="222.0"></text>
</g>
<g>
<title>__pread (5 samples, 0.14%)</title><rect x="492.2" y="195.0" width="1.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="495.2" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="493.9" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="496.9" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.03%)</title><rect x="494.2" y="259.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.2" y="270.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.03%)</title><rect x="494.6" y="355.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.03%)</title><rect x="494.6" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="497.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.03%)</title><rect x="494.6" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="497.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.03%)</title><rect x="494.6" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="497.6" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="494.6" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="497.6" y="302.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="494.6" y="275.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="497.6" y="286.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.03%)</title><rect x="494.6" y="259.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="497.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$85/1965158079.apply (1 samples, 0.03%)</title><rect x="494.9" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.03%)</title><rect x="494.9" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.9" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.03%)</title><rect x="494.9" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="497.9" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="494.9" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.9" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="494.9" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="497.9" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="494.9" y="387.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.9" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="494.9" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.9" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="494.9" y="355.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="494.9" y="339.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="497.9" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="494.9" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="497.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (1 samples, 0.03%)</title><rect x="495.2" y="547.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="498.2" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="495.2" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="498.2" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="495.2" y="515.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.2" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="495.2" y="499.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="498.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (436 samples, 12.27%)</title><rect x="495.6" y="547.0" width="144.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.6" y="558.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (436 samples, 12.27%)</title><rect x="495.6" y="531.0" width="144.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="498.6" y="542.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (434 samples, 12.22%)</title><rect x="495.6" y="515.0" width="144.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="498.6" y="526.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (50 samples, 1.41%)</title><rect x="495.6" y="499.0" width="16.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="498.6" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (50 samples, 1.41%)</title><rect x="495.6" y="483.0" width="16.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="498.6" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (49 samples, 1.38%)</title><rect x="495.9" y="467.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="498.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (49 samples, 1.38%)</title><rect x="495.9" y="451.0" width="16.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="498.9" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (49 samples, 1.38%)</title><rect x="495.9" y="435.0" width="16.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="498.9" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (49 samples, 1.38%)</title><rect x="495.9" y="419.0" width="16.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="498.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (48 samples, 1.35%)</title><rect x="496.2" y="403.0" width="16.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="499.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (47 samples, 1.32%)</title><rect x="496.5" y="387.0" width="15.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="499.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (44 samples, 1.24%)</title><rect x="496.5" y="371.0" width="14.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="499.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.03%)</title><rect x="496.5" y="355.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="499.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (1 samples, 0.03%)</title><rect x="496.5" y="339.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="499.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$65/790482547.apply (1 samples, 0.03%)</title><rect x="496.5" y="323.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="499.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (1 samples, 0.03%)</title><rect x="496.5" y="307.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="499.5" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="496.5" y="291.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.5" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.03%)</title><rect x="496.5" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="499.5" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="496.5" y="259.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="499.5" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="496.5" y="243.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="499.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="496.5" y="227.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="499.5" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="496.5" y="211.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.5" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="496.5" y="195.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="499.5" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="496.5" y="179.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="499.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (43 samples, 1.21%)</title><rect x="496.9" y="355.0" width="14.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (43 samples, 1.21%)</title><rect x="496.9" y="339.0" width="14.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="499.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (43 samples, 1.21%)</title><rect x="496.9" y="323.0" width="14.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="499.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="496.9" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="499.9" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="496.9" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.9" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="496.9" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="499.9" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="496.9" y="259.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="499.9" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="496.9" y="243.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="499.9" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.03%)</title><rect x="496.9" y="227.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="499.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (12 samples, 0.34%)</title><rect x="497.2" y="307.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="500.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="497.2" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="500.2" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="497.2" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="500.2" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="497.2" y="259.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="500.2" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.06%)</title><rect x="497.5" y="291.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="500.5" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="497.9" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="500.9" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="497.9" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="500.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (9 samples, 0.25%)</title><rect x="498.2" y="291.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (9 samples, 0.25%)</title><rect x="498.2" y="275.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="501.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.03%)</title><rect x="498.2" y="259.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.2" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="498.2" y="243.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.2" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (8 samples, 0.23%)</title><rect x="498.5" y="259.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="501.5" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="498.5" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="501.5" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="498.5" y="227.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.5" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="498.5" y="211.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="501.5" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.17%)</title><rect x="498.9" y="243.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.9" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.17%)</title><rect x="498.9" y="227.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="501.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.14%)</title><rect x="499.2" y="211.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="502.2" y="222.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.11%)</title><rect x="499.2" y="195.0" width="1.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="502.2" y="206.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="500.5" y="195.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="503.5" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="500.9" y="243.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.9" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (1 samples, 0.03%)</title><rect x="500.9" y="227.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="503.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (30 samples, 0.84%)</title><rect x="501.2" y="307.0" width="10.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (30 samples, 0.84%)</title><rect x="501.2" y="291.0" width="10.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.06%)</title><rect x="501.2" y="275.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="504.2" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.06%)</title><rect x="501.2" y="259.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="504.2" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="501.5" y="243.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="504.5" y="254.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="501.5" y="227.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.5" y="238.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="501.5" y="211.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="504.5" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.03%)</title><rect x="501.9" y="275.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="504.9" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.03%)</title><rect x="501.9" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="504.9" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="501.9" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.9" y="254.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="501.9" y="227.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="504.9" y="238.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="501.9" y="211.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="504.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (25 samples, 0.70%)</title><rect x="502.2" y="275.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="505.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (20 samples, 0.56%)</title><rect x="502.2" y="259.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.2" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (20 samples, 0.56%)</title><rect x="502.2" y="243.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="505.2" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (20 samples, 0.56%)</title><rect x="502.2" y="227.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="505.2" y="238.0"></text>
</g>
<g>
<title>__pread (18 samples, 0.51%)</title><rect x="502.5" y="211.0" width="6.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="505.5" y="222.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="508.5" y="211.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="511.5" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.14%)</title><rect x="508.8" y="259.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="511.8" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="508.8" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="511.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.11%)</title><rect x="509.2" y="243.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.2" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (1 samples, 0.03%)</title><rect x="510.2" y="227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.2" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.03%)</title><rect x="510.5" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="513.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.03%)</title><rect x="510.8" y="275.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="513.8" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.08%)</title><rect x="511.2" y="371.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.2" y="382.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.08%)</title><rect x="511.2" y="355.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="514.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.08%)</title><rect x="511.2" y="339.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="514.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.08%)</title><rect x="511.2" y="323.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.06%)</title><rect x="511.2" y="307.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="514.2" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="511.2" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.03%)</title><rect x="511.2" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="514.2" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="511.5" y="291.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.5" y="302.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.03%)</title><rect x="511.5" y="275.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="514.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.03%)</title><rect x="511.8" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="514.8" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="511.8" y="291.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="514.8" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (375 samples, 10.55%)</title><rect x="512.2" y="499.0" width="124.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.2" y="510.0">java/util/Colle..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (375 samples, 10.55%)</title><rect x="512.2" y="483.0" width="124.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.2" y="494.0">java/lang/Itera..</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.hasNext (1 samples, 0.03%)</title><rect x="512.2" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="515.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="512.2" y="451.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="515.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1546833500.accept (374 samples, 10.53%)</title><rect x="512.5" y="467.0" width="124.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="515.5" y="478.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (374 samples, 10.53%)</title><rect x="512.5" y="451.0" width="124.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="515.5" y="462.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (374 samples, 10.53%)</title><rect x="512.5" y="435.0" width="124.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="515.5" y="446.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (374 samples, 10.53%)</title><rect x="512.5" y="419.0" width="124.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="515.5" y="430.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (374 samples, 10.53%)</title><rect x="512.5" y="403.0" width="124.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="515.5" y="414.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.20%)</title><rect x="512.5" y="387.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.5" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.06%)</title><rect x="512.5" y="371.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="515.5" y="382.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.06%)</title><rect x="513.2" y="371.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="516.2" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="513.2" y="355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="516.2" y="366.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.03%)</title><rect x="513.5" y="355.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="516.5" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.08%)</title><rect x="513.8" y="371.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (367 samples, 10.33%)</title><rect x="514.8" y="387.0" width="121.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="517.8" y="398.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 0.37%)</title><rect x="514.8" y="371.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="517.8" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.28%)</title><rect x="515.8" y="355.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="518.8" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.25%)</title><rect x="516.1" y="339.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="519.1" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.17%)</title><rect x="517.1" y="323.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.1" y="334.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="518.8" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="521.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (127 samples, 3.57%)</title><rect x="519.1" y="371.0" width="42.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.1" y="382.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.14%)</title><rect x="519.1" y="355.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="522.1" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.14%)</title><rect x="519.1" y="339.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.14%)</title><rect x="519.1" y="323.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.1" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (15 samples, 0.42%)</title><rect x="520.8" y="355.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.8" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.34%)</title><rect x="521.8" y="339.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.34%)</title><rect x="521.8" y="323.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="524.8" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.11%)</title><rect x="524.4" y="307.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.4" y="318.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="524.4" y="291.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="527.4" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.06%)</title><rect x="524.8" y="291.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="527.8" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.06%)</title><rect x="524.8" y="275.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="527.8" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.06%)</title><rect x="524.8" y="259.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="527.8" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="525.4" y="291.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="528.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="525.4" y="275.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="528.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (107 samples, 3.01%)</title><rect x="525.8" y="355.0" width="35.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="528.8" y="366.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (106 samples, 2.98%)</title><rect x="526.1" y="339.0" width="35.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="529.1" y="350.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (9 samples, 0.25%)</title><rect x="526.1" y="323.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="529.1" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (9 samples, 0.25%)</title><rect x="526.1" y="307.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="529.1" y="318.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="528.8" y="291.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.8" y="302.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="528.8" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="531.8" y="286.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="528.8" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="531.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (92 samples, 2.59%)</title><rect x="529.1" y="323.0" width="30.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="532.1" y="334.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="529.4" y="307.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="532.4" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="529.4" y="291.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="532.4" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="529.4" y="275.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="532.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (73 samples, 2.05%)</title><rect x="529.8" y="307.0" width="24.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="532.8" y="318.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (73 samples, 2.05%)</title><rect x="529.8" y="291.0" width="24.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.8" y="302.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (73 samples, 2.05%)</title><rect x="529.8" y="275.0" width="24.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="532.8" y="286.0">s..</text>
</g>
<g>
<title>__pread (67 samples, 1.89%)</title><rect x="530.1" y="259.0" width="22.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="533.1" y="270.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.08%)</title><rect x="552.3" y="259.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="555.3" y="270.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.06%)</title><rect x="553.3" y="259.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="556.3" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="554.0" y="307.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="557.0" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="554.0" y="291.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="557.0" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="554.0" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.0" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.03%)</title><rect x="554.0" y="259.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (16 samples, 0.45%)</title><rect x="554.3" y="307.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="557.3" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (13 samples, 0.37%)</title><rect x="554.3" y="291.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="557.3" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (8 samples, 0.23%)</title><rect x="554.7" y="275.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="557.7" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (7 samples, 0.20%)</title><rect x="555.0" y="259.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.0" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.11%)</title><rect x="557.3" y="275.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="560.3" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (3 samples, 0.08%)</title><rect x="558.7" y="291.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="561.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.14%)</title><rect x="559.6" y="323.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.6" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.06%)</title><rect x="559.6" y="307.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="562.6" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.06%)</title><rect x="559.6" y="291.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="562.6" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.06%)</title><rect x="559.6" y="275.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="562.6" y="286.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.03%)</title><rect x="560.0" y="259.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="563.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.08%)</title><rect x="560.3" y="307.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="563.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (227 samples, 6.39%)</title><rect x="561.3" y="371.0" width="75.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="564.3" y="382.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (226 samples, 6.36%)</title><rect x="561.6" y="355.0" width="75.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.6" y="366.0">sun/nio/..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.03%)</title><rect x="562.0" y="339.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.11%)</title><rect x="562.3" y="339.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="565.3" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.11%)</title><rect x="562.3" y="323.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.3" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.06%)</title><rect x="562.6" y="307.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="565.6" y="318.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.06%)</title><rect x="562.6" y="291.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.6" y="302.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.06%)</title><rect x="562.6" y="275.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="565.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="563.3" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="566.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (198 samples, 5.57%)</title><rect x="563.6" y="339.0" width="65.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="566.6" y="350.0">sun/nio..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (24 samples, 0.68%)</title><rect x="563.6" y="323.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.6" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="564.0" y="307.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.0" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="564.0" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.0" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (22 samples, 0.62%)</title><rect x="564.3" y="307.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.3" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.08%)</title><rect x="566.0" y="291.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="569.0" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="566.6" y="275.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="569.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (1 samples, 0.03%)</title><rect x="566.6" y="259.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="569.6" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.14%)</title><rect x="567.0" y="291.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="570.0" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.14%)</title><rect x="567.0" y="275.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="570.0" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.14%)</title><rect x="567.0" y="259.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="570.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (9 samples, 0.25%)</title><rect x="568.6" y="291.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="571.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (9 samples, 0.25%)</title><rect x="568.6" y="275.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (6 samples, 0.17%)</title><rect x="569.6" y="259.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="572.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (1 samples, 0.03%)</title><rect x="569.9" y="243.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="572.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (1 samples, 0.03%)</title><rect x="569.9" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (4 samples, 0.11%)</title><rect x="570.3" y="243.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.3" y="254.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.03%)</title><rect x="571.3" y="227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.3" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (149 samples, 4.19%)</title><rect x="571.6" y="323.0" width="49.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.6" y="334.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (149 samples, 4.19%)</title><rect x="571.6" y="307.0" width="49.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.6" y="318.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (149 samples, 4.19%)</title><rect x="571.6" y="291.0" width="49.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="574.6" y="302.0">sun/n..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.06%)</title><rect x="573.6" y="275.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="576.6" y="286.0"></text>
</g>
<g>
<title>__pread (135 samples, 3.80%)</title><rect x="574.3" y="275.0" width="44.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="577.3" y="286.0">__pr..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.06%)</title><rect x="619.1" y="275.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="622.1" y="286.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.08%)</title><rect x="619.8" y="275.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="622.8" y="286.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="620.8" y="275.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="623.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (18 samples, 0.51%)</title><rect x="621.1" y="323.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="624.1" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.23%)</title><rect x="621.1" y="307.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="624.1" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (7 samples, 0.20%)</title><rect x="621.4" y="291.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.4" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (6 samples, 0.17%)</title><rect x="621.8" y="275.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="624.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (10 samples, 0.28%)</title><rect x="623.7" y="307.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (7 samples, 0.20%)</title><rect x="627.1" y="323.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.1" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.11%)</title><rect x="628.1" y="307.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="631.1" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.08%)</title><rect x="628.4" y="291.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="631.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (21 samples, 0.59%)</title><rect x="629.4" y="339.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.4" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="634.7" y="323.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="637.7" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="634.7" y="307.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="637.7" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="634.7" y="291.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="637.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.03%)</title><rect x="635.0" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="638.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.08%)</title><rect x="635.4" y="323.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="638.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.03%)</title><rect x="636.4" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="636.4" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.4" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="636.4" y="307.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="639.4" y="318.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.03%)</title><rect x="636.4" y="291.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="639.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.25%)</title><rect x="636.7" y="499.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.25%)</title><rect x="636.7" y="483.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.25%)</title><rect x="636.7" y="467.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.7" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (9 samples, 0.25%)</title><rect x="636.7" y="451.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="639.7" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (9 samples, 0.25%)</title><rect x="636.7" y="435.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="639.7" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (9 samples, 0.25%)</title><rect x="636.7" y="419.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.7" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (9 samples, 0.25%)</title><rect x="636.7" y="403.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="639.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.25%)</title><rect x="636.7" y="387.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.25%)</title><rect x="636.7" y="371.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="639.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (8 samples, 0.23%)</title><rect x="636.7" y="355.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (8 samples, 0.23%)</title><rect x="636.7" y="339.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="639.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (8 samples, 0.23%)</title><rect x="636.7" y="323.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (8 samples, 0.23%)</title><rect x="636.7" y="307.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="639.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.06%)</title><rect x="636.7" y="291.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="639.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.06%)</title><rect x="636.7" y="275.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.06%)</title><rect x="636.7" y="259.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="639.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.06%)</title><rect x="636.7" y="243.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.7" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.06%)</title><rect x="636.7" y="227.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.7" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.06%)</title><rect x="636.7" y="211.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="639.7" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.06%)</title><rect x="636.7" y="195.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.7" y="206.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.03%)</title><rect x="637.0" y="179.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="640.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.17%)</title><rect x="637.4" y="291.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="640.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.17%)</title><rect x="637.4" y="275.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="640.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.17%)</title><rect x="637.4" y="259.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="640.4" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.11%)</title><rect x="637.4" y="243.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="640.4" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.11%)</title><rect x="637.4" y="227.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.4" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.11%)</title><rect x="637.4" y="211.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.4" y="222.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.11%)</title><rect x="637.4" y="195.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="640.4" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.06%)</title><rect x="638.7" y="243.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="641.7" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.06%)</title><rect x="638.7" y="227.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="641.7" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (1 samples, 0.03%)</title><rect x="639.0" y="211.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="642.0" y="222.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.03%)</title><rect x="639.4" y="355.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.4" y="366.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.03%)</title><rect x="639.4" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.03%)</title><rect x="639.4" y="323.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.03%)</title><rect x="639.4" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.4" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="639.4" y="291.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="642.4" y="302.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="639.4" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="642.4" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="639.4" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="642.4" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="639.4" y="243.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (2 samples, 0.06%)</title><rect x="639.7" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="642.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (2 samples, 0.06%)</title><rect x="639.7" y="499.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="642.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (2 samples, 0.06%)</title><rect x="639.7" y="483.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="642.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (2 samples, 0.06%)</title><rect x="639.7" y="467.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (1 samples, 0.03%)</title><rect x="639.7" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="642.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (1 samples, 0.03%)</title><rect x="639.7" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="642.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="639.7" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="642.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="639.7" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="639.7" y="387.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.7" y="398.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="639.7" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (1 samples, 0.03%)</title><rect x="640.0" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (1 samples, 0.03%)</title><rect x="640.0" y="435.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (1 samples, 0.03%)</title><rect x="640.0" y="419.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.0" y="430.0"></text>
</g>
<g>
<title>[pool-3-thread-5 tid=117885] (426 samples, 11.99%)</title><rect x="640.4" y="675.0" width="141.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="643.4" y="686.0">[pool-3-thread-5 t..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.08%)</title><rect x="640.4" y="659.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="643.4" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.08%)</title><rect x="640.4" y="643.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="643.4" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (3 samples, 0.08%)</title><rect x="640.4" y="627.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="643.4" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.08%)</title><rect x="640.4" y="611.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="643.4" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.06%)</title><rect x="640.7" y="595.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="643.7" y="606.0"></text>
</g>
<g>
<title>java/lang/Thread.run (423 samples, 11.91%)</title><rect x="641.3" y="659.0" width="140.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="644.3" y="670.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (423 samples, 11.91%)</title><rect x="641.3" y="643.0" width="140.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.3" y="654.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (423 samples, 11.91%)</title><rect x="641.3" y="627.0" width="140.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="644.3" y="638.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.03%)</title><rect x="641.3" y="611.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="644.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.03%)</title><rect x="641.3" y="595.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.03%)</title><rect x="641.3" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="644.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="641.3" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="641.3" y="547.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.3" y="558.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.03%)</title><rect x="641.3" y="531.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="644.3" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.03%)</title><rect x="641.3" y="515.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="644.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.run (422 samples, 11.88%)</title><rect x="641.7" y="611.0" width="140.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.7" y="622.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (422 samples, 11.88%)</title><rect x="641.7" y="595.0" width="140.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.7" y="606.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (422 samples, 11.88%)</title><rect x="641.7" y="579.0" width="140.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.7" y="590.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.08%)</title><rect x="641.7" y="563.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="644.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.08%)</title><rect x="641.7" y="547.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="644.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="641.7" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.7" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.06%)</title><rect x="642.0" y="531.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="645.0" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.06%)</title><rect x="642.0" y="515.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.0" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.06%)</title><rect x="642.0" y="499.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.0" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.03%)</title><rect x="642.3" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="645.3" y="494.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.03%)</title><rect x="642.3" y="467.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="645.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (419 samples, 11.79%)</title><rect x="642.7" y="563.0" width="139.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="645.7" y="574.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (11 samples, 0.31%)</title><rect x="642.7" y="547.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (11 samples, 0.31%)</title><rect x="642.7" y="531.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (11 samples, 0.31%)</title><rect x="642.7" y="515.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="645.7" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (11 samples, 0.31%)</title><rect x="642.7" y="499.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="645.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (11 samples, 0.31%)</title><rect x="642.7" y="483.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.31%)</title><rect x="642.7" y="467.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.7" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (11 samples, 0.31%)</title><rect x="642.7" y="451.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="645.7" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (11 samples, 0.31%)</title><rect x="642.7" y="435.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.7" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (11 samples, 0.31%)</title><rect x="642.7" y="419.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.7" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (11 samples, 0.31%)</title><rect x="642.7" y="403.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.31%)</title><rect x="642.7" y="387.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="645.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.31%)</title><rect x="642.7" y="371.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (11 samples, 0.31%)</title><rect x="642.7" y="355.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.31%)</title><rect x="642.7" y="339.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="645.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.31%)</title><rect x="642.7" y="323.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (11 samples, 0.31%)</title><rect x="642.7" y="307.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="645.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.11%)</title><rect x="642.7" y="291.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.11%)</title><rect x="642.7" y="275.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.11%)</title><rect x="642.7" y="259.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="645.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.11%)</title><rect x="642.7" y="243.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="645.7" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.11%)</title><rect x="642.7" y="227.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.7" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.11%)</title><rect x="642.7" y="211.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.7" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.11%)</title><rect x="642.7" y="195.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="645.7" y="206.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.11%)</title><rect x="642.7" y="179.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="645.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.20%)</title><rect x="644.0" y="291.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.20%)</title><rect x="644.0" y="275.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.14%)</title><rect x="644.0" y="259.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.14%)</title><rect x="644.0" y="243.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.0" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.14%)</title><rect x="644.0" y="227.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="647.0" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.14%)</title><rect x="644.0" y="211.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.0" y="222.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.11%)</title><rect x="644.3" y="195.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="647.3" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.03%)</title><rect x="645.7" y="259.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="648.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.03%)</title><rect x="646.0" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.03%)</title><rect x="646.3" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="649.3" y="558.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="646.3" y="531.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="649.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (407 samples, 11.46%)</title><rect x="646.7" y="547.0" width="135.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="649.7" y="558.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (407 samples, 11.46%)</title><rect x="646.7" y="531.0" width="135.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="649.7" y="542.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="646.7" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="649.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="646.7" y="499.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="649.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.03%)</title><rect x="646.7" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="649.7" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.03%)</title><rect x="646.7" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="649.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (406 samples, 11.43%)</title><rect x="647.0" y="515.0" width="134.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="650.0" y="526.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (46 samples, 1.29%)</title><rect x="647.0" y="499.0" width="15.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.0" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (46 samples, 1.29%)</title><rect x="647.0" y="483.0" width="15.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.0" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (46 samples, 1.29%)</title><rect x="647.0" y="467.0" width="15.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.0" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (46 samples, 1.29%)</title><rect x="647.0" y="451.0" width="15.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="650.0" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (46 samples, 1.29%)</title><rect x="647.0" y="435.0" width="15.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.0" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (46 samples, 1.29%)</title><rect x="647.0" y="419.0" width="15.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="650.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (46 samples, 1.29%)</title><rect x="647.0" y="403.0" width="15.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (46 samples, 1.29%)</title><rect x="647.0" y="387.0" width="15.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="650.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (42 samples, 1.18%)</title><rect x="647.0" y="371.0" width="13.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="650.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.03%)</title><rect x="647.0" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="650.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="647.0" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="650.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="647.0" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.03%)</title><rect x="647.0" y="307.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="650.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (41 samples, 1.15%)</title><rect x="647.3" y="355.0" width="13.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="650.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (41 samples, 1.15%)</title><rect x="647.3" y="339.0" width="13.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="650.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (41 samples, 1.15%)</title><rect x="647.3" y="323.0" width="13.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="650.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="647.3" y="307.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="650.3" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="647.3" y="291.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.3" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="647.3" y="275.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="650.3" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="647.3" y="259.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="650.3" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="647.3" y="243.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.3" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.03%)</title><rect x="647.3" y="227.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="650.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (1 samples, 0.03%)</title><rect x="647.7" y="307.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="650.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (1 samples, 0.03%)</title><rect x="647.7" y="291.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="650.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (17 samples, 0.48%)</title><rect x="648.0" y="307.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="651.0" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="648.0" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="651.0" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="648.0" y="275.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="651.0" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="648.0" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="651.0" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.08%)</title><rect x="648.3" y="291.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="651.3" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="648.7" y="275.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="651.7" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="648.7" y="259.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="651.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 0.37%)</title><rect x="649.3" y="291.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="652.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 0.37%)</title><rect x="649.3" y="275.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.3" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.34%)</title><rect x="649.3" y="259.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="652.3" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="649.7" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="652.7" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="649.7" y="227.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="652.7" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.20%)</title><rect x="650.0" y="243.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="653.0" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.20%)</title><rect x="650.0" y="227.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="653.0" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.20%)</title><rect x="650.0" y="211.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="653.0" y="222.0"></text>
</g>
<g>
<title>__pread (7 samples, 0.20%)</title><rect x="650.0" y="195.0" width="2.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="653.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="652.3" y="243.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="655.3" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="652.3" y="227.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.3" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="652.3" y="211.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="655.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.06%)</title><rect x="652.6" y="243.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="655.6" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="652.6" y="227.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="655.6" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="652.6" y="211.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.6" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.03%)</title><rect x="652.6" y="195.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.6" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (1 samples, 0.03%)</title><rect x="653.0" y="227.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="656.0" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.03%)</title><rect x="653.3" y="259.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="656.3" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="653.3" y="243.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="656.3" y="254.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="653.3" y="227.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="656.3" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (22 samples, 0.62%)</title><rect x="653.6" y="307.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="656.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (22 samples, 0.62%)</title><rect x="653.6" y="291.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="656.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.06%)</title><rect x="653.6" y="275.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="656.6" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.06%)</title><rect x="653.6" y="259.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="656.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (16 samples, 0.45%)</title><rect x="654.3" y="275.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="657.3" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (14 samples, 0.39%)</title><rect x="654.3" y="259.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.3" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (14 samples, 0.39%)</title><rect x="654.3" y="243.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="657.3" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (14 samples, 0.39%)</title><rect x="654.3" y="227.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="657.3" y="238.0"></text>
</g>
<g>
<title>__pread (12 samples, 0.34%)</title><rect x="654.3" y="211.0" width="4.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="657.3" y="222.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.06%)</title><rect x="658.3" y="211.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="661.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.06%)</title><rect x="659.0" y="259.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="662.0" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="659.0" y="243.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="662.0" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="659.0" y="227.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="662.0" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.03%)</title><rect x="659.0" y="211.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.03%)</title><rect x="659.3" y="243.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="662.3" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.06%)</title><rect x="659.6" y="275.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="662.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="659.9" y="259.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="662.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.06%)</title><rect x="660.3" y="275.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.3" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.11%)</title><rect x="660.9" y="371.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.9" y="382.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.11%)</title><rect x="660.9" y="355.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="663.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.11%)</title><rect x="660.9" y="339.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.11%)</title><rect x="660.9" y="323.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.06%)</title><rect x="660.9" y="307.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="663.9" y="318.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="661.3" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="664.3" y="302.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.03%)</title><rect x="661.3" y="275.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="664.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.06%)</title><rect x="661.6" y="307.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="664.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.06%)</title><rect x="661.6" y="291.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="664.6" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (355 samples, 9.99%)</title><rect x="662.3" y="499.0" width="117.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.3" y="510.0">java/util/Coll..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (355 samples, 9.99%)</title><rect x="662.3" y="483.0" width="117.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="665.3" y="494.0">java/lang/Iter..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1546833500.accept (355 samples, 9.99%)</title><rect x="662.3" y="467.0" width="117.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="665.3" y="478.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (355 samples, 9.99%)</title><rect x="662.3" y="451.0" width="117.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="665.3" y="462.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (355 samples, 9.99%)</title><rect x="662.3" y="435.0" width="117.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.3" y="446.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (355 samples, 9.99%)</title><rect x="662.3" y="419.0" width="117.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="665.3" y="430.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (355 samples, 9.99%)</title><rect x="662.3" y="403.0" width="117.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="665.3" y="414.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.06%)</title><rect x="662.3" y="387.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.3" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="662.3" y="371.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="665.3" y="382.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="662.6" y="371.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="665.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (353 samples, 9.94%)</title><rect x="662.9" y="387.0" width="117.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="665.9" y="398.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (1 samples, 0.03%)</title><rect x="662.9" y="371.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="665.9" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.rewind (1 samples, 0.03%)</title><rect x="662.9" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="665.9" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (15 samples, 0.42%)</title><rect x="663.3" y="371.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="666.3" y="382.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="663.9" y="355.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="666.9" y="366.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="663.9" y="339.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="666.9" y="350.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="663.9" y="323.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="666.9" y="334.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="663.9" y="307.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="666.9" y="318.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="663.9" y="291.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="666.9" y="302.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="663.9" y="275.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="666.9" y="286.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="663.9" y="259.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="666.9" y="270.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="663.9" y="243.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="666.9" y="254.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.03%)</title><rect x="663.9" y="227.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="666.9" y="238.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.03%)</title><rect x="663.9" y="211.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="666.9" y="222.0"></text>
</g>
<g>
<title>HeapRegion::set_eden() (1 samples, 0.03%)</title><rect x="663.9" y="195.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="666.9" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.34%)</title><rect x="664.3" y="355.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="667.3" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.31%)</title><rect x="664.6" y="339.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="667.6" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.11%)</title><rect x="666.3" y="323.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="669.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.06%)</title><rect x="666.3" y="307.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="669.3" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.06%)</title><rect x="666.3" y="291.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="669.3" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="666.6" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="669.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.06%)</title><rect x="666.9" y="307.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.9" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="667.3" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="670.3" y="302.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="667.6" y="323.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="670.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (122 samples, 3.43%)</title><rect x="668.2" y="371.0" width="40.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.2" y="382.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.08%)</title><rect x="668.9" y="355.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="671.9" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="669.2" y="339.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="672.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="669.2" y="323.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="672.2" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.25%)</title><rect x="669.9" y="355.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.9" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.23%)</title><rect x="670.2" y="339.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="673.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.23%)</title><rect x="670.2" y="323.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="673.2" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="672.6" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="675.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (108 samples, 3.04%)</title><rect x="672.9" y="355.0" width="35.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.9" y="366.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (1 samples, 0.03%)</title><rect x="672.9" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="675.9" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.03%)</title><rect x="672.9" y="323.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="675.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (107 samples, 3.01%)</title><rect x="673.2" y="339.0" width="35.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.2" y="350.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.14%)</title><rect x="673.6" y="323.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.6" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.08%)</title><rect x="674.2" y="307.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.2" y="318.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.06%)</title><rect x="674.6" y="291.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="677.6" y="302.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="674.9" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="677.9" y="286.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="674.9" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="677.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (91 samples, 2.56%)</title><rect x="675.2" y="323.0" width="30.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="678.2" y="334.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="675.2" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="678.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="675.2" y="291.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="678.2" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="675.2" y="275.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="678.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (79 samples, 2.22%)</title><rect x="675.6" y="307.0" width="26.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="678.6" y="318.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (79 samples, 2.22%)</title><rect x="675.6" y="291.0" width="26.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="678.6" y="302.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (79 samples, 2.22%)</title><rect x="675.6" y="275.0" width="26.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="678.6" y="286.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.06%)</title><rect x="677.2" y="259.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="680.2" y="270.0"></text>
</g>
<g>
<title>__pread (67 samples, 1.89%)</title><rect x="677.9" y="259.0" width="22.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="680.9" y="270.0">_..</text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.14%)</title><rect x="700.1" y="259.0" width="1.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="703.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="701.8" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="704.8" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="701.8" y="291.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="704.8" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="701.8" y="275.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="704.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (10 samples, 0.28%)</title><rect x="702.1" y="307.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="705.1" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.17%)</title><rect x="702.5" y="291.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="705.5" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.11%)</title><rect x="702.5" y="275.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="705.5" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (4 samples, 0.11%)</title><rect x="702.5" y="259.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="705.5" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.06%)</title><rect x="703.8" y="275.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (3 samples, 0.08%)</title><rect x="704.4" y="291.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="707.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (10 samples, 0.28%)</title><rect x="705.4" y="323.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.4" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.06%)</title><rect x="706.4" y="307.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="709.4" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.06%)</title><rect x="706.4" y="291.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="709.4" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.03%)</title><rect x="706.4" y="275.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="709.4" y="286.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="706.8" y="275.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="709.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.14%)</title><rect x="707.1" y="307.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="710.1" y="318.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (1 samples, 0.03%)</title><rect x="708.4" y="291.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="711.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (215 samples, 6.05%)</title><rect x="708.8" y="371.0" width="71.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.8" y="382.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (215 samples, 6.05%)</title><rect x="708.8" y="355.0" width="71.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="711.8" y="366.0">sun/nio/..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (2 samples, 0.06%)</title><rect x="709.4" y="339.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="712.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (6 samples, 0.17%)</title><rect x="710.1" y="339.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="713.1" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (6 samples, 0.17%)</title><rect x="710.1" y="323.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="713.1" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.17%)</title><rect x="710.1" y="307.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="713.1" y="318.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.14%)</title><rect x="710.4" y="291.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="713.4" y="302.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.14%)</title><rect x="710.4" y="275.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="713.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (178 samples, 5.01%)</title><rect x="712.1" y="339.0" width="59.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="715.1" y="350.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (18 samples, 0.51%)</title><rect x="712.1" y="323.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="715.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="712.1" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.1" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="712.1" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.1" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (17 samples, 0.48%)</title><rect x="712.4" y="307.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="715.4" y="318.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.reachabilityFence (1 samples, 0.03%)</title><rect x="714.1" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="717.1" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (4 samples, 0.11%)</title><rect x="714.4" y="291.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="717.4" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.03%)</title><rect x="715.4" y="275.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="718.4" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.11%)</title><rect x="715.7" y="291.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="718.7" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.11%)</title><rect x="715.7" y="275.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.7" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.11%)</title><rect x="715.7" y="259.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="718.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.08%)</title><rect x="717.1" y="291.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="720.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.08%)</title><rect x="717.1" y="275.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="720.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.06%)</title><rect x="717.4" y="259.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="720.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.03%)</title><rect x="717.7" y="243.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.7" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (143 samples, 4.02%)</title><rect x="718.1" y="323.0" width="47.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="721.1" y="334.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (142 samples, 4.00%)</title><rect x="718.4" y="307.0" width="47.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="721.4" y="318.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (142 samples, 4.00%)</title><rect x="718.4" y="291.0" width="47.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="721.4" y="302.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.06%)</title><rect x="719.1" y="275.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="722.1" y="286.0"></text>
</g>
<g>
<title>__pread (124 samples, 3.49%)</title><rect x="719.7" y="275.0" width="41.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="722.7" y="286.0">__p..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.14%)</title><rect x="760.9" y="275.0" width="1.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="763.9" y="286.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (6 samples, 0.17%)</title><rect x="762.6" y="275.0" width="2.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="765.6" y="286.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.08%)</title><rect x="764.6" y="275.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="767.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (13 samples, 0.37%)</title><rect x="765.6" y="323.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="768.6" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.08%)</title><rect x="765.9" y="307.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="768.9" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="766.2" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="769.2" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.03%)</title><rect x="766.2" y="275.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="769.2" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="766.6" y="291.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (9 samples, 0.25%)</title><rect x="766.9" y="307.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="769.9" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.11%)</title><rect x="768.5" y="291.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.5" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.06%)</title><rect x="769.2" y="275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="772.2" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.06%)</title><rect x="769.2" y="259.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="772.2" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.06%)</title><rect x="769.2" y="243.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="772.2" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (4 samples, 0.11%)</title><rect x="769.9" y="323.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="772.9" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.11%)</title><rect x="769.9" y="307.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="772.9" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.11%)</title><rect x="769.9" y="291.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (26 samples, 0.73%)</title><rect x="771.2" y="339.0" width="8.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="774.2" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.06%)</title><rect x="777.2" y="323.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="780.2" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.06%)</title><rect x="777.2" y="307.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="780.2" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="777.5" y="291.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="780.5" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="777.8" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="780.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.14%)</title><rect x="778.2" y="323.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.2" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="779.2" y="307.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="782.2" y="318.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.03%)</title><rect x="779.2" y="291.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="782.2" y="302.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.03%)</title><rect x="779.5" y="307.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="782.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.03%)</title><rect x="779.8" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.8" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="779.8" y="323.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="782.8" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="779.8" y="307.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="782.8" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="779.8" y="291.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="782.8" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.03%)</title><rect x="779.8" y="275.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="782.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.14%)</title><rect x="780.2" y="499.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="783.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.14%)</title><rect x="780.2" y="483.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="783.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.14%)</title><rect x="780.2" y="467.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="783.2" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.14%)</title><rect x="780.2" y="451.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="783.2" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.14%)</title><rect x="780.2" y="435.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="783.2" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.14%)</title><rect x="780.2" y="419.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="783.2" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.14%)</title><rect x="780.2" y="403.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="783.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.14%)</title><rect x="780.2" y="387.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.14%)</title><rect x="780.2" y="371.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="783.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5 samples, 0.14%)</title><rect x="780.2" y="355.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="783.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.14%)</title><rect x="780.2" y="339.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="783.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.14%)</title><rect x="780.2" y="323.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="783.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (5 samples, 0.14%)</title><rect x="780.2" y="307.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="783.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.06%)</title><rect x="780.2" y="291.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="783.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.06%)</title><rect x="780.2" y="275.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="783.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.06%)</title><rect x="780.2" y="259.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="783.2" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.06%)</title><rect x="780.2" y="243.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="783.2" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="780.2" y="227.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.2" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="780.2" y="211.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="783.2" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="780.2" y="195.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="783.2" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.03%)</title><rect x="780.5" y="227.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="783.5" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.03%)</title><rect x="780.5" y="211.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="783.5" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="780.5" y="195.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="783.5" y="206.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.03%)</title><rect x="780.5" y="179.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="783.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.08%)</title><rect x="780.8" y="291.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.08%)</title><rect x="780.8" y="275.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="783.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.03%)</title><rect x="780.8" y="259.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="783.8" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="780.8" y="243.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="783.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.06%)</title><rect x="781.2" y="259.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="784.2" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="781.2" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="784.2" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.03%)</title><rect x="781.5" y="243.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="784.5" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.03%)</title><rect x="781.5" y="227.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="784.5" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="781.5" y="211.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="784.5" y="222.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.03%)</title><rect x="781.5" y="195.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="784.5" y="206.0"></text>
</g>
<g>
<title>[pool-3-thread-6 tid=117886] (397 samples, 11.17%)</title><rect x="781.8" y="675.0" width="131.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="784.8" y="686.0">[pool-3-thread-6..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="781.8" y="659.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="784.8" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="781.8" y="643.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="784.8" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.03%)</title><rect x="781.8" y="627.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="784.8" y="638.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="781.8" y="611.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="784.8" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.run (396 samples, 11.15%)</title><rect x="782.2" y="659.0" width="131.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="785.2" y="670.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (396 samples, 11.15%)</title><rect x="782.2" y="643.0" width="131.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.2" y="654.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (396 samples, 11.15%)</title><rect x="782.2" y="627.0" width="131.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="785.2" y="638.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.03%)</title><rect x="782.2" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="785.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.03%)</title><rect x="782.2" y="595.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="785.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="782.2" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="785.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="782.2" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="785.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="782.2" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="785.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="782.2" y="531.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="785.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="782.2" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="785.2" y="526.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="782.2" y="499.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="785.2" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="782.2" y="483.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="785.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.run (395 samples, 11.12%)</title><rect x="782.5" y="611.0" width="131.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="785.5" y="622.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (395 samples, 11.12%)</title><rect x="782.5" y="595.0" width="131.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="785.5" y="606.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (395 samples, 11.12%)</title><rect x="782.5" y="579.0" width="131.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="785.5" y="590.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.11%)</title><rect x="782.5" y="563.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="785.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.11%)</title><rect x="782.5" y="547.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="785.5" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="782.5" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="785.5" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.08%)</title><rect x="782.8" y="531.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="785.8" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.08%)</title><rect x="782.8" y="515.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.8" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.08%)</title><rect x="782.8" y="499.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="785.8" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.08%)</title><rect x="782.8" y="483.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="785.8" y="494.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="782.8" y="467.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="785.8" y="478.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (1 samples, 0.03%)</title><rect x="782.8" y="451.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="785.8" y="462.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.06%)</title><rect x="783.2" y="467.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="786.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (391 samples, 11.00%)</title><rect x="783.8" y="563.0" width="129.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="786.8" y="574.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (6 samples, 0.17%)</title><rect x="783.8" y="547.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (6 samples, 0.17%)</title><rect x="783.8" y="531.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="786.8" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (6 samples, 0.17%)</title><rect x="783.8" y="515.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="786.8" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (6 samples, 0.17%)</title><rect x="783.8" y="499.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="786.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.17%)</title><rect x="783.8" y="483.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="786.8" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.17%)</title><rect x="783.8" y="467.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="786.8" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.03%)</title><rect x="783.8" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="786.8" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.03%)</title><rect x="783.8" y="435.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="786.8" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.03%)</title><rect x="783.8" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="786.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.03%)</title><rect x="783.8" y="403.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="786.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.03%)</title><rect x="783.8" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="786.8" y="398.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.03%)</title><rect x="783.8" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="786.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.03%)</title><rect x="783.8" y="355.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="786.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.03%)</title><rect x="783.8" y="339.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="786.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.03%)</title><rect x="783.8" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="786.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.03%)</title><rect x="783.8" y="307.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="786.8" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.03%)</title><rect x="783.8" y="291.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="786.8" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="783.8" y="275.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="786.8" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="783.8" y="259.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="786.8" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="783.8" y="243.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="786.8" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="783.8" y="227.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="786.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="783.8" y="211.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="786.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.14%)</title><rect x="784.2" y="451.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="787.2" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.14%)</title><rect x="784.2" y="435.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="787.2" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.14%)</title><rect x="784.2" y="419.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="787.2" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.14%)</title><rect x="784.2" y="403.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="787.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.14%)</title><rect x="784.2" y="387.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="787.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.14%)</title><rect x="784.2" y="371.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="787.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5 samples, 0.14%)</title><rect x="784.2" y="355.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="787.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.14%)</title><rect x="784.2" y="339.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="787.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.14%)</title><rect x="784.2" y="323.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="787.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (5 samples, 0.14%)</title><rect x="784.2" y="307.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="787.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.03%)</title><rect x="784.2" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="787.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.03%)</title><rect x="784.2" y="275.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="787.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.03%)</title><rect x="784.2" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="787.2" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.03%)</title><rect x="784.2" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="787.2" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.03%)</title><rect x="784.2" y="227.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="787.2" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.03%)</title><rect x="784.2" y="211.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="787.2" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="784.2" y="195.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="787.2" y="206.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.03%)</title><rect x="784.2" y="179.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="787.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.11%)</title><rect x="784.5" y="291.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="787.5" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.11%)</title><rect x="784.5" y="275.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.03%)</title><rect x="784.5" y="259.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="787.5" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="784.5" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="787.5" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.08%)</title><rect x="784.8" y="259.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="787.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.06%)</title><rect x="784.8" y="243.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="787.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.06%)</title><rect x="784.8" y="227.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="787.8" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.06%)</title><rect x="784.8" y="211.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="787.8" y="222.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.06%)</title><rect x="784.8" y="195.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="787.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="785.5" y="243.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="788.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.08%)</title><rect x="785.8" y="547.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (382 samples, 10.75%)</title><rect x="786.8" y="547.0" width="126.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="789.8" y="558.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (382 samples, 10.75%)</title><rect x="786.8" y="531.0" width="126.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="789.8" y="542.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.06%)</title><rect x="786.8" y="515.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.06%)</title><rect x="786.8" y="499.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="789.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.06%)</title><rect x="786.8" y="483.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="789.8" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.06%)</title><rect x="786.8" y="467.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.8" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="787.1" y="451.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="790.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (379 samples, 10.67%)</title><rect x="787.5" y="515.0" width="125.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="790.5" y="526.0">ru/mail/polis/d..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (49 samples, 1.38%)</title><rect x="787.5" y="499.0" width="16.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="790.5" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (49 samples, 1.38%)</title><rect x="787.5" y="483.0" width="16.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="790.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (49 samples, 1.38%)</title><rect x="787.5" y="467.0" width="16.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="790.5" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (49 samples, 1.38%)</title><rect x="787.5" y="451.0" width="16.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="790.5" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (49 samples, 1.38%)</title><rect x="787.5" y="435.0" width="16.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="790.5" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (49 samples, 1.38%)</title><rect x="787.5" y="419.0" width="16.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="790.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (49 samples, 1.38%)</title><rect x="787.5" y="403.0" width="16.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="790.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (49 samples, 1.38%)</title><rect x="787.5" y="387.0" width="16.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="790.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (47 samples, 1.32%)</title><rect x="787.8" y="371.0" width="15.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="790.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (47 samples, 1.32%)</title><rect x="787.8" y="355.0" width="15.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="790.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (47 samples, 1.32%)</title><rect x="787.8" y="339.0" width="15.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (47 samples, 1.32%)</title><rect x="787.8" y="323.0" width="15.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.06%)</title><rect x="787.8" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.8" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="787.8" y="291.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="790.8" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="787.8" y="275.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="790.8" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="787.8" y="259.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="790.8" y="270.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="787.8" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="788.1" y="243.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.03%)</title><rect x="788.1" y="227.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.1" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (1 samples, 0.03%)</title><rect x="788.5" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (1 samples, 0.03%)</title><rect x="788.5" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="791.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (19 samples, 0.53%)</title><rect x="788.8" y="307.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.8" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.11%)</title><rect x="789.1" y="291.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="792.1" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="789.5" y="275.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="792.5" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="789.8" y="259.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="792.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (14 samples, 0.39%)</title><rect x="790.5" y="291.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="793.5" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (14 samples, 0.39%)</title><rect x="790.5" y="275.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="793.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.03%)</title><rect x="790.5" y="259.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="793.5" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="790.5" y="243.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="793.5" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.25%)</title><rect x="790.8" y="259.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="793.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (8 samples, 0.23%)</title><rect x="790.8" y="243.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="793.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (8 samples, 0.23%)</title><rect x="790.8" y="227.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.8" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (8 samples, 0.23%)</title><rect x="790.8" y="211.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="793.8" y="222.0"></text>
</g>
<g>
<title>__pread (8 samples, 0.23%)</title><rect x="790.8" y="195.0" width="2.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="793.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="793.5" y="243.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="796.5" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (1 samples, 0.03%)</title><rect x="793.5" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.5" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.11%)</title><rect x="793.8" y="259.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="796.8" y="270.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.11%)</title><rect x="793.8" y="243.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="796.8" y="254.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.11%)</title><rect x="793.8" y="227.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="796.8" y="238.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.03%)</title><rect x="793.8" y="211.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="796.8" y="222.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.08%)</title><rect x="794.1" y="211.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="797.1" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (25 samples, 0.70%)</title><rect x="795.1" y="307.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="798.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (25 samples, 0.70%)</title><rect x="795.1" y="291.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="798.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.06%)</title><rect x="795.1" y="275.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="798.1" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.06%)</title><rect x="795.1" y="259.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="798.1" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="795.4" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="798.4" y="254.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="795.4" y="227.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="798.4" y="238.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="795.4" y="211.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.4" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (17 samples, 0.48%)</title><rect x="795.8" y="275.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="798.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="795.8" y="259.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.25%)</title><rect x="796.1" y="259.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="799.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 0.25%)</title><rect x="796.1" y="243.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="799.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.25%)</title><rect x="796.1" y="227.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="799.1" y="238.0"></text>
</g>
<g>
<title>__pread (9 samples, 0.25%)</title><rect x="796.1" y="211.0" width="3.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="799.1" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.20%)</title><rect x="799.1" y="259.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="802.1" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.14%)</title><rect x="799.1" y="243.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="802.1" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.11%)</title><rect x="799.1" y="227.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="802.1" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (3 samples, 0.08%)</title><rect x="799.4" y="211.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="802.4" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.03%)</title><rect x="800.4" y="227.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="803.4" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.06%)</title><rect x="800.8" y="243.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="803.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.14%)</title><rect x="801.4" y="275.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="804.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.06%)</title><rect x="802.4" y="259.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="805.4" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.03%)</title><rect x="803.1" y="275.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="806.1" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.03%)</title><rect x="803.4" y="371.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="806.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.03%)</title><rect x="803.4" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="806.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.03%)</title><rect x="803.4" y="339.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="806.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.03%)</title><rect x="803.4" y="323.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="806.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="803.4" y="307.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="806.4" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="803.4" y="291.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="806.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.03%)</title><rect x="803.4" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="806.4" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (322 samples, 9.06%)</title><rect x="803.8" y="499.0" width="106.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="806.8" y="510.0">java/util/Col..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (322 samples, 9.06%)</title><rect x="803.8" y="483.0" width="106.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="806.8" y="494.0">java/lang/Ite..</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (1 samples, 0.03%)</title><rect x="803.8" y="467.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="806.8" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="803.8" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="806.8" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="803.8" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="806.8" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.prevEntry (1 samples, 0.03%)</title><rect x="803.8" y="419.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="806.8" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.predecessor (1 samples, 0.03%)</title><rect x="803.8" y="403.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="806.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1546833500.accept (321 samples, 9.03%)</title><rect x="804.1" y="467.0" width="106.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.1" y="478.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (321 samples, 9.03%)</title><rect x="804.1" y="451.0" width="106.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="807.1" y="462.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (321 samples, 9.03%)</title><rect x="804.1" y="435.0" width="106.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.1" y="446.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (321 samples, 9.03%)</title><rect x="804.1" y="419.0" width="106.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="807.1" y="430.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (321 samples, 9.03%)</title><rect x="804.1" y="403.0" width="106.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="807.1" y="414.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.23%)</title><rect x="804.1" y="387.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="807.1" y="398.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.14%)</title><rect x="804.7" y="371.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="807.7" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (1 samples, 0.03%)</title><rect x="805.4" y="355.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.4" y="366.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.06%)</title><rect x="805.7" y="355.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="808.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="806.4" y="371.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="809.4" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.03%)</title><rect x="806.4" y="355.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="809.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (313 samples, 8.81%)</title><rect x="806.7" y="387.0" width="104.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.7" y="398.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.25%)</title><rect x="806.7" y="371.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="809.7" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.23%)</title><rect x="807.1" y="355.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="810.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.17%)</title><rect x="807.7" y="339.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="810.7" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="808.4" y="323.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="811.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.06%)</title><rect x="808.7" y="307.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="811.7" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="809.1" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="812.1" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="809.1" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="812.1" y="286.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="809.4" y="323.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="812.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (126 samples, 3.55%)</title><rect x="809.7" y="371.0" width="41.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="812.7" y="382.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.20%)</title><rect x="810.4" y="355.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="813.4" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.20%)</title><rect x="810.4" y="339.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.20%)</title><rect x="810.4" y="323.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.4" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (12 samples, 0.34%)</title><rect x="812.7" y="355.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="815.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.28%)</title><rect x="813.4" y="339.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="816.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.28%)</title><rect x="813.4" y="323.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="816.4" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.11%)</title><rect x="815.4" y="307.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="818.4" y="318.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="815.7" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="818.7" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="816.0" y="291.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="819.0" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="816.0" y="275.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="819.0" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="816.0" y="259.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.0" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="816.4" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="819.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="816.4" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="819.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (105 samples, 2.96%)</title><rect x="816.7" y="355.0" width="34.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="819.7" y="366.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (105 samples, 2.96%)</title><rect x="816.7" y="339.0" width="34.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.7" y="350.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.11%)</title><rect x="816.7" y="323.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="819.7" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.11%)</title><rect x="816.7" y="307.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="819.7" y="318.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="817.7" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="820.7" y="302.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="817.7" y="275.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="820.7" y="286.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="817.7" y="259.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="820.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (94 samples, 2.65%)</title><rect x="818.0" y="323.0" width="31.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="821.0" y="334.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.06%)</title><rect x="818.0" y="307.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.06%)</title><rect x="818.0" y="291.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="821.0" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.06%)</title><rect x="818.0" y="275.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.0" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.06%)</title><rect x="818.0" y="259.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="821.0" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (1 samples, 0.03%)</title><rect x="818.0" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="821.0" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (1 samples, 0.03%)</title><rect x="818.4" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="821.4" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (81 samples, 2.28%)</title><rect x="818.7" y="307.0" width="26.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.7" y="318.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (81 samples, 2.28%)</title><rect x="818.7" y="291.0" width="26.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="821.7" y="302.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (80 samples, 2.25%)</title><rect x="819.0" y="275.0" width="26.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.0" y="286.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.06%)</title><rect x="821.0" y="259.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="824.0" y="270.0"></text>
</g>
<g>
<title>__pread (69 samples, 1.94%)</title><rect x="821.7" y="259.0" width="22.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="824.7" y="270.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.06%)</title><rect x="844.6" y="259.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="847.6" y="270.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="845.3" y="259.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="848.3" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="845.6" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="848.6" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="845.6" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="848.6" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="845.6" y="275.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (10 samples, 0.28%)</title><rect x="845.9" y="307.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="848.9" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.20%)</title><rect x="845.9" y="291.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.9" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (7 samples, 0.20%)</title><rect x="845.9" y="275.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="848.9" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (7 samples, 0.20%)</title><rect x="845.9" y="259.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (3 samples, 0.08%)</title><rect x="848.3" y="291.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="851.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.14%)</title><rect x="849.3" y="323.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="852.3" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="849.9" y="307.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="852.9" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="849.9" y="291.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="852.9" y="302.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="849.9" y="275.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="852.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.06%)</title><rect x="850.2" y="307.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.06%)</title><rect x="850.9" y="323.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="853.9" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="850.9" y="307.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="853.9" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="850.9" y="291.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="853.9" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="850.9" y="275.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="853.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="851.2" y="307.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="854.2" y="318.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="851.2" y="291.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="854.2" y="302.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.03%)</title><rect x="851.2" y="275.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="854.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (177 samples, 4.98%)</title><rect x="851.6" y="371.0" width="58.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="854.6" y="382.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (177 samples, 4.98%)</title><rect x="851.6" y="355.0" width="58.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.6" y="366.0">sun/ni..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (4 samples, 0.11%)</title><rect x="851.9" y="339.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="854.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.11%)</title><rect x="853.2" y="339.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.2" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.11%)</title><rect x="853.2" y="323.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="856.2" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.11%)</title><rect x="853.2" y="307.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="856.2" y="318.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.08%)</title><rect x="853.6" y="291.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="856.6" y="302.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.08%)</title><rect x="853.6" y="275.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="856.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="854.2" y="259.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="857.2" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (145 samples, 4.08%)</title><rect x="854.6" y="339.0" width="48.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="857.6" y="350.0">sun/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (20 samples, 0.56%)</title><rect x="854.6" y="323.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="857.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (19 samples, 0.53%)</title><rect x="854.9" y="307.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="857.9" y="318.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.reachabilityFence (1 samples, 0.03%)</title><rect x="856.6" y="291.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="859.6" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.08%)</title><rect x="856.9" y="291.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="859.9" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.03%)</title><rect x="857.6" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="860.6" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.06%)</title><rect x="857.9" y="291.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="860.9" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.06%)</title><rect x="857.9" y="275.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="860.9" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.06%)</title><rect x="857.9" y="259.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="860.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (8 samples, 0.23%)</title><rect x="858.6" y="291.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="861.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (8 samples, 0.23%)</title><rect x="858.6" y="275.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="861.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (6 samples, 0.17%)</title><rect x="859.2" y="259.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="862.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (4 samples, 0.11%)</title><rect x="859.9" y="243.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="862.9" y="254.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.03%)</title><rect x="860.9" y="227.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="863.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (113 samples, 3.18%)</title><rect x="861.2" y="323.0" width="37.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="864.2" y="334.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (113 samples, 3.18%)</title><rect x="861.2" y="307.0" width="37.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="864.2" y="318.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (113 samples, 3.18%)</title><rect x="861.2" y="291.0" width="37.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="864.2" y="302.0">sun..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.06%)</title><rect x="863.5" y="275.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="866.5" y="286.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.06%)</title><rect x="863.5" y="259.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="866.5" y="270.0"></text>
</g>
<g>
<title>__pread (96 samples, 2.70%)</title><rect x="864.2" y="275.0" width="31.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="867.2" y="286.0">__..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.14%)</title><rect x="896.1" y="275.0" width="1.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="899.1" y="286.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.06%)</title><rect x="897.7" y="275.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="900.7" y="286.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.03%)</title><rect x="898.4" y="275.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="901.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (10 samples, 0.28%)</title><rect x="898.7" y="323.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="901.7" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.14%)</title><rect x="898.7" y="307.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.7" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.06%)</title><rect x="899.1" y="291.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="902.1" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.06%)</title><rect x="899.1" y="275.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="902.1" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.06%)</title><rect x="899.7" y="291.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="902.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (5 samples, 0.14%)</title><rect x="900.4" y="307.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="903.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.06%)</title><rect x="902.1" y="323.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="905.1" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.06%)</title><rect x="902.1" y="307.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="905.1" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.06%)</title><rect x="902.1" y="291.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (21 samples, 0.59%)</title><rect x="902.7" y="339.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="905.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.06%)</title><rect x="909.0" y="323.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="912.0" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="909.4" y="307.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="912.4" y="318.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.03%)</title><rect x="909.4" y="291.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="912.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.06%)</title><rect x="909.7" y="339.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="912.7" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="909.7" y="323.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="912.7" y="334.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.03%)</title><rect x="909.7" y="307.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="912.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="910.0" y="323.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="913.0" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="910.0" y="307.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="913.0" y="318.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.03%)</title><rect x="910.0" y="291.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="913.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="910.4" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="913.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="910.4" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="913.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (8 samples, 0.23%)</title><rect x="910.7" y="499.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="913.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (8 samples, 0.23%)</title><rect x="910.7" y="483.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="913.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.23%)</title><rect x="910.7" y="467.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="913.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="910.7" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="913.7" y="462.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.06%)</title><rect x="911.0" y="451.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="914.0" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.06%)</title><rect x="911.0" y="435.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="914.0" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.03%)</title><rect x="911.4" y="419.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="914.4" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.14%)</title><rect x="911.7" y="451.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.7" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.14%)</title><rect x="911.7" y="435.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="914.7" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.14%)</title><rect x="911.7" y="419.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.7" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.14%)</title><rect x="911.7" y="403.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="914.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.14%)</title><rect x="911.7" y="387.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="914.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.14%)</title><rect x="911.7" y="371.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="914.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4 samples, 0.11%)</title><rect x="911.7" y="355.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="914.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (4 samples, 0.11%)</title><rect x="911.7" y="339.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="914.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (4 samples, 0.11%)</title><rect x="911.7" y="323.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="914.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (4 samples, 0.11%)</title><rect x="911.7" y="307.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="914.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.06%)</title><rect x="911.7" y="291.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.06%)</title><rect x="911.7" y="275.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="914.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.06%)</title><rect x="911.7" y="259.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="914.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.06%)</title><rect x="911.7" y="243.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="914.7" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.03%)</title><rect x="911.7" y="227.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="914.7" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.03%)</title><rect x="911.7" y="211.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="914.7" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="911.7" y="195.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="914.7" y="206.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.03%)</title><rect x="911.7" y="179.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="914.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="912.0" y="227.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.0" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="912.0" y="211.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="915.0" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="912.0" y="195.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="915.0" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.03%)</title><rect x="912.0" y="179.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="915.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.06%)</title><rect x="912.4" y="291.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="915.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.06%)</title><rect x="912.4" y="275.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="915.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.03%)</title><rect x="912.4" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="915.4" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.03%)</title><rect x="912.4" y="243.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="915.4" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.03%)</title><rect x="912.4" y="227.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="915.4" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="912.4" y="211.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="915.4" y="222.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.03%)</title><rect x="912.4" y="195.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="915.4" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.03%)</title><rect x="912.7" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="915.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="912.7" y="243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="915.7" y="254.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.03%)</title><rect x="912.7" y="227.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="915.7" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.03%)</title><rect x="913.0" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="916.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.03%)</title><rect x="913.0" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="916.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.03%)</title><rect x="913.0" y="323.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="916.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.03%)</title><rect x="913.0" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="916.0" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="913.0" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="916.0" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="913.0" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="916.0" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="913.0" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="916.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (1 samples, 0.03%)</title><rect x="913.3" y="515.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="916.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (1 samples, 0.03%)</title><rect x="913.3" y="499.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="916.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="913.3" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="916.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.03%)</title><rect x="913.3" y="467.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="916.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (1 samples, 0.03%)</title><rect x="913.3" y="451.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="916.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (1 samples, 0.03%)</title><rect x="913.3" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="916.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="913.3" y="419.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="916.3" y="430.0"></text>
</g>
<g>
<title>[pool-3-thread-7 tid=117888] (399 samples, 11.23%)</title><rect x="913.7" y="675.0" width="132.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="916.7" y="686.0">[pool-3-thread-7..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="913.7" y="659.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="916.7" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="913.7" y="643.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="916.7" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.03%)</title><rect x="913.7" y="627.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="916.7" y="638.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.03%)</title><rect x="913.7" y="611.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="916.7" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.run (398 samples, 11.20%)</title><rect x="914.0" y="659.0" width="132.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="917.0" y="670.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (398 samples, 11.20%)</title><rect x="914.0" y="643.0" width="132.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="917.0" y="654.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (398 samples, 11.20%)</title><rect x="914.0" y="627.0" width="132.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="917.0" y="638.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.03%)</title><rect x="914.0" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="917.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="914.0" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="917.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.run (397 samples, 11.17%)</title><rect x="914.3" y="611.0" width="131.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="917.3" y="622.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (397 samples, 11.17%)</title><rect x="914.3" y="595.0" width="131.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="917.3" y="606.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (397 samples, 11.17%)</title><rect x="914.3" y="579.0" width="131.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="917.3" y="590.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.14%)</title><rect x="914.3" y="563.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="917.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.11%)</title><rect x="914.3" y="547.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="917.3" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.11%)</title><rect x="914.3" y="531.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="917.3" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.11%)</title><rect x="914.3" y="515.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="917.3" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.11%)</title><rect x="914.3" y="499.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="917.3" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.11%)</title><rect x="914.3" y="483.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="917.3" y="494.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.08%)</title><rect x="914.3" y="467.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="917.3" y="478.0"></text>
</g>
<g>
<title>arrayOopDesc::base_offset_in_bytes(BasicType) (1 samples, 0.03%)</title><rect x="914.3" y="451.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="917.3" y="462.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.06%)</title><rect x="914.7" y="451.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="917.7" y="462.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.06%)</title><rect x="914.7" y="435.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="917.7" y="446.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (2 samples, 0.06%)</title><rect x="914.7" y="419.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="917.7" y="430.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="915.3" y="467.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="918.3" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.isHttp11 (1 samples, 0.03%)</title><rect x="915.7" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="918.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="915.7" y="531.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="918.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (392 samples, 11.03%)</title><rect x="916.0" y="563.0" width="130.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="919.0" y="574.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (11 samples, 0.31%)</title><rect x="916.0" y="547.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="919.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (11 samples, 0.31%)</title><rect x="916.0" y="531.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.0" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (11 samples, 0.31%)</title><rect x="916.0" y="515.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="919.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (11 samples, 0.31%)</title><rect x="916.0" y="499.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="919.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (11 samples, 0.31%)</title><rect x="916.0" y="483.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="919.0" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.31%)</title><rect x="916.0" y="467.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="919.0" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (11 samples, 0.31%)</title><rect x="916.0" y="451.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="919.0" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (11 samples, 0.31%)</title><rect x="916.0" y="435.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="919.0" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (11 samples, 0.31%)</title><rect x="916.0" y="419.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="919.0" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (11 samples, 0.31%)</title><rect x="916.0" y="403.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="919.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.31%)</title><rect x="916.0" y="387.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.31%)</title><rect x="916.0" y="371.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="919.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (11 samples, 0.31%)</title><rect x="916.0" y="355.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="919.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.31%)</title><rect x="916.0" y="339.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="919.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.31%)</title><rect x="916.0" y="323.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="919.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (11 samples, 0.31%)</title><rect x="916.0" y="307.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="919.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.11%)</title><rect x="916.0" y="291.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="919.0" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="916.0" y="275.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="919.0" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="916.0" y="259.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="919.0" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="916.0" y="243.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="919.0" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.08%)</title><rect x="916.3" y="275.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="919.3" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.08%)</title><rect x="916.3" y="259.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="919.3" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.08%)</title><rect x="916.3" y="243.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="919.3" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.06%)</title><rect x="916.3" y="227.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="919.3" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.06%)</title><rect x="916.3" y="211.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="919.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.06%)</title><rect x="916.3" y="195.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="919.3" y="206.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.06%)</title><rect x="916.3" y="179.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="919.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="917.0" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="920.0" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (1 samples, 0.03%)</title><rect x="917.0" y="211.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="920.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.20%)</title><rect x="917.3" y="291.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="920.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.20%)</title><rect x="917.3" y="275.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="920.3" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.03%)</title><rect x="917.3" y="259.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="920.3" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="917.3" y="243.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="920.3" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.14%)</title><rect x="917.7" y="259.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="920.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.14%)</title><rect x="917.7" y="243.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="920.7" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.14%)</title><rect x="917.7" y="227.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="920.7" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.14%)</title><rect x="917.7" y="211.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="920.7" y="222.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.11%)</title><rect x="917.7" y="195.0" width="1.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="920.7" y="206.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="919.0" y="195.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="922.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.03%)</title><rect x="919.3" y="259.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="922.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.03%)</title><rect x="919.7" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="922.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="919.7" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="922.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="919.7" y="515.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.03%)</title><rect x="919.7" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="922.7" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.03%)</title><rect x="919.7" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="922.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (380 samples, 10.70%)</title><rect x="920.0" y="547.0" width="126.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="923.0" y="558.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (380 samples, 10.70%)</title><rect x="920.0" y="531.0" width="126.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="923.0" y="542.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="920.0" y="515.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="923.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="920.0" y="499.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="923.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="920.0" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="923.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="920.0" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="923.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="920.3" y="515.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="923.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="920.3" y="499.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="923.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.03%)</title><rect x="920.3" y="483.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="923.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="920.3" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="923.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="920.3" y="451.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="923.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="920.3" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="923.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (378 samples, 10.64%)</title><rect x="920.7" y="515.0" width="125.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="923.7" y="526.0">ru/mail/polis/d..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (38 samples, 1.07%)</title><rect x="920.7" y="499.0" width="12.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="923.7" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (38 samples, 1.07%)</title><rect x="920.7" y="483.0" width="12.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="923.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (38 samples, 1.07%)</title><rect x="920.7" y="467.0" width="12.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.7" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (38 samples, 1.07%)</title><rect x="920.7" y="451.0" width="12.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="923.7" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (38 samples, 1.07%)</title><rect x="920.7" y="435.0" width="12.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="923.7" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (38 samples, 1.07%)</title><rect x="920.7" y="419.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="923.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (38 samples, 1.07%)</title><rect x="920.7" y="403.0" width="12.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="923.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (38 samples, 1.07%)</title><rect x="920.7" y="387.0" width="12.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="923.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (37 samples, 1.04%)</title><rect x="920.7" y="371.0" width="12.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (37 samples, 1.04%)</title><rect x="920.7" y="355.0" width="12.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="923.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (37 samples, 1.04%)</title><rect x="920.7" y="339.0" width="12.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="923.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (36 samples, 1.01%)</title><rect x="921.0" y="323.0" width="11.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="924.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (13 samples, 0.37%)</title><rect x="921.0" y="307.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="924.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.06%)</title><rect x="921.0" y="291.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="924.0" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="921.3" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="924.3" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="921.3" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="924.3" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="921.3" y="243.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="924.3" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="921.3" y="227.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="924.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="921.3" y="211.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="924.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (11 samples, 0.31%)</title><rect x="921.7" y="291.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="924.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (11 samples, 0.31%)</title><rect x="921.7" y="275.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="924.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.03%)</title><rect x="921.7" y="259.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="924.7" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="921.7" y="243.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="924.7" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.20%)</title><rect x="922.0" y="259.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="925.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.11%)</title><rect x="922.0" y="243.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="925.0" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.11%)</title><rect x="922.0" y="227.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="925.0" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.11%)</title><rect x="922.0" y="211.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="925.0" y="222.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.11%)</title><rect x="922.0" y="195.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="925.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.08%)</title><rect x="923.3" y="243.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="926.3" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.08%)</title><rect x="923.3" y="227.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="926.3" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.06%)</title><rect x="923.3" y="211.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="926.3" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.06%)</title><rect x="923.3" y="195.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="926.3" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="924.0" y="211.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="927.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.08%)</title><rect x="924.3" y="259.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="927.3" y="270.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.06%)</title><rect x="924.6" y="243.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="927.6" y="254.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.06%)</title><rect x="924.6" y="227.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="927.6" y="238.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.03%)</title><rect x="924.6" y="211.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="927.6" y="222.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="925.0" y="211.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="928.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (23 samples, 0.65%)</title><rect x="925.3" y="307.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="928.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (23 samples, 0.65%)</title><rect x="925.3" y="291.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="928.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.03%)</title><rect x="925.6" y="275.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="928.6" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.03%)</title><rect x="925.6" y="259.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="928.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (17 samples, 0.48%)</title><rect x="926.0" y="275.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="929.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (13 samples, 0.37%)</title><rect x="926.0" y="259.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="929.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (13 samples, 0.37%)</title><rect x="926.0" y="243.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="929.0" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (13 samples, 0.37%)</title><rect x="926.0" y="227.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="929.0" y="238.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.03%)</title><rect x="926.3" y="211.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="929.3" y="222.0"></text>
</g>
<g>
<title>__pread (10 samples, 0.28%)</title><rect x="926.6" y="211.0" width="3.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="929.6" y="222.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="930.0" y="211.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="933.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.11%)</title><rect x="930.3" y="259.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="933.3" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="930.6" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="933.6" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="930.6" y="227.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="933.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.06%)</title><rect x="931.0" y="243.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="934.0" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (1 samples, 0.03%)</title><rect x="931.3" y="227.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="934.3" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.03%)</title><rect x="931.6" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="934.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.08%)</title><rect x="931.9" y="275.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="934.9" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.03%)</title><rect x="932.9" y="371.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="935.9" y="382.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.03%)</title><rect x="932.9" y="355.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="935.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.03%)</title><rect x="932.9" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="935.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.03%)</title><rect x="932.9" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="935.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="932.9" y="307.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="935.9" y="318.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="932.9" y="291.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="935.9" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (334 samples, 9.40%)</title><rect x="933.3" y="499.0" width="110.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="936.3" y="510.0">java/util/Col..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (334 samples, 9.40%)</title><rect x="933.3" y="483.0" width="110.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="936.3" y="494.0">java/lang/Ite..</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.hasNext (1 samples, 0.03%)</title><rect x="933.3" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="936.3" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.hasNext (1 samples, 0.03%)</title><rect x="933.3" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="936.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1546833500.accept (333 samples, 9.37%)</title><rect x="933.6" y="467.0" width="110.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="936.6" y="478.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (331 samples, 9.32%)</title><rect x="934.3" y="451.0" width="109.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="937.3" y="462.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (331 samples, 9.32%)</title><rect x="934.3" y="435.0" width="109.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="937.3" y="446.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (331 samples, 9.32%)</title><rect x="934.3" y="419.0" width="109.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="937.3" y="430.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (331 samples, 9.32%)</title><rect x="934.3" y="403.0" width="109.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="937.3" y="414.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.08%)</title><rect x="934.3" y="387.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="937.3" y="398.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.06%)</title><rect x="934.6" y="371.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="937.6" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="934.6" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="937.6" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="934.6" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="937.6" y="350.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.03%)</title><rect x="934.9" y="355.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="937.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (328 samples, 9.23%)</title><rect x="935.3" y="387.0" width="108.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="938.3" y="398.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="935.3" y="371.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="938.3" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="935.3" y="355.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="938.3" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="935.3" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="938.3" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 0.37%)</title><rect x="935.6" y="371.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="938.6" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.28%)</title><rect x="936.6" y="355.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="939.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.23%)</title><rect x="937.3" y="339.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="940.3" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="938.9" y="323.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="941.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.06%)</title><rect x="938.9" y="307.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="941.9" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.06%)</title><rect x="938.9" y="291.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="941.9" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="939.3" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="942.3" y="286.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="939.6" y="323.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="942.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (100 samples, 2.81%)</title><rect x="939.9" y="371.0" width="33.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="942.9" y="382.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.11%)</title><rect x="940.3" y="355.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="943.3" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.11%)</title><rect x="940.3" y="339.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="943.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.11%)</title><rect x="940.3" y="323.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="943.3" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (12 samples, 0.34%)</title><rect x="941.6" y="355.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="944.6" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.34%)</title><rect x="941.6" y="339.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="944.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.34%)</title><rect x="941.6" y="323.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="944.6" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.11%)</title><rect x="944.2" y="307.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="947.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="944.6" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.6" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="944.6" y="275.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="947.6" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="944.6" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="947.6" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.06%)</title><rect x="944.9" y="291.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="947.9" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="944.9" y="275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.9" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="944.9" y="259.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="947.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="945.2" y="275.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="948.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (83 samples, 2.34%)</title><rect x="945.6" y="355.0" width="27.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="948.6" y="366.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (83 samples, 2.34%)</title><rect x="945.6" y="339.0" width="27.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="948.6" y="350.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (7 samples, 0.20%)</title><rect x="945.9" y="323.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="948.9" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (7 samples, 0.20%)</title><rect x="945.9" y="307.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="948.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (67 samples, 1.89%)</title><rect x="948.2" y="323.0" width="22.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="951.2" y="334.0">s..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.08%)</title><rect x="948.2" y="307.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="951.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="948.6" y="291.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="951.6" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="948.6" y="275.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="951.6" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="948.9" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="951.9" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="948.9" y="275.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="951.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (56 samples, 1.58%)</title><rect x="949.2" y="307.0" width="18.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="952.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (56 samples, 1.58%)</title><rect x="949.2" y="291.0" width="18.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="952.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (56 samples, 1.58%)</title><rect x="949.2" y="275.0" width="18.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="952.2" y="286.0"></text>
</g>
<g>
<title>__pread (48 samples, 1.35%)</title><rect x="950.9" y="259.0" width="15.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="953.9" y="270.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.06%)</title><rect x="966.8" y="259.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="969.8" y="270.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.03%)</title><rect x="967.5" y="259.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="970.5" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="967.8" y="307.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="970.8" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="967.8" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="970.8" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="967.8" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="970.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (7 samples, 0.20%)</title><rect x="968.1" y="307.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="971.1" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.08%)</title><rect x="968.1" y="291.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="971.1" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.06%)</title><rect x="968.1" y="275.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="971.1" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.06%)</title><rect x="968.1" y="259.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.1" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="968.8" y="275.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="971.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (4 samples, 0.11%)</title><rect x="969.1" y="291.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="972.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.17%)</title><rect x="970.5" y="323.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="973.5" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.06%)</title><rect x="970.8" y="307.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="973.8" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.06%)</title><rect x="970.8" y="291.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="973.8" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="970.8" y="275.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="973.8" y="286.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.03%)</title><rect x="970.8" y="259.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="973.8" y="270.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="971.1" y="275.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="974.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.08%)</title><rect x="971.5" y="307.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="974.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.06%)</title><rect x="972.5" y="323.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="975.5" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.06%)</title><rect x="972.5" y="307.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="975.5" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="972.5" y="291.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="975.5" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="972.5" y="275.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="975.5" y="286.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="972.8" y="291.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="975.8" y="302.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.03%)</title><rect x="972.8" y="275.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="975.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (214 samples, 6.02%)</title><rect x="973.1" y="371.0" width="71.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="976.1" y="382.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (214 samples, 6.02%)</title><rect x="973.1" y="355.0" width="71.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="976.1" y="366.0">sun/nio/..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (4 samples, 0.11%)</title><rect x="973.5" y="339.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="976.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (8 samples, 0.23%)</title><rect x="974.8" y="339.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="977.8" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (8 samples, 0.23%)</title><rect x="974.8" y="323.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="977.8" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.14%)</title><rect x="975.8" y="307.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="978.8" y="318.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.08%)</title><rect x="976.5" y="291.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="979.5" y="302.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.08%)</title><rect x="976.5" y="275.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="979.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.06%)</title><rect x="976.8" y="259.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="979.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (182 samples, 5.12%)</title><rect x="977.4" y="339.0" width="60.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="980.4" y="350.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (12 samples, 0.34%)</title><rect x="977.4" y="323.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="980.4" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (10 samples, 0.28%)</title><rect x="978.1" y="307.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="981.1" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.06%)</title><rect x="978.8" y="291.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.8" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.11%)</title><rect x="979.4" y="291.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="982.4" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.11%)</title><rect x="979.4" y="275.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="982.4" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.11%)</title><rect x="979.4" y="259.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="982.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.06%)</title><rect x="980.8" y="291.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="983.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.06%)</title><rect x="980.8" y="275.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="983.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.03%)</title><rect x="981.1" y="259.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="984.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (1 samples, 0.03%)</title><rect x="981.1" y="243.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="984.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkOffset (1 samples, 0.03%)</title><rect x="981.1" y="227.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="984.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (142 samples, 4.00%)</title><rect x="981.4" y="323.0" width="47.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="984.4" y="334.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (142 samples, 4.00%)</title><rect x="981.4" y="307.0" width="47.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="984.4" y="318.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (142 samples, 4.00%)</title><rect x="981.4" y="291.0" width="47.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="984.4" y="302.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.03%)</title><rect x="982.8" y="275.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="985.8" y="286.0"></text>
</g>
<g>
<title>__pread (130 samples, 3.66%)</title><rect x="983.1" y="275.0" width="43.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="986.1" y="286.0">__pr..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.14%)</title><rect x="1026.3" y="275.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1029.3" y="286.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.06%)</title><rect x="1027.9" y="275.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1030.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (25 samples, 0.70%)</title><rect x="1028.6" y="323.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1031.6" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (13 samples, 0.37%)</title><rect x="1028.9" y="307.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1031.9" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (11 samples, 0.31%)</title><rect x="1029.3" y="291.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1032.3" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (11 samples, 0.31%)</title><rect x="1029.3" y="275.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1032.3" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="1032.9" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1035.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (11 samples, 0.31%)</title><rect x="1033.2" y="307.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1036.2" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.03%)</title><rect x="1036.6" y="291.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1039.6" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.03%)</title><rect x="1036.6" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1039.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="1036.6" y="259.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1039.6" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="1036.6" y="243.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1039.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.08%)</title><rect x="1036.9" y="323.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1039.9" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="1037.6" y="307.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1040.6" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="1037.6" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1040.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (15 samples, 0.42%)</title><rect x="1037.9" y="339.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1040.9" y="350.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (1 samples, 0.03%)</title><rect x="1040.9" y="323.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1043.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.03%)</title><rect x="1041.2" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1044.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.11%)</title><rect x="1041.5" y="323.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1044.5" y="334.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.03%)</title><rect x="1042.5" y="307.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1045.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (4 samples, 0.11%)</title><rect x="1042.9" y="339.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1045.9" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.08%)</title><rect x="1042.9" y="323.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1045.9" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.06%)</title><rect x="1043.2" y="307.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1046.2" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="1043.2" y="291.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1046.2" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.03%)</title><rect x="1043.2" y="275.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1046.2" y="286.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="1043.5" y="291.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1046.5" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="1043.9" y="323.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1046.9" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="1043.9" y="307.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1046.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.17%)</title><rect x="1044.2" y="499.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1047.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.17%)</title><rect x="1044.2" y="483.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1047.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.17%)</title><rect x="1044.2" y="467.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1047.2" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6 samples, 0.17%)</title><rect x="1044.2" y="451.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1047.2" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6 samples, 0.17%)</title><rect x="1044.2" y="435.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1047.2" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6 samples, 0.17%)</title><rect x="1044.2" y="419.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1047.2" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6 samples, 0.17%)</title><rect x="1044.2" y="403.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1047.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.17%)</title><rect x="1044.2" y="387.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1047.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.17%)</title><rect x="1044.2" y="371.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1047.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6 samples, 0.17%)</title><rect x="1044.2" y="355.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1047.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (6 samples, 0.17%)</title><rect x="1044.2" y="339.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1047.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (6 samples, 0.17%)</title><rect x="1044.2" y="323.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1047.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (6 samples, 0.17%)</title><rect x="1044.2" y="307.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1047.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.17%)</title><rect x="1044.2" y="291.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1047.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.17%)</title><rect x="1044.2" y="275.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1047.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.06%)</title><rect x="1044.2" y="259.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1047.2" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.06%)</title><rect x="1044.2" y="243.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1047.2" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="1044.5" y="227.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1047.5" y="238.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="1044.5" y="211.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1047.5" y="222.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="1044.5" y="195.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1047.5" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.08%)</title><rect x="1044.9" y="259.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1047.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.08%)</title><rect x="1044.9" y="243.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1047.9" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.08%)</title><rect x="1044.9" y="227.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1047.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.08%)</title><rect x="1044.9" y="211.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1047.9" y="222.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.08%)</title><rect x="1044.9" y="195.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1047.9" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.03%)</title><rect x="1045.9" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1048.9" y="270.0"></text>
</g>
<g>
<title>[pool-3-thread-8 tid=117891] (433 samples, 12.19%)</title><rect x="1046.2" y="675.0" width="143.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1049.2" y="686.0">[pool-3-thread-8 t..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.08%)</title><rect x="1046.2" y="659.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1049.2" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.08%)</title><rect x="1046.2" y="643.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1049.2" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (3 samples, 0.08%)</title><rect x="1046.2" y="627.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1049.2" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.08%)</title><rect x="1046.2" y="611.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1049.2" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.run (430 samples, 12.10%)</title><rect x="1047.2" y="659.0" width="142.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1050.2" y="670.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (430 samples, 12.10%)</title><rect x="1047.2" y="643.0" width="142.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1050.2" y="654.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (430 samples, 12.10%)</title><rect x="1047.2" y="627.0" width="142.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1050.2" y="638.0">java/util/concurre..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.run (430 samples, 12.10%)</title><rect x="1047.2" y="611.0" width="142.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1050.2" y="622.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (430 samples, 12.10%)</title><rect x="1047.2" y="595.0" width="142.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1050.2" y="606.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (430 samples, 12.10%)</title><rect x="1047.2" y="579.0" width="142.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1050.2" y="590.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.14%)</title><rect x="1047.2" y="563.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1050.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.14%)</title><rect x="1047.2" y="547.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1050.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.06%)</title><rect x="1047.2" y="531.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1050.2" y="542.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.03%)</title><rect x="1047.5" y="515.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1050.5" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="1047.5" y="499.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1050.5" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="1047.5" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1050.5" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="1047.5" y="467.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1050.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="1047.5" y="451.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1050.5" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.08%)</title><rect x="1047.9" y="531.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1050.9" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.08%)</title><rect x="1047.9" y="515.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1050.9" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.08%)</title><rect x="1047.9" y="499.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1050.9" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.08%)</title><rect x="1047.9" y="483.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1050.9" y="494.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="1047.9" y="467.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1050.9" y="478.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="1047.9" y="451.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1050.9" y="462.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.03%)</title><rect x="1047.9" y="435.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1050.9" y="446.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.06%)</title><rect x="1048.2" y="467.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1051.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (425 samples, 11.96%)</title><rect x="1048.9" y="563.0" width="141.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1051.9" y="574.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (7 samples, 0.20%)</title><rect x="1048.9" y="547.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.9" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (7 samples, 0.20%)</title><rect x="1048.9" y="531.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1051.9" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (7 samples, 0.20%)</title><rect x="1048.9" y="515.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1051.9" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (7 samples, 0.20%)</title><rect x="1048.9" y="499.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1051.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (7 samples, 0.20%)</title><rect x="1048.9" y="483.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1051.9" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.20%)</title><rect x="1048.9" y="467.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1051.9" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.03%)</title><rect x="1048.9" y="451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1051.9" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6 samples, 0.17%)</title><rect x="1049.2" y="451.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1052.2" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6 samples, 0.17%)</title><rect x="1049.2" y="435.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1052.2" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6 samples, 0.17%)</title><rect x="1049.2" y="419.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1052.2" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6 samples, 0.17%)</title><rect x="1049.2" y="403.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1052.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.17%)</title><rect x="1049.2" y="387.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1052.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.17%)</title><rect x="1049.2" y="371.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1052.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6 samples, 0.17%)</title><rect x="1049.2" y="355.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1052.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (6 samples, 0.17%)</title><rect x="1049.2" y="339.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1052.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (6 samples, 0.17%)</title><rect x="1049.2" y="323.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1052.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (6 samples, 0.17%)</title><rect x="1049.2" y="307.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1052.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (6 samples, 0.17%)</title><rect x="1049.2" y="291.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1052.2" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="1049.2" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1052.2" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1049.2" y="259.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1052.2" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1049.2" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1052.2" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.14%)</title><rect x="1049.5" y="275.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1052.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.14%)</title><rect x="1049.5" y="259.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1052.5" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.03%)</title><rect x="1049.8" y="243.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1052.8" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="1049.8" y="227.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1052.8" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.06%)</title><rect x="1050.2" y="243.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1053.2" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.06%)</title><rect x="1050.2" y="227.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1053.2" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.06%)</title><rect x="1050.2" y="211.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1053.2" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.06%)</title><rect x="1050.2" y="195.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1053.2" y="206.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.03%)</title><rect x="1050.2" y="179.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1053.2" y="190.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="1050.5" y="179.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1053.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.03%)</title><rect x="1050.8" y="243.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1053.8" y="254.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="1050.8" y="227.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1053.8" y="238.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="1050.8" y="211.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1053.8" y="222.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="1050.8" y="195.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1053.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (418 samples, 11.76%)</title><rect x="1051.2" y="547.0" width="138.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1054.2" y="558.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (418 samples, 11.76%)</title><rect x="1051.2" y="531.0" width="138.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1054.2" y="542.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="1051.2" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1054.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="1051.2" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1054.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.03%)</title><rect x="1051.2" y="483.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1054.2" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (1 samples, 0.03%)</title><rect x="1051.2" y="467.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1054.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (417 samples, 11.74%)</title><rect x="1051.5" y="515.0" width="138.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1054.5" y="526.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (40 samples, 1.13%)</title><rect x="1051.5" y="499.0" width="13.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1054.5" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (40 samples, 1.13%)</title><rect x="1051.5" y="483.0" width="13.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1054.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (40 samples, 1.13%)</title><rect x="1051.5" y="467.0" width="13.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1054.5" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (40 samples, 1.13%)</title><rect x="1051.5" y="451.0" width="13.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1054.5" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (40 samples, 1.13%)</title><rect x="1051.5" y="435.0" width="13.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1054.5" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (40 samples, 1.13%)</title><rect x="1051.5" y="419.0" width="13.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1054.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (39 samples, 1.10%)</title><rect x="1051.8" y="403.0" width="13.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1054.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (39 samples, 1.10%)</title><rect x="1051.8" y="387.0" width="13.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1054.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (38 samples, 1.07%)</title><rect x="1051.8" y="371.0" width="12.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1054.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (38 samples, 1.07%)</title><rect x="1051.8" y="355.0" width="12.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1054.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (38 samples, 1.07%)</title><rect x="1051.8" y="339.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1054.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (38 samples, 1.07%)</title><rect x="1051.8" y="323.0" width="12.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1054.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (9 samples, 0.25%)</title><rect x="1051.8" y="307.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1054.8" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="1052.2" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1055.2" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1052.2" y="275.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1055.2" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1052.2" y="259.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1055.2" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.20%)</title><rect x="1052.5" y="291.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1055.5" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.20%)</title><rect x="1052.5" y="275.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1055.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.17%)</title><rect x="1052.5" y="259.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1055.5" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.11%)</title><rect x="1052.5" y="243.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1055.5" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.11%)</title><rect x="1052.5" y="227.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1055.5" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.11%)</title><rect x="1052.5" y="211.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1055.5" y="222.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.08%)</title><rect x="1052.8" y="195.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1055.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.06%)</title><rect x="1053.8" y="243.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1056.8" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.06%)</title><rect x="1053.8" y="227.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1056.8" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.06%)</title><rect x="1053.8" y="211.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1056.8" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.06%)</title><rect x="1053.8" y="195.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1056.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.03%)</title><rect x="1054.5" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1057.5" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (29 samples, 0.82%)</title><rect x="1054.8" y="307.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1057.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (29 samples, 0.82%)</title><rect x="1054.8" y="291.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1057.8" y="302.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.03%)</title><rect x="1055.5" y="275.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1058.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.06%)</title><rect x="1055.8" y="275.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1058.8" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.06%)</title><rect x="1055.8" y="259.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1058.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (24 samples, 0.68%)</title><rect x="1056.5" y="275.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1059.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (17 samples, 0.48%)</title><rect x="1056.8" y="259.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1059.8" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.03%)</title><rect x="1056.8" y="243.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1059.8" y="254.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.03%)</title><rect x="1056.8" y="227.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1059.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="1056.8" y="211.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1059.8" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="1056.8" y="195.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1059.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (16 samples, 0.45%)</title><rect x="1057.2" y="243.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1060.2" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (16 samples, 0.45%)</title><rect x="1057.2" y="227.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1060.2" y="238.0"></text>
</g>
<g>
<title>__pread (15 samples, 0.42%)</title><rect x="1057.2" y="211.0" width="4.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1060.2" y="222.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="1062.1" y="211.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1065.1" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.17%)</title><rect x="1062.5" y="259.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1065.5" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="1062.8" y="243.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1065.8" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="1062.8" y="227.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.8" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.08%)</title><rect x="1063.1" y="243.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1066.1" y="254.0"></text>
</g>
<g>
<title>unsafe_arraycopy (1 samples, 0.03%)</title><rect x="1064.1" y="243.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1067.1" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.03%)</title><rect x="1064.5" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1067.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.03%)</title><rect x="1064.5" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1067.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.03%)</title><rect x="1064.5" y="339.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1067.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.03%)</title><rect x="1064.5" y="323.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1067.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.03%)</title><rect x="1064.5" y="307.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1067.5" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="1064.5" y="291.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1067.5" y="302.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="1064.5" y="275.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1067.5" y="286.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="1064.5" y="259.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1067.5" y="270.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="1064.5" y="243.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1067.5" y="254.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1064.5" y="227.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1067.5" y="238.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="1064.5" y="211.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1067.5" y="222.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="1064.5" y="195.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1067.5" y="206.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::myThread() (1 samples, 0.03%)</title><rect x="1064.5" y="179.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1067.5" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (370 samples, 10.41%)</title><rect x="1064.8" y="499.0" width="122.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1067.8" y="510.0">java/util/Colle..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (370 samples, 10.41%)</title><rect x="1064.8" y="483.0" width="122.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1067.8" y="494.0">java/lang/Itera..</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (1 samples, 0.03%)</title><rect x="1064.8" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1067.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1546833500.accept (369 samples, 10.39%)</title><rect x="1065.1" y="467.0" width="122.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1068.1" y="478.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (368 samples, 10.36%)</title><rect x="1065.5" y="451.0" width="122.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1068.5" y="462.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (368 samples, 10.36%)</title><rect x="1065.5" y="435.0" width="122.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1068.5" y="446.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (368 samples, 10.36%)</title><rect x="1065.5" y="419.0" width="122.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1068.5" y="430.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (368 samples, 10.36%)</title><rect x="1065.5" y="403.0" width="122.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1068.5" y="414.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.14%)</title><rect x="1065.5" y="387.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1068.5" y="398.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.11%)</title><rect x="1065.8" y="371.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1068.8" y="382.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.06%)</title><rect x="1066.5" y="355.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1069.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (363 samples, 10.22%)</title><rect x="1067.1" y="387.0" width="120.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1070.1" y="398.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="1067.1" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1070.1" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1067.1" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1070.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1067.1" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1070.1" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 0.28%)</title><rect x="1067.5" y="371.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1070.5" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.28%)</title><rect x="1067.5" y="355.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1070.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.25%)</title><rect x="1067.8" y="339.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1070.8" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.17%)</title><rect x="1068.8" y="323.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1071.8" y="334.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1069.1" y="307.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1072.1" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.06%)</title><rect x="1069.8" y="307.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1072.8" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.06%)</title><rect x="1069.8" y="291.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1072.8" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.06%)</title><rect x="1069.8" y="275.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1072.8" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="1070.4" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1073.4" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="1070.4" y="291.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1073.4" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="1070.4" y="275.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1073.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (135 samples, 3.80%)</title><rect x="1070.8" y="371.0" width="44.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1073.8" y="382.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="1071.1" y="355.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1074.1" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1071.1" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1074.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1071.1" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1074.1" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 0.37%)</title><rect x="1071.4" y="355.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1074.4" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="1071.4" y="339.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1074.4" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.34%)</title><rect x="1071.8" y="339.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1074.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.34%)</title><rect x="1071.8" y="323.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1074.8" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.11%)</title><rect x="1074.4" y="307.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1077.4" y="318.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.08%)</title><rect x="1074.4" y="291.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1077.4" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="1075.4" y="291.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1078.4" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="1075.4" y="275.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1078.4" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="1075.4" y="259.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1078.4" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (120 samples, 3.38%)</title><rect x="1075.8" y="355.0" width="39.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1078.8" y="366.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (120 samples, 3.38%)</title><rect x="1075.8" y="339.0" width="39.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1078.8" y="350.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (9 samples, 0.25%)</title><rect x="1076.1" y="323.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1079.1" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (8 samples, 0.23%)</title><rect x="1076.4" y="307.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1079.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (103 samples, 2.90%)</title><rect x="1079.1" y="323.0" width="34.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1082.1" y="334.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="1079.1" y="307.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1082.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="1079.1" y="291.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1082.1" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="1079.1" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1082.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (86 samples, 2.42%)</title><rect x="1079.4" y="307.0" width="28.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1082.4" y="318.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (86 samples, 2.42%)</title><rect x="1079.4" y="291.0" width="28.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1082.4" y="302.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (86 samples, 2.42%)</title><rect x="1079.4" y="275.0" width="28.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1082.4" y="286.0">su..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.03%)</title><rect x="1081.1" y="259.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1084.1" y="270.0"></text>
</g>
<g>
<title>__pread (73 samples, 2.05%)</title><rect x="1081.4" y="259.0" width="24.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1084.4" y="270.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.11%)</title><rect x="1105.6" y="259.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1108.6" y="270.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.08%)</title><rect x="1107.0" y="259.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1110.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (16 samples, 0.45%)</title><rect x="1108.0" y="307.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1111.0" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (10 samples, 0.28%)</title><rect x="1108.0" y="291.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1111.0" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (7 samples, 0.20%)</title><rect x="1108.3" y="275.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1111.3" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (7 samples, 0.20%)</title><rect x="1108.3" y="259.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1111.3" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.06%)</title><rect x="1110.6" y="275.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1113.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (6 samples, 0.17%)</title><rect x="1111.3" y="291.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1114.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.17%)</title><rect x="1113.3" y="323.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1116.3" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.11%)</title><rect x="1113.3" y="307.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1116.3" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.11%)</title><rect x="1113.3" y="291.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1116.3" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.06%)</title><rect x="1113.6" y="275.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1116.6" y="286.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.06%)</title><rect x="1113.6" y="259.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1116.6" y="270.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="1114.3" y="275.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1117.3" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.06%)</title><rect x="1114.6" y="307.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1117.6" y="318.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.03%)</title><rect x="1114.6" y="291.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1117.6" y="302.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="1114.9" y="291.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1117.9" y="302.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.03%)</title><rect x="1114.9" y="275.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1117.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.03%)</title><rect x="1115.3" y="323.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1118.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="1115.3" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.3" y="318.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="1115.3" y="291.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1118.3" y="302.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.03%)</title><rect x="1115.3" y="275.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1118.3" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (217 samples, 6.11%)</title><rect x="1115.6" y="371.0" width="72.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1118.6" y="382.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (1 samples, 0.03%)</title><rect x="1115.9" y="355.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1118.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="1115.9" y="339.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (215 samples, 6.05%)</title><rect x="1116.3" y="355.0" width="71.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1119.3" y="366.0">sun/nio/..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (5 samples, 0.14%)</title><rect x="1116.9" y="339.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1119.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.11%)</title><rect x="1118.6" y="339.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1121.6" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.11%)</title><rect x="1118.6" y="323.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1121.6" y="334.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.03%)</title><rect x="1118.9" y="307.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1121.9" y="318.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.06%)</title><rect x="1119.3" y="307.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1122.3" y="318.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.06%)</title><rect x="1119.3" y="291.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1122.3" y="302.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.06%)</title><rect x="1119.3" y="275.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1122.3" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="1119.6" y="259.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (189 samples, 5.32%)</title><rect x="1119.9" y="339.0" width="62.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1122.9" y="350.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (11 samples, 0.31%)</title><rect x="1119.9" y="323.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1122.9" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.23%)</title><rect x="1120.9" y="307.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.9" y="318.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.reachabilityFence (1 samples, 0.03%)</title><rect x="1122.2" y="291.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1125.2" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="1122.6" y="291.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1125.6" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="1122.6" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1125.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (1 samples, 0.03%)</title><rect x="1122.6" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1125.6" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.03%)</title><rect x="1122.9" y="291.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.9" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="1122.9" y="275.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1125.9" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="1122.9" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.03%)</title><rect x="1123.2" y="291.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1126.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.03%)</title><rect x="1123.2" y="275.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1126.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.03%)</title><rect x="1123.2" y="259.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1126.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.03%)</title><rect x="1123.2" y="243.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1126.2" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (163 samples, 4.59%)</title><rect x="1123.6" y="323.0" width="54.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1126.6" y="334.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (163 samples, 4.59%)</title><rect x="1123.6" y="307.0" width="54.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1126.6" y="318.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (163 samples, 4.59%)</title><rect x="1123.6" y="291.0" width="54.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1126.6" y="302.0">sun/n..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.06%)</title><rect x="1126.6" y="275.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1129.6" y="286.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="1126.9" y="259.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1129.9" y="270.0"></text>
</g>
<g>
<title>__pread (146 samples, 4.11%)</title><rect x="1127.2" y="275.0" width="48.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1130.2" y="286.0">__pr..</text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.08%)</title><rect x="1175.7" y="275.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1178.7" y="286.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.08%)</title><rect x="1176.7" y="275.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1179.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.20%)</title><rect x="1177.7" y="323.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1180.7" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.08%)</title><rect x="1178.0" y="307.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1181.0" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.06%)</title><rect x="1178.0" y="291.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1181.0" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.06%)</title><rect x="1178.0" y="275.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1181.0" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="1178.7" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1181.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.08%)</title><rect x="1179.0" y="307.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1182.0" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.03%)</title><rect x="1179.7" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1182.7" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.03%)</title><rect x="1179.7" y="275.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1182.7" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="1179.7" y="259.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1182.7" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="1179.7" y="243.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1182.7" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (8 samples, 0.23%)</title><rect x="1180.0" y="323.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1183.0" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.17%)</title><rect x="1180.4" y="307.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1183.4" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.08%)</title><rect x="1181.4" y="291.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1184.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (1 samples, 0.03%)</title><rect x="1182.4" y="307.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1185.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (14 samples, 0.39%)</title><rect x="1182.7" y="339.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1185.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.11%)</title><rect x="1186.0" y="323.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1189.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.03%)</title><rect x="1187.3" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1190.3" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="1187.3" y="323.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.3" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="1187.3" y="307.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.3" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="1187.3" y="291.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (7 samples, 0.20%)</title><rect x="1187.7" y="499.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1190.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (7 samples, 0.20%)</title><rect x="1187.7" y="483.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1190.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.20%)</title><rect x="1187.7" y="467.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1190.7" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7 samples, 0.20%)</title><rect x="1187.7" y="451.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1190.7" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7 samples, 0.20%)</title><rect x="1187.7" y="435.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.7" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7 samples, 0.20%)</title><rect x="1187.7" y="419.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1190.7" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7 samples, 0.20%)</title><rect x="1187.7" y="403.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1190.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.20%)</title><rect x="1187.7" y="387.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1190.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.20%)</title><rect x="1187.7" y="371.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1190.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (7 samples, 0.20%)</title><rect x="1187.7" y="355.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1190.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.20%)</title><rect x="1187.7" y="339.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1190.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.20%)</title><rect x="1187.7" y="323.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1190.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (7 samples, 0.20%)</title><rect x="1187.7" y="307.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1190.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.03%)</title><rect x="1187.7" y="291.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1190.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.03%)</title><rect x="1187.7" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1190.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.03%)</title><rect x="1187.7" y="259.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1190.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.03%)</title><rect x="1187.7" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1190.7" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.03%)</title><rect x="1187.7" y="227.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1190.7" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.03%)</title><rect x="1187.7" y="211.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1190.7" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="1187.7" y="195.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.7" y="206.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.03%)</title><rect x="1187.7" y="179.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1190.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.17%)</title><rect x="1188.0" y="291.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.17%)</title><rect x="1188.0" y="275.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1191.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.03%)</title><rect x="1188.0" y="259.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1191.0" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="1188.0" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.0" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="1188.0" y="227.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.0" y="238.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="1188.0" y="211.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1191.0" y="222.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="1188.0" y="195.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1191.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.03%)</title><rect x="1188.3" y="259.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.3" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.03%)</title><rect x="1188.3" y="243.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1191.3" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.08%)</title><rect x="1188.7" y="259.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1191.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.06%)</title><rect x="1188.7" y="243.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1191.7" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.06%)</title><rect x="1188.7" y="227.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1191.7" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.06%)</title><rect x="1188.7" y="211.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1191.7" y="222.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.03%)</title><rect x="1189.0" y="195.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1192.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="1189.3" y="243.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.3" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="1189.3" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.3" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="1189.3" y="211.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1192.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.03%)</title><rect x="1189.7" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="1189.7" y="243.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1192.7" y="254.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="1189.7" y="227.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.7" y="238.0"></text>
</g>
</g>
</svg>
