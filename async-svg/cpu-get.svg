<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="613"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="613"> </text>
<g id="frames">
<g>
<title>all (1,904 samples, 100.00%)</title><rect x="10.0" y="579.0" width="1180.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="13.0" y="590.0">all</text>
</g>
<g>
<title>[GC Thread#0 tid=52953] (1 samples, 0.05%)</title><rect x="10.0" y="563.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.05%)</title><rect x="10.0" y="547.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.05%)</title><rect x="10.0" y="531.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.05%)</title><rect x="10.0" y="515.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.05%)</title><rect x="10.0" y="499.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.05%)</title><rect x="10.0" y="483.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.05%)</title><rect x="10.0" y="467.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="10.0" y="451.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>[GC Thread#1 tid=53028] (1 samples, 0.05%)</title><rect x="10.6" y="563.0" width="0.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="13.6" y="574.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.05%)</title><rect x="10.6" y="547.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.6" y="558.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.05%)</title><rect x="10.6" y="531.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="13.6" y="542.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.05%)</title><rect x="10.6" y="515.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.6" y="526.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.05%)</title><rect x="10.6" y="499.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.6" y="510.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.05%)</title><rect x="10.6" y="483.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.6" y="494.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.05%)</title><rect x="10.6" y="467.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.6" y="478.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.05%)</title><rect x="10.6" y="451.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.6" y="462.0"></text>
</g>
<g>
<title>[GC Thread#2 tid=53029] (1 samples, 0.05%)</title><rect x="11.2" y="563.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="14.2" y="574.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.05%)</title><rect x="11.2" y="547.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="14.2" y="558.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.05%)</title><rect x="11.2" y="531.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="14.2" y="542.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.05%)</title><rect x="11.2" y="515.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.2" y="526.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.05%)</title><rect x="11.2" y="499.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="14.2" y="510.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.05%)</title><rect x="11.2" y="483.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.2" y="494.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.05%)</title><rect x="11.2" y="467.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="14.2" y="478.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="11.2" y="451.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="14.2" y="462.0"></text>
</g>
<g>
<title>[GC Thread#3 tid=53030] (2 samples, 0.11%)</title><rect x="11.9" y="563.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="14.9" y="574.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.11%)</title><rect x="11.9" y="547.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="14.9" y="558.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.11%)</title><rect x="11.9" y="531.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="14.9" y="542.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.11%)</title><rect x="11.9" y="515.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="14.9" y="526.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.11%)</title><rect x="11.9" y="499.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="14.9" y="510.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.11%)</title><rect x="11.9" y="483.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="14.9" y="494.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.11%)</title><rect x="11.9" y="467.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="14.9" y="478.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.05%)</title><rect x="11.9" y="451.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="14.9" y="462.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="12.5" y="451.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="15.5" y="462.0"></text>
</g>
<g>
<title>[GC Thread#4 tid=53031] (1 samples, 0.05%)</title><rect x="13.1" y="563.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="16.1" y="574.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.05%)</title><rect x="13.1" y="547.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="16.1" y="558.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.05%)</title><rect x="13.1" y="531.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="16.1" y="542.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.05%)</title><rect x="13.1" y="515.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.1" y="526.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.05%)</title><rect x="13.1" y="499.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="16.1" y="510.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.05%)</title><rect x="13.1" y="483.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="16.1" y="494.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.05%)</title><rect x="13.1" y="467.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="16.1" y="478.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="13.1" y="451.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="16.1" y="462.0"></text>
</g>
<g>
<title>[GC Thread#5 tid=53032] (1 samples, 0.05%)</title><rect x="13.7" y="563.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="16.7" y="574.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.05%)</title><rect x="13.7" y="547.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="16.7" y="558.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.05%)</title><rect x="13.7" y="531.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="16.7" y="542.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.05%)</title><rect x="13.7" y="515.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="16.7" y="526.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.05%)</title><rect x="13.7" y="499.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.7" y="510.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.05%)</title><rect x="13.7" y="483.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.7" y="494.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.05%)</title><rect x="13.7" y="467.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="16.7" y="478.0"></text>
</g>
<g>
<title>ParallelSPCleanupThreadClosure::do_thread(Thread*) (1 samples, 0.05%)</title><rect x="13.7" y="451.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.7" y="462.0"></text>
</g>
<g>
<title>ObjectSynchronizer::deflate_thread_local_monitors(Thread*, DeflateMonitorCounters*) (1 samples, 0.05%)</title><rect x="13.7" y="435.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="16.7" y="446.0"></text>
</g>
<g>
<title>[GC Thread#6 tid=53033] (1 samples, 0.05%)</title><rect x="14.3" y="563.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="17.3" y="574.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.05%)</title><rect x="14.3" y="547.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="17.3" y="558.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.05%)</title><rect x="14.3" y="531.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="17.3" y="542.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.05%)</title><rect x="14.3" y="515.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="17.3" y="526.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.05%)</title><rect x="14.3" y="499.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="17.3" y="510.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.05%)</title><rect x="14.3" y="483.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="17.3" y="494.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.05%)</title><rect x="14.3" y="467.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.3" y="478.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="14.3" y="451.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="17.3" y="462.0"></text>
</g>
<g>
<title>[GC Thread#7 tid=53034] (1 samples, 0.05%)</title><rect x="15.0" y="563.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="18.0" y="574.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.05%)</title><rect x="15.0" y="547.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="18.0" y="558.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.05%)</title><rect x="15.0" y="531.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="18.0" y="542.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.05%)</title><rect x="15.0" y="515.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="18.0" y="526.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.05%)</title><rect x="15.0" y="499.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="18.0" y="510.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.05%)</title><rect x="15.0" y="483.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="18.0" y="494.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.05%)</title><rect x="15.0" y="467.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="18.0" y="478.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="15.0" y="451.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="18.0" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=52973] (7 samples, 0.37%)</title><rect x="15.6" y="563.0" width="4.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="18.6" y="574.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (7 samples, 0.37%)</title><rect x="15.6" y="547.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.6" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (7 samples, 0.37%)</title><rect x="15.6" y="531.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (7 samples, 0.37%)</title><rect x="15.6" y="515.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.6" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (7 samples, 0.37%)</title><rect x="15.6" y="499.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5 samples, 0.26%)</title><rect x="15.6" y="483.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.6" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5 samples, 0.26%)</title><rect x="15.6" y="467.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.6" y="478.0"></text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (4 samples, 0.21%)</title><rect x="15.6" y="451.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (4 samples, 0.21%)</title><rect x="15.6" y="435.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.6" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (4 samples, 0.21%)</title><rect x="15.6" y="419.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.6" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (4 samples, 0.21%)</title><rect x="15.6" y="403.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.6" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (4 samples, 0.21%)</title><rect x="15.6" y="387.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.6" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (4 samples, 0.21%)</title><rect x="15.6" y="371.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.6" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (4 samples, 0.21%)</title><rect x="15.6" y="355.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.6" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (4 samples, 0.21%)</title><rect x="15.6" y="339.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.6" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (4 samples, 0.21%)</title><rect x="15.6" y="323.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.6" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (3 samples, 0.16%)</title><rect x="15.6" y="307.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.6" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (3 samples, 0.16%)</title><rect x="15.6" y="291.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.6" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (2 samples, 0.11%)</title><rect x="15.6" y="275.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.6" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (2 samples, 0.11%)</title><rect x="15.6" y="259.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.6" y="270.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (2 samples, 0.11%)</title><rect x="15.6" y="243.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.6" y="254.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (2 samples, 0.11%)</title><rect x="15.6" y="227.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.6" y="238.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (2 samples, 0.11%)</title><rect x="15.6" y="211.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.6" y="222.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (2 samples, 0.11%)</title><rect x="15.6" y="195.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.6" y="206.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (2 samples, 0.11%)</title><rect x="15.6" y="179.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.6" y="190.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (2 samples, 0.11%)</title><rect x="15.6" y="163.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.6" y="174.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (2 samples, 0.11%)</title><rect x="15.6" y="147.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="18.6" y="158.0"></text>
</g>
<g>
<title>writeBytes (2 samples, 0.11%)</title><rect x="15.6" y="131.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="18.6" y="142.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.05%)</title><rect x="16.2" y="115.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="19.2" y="126.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.05%)</title><rect x="16.8" y="275.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.8" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.05%)</title><rect x="16.8" y="259.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.8" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.05%)</title><rect x="16.8" y="243.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="16.8" y="227.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.8" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="16.8" y="211.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.8" y="222.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.05%)</title><rect x="16.8" y="195.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.8" y="206.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.05%)</title><rect x="16.8" y="179.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.8" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.05%)</title><rect x="17.4" y="307.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.05%)</title><rect x="18.1" y="451.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="21.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="18.1" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.11%)</title><rect x="18.7" y="483.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="21.7" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.11%)</title><rect x="18.7" y="467.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.7" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.11%)</title><rect x="18.7" y="451.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="21.7" y="462.0"></text>
</g>
<g>
<title>_new_array_Java (1 samples, 0.05%)</title><rect x="19.3" y="435.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="22.3" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=52974] (15 samples, 0.79%)</title><rect x="19.9" y="563.0" width="9.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="22.9" y="574.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (15 samples, 0.79%)</title><rect x="19.9" y="547.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.9" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.05%)</title><rect x="19.9" y="531.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.9" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.05%)</title><rect x="19.9" y="515.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.9" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (14 samples, 0.74%)</title><rect x="20.5" y="531.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (14 samples, 0.74%)</title><rect x="20.5" y="515.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9 samples, 0.47%)</title><rect x="20.5" y="499.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="23.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (9 samples, 0.47%)</title><rect x="20.5" y="483.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.5" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (9 samples, 0.47%)</title><rect x="20.5" y="467.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.5" y="478.0"></text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (9 samples, 0.47%)</title><rect x="20.5" y="451.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (9 samples, 0.47%)</title><rect x="20.5" y="435.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.5" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (9 samples, 0.47%)</title><rect x="20.5" y="419.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.5" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (9 samples, 0.47%)</title><rect x="20.5" y="403.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.5" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (9 samples, 0.47%)</title><rect x="20.5" y="387.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.5" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (8 samples, 0.42%)</title><rect x="20.5" y="371.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.5" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (7 samples, 0.37%)</title><rect x="21.2" y="355.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.2" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (7 samples, 0.37%)</title><rect x="21.2" y="339.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.2" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (7 samples, 0.37%)</title><rect x="21.2" y="323.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.2" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (7 samples, 0.37%)</title><rect x="21.2" y="307.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.2" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (7 samples, 0.37%)</title><rect x="21.2" y="291.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="24.2" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.05%)</title><rect x="21.2" y="275.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.2" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.05%)</title><rect x="21.2" y="259.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.2" y="270.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.05%)</title><rect x="21.2" y="243.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="24.2" y="254.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.05%)</title><rect x="21.2" y="227.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.2" y="238.0"></text>
</g>
<g>
<title>org/slf4j/helpers/FormattingTuple.&lt;init&gt; (1 samples, 0.05%)</title><rect x="21.2" y="211.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.2" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="21.2" y="195.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.2" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (4 samples, 0.21%)</title><rect x="21.8" y="275.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.8" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (2 samples, 0.11%)</title><rect x="21.8" y="259.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.8" y="270.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (2 samples, 0.11%)</title><rect x="21.8" y="243.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.8" y="254.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (2 samples, 0.11%)</title><rect x="21.8" y="227.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="24.8" y="238.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (2 samples, 0.11%)</title><rect x="21.8" y="211.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.8" y="222.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.05%)</title><rect x="22.4" y="195.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.4" y="206.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.05%)</title><rect x="22.4" y="179.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.4" y="190.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.05%)</title><rect x="22.4" y="163.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="25.4" y="174.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.05%)</title><rect x="22.4" y="147.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="25.4" y="158.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.05%)</title><rect x="22.4" y="131.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="25.4" y="142.0"></text>
</g>
<g>
<title>jni_GetArrayLength (1 samples, 0.05%)</title><rect x="22.4" y="115.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="25.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.05%)</title><rect x="23.0" y="259.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="23.0" y="243.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="26.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.05%)</title><rect x="23.0" y="227.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="26.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.05%)</title><rect x="23.0" y="211.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.05%)</title><rect x="23.0" y="195.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.05%)</title><rect x="23.0" y="179.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="26.0" y="190.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.05%)</title><rect x="23.0" y="163.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.05%)</title><rect x="23.6" y="259.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="23.6" y="243.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="26.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.05%)</title><rect x="23.6" y="227.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="23.6" y="211.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="26.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="23.6" y="195.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.6" y="206.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="23.6" y="179.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="26.6" y="190.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.11%)</title><rect x="24.3" y="275.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="27.3" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.11%)</title><rect x="24.3" y="259.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="27.3" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.11%)</title><rect x="24.3" y="243.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="27.3" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.05%)</title><rect x="24.3" y="227.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.3" y="238.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="24.3" y="211.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="27.3" y="222.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="24.3" y="195.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="27.3" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="24.3" y="179.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="27.3" y="190.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="24.9" y="227.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.9" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="24.9" y="211.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.9" y="222.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.05%)</title><rect x="24.9" y="195.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.9" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="24.9" y="179.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.9" y="190.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="24.9" y="163.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="27.9" y="174.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="24.9" y="147.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="27.9" y="158.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="24.9" y="131.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="27.9" y="142.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="24.9" y="115.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="27.9" y="126.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="24.9" y="99.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="27.9" y="110.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="24.9" y="83.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="27.9" y="94.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.05%)</title><rect x="24.9" y="67.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="27.9" y="78.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.05%)</title><rect x="24.9" y="51.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="27.9" y="62.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.05%)</title><rect x="24.9" y="35.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="27.9" y="46.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (1 samples, 0.05%)</title><rect x="25.5" y="371.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="28.5" y="382.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="25.5" y="355.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="28.5" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 0.26%)</title><rect x="26.1" y="499.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="29.1" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (5 samples, 0.26%)</title><rect x="26.1" y="483.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="29.1" y="494.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.11%)</title><rect x="26.1" y="467.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="29.1" y="478.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.11%)</title><rect x="26.1" y="451.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="29.1" y="462.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.05%)</title><rect x="26.7" y="435.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="29.7" y="446.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.16%)</title><rect x="27.4" y="467.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="30.4" y="478.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=52975] (8 samples, 0.42%)</title><rect x="29.2" y="563.0" width="5.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="32.2" y="574.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (8 samples, 0.42%)</title><rect x="29.2" y="547.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.2" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (8 samples, 0.42%)</title><rect x="29.2" y="531.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8 samples, 0.42%)</title><rect x="29.2" y="515.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6 samples, 0.32%)</title><rect x="29.2" y="499.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4 samples, 0.21%)</title><rect x="29.2" y="483.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="32.2" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4 samples, 0.21%)</title><rect x="29.2" y="467.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.2" y="478.0"></text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (4 samples, 0.21%)</title><rect x="29.2" y="451.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (4 samples, 0.21%)</title><rect x="29.2" y="435.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="32.2" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (4 samples, 0.21%)</title><rect x="29.2" y="419.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.2" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (4 samples, 0.21%)</title><rect x="29.2" y="403.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.2" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (4 samples, 0.21%)</title><rect x="29.2" y="387.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.2" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (4 samples, 0.21%)</title><rect x="29.2" y="371.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.2" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (4 samples, 0.21%)</title><rect x="29.2" y="355.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.2" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (4 samples, 0.21%)</title><rect x="29.2" y="339.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.2" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (4 samples, 0.21%)</title><rect x="29.2" y="323.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.2" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (4 samples, 0.21%)</title><rect x="29.2" y="307.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.2" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (4 samples, 0.21%)</title><rect x="29.2" y="291.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.2" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.05%)</title><rect x="29.2" y="275.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.2" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (1 samples, 0.05%)</title><rect x="29.2" y="259.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.2" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (1 samples, 0.05%)</title><rect x="29.2" y="243.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="32.2" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.05%)</title><rect x="29.2" y="227.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.2" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.05%)</title><rect x="29.8" y="275.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.8" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.05%)</title><rect x="29.8" y="259.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.8" y="270.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.05%)</title><rect x="29.8" y="243.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.8" y="254.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.05%)</title><rect x="29.8" y="227.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.8" y="238.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.05%)</title><rect x="29.8" y="211.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.8" y="222.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.05%)</title><rect x="29.8" y="195.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.8" y="206.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.05%)</title><rect x="29.8" y="179.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.8" y="190.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.05%)</title><rect x="29.8" y="163.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.8" y="174.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.05%)</title><rect x="29.8" y="147.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="32.8" y="158.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.05%)</title><rect x="29.8" y="131.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="32.8" y="142.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.05%)</title><rect x="29.8" y="115.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="32.8" y="126.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.11%)</title><rect x="30.5" y="275.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.5" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.11%)</title><rect x="30.5" y="259.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.5" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.11%)</title><rect x="30.5" y="243.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="33.5" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.11%)</title><rect x="30.5" y="227.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="33.5" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.11%)</title><rect x="30.5" y="211.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="33.5" y="222.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.11%)</title><rect x="30.5" y="195.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.5" y="206.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.05%)</title><rect x="30.5" y="179.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.5" y="190.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="31.1" y="179.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="34.1" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.05%)</title><rect x="31.7" y="483.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="34.7" y="494.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.05%)</title><rect x="31.7" y="467.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.7" y="478.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.05%)</title><rect x="31.7" y="451.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.7" y="462.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="31.7" y="435.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="34.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.05%)</title><rect x="32.3" y="483.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.3" y="494.0"></text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (1 samples, 0.05%)</title><rect x="32.3" y="467.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="35.3" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.05%)</title><rect x="32.9" y="499.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="35.9" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="32.9" y="483.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="35.9" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.05%)</title><rect x="33.6" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.6" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.05%)</title><rect x="33.6" y="483.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="36.6" y="494.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.05%)</title><rect x="33.6" y="467.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="36.6" y="478.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.05%)</title><rect x="33.6" y="451.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="36.6" y="462.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.05%)</title><rect x="33.6" y="435.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="36.6" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=52976] (7 samples, 0.37%)</title><rect x="34.2" y="563.0" width="4.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="37.2" y="574.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (7 samples, 0.37%)</title><rect x="34.2" y="547.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.2" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.05%)</title><rect x="34.2" y="531.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.2" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.05%)</title><rect x="34.2" y="515.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.2" y="526.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.05%)</title><rect x="34.2" y="499.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="37.2" y="510.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="34.2" y="483.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="37.2" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (6 samples, 0.32%)</title><rect x="34.8" y="531.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="37.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6 samples, 0.32%)</title><rect x="34.8" y="515.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.8" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5 samples, 0.26%)</title><rect x="34.8" y="499.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5 samples, 0.26%)</title><rect x="34.8" y="483.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="37.8" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5 samples, 0.26%)</title><rect x="34.8" y="467.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="37.8" y="478.0"></text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (5 samples, 0.26%)</title><rect x="34.8" y="451.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (5 samples, 0.26%)</title><rect x="34.8" y="435.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="37.8" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (5 samples, 0.26%)</title><rect x="34.8" y="419.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.8" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (5 samples, 0.26%)</title><rect x="34.8" y="403.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.8" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (5 samples, 0.26%)</title><rect x="34.8" y="387.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="37.8" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (5 samples, 0.26%)</title><rect x="34.8" y="371.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.8" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (5 samples, 0.26%)</title><rect x="34.8" y="355.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="37.8" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (5 samples, 0.26%)</title><rect x="34.8" y="339.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="37.8" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (5 samples, 0.26%)</title><rect x="34.8" y="323.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="37.8" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (5 samples, 0.26%)</title><rect x="34.8" y="307.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.8" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (5 samples, 0.26%)</title><rect x="34.8" y="291.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="37.8" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (2 samples, 0.11%)</title><rect x="34.8" y="275.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.8" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (2 samples, 0.11%)</title><rect x="34.8" y="259.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.8" y="270.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (2 samples, 0.11%)</title><rect x="34.8" y="243.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="37.8" y="254.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (2 samples, 0.11%)</title><rect x="34.8" y="227.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="37.8" y="238.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (2 samples, 0.11%)</title><rect x="34.8" y="211.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="37.8" y="222.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (2 samples, 0.11%)</title><rect x="34.8" y="195.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="37.8" y="206.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (2 samples, 0.11%)</title><rect x="34.8" y="179.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.8" y="190.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (2 samples, 0.11%)</title><rect x="34.8" y="163.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.8" y="174.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (2 samples, 0.11%)</title><rect x="34.8" y="147.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="37.8" y="158.0"></text>
</g>
<g>
<title>writeBytes (2 samples, 0.11%)</title><rect x="34.8" y="131.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="37.8" y="142.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.05%)</title><rect x="34.8" y="115.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="37.8" y="126.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.05%)</title><rect x="35.4" y="115.0" width="0.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="38.4" y="126.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (3 samples, 0.16%)</title><rect x="36.0" y="275.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.0" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (3 samples, 0.16%)</title><rect x="36.0" y="259.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.0" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (3 samples, 0.16%)</title><rect x="36.0" y="243.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="39.0" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 0.11%)</title><rect x="36.0" y="227.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.0" y="238.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (2 samples, 0.11%)</title><rect x="36.0" y="211.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="39.0" y="222.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (2 samples, 0.11%)</title><rect x="36.0" y="195.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.0" y="206.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="36.0" y="179.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.0" y="190.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.05%)</title><rect x="36.6" y="179.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.6" y="190.0"></text>
</g>
<g>
<title>java/util/Calendar.setTime (1 samples, 0.05%)</title><rect x="36.6" y="163.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="39.6" y="174.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (1 samples, 0.05%)</title><rect x="36.6" y="147.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.6" y="158.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 0.05%)</title><rect x="36.6" y="131.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.6" y="142.0"></text>
</g>
<g>
<title>java/util/Calendar.setFieldsComputed (1 samples, 0.05%)</title><rect x="36.6" y="115.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="39.6" y="126.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (1 samples, 0.05%)</title><rect x="36.6" y="99.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="39.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="37.3" y="227.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="40.3" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="37.3" y="211.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="40.3" y="222.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="37.3" y="195.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.3" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.05%)</title><rect x="37.9" y="499.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="40.9" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.05%)</title><rect x="37.9" y="483.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="40.9" y="494.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.05%)</title><rect x="37.9" y="467.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="40.9" y="478.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.05%)</title><rect x="37.9" y="451.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="40.9" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=52977] (4 samples, 0.21%)</title><rect x="38.5" y="563.0" width="2.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="41.5" y="574.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (4 samples, 0.21%)</title><rect x="38.5" y="547.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="41.5" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (4 samples, 0.21%)</title><rect x="38.5" y="531.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (4 samples, 0.21%)</title><rect x="38.5" y="515.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="41.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4 samples, 0.21%)</title><rect x="38.5" y="499.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 0.16%)</title><rect x="38.5" y="483.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="41.5" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.16%)</title><rect x="38.5" y="467.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.5" y="478.0"></text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (3 samples, 0.16%)</title><rect x="38.5" y="451.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (3 samples, 0.16%)</title><rect x="38.5" y="435.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.5" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (3 samples, 0.16%)</title><rect x="38.5" y="419.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="41.5" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (3 samples, 0.16%)</title><rect x="38.5" y="403.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.5" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (3 samples, 0.16%)</title><rect x="38.5" y="387.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="41.5" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (3 samples, 0.16%)</title><rect x="38.5" y="371.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.5" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (3 samples, 0.16%)</title><rect x="38.5" y="355.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.5" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (3 samples, 0.16%)</title><rect x="38.5" y="339.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="41.5" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (3 samples, 0.16%)</title><rect x="38.5" y="323.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.5" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (3 samples, 0.16%)</title><rect x="38.5" y="307.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="41.5" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (3 samples, 0.16%)</title><rect x="38.5" y="291.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.5" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.05%)</title><rect x="38.5" y="275.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="41.5" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (1 samples, 0.05%)</title><rect x="38.5" y="259.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.5" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (1 samples, 0.05%)</title><rect x="38.5" y="243.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="41.5" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.05%)</title><rect x="38.5" y="227.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="41.5" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.05%)</title><rect x="39.1" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.1" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.05%)</title><rect x="39.1" y="259.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.1" y="270.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.05%)</title><rect x="39.1" y="243.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.1" y="254.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.05%)</title><rect x="39.1" y="227.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.1" y="238.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.05%)</title><rect x="39.1" y="211.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.1" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.05%)</title><rect x="39.7" y="275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.7" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.05%)</title><rect x="39.7" y="259.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.7" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.05%)</title><rect x="39.7" y="243.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.7" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.05%)</title><rect x="39.7" y="227.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.05%)</title><rect x="40.4" y="483.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.4" y="494.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="40.4" y="467.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="43.4" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="40.4" y="451.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="43.4" y="462.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="40.4" y="435.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="43.4" y="446.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="40.4" y="419.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="43.4" y="430.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="40.4" y="403.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="43.4" y="414.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="40.4" y="387.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="43.4" y="398.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.05%)</title><rect x="40.4" y="371.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="43.4" y="382.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=52978] (13 samples, 0.68%)</title><rect x="41.0" y="563.0" width="8.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="44.0" y="574.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (13 samples, 0.68%)</title><rect x="41.0" y="547.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="44.0" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.11%)</title><rect x="41.0" y="531.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="44.0" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.11%)</title><rect x="41.0" y="515.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="44.0" y="526.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.11%)</title><rect x="41.0" y="499.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="44.0" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (11 samples, 0.58%)</title><rect x="42.2" y="531.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (11 samples, 0.58%)</title><rect x="42.2" y="515.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (10 samples, 0.53%)</title><rect x="42.2" y="499.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="45.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (9 samples, 0.47%)</title><rect x="42.2" y="483.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.2" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (9 samples, 0.47%)</title><rect x="42.2" y="467.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.2" y="478.0"></text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (9 samples, 0.47%)</title><rect x="42.2" y="451.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="45.2" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.05%)</title><rect x="42.2" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.05%)</title><rect x="42.2" y="419.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.2" y="430.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.05%)</title><rect x="42.2" y="403.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (8 samples, 0.42%)</title><rect x="42.8" y="435.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.8" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (8 samples, 0.42%)</title><rect x="42.8" y="419.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.8" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (8 samples, 0.42%)</title><rect x="42.8" y="403.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.8" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (6 samples, 0.32%)</title><rect x="43.5" y="387.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="46.5" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (6 samples, 0.32%)</title><rect x="43.5" y="371.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="46.5" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (6 samples, 0.32%)</title><rect x="43.5" y="355.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.5" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (6 samples, 0.32%)</title><rect x="43.5" y="339.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="46.5" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (6 samples, 0.32%)</title><rect x="43.5" y="323.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="46.5" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (6 samples, 0.32%)</title><rect x="43.5" y="307.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="46.5" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (6 samples, 0.32%)</title><rect x="43.5" y="291.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="46.5" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.05%)</title><rect x="43.5" y="275.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.5" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.05%)</title><rect x="43.5" y="259.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="46.5" y="270.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.05%)</title><rect x="43.5" y="243.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.5" y="254.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.05%)</title><rect x="43.5" y="227.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.5" y="238.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.05%)</title><rect x="43.5" y="211.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.5" y="222.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.05%)</title><rect x="43.5" y="195.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.5" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="43.5" y="179.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.5" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="43.5" y="163.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.5" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.05%)</title><rect x="43.5" y="147.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.5" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (5 samples, 0.26%)</title><rect x="44.1" y="275.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.1" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (4 samples, 0.21%)</title><rect x="44.1" y="259.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.1" y="270.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (4 samples, 0.21%)</title><rect x="44.1" y="243.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="47.1" y="254.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (4 samples, 0.21%)</title><rect x="44.1" y="227.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.1" y="238.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (4 samples, 0.21%)</title><rect x="44.1" y="211.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.1" y="222.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (4 samples, 0.21%)</title><rect x="44.1" y="195.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.1" y="206.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (4 samples, 0.21%)</title><rect x="44.1" y="179.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.1" y="190.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (4 samples, 0.21%)</title><rect x="44.1" y="163.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="47.1" y="174.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (4 samples, 0.21%)</title><rect x="44.1" y="147.0" width="2.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="47.1" y="158.0"></text>
</g>
<g>
<title>writeBytes (4 samples, 0.21%)</title><rect x="44.1" y="131.0" width="2.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="47.1" y="142.0"></text>
</g>
<g>
<title>__libc_write (3 samples, 0.16%)</title><rect x="44.1" y="115.0" width="1.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="47.1" y="126.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.05%)</title><rect x="45.9" y="115.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="48.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.05%)</title><rect x="46.6" y="259.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="46.6" y="243.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.05%)</title><rect x="46.6" y="227.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="46.6" y="211.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="49.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="46.6" y="195.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.6" y="206.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="46.6" y="179.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="49.6" y="190.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.05%)</title><rect x="46.6" y="163.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="49.6" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_1 (1 samples, 0.05%)</title><rect x="47.2" y="387.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.size (1 samples, 0.05%)</title><rect x="47.2" y="371.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="50.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.05%)</title><rect x="47.8" y="483.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="50.8" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.05%)</title><rect x="47.8" y="467.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.8" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.05%)</title><rect x="48.4" y="499.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.4" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.05%)</title><rect x="48.4" y="483.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.4" y="494.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.05%)</title><rect x="48.4" y="467.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="51.4" y="478.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=52979] (8 samples, 0.42%)</title><rect x="49.0" y="563.0" width="5.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="52.0" y="574.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (8 samples, 0.42%)</title><rect x="49.0" y="547.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="52.0" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (8 samples, 0.42%)</title><rect x="49.0" y="531.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="52.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8 samples, 0.42%)</title><rect x="49.0" y="515.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8 samples, 0.42%)</title><rect x="49.0" y="499.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (8 samples, 0.42%)</title><rect x="49.0" y="483.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="52.0" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (8 samples, 0.42%)</title><rect x="49.0" y="467.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="52.0" y="478.0"></text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (8 samples, 0.42%)</title><rect x="49.0" y="451.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="52.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.05%)</title><rect x="49.0" y="435.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.05%)</title><rect x="49.0" y="419.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="49.0" y="403.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="52.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="49.0" y="387.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.0" y="398.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="49.0" y="371.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="52.0" y="382.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="49.0" y="355.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="52.0" y="366.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="49.0" y="339.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="52.0" y="350.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="49.0" y="323.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="52.0" y="334.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="49.0" y="307.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="52.0" y="318.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::myThread() (1 samples, 0.05%)</title><rect x="49.0" y="291.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="52.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (7 samples, 0.37%)</title><rect x="49.7" y="435.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="52.7" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (7 samples, 0.37%)</title><rect x="49.7" y="419.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.7" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (7 samples, 0.37%)</title><rect x="49.7" y="403.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.7" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (7 samples, 0.37%)</title><rect x="49.7" y="387.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.7" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (7 samples, 0.37%)</title><rect x="49.7" y="371.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.7" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (7 samples, 0.37%)</title><rect x="49.7" y="355.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.7" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (7 samples, 0.37%)</title><rect x="49.7" y="339.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.7" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (7 samples, 0.37%)</title><rect x="49.7" y="323.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.7" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (7 samples, 0.37%)</title><rect x="49.7" y="307.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.7" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (7 samples, 0.37%)</title><rect x="49.7" y="291.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="52.7" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (5 samples, 0.26%)</title><rect x="49.7" y="275.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.7" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (3 samples, 0.16%)</title><rect x="49.7" y="259.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.7" y="270.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (3 samples, 0.16%)</title><rect x="49.7" y="243.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.7" y="254.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (3 samples, 0.16%)</title><rect x="49.7" y="227.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="52.7" y="238.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (3 samples, 0.16%)</title><rect x="49.7" y="211.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.7" y="222.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (2 samples, 0.11%)</title><rect x="50.3" y="195.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.3" y="206.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (2 samples, 0.11%)</title><rect x="50.3" y="179.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.3" y="190.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (2 samples, 0.11%)</title><rect x="50.3" y="163.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.3" y="174.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (2 samples, 0.11%)</title><rect x="50.3" y="147.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="53.3" y="158.0"></text>
</g>
<g>
<title>writeBytes (2 samples, 0.11%)</title><rect x="50.3" y="131.0" width="1.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="53.3" y="142.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.05%)</title><rect x="50.9" y="115.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="53.9" y="126.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.05%)</title><rect x="50.9" y="99.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="53.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.11%)</title><rect x="51.5" y="259.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.11%)</title><rect x="51.5" y="243.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.11%)</title><rect x="51.5" y="227.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="54.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.05%)</title><rect x="51.5" y="211.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.05%)</title><rect x="51.5" y="195.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="51.5" y="179.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="54.5" y="190.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="51.5" y="163.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="54.5" y="174.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.05%)</title><rect x="51.5" y="147.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="54.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (1 samples, 0.05%)</title><rect x="52.1" y="211.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="55.1" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.11%)</title><rect x="52.8" y="275.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.8" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.11%)</title><rect x="52.8" y="259.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="55.8" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.11%)</title><rect x="52.8" y="243.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.8" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 0.11%)</title><rect x="52.8" y="227.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="55.8" y="238.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (2 samples, 0.11%)</title><rect x="52.8" y="211.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="55.8" y="222.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (2 samples, 0.11%)</title><rect x="52.8" y="195.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="55.8" y="206.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (2 samples, 0.11%)</title><rect x="52.8" y="179.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.8" y="190.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (1 samples, 0.05%)</title><rect x="52.8" y="163.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="55.8" y="174.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (1 samples, 0.05%)</title><rect x="52.8" y="147.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="55.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (1 samples, 0.05%)</title><rect x="52.8" y="131.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="55.8" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="52.8" y="115.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="55.8" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.05%)</title><rect x="52.8" y="99.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.8" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="52.8" y="83.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="55.8" y="94.0"></text>
</g>
<g>
<title>java/util/Calendar.setTime (1 samples, 0.05%)</title><rect x="53.4" y="163.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="56.4" y="174.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (1 samples, 0.05%)</title><rect x="53.4" y="147.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.4" y="158.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 0.05%)</title><rect x="53.4" y="131.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.4" y="142.0"></text>
</g>
<g>
<title>java/util/Calendar.setFieldsComputed (1 samples, 0.05%)</title><rect x="53.4" y="115.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.4" y="126.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 0.05%)</title><rect x="53.4" y="99.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="56.4" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=52980] (10 samples, 0.53%)</title><rect x="54.0" y="563.0" width="6.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="57.0" y="574.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (10 samples, 0.53%)</title><rect x="54.0" y="547.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="57.0" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.05%)</title><rect x="54.0" y="531.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.0" y="542.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="54.0" y="515.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="57.0" y="526.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="54.0" y="499.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="57.0" y="510.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="54.0" y="483.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="57.0" y="494.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="54.0" y="467.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="57.0" y="478.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="54.0" y="451.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="57.0" y="462.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="54.0" y="435.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="57.0" y="446.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.05%)</title><rect x="54.0" y="419.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="57.0" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (9 samples, 0.47%)</title><rect x="54.6" y="531.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9 samples, 0.47%)</title><rect x="54.6" y="515.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.6" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (7 samples, 0.37%)</title><rect x="54.6" y="499.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="57.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (6 samples, 0.32%)</title><rect x="54.6" y="483.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.6" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (6 samples, 0.32%)</title><rect x="54.6" y="467.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.6" y="478.0"></text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (6 samples, 0.32%)</title><rect x="54.6" y="451.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (6 samples, 0.32%)</title><rect x="54.6" y="435.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.6" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (6 samples, 0.32%)</title><rect x="54.6" y="419.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.6" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (6 samples, 0.32%)</title><rect x="54.6" y="403.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.6" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (6 samples, 0.32%)</title><rect x="54.6" y="387.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.6" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (6 samples, 0.32%)</title><rect x="54.6" y="371.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="57.6" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (6 samples, 0.32%)</title><rect x="54.6" y="355.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="57.6" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (6 samples, 0.32%)</title><rect x="54.6" y="339.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.6" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (6 samples, 0.32%)</title><rect x="54.6" y="323.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.6" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (6 samples, 0.32%)</title><rect x="54.6" y="307.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="57.6" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (6 samples, 0.32%)</title><rect x="54.6" y="291.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.6" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.05%)</title><rect x="54.6" y="275.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="57.6" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.05%)</title><rect x="54.6" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="57.6" y="270.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.05%)</title><rect x="54.6" y="243.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="57.6" y="254.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.05%)</title><rect x="54.6" y="227.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.6" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="54.6" y="211.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.6" y="222.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="54.6" y="195.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="57.6" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.appendChars (1 samples, 0.05%)</title><rect x="54.6" y="179.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="57.6" y="190.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (4 samples, 0.21%)</title><rect x="55.2" y="275.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.2" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (3 samples, 0.16%)</title><rect x="55.2" y="259.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.2" y="270.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (3 samples, 0.16%)</title><rect x="55.2" y="243.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="58.2" y="254.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (3 samples, 0.16%)</title><rect x="55.2" y="227.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="58.2" y="238.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (3 samples, 0.16%)</title><rect x="55.2" y="211.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.2" y="222.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (3 samples, 0.16%)</title><rect x="55.2" y="195.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.2" y="206.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (2 samples, 0.11%)</title><rect x="55.2" y="179.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="58.2" y="190.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (2 samples, 0.11%)</title><rect x="55.2" y="163.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="58.2" y="174.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (2 samples, 0.11%)</title><rect x="55.2" y="147.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="58.2" y="158.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.05%)</title><rect x="55.2" y="131.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="58.2" y="142.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.05%)</title><rect x="55.9" y="131.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="58.9" y="142.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.05%)</title><rect x="55.9" y="115.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="58.9" y="126.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.05%)</title><rect x="56.5" y="179.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="59.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.05%)</title><rect x="57.1" y="259.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="57.1" y="243.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.05%)</title><rect x="57.1" y="227.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="57.1" y="211.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="57.1" y="195.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.1" y="206.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="57.1" y="179.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="60.1" y="190.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.05%)</title><rect x="57.1" y="163.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="60.1" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.05%)</title><rect x="57.7" y="275.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="60.7" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.05%)</title><rect x="57.7" y="259.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.7" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.05%)</title><rect x="57.7" y="243.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="57.7" y="227.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.7" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="57.7" y="211.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="60.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="57.7" y="195.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="60.7" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.05%)</title><rect x="58.3" y="483.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.05%)</title><rect x="58.3" y="467.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="61.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="58.3" y="451.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.3" y="462.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="58.3" y="435.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.05%)</title><rect x="58.3" y="419.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.3" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.11%)</title><rect x="59.0" y="499.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.0" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.11%)</title><rect x="59.0" y="483.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.0" y="494.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.05%)</title><rect x="59.0" y="467.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="62.0" y="478.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.05%)</title><rect x="59.0" y="451.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="62.0" y="462.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.05%)</title><rect x="59.6" y="467.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="62.6" y="478.0"></text>
</g>
<g>
<title>[pool-3-thread-1 tid=53019] (217 samples, 11.40%)</title><rect x="60.2" y="563.0" width="134.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="63.2" y="574.0">[pool-3-thread-1 ..</text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.05%)</title><rect x="60.2" y="547.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="63.2" y="558.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.05%)</title><rect x="60.8" y="547.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="63.8" y="558.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="60.8" y="531.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="63.8" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.run (215 samples, 11.29%)</title><rect x="61.4" y="547.0" width="133.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="64.4" y="558.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (215 samples, 11.29%)</title><rect x="61.4" y="531.0" width="133.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.4" y="542.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (215 samples, 11.29%)</title><rect x="61.4" y="515.0" width="133.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.4" y="526.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.05%)</title><rect x="61.4" y="499.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.05%)</title><rect x="61.4" y="483.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.05%)</title><rect x="61.4" y="467.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.05%)</title><rect x="61.4" y="451.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="61.4" y="435.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.4" y="446.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.05%)</title><rect x="61.4" y="419.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="64.4" y="430.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="61.4" y="403.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="64.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.run (214 samples, 11.24%)</title><rect x="62.1" y="499.0" width="132.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.1" y="510.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (214 samples, 11.24%)</title><rect x="62.1" y="483.0" width="132.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.1" y="494.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.11%)</title><rect x="62.1" y="467.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.1" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.11%)</title><rect x="62.1" y="451.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.1" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.11%)</title><rect x="62.1" y="435.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.1" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.11%)</title><rect x="62.1" y="419.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.05%)</title><rect x="62.7" y="403.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (212 samples, 11.13%)</title><rect x="63.3" y="467.0" width="131.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.3" y="478.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (8 samples, 0.42%)</title><rect x="63.3" y="451.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (8 samples, 0.42%)</title><rect x="63.3" y="435.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="66.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (8 samples, 0.42%)</title><rect x="63.3" y="419.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="66.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (8 samples, 0.42%)</title><rect x="63.3" y="403.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (8 samples, 0.42%)</title><rect x="63.3" y="387.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.42%)</title><rect x="63.3" y="371.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.3" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8 samples, 0.42%)</title><rect x="63.3" y="355.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="66.3" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8 samples, 0.42%)</title><rect x="63.3" y="339.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8 samples, 0.42%)</title><rect x="63.3" y="323.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="66.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8 samples, 0.42%)</title><rect x="63.3" y="307.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="66.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.42%)</title><rect x="63.3" y="291.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="66.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.42%)</title><rect x="63.3" y="275.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="66.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (8 samples, 0.42%)</title><rect x="63.3" y="259.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.37%)</title><rect x="63.9" y="243.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="66.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.37%)</title><rect x="63.9" y="227.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="66.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (7 samples, 0.37%)</title><rect x="63.9" y="211.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="66.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.11%)</title><rect x="63.9" y="195.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="66.9" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.11%)</title><rect x="63.9" y="179.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="66.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.11%)</title><rect x="63.9" y="163.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.11%)</title><rect x="63.9" y="147.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="66.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.11%)</title><rect x="63.9" y="131.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="66.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.11%)</title><rect x="63.9" y="115.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.11%)</title><rect x="63.9" y="99.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.9" y="110.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.11%)</title><rect x="63.9" y="83.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="66.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.26%)</title><rect x="65.2" y="195.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.2" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.26%)</title><rect x="65.2" y="179.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.26%)</title><rect x="65.2" y="163.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.21%)</title><rect x="65.8" y="147.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.21%)</title><rect x="65.8" y="131.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="68.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.16%)</title><rect x="66.4" y="115.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.4" y="126.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.05%)</title><rect x="66.4" y="99.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="69.4" y="110.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.11%)</title><rect x="67.0" y="99.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="70.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (204 samples, 10.71%)</title><rect x="68.3" y="451.0" width="126.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.3" y="462.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (204 samples, 10.71%)</title><rect x="68.3" y="435.0" width="126.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.3" y="446.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (201 samples, 10.56%)</title><rect x="68.3" y="419.0" width="124.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="71.3" y="430.0">ru/mail/polis/d..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (22 samples, 1.16%)</title><rect x="68.3" y="403.0" width="13.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (21 samples, 1.10%)</title><rect x="68.9" y="387.0" width="13.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.9" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (20 samples, 1.05%)</title><rect x="69.5" y="371.0" width="12.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="72.5" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (20 samples, 1.05%)</title><rect x="69.5" y="355.0" width="12.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.5" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (20 samples, 1.05%)</title><rect x="69.5" y="339.0" width="12.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (20 samples, 1.05%)</title><rect x="69.5" y="323.0" width="12.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (20 samples, 1.05%)</title><rect x="69.5" y="307.0" width="12.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (20 samples, 1.05%)</title><rect x="69.5" y="291.0" width="12.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="72.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (19 samples, 1.00%)</title><rect x="69.5" y="275.0" width="11.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="72.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (19 samples, 1.00%)</title><rect x="69.5" y="259.0" width="11.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="72.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (19 samples, 1.00%)</title><rect x="69.5" y="243.0" width="11.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (19 samples, 1.00%)</title><rect x="69.5" y="227.0" width="11.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="72.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (6 samples, 0.32%)</title><rect x="69.5" y="211.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.5" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.32%)</title><rect x="69.5" y="195.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.5" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.32%)</title><rect x="69.5" y="179.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.11%)</title><rect x="69.5" y="163.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.5" y="174.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.11%)</title><rect x="69.5" y="147.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="72.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.16%)</title><rect x="70.7" y="163.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.16%)</title><rect x="70.7" y="147.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.16%)</title><rect x="70.7" y="131.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.16%)</title><rect x="70.7" y="115.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.7" y="126.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.16%)</title><rect x="70.7" y="99.0" width="1.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="73.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.05%)</title><rect x="72.6" y="163.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.05%)</title><rect x="72.6" y="147.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="75.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 0.68%)</title><rect x="73.2" y="211.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.2" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 0.68%)</title><rect x="73.2" y="195.0" width="8.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.2" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.16%)</title><rect x="73.2" y="179.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.2" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.16%)</title><rect x="73.2" y="163.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="76.2" y="174.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.16%)</title><rect x="73.2" y="147.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.2" y="158.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.16%)</title><rect x="73.2" y="131.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.2" y="142.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.16%)</title><rect x="73.2" y="115.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.53%)</title><rect x="75.1" y="179.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.1" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.05%)</title><rect x="75.1" y="163.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="78.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.05%)</title><rect x="75.1" y="147.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="78.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.37%)</title><rect x="75.7" y="163.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.37%)</title><rect x="75.7" y="147.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.37%)</title><rect x="75.7" y="131.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.7" y="142.0"></text>
</g>
<g>
<title>__pread (6 samples, 0.32%)</title><rect x="76.3" y="115.0" width="3.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="79.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.11%)</title><rect x="80.0" y="163.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.0" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="80.0" y="147.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.0" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.05%)</title><rect x="80.0" y="131.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.05%)</title><rect x="80.7" y="147.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.7" y="158.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.05%)</title><rect x="80.7" y="131.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.7" y="142.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.05%)</title><rect x="80.7" y="115.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (1 samples, 0.05%)</title><rect x="80.7" y="99.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.7" y="110.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="81.3" y="275.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.3" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="81.3" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="81.3" y="243.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="81.3" y="227.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="81.3" y="211.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.3" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.05%)</title><rect x="81.3" y="195.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.3" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (177 samples, 9.30%)</title><rect x="81.9" y="403.0" width="109.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="84.9" y="414.0">java/util/Col..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (177 samples, 9.30%)</title><rect x="81.9" y="387.0" width="109.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.9" y="398.0">java/lang/Ite..</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (1 samples, 0.05%)</title><rect x="81.9" y="371.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.9" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="81.9" y="355.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.9" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="81.9" y="339.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.prevEntry (1 samples, 0.05%)</title><rect x="81.9" y="323.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.9" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.predecessor (1 samples, 0.05%)</title><rect x="81.9" y="307.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$72/1983780967.accept (176 samples, 9.24%)</title><rect x="82.5" y="371.0" width="109.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.5" y="382.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (176 samples, 9.24%)</title><rect x="82.5" y="355.0" width="109.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="85.5" y="366.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (176 samples, 9.24%)</title><rect x="82.5" y="339.0" width="109.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.5" y="350.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (176 samples, 9.24%)</title><rect x="82.5" y="323.0" width="109.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.5" y="334.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (176 samples, 9.24%)</title><rect x="82.5" y="307.0" width="109.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.5" y="318.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.21%)</title><rect x="83.1" y="291.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="86.1" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="83.1" y="275.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.1" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="83.1" y="259.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="86.1" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="83.8" y="275.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.8" y="286.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.05%)</title><rect x="83.8" y="259.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="86.8" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.11%)</title><rect x="84.4" y="275.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.4" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.05%)</title><rect x="85.0" y="259.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (171 samples, 8.98%)</title><rect x="85.6" y="291.0" width="106.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="88.6" y="302.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.47%)</title><rect x="85.6" y="275.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.6" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.37%)</title><rect x="86.8" y="259.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.8" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.32%)</title><rect x="87.5" y="243.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.5" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.21%)</title><rect x="88.1" y="227.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.1" y="238.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="88.7" y="211.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.11%)</title><rect x="89.3" y="211.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="92.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.11%)</title><rect x="89.3" y="195.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="92.3" y="206.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="90.6" y="227.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="93.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (47 samples, 2.47%)</title><rect x="91.2" y="275.0" width="29.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.2" y="286.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.11%)</title><rect x="91.2" y="259.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.2" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="91.8" y="243.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="94.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="91.8" y="227.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.8" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.26%)</title><rect x="92.4" y="259.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="95.4" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.26%)</title><rect x="92.4" y="243.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.4" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.26%)</title><rect x="92.4" y="227.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.4" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.11%)</title><rect x="94.3" y="211.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="94.9" y="195.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.9" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (40 samples, 2.10%)</title><rect x="95.5" y="259.0" width="24.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.5" y="270.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (40 samples, 2.10%)</title><rect x="95.5" y="243.0" width="24.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.5" y="254.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.11%)</title><rect x="96.1" y="227.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="99.1" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.11%)</title><rect x="96.1" y="211.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="99.1" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (35 samples, 1.84%)</title><rect x="97.4" y="227.0" width="21.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="100.4" y="238.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (26 samples, 1.37%)</title><rect x="97.4" y="211.0" width="16.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.4" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (26 samples, 1.37%)</title><rect x="97.4" y="195.0" width="16.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.4" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (26 samples, 1.37%)</title><rect x="97.4" y="179.0" width="16.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="100.4" y="190.0"></text>
</g>
<g>
<title>__pread (23 samples, 1.21%)</title><rect x="98.0" y="163.0" width="14.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="101.0" y="174.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.11%)</title><rect x="112.3" y="163.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="115.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (9 samples, 0.47%)</title><rect x="113.5" y="211.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="116.5" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.21%)</title><rect x="113.5" y="195.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.5" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.21%)</title><rect x="113.5" y="179.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.5" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (3 samples, 0.16%)</title><rect x="114.1" y="163.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="117.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (5 samples, 0.26%)</title><rect x="116.0" y="195.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.11%)</title><rect x="119.1" y="227.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="122.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.05%)</title><rect x="119.7" y="211.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="122.7" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (115 samples, 6.04%)</title><rect x="120.3" y="275.0" width="71.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="123.3" y="286.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (115 samples, 6.04%)</title><rect x="120.3" y="259.0" width="71.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="123.3" y="270.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.16%)</title><rect x="120.9" y="243.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.9" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.16%)</title><rect x="120.9" y="227.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="123.9" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel$1.&lt;init&gt; (1 samples, 0.05%)</title><rect x="120.9" y="211.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="123.9" y="222.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="120.9" y="195.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.9" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.11%)</title><rect x="121.6" y="211.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="124.6" y="222.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.11%)</title><rect x="121.6" y="195.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.6" y="206.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.11%)</title><rect x="121.6" y="179.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (103 samples, 5.41%)</title><rect x="122.8" y="243.0" width="63.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.8" y="254.0">sun/nio..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (8 samples, 0.42%)</title><rect x="122.8" y="227.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="125.8" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.42%)</title><rect x="122.8" y="211.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (6 samples, 0.32%)</title><rect x="124.0" y="195.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (6 samples, 0.32%)</title><rect x="124.0" y="179.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="127.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.16%)</title><rect x="124.7" y="163.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (3 samples, 0.16%)</title><rect x="124.7" y="147.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="127.7" y="158.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.05%)</title><rect x="125.9" y="131.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (2 samples, 0.11%)</title><rect x="126.5" y="163.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (81 samples, 4.25%)</title><rect x="127.8" y="227.0" width="50.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="130.8" y="238.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (81 samples, 4.25%)</title><rect x="127.8" y="211.0" width="50.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="130.8" y="222.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (81 samples, 4.25%)</title><rect x="127.8" y="195.0" width="50.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="130.8" y="206.0">sun/n..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.05%)</title><rect x="132.1" y="179.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="135.1" y="190.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.05%)</title><rect x="132.1" y="163.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="135.1" y="174.0"></text>
</g>
<g>
<title>__pread (70 samples, 3.68%)</title><rect x="132.7" y="179.0" width="43.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="135.7" y="190.0">__pr..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.11%)</title><rect x="176.1" y="179.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="179.1" y="190.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="177.3" y="179.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="180.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (12 samples, 0.63%)</title><rect x="178.0" y="227.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="181.0" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.42%)</title><rect x="178.0" y="211.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.0" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (6 samples, 0.32%)</title><rect x="179.2" y="195.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="182.2" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (6 samples, 0.32%)</title><rect x="179.2" y="179.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="182.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.21%)</title><rect x="182.9" y="211.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="185.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.11%)</title><rect x="185.4" y="227.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="188.4" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.11%)</title><rect x="185.4" y="211.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="188.4" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.05%)</title><rect x="186.0" y="195.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (7 samples, 0.37%)</title><rect x="186.6" y="243.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="189.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.05%)</title><rect x="189.7" y="227.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="192.7" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.05%)</title><rect x="190.3" y="227.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.3" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.05%)</title><rect x="191.0" y="243.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.0" y="254.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="191.0" y="227.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="194.0" y="238.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="191.0" y="211.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="194.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.11%)</title><rect x="191.6" y="403.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="194.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.11%)</title><rect x="191.6" y="387.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="194.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.11%)</title><rect x="191.6" y="371.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="194.6" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.05%)</title><rect x="191.6" y="355.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.6" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.05%)</title><rect x="191.6" y="339.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="194.6" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.05%)</title><rect x="191.6" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="194.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.05%)</title><rect x="191.6" y="307.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="194.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.05%)</title><rect x="191.6" y="291.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.6" y="302.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="191.6" y="275.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.6" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="191.6" y="259.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="194.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="191.6" y="243.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="191.6" y="227.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="194.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.05%)</title><rect x="191.6" y="211.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="194.6" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="191.6" y="195.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="194.6" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="191.6" y="179.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="194.6" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="191.6" y="163.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="194.6" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="191.6" y="147.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="194.6" y="158.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.05%)</title><rect x="192.2" y="355.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="195.2" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.05%)</title><rect x="192.2" y="339.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="195.2" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.05%)</title><rect x="192.2" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1 samples, 0.05%)</title><rect x="192.2" y="307.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="195.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.05%)</title><rect x="192.2" y="291.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="195.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.05%)</title><rect x="192.2" y="275.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1 samples, 0.05%)</title><rect x="192.2" y="259.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (1 samples, 0.05%)</title><rect x="192.2" y="243.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (1 samples, 0.05%)</title><rect x="192.2" y="227.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="195.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (1 samples, 0.05%)</title><rect x="192.2" y="211.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.05%)</title><rect x="192.2" y="195.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.2" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.05%)</title><rect x="192.2" y="179.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.05%)</title><rect x="192.2" y="163.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.05%)</title><rect x="192.2" y="147.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.05%)</title><rect x="192.2" y="131.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.05%)</title><rect x="192.2" y="115.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="195.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.05%)</title><rect x="192.2" y="99.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="195.2" y="110.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.05%)</title><rect x="192.2" y="83.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="195.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (3 samples, 0.16%)</title><rect x="192.8" y="419.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (3 samples, 0.16%)</title><rect x="192.8" y="403.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (3 samples, 0.16%)</title><rect x="192.8" y="387.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (3 samples, 0.16%)</title><rect x="192.8" y="371.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (3 samples, 0.16%)</title><rect x="192.8" y="355.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="195.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (3 samples, 0.16%)</title><rect x="192.8" y="339.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="195.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.16%)</title><rect x="192.8" y="323.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="195.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.11%)</title><rect x="193.4" y="307.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="196.4" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.11%)</title><rect x="193.4" y="291.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="196.4" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="194.1" y="275.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="197.1" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="194.1" y="259.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="197.1" y="270.0"></text>
</g>
<g>
<title>[pool-3-thread-2 tid=53020] (222 samples, 11.66%)</title><rect x="194.7" y="563.0" width="137.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="197.7" y="574.0">[pool-3-thread-2 ..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="194.7" y="547.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="197.7" y="558.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="194.7" y="531.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="197.7" y="542.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.05%)</title><rect x="194.7" y="515.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="197.7" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="194.7" y="499.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="197.7" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (221 samples, 11.61%)</title><rect x="195.3" y="547.0" width="137.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="198.3" y="558.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (221 samples, 11.61%)</title><rect x="195.3" y="531.0" width="137.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.3" y="542.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (221 samples, 11.61%)</title><rect x="195.3" y="515.0" width="137.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.3" y="526.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.11%)</title><rect x="195.3" y="499.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="198.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.05%)</title><rect x="195.9" y="483.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="198.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.05%)</title><rect x="195.9" y="467.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="198.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="195.9" y="451.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.05%)</title><rect x="195.9" y="435.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="198.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="195.9" y="419.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="198.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="195.9" y="403.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="198.9" y="414.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="195.9" y="387.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="198.9" y="398.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.05%)</title><rect x="195.9" y="371.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="198.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.run (219 samples, 11.50%)</title><rect x="196.5" y="499.0" width="135.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="199.5" y="510.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (219 samples, 11.50%)</title><rect x="196.5" y="483.0" width="135.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="199.5" y="494.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (218 samples, 11.45%)</title><rect x="197.2" y="467.0" width="135.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="200.2" y="478.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (14 samples, 0.74%)</title><rect x="197.2" y="451.0" width="8.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="200.2" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (14 samples, 0.74%)</title><rect x="197.2" y="435.0" width="8.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="200.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (14 samples, 0.74%)</title><rect x="197.2" y="419.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (14 samples, 0.74%)</title><rect x="197.2" y="403.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (14 samples, 0.74%)</title><rect x="197.2" y="387.0" width="8.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="200.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14 samples, 0.74%)</title><rect x="197.2" y="371.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="200.2" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.05%)</title><rect x="197.2" y="355.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="200.2" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.05%)</title><rect x="197.2" y="339.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="200.2" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.05%)</title><rect x="197.2" y="323.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="200.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.05%)</title><rect x="197.2" y="307.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="200.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.05%)</title><rect x="197.2" y="291.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="200.2" y="302.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="197.2" y="275.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="200.2" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="197.2" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="197.2" y="243.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="200.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="197.2" y="227.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="200.2" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="197.2" y="211.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.2" y="222.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="197.2" y="195.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.2" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (13 samples, 0.68%)</title><rect x="197.8" y="355.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="200.8" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (13 samples, 0.68%)</title><rect x="197.8" y="339.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="200.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (13 samples, 0.68%)</title><rect x="197.8" y="323.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="200.8" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (13 samples, 0.68%)</title><rect x="197.8" y="307.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.68%)</title><rect x="197.8" y="291.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.68%)</title><rect x="197.8" y="275.0" width="8.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="200.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (13 samples, 0.68%)</title><rect x="197.8" y="259.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="200.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (13 samples, 0.68%)</title><rect x="197.8" y="243.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (13 samples, 0.68%)</title><rect x="197.8" y="227.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="200.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (13 samples, 0.68%)</title><rect x="197.8" y="211.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="200.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.21%)</title><rect x="197.8" y="195.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="200.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.21%)</title><rect x="197.8" y="179.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="200.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.21%)</title><rect x="197.8" y="163.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="200.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.05%)</title><rect x="197.8" y="147.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.8" y="158.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.05%)</title><rect x="197.8" y="131.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="200.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.11%)</title><rect x="198.4" y="147.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.11%)</title><rect x="198.4" y="131.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="201.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.11%)</title><rect x="198.4" y="115.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.11%)</title><rect x="198.4" y="99.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="201.4" y="110.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.05%)</title><rect x="198.4" y="83.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="201.4" y="94.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="199.0" y="83.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="202.0" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.05%)</title><rect x="199.6" y="147.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.05%)</title><rect x="199.6" y="131.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="202.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (9 samples, 0.47%)</title><rect x="200.3" y="195.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.3" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (9 samples, 0.47%)</title><rect x="200.3" y="179.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="203.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.05%)</title><rect x="200.3" y="163.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="203.3" y="174.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.05%)</title><rect x="200.3" y="147.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.3" y="158.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.05%)</title><rect x="200.3" y="131.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="203.3" y="142.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.05%)</title><rect x="200.3" y="115.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.3" y="126.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.05%)</title><rect x="200.3" y="99.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="203.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (8 samples, 0.42%)</title><rect x="200.9" y="163.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="203.9" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.05%)</title><rect x="201.5" y="147.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.5" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.05%)</title><rect x="201.5" y="131.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="204.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.05%)</title><rect x="201.5" y="115.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="204.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.05%)</title><rect x="201.5" y="99.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="204.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.32%)</title><rect x="202.1" y="147.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.32%)</title><rect x="202.1" y="131.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.32%)</title><rect x="202.1" y="115.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="205.1" y="126.0"></text>
</g>
<g>
<title>__pread (5 samples, 0.26%)</title><rect x="202.1" y="99.0" width="3.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="205.1" y="110.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.05%)</title><rect x="205.2" y="99.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="208.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.05%)</title><rect x="205.8" y="451.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="208.8" y="462.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="205.8" y="435.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="208.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (203 samples, 10.66%)</title><rect x="206.5" y="451.0" width="125.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="209.5" y="462.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (203 samples, 10.66%)</title><rect x="206.5" y="435.0" width="125.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="209.5" y="446.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.11%)</title><rect x="206.5" y="419.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="209.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.11%)</title><rect x="206.5" y="403.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="209.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.11%)</title><rect x="206.5" y="387.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="209.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.05%)</title><rect x="207.1" y="371.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.05%)</title><rect x="207.1" y="355.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (198 samples, 10.40%)</title><rect x="207.7" y="419.0" width="122.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="210.7" y="430.0">ru/mail/polis/d..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (28 samples, 1.47%)</title><rect x="207.7" y="403.0" width="17.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="210.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (28 samples, 1.47%)</title><rect x="207.7" y="387.0" width="17.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="210.7" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (28 samples, 1.47%)</title><rect x="207.7" y="371.0" width="17.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="210.7" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (28 samples, 1.47%)</title><rect x="207.7" y="355.0" width="17.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="210.7" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (28 samples, 1.47%)</title><rect x="207.7" y="339.0" width="17.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="210.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (28 samples, 1.47%)</title><rect x="207.7" y="323.0" width="17.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (28 samples, 1.47%)</title><rect x="207.7" y="307.0" width="17.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="210.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (28 samples, 1.47%)</title><rect x="207.7" y="291.0" width="17.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="210.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (27 samples, 1.42%)</title><rect x="207.7" y="275.0" width="16.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="210.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (27 samples, 1.42%)</title><rect x="207.7" y="259.0" width="16.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="210.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (27 samples, 1.42%)</title><rect x="207.7" y="243.0" width="16.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="210.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (27 samples, 1.42%)</title><rect x="207.7" y="227.0" width="16.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.7" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="207.7" y="211.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.05%)</title><rect x="207.7" y="195.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="210.7" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (1 samples, 0.05%)</title><rect x="208.3" y="211.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="211.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (5 samples, 0.26%)</title><rect x="208.9" y="211.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.26%)</title><rect x="208.9" y="195.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="211.9" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.26%)</title><rect x="208.9" y="179.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="211.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.16%)</title><rect x="208.9" y="163.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="211.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.11%)</title><rect x="208.9" y="147.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="211.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.11%)</title><rect x="208.9" y="131.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="211.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.11%)</title><rect x="208.9" y="115.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="211.9" y="126.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.11%)</title><rect x="208.9" y="99.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="211.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="210.2" y="147.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="213.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (1 samples, 0.05%)</title><rect x="210.2" y="131.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="213.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.11%)</title><rect x="210.8" y="163.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="213.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (20 samples, 1.05%)</title><rect x="212.0" y="211.0" width="12.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="215.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (20 samples, 1.05%)</title><rect x="212.0" y="195.0" width="12.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.05%)</title><rect x="212.0" y="179.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="215.0" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.05%)</title><rect x="212.0" y="163.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="215.0" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.05%)</title><rect x="212.0" y="147.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="215.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (14 samples, 0.74%)</title><rect x="212.7" y="179.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="215.7" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.21%)</title><rect x="213.3" y="163.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="216.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.21%)</title><rect x="213.3" y="147.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.16%)</title><rect x="213.9" y="131.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="216.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.16%)</title><rect x="213.9" y="115.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="216.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.11%)</title><rect x="214.5" y="99.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="217.5" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.05%)</title><rect x="215.1" y="83.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="218.1" y="94.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.05%)</title><rect x="215.1" y="67.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="218.1" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.47%)</title><rect x="215.8" y="163.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="218.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 0.47%)</title><rect x="215.8" y="147.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="218.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.47%)</title><rect x="215.8" y="131.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="218.8" y="142.0"></text>
</g>
<g>
<title>__pread (8 samples, 0.42%)</title><rect x="215.8" y="115.0" width="4.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="218.8" y="126.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="220.7" y="115.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="223.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.26%)</title><rect x="221.3" y="179.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="224.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.16%)</title><rect x="222.6" y="163.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="225.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="224.4" y="275.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="227.4" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="224.4" y="259.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="227.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="224.4" y="243.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="227.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="224.4" y="227.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.05%)</title><rect x="224.4" y="211.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.4" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="224.4" y="195.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.4" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="224.4" y="179.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.4" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="224.4" y="163.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.4" y="174.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (165 samples, 8.67%)</title><rect x="225.1" y="403.0" width="102.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="228.1" y="414.0">java/util/Co..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (165 samples, 8.67%)</title><rect x="225.1" y="387.0" width="102.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="228.1" y="398.0">java/lang/It..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$72/1983780967.accept (165 samples, 8.67%)</title><rect x="225.1" y="371.0" width="102.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="228.1" y="382.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (165 samples, 8.67%)</title><rect x="225.1" y="355.0" width="102.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="228.1" y="366.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (165 samples, 8.67%)</title><rect x="225.1" y="339.0" width="102.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.1" y="350.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (165 samples, 8.67%)</title><rect x="225.1" y="323.0" width="102.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="228.1" y="334.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (165 samples, 8.67%)</title><rect x="225.1" y="307.0" width="102.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="228.1" y="318.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.37%)</title><rect x="225.1" y="291.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="228.1" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="226.3" y="275.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="229.3" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.16%)</title><rect x="226.9" y="275.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="229.9" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="227.5" y="259.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="230.5" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.05%)</title><rect x="227.5" y="243.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.5" y="254.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.05%)</title><rect x="228.2" y="259.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="231.2" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="228.8" y="275.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="231.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (158 samples, 8.30%)</title><rect x="229.4" y="291.0" width="97.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="232.4" y="302.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.58%)</title><rect x="229.4" y="275.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="232.4" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.47%)</title><rect x="230.6" y="259.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="233.6" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.32%)</title><rect x="232.5" y="243.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.5" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="233.7" y="227.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="236.7" y="238.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="234.3" y="227.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="237.3" y="238.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="235.0" y="227.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="238.0" y="238.0"></text>
</g>
<g>
<title>unsafe_arraycopy (1 samples, 0.05%)</title><rect x="235.6" y="227.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="238.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (53 samples, 2.78%)</title><rect x="236.2" y="275.0" width="32.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="239.2" y="286.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.42%)</title><rect x="236.8" y="259.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="239.8" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.42%)</title><rect x="236.8" y="243.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="239.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.42%)</title><rect x="236.8" y="227.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="239.8" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.11%)</title><rect x="240.5" y="211.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="243.5" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.11%)</title><rect x="240.5" y="195.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="243.5" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.11%)</title><rect x="240.5" y="179.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="243.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (44 samples, 2.31%)</title><rect x="241.8" y="259.0" width="27.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="244.8" y="270.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (44 samples, 2.31%)</title><rect x="241.8" y="243.0" width="27.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="244.8" y="254.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.16%)</title><rect x="241.8" y="227.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="244.8" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.16%)</title><rect x="241.8" y="211.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="244.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (39 samples, 2.05%)</title><rect x="243.6" y="227.0" width="24.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="246.6" y="238.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (32 samples, 1.68%)</title><rect x="243.6" y="211.0" width="19.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="246.6" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (32 samples, 1.68%)</title><rect x="243.6" y="195.0" width="19.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.6" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (32 samples, 1.68%)</title><rect x="243.6" y="179.0" width="19.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="246.6" y="190.0"></text>
</g>
<g>
<title>__pread (30 samples, 1.58%)</title><rect x="244.9" y="163.0" width="18.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="247.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="263.5" y="211.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="266.5" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="263.5" y="195.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="266.5" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.05%)</title><rect x="263.5" y="179.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="266.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (6 samples, 0.32%)</title><rect x="264.1" y="211.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="267.1" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.32%)</title><rect x="264.1" y="195.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="267.1" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.21%)</title><rect x="264.1" y="179.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="267.1" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (3 samples, 0.16%)</title><rect x="264.7" y="163.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.7" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.11%)</title><rect x="266.6" y="179.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="269.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.05%)</title><rect x="267.8" y="227.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="270.8" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.05%)</title><rect x="268.4" y="227.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="271.4" y="238.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="268.4" y="211.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="271.4" y="222.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="268.4" y="195.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="271.4" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="268.4" y="179.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="271.4" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.05%)</title><rect x="268.4" y="163.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="271.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (94 samples, 4.94%)</title><rect x="269.1" y="275.0" width="58.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="272.1" y="286.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (94 samples, 4.94%)</title><rect x="269.1" y="259.0" width="58.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="272.1" y="270.0">sun/ni..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.05%)</title><rect x="269.1" y="243.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="272.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.16%)</title><rect x="269.7" y="243.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="272.7" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.16%)</title><rect x="269.7" y="227.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="272.7" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.11%)</title><rect x="270.3" y="211.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.3" y="222.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.11%)</title><rect x="270.3" y="195.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="273.3" y="206.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.11%)</title><rect x="270.3" y="179.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="273.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.05%)</title><rect x="270.9" y="163.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (79 samples, 4.15%)</title><rect x="271.5" y="243.0" width="49.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="274.5" y="254.0">sun/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (13 samples, 0.68%)</title><rect x="271.5" y="227.0" width="8.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="274.5" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (11 samples, 0.58%)</title><rect x="272.8" y="211.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="275.8" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.11%)</title><rect x="273.4" y="195.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.4" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.21%)</title><rect x="274.6" y="195.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="277.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.21%)</title><rect x="274.6" y="179.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="277.6" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.21%)</title><rect x="274.6" y="163.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="277.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (4 samples, 0.21%)</title><rect x="277.1" y="195.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (4 samples, 0.21%)</title><rect x="277.1" y="179.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.16%)</title><rect x="277.7" y="163.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (2 samples, 0.11%)</title><rect x="277.7" y="147.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="280.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (2 samples, 0.11%)</title><rect x="277.7" y="131.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="280.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.05%)</title><rect x="279.0" y="147.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="282.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkOffset (1 samples, 0.05%)</title><rect x="279.0" y="131.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="282.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (57 samples, 2.99%)</title><rect x="279.6" y="227.0" width="35.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.6" y="238.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (57 samples, 2.99%)</title><rect x="279.6" y="211.0" width="35.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="282.6" y="222.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (56 samples, 2.94%)</title><rect x="280.2" y="195.0" width="34.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="283.2" y="206.0">su..</text>
</g>
<g>
<title>__pread (52 samples, 2.73%)</title><rect x="281.4" y="179.0" width="32.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="284.4" y="190.0">__..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.11%)</title><rect x="313.7" y="179.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="316.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.32%)</title><rect x="314.9" y="227.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="317.9" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.16%)</title><rect x="314.9" y="211.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="317.9" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.11%)</title><rect x="314.9" y="195.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.9" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.11%)</title><rect x="314.9" y="179.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="317.9" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.05%)</title><rect x="316.2" y="195.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="319.2" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.16%)</title><rect x="316.8" y="211.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="319.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.16%)</title><rect x="318.6" y="227.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.6" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.16%)</title><rect x="318.6" y="211.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="321.6" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.11%)</title><rect x="319.3" y="195.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="322.3" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (11 samples, 0.58%)</title><rect x="320.5" y="243.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="323.5" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (7 samples, 0.37%)</title><rect x="323.0" y="227.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="326.0" y="238.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="326.7" y="211.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="329.7" y="222.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.05%)</title><rect x="326.7" y="195.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="329.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.26%)</title><rect x="327.3" y="403.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="330.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.26%)</title><rect x="327.3" y="387.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="330.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.26%)</title><rect x="327.3" y="371.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.3" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.05%)</title><rect x="327.3" y="355.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.3" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.05%)</title><rect x="327.3" y="339.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="330.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.05%)</title><rect x="327.3" y="323.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.05%)</title><rect x="327.3" y="307.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="330.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.05%)</title><rect x="327.3" y="291.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.21%)</title><rect x="327.9" y="355.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="330.9" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.21%)</title><rect x="327.9" y="339.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.9" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.21%)</title><rect x="327.9" y="323.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.21%)</title><rect x="327.9" y="307.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="330.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.21%)</title><rect x="327.9" y="291.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="330.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.21%)</title><rect x="327.9" y="275.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="330.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4 samples, 0.21%)</title><rect x="327.9" y="259.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (4 samples, 0.21%)</title><rect x="327.9" y="243.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (4 samples, 0.21%)</title><rect x="327.9" y="227.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (4 samples, 0.21%)</title><rect x="327.9" y="211.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="330.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.05%)</title><rect x="327.9" y="195.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.9" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="327.9" y="179.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="330.9" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="327.9" y="163.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.9" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="327.9" y="147.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="330.9" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="327.9" y="131.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.9" y="142.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="327.9" y="115.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.16%)</title><rect x="328.6" y="195.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="331.6" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.16%)</title><rect x="328.6" y="179.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="331.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.11%)</title><rect x="328.6" y="163.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="331.6" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.05%)</title><rect x="328.6" y="147.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="331.6" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.05%)</title><rect x="328.6" y="131.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.05%)</title><rect x="329.2" y="147.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.05%)</title><rect x="329.2" y="131.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="332.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.05%)</title><rect x="329.2" y="115.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="332.2" y="126.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.05%)</title><rect x="329.2" y="99.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="332.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.05%)</title><rect x="329.8" y="163.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.8" y="174.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="329.8" y="147.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="332.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (3 samples, 0.16%)</title><rect x="330.4" y="419.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="333.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (3 samples, 0.16%)</title><rect x="330.4" y="403.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="333.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (3 samples, 0.16%)</title><rect x="330.4" y="387.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="333.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (3 samples, 0.16%)</title><rect x="330.4" y="371.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="333.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (3 samples, 0.16%)</title><rect x="330.4" y="355.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="333.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (3 samples, 0.16%)</title><rect x="330.4" y="339.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.16%)</title><rect x="330.4" y="323.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="333.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.16%)</title><rect x="330.4" y="307.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="333.4" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.16%)</title><rect x="330.4" y="291.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="333.4" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.11%)</title><rect x="331.0" y="275.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.0" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.11%)</title><rect x="331.0" y="259.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="334.0" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="331.0" y="243.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="334.0" y="254.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.05%)</title><rect x="331.6" y="243.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="334.6" y="254.0"></text>
</g>
<g>
<title>[pool-3-thread-3 tid=53021] (255 samples, 13.39%)</title><rect x="332.3" y="563.0" width="158.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="335.3" y="574.0">[pool-3-thread-3 tid..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.11%)</title><rect x="332.3" y="547.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="335.3" y="558.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.11%)</title><rect x="332.3" y="531.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="335.3" y="542.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.11%)</title><rect x="332.3" y="515.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="335.3" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.11%)</title><rect x="332.3" y="499.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="335.3" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (253 samples, 13.29%)</title><rect x="333.5" y="547.0" width="156.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="336.5" y="558.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (253 samples, 13.29%)</title><rect x="333.5" y="531.0" width="156.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="336.5" y="542.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (253 samples, 13.29%)</title><rect x="333.5" y="515.0" width="156.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="336.5" y="526.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.21%)</title><rect x="333.5" y="499.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="336.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2 samples, 0.11%)</title><rect x="334.1" y="483.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="337.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.11%)</title><rect x="334.1" y="467.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="337.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.11%)</title><rect x="334.1" y="451.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="337.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.11%)</title><rect x="334.1" y="435.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="337.1" y="446.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.05%)</title><rect x="334.1" y="419.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="337.1" y="430.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="334.1" y="403.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="337.1" y="414.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="334.7" y="419.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="337.7" y="430.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.05%)</title><rect x="334.7" y="403.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="337.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.run (1 samples, 0.05%)</title><rect x="335.4" y="483.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.run (249 samples, 13.08%)</title><rect x="336.0" y="499.0" width="154.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="339.0" y="510.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (249 samples, 13.08%)</title><rect x="336.0" y="483.0" width="154.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="339.0" y="494.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.05%)</title><rect x="336.0" y="467.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.05%)</title><rect x="336.0" y="451.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="339.0" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.05%)</title><rect x="336.0" y="435.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="339.0" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.05%)</title><rect x="336.0" y="419.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="339.0" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.05%)</title><rect x="336.0" y="403.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="339.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.05%)</title><rect x="336.0" y="387.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="339.0" y="398.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.05%)</title><rect x="336.0" y="371.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="339.0" y="382.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.05%)</title><rect x="336.0" y="355.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="339.0" y="366.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.05%)</title><rect x="336.0" y="339.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="339.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (248 samples, 13.03%)</title><rect x="336.6" y="467.0" width="153.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.6" y="478.0">ru/mail/polis/dao/D..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (19 samples, 1.00%)</title><rect x="336.6" y="451.0" width="11.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="339.6" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (19 samples, 1.00%)</title><rect x="336.6" y="435.0" width="11.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="339.6" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (18 samples, 0.95%)</title><rect x="337.2" y="419.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="340.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (18 samples, 0.95%)</title><rect x="337.2" y="403.0" width="11.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="340.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (18 samples, 0.95%)</title><rect x="337.2" y="387.0" width="11.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (18 samples, 0.95%)</title><rect x="337.2" y="371.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="340.2" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.05%)</title><rect x="337.8" y="355.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="340.8" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.05%)</title><rect x="337.8" y="339.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="340.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.05%)</title><rect x="337.8" y="323.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.05%)</title><rect x="337.8" y="307.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="340.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.05%)</title><rect x="337.8" y="291.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="340.8" y="302.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="337.8" y="275.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="340.8" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="337.8" y="259.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="337.8" y="243.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="340.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="337.8" y="227.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="337.8" y="211.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="340.8" y="222.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="337.8" y="195.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.8" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (16 samples, 0.84%)</title><rect x="338.5" y="355.0" width="9.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="341.5" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (16 samples, 0.84%)</title><rect x="338.5" y="339.0" width="9.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="341.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (16 samples, 0.84%)</title><rect x="338.5" y="323.0" width="9.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="341.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (16 samples, 0.84%)</title><rect x="338.5" y="307.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="341.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.84%)</title><rect x="338.5" y="291.0" width="9.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="341.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.84%)</title><rect x="338.5" y="275.0" width="9.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="341.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (16 samples, 0.84%)</title><rect x="338.5" y="259.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="341.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (16 samples, 0.84%)</title><rect x="338.5" y="243.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="341.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (16 samples, 0.84%)</title><rect x="338.5" y="227.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="341.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (16 samples, 0.84%)</title><rect x="338.5" y="211.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="341.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (8 samples, 0.42%)</title><rect x="338.5" y="195.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="341.5" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="338.5" y="179.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="341.5" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="338.5" y="163.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="341.5" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="338.5" y="147.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="341.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.37%)</title><rect x="339.1" y="179.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="342.1" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.37%)</title><rect x="339.1" y="163.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="342.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.32%)</title><rect x="339.1" y="147.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="342.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.32%)</title><rect x="339.1" y="131.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.32%)</title><rect x="339.1" y="115.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="342.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.32%)</title><rect x="339.1" y="99.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="342.1" y="110.0"></text>
</g>
<g>
<title>__pread (6 samples, 0.32%)</title><rect x="339.1" y="83.0" width="3.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="342.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.05%)</title><rect x="342.8" y="147.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="345.8" y="158.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="342.8" y="131.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="345.8" y="142.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="342.8" y="115.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="345.8" y="126.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="342.8" y="99.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="345.8" y="110.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.05%)</title><rect x="342.8" y="83.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="345.8" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (8 samples, 0.42%)</title><rect x="343.4" y="195.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="346.4" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.37%)</title><rect x="344.0" y="179.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="347.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.11%)</title><rect x="344.0" y="163.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="347.0" y="174.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.11%)</title><rect x="344.0" y="147.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="347.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.16%)</title><rect x="345.3" y="163.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="348.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.11%)</title><rect x="345.3" y="147.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="348.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.11%)</title><rect x="345.3" y="131.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="348.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.11%)</title><rect x="345.3" y="115.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="348.3" y="126.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="345.3" y="99.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="348.3" y="110.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="345.9" y="99.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="348.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="346.5" y="147.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.5" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="346.5" y="131.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="349.5" y="142.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.05%)</title><rect x="346.5" y="115.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="349.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.11%)</title><rect x="347.1" y="163.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="350.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (229 samples, 12.03%)</title><rect x="348.4" y="451.0" width="141.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="351.4" y="462.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (229 samples, 12.03%)</title><rect x="348.4" y="435.0" width="141.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="351.4" y="446.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.05%)</title><rect x="348.4" y="419.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="351.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.05%)</title><rect x="348.4" y="403.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="351.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.05%)</title><rect x="348.4" y="387.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="351.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (228 samples, 11.97%)</title><rect x="349.0" y="419.0" width="141.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="352.0" y="430.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (21 samples, 1.10%)</title><rect x="349.0" y="403.0" width="13.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="352.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (21 samples, 1.10%)</title><rect x="349.0" y="387.0" width="13.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="352.0" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (21 samples, 1.10%)</title><rect x="349.0" y="371.0" width="13.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="352.0" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (21 samples, 1.10%)</title><rect x="349.0" y="355.0" width="13.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="352.0" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (21 samples, 1.10%)</title><rect x="349.0" y="339.0" width="13.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.0" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (21 samples, 1.10%)</title><rect x="349.0" y="323.0" width="13.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="352.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 1.10%)</title><rect x="349.0" y="307.0" width="13.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="352.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 1.10%)</title><rect x="349.0" y="291.0" width="13.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="352.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (21 samples, 1.10%)</title><rect x="349.0" y="275.0" width="13.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="352.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.05%)</title><rect x="349.0" y="259.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="352.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.05%)</title><rect x="349.0" y="243.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="352.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (20 samples, 1.05%)</title><rect x="349.6" y="259.0" width="12.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (20 samples, 1.05%)</title><rect x="349.6" y="243.0" width="12.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (20 samples, 1.05%)</title><rect x="349.6" y="227.0" width="12.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (5 samples, 0.26%)</title><rect x="349.6" y="211.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="352.6" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.26%)</title><rect x="349.6" y="195.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="352.6" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.21%)</title><rect x="350.2" y="179.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="353.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.21%)</title><rect x="350.2" y="163.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="353.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.16%)</title><rect x="350.9" y="147.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="353.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.16%)</title><rect x="350.9" y="131.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="353.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.16%)</title><rect x="350.9" y="115.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="353.9" y="126.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.16%)</title><rect x="350.9" y="99.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="353.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (15 samples, 0.79%)</title><rect x="352.7" y="211.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="355.7" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (15 samples, 0.79%)</title><rect x="352.7" y="195.0" width="9.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="355.7" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.11%)</title><rect x="352.7" y="179.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="355.7" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.11%)</title><rect x="352.7" y="163.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="355.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.47%)</title><rect x="354.0" y="179.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="357.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (8 samples, 0.42%)</title><rect x="354.6" y="163.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (8 samples, 0.42%)</title><rect x="354.6" y="147.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="357.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (8 samples, 0.42%)</title><rect x="354.6" y="131.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="357.6" y="142.0"></text>
</g>
<g>
<title>__pread (7 samples, 0.37%)</title><rect x="354.6" y="115.0" width="4.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="357.6" y="126.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="358.9" y="115.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="361.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.11%)</title><rect x="359.5" y="179.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="362.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.11%)</title><rect x="360.8" y="179.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="363.8" y="190.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.11%)</title><rect x="360.8" y="163.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="363.8" y="174.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.11%)</title><rect x="360.8" y="147.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="363.8" y="158.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="361.4" y="131.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="364.4" y="142.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (198 samples, 10.40%)</title><rect x="362.0" y="403.0" width="122.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="365.0" y="414.0">java/util/Colle..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (198 samples, 10.40%)</title><rect x="362.0" y="387.0" width="122.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="365.0" y="398.0">java/lang/Itera..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$72/1983780967.accept (198 samples, 10.40%)</title><rect x="362.0" y="371.0" width="122.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="365.0" y="382.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (198 samples, 10.40%)</title><rect x="362.0" y="355.0" width="122.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="365.0" y="366.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (198 samples, 10.40%)</title><rect x="362.0" y="339.0" width="122.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="365.0" y="350.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (198 samples, 10.40%)</title><rect x="362.0" y="323.0" width="122.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="365.0" y="334.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (198 samples, 10.40%)</title><rect x="362.0" y="307.0" width="122.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.0" y="318.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.16%)</title><rect x="362.0" y="291.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="365.0" y="302.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.11%)</title><rect x="362.0" y="275.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="365.0" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="363.3" y="275.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.3" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.05%)</title><rect x="363.3" y="259.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="366.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (195 samples, 10.24%)</title><rect x="363.9" y="291.0" width="120.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="366.9" y="302.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.21%)</title><rect x="363.9" y="275.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="366.9" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.21%)</title><rect x="363.9" y="259.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="366.9" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.21%)</title><rect x="363.9" y="243.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="366.9" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="365.7" y="227.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="365.7" y="211.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="368.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="365.7" y="195.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="368.7" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.05%)</title><rect x="365.7" y="179.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="368.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (67 samples, 3.52%)</title><rect x="366.4" y="275.0" width="41.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="369.4" y="286.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.16%)</title><rect x="367.6" y="259.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="370.6" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.16%)</title><rect x="367.6" y="243.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="370.6" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.16%)</title><rect x="367.6" y="227.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="370.6" y="238.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (1 samples, 0.05%)</title><rect x="368.8" y="211.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="371.8" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.21%)</title><rect x="369.5" y="259.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="372.5" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.21%)</title><rect x="369.5" y="243.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="372.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.21%)</title><rect x="369.5" y="227.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.5" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (58 samples, 3.05%)</title><rect x="371.9" y="259.0" width="36.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="374.9" y="270.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (58 samples, 3.05%)</title><rect x="371.9" y="243.0" width="36.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="374.9" y="254.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (6 samples, 0.32%)</title><rect x="371.9" y="227.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="374.9" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (6 samples, 0.32%)</title><rect x="371.9" y="211.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="374.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (49 samples, 2.57%)</title><rect x="375.7" y="227.0" width="30.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="378.7" y="238.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.05%)</title><rect x="375.7" y="211.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="378.7" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.05%)</title><rect x="375.7" y="195.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="378.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.05%)</title><rect x="375.7" y="179.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="378.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (42 samples, 2.21%)</title><rect x="376.3" y="211.0" width="26.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.3" y="222.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (42 samples, 2.21%)</title><rect x="376.3" y="195.0" width="26.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="379.3" y="206.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (42 samples, 2.21%)</title><rect x="376.3" y="179.0" width="26.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="379.3" y="190.0">s..</text>
</g>
<g>
<title>__pread (39 samples, 2.05%)</title><rect x="377.5" y="163.0" width="24.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="380.5" y="174.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="401.7" y="163.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="404.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (6 samples, 0.32%)</title><rect x="402.3" y="211.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.3" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.21%)</title><rect x="402.3" y="195.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="405.3" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.21%)</title><rect x="402.3" y="179.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="405.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (2 samples, 0.11%)</title><rect x="404.8" y="195.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="407.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.16%)</title><rect x="406.0" y="227.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="409.0" y="238.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="406.6" y="211.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="409.6" y="222.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="406.6" y="195.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="409.6" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="406.6" y="179.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="409.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.05%)</title><rect x="407.3" y="211.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="410.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (124 samples, 6.51%)</title><rect x="407.9" y="275.0" width="76.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="410.9" y="286.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (124 samples, 6.51%)</title><rect x="407.9" y="259.0" width="76.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="410.9" y="270.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.21%)</title><rect x="408.5" y="243.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="411.5" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.21%)</title><rect x="408.5" y="227.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.5" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.21%)</title><rect x="408.5" y="211.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="411.5" y="222.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.21%)</title><rect x="408.5" y="195.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.5" y="206.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.16%)</title><rect x="409.1" y="179.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="412.1" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="410.4" y="163.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="413.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (96 samples, 5.04%)</title><rect x="411.0" y="243.0" width="59.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="414.0" y="254.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (10 samples, 0.53%)</title><rect x="411.0" y="227.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.0" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (10 samples, 0.53%)</title><rect x="411.0" y="211.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="414.0" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.11%)</title><rect x="414.7" y="195.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.11%)</title><rect x="414.7" y="179.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.7" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.11%)</title><rect x="414.7" y="163.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.11%)</title><rect x="415.9" y="195.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="418.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.11%)</title><rect x="415.9" y="179.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="418.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.11%)</title><rect x="415.9" y="163.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="418.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (2 samples, 0.11%)</title><rect x="415.9" y="147.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="418.9" y="158.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.05%)</title><rect x="416.6" y="131.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (69 samples, 3.62%)</title><rect x="417.2" y="227.0" width="42.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="420.2" y="238.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (68 samples, 3.57%)</title><rect x="417.8" y="211.0" width="42.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="420.8" y="222.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (68 samples, 3.57%)</title><rect x="417.8" y="195.0" width="42.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.8" y="206.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.11%)</title><rect x="419.0" y="179.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="422.0" y="190.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.05%)</title><rect x="419.7" y="163.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="422.7" y="174.0"></text>
</g>
<g>
<title>__pread (59 samples, 3.10%)</title><rect x="420.3" y="179.0" width="36.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="423.3" y="190.0">__p..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="456.8" y="179.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="459.8" y="190.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.21%)</title><rect x="457.5" y="179.0" width="2.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="460.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (16 samples, 0.84%)</title><rect x="459.9" y="227.0" width="10.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="462.9" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (10 samples, 0.53%)</title><rect x="460.6" y="211.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="463.6" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (8 samples, 0.42%)</title><rect x="460.6" y="195.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="463.6" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (7 samples, 0.37%)</title><rect x="461.2" y="179.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="464.2" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.11%)</title><rect x="465.5" y="195.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.5" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.05%)</title><rect x="466.1" y="179.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.1" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (5 samples, 0.26%)</title><rect x="466.8" y="211.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="469.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="469.9" y="227.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (20 samples, 1.05%)</title><rect x="470.5" y="243.0" width="12.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="473.5" y="254.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="477.3" y="227.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="480.3" y="238.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="477.3" y="211.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="480.3" y="222.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="477.3" y="195.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="480.3" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="477.9" y="227.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.05%)</title><rect x="478.5" y="227.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="481.5" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (6 samples, 0.32%)</title><rect x="479.1" y="227.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="482.1" y="238.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="482.2" y="211.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="485.2" y="222.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.05%)</title><rect x="482.2" y="195.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="485.2" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.16%)</title><rect x="482.9" y="243.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="485.9" y="254.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.16%)</title><rect x="482.9" y="227.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="485.9" y="238.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.16%)</title><rect x="482.9" y="211.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="485.9" y="222.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.16%)</title><rect x="482.9" y="195.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="485.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.47%)</title><rect x="484.7" y="403.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.47%)</title><rect x="484.7" y="387.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="487.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.47%)</title><rect x="484.7" y="371.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="487.7" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.05%)</title><rect x="484.7" y="355.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.7" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.05%)</title><rect x="484.7" y="339.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.05%)</title><rect x="484.7" y="323.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.05%)</title><rect x="484.7" y="307.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.05%)</title><rect x="484.7" y="291.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="487.7" y="302.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="484.7" y="275.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="487.7" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="484.7" y="259.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="487.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="484.7" y="243.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="487.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="484.7" y="227.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="487.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.05%)</title><rect x="484.7" y="211.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.7" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.05%)</title><rect x="484.7" y="195.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="487.7" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.05%)</title><rect x="484.7" y="179.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="487.7" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="484.7" y="163.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.7" y="174.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8 samples, 0.42%)</title><rect x="485.3" y="355.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.3" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8 samples, 0.42%)</title><rect x="485.3" y="339.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8 samples, 0.42%)</title><rect x="485.3" y="323.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8 samples, 0.42%)</title><rect x="485.3" y="307.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="488.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.42%)</title><rect x="485.3" y="291.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="488.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.42%)</title><rect x="485.3" y="275.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (8 samples, 0.42%)</title><rect x="485.3" y="259.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="488.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (8 samples, 0.42%)</title><rect x="485.3" y="243.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="488.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (8 samples, 0.42%)</title><rect x="485.3" y="227.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="488.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (8 samples, 0.42%)</title><rect x="485.3" y="211.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="488.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.11%)</title><rect x="485.3" y="195.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="488.3" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.11%)</title><rect x="485.3" y="179.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="488.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.11%)</title><rect x="485.3" y="163.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="488.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.05%)</title><rect x="485.3" y="147.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="488.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.05%)</title><rect x="485.3" y="131.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="488.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.05%)</title><rect x="485.3" y="115.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.05%)</title><rect x="485.3" y="99.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.3" y="110.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.05%)</title><rect x="485.3" y="83.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="488.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.05%)</title><rect x="486.0" y="147.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="489.0" y="158.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="486.0" y="131.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="489.0" y="142.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="486.0" y="115.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="489.0" y="126.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="486.0" y="99.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="489.0" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.32%)</title><rect x="486.6" y="195.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="489.6" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.32%)</title><rect x="486.6" y="179.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.21%)</title><rect x="486.6" y="163.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="489.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.21%)</title><rect x="486.6" y="147.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="489.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.21%)</title><rect x="486.6" y="131.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="489.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.21%)</title><rect x="486.6" y="115.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="489.6" y="126.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.05%)</title><rect x="486.6" y="99.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="489.6" y="110.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.11%)</title><rect x="487.2" y="99.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="490.2" y="110.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="488.4" y="99.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="491.4" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.05%)</title><rect x="489.1" y="163.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="492.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.05%)</title><rect x="489.7" y="163.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="492.7" y="174.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="489.7" y="147.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="492.7" y="158.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="489.7" y="131.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="492.7" y="142.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="489.7" y="115.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="492.7" y="126.0"></text>
</g>
<g>
<title>[pool-3-thread-4 tid=53022] (221 samples, 11.61%)</title><rect x="490.3" y="563.0" width="137.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="493.3" y="574.0">[pool-3-thread-4 ..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="490.3" y="547.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="493.3" y="558.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="490.3" y="531.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="493.3" y="542.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.05%)</title><rect x="490.3" y="515.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="493.3" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="490.3" y="499.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="493.3" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.05%)</title><rect x="490.3" y="483.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="493.3" y="494.0"></text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.05%)</title><rect x="490.9" y="547.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="493.9" y="558.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.05%)</title><rect x="491.5" y="547.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="494.5" y="558.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="491.5" y="531.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="494.5" y="542.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.05%)</title><rect x="491.5" y="515.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="494.5" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (218 samples, 11.45%)</title><rect x="492.2" y="547.0" width="135.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="495.2" y="558.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (218 samples, 11.45%)</title><rect x="492.2" y="531.0" width="135.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="495.2" y="542.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (218 samples, 11.45%)</title><rect x="492.2" y="515.0" width="135.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="495.2" y="526.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.11%)</title><rect x="492.2" y="499.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="495.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2 samples, 0.11%)</title><rect x="492.2" y="483.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.05%)</title><rect x="492.2" y="467.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="495.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.05%)</title><rect x="492.2" y="451.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="495.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="492.2" y="435.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="495.2" y="446.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.05%)</title><rect x="492.2" y="419.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="495.2" y="430.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.05%)</title><rect x="492.2" y="403.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="495.2" y="414.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.05%)</title><rect x="492.2" y="387.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="495.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.05%)</title><rect x="492.8" y="467.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="495.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.05%)</title><rect x="492.8" y="451.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="495.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.05%)</title><rect x="492.8" y="435.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="495.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.05%)</title><rect x="492.8" y="419.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="495.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.run (216 samples, 11.34%)</title><rect x="493.4" y="499.0" width="133.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="496.4" y="510.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (216 samples, 11.34%)</title><rect x="493.4" y="483.0" width="133.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="496.4" y="494.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="494.0" y="467.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="497.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.26%)</title><rect x="494.6" y="467.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="497.6" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.26%)</title><rect x="494.6" y="451.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="497.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.26%)</title><rect x="494.6" y="435.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="497.6" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.26%)</title><rect x="494.6" y="419.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="497.6" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.26%)</title><rect x="494.6" y="403.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="497.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 0.26%)</title><rect x="494.6" y="387.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="497.6" y="398.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.11%)</title><rect x="494.6" y="371.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="497.6" y="382.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.11%)</title><rect x="494.6" y="355.0" width="1.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="497.6" y="366.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="495.3" y="339.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="498.3" y="350.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.11%)</title><rect x="495.9" y="371.0" width="1.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="498.9" y="382.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="497.1" y="371.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="500.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (209 samples, 10.98%)</title><rect x="497.7" y="467.0" width="129.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="500.7" y="478.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (14 samples, 0.74%)</title><rect x="497.7" y="451.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="500.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (14 samples, 0.74%)</title><rect x="497.7" y="435.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="500.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (14 samples, 0.74%)</title><rect x="497.7" y="419.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="500.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (14 samples, 0.74%)</title><rect x="497.7" y="403.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="500.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (14 samples, 0.74%)</title><rect x="497.7" y="387.0" width="8.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="500.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14 samples, 0.74%)</title><rect x="497.7" y="371.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="500.7" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.05%)</title><rect x="497.7" y="355.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="500.7" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.05%)</title><rect x="497.7" y="339.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="500.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.05%)</title><rect x="497.7" y="323.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="500.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.05%)</title><rect x="497.7" y="307.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.05%)</title><rect x="497.7" y="291.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="500.7" y="302.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="497.7" y="275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="500.7" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="497.7" y="259.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="500.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="497.7" y="243.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="500.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="497.7" y="227.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="500.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="497.7" y="211.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.7" y="222.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="497.7" y="195.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="500.7" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (13 samples, 0.68%)</title><rect x="498.4" y="355.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="501.4" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (13 samples, 0.68%)</title><rect x="498.4" y="339.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="501.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (13 samples, 0.68%)</title><rect x="498.4" y="323.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="501.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (13 samples, 0.68%)</title><rect x="498.4" y="307.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.68%)</title><rect x="498.4" y="291.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="501.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.68%)</title><rect x="498.4" y="275.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="501.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (12 samples, 0.63%)</title><rect x="498.4" y="259.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (12 samples, 0.63%)</title><rect x="498.4" y="243.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="501.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (12 samples, 0.63%)</title><rect x="498.4" y="227.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="501.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (12 samples, 0.63%)</title><rect x="498.4" y="211.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="501.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.21%)</title><rect x="498.4" y="195.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.4" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="498.4" y="179.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="501.4" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="498.4" y="163.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="501.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="498.4" y="147.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="501.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.16%)</title><rect x="499.0" y="179.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="502.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.16%)</title><rect x="499.0" y="163.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="502.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.05%)</title><rect x="499.0" y="147.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="502.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.05%)</title><rect x="499.0" y="131.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="502.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.05%)</title><rect x="499.0" y="115.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="502.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.05%)</title><rect x="499.0" y="99.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="502.0" y="110.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.05%)</title><rect x="499.0" y="83.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="502.0" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.11%)</title><rect x="499.6" y="147.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="502.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.11%)</title><rect x="499.6" y="131.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (8 samples, 0.42%)</title><rect x="500.8" y="195.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="503.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (8 samples, 0.42%)</title><rect x="500.8" y="179.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="503.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (8 samples, 0.42%)</title><rect x="500.8" y="163.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="503.8" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.11%)</title><rect x="500.8" y="147.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="503.8" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.11%)</title><rect x="500.8" y="131.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="503.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.05%)</title><rect x="501.5" y="115.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="504.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.05%)</title><rect x="501.5" y="99.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.26%)</title><rect x="502.1" y="147.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="505.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.26%)</title><rect x="502.1" y="131.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="505.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.26%)</title><rect x="502.1" y="115.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="505.1" y="126.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.21%)</title><rect x="502.7" y="99.0" width="2.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="505.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="505.2" y="147.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="508.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.05%)</title><rect x="505.2" y="131.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.2" y="142.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="505.8" y="259.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="508.8" y="270.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="505.8" y="243.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="508.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="505.8" y="227.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="505.8" y="211.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.8" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="505.8" y="195.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="508.8" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="505.8" y="179.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="508.8" y="190.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="505.8" y="163.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (195 samples, 10.24%)</title><rect x="506.4" y="451.0" width="120.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="509.4" y="462.0">ru/mail/polis/d..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (1 samples, 0.05%)</title><rect x="506.4" y="435.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="509.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.&lt;init&gt; (1 samples, 0.05%)</title><rect x="506.4" y="419.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="509.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="506.4" y="403.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="509.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.05%)</title><rect x="506.4" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="509.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (194 samples, 10.19%)</title><rect x="507.0" y="435.0" width="120.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="510.0" y="446.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.05%)</title><rect x="507.0" y="419.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="510.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.05%)</title><rect x="507.0" y="403.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="510.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (1 samples, 0.05%)</title><rect x="507.0" y="387.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="510.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (188 samples, 9.87%)</title><rect x="507.7" y="419.0" width="116.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.7" y="430.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (17 samples, 0.89%)</title><rect x="507.7" y="403.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="510.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (17 samples, 0.89%)</title><rect x="507.7" y="387.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="510.7" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (17 samples, 0.89%)</title><rect x="507.7" y="371.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="510.7" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (17 samples, 0.89%)</title><rect x="507.7" y="355.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="510.7" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (17 samples, 0.89%)</title><rect x="507.7" y="339.0" width="10.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="510.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (17 samples, 0.89%)</title><rect x="507.7" y="323.0" width="10.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="510.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.89%)</title><rect x="507.7" y="307.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="510.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.89%)</title><rect x="507.7" y="291.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (17 samples, 0.89%)</title><rect x="507.7" y="275.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (17 samples, 0.89%)</title><rect x="507.7" y="259.0" width="10.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="510.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (17 samples, 0.89%)</title><rect x="507.7" y="243.0" width="10.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="510.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (17 samples, 0.89%)</title><rect x="507.7" y="227.0" width="10.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="510.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (5 samples, 0.26%)</title><rect x="507.7" y="211.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="510.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.05%)</title><rect x="507.7" y="195.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="510.7" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="507.7" y="179.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="510.7" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="507.7" y="163.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="510.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.21%)</title><rect x="508.3" y="195.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="511.3" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.21%)</title><rect x="508.3" y="179.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="511.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.05%)</title><rect x="508.3" y="163.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="511.3" y="174.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.05%)</title><rect x="508.3" y="147.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="511.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.16%)</title><rect x="508.9" y="163.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="511.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.11%)</title><rect x="508.9" y="147.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.11%)</title><rect x="508.9" y="131.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="511.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.11%)</title><rect x="508.9" y="115.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.9" y="126.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.11%)</title><rect x="508.9" y="99.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="511.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="510.1" y="147.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.1" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="510.1" y="131.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.1" y="142.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.05%)</title><rect x="510.1" y="115.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (12 samples, 0.63%)</title><rect x="510.8" y="211.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="513.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (12 samples, 0.63%)</title><rect x="510.8" y="195.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="513.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.05%)</title><rect x="510.8" y="179.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="513.8" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.05%)</title><rect x="510.8" y="163.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="513.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.53%)</title><rect x="511.4" y="179.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.4" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.11%)</title><rect x="511.4" y="163.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.11%)</title><rect x="511.4" y="147.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="514.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.05%)</title><rect x="512.0" y="131.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.05%)</title><rect x="512.0" y="115.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (8 samples, 0.42%)</title><rect x="512.6" y="163.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (8 samples, 0.42%)</title><rect x="512.6" y="147.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.37%)</title><rect x="513.2" y="131.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="516.2" y="142.0"></text>
</g>
<g>
<title>__pread (6 samples, 0.32%)</title><rect x="513.2" y="115.0" width="3.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="516.2" y="126.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="517.0" y="115.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="520.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.05%)</title><rect x="517.6" y="179.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.05%)</title><rect x="517.6" y="163.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.6" y="174.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.05%)</title><rect x="517.6" y="147.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="520.6" y="158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (163 samples, 8.56%)</title><rect x="518.2" y="403.0" width="101.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="521.2" y="414.0">java/util/Co..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (163 samples, 8.56%)</title><rect x="518.2" y="387.0" width="101.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="521.2" y="398.0">java/lang/It..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$72/1983780967.accept (163 samples, 8.56%)</title><rect x="518.2" y="371.0" width="101.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="521.2" y="382.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (163 samples, 8.56%)</title><rect x="518.2" y="355.0" width="101.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.2" y="366.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (163 samples, 8.56%)</title><rect x="518.2" y="339.0" width="101.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="521.2" y="350.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (163 samples, 8.56%)</title><rect x="518.2" y="323.0" width="101.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="521.2" y="334.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (163 samples, 8.56%)</title><rect x="518.2" y="307.0" width="101.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="521.2" y="318.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.32%)</title><rect x="518.2" y="291.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="521.2" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="518.2" y="275.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.2" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.21%)</title><rect x="518.8" y="275.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="521.8" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="520.1" y="259.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.1" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.05%)</title><rect x="520.1" y="243.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="523.1" y="254.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.05%)</title><rect x="520.7" y="259.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="523.7" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="521.3" y="275.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="524.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (157 samples, 8.25%)</title><rect x="521.9" y="291.0" width="97.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.9" y="302.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="522.5" y="275.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="525.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (51 samples, 2.68%)</title><rect x="523.2" y="275.0" width="31.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="526.2" y="286.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.05%)</title><rect x="523.2" y="259.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.2" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.42%)</title><rect x="523.8" y="259.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="526.8" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="524.4" y="243.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="527.4" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.32%)</title><rect x="525.0" y="243.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="528.0" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.32%)</title><rect x="525.0" y="227.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.0" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.21%)</title><rect x="526.2" y="211.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.2" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.11%)</title><rect x="527.5" y="195.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="530.5" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="527.5" y="179.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="530.5" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="527.5" y="163.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="530.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.05%)</title><rect x="528.1" y="179.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.1" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (42 samples, 2.21%)</title><rect x="528.7" y="259.0" width="26.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="531.7" y="270.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (42 samples, 2.21%)</title><rect x="528.7" y="243.0" width="26.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="531.7" y="254.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.16%)</title><rect x="528.7" y="227.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="531.7" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.16%)</title><rect x="528.7" y="211.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="531.7" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (36 samples, 1.89%)</title><rect x="530.6" y="227.0" width="22.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="533.6" y="238.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (32 samples, 1.68%)</title><rect x="530.6" y="211.0" width="19.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="533.6" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (32 samples, 1.68%)</title><rect x="530.6" y="195.0" width="19.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.6" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (32 samples, 1.68%)</title><rect x="530.6" y="179.0" width="19.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="533.6" y="190.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.05%)</title><rect x="531.8" y="163.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="534.8" y="174.0"></text>
</g>
<g>
<title>__pread (27 samples, 1.42%)</title><rect x="532.4" y="163.0" width="16.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="535.4" y="174.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="549.2" y="163.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="552.2" y="174.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.05%)</title><rect x="549.8" y="163.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="552.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (4 samples, 0.21%)</title><rect x="550.4" y="211.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="553.4" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.16%)</title><rect x="550.4" y="195.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="553.4" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.11%)</title><rect x="550.4" y="179.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="553.4" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.11%)</title><rect x="550.4" y="163.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="553.4" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.05%)</title><rect x="551.7" y="179.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (1 samples, 0.05%)</title><rect x="552.3" y="195.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="555.3" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.11%)</title><rect x="552.9" y="227.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.05%)</title><rect x="554.1" y="227.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="557.1" y="238.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="554.1" y="211.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="557.1" y="222.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="554.1" y="195.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="557.1" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="554.1" y="179.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="557.1" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (104 samples, 5.46%)</title><rect x="554.8" y="275.0" width="64.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.8" y="286.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (1 samples, 0.05%)</title><rect x="554.8" y="259.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="557.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.05%)</title><rect x="554.8" y="243.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (103 samples, 5.41%)</title><rect x="555.4" y="259.0" width="63.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.4" y="270.0">sun/nio..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (2 samples, 0.11%)</title><rect x="556.6" y="243.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.11%)</title><rect x="557.9" y="243.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="560.9" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.05%)</title><rect x="558.5" y="227.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="561.5" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (89 samples, 4.67%)</title><rect x="559.1" y="243.0" width="55.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.1" y="254.0">sun/n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (8 samples, 0.42%)</title><rect x="559.7" y="227.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="562.7" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.42%)</title><rect x="559.7" y="211.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="562.7" y="222.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.reachabilityFence (1 samples, 0.05%)</title><rect x="562.2" y="195.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="565.2" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.05%)</title><rect x="562.8" y="195.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.8" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="562.8" y="179.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="565.8" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="562.8" y="163.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="565.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.11%)</title><rect x="563.4" y="195.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="566.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.11%)</title><rect x="563.4" y="179.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="566.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.05%)</title><rect x="564.1" y="163.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.05%)</title><rect x="564.1" y="147.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.1" y="158.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.05%)</title><rect x="564.1" y="131.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (70 samples, 3.68%)</title><rect x="564.7" y="227.0" width="43.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.7" y="238.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (70 samples, 3.68%)</title><rect x="564.7" y="211.0" width="43.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.7" y="222.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (70 samples, 3.68%)</title><rect x="564.7" y="195.0" width="43.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.7" y="206.0">sun/..</text>
</g>
<g>
<title>__pread (61 samples, 3.20%)</title><rect x="565.9" y="179.0" width="37.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="568.9" y="190.0">__p..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.21%)</title><rect x="603.7" y="179.0" width="2.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="606.7" y="190.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.16%)</title><rect x="606.2" y="179.0" width="1.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="609.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.42%)</title><rect x="608.1" y="227.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="611.1" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="608.7" y="211.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="611.7" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.05%)</title><rect x="608.7" y="195.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.7" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (6 samples, 0.32%)</title><rect x="609.3" y="211.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="612.3" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.capacity (1 samples, 0.05%)</title><rect x="612.4" y="195.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="615.4" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.11%)</title><rect x="613.0" y="227.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="616.0" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.11%)</title><rect x="613.0" y="211.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="616.0" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.11%)</title><rect x="613.0" y="195.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="616.0" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.05%)</title><rect x="613.6" y="179.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="616.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (7 samples, 0.37%)</title><rect x="614.3" y="243.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="617.3" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.16%)</title><rect x="616.7" y="227.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="619.7" y="238.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="617.4" y="211.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="620.4" y="222.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.05%)</title><rect x="617.4" y="195.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="620.4" y="206.0"></text>
</g>
<g>
<title>pthread_self@plt (1 samples, 0.05%)</title><rect x="618.0" y="211.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="621.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.05%)</title><rect x="618.6" y="243.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="621.6" y="254.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="618.6" y="227.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="621.6" y="238.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="618.6" y="211.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="621.6" y="222.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="618.6" y="195.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="621.6" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.05%)</title><rect x="618.6" y="179.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="621.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (8 samples, 0.42%)</title><rect x="619.2" y="403.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="622.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (8 samples, 0.42%)</title><rect x="619.2" y="387.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="622.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.42%)</title><rect x="619.2" y="371.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="622.2" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.05%)</title><rect x="619.2" y="355.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="622.2" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.05%)</title><rect x="619.2" y="339.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="622.2" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.05%)</title><rect x="619.2" y="323.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="622.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.05%)</title><rect x="619.2" y="307.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="622.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.05%)</title><rect x="619.2" y="291.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="622.2" y="302.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="619.2" y="275.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="622.2" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="619.2" y="259.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="619.2" y="243.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="622.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="619.2" y="227.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="622.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7 samples, 0.37%)</title><rect x="619.8" y="355.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="622.8" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7 samples, 0.37%)</title><rect x="619.8" y="339.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="622.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7 samples, 0.37%)</title><rect x="619.8" y="323.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="622.8" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7 samples, 0.37%)</title><rect x="619.8" y="307.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="622.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.37%)</title><rect x="619.8" y="291.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="622.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.37%)</title><rect x="619.8" y="275.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="622.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (7 samples, 0.37%)</title><rect x="619.8" y="259.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.37%)</title><rect x="619.8" y="243.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="622.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.37%)</title><rect x="619.8" y="227.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="622.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (7 samples, 0.37%)</title><rect x="619.8" y="211.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="622.8" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="619.8" y="195.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.8" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="619.8" y="179.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="619.8" y="163.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.8" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="619.8" y="147.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="622.8" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="619.8" y="131.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="622.8" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="619.8" y="115.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.8" y="126.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.05%)</title><rect x="619.8" y="99.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="622.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3 samples, 0.16%)</title><rect x="620.5" y="195.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="623.5" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.16%)</title><rect x="620.5" y="179.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="623.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.16%)</title><rect x="620.5" y="163.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.05%)</title><rect x="620.5" y="147.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="623.5" y="158.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.05%)</title><rect x="620.5" y="131.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.11%)</title><rect x="621.1" y="147.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="624.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.11%)</title><rect x="621.1" y="131.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="624.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.11%)</title><rect x="621.1" y="115.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="624.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.11%)</title><rect x="621.1" y="99.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.1" y="110.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.11%)</title><rect x="621.1" y="83.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="624.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.16%)</title><rect x="622.3" y="195.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.3" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.16%)</title><rect x="622.3" y="179.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.16%)</title><rect x="622.3" y="163.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.16%)</title><rect x="622.3" y="147.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.16%)</title><rect x="622.3" y="131.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="625.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.16%)</title><rect x="622.3" y="115.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="625.3" y="126.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.16%)</title><rect x="622.3" y="99.0" width="1.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="625.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (5 samples, 0.26%)</title><rect x="624.2" y="419.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (5 samples, 0.26%)</title><rect x="624.2" y="403.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="627.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (5 samples, 0.26%)</title><rect x="624.2" y="387.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="627.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (5 samples, 0.26%)</title><rect x="624.2" y="371.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="627.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (5 samples, 0.26%)</title><rect x="624.2" y="355.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="627.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (5 samples, 0.26%)</title><rect x="624.2" y="339.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (5 samples, 0.26%)</title><rect x="624.2" y="323.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="627.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.21%)</title><rect x="624.8" y="307.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="627.8" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.21%)</title><rect x="624.8" y="291.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="627.8" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.11%)</title><rect x="626.0" y="275.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="629.0" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="626.0" y="259.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.0" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="626.6" y="259.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="629.6" y="270.0"></text>
</g>
<g>
<title>[pool-3-thread-5 tid=53023] (233 samples, 12.24%)</title><rect x="627.3" y="563.0" width="144.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="630.3" y="574.0">[pool-3-thread-5 t..</text>
</g>
<g>
<title>java/lang/Thread.run (233 samples, 12.24%)</title><rect x="627.3" y="547.0" width="144.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="630.3" y="558.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (233 samples, 12.24%)</title><rect x="627.3" y="531.0" width="144.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="630.3" y="542.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (233 samples, 12.24%)</title><rect x="627.3" y="515.0" width="144.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="630.3" y="526.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.05%)</title><rect x="627.3" y="499.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="630.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.05%)</title><rect x="627.3" y="483.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="630.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.05%)</title><rect x="627.3" y="467.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="630.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="627.3" y="451.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.05%)</title><rect x="627.3" y="435.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="630.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="627.3" y="419.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="630.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="627.3" y="403.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="630.3" y="414.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="627.3" y="387.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="630.3" y="398.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="627.3" y="371.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="630.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.run (232 samples, 12.18%)</title><rect x="627.9" y="499.0" width="143.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.9" y="510.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (232 samples, 12.18%)</title><rect x="627.9" y="483.0" width="143.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.9" y="494.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.21%)</title><rect x="627.9" y="467.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="630.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.16%)</title><rect x="628.5" y="451.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="631.5" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.11%)</title><rect x="628.5" y="435.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="631.5" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.11%)</title><rect x="628.5" y="419.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="631.5" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.11%)</title><rect x="628.5" y="403.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.5" y="414.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.11%)</title><rect x="628.5" y="387.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.5" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.05%)</title><rect x="629.7" y="435.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="632.7" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.05%)</title><rect x="629.7" y="419.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="632.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.05%)</title><rect x="629.7" y="403.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="632.7" y="414.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.05%)</title><rect x="629.7" y="387.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.7" y="398.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.05%)</title><rect x="629.7" y="371.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="632.7" y="382.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="629.7" y="355.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="632.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (227 samples, 11.92%)</title><rect x="630.4" y="467.0" width="140.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.4" y="478.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (11 samples, 0.58%)</title><rect x="630.4" y="451.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (11 samples, 0.58%)</title><rect x="630.4" y="435.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (11 samples, 0.58%)</title><rect x="630.4" y="419.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="633.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (11 samples, 0.58%)</title><rect x="630.4" y="403.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (11 samples, 0.58%)</title><rect x="630.4" y="387.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="633.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.53%)</title><rect x="630.4" y="371.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="633.4" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (10 samples, 0.53%)</title><rect x="630.4" y="355.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="633.4" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (10 samples, 0.53%)</title><rect x="630.4" y="339.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="633.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (10 samples, 0.53%)</title><rect x="630.4" y="323.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (10 samples, 0.53%)</title><rect x="630.4" y="307.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.53%)</title><rect x="630.4" y="291.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.53%)</title><rect x="630.4" y="275.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="633.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (9 samples, 0.47%)</title><rect x="630.4" y="259.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.05%)</title><rect x="630.4" y="243.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.05%)</title><rect x="630.4" y="227.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.4" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="630.4" y="211.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (8 samples, 0.42%)</title><rect x="631.0" y="243.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="634.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (8 samples, 0.42%)</title><rect x="631.0" y="227.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="634.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (8 samples, 0.42%)</title><rect x="631.0" y="211.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="634.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.11%)</title><rect x="631.0" y="195.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="634.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.11%)</title><rect x="631.0" y="179.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="634.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.11%)</title><rect x="631.0" y="163.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.11%)</title><rect x="631.0" y="147.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="634.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.05%)</title><rect x="631.0" y="131.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="634.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.05%)</title><rect x="631.0" y="115.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="634.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.05%)</title><rect x="631.0" y="99.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="634.0" y="110.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.05%)</title><rect x="631.0" y="83.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="634.0" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="631.6" y="131.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="634.6" y="142.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="631.6" y="115.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="634.6" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.05%)</title><rect x="631.6" y="99.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="634.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.32%)</title><rect x="632.2" y="195.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.2" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.32%)</title><rect x="632.2" y="179.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.05%)</title><rect x="632.8" y="163.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="635.8" y="174.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.05%)</title><rect x="632.8" y="147.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="635.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.21%)</title><rect x="633.5" y="163.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="636.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.16%)</title><rect x="633.5" y="147.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="636.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.16%)</title><rect x="633.5" y="131.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="636.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.16%)</title><rect x="633.5" y="115.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="636.5" y="126.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.11%)</title><rect x="633.5" y="99.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="636.5" y="110.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.05%)</title><rect x="634.7" y="99.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="637.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="635.3" y="147.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="638.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.05%)</title><rect x="635.3" y="131.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="638.3" y="142.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="635.9" y="259.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="638.9" y="270.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="635.9" y="243.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="638.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="635.9" y="227.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="638.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="635.9" y="211.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="638.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.05%)</title><rect x="635.9" y="195.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="638.9" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="635.9" y="179.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.9" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="635.9" y="163.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.9" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="635.9" y="147.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="638.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$78/208007213.apply (1 samples, 0.05%)</title><rect x="636.6" y="371.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.05%)</title><rect x="636.6" y="355.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="639.6" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="636.6" y="339.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.6" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="636.6" y="323.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.6" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="636.6" y="307.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.6" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="636.6" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="639.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (216 samples, 11.34%)</title><rect x="637.2" y="451.0" width="133.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="640.2" y="462.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (216 samples, 11.34%)</title><rect x="637.2" y="435.0" width="133.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="640.2" y="446.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (1 samples, 0.05%)</title><rect x="637.2" y="419.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="640.2" y="430.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.05%)</title><rect x="637.2" y="403.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.2" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.05%)</title><rect x="637.2" y="387.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="640.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (212 samples, 11.13%)</title><rect x="637.8" y="419.0" width="131.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="640.8" y="430.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (18 samples, 0.95%)</title><rect x="637.8" y="403.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (18 samples, 0.95%)</title><rect x="637.8" y="387.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="640.8" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (18 samples, 0.95%)</title><rect x="637.8" y="371.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="640.8" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (18 samples, 0.95%)</title><rect x="637.8" y="355.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.8" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (18 samples, 0.95%)</title><rect x="637.8" y="339.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (18 samples, 0.95%)</title><rect x="637.8" y="323.0" width="11.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.89%)</title><rect x="638.4" y="307.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="641.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.89%)</title><rect x="638.4" y="291.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="641.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (16 samples, 0.84%)</title><rect x="638.4" y="275.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="641.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (16 samples, 0.84%)</title><rect x="638.4" y="259.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="641.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (16 samples, 0.84%)</title><rect x="638.4" y="243.0" width="9.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="641.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (16 samples, 0.84%)</title><rect x="638.4" y="227.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="641.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (7 samples, 0.37%)</title><rect x="638.4" y="211.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="641.4" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.37%)</title><rect x="638.4" y="195.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="641.4" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.37%)</title><rect x="638.4" y="179.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="641.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.32%)</title><rect x="639.0" y="163.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="642.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.26%)</title><rect x="639.0" y="147.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="642.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.26%)</title><rect x="639.0" y="131.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="642.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.26%)</title><rect x="639.0" y="115.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.0" y="126.0"></text>
</g>
<g>
<title>__pread (5 samples, 0.26%)</title><rect x="639.0" y="99.0" width="3.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="642.0" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="642.1" y="147.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.1" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="642.1" y="131.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.1" y="142.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.05%)</title><rect x="642.1" y="115.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="645.1" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.05%)</title><rect x="642.1" y="99.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="645.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (9 samples, 0.47%)</title><rect x="642.8" y="211.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (9 samples, 0.47%)</title><rect x="642.8" y="195.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.37%)</title><rect x="642.8" y="179.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.8" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.16%)</title><rect x="642.8" y="163.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="645.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.16%)</title><rect x="642.8" y="147.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="645.8" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.05%)</title><rect x="643.4" y="131.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="646.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.05%)</title><rect x="644.0" y="131.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.05%)</title><rect x="644.0" y="115.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="647.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.05%)</title><rect x="644.0" y="99.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="647.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.05%)</title><rect x="644.0" y="83.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="647.0" y="94.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.05%)</title><rect x="644.0" y="67.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="647.0" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.21%)</title><rect x="644.6" y="163.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="647.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.21%)</title><rect x="644.6" y="147.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="647.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.21%)</title><rect x="644.6" y="131.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="647.6" y="142.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.16%)</title><rect x="645.2" y="115.0" width="1.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="648.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.11%)</title><rect x="647.1" y="179.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="650.1" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.05%)</title><rect x="647.7" y="163.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="650.7" y="174.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="647.7" y="147.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="650.7" y="158.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.05%)</title><rect x="647.7" y="131.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="650.7" y="142.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="648.3" y="275.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="651.3" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="648.3" y="259.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="651.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="648.3" y="243.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="651.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="648.3" y="227.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="651.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.05%)</title><rect x="648.3" y="211.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="651.3" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.05%)</title><rect x="648.3" y="195.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="651.3" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (188 samples, 9.87%)</title><rect x="649.0" y="403.0" width="116.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="652.0" y="414.0">java/util/Coll..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (188 samples, 9.87%)</title><rect x="649.0" y="387.0" width="116.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="652.0" y="398.0">java/lang/Iter..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$72/1983780967.accept (188 samples, 9.87%)</title><rect x="649.0" y="371.0" width="116.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="652.0" y="382.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (188 samples, 9.87%)</title><rect x="649.0" y="355.0" width="116.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.0" y="366.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (188 samples, 9.87%)</title><rect x="649.0" y="339.0" width="116.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="652.0" y="350.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (187 samples, 9.82%)</title><rect x="649.6" y="323.0" width="115.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="652.6" y="334.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (187 samples, 9.82%)</title><rect x="649.6" y="307.0" width="115.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="652.6" y="318.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.11%)</title><rect x="649.6" y="291.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="652.6" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="650.2" y="275.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="653.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (185 samples, 9.72%)</title><rect x="650.8" y="291.0" width="114.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="653.8" y="302.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.74%)</title><rect x="650.8" y="275.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="653.8" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.68%)</title><rect x="651.4" y="259.0" width="8.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.4" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.63%)</title><rect x="652.1" y="243.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.1" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.42%)</title><rect x="653.9" y="227.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="656.9" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.11%)</title><rect x="655.8" y="211.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="658.8" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="656.4" y="195.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.4" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.05%)</title><rect x="656.4" y="179.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="659.4" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.16%)</title><rect x="657.0" y="211.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="660.0" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="658.3" y="195.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="661.3" y="206.0"></text>
</g>
<g>
<title>unsafe_arraycopy (1 samples, 0.05%)</title><rect x="658.9" y="227.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="661.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (63 samples, 3.31%)</title><rect x="659.5" y="275.0" width="39.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="662.5" y="286.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.05%)</title><rect x="659.5" y="259.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.5" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="659.5" y="243.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="662.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="659.5" y="227.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="662.5" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.32%)</title><rect x="660.1" y="259.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="663.1" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="660.1" y="243.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="663.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.26%)</title><rect x="660.7" y="243.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="663.7" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.26%)</title><rect x="660.7" y="227.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="663.7" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="663.2" y="211.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="666.2" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="663.2" y="195.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="666.2" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="663.2" y="179.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="666.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (56 samples, 2.94%)</title><rect x="663.8" y="259.0" width="34.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="666.8" y="270.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (56 samples, 2.94%)</title><rect x="663.8" y="243.0" width="34.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.8" y="254.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.16%)</title><rect x="663.8" y="227.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.8" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.16%)</title><rect x="663.8" y="211.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="666.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (49 samples, 2.57%)</title><rect x="665.7" y="227.0" width="30.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="668.7" y="238.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.05%)</title><rect x="665.7" y="211.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="668.7" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.05%)</title><rect x="665.7" y="195.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="668.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.05%)</title><rect x="665.7" y="179.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="668.7" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.05%)</title><rect x="665.7" y="163.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.7" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (1 samples, 0.05%)</title><rect x="665.7" y="147.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="668.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (45 samples, 2.36%)</title><rect x="666.3" y="211.0" width="27.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.3" y="222.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (45 samples, 2.36%)</title><rect x="666.3" y="195.0" width="27.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="669.3" y="206.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (45 samples, 2.36%)</title><rect x="666.3" y="179.0" width="27.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="669.3" y="190.0">s..</text>
</g>
<g>
<title>__pread (42 samples, 2.21%)</title><rect x="667.6" y="163.0" width="26.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="670.6" y="174.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="693.6" y="163.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="696.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.16%)</title><rect x="694.2" y="211.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="697.2" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.11%)</title><rect x="694.2" y="195.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="697.2" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.11%)</title><rect x="694.2" y="179.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="697.2" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.11%)</title><rect x="694.2" y="163.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="697.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (1 samples, 0.05%)</title><rect x="695.4" y="195.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="698.4" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.16%)</title><rect x="696.1" y="227.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="699.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.11%)</title><rect x="696.7" y="211.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="699.7" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.05%)</title><rect x="697.9" y="227.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.9" y="238.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="697.9" y="211.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="700.9" y="222.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.05%)</title><rect x="697.9" y="195.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="700.9" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (108 samples, 5.67%)</title><rect x="698.5" y="275.0" width="67.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="701.5" y="286.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (108 samples, 5.67%)</title><rect x="698.5" y="259.0" width="67.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="701.5" y="270.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.11%)</title><rect x="698.5" y="243.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.5" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.11%)</title><rect x="698.5" y="227.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="701.5" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.11%)</title><rect x="698.5" y="211.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.5" y="222.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.11%)</title><rect x="698.5" y="195.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.5" y="206.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.11%)</title><rect x="698.5" y="179.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="701.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (91 samples, 4.78%)</title><rect x="699.8" y="243.0" width="56.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="702.8" y="254.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (14 samples, 0.74%)</title><rect x="700.4" y="227.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="703.4" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="701.0" y="211.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="704.0" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="701.0" y="195.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="704.0" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (12 samples, 0.63%)</title><rect x="701.6" y="211.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="704.6" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.05%)</title><rect x="702.9" y="195.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="705.9" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.05%)</title><rect x="702.9" y="179.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.9" y="190.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.21%)</title><rect x="703.5" y="195.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="706.5" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.21%)</title><rect x="703.5" y="179.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="706.5" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.21%)</title><rect x="703.5" y="163.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="706.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (5 samples, 0.26%)</title><rect x="706.0" y="195.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (5 samples, 0.26%)</title><rect x="706.0" y="179.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (5 samples, 0.26%)</title><rect x="706.0" y="163.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (2 samples, 0.11%)</title><rect x="706.6" y="147.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (2 samples, 0.11%)</title><rect x="706.6" y="131.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="709.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (2 samples, 0.11%)</title><rect x="707.8" y="147.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="710.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkOffset (1 samples, 0.05%)</title><rect x="708.5" y="131.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="711.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (64 samples, 3.36%)</title><rect x="709.1" y="227.0" width="39.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.1" y="238.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (64 samples, 3.36%)</title><rect x="709.1" y="211.0" width="39.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="712.1" y="222.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (64 samples, 3.36%)</title><rect x="709.1" y="195.0" width="39.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="712.1" y="206.0">sun..</text>
</g>
<g>
<title>__pread (55 samples, 2.89%)</title><rect x="712.2" y="179.0" width="34.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="715.2" y="190.0">__..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="746.3" y="179.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="749.3" y="190.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.11%)</title><rect x="746.9" y="179.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="749.9" y="190.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.05%)</title><rect x="748.1" y="179.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="751.1" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (9 samples, 0.47%)</title><rect x="748.7" y="227.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="751.7" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.21%)</title><rect x="748.7" y="211.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="751.7" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.16%)</title><rect x="748.7" y="195.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="751.7" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (3 samples, 0.16%)</title><rect x="748.7" y="179.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.7" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.05%)</title><rect x="750.6" y="195.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.6" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (5 samples, 0.26%)</title><rect x="751.2" y="211.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="754.2" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.16%)</title><rect x="754.3" y="227.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="757.3" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="755.6" y="211.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="758.6" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.05%)</title><rect x="755.6" y="195.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="758.6" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (15 samples, 0.79%)</title><rect x="756.2" y="243.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="759.2" y="254.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="760.5" y="227.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="763.5" y="238.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="760.5" y="211.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="763.5" y="222.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="760.5" y="195.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="763.5" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (7 samples, 0.37%)</title><rect x="761.1" y="227.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.1" y="238.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.05%)</title><rect x="764.2" y="211.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="767.2" y="222.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="764.9" y="211.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="767.9" y="222.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.05%)</title><rect x="764.9" y="195.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="767.9" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (1 samples, 0.05%)</title><rect x="765.5" y="403.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="768.5" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.descendingMap (1 samples, 0.05%)</title><rect x="765.5" y="387.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.5" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="765.5" y="371.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="768.5" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="765.5" y="355.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="768.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="765.5" y="339.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.26%)</title><rect x="766.1" y="403.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="769.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.26%)</title><rect x="766.1" y="387.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="769.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.26%)</title><rect x="766.1" y="371.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.1" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.26%)</title><rect x="766.1" y="355.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="769.1" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.26%)</title><rect x="766.1" y="339.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="769.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.26%)</title><rect x="766.1" y="323.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="769.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.26%)</title><rect x="766.1" y="307.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.26%)</title><rect x="766.1" y="291.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.26%)</title><rect x="766.1" y="275.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5 samples, 0.26%)</title><rect x="766.1" y="259.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.26%)</title><rect x="766.1" y="243.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="769.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.26%)</title><rect x="766.1" y="227.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="769.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (5 samples, 0.26%)</title><rect x="766.1" y="211.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="769.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3 samples, 0.16%)</title><rect x="766.1" y="195.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="769.1" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.16%)</title><rect x="766.1" y="179.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="769.1" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.16%)</title><rect x="766.1" y="163.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="769.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.16%)</title><rect x="766.1" y="147.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="769.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.16%)</title><rect x="766.1" y="131.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="769.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.16%)</title><rect x="766.1" y="115.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.16%)</title><rect x="766.1" y="99.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.1" y="110.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.16%)</title><rect x="766.1" y="83.0" width="1.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="769.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.11%)</title><rect x="768.0" y="195.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="771.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.11%)</title><rect x="768.0" y="179.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.11%)</title><rect x="768.0" y="163.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="771.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.11%)</title><rect x="768.0" y="147.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="771.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.11%)</title><rect x="768.0" y="131.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="771.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.11%)</title><rect x="768.0" y="115.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.0" y="126.0"></text>
</g>
<g>
<title>__pread (1 samples, 0.05%)</title><rect x="768.6" y="99.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="771.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (3 samples, 0.16%)</title><rect x="769.2" y="419.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="772.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (3 samples, 0.16%)</title><rect x="769.2" y="403.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (3 samples, 0.16%)</title><rect x="769.2" y="387.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="772.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (3 samples, 0.16%)</title><rect x="769.2" y="371.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="772.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (3 samples, 0.16%)</title><rect x="769.2" y="355.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="772.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (3 samples, 0.16%)</title><rect x="769.2" y="339.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="772.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.16%)</title><rect x="769.2" y="323.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="772.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.11%)</title><rect x="769.8" y="307.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="772.8" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.11%)</title><rect x="769.8" y="291.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="772.8" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.11%)</title><rect x="769.8" y="275.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="772.8" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="769.8" y="259.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="772.8" y="270.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.05%)</title><rect x="769.8" y="243.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="772.8" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="770.4" y="259.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.4" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.05%)</title><rect x="770.4" y="243.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="773.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.toByteArray (1 samples, 0.05%)</title><rect x="771.1" y="467.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="774.1" y="478.0"></text>
</g>
<g>
<title>[pool-3-thread-6 tid=53024] (207 samples, 10.87%)</title><rect x="771.7" y="563.0" width="128.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="774.7" y="574.0">[pool-3-thread-6..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="771.7" y="547.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="774.7" y="558.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="771.7" y="531.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="774.7" y="542.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.05%)</title><rect x="771.7" y="515.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="774.7" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="771.7" y="499.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="774.7" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (206 samples, 10.82%)</title><rect x="772.3" y="547.0" width="127.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="775.3" y="558.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (206 samples, 10.82%)</title><rect x="772.3" y="531.0" width="127.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="775.3" y="542.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (206 samples, 10.82%)</title><rect x="772.3" y="515.0" width="127.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="775.3" y="526.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.05%)</title><rect x="772.3" y="499.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="775.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.run (205 samples, 10.77%)</title><rect x="772.9" y="499.0" width="127.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="775.9" y="510.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (205 samples, 10.77%)</title><rect x="772.9" y="483.0" width="127.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="775.9" y="494.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.21%)</title><rect x="772.9" y="467.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="775.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.05%)</title><rect x="773.5" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="773.5" y="435.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="776.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="773.5" y="419.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="776.5" y="430.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="773.5" y="403.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="776.5" y="414.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="773.5" y="387.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="776.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.11%)</title><rect x="774.1" y="451.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="777.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.05%)</title><rect x="774.1" y="435.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="777.1" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.05%)</title><rect x="774.1" y="419.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="777.1" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.05%)</title><rect x="774.1" y="403.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="777.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="774.1" y="387.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="777.1" y="398.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="774.1" y="371.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="777.1" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.05%)</title><rect x="774.8" y="435.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="777.8" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.05%)</title><rect x="774.8" y="419.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="777.8" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.05%)</title><rect x="774.8" y="403.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.8" y="414.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.05%)</title><rect x="774.8" y="387.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="777.8" y="398.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.05%)</title><rect x="774.8" y="371.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="777.8" y="382.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.05%)</title><rect x="774.8" y="355.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="777.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (201 samples, 10.56%)</title><rect x="775.4" y="467.0" width="124.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="778.4" y="478.0">ru/mail/polis/d..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (13 samples, 0.68%)</title><rect x="775.4" y="451.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="778.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (13 samples, 0.68%)</title><rect x="775.4" y="435.0" width="8.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="778.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (13 samples, 0.68%)</title><rect x="775.4" y="419.0" width="8.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="778.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (13 samples, 0.68%)</title><rect x="775.4" y="403.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="778.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (13 samples, 0.68%)</title><rect x="775.4" y="387.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.68%)</title><rect x="775.4" y="371.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.4" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.11%)</title><rect x="775.4" y="355.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.4" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.11%)</title><rect x="775.4" y="339.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="778.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2 samples, 0.11%)</title><rect x="775.4" y="323.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.11%)</title><rect x="775.4" y="307.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="778.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.11%)</title><rect x="775.4" y="291.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.4" y="302.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="776.0" y="275.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="779.0" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="776.0" y="259.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="776.0" y="243.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="779.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="776.0" y="227.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.0" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="776.0" y="211.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.0" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="776.0" y="195.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.0" y="206.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="776.0" y="179.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="779.0" y="190.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (11 samples, 0.58%)</title><rect x="776.6" y="355.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="779.6" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (11 samples, 0.58%)</title><rect x="776.6" y="339.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="779.6" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (11 samples, 0.58%)</title><rect x="776.6" y="323.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="779.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (11 samples, 0.58%)</title><rect x="776.6" y="307.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="779.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.58%)</title><rect x="776.6" y="291.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="779.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.58%)</title><rect x="776.6" y="275.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="779.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (11 samples, 0.58%)</title><rect x="776.6" y="259.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.58%)</title><rect x="776.6" y="243.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.58%)</title><rect x="776.6" y="227.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="779.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (11 samples, 0.58%)</title><rect x="776.6" y="211.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="779.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (1 samples, 0.05%)</title><rect x="776.6" y="195.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="779.6" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="776.6" y="179.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="779.6" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="776.6" y="163.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.6" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="776.6" y="147.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="779.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (10 samples, 0.53%)</title><rect x="777.2" y="195.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="780.2" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (10 samples, 0.53%)</title><rect x="777.2" y="179.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.37%)</title><rect x="777.2" y="163.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="780.2" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.05%)</title><rect x="777.2" y="147.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.2" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.05%)</title><rect x="777.2" y="131.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="780.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.26%)</title><rect x="777.9" y="147.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.26%)</title><rect x="777.9" y="131.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.26%)</title><rect x="777.9" y="115.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="780.9" y="126.0"></text>
</g>
<g>
<title>__pread (5 samples, 0.26%)</title><rect x="777.9" y="99.0" width="3.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="780.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="781.0" y="147.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="784.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.05%)</title><rect x="781.0" y="131.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="784.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.16%)</title><rect x="781.6" y="163.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="784.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (1 samples, 0.05%)</title><rect x="783.4" y="451.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="786.4" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.05%)</title><rect x="783.4" y="435.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="786.4" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.05%)</title><rect x="783.4" y="419.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="786.4" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.05%)</title><rect x="783.4" y="403.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="786.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="783.4" y="387.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="786.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="783.4" y="371.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="786.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (187 samples, 9.82%)</title><rect x="784.1" y="451.0" width="115.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="787.1" y="462.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (187 samples, 9.82%)</title><rect x="784.1" y="435.0" width="115.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="787.1" y="446.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (186 samples, 9.77%)</title><rect x="784.1" y="419.0" width="115.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="787.1" y="430.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (15 samples, 0.79%)</title><rect x="784.1" y="403.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="787.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (14 samples, 0.74%)</title><rect x="784.1" y="387.0" width="8.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="787.1" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (14 samples, 0.74%)</title><rect x="784.1" y="371.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="787.1" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (14 samples, 0.74%)</title><rect x="784.1" y="355.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="787.1" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (14 samples, 0.74%)</title><rect x="784.1" y="339.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="787.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (14 samples, 0.74%)</title><rect x="784.1" y="323.0" width="8.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="787.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.74%)</title><rect x="784.1" y="307.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="787.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.74%)</title><rect x="784.1" y="291.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="787.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (12 samples, 0.63%)</title><rect x="784.1" y="275.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="787.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.05%)</title><rect x="784.1" y="259.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="787.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.58%)</title><rect x="784.7" y="259.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="787.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.58%)</title><rect x="784.7" y="243.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="787.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (11 samples, 0.58%)</title><rect x="784.7" y="227.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="787.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3 samples, 0.16%)</title><rect x="785.3" y="211.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="788.3" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="785.3" y="195.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="788.3" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="785.3" y="179.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="788.3" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="785.3" y="163.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="788.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.11%)</title><rect x="785.9" y="195.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.9" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.11%)</title><rect x="785.9" y="179.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="788.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.11%)</title><rect x="785.9" y="163.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="788.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.11%)</title><rect x="785.9" y="147.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="788.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.11%)</title><rect x="785.9" y="131.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="788.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.11%)</title><rect x="785.9" y="115.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="788.9" y="126.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.11%)</title><rect x="785.9" y="99.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="788.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.37%)</title><rect x="787.2" y="211.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="790.2" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.37%)</title><rect x="787.2" y="195.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="790.2" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.37%)</title><rect x="787.2" y="179.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="790.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.37%)</title><rect x="787.2" y="163.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="790.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.32%)</title><rect x="787.8" y="147.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="790.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.32%)</title><rect x="787.8" y="131.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="790.8" y="142.0"></text>
</g>
<g>
<title>__pread (5 samples, 0.26%)</title><rect x="787.8" y="115.0" width="3.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="790.8" y="126.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="790.9" y="115.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="793.9" y="126.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.11%)</title><rect x="791.5" y="275.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.5" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.11%)</title><rect x="791.5" y="259.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="794.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.11%)</title><rect x="791.5" y="243.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.11%)</title><rect x="791.5" y="227.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="794.5" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="791.5" y="211.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="794.5" y="222.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="791.5" y="195.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="794.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.05%)</title><rect x="792.1" y="211.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="795.1" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="792.1" y="195.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.1" y="206.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="792.1" y="179.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="795.1" y="190.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="792.1" y="163.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="795.1" y="174.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="792.1" y="147.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="795.1" y="158.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="792.1" y="131.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="795.1" y="142.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1 samples, 0.05%)</title><rect x="792.7" y="387.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.05%)</title><rect x="792.7" y="371.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="795.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.05%)</title><rect x="792.7" y="355.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.7" y="366.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="792.7" y="339.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="795.7" y="350.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="792.7" y="323.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="795.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="792.7" y="307.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="795.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="792.7" y="291.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="795.7" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="792.7" y="275.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="795.7" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.05%)</title><rect x="792.7" y="259.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="795.7" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (169 samples, 8.88%)</title><rect x="793.4" y="403.0" width="104.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="796.4" y="414.0">java/util/Co..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (169 samples, 8.88%)</title><rect x="793.4" y="387.0" width="104.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="796.4" y="398.0">java/lang/It..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$72/1983780967.accept (169 samples, 8.88%)</title><rect x="793.4" y="371.0" width="104.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.4" y="382.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (169 samples, 8.88%)</title><rect x="793.4" y="355.0" width="104.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="796.4" y="366.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (169 samples, 8.88%)</title><rect x="793.4" y="339.0" width="104.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="796.4" y="350.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (169 samples, 8.88%)</title><rect x="793.4" y="323.0" width="104.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.4" y="334.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (169 samples, 8.88%)</title><rect x="793.4" y="307.0" width="104.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="796.4" y="318.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.21%)</title><rect x="793.4" y="291.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="796.4" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="793.4" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.4" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.16%)</title><rect x="794.0" y="275.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="797.0" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="795.2" y="259.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="798.2" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.05%)</title><rect x="795.2" y="243.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="798.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (165 samples, 8.67%)</title><rect x="795.8" y="291.0" width="102.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="798.8" y="302.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.32%)</title><rect x="795.8" y="275.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="798.8" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.26%)</title><rect x="796.5" y="259.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="799.5" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.21%)</title><rect x="797.1" y="243.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="800.1" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.16%)</title><rect x="797.7" y="227.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="800.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (51 samples, 2.68%)</title><rect x="799.6" y="275.0" width="31.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="802.6" y="286.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.16%)</title><rect x="799.6" y="259.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="802.6" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="800.8" y="243.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="803.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="800.8" y="227.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="803.8" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.32%)</title><rect x="801.4" y="259.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="804.4" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.32%)</title><rect x="801.4" y="243.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.4" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.26%)</title><rect x="802.0" y="227.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.0" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="804.5" y="211.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.5" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="804.5" y="195.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.5" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="804.5" y="179.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="807.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (42 samples, 2.21%)</title><rect x="805.1" y="259.0" width="26.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.1" y="270.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (42 samples, 2.21%)</title><rect x="805.1" y="243.0" width="26.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.1" y="254.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.05%)</title><rect x="805.8" y="227.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="808.8" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.05%)</title><rect x="805.8" y="211.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="808.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (38 samples, 2.00%)</title><rect x="806.4" y="227.0" width="23.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.4" y="238.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (34 samples, 1.79%)</title><rect x="806.4" y="211.0" width="21.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.4" y="222.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (34 samples, 1.79%)</title><rect x="806.4" y="195.0" width="21.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="809.4" y="206.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (34 samples, 1.79%)</title><rect x="806.4" y="179.0" width="21.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="809.4" y="190.0">s..</text>
</g>
<g>
<title>__pread (30 samples, 1.58%)</title><rect x="807.0" y="163.0" width="18.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="810.0" y="174.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="825.6" y="163.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="828.6" y="174.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.11%)</title><rect x="826.2" y="163.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="829.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="827.4" y="211.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.4" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="827.4" y="195.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="830.4" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.16%)</title><rect x="828.1" y="211.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="831.1" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="828.1" y="195.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="831.1" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.05%)</title><rect x="828.1" y="179.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="831.1" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.05%)</title><rect x="828.1" y="163.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (2 samples, 0.11%)</title><rect x="828.7" y="195.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="831.7" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.05%)</title><rect x="829.9" y="227.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="832.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.05%)</title><rect x="830.5" y="227.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="833.5" y="238.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="830.5" y="211.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="833.5" y="222.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="830.5" y="195.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="833.5" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="830.5" y="179.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="833.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (108 samples, 5.67%)</title><rect x="831.2" y="275.0" width="66.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="834.2" y="286.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (1 samples, 0.05%)</title><rect x="831.2" y="259.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="834.2" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (107 samples, 5.62%)</title><rect x="831.8" y="259.0" width="66.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.8" y="270.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.16%)</title><rect x="831.8" y="243.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.8" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.16%)</title><rect x="831.8" y="227.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.8" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.11%)</title><rect x="832.4" y="211.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="835.4" y="222.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.11%)</title><rect x="832.4" y="195.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="835.4" y="206.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.11%)</title><rect x="832.4" y="179.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.05%)</title><rect x="833.0" y="163.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="836.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (91 samples, 4.78%)</title><rect x="833.6" y="243.0" width="56.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="836.6" y="254.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (11 samples, 0.58%)</title><rect x="833.6" y="227.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="836.6" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (11 samples, 0.58%)</title><rect x="833.6" y="211.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="836.6" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.05%)</title><rect x="834.3" y="195.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="837.3" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.05%)</title><rect x="834.9" y="195.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="834.9" y="179.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="837.9" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="834.9" y="163.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="837.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (8 samples, 0.42%)</title><rect x="835.5" y="195.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="838.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (8 samples, 0.42%)</title><rect x="835.5" y="179.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="838.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (4 samples, 0.21%)</title><rect x="836.7" y="163.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="839.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (3 samples, 0.16%)</title><rect x="836.7" y="147.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (2 samples, 0.11%)</title><rect x="837.4" y="131.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="840.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.05%)</title><rect x="838.6" y="147.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="841.6" y="158.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.05%)</title><rect x="838.6" y="131.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="841.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (2 samples, 0.11%)</title><rect x="839.2" y="163.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="842.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (70 samples, 3.68%)</title><rect x="840.5" y="227.0" width="43.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="843.5" y="238.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (70 samples, 3.68%)</title><rect x="840.5" y="211.0" width="43.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="843.5" y="222.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (70 samples, 3.68%)</title><rect x="840.5" y="195.0" width="43.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="843.5" y="206.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.11%)</title><rect x="842.3" y="179.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="845.3" y="190.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.05%)</title><rect x="842.9" y="163.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="845.9" y="174.0"></text>
</g>
<g>
<title>__pread (60 samples, 3.15%)</title><rect x="843.6" y="179.0" width="37.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="846.6" y="190.0">__p..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.16%)</title><rect x="880.7" y="179.0" width="1.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="883.7" y="190.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.11%)</title><rect x="882.6" y="179.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="885.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.42%)</title><rect x="883.8" y="227.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="886.8" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.16%)</title><rect x="884.5" y="211.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="887.5" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.16%)</title><rect x="884.5" y="195.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="887.5" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (3 samples, 0.16%)</title><rect x="884.5" y="179.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="887.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.21%)</title><rect x="886.3" y="211.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="889.3" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.05%)</title><rect x="888.2" y="195.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="891.2" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.11%)</title><rect x="888.8" y="227.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="891.8" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.11%)</title><rect x="888.8" y="211.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="891.8" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.05%)</title><rect x="889.4" y="195.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="892.4" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (13 samples, 0.68%)</title><rect x="890.0" y="243.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="893.0" y="254.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="895.0" y="227.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="898.0" y="238.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.05%)</title><rect x="895.0" y="211.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="898.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.21%)</title><rect x="895.6" y="227.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.11%)</title><rect x="898.1" y="403.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="901.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.11%)</title><rect x="898.1" y="387.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="901.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.11%)</title><rect x="898.1" y="371.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.1" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2 samples, 0.11%)</title><rect x="898.1" y="355.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="901.1" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2 samples, 0.11%)</title><rect x="898.1" y="339.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="901.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2 samples, 0.11%)</title><rect x="898.1" y="323.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="901.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2 samples, 0.11%)</title><rect x="898.1" y="307.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="901.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.11%)</title><rect x="898.1" y="291.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="901.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.11%)</title><rect x="898.1" y="275.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="901.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2 samples, 0.11%)</title><rect x="898.1" y="259.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (2 samples, 0.11%)</title><rect x="898.1" y="243.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (2 samples, 0.11%)</title><rect x="898.1" y="227.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="901.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (2 samples, 0.11%)</title><rect x="898.1" y="211.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="901.1" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.11%)</title><rect x="898.1" y="195.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.1" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.11%)</title><rect x="898.1" y="179.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="901.1" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.05%)</title><rect x="898.7" y="163.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="901.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.05%)</title><rect x="898.7" y="147.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="901.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.05%)</title><rect x="898.7" y="131.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="901.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.05%)</title><rect x="898.7" y="115.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.7" y="126.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="898.7" y="99.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="901.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (1 samples, 0.05%)</title><rect x="899.3" y="419.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (1 samples, 0.05%)</title><rect x="899.3" y="403.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="902.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="899.3" y="387.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="902.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.05%)</title><rect x="899.3" y="371.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="902.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (1 samples, 0.05%)</title><rect x="899.3" y="355.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="902.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (1 samples, 0.05%)</title><rect x="899.3" y="339.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="902.3" y="350.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="899.3" y="323.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="902.3" y="334.0"></text>
</g>
<g>
<title>[pool-3-thread-7 tid=53026] (232 samples, 12.18%)</title><rect x="900.0" y="563.0" width="143.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="903.0" y="574.0">[pool-3-thread-7 t..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="900.0" y="547.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="903.0" y="558.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="900.0" y="531.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="903.0" y="542.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.05%)</title><rect x="900.0" y="515.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="903.0" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="900.0" y="499.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="903.0" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (231 samples, 12.13%)</title><rect x="900.6" y="547.0" width="143.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="903.6" y="558.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (231 samples, 12.13%)</title><rect x="900.6" y="531.0" width="143.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="903.6" y="542.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (231 samples, 12.13%)</title><rect x="900.6" y="515.0" width="143.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="903.6" y="526.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 0.26%)</title><rect x="900.6" y="499.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="903.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (4 samples, 0.21%)</title><rect x="901.2" y="483.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="904.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.11%)</title><rect x="901.2" y="467.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="904.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.05%)</title><rect x="901.2" y="451.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="904.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="901.2" y="435.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="904.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.05%)</title><rect x="901.2" y="419.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="904.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="901.2" y="403.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="901.2" y="387.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="904.2" y="398.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="901.2" y="371.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="904.2" y="382.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.05%)</title><rect x="901.2" y="355.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="904.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.05%)</title><rect x="901.8" y="451.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="904.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="901.8" y="435.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="904.8" y="446.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.05%)</title><rect x="901.8" y="419.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="904.8" y="430.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.05%)</title><rect x="901.8" y="403.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="904.8" y="414.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.05%)</title><rect x="901.8" y="387.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="904.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.11%)</title><rect x="902.4" y="467.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.11%)</title><rect x="902.4" y="451.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="905.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.11%)</title><rect x="902.4" y="435.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="905.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.11%)</title><rect x="902.4" y="419.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.11%)</title><rect x="902.4" y="403.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="905.4" y="414.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="902.4" y="387.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="905.4" y="398.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="903.1" y="387.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="906.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.run (226 samples, 11.87%)</title><rect x="903.7" y="499.0" width="140.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.7" y="510.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (226 samples, 11.87%)</title><rect x="903.7" y="483.0" width="140.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="906.7" y="494.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.26%)</title><rect x="903.7" y="467.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="906.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.26%)</title><rect x="903.7" y="451.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="906.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.05%)</title><rect x="903.7" y="435.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="906.7" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.21%)</title><rect x="904.3" y="435.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="907.3" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.21%)</title><rect x="904.3" y="419.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="907.3" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.21%)</title><rect x="904.3" y="403.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.3" y="414.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.21%)</title><rect x="904.3" y="387.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="907.3" y="398.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.11%)</title><rect x="904.9" y="371.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="907.9" y="382.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.05%)</title><rect x="904.9" y="355.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="907.9" y="366.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.05%)</title><rect x="905.5" y="355.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="908.5" y="366.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.05%)</title><rect x="905.5" y="339.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="908.5" y="350.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.05%)</title><rect x="906.2" y="371.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="909.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (221 samples, 11.61%)</title><rect x="906.8" y="467.0" width="136.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="909.8" y="478.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (11 samples, 0.58%)</title><rect x="906.8" y="451.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="909.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (11 samples, 0.58%)</title><rect x="906.8" y="435.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="909.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (11 samples, 0.58%)</title><rect x="906.8" y="419.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (11 samples, 0.58%)</title><rect x="906.8" y="403.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="909.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (11 samples, 0.58%)</title><rect x="906.8" y="387.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="909.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.58%)</title><rect x="906.8" y="371.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="909.8" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (10 samples, 0.53%)</title><rect x="906.8" y="355.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="909.8" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (10 samples, 0.53%)</title><rect x="906.8" y="339.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="909.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (10 samples, 0.53%)</title><rect x="906.8" y="323.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="909.8" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (10 samples, 0.53%)</title><rect x="906.8" y="307.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="909.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.53%)</title><rect x="906.8" y="291.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="909.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.53%)</title><rect x="906.8" y="275.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="909.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (9 samples, 0.47%)</title><rect x="906.8" y="259.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (9 samples, 0.47%)</title><rect x="906.8" y="243.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="909.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (9 samples, 0.47%)</title><rect x="906.8" y="227.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="909.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (9 samples, 0.47%)</title><rect x="906.8" y="211.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="909.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (5 samples, 0.26%)</title><rect x="906.8" y="195.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="909.8" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.05%)</title><rect x="906.8" y="179.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="909.8" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="906.8" y="163.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="909.8" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="906.8" y="147.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="909.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.21%)</title><rect x="907.4" y="179.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="910.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.21%)</title><rect x="907.4" y="163.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="910.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.16%)</title><rect x="908.0" y="147.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="911.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.16%)</title><rect x="908.0" y="131.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="911.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.16%)</title><rect x="908.0" y="115.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="911.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.16%)</title><rect x="908.0" y="99.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="911.0" y="110.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.16%)</title><rect x="908.0" y="83.0" width="1.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="911.0" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.21%)</title><rect x="909.9" y="195.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="912.9" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.21%)</title><rect x="909.9" y="179.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="912.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.21%)</title><rect x="909.9" y="163.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="912.9" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.05%)</title><rect x="909.9" y="147.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="912.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.05%)</title><rect x="909.9" y="131.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="912.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.05%)</title><rect x="909.9" y="115.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="912.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.05%)</title><rect x="909.9" y="99.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="912.9" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (1 samples, 0.05%)</title><rect x="909.9" y="83.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="912.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.16%)</title><rect x="910.5" y="147.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="913.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.16%)</title><rect x="910.5" y="131.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="913.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.16%)</title><rect x="910.5" y="115.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="913.5" y="126.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.16%)</title><rect x="910.5" y="99.0" width="1.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="913.5" y="110.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="912.4" y="259.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.4" y="270.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="912.4" y="243.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="912.4" y="227.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="912.4" y="211.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="915.4" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="912.4" y="195.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.4" y="206.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="912.4" y="179.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="915.4" y="190.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.05%)</title><rect x="912.4" y="163.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="915.4" y="174.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.05%)</title><rect x="913.0" y="355.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="916.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.05%)</title><rect x="913.6" y="451.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="916.6" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (1 samples, 0.05%)</title><rect x="913.6" y="435.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="916.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$91/885273156.apply (1 samples, 0.05%)</title><rect x="913.6" y="419.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="916.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (1 samples, 0.05%)</title><rect x="913.6" y="403.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="916.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (1 samples, 0.05%)</title><rect x="913.6" y="387.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="916.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (1 samples, 0.05%)</title><rect x="914.2" y="451.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="917.2" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.05%)</title><rect x="914.2" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="917.2" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.05%)</title><rect x="914.2" y="419.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="917.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="914.2" y="403.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="917.2" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="914.2" y="387.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.2" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="914.2" y="371.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="917.2" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="914.2" y="355.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="917.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (208 samples, 10.92%)</title><rect x="914.8" y="451.0" width="128.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="917.8" y="462.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (208 samples, 10.92%)</title><rect x="914.8" y="435.0" width="128.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="917.8" y="446.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (206 samples, 10.82%)</title><rect x="914.8" y="419.0" width="127.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="917.8" y="430.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (20 samples, 1.05%)</title><rect x="914.8" y="403.0" width="12.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="917.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (20 samples, 1.05%)</title><rect x="914.8" y="387.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="917.8" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (20 samples, 1.05%)</title><rect x="914.8" y="371.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="917.8" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (20 samples, 1.05%)</title><rect x="914.8" y="355.0" width="12.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="917.8" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (1 samples, 0.05%)</title><rect x="914.8" y="339.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="917.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (19 samples, 1.00%)</title><rect x="915.5" y="339.0" width="11.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="918.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (19 samples, 1.00%)</title><rect x="915.5" y="323.0" width="11.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (19 samples, 1.00%)</title><rect x="915.5" y="307.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (19 samples, 1.00%)</title><rect x="915.5" y="291.0" width="11.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="918.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (19 samples, 1.00%)</title><rect x="915.5" y="275.0" width="11.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="918.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (19 samples, 1.00%)</title><rect x="915.5" y="259.0" width="11.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="918.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (19 samples, 1.00%)</title><rect x="915.5" y="243.0" width="11.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="918.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (19 samples, 1.00%)</title><rect x="915.5" y="227.0" width="11.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="918.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (6 samples, 0.32%)</title><rect x="915.5" y="211.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="918.5" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.32%)</title><rect x="915.5" y="195.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.5" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.32%)</title><rect x="915.5" y="179.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="918.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.21%)</title><rect x="915.5" y="163.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.21%)</title><rect x="915.5" y="147.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="918.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.21%)</title><rect x="915.5" y="131.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="918.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.21%)</title><rect x="915.5" y="115.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="918.5" y="126.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.21%)</title><rect x="915.5" y="99.0" width="2.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="918.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.11%)</title><rect x="917.9" y="163.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="920.9" y="174.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="918.6" y="147.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="921.6" y="158.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="918.6" y="131.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="921.6" y="142.0"></text>
</g>
<g>
<title>jfr_is_event_enabled(JfrEventId) (1 samples, 0.05%)</title><rect x="918.6" y="115.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="921.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 0.68%)</title><rect x="919.2" y="211.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="922.2" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 0.68%)</title><rect x="919.2" y="195.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="922.2" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.63%)</title><rect x="919.2" y="179.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.2" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.05%)</title><rect x="919.2" y="163.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="922.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.05%)</title><rect x="919.2" y="147.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="922.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (11 samples, 0.58%)</title><rect x="919.8" y="163.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="922.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (11 samples, 0.58%)</title><rect x="919.8" y="147.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="922.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (11 samples, 0.58%)</title><rect x="919.8" y="131.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="922.8" y="142.0"></text>
</g>
<g>
<title>__pread (10 samples, 0.53%)</title><rect x="919.8" y="115.0" width="6.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="922.8" y="126.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="926.0" y="115.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="929.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.05%)</title><rect x="926.6" y="179.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="929.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.05%)</title><rect x="926.6" y="163.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="929.6" y="174.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.05%)</title><rect x="926.6" y="147.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="929.6" y="158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (179 samples, 9.40%)</title><rect x="927.2" y="403.0" width="111.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="930.2" y="414.0">java/util/Col..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (179 samples, 9.40%)</title><rect x="927.2" y="387.0" width="111.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="930.2" y="398.0">java/lang/Ite..</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (1 samples, 0.05%)</title><rect x="927.2" y="371.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="930.2" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="927.2" y="355.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="930.2" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next (1 samples, 0.05%)</title><rect x="927.2" y="339.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="930.2" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.prevEntry (1 samples, 0.05%)</title><rect x="927.2" y="323.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="930.2" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.predecessor (1 samples, 0.05%)</title><rect x="927.2" y="307.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="930.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$72/1983780967.accept (178 samples, 9.35%)</title><rect x="927.8" y="371.0" width="110.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="930.8" y="382.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (178 samples, 9.35%)</title><rect x="927.8" y="355.0" width="110.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="930.8" y="366.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (178 samples, 9.35%)</title><rect x="927.8" y="339.0" width="110.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="930.8" y="350.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (178 samples, 9.35%)</title><rect x="927.8" y="323.0" width="110.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.8" y="334.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (178 samples, 9.35%)</title><rect x="927.8" y="307.0" width="110.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="930.8" y="318.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.32%)</title><rect x="927.8" y="291.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="930.8" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.11%)</title><rect x="927.8" y="275.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="930.8" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="928.5" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="931.5" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.21%)</title><rect x="929.1" y="275.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="932.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (172 samples, 9.03%)</title><rect x="931.6" y="291.0" width="106.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="934.6" y="302.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.26%)</title><rect x="931.6" y="275.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="934.6" y="286.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="932.8" y="259.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="935.8" y="270.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="932.8" y="243.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="935.8" y="254.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="932.8" y="227.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="935.8" y="238.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="932.8" y="211.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="935.8" y="222.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (1 samples, 0.05%)</title><rect x="932.8" y="195.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="935.8" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.11%)</title><rect x="933.4" y="259.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="936.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (67 samples, 3.52%)</title><rect x="934.7" y="275.0" width="41.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="937.7" y="286.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.11%)</title><rect x="934.7" y="259.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="937.7" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="935.3" y="243.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="938.3" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="935.3" y="227.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="938.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.37%)</title><rect x="935.9" y="259.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="938.9" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.32%)</title><rect x="936.5" y="243.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="939.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.32%)</title><rect x="936.5" y="227.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="939.5" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.11%)</title><rect x="939.0" y="211.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="942.0" y="222.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.11%)</title><rect x="939.0" y="195.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="942.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (58 samples, 3.05%)</title><rect x="940.2" y="259.0" width="36.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="943.2" y="270.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (58 samples, 3.05%)</title><rect x="940.2" y="243.0" width="36.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="943.2" y="254.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.26%)</title><rect x="940.9" y="227.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="943.9" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.26%)</title><rect x="940.9" y="211.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="943.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (43 samples, 2.26%)</title><rect x="944.0" y="227.0" width="26.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.0" y="238.0">s..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.05%)</title><rect x="944.0" y="211.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="947.0" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="944.0" y="195.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="947.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (40 samples, 2.10%)</title><rect x="944.6" y="211.0" width="24.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="947.6" y="222.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (40 samples, 2.10%)</title><rect x="944.6" y="195.0" width="24.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="947.6" y="206.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (40 samples, 2.10%)</title><rect x="944.6" y="179.0" width="24.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.6" y="190.0">s..</text>
</g>
<g>
<title>__pread (37 samples, 1.94%)</title><rect x="945.2" y="163.0" width="22.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="948.2" y="174.0">_..</text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="968.1" y="163.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="971.1" y="174.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.05%)</title><rect x="968.7" y="163.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="971.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.11%)</title><rect x="969.4" y="211.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="972.4" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.11%)</title><rect x="969.4" y="195.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="972.4" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.05%)</title><rect x="969.4" y="179.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="972.4" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.05%)</title><rect x="969.4" y="163.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="972.4" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.05%)</title><rect x="970.0" y="179.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="973.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (7 samples, 0.37%)</title><rect x="970.6" y="227.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="973.6" y="238.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.16%)</title><rect x="971.2" y="211.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="974.2" y="222.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.16%)</title><rect x="971.2" y="195.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="974.2" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.05%)</title><rect x="971.2" y="179.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="974.2" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.11%)</title><rect x="971.8" y="179.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="974.8" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.05%)</title><rect x="972.5" y="163.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="975.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.16%)</title><rect x="973.1" y="211.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="976.1" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.11%)</title><rect x="974.9" y="227.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="977.9" y="238.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.11%)</title><rect x="974.9" y="211.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="977.9" y="222.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.11%)</title><rect x="974.9" y="195.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="977.9" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="974.9" y="179.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="977.9" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.05%)</title><rect x="974.9" y="163.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="977.9" y="174.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="975.6" y="179.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="978.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (100 samples, 5.25%)</title><rect x="976.2" y="275.0" width="62.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="979.2" y="286.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (100 samples, 5.25%)</title><rect x="976.2" y="259.0" width="62.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="979.2" y="270.0">sun/ni..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.05%)</title><rect x="976.8" y="243.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="979.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.11%)</title><rect x="977.4" y="243.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="980.4" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.11%)</title><rect x="977.4" y="227.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="980.4" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.11%)</title><rect x="977.4" y="211.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="980.4" y="222.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.11%)</title><rect x="977.4" y="195.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="980.4" y="206.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.11%)</title><rect x="977.4" y="179.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="980.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (87 samples, 4.57%)</title><rect x="978.7" y="243.0" width="53.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="981.7" y="254.0">sun/n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.26%)</title><rect x="978.7" y="227.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="981.7" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.26%)</title><rect x="978.7" y="211.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="981.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.11%)</title><rect x="979.9" y="195.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="982.9" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.05%)</title><rect x="980.5" y="179.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="983.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (1 samples, 0.05%)</title><rect x="980.5" y="163.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="983.5" y="174.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.05%)</title><rect x="981.1" y="195.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="984.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="981.1" y="179.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="984.1" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="981.1" y="163.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="984.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (70 samples, 3.68%)</title><rect x="981.8" y="227.0" width="43.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="984.8" y="238.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (69 samples, 3.62%)</title><rect x="982.4" y="211.0" width="42.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="985.4" y="222.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (69 samples, 3.62%)</title><rect x="982.4" y="195.0" width="42.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="985.4" y="206.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.05%)</title><rect x="985.5" y="179.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="988.5" y="190.0"></text>
</g>
<g>
<title>__pread (63 samples, 3.31%)</title><rect x="986.1" y="179.0" width="39.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="989.1" y="190.0">__p..</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.26%)</title><rect x="1025.1" y="227.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1028.1" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="1025.1" y="211.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1028.1" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.05%)</title><rect x="1025.1" y="195.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1028.1" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.05%)</title><rect x="1025.1" y="179.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1028.1" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.21%)</title><rect x="1025.8" y="211.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1028.8" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.05%)</title><rect x="1027.6" y="195.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1030.6" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.05%)</title><rect x="1027.6" y="179.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1030.6" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="1027.6" y="163.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1030.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (7 samples, 0.37%)</title><rect x="1028.2" y="227.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1031.2" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.32%)</title><rect x="1028.9" y="211.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1031.9" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.21%)</title><rect x="1030.1" y="195.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1033.1" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.32%)</title><rect x="1032.6" y="243.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1035.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.05%)</title><rect x="1035.7" y="227.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1038.7" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.16%)</title><rect x="1036.3" y="243.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1039.3" y="254.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.11%)</title><rect x="1036.3" y="227.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1039.3" y="238.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="1036.3" y="211.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1039.3" y="222.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="1036.3" y="195.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1039.3" y="206.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="1036.9" y="211.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1039.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.05%)</title><rect x="1037.5" y="227.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1040.5" y="238.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="1037.5" y="211.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1040.5" y="222.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.05%)</title><rect x="1037.5" y="195.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1040.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (7 samples, 0.37%)</title><rect x="1038.2" y="403.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1041.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (7 samples, 0.37%)</title><rect x="1038.2" y="387.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1041.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.37%)</title><rect x="1038.2" y="371.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1041.2" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7 samples, 0.37%)</title><rect x="1038.2" y="355.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1041.2" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7 samples, 0.37%)</title><rect x="1038.2" y="339.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1041.2" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7 samples, 0.37%)</title><rect x="1038.2" y="323.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1041.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7 samples, 0.37%)</title><rect x="1038.2" y="307.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1041.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.37%)</title><rect x="1038.2" y="291.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.37%)</title><rect x="1038.2" y="275.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1041.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (7 samples, 0.37%)</title><rect x="1038.2" y="259.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1041.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.37%)</title><rect x="1038.2" y="243.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1041.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.37%)</title><rect x="1038.2" y="227.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1041.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (7 samples, 0.37%)</title><rect x="1038.2" y="211.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1041.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3 samples, 0.16%)</title><rect x="1038.2" y="195.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1041.2" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="1038.2" y="179.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1041.2" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1038.2" y="163.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1041.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1038.2" y="147.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1041.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.11%)</title><rect x="1038.8" y="179.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1041.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.11%)</title><rect x="1038.8" y="163.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1041.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.11%)</title><rect x="1038.8" y="147.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1041.8" y="158.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.11%)</title><rect x="1038.8" y="131.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1041.8" y="142.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.11%)</title><rect x="1038.8" y="115.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1041.8" y="126.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.11%)</title><rect x="1038.8" y="99.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1041.8" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.21%)</title><rect x="1040.0" y="195.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1043.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.21%)</title><rect x="1040.0" y="179.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1043.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.21%)</title><rect x="1040.0" y="163.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1043.0" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.05%)</title><rect x="1040.0" y="147.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1043.0" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.05%)</title><rect x="1040.0" y="131.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1043.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.05%)</title><rect x="1040.0" y="115.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1043.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.16%)</title><rect x="1040.6" y="147.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1043.6" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.05%)</title><rect x="1040.6" y="131.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1043.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.11%)</title><rect x="1041.3" y="131.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1044.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.11%)</title><rect x="1041.3" y="115.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1044.3" y="126.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.11%)</title><rect x="1041.3" y="99.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1044.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (2 samples, 0.11%)</title><rect x="1042.5" y="419.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1045.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (2 samples, 0.11%)</title><rect x="1042.5" y="403.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1045.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1042.5" y="387.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1045.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1042.5" y="371.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1045.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (2 samples, 0.11%)</title><rect x="1042.5" y="355.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1045.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (2 samples, 0.11%)</title><rect x="1042.5" y="339.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1045.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (2 samples, 0.11%)</title><rect x="1042.5" y="323.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1045.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.05%)</title><rect x="1043.1" y="307.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1046.1" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="1043.1" y="291.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1046.1" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="1043.1" y="275.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1046.1" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="1043.1" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1046.1" y="270.0"></text>
</g>
<g>
<title>[pool-3-thread-8 tid=53025] (236 samples, 12.39%)</title><rect x="1043.7" y="563.0" width="146.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1046.7" y="574.0">[pool-3-thread-8 t..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.21%)</title><rect x="1043.7" y="547.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1046.7" y="558.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.21%)</title><rect x="1043.7" y="531.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1046.7" y="542.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (4 samples, 0.21%)</title><rect x="1043.7" y="515.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1046.7" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.11%)</title><rect x="1043.7" y="499.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1046.7" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.05%)</title><rect x="1044.4" y="483.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1047.4" y="494.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="1045.0" y="499.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1048.0" y="510.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="1045.6" y="499.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1048.6" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (232 samples, 12.18%)</title><rect x="1046.2" y="547.0" width="143.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1049.2" y="558.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (232 samples, 12.18%)</title><rect x="1046.2" y="531.0" width="143.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1049.2" y="542.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (232 samples, 12.18%)</title><rect x="1046.2" y="515.0" width="143.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1049.2" y="526.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.11%)</title><rect x="1046.2" y="499.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1049.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.05%)</title><rect x="1046.8" y="483.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1049.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.05%)</title><rect x="1046.8" y="467.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1049.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.05%)</title><rect x="1046.8" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1049.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.05%)</title><rect x="1046.8" y="435.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1049.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="1046.8" y="419.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1049.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.run (230 samples, 12.08%)</title><rect x="1047.5" y="499.0" width="142.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1050.5" y="510.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (230 samples, 12.08%)</title><rect x="1047.5" y="483.0" width="142.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1050.5" y="494.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.05%)</title><rect x="1047.5" y="467.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1050.5" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.05%)</title><rect x="1047.5" y="451.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1050.5" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.05%)</title><rect x="1047.5" y="435.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1050.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (229 samples, 12.03%)</title><rect x="1048.1" y="467.0" width="141.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1051.1" y="478.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (12 samples, 0.63%)</title><rect x="1048.1" y="451.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1051.1" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (12 samples, 0.63%)</title><rect x="1048.1" y="435.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1051.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (12 samples, 0.63%)</title><rect x="1048.1" y="419.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1051.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (12 samples, 0.63%)</title><rect x="1048.1" y="403.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1051.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (12 samples, 0.63%)</title><rect x="1048.1" y="387.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1051.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.58%)</title><rect x="1048.1" y="371.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.1" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.11%)</title><rect x="1048.1" y="355.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1051.1" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.11%)</title><rect x="1048.1" y="339.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1051.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2 samples, 0.11%)</title><rect x="1048.1" y="323.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1051.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.11%)</title><rect x="1048.1" y="307.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1051.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.11%)</title><rect x="1048.1" y="291.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1051.1" y="302.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.11%)</title><rect x="1048.1" y="275.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1051.1" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.11%)</title><rect x="1048.1" y="259.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1051.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.11%)</title><rect x="1048.1" y="243.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1051.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.11%)</title><rect x="1048.1" y="227.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1051.1" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.11%)</title><rect x="1048.1" y="211.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1051.1" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="1048.1" y="195.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1051.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.05%)</title><rect x="1048.1" y="179.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1051.1" y="190.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="1048.7" y="195.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1051.7" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (9 samples, 0.47%)</title><rect x="1049.3" y="355.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1052.3" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (9 samples, 0.47%)</title><rect x="1049.3" y="339.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1052.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (9 samples, 0.47%)</title><rect x="1049.3" y="323.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1052.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (9 samples, 0.47%)</title><rect x="1049.3" y="307.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1052.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.47%)</title><rect x="1049.3" y="291.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1052.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.47%)</title><rect x="1049.3" y="275.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1052.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (9 samples, 0.47%)</title><rect x="1049.3" y="259.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1052.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (9 samples, 0.47%)</title><rect x="1049.3" y="243.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1052.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (9 samples, 0.47%)</title><rect x="1049.3" y="227.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1052.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (9 samples, 0.47%)</title><rect x="1049.3" y="211.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1052.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3 samples, 0.16%)</title><rect x="1049.3" y="195.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1052.3" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="1049.3" y="179.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1052.3" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="1049.3" y="163.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1052.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.11%)</title><rect x="1049.9" y="179.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1052.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.11%)</title><rect x="1049.9" y="163.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1052.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.11%)</title><rect x="1049.9" y="147.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1052.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.11%)</title><rect x="1049.9" y="131.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1052.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.11%)</title><rect x="1049.9" y="115.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1052.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.11%)</title><rect x="1049.9" y="99.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1052.9" y="110.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.11%)</title><rect x="1049.9" y="83.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1052.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.32%)</title><rect x="1051.2" y="195.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1054.2" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.32%)</title><rect x="1051.2" y="179.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1054.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.26%)</title><rect x="1051.2" y="163.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1054.2" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.05%)</title><rect x="1051.2" y="147.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1054.2" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.05%)</title><rect x="1051.2" y="131.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1054.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.05%)</title><rect x="1051.2" y="115.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1054.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.05%)</title><rect x="1051.2" y="99.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1054.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.21%)</title><rect x="1051.8" y="147.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1054.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.21%)</title><rect x="1051.8" y="131.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1054.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.21%)</title><rect x="1051.8" y="115.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1054.8" y="126.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.21%)</title><rect x="1051.8" y="99.0" width="2.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1054.8" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.05%)</title><rect x="1054.3" y="163.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1057.3" y="174.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="1054.3" y="147.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1057.3" y="158.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="1054.3" y="131.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1057.3" y="142.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="1054.3" y="115.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1057.3" y="126.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.05%)</title><rect x="1054.3" y="99.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1057.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$78/208007213.apply (1 samples, 0.05%)</title><rect x="1054.9" y="371.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1057.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.05%)</title><rect x="1054.9" y="355.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1057.9" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.05%)</title><rect x="1054.9" y="339.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1057.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (1 samples, 0.05%)</title><rect x="1055.5" y="451.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1058.5" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.05%)</title><rect x="1055.5" y="435.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1058.5" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.05%)</title><rect x="1055.5" y="419.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1058.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1055.5" y="403.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1058.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1055.5" y="387.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1058.5" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1055.5" y="371.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1058.5" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1055.5" y="355.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1058.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="1055.5" y="339.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1058.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="1055.5" y="323.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1058.5" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.05%)</title><rect x="1055.5" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1058.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (216 samples, 11.34%)</title><rect x="1056.1" y="451.0" width="133.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1059.1" y="462.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (216 samples, 11.34%)</title><rect x="1056.1" y="435.0" width="133.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1059.1" y="446.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (215 samples, 11.29%)</title><rect x="1056.1" y="419.0" width="133.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1059.1" y="430.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (24 samples, 1.26%)</title><rect x="1056.1" y="403.0" width="14.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1059.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (24 samples, 1.26%)</title><rect x="1056.1" y="387.0" width="14.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1059.1" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (24 samples, 1.26%)</title><rect x="1056.1" y="371.0" width="14.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1059.1" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (24 samples, 1.26%)</title><rect x="1056.1" y="355.0" width="14.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1059.1" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (24 samples, 1.26%)</title><rect x="1056.1" y="339.0" width="14.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1059.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (24 samples, 1.26%)</title><rect x="1056.1" y="323.0" width="14.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1059.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (24 samples, 1.26%)</title><rect x="1056.1" y="307.0" width="14.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1059.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (24 samples, 1.26%)</title><rect x="1056.1" y="291.0" width="14.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1059.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (23 samples, 1.21%)</title><rect x="1056.1" y="275.0" width="14.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1059.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (21 samples, 1.10%)</title><rect x="1056.8" y="259.0" width="13.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1059.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (21 samples, 1.10%)</title><rect x="1056.8" y="243.0" width="13.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1059.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (21 samples, 1.10%)</title><rect x="1056.8" y="227.0" width="13.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1059.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.05%)</title><rect x="1056.8" y="211.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1059.8" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1056.8" y="195.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1059.8" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1056.8" y="179.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1059.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.05%)</title><rect x="1056.8" y="163.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1059.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.05%)</title><rect x="1056.8" y="147.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1059.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (6 samples, 0.32%)</title><rect x="1057.4" y="211.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1060.4" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.32%)</title><rect x="1057.4" y="195.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1060.4" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.32%)</title><rect x="1057.4" y="179.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1060.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.32%)</title><rect x="1057.4" y="163.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1060.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.26%)</title><rect x="1057.4" y="147.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1060.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.26%)</title><rect x="1057.4" y="131.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1060.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.26%)</title><rect x="1057.4" y="115.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1060.4" y="126.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.21%)</title><rect x="1058.0" y="99.0" width="2.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1061.0" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="1060.5" y="147.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1063.5" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="1060.5" y="131.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1063.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (14 samples, 0.74%)</title><rect x="1061.1" y="211.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1064.1" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (14 samples, 0.74%)</title><rect x="1061.1" y="195.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.1" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.05%)</title><rect x="1061.1" y="179.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.1" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.05%)</title><rect x="1061.1" y="163.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1064.1" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.05%)</title><rect x="1061.1" y="147.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1064.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.63%)</title><rect x="1061.7" y="179.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1064.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (12 samples, 0.63%)</title><rect x="1061.7" y="163.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1064.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (12 samples, 0.63%)</title><rect x="1061.7" y="147.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (12 samples, 0.63%)</title><rect x="1061.7" y="131.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1064.7" y="142.0"></text>
</g>
<g>
<title>__pread (11 samples, 0.58%)</title><rect x="1062.3" y="115.0" width="6.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1065.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.05%)</title><rect x="1069.1" y="179.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1072.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (1 samples, 0.05%)</title><rect x="1069.8" y="259.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1072.8" y="270.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="1070.4" y="275.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1073.4" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="1070.4" y="259.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1073.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="1070.4" y="243.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1073.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="1070.4" y="227.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1073.4" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="1070.4" y="211.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1073.4" y="222.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="1070.4" y="195.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1073.4" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="1070.4" y="179.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1073.4" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.05%)</title><rect x="1070.4" y="163.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1073.4" y="174.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (184 samples, 9.66%)</title><rect x="1071.0" y="403.0" width="114.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1074.0" y="414.0">java/util/Coll..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (184 samples, 9.66%)</title><rect x="1071.0" y="387.0" width="114.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1074.0" y="398.0">java/lang/Iter..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$72/1983780967.accept (184 samples, 9.66%)</title><rect x="1071.0" y="371.0" width="114.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1074.0" y="382.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (184 samples, 9.66%)</title><rect x="1071.0" y="355.0" width="114.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1074.0" y="366.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (184 samples, 9.66%)</title><rect x="1071.0" y="339.0" width="114.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1074.0" y="350.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (184 samples, 9.66%)</title><rect x="1071.0" y="323.0" width="114.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1074.0" y="334.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (184 samples, 9.66%)</title><rect x="1071.0" y="307.0" width="114.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1074.0" y="318.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.16%)</title><rect x="1071.6" y="291.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1074.6" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="1071.6" y="275.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1074.6" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.11%)</title><rect x="1072.2" y="275.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1075.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (180 samples, 9.45%)</title><rect x="1073.5" y="291.0" width="111.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1076.5" y="302.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.11%)</title><rect x="1074.1" y="275.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1077.1" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1074.1" y="259.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1077.1" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1074.1" y="243.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1077.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (65 samples, 3.41%)</title><rect x="1075.3" y="275.0" width="40.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1078.3" y="286.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.16%)</title><rect x="1075.3" y="259.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1078.3" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1076.0" y="243.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1079.0" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1076.0" y="227.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1079.0" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.32%)</title><rect x="1077.2" y="259.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1080.2" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.32%)</title><rect x="1077.2" y="243.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1080.2" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.32%)</title><rect x="1077.2" y="227.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1080.2" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1079.7" y="211.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1082.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.11%)</title><rect x="1079.7" y="195.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1082.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="1079.7" y="179.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1082.7" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="1079.7" y="163.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1082.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.05%)</title><rect x="1080.3" y="179.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1083.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (56 samples, 2.94%)</title><rect x="1080.9" y="259.0" width="34.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1083.9" y="270.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (56 samples, 2.94%)</title><rect x="1080.9" y="243.0" width="34.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1083.9" y="254.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.05%)</title><rect x="1081.5" y="227.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1084.5" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.05%)</title><rect x="1081.5" y="211.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1084.5" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (50 samples, 2.63%)</title><rect x="1082.2" y="227.0" width="31.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1085.2" y="238.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (39 samples, 2.05%)</title><rect x="1082.2" y="211.0" width="24.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1085.2" y="222.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (39 samples, 2.05%)</title><rect x="1082.2" y="195.0" width="24.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1085.2" y="206.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (39 samples, 2.05%)</title><rect x="1082.2" y="179.0" width="24.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1085.2" y="190.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.05%)</title><rect x="1082.8" y="163.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1085.8" y="174.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.05%)</title><rect x="1082.8" y="147.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1085.8" y="158.0"></text>
</g>
<g>
<title>__pread (34 samples, 1.79%)</title><rect x="1083.4" y="163.0" width="21.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1086.4" y="174.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="1104.5" y="163.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1107.5" y="174.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="1105.1" y="163.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1108.1" y="174.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.05%)</title><rect x="1105.7" y="163.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1108.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="1106.3" y="211.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1109.3" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="1106.3" y="195.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1109.3" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.05%)</title><rect x="1106.3" y="179.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1109.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (10 samples, 0.53%)</title><rect x="1107.0" y="211.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1110.0" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.32%)</title><rect x="1107.6" y="195.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1110.6" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.11%)</title><rect x="1108.2" y="179.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1111.2" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.05%)</title><rect x="1108.8" y="163.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.8" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.16%)</title><rect x="1109.4" y="179.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1112.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (3 samples, 0.16%)</title><rect x="1111.3" y="195.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.3" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.21%)</title><rect x="1113.2" y="227.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1116.2" y="238.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="1114.4" y="211.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1117.4" y="222.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="1114.4" y="195.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1117.4" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="1114.4" y="179.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1117.4" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.05%)</title><rect x="1114.4" y="163.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1117.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.05%)</title><rect x="1115.0" y="211.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1118.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (111 samples, 5.83%)</title><rect x="1115.6" y="275.0" width="68.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1118.6" y="286.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (111 samples, 5.83%)</title><rect x="1115.6" y="259.0" width="68.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1118.6" y="270.0">sun/nio..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (2 samples, 0.11%)</title><rect x="1116.2" y="243.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1119.2" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (6 samples, 0.32%)</title><rect x="1117.5" y="243.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1120.5" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (6 samples, 0.32%)</title><rect x="1117.5" y="227.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1120.5" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel$1.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1118.1" y="211.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1121.1" y="222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.21%)</title><rect x="1118.7" y="211.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1121.7" y="222.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.21%)</title><rect x="1118.7" y="195.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1121.7" y="206.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.21%)</title><rect x="1118.7" y="179.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1121.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (90 samples, 4.73%)</title><rect x="1121.2" y="243.0" width="55.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1124.2" y="254.0">sun/n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.26%)</title><rect x="1121.2" y="227.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1124.2" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.26%)</title><rect x="1121.2" y="211.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1124.2" y="222.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.reachabilityFence (2 samples, 0.11%)</title><rect x="1121.2" y="195.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1124.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.16%)</title><rect x="1122.4" y="195.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1125.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.16%)</title><rect x="1122.4" y="179.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.16%)</title><rect x="1122.4" y="163.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1125.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (2 samples, 0.11%)</title><rect x="1122.4" y="147.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1125.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (1 samples, 0.05%)</title><rect x="1122.4" y="131.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1125.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkOffset (1 samples, 0.05%)</title><rect x="1123.1" y="131.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1126.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.05%)</title><rect x="1123.7" y="147.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1126.7" y="158.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.05%)</title><rect x="1123.7" y="131.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1126.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (73 samples, 3.83%)</title><rect x="1124.3" y="227.0" width="45.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1127.3" y="238.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (73 samples, 3.83%)</title><rect x="1124.3" y="211.0" width="45.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.3" y="222.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (73 samples, 3.83%)</title><rect x="1124.3" y="195.0" width="45.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1127.3" y="206.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.05%)</title><rect x="1126.8" y="179.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1129.8" y="190.0"></text>
</g>
<g>
<title>__pread (64 samples, 3.36%)</title><rect x="1127.4" y="179.0" width="39.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1130.4" y="190.0">__p..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.11%)</title><rect x="1167.1" y="179.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1170.1" y="190.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.11%)</title><rect x="1168.3" y="179.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1171.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.37%)</title><rect x="1169.5" y="227.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1172.5" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.16%)</title><rect x="1170.2" y="211.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1173.2" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.16%)</title><rect x="1170.2" y="195.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1173.2" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (3 samples, 0.16%)</title><rect x="1170.2" y="179.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1173.2" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.16%)</title><rect x="1172.0" y="211.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1175.0" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.05%)</title><rect x="1173.3" y="195.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1176.3" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.05%)</title><rect x="1173.3" y="179.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1176.3" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="1173.3" y="163.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1176.3" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.05%)</title><rect x="1173.3" y="147.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1176.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (5 samples, 0.26%)</title><rect x="1173.9" y="227.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1176.9" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.21%)</title><rect x="1173.9" y="211.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1176.9" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.16%)</title><rect x="1173.9" y="195.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1176.9" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.05%)</title><rect x="1175.7" y="195.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1178.7" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (1 samples, 0.05%)</title><rect x="1176.4" y="211.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1179.4" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (12 samples, 0.63%)</title><rect x="1177.0" y="243.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1180.0" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="1181.9" y="227.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1184.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.16%)</title><rect x="1182.6" y="227.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1185.6" y="238.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="1183.8" y="211.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.8" y="222.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.05%)</title><rect x="1183.8" y="195.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.05%)</title><rect x="1184.4" y="275.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1187.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.05%)</title><rect x="1184.4" y="259.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1187.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (7 samples, 0.37%)</title><rect x="1185.0" y="403.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (7 samples, 0.37%)</title><rect x="1185.0" y="387.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.37%)</title><rect x="1185.0" y="371.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1188.0" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.05%)</title><rect x="1185.0" y="355.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1188.0" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.05%)</title><rect x="1185.0" y="339.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1188.0" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.05%)</title><rect x="1185.0" y="323.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.05%)</title><rect x="1185.0" y="307.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1188.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1 samples, 0.05%)</title><rect x="1185.0" y="291.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1188.0" y="302.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="1185.0" y="275.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1188.0" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="1185.0" y="259.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1188.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="1185.0" y="243.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="1185.0" y="227.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1188.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.05%)</title><rect x="1185.0" y="211.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1188.0" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.05%)</title><rect x="1185.0" y="195.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1188.0" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1185.0" y="179.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1188.0" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1185.0" y="163.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1188.0" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1185.0" y="147.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1188.0" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1185.0" y="131.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1188.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="1185.0" y="115.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1188.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="1185.0" y="99.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1188.0" y="110.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.05%)</title><rect x="1185.0" y="83.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1188.0" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6 samples, 0.32%)</title><rect x="1185.7" y="355.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1188.7" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6 samples, 0.32%)</title><rect x="1185.7" y="339.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1188.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6 samples, 0.32%)</title><rect x="1185.7" y="323.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1188.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6 samples, 0.32%)</title><rect x="1185.7" y="307.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1188.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.32%)</title><rect x="1185.7" y="291.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1188.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.32%)</title><rect x="1185.7" y="275.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1188.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5 samples, 0.26%)</title><rect x="1185.7" y="259.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1188.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.26%)</title><rect x="1185.7" y="243.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1188.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.26%)</title><rect x="1185.7" y="227.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1188.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (5 samples, 0.26%)</title><rect x="1185.7" y="211.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1188.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.11%)</title><rect x="1185.7" y="195.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.7" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.11%)</title><rect x="1185.7" y="179.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.11%)</title><rect x="1185.7" y="163.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1188.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.11%)</title><rect x="1185.7" y="147.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1188.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.11%)</title><rect x="1185.7" y="131.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1188.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.11%)</title><rect x="1185.7" y="115.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.11%)</title><rect x="1185.7" y="99.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1188.7" y="110.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.11%)</title><rect x="1185.7" y="83.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1188.7" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.16%)</title><rect x="1186.9" y="195.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1189.9" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.16%)</title><rect x="1186.9" y="179.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1189.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.05%)</title><rect x="1186.9" y="163.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1189.9" y="174.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.05%)</title><rect x="1186.9" y="147.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1189.9" y="158.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.05%)</title><rect x="1186.9" y="131.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1189.9" y="142.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.05%)</title><rect x="1186.9" y="115.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1189.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.11%)</title><rect x="1187.5" y="163.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1190.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.11%)</title><rect x="1187.5" y="147.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1190.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.11%)</title><rect x="1187.5" y="131.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1190.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.11%)</title><rect x="1187.5" y="115.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.5" y="126.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.11%)</title><rect x="1187.5" y="99.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1190.5" y="110.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="1188.8" y="259.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1191.8" y="270.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1 samples, 0.05%)</title><rect x="1188.8" y="243.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1191.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="1188.8" y="227.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1191.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (1 samples, 0.05%)</title><rect x="1188.8" y="211.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.05%)</title><rect x="1188.8" y="195.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1191.8" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="1188.8" y="179.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.8" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1188.8" y="163.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.8" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1188.8" y="147.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1191.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (1 samples, 0.05%)</title><rect x="1189.4" y="419.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (1 samples, 0.05%)</title><rect x="1189.4" y="403.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1192.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1189.4" y="387.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1192.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1189.4" y="371.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (1 samples, 0.05%)</title><rect x="1189.4" y="355.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (1 samples, 0.05%)</title><rect x="1189.4" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (1 samples, 0.05%)</title><rect x="1189.4" y="323.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.05%)</title><rect x="1189.4" y="307.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1192.4" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="1189.4" y="291.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.4" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.05%)</title><rect x="1189.4" y="275.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1192.4" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.05%)</title><rect x="1189.4" y="259.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1192.4" y="270.0"></text>
</g>
</g>
</svg>
