<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="629"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="629"> </text>
<g id="frames">
<g>
<title>all (5,413 samples, 100.00%)</title><rect x="10.0" y="595.0" width="1180.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="13.0" y="606.0">all</text>
</g>
<g>
<title>[C2 CompilerThre tid=6978] (81 samples, 1.50%)</title><rect x="10.0" y="579.0" width="17.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>start_thread (81 samples, 1.50%)</title><rect x="10.0" y="563.0" width="17.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (81 samples, 1.50%)</title><rect x="10.0" y="547.0" width="17.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>Thread::call_run() (81 samples, 1.50%)</title><rect x="10.0" y="531.0" width="17.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (81 samples, 1.50%)</title><rect x="10.0" y="515.0" width="17.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (81 samples, 1.50%)</title><rect x="10.0" y="499.0" width="17.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (81 samples, 1.50%)</title><rect x="10.0" y="483.0" width="17.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (81 samples, 1.50%)</title><rect x="10.0" y="467.0" width="17.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (81 samples, 1.50%)</title><rect x="10.0" y="451.0" width="17.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (51 samples, 0.94%)</title><rect x="10.0" y="435.0" width="11.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (2 samples, 0.04%)</title><rect x="10.0" y="419.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>Matcher::match() (3 samples, 0.06%)</title><rect x="10.7" y="419.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.7" y="430.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (6 samples, 0.11%)</title><rect x="11.3" y="419.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="14.3" y="430.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (6 samples, 0.11%)</title><rect x="11.3" y="403.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.3" y="414.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (3 samples, 0.06%)</title><rect x="12.0" y="387.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="15.0" y="398.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (38 samples, 0.70%)</title><rect x="12.8" y="419.0" width="8.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="15.8" y="430.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (3 samples, 0.06%)</title><rect x="13.5" y="403.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.5" y="414.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (2 samples, 0.04%)</title><rect x="13.7" y="387.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="16.7" y="398.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.04%)</title><rect x="14.4" y="403.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="17.4" y="414.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (7 samples, 0.13%)</title><rect x="14.8" y="403.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.8" y="414.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (2 samples, 0.04%)</title><rect x="14.8" y="387.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="17.8" y="398.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (3 samples, 0.06%)</title><rect x="15.2" y="387.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="18.2" y="398.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.04%)</title><rect x="15.4" y="371.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="18.4" y="382.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (2 samples, 0.04%)</title><rect x="15.9" y="387.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="18.9" y="398.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (2 samples, 0.04%)</title><rect x="16.3" y="403.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="19.3" y="414.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (4 samples, 0.07%)</title><rect x="16.8" y="403.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="19.8" y="414.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (8 samples, 0.15%)</title><rect x="17.8" y="403.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="20.8" y="414.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (3 samples, 0.06%)</title><rect x="18.3" y="387.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="21.3" y="398.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (2 samples, 0.04%)</title><rect x="18.9" y="387.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="21.9" y="398.0"></text>
</g>
<g>
<title>Compile::Optimize() (23 samples, 0.42%)</title><rect x="21.1" y="435.0" width="5.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="24.1" y="446.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) (4 samples, 0.07%)</title><rect x="21.1" y="419.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="24.1" y="430.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (4 samples, 0.07%)</title><rect x="21.1" y="403.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="24.1" y="414.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.04%)</title><rect x="21.3" y="387.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="24.3" y="398.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) (2 samples, 0.04%)</title><rect x="22.0" y="419.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="25.0" y="430.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (6 samples, 0.11%)</title><rect x="22.6" y="419.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="25.6" y="430.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.04%)</title><rect x="23.1" y="403.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="26.1" y="414.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (2 samples, 0.04%)</title><rect x="23.1" y="387.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="26.1" y="398.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (8 samples, 0.15%)</title><rect x="24.0" y="419.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="27.0" y="430.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (6 samples, 0.11%)</title><rect x="24.2" y="403.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="27.2" y="414.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (2 samples, 0.04%)</title><rect x="24.8" y="387.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="27.8" y="398.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.04%)</title><rect x="24.8" y="371.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="27.8" y="382.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (2 samples, 0.04%)</title><rect x="25.7" y="419.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="28.7" y="430.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.13%)</title><rect x="26.1" y="435.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="29.1" y="446.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.13%)</title><rect x="26.1" y="419.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="29.1" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.13%)</title><rect x="26.1" y="403.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="29.1" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.13%)</title><rect x="26.1" y="387.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="29.1" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.13%)</title><rect x="26.1" y="371.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="29.1" y="382.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.11%)</title><rect x="26.3" y="355.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="29.3" y="366.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="26.6" y="339.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="29.6" y="350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="26.6" y="323.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="29.6" y="334.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="26.6" y="307.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="29.6" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="26.6" y="291.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="29.6" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="26.6" y="275.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="29.6" y="286.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="26.6" y="259.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="29.6" y="270.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="26.8" y="243.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="29.8" y="254.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="26.8" y="227.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="29.8" y="238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="26.8" y="211.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="29.8" y="222.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="26.8" y="195.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="29.8" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="26.8" y="179.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="29.8" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="26.8" y="163.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="29.8" y="174.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="26.8" y="147.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="29.8" y="158.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="26.8" y="131.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="29.8" y="142.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="26.8" y="115.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="29.8" y="126.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="26.8" y="99.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="29.8" y="110.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="26.8" y="83.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="29.8" y="94.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="26.8" y="67.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="29.8" y="78.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="26.8" y="51.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="29.8" y="62.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="27.2" y="339.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="30.2" y="350.0"></text>
</g>
<g>
<title>[GC Thread#0 tid=6964] (6 samples, 0.11%)</title><rect x="27.7" y="579.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="30.7" y="590.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.11%)</title><rect x="27.7" y="563.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="30.7" y="574.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.11%)</title><rect x="27.7" y="547.0" width="1.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="30.7" y="558.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.11%)</title><rect x="27.7" y="531.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="30.7" y="542.0"></text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.11%)</title><rect x="27.7" y="515.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="30.7" y="526.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.11%)</title><rect x="27.7" y="499.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="30.7" y="510.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (6 samples, 0.11%)</title><rect x="27.7" y="483.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="30.7" y="494.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.04%)</title><rect x="27.7" y="467.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="30.7" y="478.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.04%)</title><rect x="27.7" y="451.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="30.7" y="462.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.06%)</title><rect x="28.3" y="467.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="31.3" y="478.0"></text>
</g>
<g>
<title>[GC Thread#1 tid=7023] (6 samples, 0.11%)</title><rect x="29.0" y="579.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="32.0" y="590.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.11%)</title><rect x="29.0" y="563.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="32.0" y="574.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.11%)</title><rect x="29.0" y="547.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="32.0" y="558.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.11%)</title><rect x="29.0" y="531.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="32.0" y="542.0"></text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.11%)</title><rect x="29.0" y="515.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="32.0" y="526.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.11%)</title><rect x="29.0" y="499.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="32.0" y="510.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (6 samples, 0.11%)</title><rect x="29.0" y="483.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="32.0" y="494.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.09%)</title><rect x="29.2" y="467.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="32.2" y="478.0"></text>
</g>
<g>
<title>[GC Thread#2 tid=7024] (5 samples, 0.09%)</title><rect x="30.3" y="579.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="33.3" y="590.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.09%)</title><rect x="30.3" y="563.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="33.3" y="574.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.09%)</title><rect x="30.3" y="547.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="33.3" y="558.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.09%)</title><rect x="30.3" y="531.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="33.3" y="542.0"></text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 0.09%)</title><rect x="30.3" y="515.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="33.3" y="526.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 0.09%)</title><rect x="30.3" y="499.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="33.3" y="510.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.09%)</title><rect x="30.3" y="483.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="33.3" y="494.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.04%)</title><rect x="30.3" y="467.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="33.3" y="478.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.06%)</title><rect x="30.7" y="467.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="33.7" y="478.0"></text>
</g>
<g>
<title>[GC Thread#3 tid=7025] (5 samples, 0.09%)</title><rect x="31.4" y="579.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="34.4" y="590.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.09%)</title><rect x="31.4" y="563.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="34.4" y="574.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.09%)</title><rect x="31.4" y="547.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="34.4" y="558.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.09%)</title><rect x="31.4" y="531.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="34.4" y="542.0"></text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 0.09%)</title><rect x="31.4" y="515.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="34.4" y="526.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 0.09%)</title><rect x="31.4" y="499.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="34.4" y="510.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.09%)</title><rect x="31.4" y="483.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="34.4" y="494.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.07%)</title><rect x="31.6" y="467.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="34.6" y="478.0"></text>
</g>
<g>
<title>[GC Thread#4 tid=7026] (4 samples, 0.07%)</title><rect x="32.5" y="579.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="35.5" y="590.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.07%)</title><rect x="32.5" y="563.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="35.5" y="574.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.07%)</title><rect x="32.5" y="547.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="35.5" y="558.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.07%)</title><rect x="32.5" y="531.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="35.5" y="542.0"></text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 0.07%)</title><rect x="32.5" y="515.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="35.5" y="526.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (4 samples, 0.07%)</title><rect x="32.5" y="499.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="35.5" y="510.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (4 samples, 0.07%)</title><rect x="32.5" y="483.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="35.5" y="494.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.04%)</title><rect x="32.5" y="467.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="35.5" y="478.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.04%)</title><rect x="32.9" y="467.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="35.9" y="478.0"></text>
</g>
<g>
<title>[GC Thread#5 tid=7027] (4 samples, 0.07%)</title><rect x="33.3" y="579.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="36.3" y="590.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.07%)</title><rect x="33.3" y="563.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="36.3" y="574.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.07%)</title><rect x="33.3" y="547.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="36.3" y="558.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.07%)</title><rect x="33.3" y="531.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="36.3" y="542.0"></text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 0.07%)</title><rect x="33.3" y="515.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="36.3" y="526.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (4 samples, 0.07%)</title><rect x="33.3" y="499.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="36.3" y="510.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (4 samples, 0.07%)</title><rect x="33.3" y="483.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="36.3" y="494.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.06%)</title><rect x="33.5" y="467.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="36.5" y="478.0"></text>
</g>
<g>
<title>[GC Thread#6 tid=7028] (5 samples, 0.09%)</title><rect x="34.2" y="579.0" width="1.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="37.2" y="590.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.09%)</title><rect x="34.2" y="563.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="37.2" y="574.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.09%)</title><rect x="34.2" y="547.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="37.2" y="558.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.09%)</title><rect x="34.2" y="531.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="37.2" y="542.0"></text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 0.09%)</title><rect x="34.2" y="515.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="37.2" y="526.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 0.09%)</title><rect x="34.2" y="499.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="37.2" y="510.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.09%)</title><rect x="34.2" y="483.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="37.2" y="494.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (3 samples, 0.06%)</title><rect x="34.2" y="467.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="37.2" y="478.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.04%)</title><rect x="34.9" y="467.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="37.9" y="478.0"></text>
</g>
<g>
<title>[GC Thread#7 tid=7029] (6 samples, 0.11%)</title><rect x="35.3" y="579.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="38.3" y="590.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.11%)</title><rect x="35.3" y="563.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="38.3" y="574.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.11%)</title><rect x="35.3" y="547.0" width="1.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="38.3" y="558.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.11%)</title><rect x="35.3" y="531.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="38.3" y="542.0"></text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.11%)</title><rect x="35.3" y="515.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="38.3" y="526.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.11%)</title><rect x="35.3" y="499.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="38.3" y="510.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.09%)</title><rect x="35.3" y="483.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="38.3" y="494.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.04%)</title><rect x="35.3" y="467.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="38.3" y="478.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.04%)</title><rect x="35.3" y="451.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="38.3" y="462.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.04%)</title><rect x="35.9" y="467.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="38.9" y="478.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=6986] (670 samples, 12.38%)</title><rect x="36.6" y="579.0" width="146.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="39.6" y="590.0">[NIO Selector #0 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (669 samples, 12.36%)</title><rect x="36.8" y="563.0" width="145.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.8" y="574.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/Session.process (668 samples, 12.34%)</title><rect x="36.8" y="547.0" width="145.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="39.8" y="558.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (668 samples, 12.34%)</title><rect x="36.8" y="531.0" width="145.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="39.8" y="542.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (668 samples, 12.34%)</title><rect x="36.8" y="515.0" width="145.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.8" y="526.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (666 samples, 12.30%)</title><rect x="36.8" y="499.0" width="145.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="39.8" y="510.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (666 samples, 12.30%)</title><rect x="36.8" y="483.0" width="145.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="39.8" y="494.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (666 samples, 12.30%)</title><rect x="36.8" y="467.0" width="145.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.8" y="478.0">RequestHandler0_re..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.04%)</title><rect x="36.8" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.8" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.04%)</title><rect x="36.8" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="39.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (664 samples, 12.27%)</title><rect x="37.2" y="451.0" width="144.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="40.2" y="462.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (10 samples, 0.18%)</title><rect x="37.2" y="435.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.2" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (10 samples, 0.18%)</title><rect x="37.2" y="419.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.2" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (10 samples, 0.18%)</title><rect x="37.2" y="403.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="40.2" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (10 samples, 0.18%)</title><rect x="37.2" y="387.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.2" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (10 samples, 0.18%)</title><rect x="37.2" y="371.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="40.2" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (10 samples, 0.18%)</title><rect x="37.2" y="355.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.2" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (10 samples, 0.18%)</title><rect x="37.2" y="339.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="40.2" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (10 samples, 0.18%)</title><rect x="37.2" y="323.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="40.2" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (10 samples, 0.18%)</title><rect x="37.2" y="307.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="40.2" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (3 samples, 0.06%)</title><rect x="37.5" y="291.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="40.5" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (3 samples, 0.06%)</title><rect x="37.5" y="275.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="40.5" y="286.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (3 samples, 0.06%)</title><rect x="37.5" y="259.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.5" y="270.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (3 samples, 0.06%)</title><rect x="37.5" y="243.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="40.5" y="254.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (3 samples, 0.06%)</title><rect x="37.5" y="227.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.5" y="238.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (3 samples, 0.06%)</title><rect x="37.5" y="211.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="40.5" y="222.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (3 samples, 0.06%)</title><rect x="37.5" y="195.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.5" y="206.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (3 samples, 0.06%)</title><rect x="37.5" y="179.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.5" y="190.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (3 samples, 0.06%)</title><rect x="37.5" y="163.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="40.5" y="174.0"></text>
</g>
<g>
<title>writeBytes (3 samples, 0.06%)</title><rect x="37.5" y="147.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="40.5" y="158.0"></text>
</g>
<g>
<title>jni_GetObjectField (2 samples, 0.04%)</title><rect x="37.5" y="131.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="40.5" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (6 samples, 0.11%)</title><rect x="38.1" y="291.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="41.1" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (6 samples, 0.11%)</title><rect x="38.1" y="275.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="41.1" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (6 samples, 0.11%)</title><rect x="38.1" y="259.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="41.1" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.09%)</title><rect x="38.3" y="243.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="41.3" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.09%)</title><rect x="38.3" y="227.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.3" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (3 samples, 0.06%)</title><rect x="38.6" y="211.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.6" y="222.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="38.8" y="195.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="41.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (654 samples, 12.08%)</title><rect x="39.4" y="435.0" width="142.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.4" y="446.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (654 samples, 12.08%)</title><rect x="39.4" y="419.0" width="142.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="42.4" y="430.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (20 samples, 0.37%)</title><rect x="39.4" y="403.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="42.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (20 samples, 0.37%)</title><rect x="39.4" y="387.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (20 samples, 0.37%)</title><rect x="39.4" y="371.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (20 samples, 0.37%)</title><rect x="39.4" y="355.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (20 samples, 0.37%)</title><rect x="39.4" y="339.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (20 samples, 0.37%)</title><rect x="39.4" y="323.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.4" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.04%)</title><rect x="39.4" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.04%)</title><rect x="39.4" y="291.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="42.4" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2 samples, 0.04%)</title><rect x="39.4" y="275.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="42.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.04%)</title><rect x="39.4" y="259.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="42.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.04%)</title><rect x="39.4" y="243.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.4" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="39.4" y="227.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.4" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="39.4" y="211.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="39.4" y="195.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="39.4" y="179.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.4" y="190.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (18 samples, 0.33%)</title><rect x="39.9" y="307.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (18 samples, 0.33%)</title><rect x="39.9" y="291.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.9" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (18 samples, 0.33%)</title><rect x="39.9" y="275.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.9" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (18 samples, 0.33%)</title><rect x="39.9" y="259.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (18 samples, 0.33%)</title><rect x="39.9" y="243.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (18 samples, 0.33%)</title><rect x="39.9" y="227.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="42.9" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (17 samples, 0.31%)</title><rect x="39.9" y="211.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (17 samples, 0.31%)</title><rect x="39.9" y="195.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (17 samples, 0.31%)</title><rect x="39.9" y="179.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="42.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (17 samples, 0.31%)</title><rect x="39.9" y="163.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="42.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (6 samples, 0.11%)</title><rect x="39.9" y="147.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="42.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.09%)</title><rect x="40.1" y="131.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="43.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.09%)</title><rect x="40.1" y="115.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.09%)</title><rect x="40.1" y="99.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="43.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.07%)</title><rect x="40.1" y="83.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="43.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.07%)</title><rect x="40.1" y="67.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="43.1" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.07%)</title><rect x="40.1" y="51.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="43.1" y="62.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.04%)</title><rect x="40.3" y="35.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="43.3" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (11 samples, 0.20%)</title><rect x="41.2" y="147.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="44.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (11 samples, 0.20%)</title><rect x="41.2" y="131.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="44.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.20%)</title><rect x="41.2" y="115.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="44.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.17%)</title><rect x="41.6" y="99.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (8 samples, 0.15%)</title><rect x="41.8" y="83.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="44.8" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (8 samples, 0.15%)</title><rect x="41.8" y="67.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="44.8" y="78.0"></text>
</g>
<g>
<title>__pread (6 samples, 0.11%)</title><rect x="42.0" y="51.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="45.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (634 samples, 11.71%)</title><rect x="43.8" y="403.0" width="138.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="46.8" y="414.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (634 samples, 11.71%)</title><rect x="43.8" y="387.0" width="138.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="46.8" y="398.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (633 samples, 11.69%)</title><rect x="43.8" y="371.0" width="138.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="46.8" y="382.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (39 samples, 0.72%)</title><rect x="43.8" y="355.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (39 samples, 0.72%)</title><rect x="43.8" y="339.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (38 samples, 0.70%)</title><rect x="44.0" y="323.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.0" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (38 samples, 0.70%)</title><rect x="44.0" y="307.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (38 samples, 0.70%)</title><rect x="44.0" y="291.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.0" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (38 samples, 0.70%)</title><rect x="44.0" y="275.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="47.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (38 samples, 0.70%)</title><rect x="44.0" y="259.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (38 samples, 0.70%)</title><rect x="44.0" y="243.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (34 samples, 0.63%)</title><rect x="44.0" y="227.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (34 samples, 0.63%)</title><rect x="44.0" y="211.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (34 samples, 0.63%)</title><rect x="44.0" y="195.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (34 samples, 0.63%)</title><rect x="44.0" y="179.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (14 samples, 0.26%)</title><rect x="44.0" y="163.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.0" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.06%)</title><rect x="44.0" y="147.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.0" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="44.2" y="131.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.2" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="44.2" y="115.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.2" y="126.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="44.2" y="99.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="44.2" y="83.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.2" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="44.2" y="67.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="47.2" y="78.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.04%)</title><rect x="44.2" y="51.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="47.2" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (11 samples, 0.20%)</title><rect x="44.7" y="147.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (11 samples, 0.20%)</title><rect x="44.7" y="131.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.18%)</title><rect x="44.7" y="115.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.13%)</title><rect x="44.9" y="99.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.13%)</title><rect x="44.9" y="83.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="47.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.13%)</title><rect x="44.9" y="67.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.9" y="78.0"></text>
</g>
<g>
<title>__pread (6 samples, 0.11%)</title><rect x="45.1" y="51.0" width="1.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="48.1" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="46.4" y="99.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.4" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="46.4" y="83.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.4" y="94.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.04%)</title><rect x="46.4" y="67.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.4" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.04%)</title><rect x="46.4" y="51.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.4" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (20 samples, 0.37%)</title><rect x="47.1" y="163.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="50.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (20 samples, 0.37%)</title><rect x="47.1" y="147.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="50.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (19 samples, 0.35%)</title><rect x="47.3" y="131.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="50.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (17 samples, 0.31%)</title><rect x="47.3" y="115.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.3" y="126.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.04%)</title><rect x="47.3" y="99.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="50.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (15 samples, 0.28%)</title><rect x="47.7" y="99.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="50.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (15 samples, 0.28%)</title><rect x="47.7" y="83.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="50.7" y="94.0"></text>
</g>
<g>
<title>__pread (13 samples, 0.24%)</title><rect x="48.1" y="67.0" width="2.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="51.1" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.07%)</title><rect x="51.4" y="227.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.4" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.07%)</title><rect x="51.4" y="211.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.07%)</title><rect x="51.4" y="195.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="54.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.07%)</title><rect x="51.4" y="179.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.4" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="51.4" y="163.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.04%)</title><rect x="51.9" y="163.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.9" y="174.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (591 samples, 10.92%)</title><rect x="52.3" y="355.0" width="128.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.3" y="366.0">java/util/Collec..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (591 samples, 10.92%)</title><rect x="52.3" y="339.0" width="128.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.3" y="350.0">java/lang/Iterab..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (591 samples, 10.92%)</title><rect x="52.3" y="323.0" width="128.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.3" y="334.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (590 samples, 10.90%)</title><rect x="52.5" y="307.0" width="128.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.5" y="318.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (590 samples, 10.90%)</title><rect x="52.5" y="291.0" width="128.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.5" y="302.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (590 samples, 10.90%)</title><rect x="52.5" y="275.0" width="128.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="55.5" y="286.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (590 samples, 10.90%)</title><rect x="52.5" y="259.0" width="128.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="55.5" y="270.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.24%)</title><rect x="52.5" y="243.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.5" y="254.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (13 samples, 0.24%)</title><rect x="52.5" y="227.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.5" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (9 samples, 0.17%)</title><rect x="53.4" y="211.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="56.4" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.06%)</title><rect x="54.7" y="195.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (577 samples, 10.66%)</title><rect x="55.3" y="243.0" width="125.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.3" y="254.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (26 samples, 0.48%)</title><rect x="55.6" y="227.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.6" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (23 samples, 0.42%)</title><rect x="56.2" y="211.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.2" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (18 samples, 0.33%)</title><rect x="56.2" y="195.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="59.2" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (15 samples, 0.28%)</title><rect x="56.9" y="179.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.9" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (13 samples, 0.24%)</title><rect x="57.3" y="163.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.11%)</title><rect x="58.0" y="147.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.0" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.11%)</title><rect x="58.0" y="131.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="61.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.06%)</title><rect x="58.6" y="115.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="61.6" y="126.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="59.3" y="147.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="62.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (5 samples, 0.09%)</title><rect x="60.1" y="195.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (190 samples, 3.51%)</title><rect x="61.2" y="227.0" width="41.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.2" y="238.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.15%)</title><rect x="61.4" y="211.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.4" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.15%)</title><rect x="61.4" y="195.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.4" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.15%)</title><rect x="61.4" y="179.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.4" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="61.9" y="163.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.9" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.06%)</title><rect x="61.9" y="147.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.9" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.06%)</title><rect x="61.9" y="131.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="64.9" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.04%)</title><rect x="62.1" y="115.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.06%)</title><rect x="62.5" y="163.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.5" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (21 samples, 0.39%)</title><rect x="63.2" y="211.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="66.2" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (18 samples, 0.33%)</title><rect x="63.8" y="195.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.8" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (18 samples, 0.33%)</title><rect x="63.8" y="179.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="66.8" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (14 samples, 0.26%)</title><rect x="64.7" y="163.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.7" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (12 samples, 0.22%)</title><rect x="64.9" y="147.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.9" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (12 samples, 0.22%)</title><rect x="64.9" y="131.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.9" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (12 samples, 0.22%)</title><rect x="64.9" y="115.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (160 samples, 2.96%)</title><rect x="67.8" y="211.0" width="34.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="70.8" y="222.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (160 samples, 2.96%)</title><rect x="67.8" y="195.0" width="34.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.8" y="206.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (154 samples, 2.85%)</title><rect x="68.4" y="179.0" width="33.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="71.4" y="190.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (22 samples, 0.41%)</title><rect x="68.6" y="163.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="71.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (21 samples, 0.39%)</title><rect x="68.9" y="147.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.9" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (17 samples, 0.31%)</title><rect x="69.1" y="131.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.1" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.15%)</title><rect x="71.0" y="115.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.06%)</title><rect x="72.8" y="131.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.06%)</title><rect x="72.8" y="115.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="75.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.06%)</title><rect x="72.8" y="99.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.8" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (122 samples, 2.25%)</title><rect x="73.4" y="163.0" width="26.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.4" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (122 samples, 2.25%)</title><rect x="73.4" y="147.0" width="26.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.4" y="158.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (122 samples, 2.25%)</title><rect x="73.4" y="131.0" width="26.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.4" y="142.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (3 samples, 0.06%)</title><rect x="74.7" y="115.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="77.7" y="126.0"></text>
</g>
<g>
<title>__pread (109 samples, 2.01%)</title><rect x="75.4" y="115.0" width="23.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="78.4" y="126.0">_..</text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.06%)</title><rect x="99.4" y="115.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="102.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.09%)</title><rect x="100.0" y="163.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="103.0" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.09%)</title><rect x="100.0" y="147.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="103.0" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.09%)</title><rect x="100.0" y="131.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (5 samples, 0.09%)</title><rect x="100.0" y="115.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (4 samples, 0.07%)</title><rect x="101.1" y="163.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="104.1" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.07%)</title><rect x="101.1" y="147.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.1" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.07%)</title><rect x="101.1" y="131.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (4 samples, 0.07%)</title><rect x="101.1" y="115.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.06%)</title><rect x="102.0" y="179.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.06%)</title><rect x="102.0" y="163.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (360 samples, 6.65%)</title><rect x="102.6" y="227.0" width="78.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="105.6" y="238.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (356 samples, 6.58%)</title><rect x="103.3" y="211.0" width="77.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="106.3" y="222.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (24 samples, 0.44%)</title><rect x="104.4" y="195.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="107.4" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (24 samples, 0.44%)</title><rect x="104.4" y="179.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="107.4" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (10 samples, 0.18%)</title><rect x="107.0" y="163.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="110.0" y="174.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (10 samples, 0.18%)</title><rect x="107.0" y="147.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.0" y="158.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (10 samples, 0.18%)</title><rect x="107.0" y="131.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (291 samples, 5.38%)</title><rect x="110.1" y="195.0" width="63.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.1" y="206.0">sun/nio..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (22 samples, 0.41%)</title><rect x="111.8" y="179.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="114.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (20 samples, 0.37%)</title><rect x="112.2" y="163.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="115.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (5 samples, 0.09%)</title><rect x="113.3" y="147.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (9 samples, 0.17%)</title><rect x="114.6" y="147.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (9 samples, 0.17%)</title><rect x="114.6" y="131.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (8 samples, 0.15%)</title><rect x="114.9" y="115.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (3 samples, 0.06%)</title><rect x="115.3" y="99.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.3" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (3 samples, 0.06%)</title><rect x="115.9" y="99.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="118.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (247 samples, 4.56%)</title><rect x="116.6" y="179.0" width="53.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="119.6" y="190.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (245 samples, 4.53%)</title><rect x="117.0" y="163.0" width="53.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.0" y="174.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (245 samples, 4.53%)</title><rect x="117.0" y="147.0" width="53.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.0" y="158.0">sun/n..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.04%)</title><rect x="119.0" y="131.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="122.0" y="142.0"></text>
</g>
<g>
<title>__pread (224 samples, 4.14%)</title><rect x="119.4" y="131.0" width="48.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="122.4" y="142.0">__pr..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.09%)</title><rect x="168.3" y="131.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="171.3" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.07%)</title><rect x="169.4" y="131.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="172.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.09%)</title><rect x="170.4" y="179.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.4" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.09%)</title><rect x="170.4" y="163.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.4" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.09%)</title><rect x="170.4" y="147.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (5 samples, 0.09%)</title><rect x="170.4" y="131.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="173.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (9 samples, 0.17%)</title><rect x="171.5" y="179.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.5" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (9 samples, 0.17%)</title><rect x="171.5" y="163.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.5" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (9 samples, 0.17%)</title><rect x="171.5" y="147.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="174.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (9 samples, 0.17%)</title><rect x="171.5" y="131.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (31 samples, 0.57%)</title><rect x="173.5" y="195.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="176.5" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (7 samples, 0.13%)</title><rect x="178.7" y="179.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="181.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.06%)</title><rect x="180.3" y="195.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="183.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.06%)</title><rect x="181.1" y="355.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="184.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.06%)</title><rect x="181.1" y="339.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.06%)</title><rect x="181.1" y="323.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="184.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.06%)</title><rect x="181.1" y="307.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="184.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.06%)</title><rect x="181.1" y="291.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="184.1" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3 samples, 0.06%)</title><rect x="181.1" y="275.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="184.1" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 0.06%)</title><rect x="181.1" y="259.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="184.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="181.1" y="243.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="184.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="181.1" y="227.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="184.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.06%)</title><rect x="181.1" y="211.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="184.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.06%)</title><rect x="181.1" y="195.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.06%)</title><rect x="181.1" y="179.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="184.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (3 samples, 0.06%)</title><rect x="181.1" y="163.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="184.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.06%)</title><rect x="181.1" y="147.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="184.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.06%)</title><rect x="181.1" y="131.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="184.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.06%)</title><rect x="181.1" y="115.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="184.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.06%)</title><rect x="181.1" y="99.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="184.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.06%)</title><rect x="181.1" y="83.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="184.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.06%)</title><rect x="181.1" y="67.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.1" y="78.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.06%)</title><rect x="181.1" y="51.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="184.1" y="62.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=6987] (669 samples, 12.36%)</title><rect x="182.7" y="579.0" width="145.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="185.7" y="590.0">[NIO Selector #1 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (668 samples, 12.34%)</title><rect x="182.9" y="563.0" width="145.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="185.9" y="574.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/Session.process (668 samples, 12.34%)</title><rect x="182.9" y="547.0" width="145.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="185.9" y="558.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (668 samples, 12.34%)</title><rect x="182.9" y="531.0" width="145.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="185.9" y="542.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (667 samples, 12.32%)</title><rect x="182.9" y="515.0" width="145.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="185.9" y="526.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (666 samples, 12.30%)</title><rect x="182.9" y="499.0" width="145.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="185.9" y="510.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (666 samples, 12.30%)</title><rect x="182.9" y="483.0" width="145.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.9" y="494.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (663 samples, 12.25%)</title><rect x="183.1" y="467.0" width="144.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.1" y="478.0">RequestHandler0_re..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.04%)</title><rect x="183.1" y="451.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.04%)</title><rect x="183.1" y="435.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="186.1" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.04%)</title><rect x="183.1" y="419.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="186.1" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.04%)</title><rect x="183.1" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.1" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.04%)</title><rect x="183.1" y="387.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.04%)</title><rect x="183.1" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="186.1" y="382.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.04%)</title><rect x="183.1" y="355.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="186.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (661 samples, 12.21%)</title><rect x="183.5" y="451.0" width="144.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.5" y="462.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (5 samples, 0.09%)</title><rect x="183.5" y="435.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="186.5" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (5 samples, 0.09%)</title><rect x="183.5" y="419.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.5" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (5 samples, 0.09%)</title><rect x="183.5" y="403.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="186.5" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (5 samples, 0.09%)</title><rect x="183.5" y="387.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="186.5" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (5 samples, 0.09%)</title><rect x="183.5" y="371.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="186.5" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (5 samples, 0.09%)</title><rect x="183.5" y="355.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="186.5" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (5 samples, 0.09%)</title><rect x="183.5" y="339.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="186.5" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (5 samples, 0.09%)</title><rect x="183.5" y="323.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.5" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (5 samples, 0.09%)</title><rect x="183.5" y="307.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.5" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (3 samples, 0.06%)</title><rect x="183.5" y="291.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.5" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (3 samples, 0.06%)</title><rect x="183.5" y="275.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="186.5" y="286.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (3 samples, 0.06%)</title><rect x="183.5" y="259.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="186.5" y="270.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (3 samples, 0.06%)</title><rect x="183.5" y="243.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="186.5" y="254.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (3 samples, 0.06%)</title><rect x="183.5" y="227.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="186.5" y="238.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (3 samples, 0.06%)</title><rect x="183.5" y="211.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="186.5" y="222.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (3 samples, 0.06%)</title><rect x="183.5" y="195.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.5" y="206.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (3 samples, 0.06%)</title><rect x="183.5" y="179.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.5" y="190.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (3 samples, 0.06%)</title><rect x="183.5" y="163.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="186.5" y="174.0"></text>
</g>
<g>
<title>writeBytes (3 samples, 0.06%)</title><rect x="183.5" y="147.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="186.5" y="158.0"></text>
</g>
<g>
<title>jni_GetObjectField (2 samples, 0.04%)</title><rect x="183.7" y="131.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="186.7" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.04%)</title><rect x="184.2" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.2" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.04%)</title><rect x="184.2" y="275.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="187.2" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.04%)</title><rect x="184.2" y="259.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="187.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.04%)</title><rect x="184.2" y="243.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="187.2" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.04%)</title><rect x="184.2" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="187.2" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.04%)</title><rect x="184.2" y="211.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.2" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.04%)</title><rect x="184.2" y="195.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="187.2" y="206.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="184.2" y="179.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="187.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (656 samples, 12.12%)</title><rect x="184.6" y="435.0" width="143.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="187.6" y="446.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (656 samples, 12.12%)</title><rect x="184.6" y="419.0" width="143.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.6" y="430.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (16 samples, 0.30%)</title><rect x="184.6" y="403.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="187.6" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (16 samples, 0.30%)</title><rect x="184.6" y="387.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="187.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (16 samples, 0.30%)</title><rect x="184.6" y="371.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="187.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (16 samples, 0.30%)</title><rect x="184.6" y="355.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (16 samples, 0.30%)</title><rect x="184.6" y="339.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (15 samples, 0.28%)</title><rect x="184.8" y="323.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="187.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2 samples, 0.04%)</title><rect x="184.8" y="307.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="187.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (13 samples, 0.24%)</title><rect x="185.3" y="307.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (13 samples, 0.24%)</title><rect x="185.3" y="291.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="188.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (13 samples, 0.24%)</title><rect x="185.3" y="275.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="188.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (13 samples, 0.24%)</title><rect x="185.3" y="259.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="188.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.24%)</title><rect x="185.3" y="243.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="188.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.24%)</title><rect x="185.3" y="227.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="188.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (13 samples, 0.24%)</title><rect x="185.3" y="211.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="188.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (13 samples, 0.24%)</title><rect x="185.3" y="195.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="188.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (13 samples, 0.24%)</title><rect x="185.3" y="179.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="188.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (13 samples, 0.24%)</title><rect x="185.3" y="163.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="188.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.04%)</title><rect x="185.5" y="147.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="188.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.04%)</title><rect x="185.5" y="131.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="188.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.04%)</title><rect x="185.5" y="115.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="188.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.04%)</title><rect x="185.5" y="99.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="188.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.04%)</title><rect x="185.5" y="83.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="188.5" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.04%)</title><rect x="185.5" y="67.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="188.5" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.04%)</title><rect x="185.5" y="51.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="188.5" y="62.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.04%)</title><rect x="185.5" y="35.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="188.5" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (10 samples, 0.18%)</title><rect x="185.9" y="147.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="188.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (10 samples, 0.18%)</title><rect x="185.9" y="131.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="188.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.17%)</title><rect x="185.9" y="115.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="188.9" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.04%)</title><rect x="186.1" y="99.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="189.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.11%)</title><rect x="186.6" y="99.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.11%)</title><rect x="186.6" y="83.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="189.6" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.11%)</title><rect x="186.6" y="67.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.6" y="78.0"></text>
</g>
<g>
<title>__pread (6 samples, 0.11%)</title><rect x="186.6" y="51.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="189.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (640 samples, 11.82%)</title><rect x="188.1" y="403.0" width="139.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="191.1" y="414.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (640 samples, 11.82%)</title><rect x="188.1" y="387.0" width="139.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.1" y="398.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (637 samples, 11.77%)</title><rect x="188.1" y="371.0" width="138.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.1" y="382.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (60 samples, 1.11%)</title><rect x="188.1" y="355.0" width="13.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (60 samples, 1.11%)</title><rect x="188.1" y="339.0" width="13.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (59 samples, 1.09%)</title><rect x="188.3" y="323.0" width="12.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (59 samples, 1.09%)</title><rect x="188.3" y="307.0" width="12.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (59 samples, 1.09%)</title><rect x="188.3" y="291.0" width="12.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (59 samples, 1.09%)</title><rect x="188.3" y="275.0" width="12.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (59 samples, 1.09%)</title><rect x="188.3" y="259.0" width="12.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (59 samples, 1.09%)</title><rect x="188.3" y="243.0" width="12.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (56 samples, 1.03%)</title><rect x="188.3" y="227.0" width="12.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (56 samples, 1.03%)</title><rect x="188.3" y="211.0" width="12.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (56 samples, 1.03%)</title><rect x="188.3" y="195.0" width="12.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (55 samples, 1.02%)</title><rect x="188.3" y="179.0" width="12.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (15 samples, 0.28%)</title><rect x="188.5" y="163.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (13 samples, 0.24%)</title><rect x="189.0" y="147.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (13 samples, 0.24%)</title><rect x="189.0" y="131.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.22%)</title><rect x="189.0" y="115.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="192.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.17%)</title><rect x="189.2" y="99.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="192.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 0.17%)</title><rect x="189.2" y="83.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.2" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.17%)</title><rect x="189.2" y="67.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.2" y="78.0"></text>
</g>
<g>
<title>__pread (9 samples, 0.17%)</title><rect x="189.2" y="51.0" width="2.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="192.2" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="191.2" y="99.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="194.2" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="191.2" y="83.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="194.2" y="94.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.04%)</title><rect x="191.2" y="67.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="194.2" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.04%)</title><rect x="191.2" y="51.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="194.2" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (39 samples, 0.72%)</title><rect x="191.8" y="163.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="194.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (39 samples, 0.72%)</title><rect x="191.8" y="147.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="194.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.04%)</title><rect x="192.2" y="131.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="195.2" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.04%)</title><rect x="192.2" y="115.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="195.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (33 samples, 0.61%)</title><rect x="192.7" y="131.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="195.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (26 samples, 0.48%)</title><rect x="192.9" y="115.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="195.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (26 samples, 0.48%)</title><rect x="192.9" y="99.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (26 samples, 0.48%)</title><rect x="192.9" y="83.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.9" y="94.0"></text>
</g>
<g>
<title>__pread (23 samples, 0.42%)</title><rect x="193.3" y="67.0" width="5.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="196.3" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="198.6" y="115.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="201.6" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="198.6" y="99.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="201.6" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.04%)</title><rect x="198.6" y="83.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.6" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.04%)</title><rect x="198.6" y="67.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.6" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (4 samples, 0.07%)</title><rect x="199.0" y="115.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="202.0" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.07%)</title><rect x="199.0" y="99.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="202.0" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.07%)</title><rect x="199.0" y="83.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="202.0" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (4 samples, 0.07%)</title><rect x="199.0" y="67.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="202.0" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="200.5" y="227.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="203.5" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="200.5" y="211.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="203.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="200.5" y="195.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="203.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="200.5" y="179.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="203.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.04%)</title><rect x="200.7" y="163.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="203.7" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="200.7" y="147.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="203.7" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="200.7" y="131.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="203.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="200.7" y="115.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="203.7" y="126.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="200.7" y="99.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="203.7" y="110.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (574 samples, 10.60%)</title><rect x="201.2" y="355.0" width="125.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.2" y="366.0">java/util/Colle..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (574 samples, 10.60%)</title><rect x="201.2" y="339.0" width="125.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="204.2" y="350.0">java/lang/Itera..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (573 samples, 10.59%)</title><rect x="201.4" y="323.0" width="124.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.4" y="334.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (573 samples, 10.59%)</title><rect x="201.4" y="307.0" width="124.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="204.4" y="318.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (573 samples, 10.59%)</title><rect x="201.4" y="291.0" width="124.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.4" y="302.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (572 samples, 10.57%)</title><rect x="201.6" y="275.0" width="124.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="204.6" y="286.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (572 samples, 10.57%)</title><rect x="201.6" y="259.0" width="124.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.6" y="270.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (18 samples, 0.33%)</title><rect x="201.6" y="243.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="204.6" y="254.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (17 samples, 0.31%)</title><rect x="201.8" y="227.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.8" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (8 samples, 0.15%)</title><rect x="203.8" y="211.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="206.8" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (5 samples, 0.09%)</title><rect x="204.2" y="195.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="207.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (554 samples, 10.23%)</title><rect x="205.5" y="243.0" width="120.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.5" y="254.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.06%)</title><rect x="205.8" y="227.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="208.8" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="205.8" y="211.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.8" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="205.8" y="195.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.8" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (16 samples, 0.30%)</title><rect x="206.4" y="227.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="209.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.24%)</title><rect x="207.1" y="211.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="210.1" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.17%)</title><rect x="207.5" y="195.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.5" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.15%)</title><rect x="207.7" y="179.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.7" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.11%)</title><rect x="208.2" y="163.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.2" y="174.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="208.4" y="147.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="211.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="209.5" y="195.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="212.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (204 samples, 3.77%)</title><rect x="209.9" y="227.0" width="44.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="212.9" y="238.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.15%)</title><rect x="209.9" y="211.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="212.9" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.15%)</title><rect x="209.9" y="195.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="212.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.13%)</title><rect x="210.1" y="179.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="213.1" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="210.6" y="163.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="213.6" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="210.6" y="147.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="213.6" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="210.6" y="131.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="213.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.06%)</title><rect x="211.0" y="163.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.0" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (26 samples, 0.48%)</title><rect x="211.6" y="211.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="214.6" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (24 samples, 0.44%)</title><rect x="212.1" y="195.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="215.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (24 samples, 0.44%)</title><rect x="212.1" y="179.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.1" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (14 samples, 0.26%)</title><rect x="214.3" y="163.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="217.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (11 samples, 0.20%)</title><rect x="214.7" y="147.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="217.7" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (11 samples, 0.20%)</title><rect x="214.7" y="131.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="217.7" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (11 samples, 0.20%)</title><rect x="214.7" y="115.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="217.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (169 samples, 3.12%)</title><rect x="217.3" y="211.0" width="36.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="220.3" y="222.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (169 samples, 3.12%)</title><rect x="217.3" y="195.0" width="36.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="220.3" y="206.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (161 samples, 2.97%)</title><rect x="217.7" y="179.0" width="35.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.7" y="190.0">sun..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (14 samples, 0.26%)</title><rect x="217.7" y="163.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (13 samples, 0.24%)</title><rect x="218.0" y="147.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="221.0" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (8 samples, 0.15%)</title><rect x="218.2" y="131.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="221.2" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (6 samples, 0.11%)</title><rect x="218.6" y="115.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="221.6" y="126.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.04%)</title><rect x="219.9" y="131.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="222.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.04%)</title><rect x="220.4" y="131.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="223.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.04%)</title><rect x="220.4" y="115.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="223.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.04%)</title><rect x="220.4" y="99.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.4" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (138 samples, 2.55%)</title><rect x="220.8" y="163.0" width="30.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="223.8" y="174.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (138 samples, 2.55%)</title><rect x="220.8" y="147.0" width="30.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="223.8" y="158.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (138 samples, 2.55%)</title><rect x="220.8" y="131.0" width="30.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="223.8" y="142.0">su..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.04%)</title><rect x="222.5" y="115.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="225.5" y="126.0"></text>
</g>
<g>
<title>__pread (118 samples, 2.18%)</title><rect x="223.0" y="115.0" width="25.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="226.0" y="126.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.11%)</title><rect x="248.7" y="115.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="251.7" y="126.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.06%)</title><rect x="250.0" y="115.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="253.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.06%)</title><rect x="250.9" y="163.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="253.9" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.06%)</title><rect x="250.9" y="147.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="253.9" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.06%)</title><rect x="250.9" y="131.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="253.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.06%)</title><rect x="250.9" y="115.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="253.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (6 samples, 0.11%)</title><rect x="251.5" y="163.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.5" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.11%)</title><rect x="251.5" y="147.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="254.5" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (6 samples, 0.11%)</title><rect x="251.5" y="131.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="254.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (6 samples, 0.11%)</title><rect x="251.5" y="115.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="254.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.07%)</title><rect x="252.8" y="179.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="255.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.07%)</title><rect x="252.8" y="163.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="255.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.04%)</title><rect x="253.7" y="179.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="256.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (330 samples, 6.10%)</title><rect x="254.4" y="227.0" width="71.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="257.4" y="238.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (2 samples, 0.04%)</title><rect x="255.0" y="211.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="258.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (325 samples, 6.00%)</title><rect x="255.5" y="211.0" width="70.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.5" y="222.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (18 samples, 0.33%)</title><rect x="256.1" y="195.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="259.1" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (18 samples, 0.33%)</title><rect x="256.1" y="179.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="259.1" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.07%)</title><rect x="258.7" y="163.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="261.7" y="174.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.07%)</title><rect x="258.7" y="147.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="261.7" y="158.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.07%)</title><rect x="258.7" y="131.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="261.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.04%)</title><rect x="259.6" y="163.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="262.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (3 samples, 0.06%)</title><rect x="260.0" y="195.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="263.0" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (3 samples, 0.06%)</title><rect x="260.0" y="179.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="263.0" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.06%)</title><rect x="260.0" y="163.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOStatus.normalize (2 samples, 0.04%)</title><rect x="260.9" y="195.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="263.9" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (260 samples, 4.80%)</title><rect x="261.3" y="195.0" width="56.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="264.3" y="206.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (18 samples, 0.33%)</title><rect x="262.4" y="179.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="265.4" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (16 samples, 0.30%)</title><rect x="262.9" y="163.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="265.9" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (7 samples, 0.13%)</title><rect x="263.7" y="147.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="266.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (4 samples, 0.07%)</title><rect x="265.5" y="147.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="268.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (4 samples, 0.07%)</title><rect x="265.5" y="131.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="268.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (4 samples, 0.07%)</title><rect x="265.5" y="115.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="268.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (3 samples, 0.06%)</title><rect x="265.7" y="99.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="268.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (211 samples, 3.90%)</title><rect x="266.4" y="179.0" width="46.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="269.4" y="190.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (209 samples, 3.86%)</title><rect x="266.8" y="163.0" width="45.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="269.8" y="174.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (209 samples, 3.86%)</title><rect x="266.8" y="147.0" width="45.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="269.8" y="158.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.04%)</title><rect x="270.3" y="131.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="273.3" y="142.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.04%)</title><rect x="270.3" y="115.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="273.3" y="126.0"></text>
</g>
<g>
<title>__pread (183 samples, 3.38%)</title><rect x="270.7" y="131.0" width="39.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="273.7" y="142.0">__p..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.04%)</title><rect x="310.6" y="131.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="313.6" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.09%)</title><rect x="311.0" y="131.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="314.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.15%)</title><rect x="312.4" y="179.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.4" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.15%)</title><rect x="312.4" y="163.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="315.4" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (8 samples, 0.15%)</title><rect x="312.4" y="147.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="315.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (8 samples, 0.15%)</title><rect x="312.4" y="131.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="315.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (18 samples, 0.33%)</title><rect x="314.1" y="179.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="317.1" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (18 samples, 0.33%)</title><rect x="314.1" y="163.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.1" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (18 samples, 0.33%)</title><rect x="314.1" y="147.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="317.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (18 samples, 0.33%)</title><rect x="314.1" y="131.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="317.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (30 samples, 0.55%)</title><rect x="318.0" y="195.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="321.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (11 samples, 0.20%)</title><rect x="322.2" y="179.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.2" y="190.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="324.1" y="163.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="327.1" y="174.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (2 samples, 0.04%)</title><rect x="324.1" y="147.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="327.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (8 samples, 0.15%)</title><rect x="324.6" y="195.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="327.6" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="325.7" y="179.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="328.7" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="325.7" y="163.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="328.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.06%)</title><rect x="326.3" y="355.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="329.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.06%)</title><rect x="326.3" y="339.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="329.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.06%)</title><rect x="326.3" y="323.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.06%)</title><rect x="326.3" y="307.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.06%)</title><rect x="326.3" y="291.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="329.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3 samples, 0.06%)</title><rect x="326.3" y="275.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 0.06%)</title><rect x="326.3" y="259.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="329.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="326.3" y="243.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="329.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="326.3" y="227.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.06%)</title><rect x="326.3" y="211.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="329.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.06%)</title><rect x="326.3" y="195.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.06%)</title><rect x="326.3" y="179.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (3 samples, 0.06%)</title><rect x="326.3" y="163.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="329.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.04%)</title><rect x="326.5" y="147.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.04%)</title><rect x="326.5" y="131.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="329.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (3 samples, 0.06%)</title><rect x="327.0" y="371.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (3 samples, 0.06%)</title><rect x="327.0" y="355.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (3 samples, 0.06%)</title><rect x="327.0" y="339.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="330.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (3 samples, 0.06%)</title><rect x="327.0" y="323.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (3 samples, 0.06%)</title><rect x="327.0" y="307.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="330.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (3 samples, 0.06%)</title><rect x="327.0" y="291.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.06%)</title><rect x="327.0" y="275.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.04%)</title><rect x="327.6" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.6" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.04%)</title><rect x="327.6" y="451.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.6" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=6988] (600 samples, 11.08%)</title><rect x="328.5" y="579.0" width="130.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="331.5" y="590.0">[NIO Selector #2..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (599 samples, 11.07%)</title><rect x="328.7" y="563.0" width="130.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="331.7" y="574.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/Session.process (597 samples, 11.03%)</title><rect x="329.1" y="547.0" width="130.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.1" y="558.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (597 samples, 11.03%)</title><rect x="329.1" y="531.0" width="130.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.1" y="542.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (595 samples, 10.99%)</title><rect x="329.1" y="515.0" width="129.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="332.1" y="526.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (595 samples, 10.99%)</title><rect x="329.1" y="499.0" width="129.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="332.1" y="510.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (595 samples, 10.99%)</title><rect x="329.1" y="483.0" width="129.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="332.1" y="494.0">one/nio/http/Htt..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (595 samples, 10.99%)</title><rect x="329.1" y="467.0" width="129.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="332.1" y="478.0">RequestHandler0_..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (594 samples, 10.97%)</title><rect x="329.4" y="451.0" width="129.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="332.4" y="462.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (4 samples, 0.07%)</title><rect x="329.4" y="435.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="332.4" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (4 samples, 0.07%)</title><rect x="329.4" y="419.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="332.4" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (4 samples, 0.07%)</title><rect x="329.4" y="403.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.4" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (4 samples, 0.07%)</title><rect x="329.4" y="387.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="332.4" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (4 samples, 0.07%)</title><rect x="329.4" y="371.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="332.4" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (4 samples, 0.07%)</title><rect x="329.4" y="355.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="332.4" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (4 samples, 0.07%)</title><rect x="329.4" y="339.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="332.4" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (4 samples, 0.07%)</title><rect x="329.4" y="323.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.4" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (4 samples, 0.07%)</title><rect x="329.4" y="307.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="332.4" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (3 samples, 0.06%)</title><rect x="329.4" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.4" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (3 samples, 0.06%)</title><rect x="329.4" y="275.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="332.4" y="286.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (3 samples, 0.06%)</title><rect x="329.4" y="259.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="332.4" y="270.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (3 samples, 0.06%)</title><rect x="329.4" y="243.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="332.4" y="254.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (2 samples, 0.04%)</title><rect x="329.6" y="227.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (590 samples, 10.90%)</title><rect x="330.2" y="435.0" width="128.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="333.2" y="446.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (590 samples, 10.90%)</title><rect x="330.2" y="419.0" width="128.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="333.2" y="430.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (17 samples, 0.31%)</title><rect x="330.2" y="403.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (17 samples, 0.31%)</title><rect x="330.2" y="387.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (17 samples, 0.31%)</title><rect x="330.2" y="371.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (17 samples, 0.31%)</title><rect x="330.2" y="355.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="333.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (17 samples, 0.31%)</title><rect x="330.2" y="339.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (16 samples, 0.30%)</title><rect x="330.2" y="323.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="333.2" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.04%)</title><rect x="330.2" y="307.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.04%)</title><rect x="330.2" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="333.2" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2 samples, 0.04%)</title><rect x="330.2" y="275.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.04%)</title><rect x="330.2" y="259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="333.2" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (14 samples, 0.26%)</title><rect x="330.7" y="307.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (14 samples, 0.26%)</title><rect x="330.7" y="291.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="333.7" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (14 samples, 0.26%)</title><rect x="330.7" y="275.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.7" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (14 samples, 0.26%)</title><rect x="330.7" y="259.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="333.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.26%)</title><rect x="330.7" y="243.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="333.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.26%)</title><rect x="330.7" y="227.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="333.7" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (13 samples, 0.24%)</title><rect x="330.7" y="211.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="333.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (13 samples, 0.24%)</title><rect x="330.7" y="195.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="333.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (13 samples, 0.24%)</title><rect x="330.7" y="179.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="333.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (13 samples, 0.24%)</title><rect x="330.7" y="163.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="333.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (5 samples, 0.09%)</title><rect x="330.9" y="147.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="333.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.07%)</title><rect x="331.1" y="131.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="334.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.07%)</title><rect x="331.1" y="115.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="334.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.06%)</title><rect x="331.3" y="99.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="334.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.04%)</title><rect x="331.5" y="83.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="334.5" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.04%)</title><rect x="331.5" y="67.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.5" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.04%)</title><rect x="331.5" y="51.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="334.5" y="62.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.04%)</title><rect x="331.5" y="35.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="334.5" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.13%)</title><rect x="332.0" y="147.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="335.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.13%)</title><rect x="332.0" y="131.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="335.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.04%)</title><rect x="332.0" y="115.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="335.0" y="126.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.04%)</title><rect x="332.0" y="99.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="335.0" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.07%)</title><rect x="332.4" y="115.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="335.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.07%)</title><rect x="332.4" y="99.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.4" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.07%)</title><rect x="332.4" y="83.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.4" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.07%)</title><rect x="332.4" y="67.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="335.4" y="78.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.04%)</title><rect x="332.6" y="51.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="335.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (573 samples, 10.59%)</title><rect x="333.9" y="403.0" width="124.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="336.9" y="414.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (573 samples, 10.59%)</title><rect x="333.9" y="387.0" width="124.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="336.9" y="398.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (572 samples, 10.57%)</title><rect x="334.2" y="371.0" width="124.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="337.2" y="382.0">ru/mail/polis/d..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (28 samples, 0.52%)</title><rect x="334.2" y="355.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="337.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (28 samples, 0.52%)</title><rect x="334.2" y="339.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="337.2" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (28 samples, 0.52%)</title><rect x="334.2" y="323.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="337.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (28 samples, 0.52%)</title><rect x="334.2" y="307.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="337.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (28 samples, 0.52%)</title><rect x="334.2" y="291.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="337.2" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (28 samples, 0.52%)</title><rect x="334.2" y="275.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="337.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (28 samples, 0.52%)</title><rect x="334.2" y="259.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="337.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (28 samples, 0.52%)</title><rect x="334.2" y="243.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="337.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (25 samples, 0.46%)</title><rect x="334.2" y="227.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="337.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (25 samples, 0.46%)</title><rect x="334.2" y="211.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="337.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (25 samples, 0.46%)</title><rect x="334.2" y="195.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="337.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (25 samples, 0.46%)</title><rect x="334.2" y="179.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="337.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (8 samples, 0.15%)</title><rect x="334.4" y="163.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="337.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (8 samples, 0.15%)</title><rect x="334.4" y="147.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="337.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (8 samples, 0.15%)</title><rect x="334.4" y="131.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="337.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (8 samples, 0.15%)</title><rect x="334.4" y="115.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="337.4" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.04%)</title><rect x="334.4" y="99.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="337.4" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.04%)</title><rect x="334.4" y="83.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="337.4" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.11%)</title><rect x="334.8" y="99.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="337.8" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.11%)</title><rect x="334.8" y="83.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="337.8" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.11%)</title><rect x="334.8" y="67.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="337.8" y="78.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.07%)</title><rect x="334.8" y="51.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="337.8" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (16 samples, 0.30%)</title><rect x="336.1" y="163.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="339.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (16 samples, 0.30%)</title><rect x="336.1" y="147.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="339.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.04%)</title><rect x="336.3" y="131.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="339.3" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.04%)</title><rect x="336.3" y="115.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.22%)</title><rect x="336.8" y="131.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="339.8" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.04%)</title><rect x="336.8" y="115.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="339.8" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.04%)</title><rect x="336.8" y="99.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.8" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.04%)</title><rect x="336.8" y="83.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="339.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.04%)</title><rect x="336.8" y="67.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="339.8" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (2 samples, 0.04%)</title><rect x="336.8" y="51.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="339.8" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (8 samples, 0.15%)</title><rect x="337.2" y="115.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (8 samples, 0.15%)</title><rect x="337.2" y="99.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (8 samples, 0.15%)</title><rect x="337.2" y="83.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="340.2" y="94.0"></text>
</g>
<g>
<title>__pread (7 samples, 0.13%)</title><rect x="337.4" y="67.0" width="1.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="340.4" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="339.0" y="115.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="342.0" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="339.0" y="99.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.0" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.04%)</title><rect x="339.0" y="83.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="342.0" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.04%)</title><rect x="339.0" y="67.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="342.0" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="339.6" y="227.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="342.6" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="339.6" y="211.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="342.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="339.6" y="195.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="342.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="339.6" y="179.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="342.6" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="339.8" y="163.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="342.8" y="174.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (541 samples, 9.99%)</title><rect x="340.3" y="355.0" width="117.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="343.3" y="366.0">java/util/Coll..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (541 samples, 9.99%)</title><rect x="340.3" y="339.0" width="117.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="343.3" y="350.0">java/lang/Iter..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (539 samples, 9.96%)</title><rect x="340.7" y="323.0" width="117.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="343.7" y="334.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (539 samples, 9.96%)</title><rect x="340.7" y="307.0" width="117.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="343.7" y="318.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (539 samples, 9.96%)</title><rect x="340.7" y="291.0" width="117.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.7" y="302.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (539 samples, 9.96%)</title><rect x="340.7" y="275.0" width="117.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.7" y="286.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (539 samples, 9.96%)</title><rect x="340.7" y="259.0" width="117.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="343.7" y="270.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.18%)</title><rect x="340.7" y="243.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="343.7" y="254.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.18%)</title><rect x="340.7" y="227.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="343.7" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.06%)</title><rect x="342.2" y="211.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="345.2" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.04%)</title><rect x="342.4" y="195.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="345.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (529 samples, 9.77%)</title><rect x="342.9" y="243.0" width="115.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="345.9" y="254.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (18 samples, 0.33%)</title><rect x="343.5" y="227.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="346.5" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.20%)</title><rect x="345.1" y="211.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="348.1" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.20%)</title><rect x="345.1" y="195.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="348.1" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.15%)</title><rect x="345.5" y="179.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="348.5" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.06%)</title><rect x="345.7" y="163.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="348.7" y="174.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="345.9" y="147.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="348.9" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="346.4" y="163.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="349.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.04%)</title><rect x="346.8" y="163.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="349.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (154 samples, 2.85%)</title><rect x="347.5" y="227.0" width="33.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.5" y="238.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (11 samples, 0.20%)</title><rect x="347.7" y="211.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="350.7" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.20%)</title><rect x="347.7" y="195.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="350.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.18%)</title><rect x="347.9" y="179.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="350.9" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="348.3" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="351.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.07%)</title><rect x="348.3" y="147.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="351.3" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.07%)</title><rect x="348.3" y="131.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="351.3" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.07%)</title><rect x="348.3" y="115.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="351.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.07%)</title><rect x="349.2" y="163.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="352.2" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.20%)</title><rect x="350.1" y="211.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="353.1" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.17%)</title><rect x="350.5" y="195.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="353.5" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.17%)</title><rect x="350.5" y="179.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="353.5" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="351.4" y="163.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="354.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.07%)</title><rect x="351.6" y="147.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="354.6" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.07%)</title><rect x="351.6" y="131.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="354.6" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.07%)</title><rect x="351.6" y="115.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="354.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (128 samples, 2.36%)</title><rect x="352.5" y="211.0" width="27.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="355.5" y="222.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (128 samples, 2.36%)</title><rect x="352.5" y="195.0" width="27.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="355.5" y="206.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (119 samples, 2.20%)</title><rect x="353.3" y="179.0" width="26.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="356.3" y="190.0">s..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (11 samples, 0.20%)</title><rect x="353.6" y="163.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="356.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (11 samples, 0.20%)</title><rect x="353.6" y="147.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.6" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (8 samples, 0.15%)</title><rect x="354.0" y="131.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="357.0" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.06%)</title><rect x="355.1" y="115.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="358.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (94 samples, 1.74%)</title><rect x="356.0" y="163.0" width="20.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="359.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (94 samples, 1.74%)</title><rect x="356.0" y="147.0" width="20.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="359.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (94 samples, 1.74%)</title><rect x="356.0" y="131.0" width="20.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="359.0" y="142.0"></text>
</g>
<g>
<title>__pread (86 samples, 1.59%)</title><rect x="357.0" y="115.0" width="18.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="360.0" y="126.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.06%)</title><rect x="375.8" y="115.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="378.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.09%)</title><rect x="376.4" y="163.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="379.4" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.09%)</title><rect x="376.4" y="147.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="379.4" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.09%)</title><rect x="376.4" y="131.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="379.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (5 samples, 0.09%)</title><rect x="376.4" y="115.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="379.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (8 samples, 0.15%)</title><rect x="377.5" y="163.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="380.5" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.15%)</title><rect x="377.5" y="147.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="380.5" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (8 samples, 0.15%)</title><rect x="377.5" y="131.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="380.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (8 samples, 0.15%)</title><rect x="377.5" y="115.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="380.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.07%)</title><rect x="379.3" y="179.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="382.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.06%)</title><rect x="379.5" y="163.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.06%)</title><rect x="380.4" y="211.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="383.4" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (353 samples, 6.52%)</title><rect x="381.0" y="227.0" width="77.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="384.0" y="238.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (350 samples, 6.47%)</title><rect x="381.7" y="211.0" width="76.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="384.7" y="222.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (17 samples, 0.31%)</title><rect x="382.1" y="195.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="385.1" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (17 samples, 0.31%)</title><rect x="382.1" y="179.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="385.1" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (8 samples, 0.15%)</title><rect x="383.9" y="163.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="386.9" y="174.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (8 samples, 0.15%)</title><rect x="383.9" y="147.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.9" y="158.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (8 samples, 0.15%)</title><rect x="383.9" y="131.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.9" y="142.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.04%)</title><rect x="385.2" y="115.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="388.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.04%)</title><rect x="385.8" y="195.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="388.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (288 samples, 5.32%)</title><rect x="386.3" y="195.0" width="62.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.3" y="206.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (17 samples, 0.31%)</title><rect x="387.1" y="179.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="390.1" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (17 samples, 0.31%)</title><rect x="387.1" y="163.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="390.1" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (7 samples, 0.13%)</title><rect x="388.0" y="147.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="391.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (6 samples, 0.11%)</title><rect x="389.5" y="147.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="392.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (6 samples, 0.11%)</title><rect x="389.5" y="131.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="392.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (6 samples, 0.11%)</title><rect x="389.5" y="115.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="392.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (2 samples, 0.04%)</title><rect x="389.5" y="99.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="392.5" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (4 samples, 0.07%)</title><rect x="390.0" y="99.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="393.0" y="110.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (2 samples, 0.04%)</title><rect x="390.2" y="83.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="393.2" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (240 samples, 4.43%)</title><rect x="390.8" y="179.0" width="52.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="393.8" y="190.0">sun/n..</text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.04%)</title><rect x="391.1" y="163.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="394.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (237 samples, 4.38%)</title><rect x="391.5" y="163.0" width="51.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="394.5" y="174.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (236 samples, 4.36%)</title><rect x="391.7" y="147.0" width="51.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="394.7" y="158.0">sun/n..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (4 samples, 0.07%)</title><rect x="393.9" y="131.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="396.9" y="142.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.04%)</title><rect x="394.3" y="115.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="397.3" y="126.0"></text>
</g>
<g>
<title>__pread (216 samples, 3.99%)</title><rect x="394.8" y="131.0" width="47.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="397.8" y="142.0">__pr..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.07%)</title><rect x="441.8" y="131.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="444.8" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.04%)</title><rect x="442.7" y="131.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="445.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (15 samples, 0.28%)</title><rect x="443.2" y="179.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="446.2" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (15 samples, 0.28%)</title><rect x="443.2" y="163.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="446.2" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (15 samples, 0.28%)</title><rect x="443.2" y="147.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="446.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (15 samples, 0.28%)</title><rect x="443.2" y="131.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="446.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (12 samples, 0.22%)</title><rect x="446.4" y="179.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="449.4" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (12 samples, 0.22%)</title><rect x="446.4" y="163.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="449.4" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (12 samples, 0.22%)</title><rect x="446.4" y="147.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="449.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (12 samples, 0.22%)</title><rect x="446.4" y="131.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="449.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (33 samples, 0.61%)</title><rect x="449.0" y="195.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="452.0" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="453.4" y="179.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="456.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (11 samples, 0.20%)</title><rect x="453.8" y="179.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.8" y="190.0"></text>
</g>
<g>
<title>pthread_self (2 samples, 0.04%)</title><rect x="455.8" y="163.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="458.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (8 samples, 0.15%)</title><rect x="456.2" y="195.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="459.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.06%)</title><rect x="458.2" y="355.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="461.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.06%)</title><rect x="458.2" y="339.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="461.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.06%)</title><rect x="458.2" y="323.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.06%)</title><rect x="458.2" y="307.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.06%)</title><rect x="458.2" y="291.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="461.2" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3 samples, 0.06%)</title><rect x="458.2" y="275.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="461.2" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 0.06%)</title><rect x="458.2" y="259.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="461.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="458.2" y="243.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="458.2" y="227.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.2" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.06%)</title><rect x="458.2" y="211.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="461.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.06%)</title><rect x="458.2" y="195.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.06%)</title><rect x="458.2" y="179.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (3 samples, 0.06%)</title><rect x="458.2" y="163.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.06%)</title><rect x="458.2" y="147.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.06%)</title><rect x="458.2" y="131.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.06%)</title><rect x="458.2" y="115.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.06%)</title><rect x="458.2" y="99.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.06%)</title><rect x="458.2" y="83.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.2" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.06%)</title><rect x="458.2" y="67.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="461.2" y="78.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.06%)</title><rect x="458.2" y="51.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="461.2" y="62.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.04%)</title><rect x="458.8" y="515.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="461.8" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.04%)</title><rect x="458.8" y="499.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.8" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.04%)</title><rect x="458.8" y="483.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="461.8" y="494.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=6989] (665 samples, 12.29%)</title><rect x="459.3" y="579.0" width="145.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="462.3" y="590.0">[NIO Selector #3 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (665 samples, 12.29%)</title><rect x="459.3" y="563.0" width="145.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="462.3" y="574.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/Session.process (665 samples, 12.29%)</title><rect x="459.3" y="547.0" width="145.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.3" y="558.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (665 samples, 12.29%)</title><rect x="459.3" y="531.0" width="145.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="462.3" y="542.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (664 samples, 12.27%)</title><rect x="459.3" y="515.0" width="144.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="462.3" y="526.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (663 samples, 12.25%)</title><rect x="459.5" y="499.0" width="144.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="462.5" y="510.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (663 samples, 12.25%)</title><rect x="459.5" y="483.0" width="144.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="462.5" y="494.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (663 samples, 12.25%)</title><rect x="459.5" y="467.0" width="144.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="462.5" y="478.0">RequestHandler0_re..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.07%)</title><rect x="459.5" y="451.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="462.5" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.06%)</title><rect x="459.7" y="435.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="462.7" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.06%)</title><rect x="459.7" y="419.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="462.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.06%)</title><rect x="459.7" y="403.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="462.7" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.06%)</title><rect x="459.7" y="387.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="462.7" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.06%)</title><rect x="459.7" y="371.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="462.7" y="382.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.06%)</title><rect x="459.7" y="355.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="462.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (659 samples, 12.17%)</title><rect x="460.4" y="451.0" width="143.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="463.4" y="462.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (5 samples, 0.09%)</title><rect x="460.4" y="435.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="463.4" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (5 samples, 0.09%)</title><rect x="460.4" y="419.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="463.4" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (5 samples, 0.09%)</title><rect x="460.4" y="403.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="463.4" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (5 samples, 0.09%)</title><rect x="460.4" y="387.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="463.4" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (5 samples, 0.09%)</title><rect x="460.4" y="371.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="463.4" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (5 samples, 0.09%)</title><rect x="460.4" y="355.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.4" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (5 samples, 0.09%)</title><rect x="460.4" y="339.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.4" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (5 samples, 0.09%)</title><rect x="460.4" y="323.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.4" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (5 samples, 0.09%)</title><rect x="460.4" y="307.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="463.4" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (3 samples, 0.06%)</title><rect x="460.6" y="291.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.6" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (3 samples, 0.06%)</title><rect x="460.6" y="275.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.6" y="286.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (3 samples, 0.06%)</title><rect x="460.6" y="259.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.6" y="270.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (3 samples, 0.06%)</title><rect x="460.6" y="243.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.6" y="254.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (3 samples, 0.06%)</title><rect x="460.6" y="227.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.6" y="238.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (3 samples, 0.06%)</title><rect x="460.6" y="211.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.6" y="222.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (3 samples, 0.06%)</title><rect x="460.6" y="195.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.6" y="206.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (3 samples, 0.06%)</title><rect x="460.6" y="179.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.6" y="190.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (3 samples, 0.06%)</title><rect x="460.6" y="163.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="463.6" y="174.0"></text>
</g>
<g>
<title>writeBytes (3 samples, 0.06%)</title><rect x="460.6" y="147.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="463.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (654 samples, 12.08%)</title><rect x="461.5" y="435.0" width="142.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="464.5" y="446.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (654 samples, 12.08%)</title><rect x="461.5" y="419.0" width="142.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="464.5" y="430.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (19 samples, 0.35%)</title><rect x="461.5" y="403.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="464.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (19 samples, 0.35%)</title><rect x="461.5" y="387.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="464.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (19 samples, 0.35%)</title><rect x="461.5" y="371.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="464.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (19 samples, 0.35%)</title><rect x="461.5" y="355.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="464.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (19 samples, 0.35%)</title><rect x="461.5" y="339.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="464.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (17 samples, 0.31%)</title><rect x="461.5" y="323.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="464.5" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.06%)</title><rect x="461.5" y="307.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="464.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.06%)</title><rect x="461.5" y="291.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="464.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.06%)</title><rect x="461.5" y="275.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="464.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="461.5" y="259.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="464.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="461.5" y="243.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="464.5" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="461.5" y="227.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="464.5" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="461.5" y="211.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="464.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="461.5" y="195.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="464.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="461.5" y="179.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.5" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="461.5" y="163.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="464.5" y="174.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (14 samples, 0.26%)</title><rect x="462.1" y="307.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="465.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (14 samples, 0.26%)</title><rect x="462.1" y="291.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="465.1" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (14 samples, 0.26%)</title><rect x="462.1" y="275.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.1" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (14 samples, 0.26%)</title><rect x="462.1" y="259.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="465.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.26%)</title><rect x="462.1" y="243.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="465.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.26%)</title><rect x="462.1" y="227.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="465.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (14 samples, 0.26%)</title><rect x="462.1" y="211.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (14 samples, 0.26%)</title><rect x="462.1" y="195.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="465.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (14 samples, 0.26%)</title><rect x="462.1" y="179.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="465.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (14 samples, 0.26%)</title><rect x="462.1" y="163.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="465.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (10 samples, 0.18%)</title><rect x="462.1" y="147.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="465.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (8 samples, 0.15%)</title><rect x="462.6" y="131.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="465.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (8 samples, 0.15%)</title><rect x="462.6" y="115.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="465.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.11%)</title><rect x="462.8" y="99.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="465.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.04%)</title><rect x="462.8" y="83.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="465.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.04%)</title><rect x="462.8" y="67.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="465.8" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.04%)</title><rect x="462.8" y="51.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="465.8" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.07%)</title><rect x="463.2" y="83.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="466.2" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.07%)</title><rect x="463.2" y="67.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.2" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.07%)</title><rect x="463.2" y="51.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.2" y="62.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.07%)</title><rect x="463.2" y="35.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="466.2" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.07%)</title><rect x="464.3" y="147.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="467.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.07%)</title><rect x="464.3" y="131.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="467.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.07%)</title><rect x="464.3" y="115.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="467.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.07%)</title><rect x="464.3" y="99.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="467.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.07%)</title><rect x="464.3" y="83.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="467.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.07%)</title><rect x="464.3" y="67.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="467.3" y="78.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.06%)</title><rect x="464.3" y="51.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="467.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (635 samples, 11.73%)</title><rect x="465.6" y="403.0" width="138.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="468.6" y="414.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (635 samples, 11.73%)</title><rect x="465.6" y="387.0" width="138.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="468.6" y="398.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (632 samples, 11.68%)</title><rect x="465.8" y="371.0" width="137.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="468.8" y="382.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (43 samples, 0.79%)</title><rect x="465.8" y="355.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="468.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (43 samples, 0.79%)</title><rect x="465.8" y="339.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (42 samples, 0.78%)</title><rect x="466.0" y="323.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.0" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (42 samples, 0.78%)</title><rect x="466.0" y="307.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="469.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (42 samples, 0.78%)</title><rect x="466.0" y="291.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="469.0" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (42 samples, 0.78%)</title><rect x="466.0" y="275.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="469.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (42 samples, 0.78%)</title><rect x="466.0" y="259.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="469.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (42 samples, 0.78%)</title><rect x="466.0" y="243.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="469.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (41 samples, 0.76%)</title><rect x="466.0" y="227.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="469.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (41 samples, 0.76%)</title><rect x="466.0" y="211.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (41 samples, 0.76%)</title><rect x="466.0" y="195.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="469.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (41 samples, 0.76%)</title><rect x="466.0" y="179.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (14 samples, 0.26%)</title><rect x="466.3" y="163.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.3" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="466.3" y="147.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="469.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (12 samples, 0.22%)</title><rect x="466.7" y="147.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (12 samples, 0.22%)</title><rect x="466.7" y="131.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.18%)</title><rect x="467.1" y="115.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="470.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.17%)</title><rect x="467.1" y="99.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="470.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 0.17%)</title><rect x="467.1" y="83.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="470.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.17%)</title><rect x="467.1" y="67.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.1" y="78.0"></text>
</g>
<g>
<title>__pread (7 samples, 0.13%)</title><rect x="467.1" y="51.0" width="1.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="470.1" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (26 samples, 0.48%)</title><rect x="469.3" y="163.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="472.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (26 samples, 0.48%)</title><rect x="469.3" y="147.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="472.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.06%)</title><rect x="469.3" y="131.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="472.3" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.06%)</title><rect x="469.3" y="115.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="472.3" y="126.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.04%)</title><rect x="469.5" y="99.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="472.5" y="110.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.04%)</title><rect x="469.5" y="83.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.5" y="94.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.04%)</title><rect x="469.5" y="67.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.5" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.04%)</title><rect x="470.0" y="131.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="473.0" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.04%)</title><rect x="470.0" y="115.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="473.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (20 samples, 0.37%)</title><rect x="470.4" y="131.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="473.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (15 samples, 0.28%)</title><rect x="470.6" y="115.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (15 samples, 0.28%)</title><rect x="470.6" y="99.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="473.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (15 samples, 0.28%)</title><rect x="470.6" y="83.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="473.6" y="94.0"></text>
</g>
<g>
<title>__pread (11 samples, 0.20%)</title><rect x="471.3" y="67.0" width="2.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="474.3" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.06%)</title><rect x="473.9" y="115.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="476.9" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.06%)</title><rect x="473.9" y="99.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.9" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.06%)</title><rect x="473.9" y="83.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.06%)</title><rect x="473.9" y="67.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="476.9" y="78.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (584 samples, 10.79%)</title><rect x="475.2" y="355.0" width="127.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="478.2" y="366.0">java/util/Collec..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (584 samples, 10.79%)</title><rect x="475.2" y="339.0" width="127.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="478.2" y="350.0">java/lang/Iterab..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (583 samples, 10.77%)</title><rect x="475.4" y="323.0" width="127.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="478.4" y="334.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (583 samples, 10.77%)</title><rect x="475.4" y="307.0" width="127.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="478.4" y="318.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (583 samples, 10.77%)</title><rect x="475.4" y="291.0" width="127.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="478.4" y="302.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (583 samples, 10.77%)</title><rect x="475.4" y="275.0" width="127.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="478.4" y="286.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (583 samples, 10.77%)</title><rect x="475.4" y="259.0" width="127.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="478.4" y="270.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (17 samples, 0.31%)</title><rect x="475.4" y="243.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="478.4" y="254.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (17 samples, 0.31%)</title><rect x="475.4" y="227.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.09%)</title><rect x="478.0" y="211.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="481.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (566 samples, 10.46%)</title><rect x="479.1" y="243.0" width="123.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="482.1" y="254.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.06%)</title><rect x="479.3" y="227.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="479.3" y="211.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="482.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="479.6" y="195.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="482.6" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (17 samples, 0.31%)</title><rect x="480.0" y="227.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="483.0" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (15 samples, 0.28%)</title><rect x="480.4" y="211.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="483.4" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (14 samples, 0.26%)</title><rect x="480.6" y="195.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="483.6" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (12 samples, 0.22%)</title><rect x="481.1" y="179.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="484.1" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.13%)</title><rect x="481.7" y="163.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="484.7" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.06%)</title><rect x="481.7" y="147.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="484.7" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.04%)</title><rect x="482.0" y="131.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="485.0" y="142.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="482.4" y="147.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="485.4" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="483.3" y="163.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="483.3" y="147.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.3" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.04%)</title><rect x="483.3" y="131.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="486.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (194 samples, 3.58%)</title><rect x="483.7" y="227.0" width="42.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.7" y="238.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.09%)</title><rect x="483.9" y="211.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.9" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="483.9" y="195.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="486.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="483.9" y="179.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="486.9" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="483.9" y="163.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.9" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="483.9" y="147.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.9" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="483.9" y="131.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="486.9" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.04%)</title><rect x="483.9" y="115.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="486.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.06%)</title><rect x="484.4" y="163.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.4" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (21 samples, 0.39%)</title><rect x="485.0" y="211.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="488.0" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (18 samples, 0.33%)</title><rect x="485.7" y="195.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="488.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (18 samples, 0.33%)</title><rect x="485.7" y="179.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="488.7" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (12 samples, 0.22%)</title><rect x="487.0" y="163.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.0" y="174.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (5 samples, 0.09%)</title><rect x="487.0" y="147.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (5 samples, 0.09%)</title><rect x="487.0" y="131.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.13%)</title><rect x="488.1" y="147.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="491.1" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.13%)</title><rect x="488.1" y="131.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="491.1" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.13%)</title><rect x="488.1" y="115.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="491.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (166 samples, 3.07%)</title><rect x="489.6" y="211.0" width="36.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="492.6" y="222.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (166 samples, 3.07%)</title><rect x="489.6" y="195.0" width="36.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="492.6" y="206.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.06%)</title><rect x="489.8" y="179.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="492.8" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.06%)</title><rect x="489.8" y="163.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="492.8" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.04%)</title><rect x="490.0" y="147.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="493.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (156 samples, 2.88%)</title><rect x="490.5" y="179.0" width="34.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="493.5" y="190.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (14 samples, 0.26%)</title><rect x="490.5" y="163.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (13 samples, 0.24%)</title><rect x="490.7" y="147.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="493.7" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (8 samples, 0.15%)</title><rect x="491.5" y="131.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="494.5" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.07%)</title><rect x="492.4" y="115.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="495.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (119 samples, 2.20%)</title><rect x="493.5" y="163.0" width="26.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="496.5" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (118 samples, 2.18%)</title><rect x="493.7" y="147.0" width="25.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="496.7" y="158.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (117 samples, 2.16%)</title><rect x="493.9" y="131.0" width="25.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="496.9" y="142.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (3 samples, 0.06%)</title><rect x="494.8" y="115.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="497.8" y="126.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.04%)</title><rect x="495.0" y="99.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="498.0" y="110.0"></text>
</g>
<g>
<title>__pread (99 samples, 1.83%)</title><rect x="495.5" y="115.0" width="21.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="498.5" y="126.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.07%)</title><rect x="517.1" y="115.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="520.1" y="126.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (6 samples, 0.11%)</title><rect x="517.9" y="115.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="520.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.11%)</title><rect x="519.5" y="163.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="522.5" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.11%)</title><rect x="519.5" y="147.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="522.5" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (6 samples, 0.11%)</title><rect x="519.5" y="131.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (6 samples, 0.11%)</title><rect x="519.5" y="115.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="522.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (17 samples, 0.31%)</title><rect x="520.8" y="163.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="523.8" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (17 samples, 0.31%)</title><rect x="520.8" y="147.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="523.8" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (17 samples, 0.31%)</title><rect x="520.8" y="131.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="523.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (17 samples, 0.31%)</title><rect x="520.8" y="115.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="523.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.09%)</title><rect x="524.5" y="179.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.09%)</title><rect x="524.5" y="163.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="527.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (351 samples, 6.48%)</title><rect x="526.0" y="227.0" width="76.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="529.0" y="238.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (347 samples, 6.41%)</title><rect x="526.9" y="211.0" width="75.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="529.9" y="222.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (19 samples, 0.35%)</title><rect x="527.1" y="195.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="530.1" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (18 samples, 0.33%)</title><rect x="527.3" y="179.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="530.3" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.13%)</title><rect x="529.3" y="163.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="532.3" y="174.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (6 samples, 0.11%)</title><rect x="529.5" y="147.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.5" y="158.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (6 samples, 0.11%)</title><rect x="529.5" y="131.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="532.5" y="142.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.04%)</title><rect x="530.4" y="115.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="533.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.04%)</title><rect x="530.8" y="163.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="533.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.04%)</title><rect x="531.2" y="195.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="534.2" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.04%)</title><rect x="531.2" y="179.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.2" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.04%)</title><rect x="531.2" y="163.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="534.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (281 samples, 5.19%)</title><rect x="531.7" y="195.0" width="61.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="534.7" y="206.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (29 samples, 0.54%)</title><rect x="533.2" y="179.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="536.2" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (29 samples, 0.54%)</title><rect x="533.2" y="163.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="536.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (21 samples, 0.39%)</title><rect x="533.6" y="147.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="536.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (6 samples, 0.11%)</title><rect x="538.2" y="147.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="541.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (6 samples, 0.11%)</title><rect x="538.2" y="131.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (6 samples, 0.11%)</title><rect x="538.2" y="115.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="541.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (3 samples, 0.06%)</title><rect x="538.2" y="99.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.2" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (2 samples, 0.04%)</title><rect x="538.4" y="83.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="541.4" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (3 samples, 0.06%)</title><rect x="538.9" y="99.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="541.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (205 samples, 3.79%)</title><rect x="539.5" y="179.0" width="44.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="542.5" y="190.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (204 samples, 3.77%)</title><rect x="539.7" y="163.0" width="44.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="542.7" y="174.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (204 samples, 3.77%)</title><rect x="539.7" y="147.0" width="44.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="542.7" y="158.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.04%)</title><rect x="541.5" y="131.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="544.5" y="142.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.04%)</title><rect x="541.5" y="115.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="544.5" y="126.0"></text>
</g>
<g>
<title>__pread (184 samples, 3.40%)</title><rect x="541.9" y="131.0" width="40.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="544.9" y="142.0">__p..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.09%)</title><rect x="582.0" y="131.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="585.0" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.07%)</title><rect x="583.1" y="131.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="586.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (14 samples, 0.26%)</title><rect x="584.2" y="179.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="587.2" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (14 samples, 0.26%)</title><rect x="584.2" y="163.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="587.2" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (14 samples, 0.26%)</title><rect x="584.2" y="147.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="587.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (14 samples, 0.26%)</title><rect x="584.2" y="131.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="587.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (26 samples, 0.48%)</title><rect x="587.2" y="179.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="590.2" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (26 samples, 0.48%)</title><rect x="587.2" y="163.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="590.2" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (26 samples, 0.48%)</title><rect x="587.2" y="147.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="590.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (26 samples, 0.48%)</title><rect x="587.2" y="131.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="590.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (33 samples, 0.61%)</title><rect x="592.9" y="195.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="595.9" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (12 samples, 0.22%)</title><rect x="597.5" y="179.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="600.5" y="190.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="599.5" y="163.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="602.5" y="174.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (2 samples, 0.04%)</title><rect x="599.5" y="147.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="602.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (11 samples, 0.20%)</title><rect x="600.1" y="195.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="603.1" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.06%)</title><rect x="601.9" y="179.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="604.9" y="190.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.06%)</title><rect x="601.9" y="163.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="604.9" y="174.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (2 samples, 0.04%)</title><rect x="602.1" y="147.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="605.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4 samples, 0.07%)</title><rect x="602.7" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (4 samples, 0.07%)</title><rect x="602.7" y="339.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="605.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.07%)</title><rect x="602.7" y="323.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="605.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.07%)</title><rect x="602.7" y="307.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.07%)</title><rect x="602.7" y="291.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="605.7" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.07%)</title><rect x="602.7" y="275.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.7" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.07%)</title><rect x="602.7" y="259.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="605.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.07%)</title><rect x="602.7" y="243.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="605.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.07%)</title><rect x="602.7" y="227.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.7" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4 samples, 0.07%)</title><rect x="602.7" y="211.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="605.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (4 samples, 0.07%)</title><rect x="602.7" y="195.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="605.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (4 samples, 0.07%)</title><rect x="602.7" y="179.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (4 samples, 0.07%)</title><rect x="602.7" y="163.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="605.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.04%)</title><rect x="602.7" y="147.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.04%)</title><rect x="603.2" y="147.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.04%)</title><rect x="603.2" y="131.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.04%)</title><rect x="603.2" y="115.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.04%)</title><rect x="603.2" y="99.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (2 samples, 0.04%)</title><rect x="603.6" y="371.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="606.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (2 samples, 0.04%)</title><rect x="603.6" y="355.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="603.6" y="339.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (2 samples, 0.04%)</title><rect x="603.6" y="323.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (2 samples, 0.04%)</title><rect x="603.6" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (2 samples, 0.04%)</title><rect x="603.6" y="291.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="606.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (2 samples, 0.04%)</title><rect x="603.6" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.04%)</title><rect x="603.6" y="259.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.6" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="603.6" y="243.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.6" y="254.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=6990] (683 samples, 12.62%)</title><rect x="604.3" y="579.0" width="148.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="607.3" y="590.0">[NIO Selector #4 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (683 samples, 12.62%)</title><rect x="604.3" y="563.0" width="148.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="607.3" y="574.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/Session.process (683 samples, 12.62%)</title><rect x="604.3" y="547.0" width="148.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="607.3" y="558.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (683 samples, 12.62%)</title><rect x="604.3" y="531.0" width="148.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="607.3" y="542.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (682 samples, 12.60%)</title><rect x="604.3" y="515.0" width="148.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="607.3" y="526.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (681 samples, 12.58%)</title><rect x="604.3" y="499.0" width="148.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.3" y="510.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (681 samples, 12.58%)</title><rect x="604.3" y="483.0" width="148.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="607.3" y="494.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (681 samples, 12.58%)</title><rect x="604.3" y="467.0" width="148.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.3" y="478.0">RequestHandler0_res..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.06%)</title><rect x="604.3" y="451.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (678 samples, 12.53%)</title><rect x="604.9" y="451.0" width="147.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.9" y="462.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (5 samples, 0.09%)</title><rect x="604.9" y="435.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.9" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (5 samples, 0.09%)</title><rect x="604.9" y="419.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="607.9" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (5 samples, 0.09%)</title><rect x="604.9" y="403.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.9" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (5 samples, 0.09%)</title><rect x="604.9" y="387.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.9" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (5 samples, 0.09%)</title><rect x="604.9" y="371.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.9" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (5 samples, 0.09%)</title><rect x="604.9" y="355.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.9" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (5 samples, 0.09%)</title><rect x="604.9" y="339.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.9" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (5 samples, 0.09%)</title><rect x="604.9" y="323.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.9" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (5 samples, 0.09%)</title><rect x="604.9" y="307.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="607.9" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (3 samples, 0.06%)</title><rect x="605.3" y="291.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="608.3" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.04%)</title><rect x="605.3" y="275.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="608.3" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (2 samples, 0.04%)</title><rect x="605.3" y="259.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (673 samples, 12.43%)</title><rect x="606.0" y="435.0" width="146.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="609.0" y="446.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (673 samples, 12.43%)</title><rect x="606.0" y="419.0" width="146.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="609.0" y="430.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (12 samples, 0.22%)</title><rect x="606.0" y="403.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (12 samples, 0.22%)</title><rect x="606.0" y="387.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="609.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (12 samples, 0.22%)</title><rect x="606.0" y="371.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="609.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (12 samples, 0.22%)</title><rect x="606.0" y="355.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="609.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (12 samples, 0.22%)</title><rect x="606.0" y="339.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="609.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.22%)</title><rect x="606.0" y="323.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="609.0" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.04%)</title><rect x="606.0" y="307.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="609.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.04%)</title><rect x="606.0" y="291.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="609.0" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2 samples, 0.04%)</title><rect x="606.0" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="609.0" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (10 samples, 0.18%)</title><rect x="606.4" y="307.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="609.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (10 samples, 0.18%)</title><rect x="606.4" y="291.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="609.4" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (10 samples, 0.18%)</title><rect x="606.4" y="275.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="609.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (10 samples, 0.18%)</title><rect x="606.4" y="259.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="609.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.18%)</title><rect x="606.4" y="243.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="609.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.18%)</title><rect x="606.4" y="227.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="609.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (10 samples, 0.18%)</title><rect x="606.4" y="211.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="609.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (10 samples, 0.18%)</title><rect x="606.4" y="195.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="609.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (10 samples, 0.18%)</title><rect x="606.4" y="179.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="609.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (10 samples, 0.18%)</title><rect x="606.4" y="163.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="609.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (5 samples, 0.09%)</title><rect x="606.4" y="147.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="609.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.07%)</title><rect x="606.6" y="131.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="609.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.07%)</title><rect x="606.6" y="115.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="609.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.07%)</title><rect x="606.6" y="99.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="609.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.07%)</title><rect x="606.6" y="83.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="609.6" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.07%)</title><rect x="606.6" y="67.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="609.6" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.07%)</title><rect x="606.6" y="51.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="609.6" y="62.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.07%)</title><rect x="606.6" y="35.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="609.6" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.09%)</title><rect x="607.5" y="147.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.09%)</title><rect x="607.5" y="131.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="610.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.09%)</title><rect x="607.5" y="115.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="610.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.09%)</title><rect x="607.5" y="99.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="610.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.09%)</title><rect x="607.5" y="83.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="610.5" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.09%)</title><rect x="607.5" y="67.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.5" y="78.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.07%)</title><rect x="607.5" y="51.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="610.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (660 samples, 12.19%)</title><rect x="608.8" y="403.0" width="143.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.8" y="414.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (660 samples, 12.19%)</title><rect x="608.8" y="387.0" width="143.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="611.8" y="398.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (654 samples, 12.08%)</title><rect x="609.0" y="371.0" width="142.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="612.0" y="382.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (49 samples, 0.91%)</title><rect x="609.0" y="355.0" width="10.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="612.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (49 samples, 0.91%)</title><rect x="609.0" y="339.0" width="10.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="612.0" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (47 samples, 0.87%)</title><rect x="609.5" y="323.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (47 samples, 0.87%)</title><rect x="609.5" y="307.0" width="10.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="612.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (46 samples, 0.85%)</title><rect x="609.7" y="291.0" width="10.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="612.7" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (45 samples, 0.83%)</title><rect x="609.9" y="275.0" width="9.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="612.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (45 samples, 0.83%)</title><rect x="609.9" y="259.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="612.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (45 samples, 0.83%)</title><rect x="609.9" y="243.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="612.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (41 samples, 0.76%)</title><rect x="609.9" y="227.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (41 samples, 0.76%)</title><rect x="609.9" y="211.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="612.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (41 samples, 0.76%)</title><rect x="609.9" y="195.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="612.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (41 samples, 0.76%)</title><rect x="609.9" y="179.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (14 samples, 0.26%)</title><rect x="610.4" y="163.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="613.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (14 samples, 0.26%)</title><rect x="610.4" y="147.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (14 samples, 0.26%)</title><rect x="610.4" y="131.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="613.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (14 samples, 0.26%)</title><rect x="610.4" y="115.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.4" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.07%)</title><rect x="610.4" y="99.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="613.4" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.07%)</title><rect x="610.4" y="83.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="613.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.06%)</title><rect x="610.4" y="67.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="613.4" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.17%)</title><rect x="611.2" y="99.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 0.17%)</title><rect x="611.2" y="83.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="614.2" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.17%)</title><rect x="611.2" y="67.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.2" y="78.0"></text>
</g>
<g>
<title>__pread (8 samples, 0.15%)</title><rect x="611.2" y="51.0" width="1.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="614.2" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (25 samples, 0.46%)</title><rect x="613.4" y="163.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="616.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (25 samples, 0.46%)</title><rect x="613.4" y="147.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="616.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.04%)</title><rect x="613.6" y="131.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="616.6" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.04%)</title><rect x="613.6" y="115.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (21 samples, 0.39%)</title><rect x="614.1" y="131.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="617.1" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.04%)</title><rect x="614.1" y="115.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="617.1" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.04%)</title><rect x="614.1" y="99.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="617.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (18 samples, 0.33%)</title><rect x="614.5" y="115.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="617.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (18 samples, 0.33%)</title><rect x="614.5" y="99.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (18 samples, 0.33%)</title><rect x="614.5" y="83.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="617.5" y="94.0"></text>
</g>
<g>
<title>__pread (16 samples, 0.30%)</title><rect x="614.7" y="67.0" width="3.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="617.7" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.07%)</title><rect x="618.9" y="227.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="621.9" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.07%)</title><rect x="618.9" y="211.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="621.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.07%)</title><rect x="618.9" y="195.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.07%)</title><rect x="618.9" y="179.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="621.9" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="618.9" y="163.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="621.9" y="174.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.04%)</title><rect x="618.9" y="147.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.04%)</title><rect x="619.3" y="163.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="622.3" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="619.3" y="147.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="622.3" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="619.3" y="131.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.3" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="619.3" y="115.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.3" y="126.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (603 samples, 11.14%)</title><rect x="619.7" y="355.0" width="131.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.7" y="366.0">java/util/Collec..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (603 samples, 11.14%)</title><rect x="619.7" y="339.0" width="131.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="622.7" y="350.0">java/lang/Iterab..</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (2 samples, 0.04%)</title><rect x="619.7" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="622.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (601 samples, 11.10%)</title><rect x="620.2" y="323.0" width="131.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="623.2" y="334.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (601 samples, 11.10%)</title><rect x="620.2" y="307.0" width="131.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="623.2" y="318.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (601 samples, 11.10%)</title><rect x="620.2" y="291.0" width="131.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.2" y="302.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (600 samples, 11.08%)</title><rect x="620.4" y="275.0" width="130.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="623.4" y="286.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (600 samples, 11.08%)</title><rect x="620.4" y="259.0" width="130.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.4" y="270.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.22%)</title><rect x="620.4" y="243.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.4" y="254.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (12 samples, 0.22%)</title><rect x="620.4" y="227.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="623.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.07%)</title><rect x="622.1" y="211.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (588 samples, 10.86%)</title><rect x="623.0" y="243.0" width="128.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.0" y="254.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (20 samples, 0.37%)</title><rect x="624.3" y="227.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="627.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (18 samples, 0.33%)</title><rect x="624.7" y="211.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (15 samples, 0.28%)</title><rect x="624.7" y="195.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.7" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (13 samples, 0.24%)</title><rect x="625.2" y="179.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.2" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (10 samples, 0.18%)</title><rect x="625.2" y="163.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.07%)</title><rect x="625.4" y="147.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.4" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.06%)</title><rect x="625.6" y="131.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="628.6" y="142.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.07%)</title><rect x="626.3" y="147.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="629.3" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.06%)</title><rect x="627.4" y="163.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.06%)</title><rect x="627.4" y="147.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="630.4" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.06%)</title><rect x="627.4" y="131.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="630.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.06%)</title><rect x="628.0" y="195.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="631.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (208 samples, 3.84%)</title><rect x="628.7" y="227.0" width="45.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.7" y="238.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (9 samples, 0.17%)</title><rect x="628.7" y="211.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.7" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.15%)</title><rect x="628.9" y="195.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.15%)</title><rect x="628.9" y="179.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="631.9" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="629.1" y="163.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="632.1" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.09%)</title><rect x="629.1" y="147.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="632.1" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.09%)</title><rect x="629.1" y="131.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.1" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.06%)</title><rect x="629.5" y="115.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="632.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="630.2" y="163.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.2" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (24 samples, 0.44%)</title><rect x="630.6" y="211.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="633.6" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (21 samples, 0.39%)</title><rect x="630.8" y="195.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.8" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (21 samples, 0.39%)</title><rect x="630.8" y="179.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.8" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (11 samples, 0.20%)</title><rect x="633.0" y="163.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.0" y="174.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.04%)</title><rect x="633.0" y="147.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="636.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="633.0" y="131.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="636.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.15%)</title><rect x="633.5" y="147.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.5" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.15%)</title><rect x="633.5" y="131.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="636.5" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.15%)</title><rect x="633.5" y="115.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="636.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.04%)</title><rect x="635.4" y="195.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="638.4" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (175 samples, 3.23%)</title><rect x="635.9" y="211.0" width="38.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="638.9" y="222.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (175 samples, 3.23%)</title><rect x="635.9" y="195.0" width="38.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="638.9" y="206.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.04%)</title><rect x="636.1" y="179.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.1" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.04%)</title><rect x="636.1" y="163.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="639.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (168 samples, 3.10%)</title><rect x="636.5" y="179.0" width="36.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.5" y="190.0">sun..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (19 samples, 0.35%)</title><rect x="636.9" y="163.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (19 samples, 0.35%)</title><rect x="636.9" y="147.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="639.9" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (13 samples, 0.24%)</title><rect x="637.6" y="131.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="640.6" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (7 samples, 0.13%)</title><rect x="638.9" y="115.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="641.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.06%)</title><rect x="640.4" y="131.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.06%)</title><rect x="640.4" y="115.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.06%)</title><rect x="640.4" y="99.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.4" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (126 samples, 2.33%)</title><rect x="641.1" y="163.0" width="27.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.1" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (125 samples, 2.31%)</title><rect x="641.3" y="147.0" width="27.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.3" y="158.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (124 samples, 2.29%)</title><rect x="641.5" y="131.0" width="27.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.5" y="142.0">s..</text>
</g>
<g>
<title>__pread (109 samples, 2.01%)</title><rect x="644.1" y="115.0" width="23.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="647.1" y="126.0">_..</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.15%)</title><rect x="668.6" y="163.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="671.6" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.15%)</title><rect x="668.6" y="147.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="671.6" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (8 samples, 0.15%)</title><rect x="668.6" y="131.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="671.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (8 samples, 0.15%)</title><rect x="668.6" y="115.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (13 samples, 0.24%)</title><rect x="670.3" y="163.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="673.3" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (13 samples, 0.24%)</title><rect x="670.3" y="147.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.3" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (13 samples, 0.24%)</title><rect x="670.3" y="131.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="673.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (13 samples, 0.24%)</title><rect x="670.3" y="115.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.07%)</title><rect x="673.1" y="179.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.1" y="190.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="673.1" y="163.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="676.1" y="174.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="673.1" y="147.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="676.1" y="158.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.04%)</title><rect x="673.1" y="131.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="676.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.04%)</title><rect x="673.6" y="163.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (354 samples, 6.54%)</title><rect x="674.0" y="227.0" width="77.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="677.0" y="238.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (354 samples, 6.54%)</title><rect x="674.0" y="211.0" width="77.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="677.0" y="222.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (20 samples, 0.37%)</title><rect x="675.1" y="195.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.1" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (19 samples, 0.35%)</title><rect x="675.3" y="179.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="678.3" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.07%)</title><rect x="678.4" y="163.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="681.4" y="174.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.07%)</title><rect x="678.4" y="147.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="681.4" y="158.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.07%)</title><rect x="678.4" y="131.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="681.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.04%)</title><rect x="679.5" y="195.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="682.5" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.04%)</title><rect x="679.5" y="179.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="682.5" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.04%)</title><rect x="679.5" y="163.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="682.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.04%)</title><rect x="679.9" y="195.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="682.9" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOStatus.normalize (2 samples, 0.04%)</title><rect x="680.3" y="195.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="683.3" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (284 samples, 5.25%)</title><rect x="680.8" y="195.0" width="61.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="683.8" y="206.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (22 samples, 0.41%)</title><rect x="682.3" y="179.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.3" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (21 samples, 0.39%)</title><rect x="682.5" y="163.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="685.5" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (13 samples, 0.24%)</title><rect x="682.9" y="147.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="685.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (6 samples, 0.11%)</title><rect x="685.8" y="147.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="688.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (5 samples, 0.09%)</title><rect x="686.0" y="131.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="689.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (5 samples, 0.09%)</title><rect x="686.0" y="115.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="689.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (3 samples, 0.06%)</title><rect x="686.4" y="99.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="689.4" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (221 samples, 4.08%)</title><rect x="687.1" y="179.0" width="48.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="690.1" y="190.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (218 samples, 4.03%)</title><rect x="687.7" y="163.0" width="47.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.7" y="174.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (218 samples, 4.03%)</title><rect x="687.7" y="147.0" width="47.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="690.7" y="158.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (7 samples, 0.13%)</title><rect x="690.4" y="131.0" width="1.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="693.4" y="142.0"></text>
</g>
<g>
<title>__pread (186 samples, 3.44%)</title><rect x="691.9" y="131.0" width="40.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="694.9" y="142.0">__p..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.09%)</title><rect x="732.4" y="131.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="735.4" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.07%)</title><rect x="733.5" y="131.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="736.5" y="142.0"></text>
</g>
<g>
<title>convertReturnVal (3 samples, 0.06%)</title><rect x="734.4" y="131.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="737.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (17 samples, 0.31%)</title><rect x="735.3" y="179.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="738.3" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (17 samples, 0.31%)</title><rect x="735.3" y="163.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="738.3" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (17 samples, 0.31%)</title><rect x="735.3" y="147.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (17 samples, 0.31%)</title><rect x="735.3" y="131.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="738.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (17 samples, 0.31%)</title><rect x="739.0" y="179.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="742.0" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (17 samples, 0.31%)</title><rect x="739.0" y="163.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="742.0" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (17 samples, 0.31%)</title><rect x="739.0" y="147.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="742.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (17 samples, 0.31%)</title><rect x="739.0" y="131.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="742.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (31 samples, 0.57%)</title><rect x="742.7" y="195.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.7" y="206.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.06%)</title><rect x="747.5" y="179.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="750.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (6 samples, 0.11%)</title><rect x="748.1" y="179.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="751.1" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (8 samples, 0.15%)</title><rect x="749.4" y="195.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.04%)</title><rect x="751.2" y="355.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="751.2" y="339.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="754.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.04%)</title><rect x="751.2" y="323.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2 samples, 0.04%)</title><rect x="751.2" y="307.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2 samples, 0.04%)</title><rect x="751.2" y="291.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.2" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2 samples, 0.04%)</title><rect x="751.2" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.2" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2 samples, 0.04%)</title><rect x="751.2" y="259.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="754.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.04%)</title><rect x="751.2" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="754.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.04%)</title><rect x="751.2" y="227.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.2" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2 samples, 0.04%)</title><rect x="751.2" y="211.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="754.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (2 samples, 0.04%)</title><rect x="751.2" y="195.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (2 samples, 0.04%)</title><rect x="751.2" y="179.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="754.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (2 samples, 0.04%)</title><rect x="751.2" y="163.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (5 samples, 0.09%)</title><rect x="751.6" y="371.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (5 samples, 0.09%)</title><rect x="751.6" y="355.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (5 samples, 0.09%)</title><rect x="751.6" y="339.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (5 samples, 0.09%)</title><rect x="751.6" y="323.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (5 samples, 0.09%)</title><rect x="751.6" y="307.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="754.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (5 samples, 0.09%)</title><rect x="751.6" y="291.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (5 samples, 0.09%)</title><rect x="751.6" y="275.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.04%)</title><rect x="752.3" y="259.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.3" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="752.3" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.3" y="254.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=6991] (654 samples, 12.08%)</title><rect x="753.1" y="579.0" width="142.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="756.1" y="590.0">[NIO Selector #5 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (654 samples, 12.08%)</title><rect x="753.1" y="563.0" width="142.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="756.1" y="574.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/Session.process (654 samples, 12.08%)</title><rect x="753.1" y="547.0" width="142.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.1" y="558.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (654 samples, 12.08%)</title><rect x="753.1" y="531.0" width="142.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="756.1" y="542.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (654 samples, 12.08%)</title><rect x="753.1" y="515.0" width="142.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.1" y="526.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (654 samples, 12.08%)</title><rect x="753.1" y="499.0" width="142.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="756.1" y="510.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (654 samples, 12.08%)</title><rect x="753.1" y="483.0" width="142.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="756.1" y="494.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (654 samples, 12.08%)</title><rect x="753.1" y="467.0" width="142.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="756.1" y="478.0">RequestHandler0_re..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.06%)</title><rect x="753.1" y="451.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="756.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.06%)</title><rect x="753.1" y="435.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="756.1" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.06%)</title><rect x="753.1" y="419.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="756.1" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.06%)</title><rect x="753.1" y="403.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="756.1" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.06%)</title><rect x="753.1" y="387.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.1" y="398.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.06%)</title><rect x="753.1" y="371.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.1" y="382.0"></text>
</g>
<g>
<title>__libc_send (2 samples, 0.04%)</title><rect x="753.4" y="355.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="756.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (651 samples, 12.03%)</title><rect x="753.8" y="451.0" width="141.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.8" y="462.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (5 samples, 0.09%)</title><rect x="753.8" y="435.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="756.8" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (5 samples, 0.09%)</title><rect x="753.8" y="419.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.8" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (5 samples, 0.09%)</title><rect x="753.8" y="403.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.8" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (5 samples, 0.09%)</title><rect x="753.8" y="387.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.8" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (5 samples, 0.09%)</title><rect x="753.8" y="371.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.8" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (5 samples, 0.09%)</title><rect x="753.8" y="355.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="756.8" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (5 samples, 0.09%)</title><rect x="753.8" y="339.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="756.8" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (5 samples, 0.09%)</title><rect x="753.8" y="323.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="756.8" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (5 samples, 0.09%)</title><rect x="753.8" y="307.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="756.8" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (4 samples, 0.07%)</title><rect x="753.8" y="291.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.8" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (3 samples, 0.06%)</title><rect x="753.8" y="275.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="756.8" y="286.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (3 samples, 0.06%)</title><rect x="753.8" y="259.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.8" y="270.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (3 samples, 0.06%)</title><rect x="753.8" y="243.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="756.8" y="254.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (3 samples, 0.06%)</title><rect x="753.8" y="227.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.8" y="238.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (3 samples, 0.06%)</title><rect x="753.8" y="211.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="756.8" y="222.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (3 samples, 0.06%)</title><rect x="753.8" y="195.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="756.8" y="206.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (3 samples, 0.06%)</title><rect x="753.8" y="179.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="756.8" y="190.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (3 samples, 0.06%)</title><rect x="753.8" y="163.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="756.8" y="174.0"></text>
</g>
<g>
<title>writeBytes (3 samples, 0.06%)</title><rect x="753.8" y="147.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="756.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (646 samples, 11.93%)</title><rect x="754.9" y="435.0" width="140.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="757.9" y="446.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (646 samples, 11.93%)</title><rect x="754.9" y="419.0" width="140.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="757.9" y="430.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (25 samples, 0.46%)</title><rect x="754.9" y="403.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (25 samples, 0.46%)</title><rect x="754.9" y="387.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="757.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (25 samples, 0.46%)</title><rect x="754.9" y="371.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (25 samples, 0.46%)</title><rect x="754.9" y="355.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (25 samples, 0.46%)</title><rect x="754.9" y="339.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (25 samples, 0.46%)</title><rect x="754.9" y="323.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="757.9" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.06%)</title><rect x="755.1" y="307.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="758.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.06%)</title><rect x="755.1" y="291.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="758.1" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.06%)</title><rect x="755.1" y="275.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="758.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="755.1" y="259.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="758.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="755.1" y="243.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="758.1" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="755.1" y="227.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="758.1" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="755.1" y="211.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="758.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="755.1" y="195.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="758.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="755.1" y="179.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="758.1" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="755.1" y="163.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="758.1" y="174.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.04%)</title><rect x="755.1" y="147.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="758.1" y="158.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (21 samples, 0.39%)</title><rect x="755.8" y="307.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="758.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (21 samples, 0.39%)</title><rect x="755.8" y="291.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="758.8" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (21 samples, 0.39%)</title><rect x="755.8" y="275.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="758.8" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (21 samples, 0.39%)</title><rect x="755.8" y="259.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="758.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 0.39%)</title><rect x="755.8" y="243.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="758.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 0.39%)</title><rect x="755.8" y="227.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="758.8" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (21 samples, 0.39%)</title><rect x="755.8" y="211.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="758.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (21 samples, 0.39%)</title><rect x="755.8" y="195.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="758.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (21 samples, 0.39%)</title><rect x="755.8" y="179.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="758.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (20 samples, 0.37%)</title><rect x="755.8" y="163.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="758.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (9 samples, 0.17%)</title><rect x="755.8" y="147.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="758.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (8 samples, 0.15%)</title><rect x="756.0" y="131.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (8 samples, 0.15%)</title><rect x="756.0" y="115.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (8 samples, 0.15%)</title><rect x="756.0" y="99.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="759.0" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.13%)</title><rect x="756.2" y="83.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="759.2" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.13%)</title><rect x="756.2" y="67.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="759.2" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.13%)</title><rect x="756.2" y="51.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.2" y="62.0"></text>
</g>
<g>
<title>__pread (7 samples, 0.13%)</title><rect x="756.2" y="35.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="759.2" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (11 samples, 0.20%)</title><rect x="757.7" y="147.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (11 samples, 0.20%)</title><rect x="757.7" y="131.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="760.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 0.17%)</title><rect x="757.9" y="115.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="760.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 0.13%)</title><rect x="758.4" y="99.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="761.4" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (7 samples, 0.13%)</title><rect x="758.4" y="83.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="761.4" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.13%)</title><rect x="758.4" y="67.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="761.4" y="78.0"></text>
</g>
<g>
<title>__pread (6 samples, 0.11%)</title><rect x="758.4" y="51.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="761.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (621 samples, 11.47%)</title><rect x="760.3" y="403.0" width="135.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="763.3" y="414.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (621 samples, 11.47%)</title><rect x="760.3" y="387.0" width="135.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="763.3" y="398.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (620 samples, 11.45%)</title><rect x="760.3" y="371.0" width="135.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="763.3" y="382.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (57 samples, 1.05%)</title><rect x="760.3" y="355.0" width="12.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="763.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (57 samples, 1.05%)</title><rect x="760.3" y="339.0" width="12.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="763.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (57 samples, 1.05%)</title><rect x="760.3" y="323.0" width="12.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="763.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (57 samples, 1.05%)</title><rect x="760.3" y="307.0" width="12.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="763.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (57 samples, 1.05%)</title><rect x="760.3" y="291.0" width="12.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="763.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (57 samples, 1.05%)</title><rect x="760.3" y="275.0" width="12.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="763.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 1.05%)</title><rect x="760.3" y="259.0" width="12.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="763.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (56 samples, 1.03%)</title><rect x="760.6" y="243.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="763.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (54 samples, 1.00%)</title><rect x="760.6" y="227.0" width="11.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="763.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (54 samples, 1.00%)</title><rect x="760.6" y="211.0" width="11.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (54 samples, 1.00%)</title><rect x="760.6" y="195.0" width="11.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="763.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (54 samples, 1.00%)</title><rect x="760.6" y="179.0" width="11.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="763.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (15 samples, 0.28%)</title><rect x="760.8" y="163.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="763.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (14 samples, 0.26%)</title><rect x="761.0" y="147.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="764.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (14 samples, 0.26%)</title><rect x="761.0" y="131.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.22%)</title><rect x="761.2" y="115.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="764.2" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.06%)</title><rect x="761.2" y="99.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="764.2" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.06%)</title><rect x="761.2" y="83.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="764.2" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.04%)</title><rect x="761.2" y="67.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="764.2" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.11%)</title><rect x="761.9" y="99.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.11%)</title><rect x="761.9" y="83.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.11%)</title><rect x="761.9" y="67.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="764.9" y="78.0"></text>
</g>
<g>
<title>__pread (5 samples, 0.09%)</title><rect x="761.9" y="51.0" width="1.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="764.9" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="763.2" y="99.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="766.2" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="763.2" y="83.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.2" y="94.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.04%)</title><rect x="763.2" y="67.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="766.2" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.04%)</title><rect x="763.2" y="51.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.2" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (38 samples, 0.70%)</title><rect x="764.0" y="163.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="767.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (38 samples, 0.70%)</title><rect x="764.0" y="147.0" width="8.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="767.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (33 samples, 0.61%)</title><rect x="764.5" y="131.0" width="7.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="767.5" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.06%)</title><rect x="764.5" y="115.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="767.5" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.06%)</title><rect x="764.5" y="99.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="767.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.04%)</title><rect x="764.7" y="83.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="767.7" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (27 samples, 0.50%)</title><rect x="765.1" y="115.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="768.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (25 samples, 0.46%)</title><rect x="765.3" y="99.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="768.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (25 samples, 0.46%)</title><rect x="765.3" y="83.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="768.3" y="94.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (3 samples, 0.06%)</title><rect x="765.6" y="67.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="768.6" y="78.0"></text>
</g>
<g>
<title>__pread (19 samples, 0.35%)</title><rect x="766.2" y="67.0" width="4.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="769.2" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="771.0" y="115.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="774.0" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="771.0" y="99.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="774.0" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.04%)</title><rect x="771.0" y="83.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="774.0" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.04%)</title><rect x="771.0" y="67.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="774.0" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.04%)</title><rect x="771.7" y="131.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="774.7" y="142.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="772.3" y="227.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="775.3" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="772.3" y="211.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="775.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="772.3" y="195.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="775.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="772.3" y="179.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="775.3" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="772.3" y="163.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="775.3" y="174.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (558 samples, 10.31%)</title><rect x="772.8" y="355.0" width="121.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="775.8" y="366.0">java/util/Colle..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (558 samples, 10.31%)</title><rect x="772.8" y="339.0" width="121.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="775.8" y="350.0">java/lang/Itera..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (557 samples, 10.29%)</title><rect x="773.0" y="323.0" width="121.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="776.0" y="334.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (557 samples, 10.29%)</title><rect x="773.0" y="307.0" width="121.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.0" y="318.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (557 samples, 10.29%)</title><rect x="773.0" y="291.0" width="121.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="776.0" y="302.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (557 samples, 10.29%)</title><rect x="773.0" y="275.0" width="121.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.0" y="286.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (557 samples, 10.29%)</title><rect x="773.0" y="259.0" width="121.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="776.0" y="270.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.18%)</title><rect x="773.0" y="243.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.0" y="254.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.18%)</title><rect x="773.0" y="227.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="776.0" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.07%)</title><rect x="774.1" y="211.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="777.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (547 samples, 10.11%)</title><rect x="775.2" y="243.0" width="119.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="778.2" y="254.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 0.24%)</title><rect x="775.6" y="227.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.6" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.20%)</title><rect x="776.0" y="211.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.0" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.18%)</title><rect x="776.2" y="195.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.2" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.13%)</title><rect x="776.5" y="179.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="779.5" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.11%)</title><rect x="776.7" y="163.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="779.7" y="174.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="777.3" y="147.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="780.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.04%)</title><rect x="778.0" y="179.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="781.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (170 samples, 3.14%)</title><rect x="778.4" y="227.0" width="37.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="781.4" y="238.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.13%)</title><rect x="778.4" y="211.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="781.4" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.11%)</title><rect x="778.6" y="195.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="781.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="778.9" y="179.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="781.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="779.5" y="163.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.5" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (25 samples, 0.46%)</title><rect x="780.0" y="211.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="783.0" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (23 samples, 0.42%)</title><rect x="780.2" y="195.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="783.2" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (23 samples, 0.42%)</title><rect x="780.2" y="179.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="783.2" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (15 samples, 0.28%)</title><rect x="781.9" y="163.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="784.9" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (13 samples, 0.24%)</title><rect x="782.4" y="147.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="785.4" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (13 samples, 0.24%)</title><rect x="782.4" y="131.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="785.4" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (13 samples, 0.24%)</title><rect x="782.4" y="115.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="785.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (138 samples, 2.55%)</title><rect x="785.4" y="211.0" width="30.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="788.4" y="222.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (138 samples, 2.55%)</title><rect x="785.4" y="195.0" width="30.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="788.4" y="206.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.04%)</title><rect x="785.8" y="179.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.8" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.04%)</title><rect x="785.8" y="163.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="788.8" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (127 samples, 2.35%)</title><rect x="786.3" y="179.0" width="27.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="789.3" y="190.0">s..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (11 samples, 0.20%)</title><rect x="786.3" y="163.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="789.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (11 samples, 0.20%)</title><rect x="786.3" y="147.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="789.3" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (7 samples, 0.13%)</title><rect x="786.3" y="131.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="789.3" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.07%)</title><rect x="786.9" y="115.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (4 samples, 0.07%)</title><rect x="787.8" y="131.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (4 samples, 0.07%)</title><rect x="787.8" y="115.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="790.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (4 samples, 0.07%)</title><rect x="787.8" y="99.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="790.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (2 samples, 0.04%)</title><rect x="788.2" y="83.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.2" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (107 samples, 1.98%)</title><rect x="788.7" y="163.0" width="23.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="791.7" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (107 samples, 1.98%)</title><rect x="788.7" y="147.0" width="23.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="791.7" y="158.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (107 samples, 1.98%)</title><rect x="788.7" y="131.0" width="23.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.7" y="142.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.04%)</title><rect x="789.3" y="115.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="792.3" y="126.0"></text>
</g>
<g>
<title>__pread (95 samples, 1.76%)</title><rect x="789.8" y="115.0" width="20.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="792.8" y="126.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.07%)</title><rect x="810.5" y="115.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="813.5" y="126.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.04%)</title><rect x="811.3" y="115.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="814.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.06%)</title><rect x="812.0" y="163.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="815.0" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.06%)</title><rect x="812.0" y="147.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="815.0" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.06%)</title><rect x="812.0" y="131.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="815.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.06%)</title><rect x="812.0" y="115.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="815.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (6 samples, 0.11%)</title><rect x="812.7" y="163.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.7" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.11%)</title><rect x="812.7" y="147.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="815.7" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (6 samples, 0.11%)</title><rect x="812.7" y="131.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="815.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (6 samples, 0.11%)</title><rect x="812.7" y="115.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="815.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.11%)</title><rect x="814.0" y="179.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="817.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.09%)</title><rect x="814.2" y="163.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="817.2" y="174.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="814.8" y="147.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="817.8" y="158.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (2 samples, 0.04%)</title><rect x="814.8" y="131.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="817.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (362 samples, 6.69%)</title><rect x="815.5" y="227.0" width="78.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="818.5" y="238.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (359 samples, 6.63%)</title><rect x="816.1" y="211.0" width="78.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.1" y="222.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (24 samples, 0.44%)</title><rect x="817.2" y="195.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="820.2" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (24 samples, 0.44%)</title><rect x="817.2" y="179.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="820.2" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.11%)</title><rect x="820.3" y="163.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.3" y="174.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (6 samples, 0.11%)</title><rect x="820.3" y="147.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="823.3" y="158.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (6 samples, 0.11%)</title><rect x="820.3" y="131.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="823.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3 samples, 0.06%)</title><rect x="821.6" y="163.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="824.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (6 samples, 0.11%)</title><rect x="822.5" y="195.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.5" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (6 samples, 0.11%)</title><rect x="822.5" y="179.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="825.5" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.11%)</title><rect x="822.5" y="163.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="825.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOStatus.normalize (3 samples, 0.06%)</title><rect x="823.8" y="195.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="826.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (280 samples, 5.17%)</title><rect x="824.4" y="195.0" width="61.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.4" y="206.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (27 samples, 0.50%)</title><rect x="825.1" y="179.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="828.1" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (25 samples, 0.46%)</title><rect x="825.5" y="163.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.5" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (10 samples, 0.18%)</title><rect x="826.4" y="147.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="829.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (11 samples, 0.20%)</title><rect x="828.6" y="147.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="831.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (11 samples, 0.20%)</title><rect x="828.6" y="131.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="831.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (11 samples, 0.20%)</title><rect x="828.6" y="115.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="831.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (7 samples, 0.13%)</title><rect x="829.0" y="99.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="832.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (6 samples, 0.11%)</title><rect x="829.2" y="83.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="832.2" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (2 samples, 0.04%)</title><rect x="830.5" y="99.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="833.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (228 samples, 4.21%)</title><rect x="831.0" y="179.0" width="49.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.0" y="190.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (227 samples, 4.19%)</title><rect x="831.2" y="163.0" width="49.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="834.2" y="174.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (227 samples, 4.19%)</title><rect x="831.2" y="147.0" width="49.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="834.2" y="158.0">sun/n..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (3 samples, 0.06%)</title><rect x="833.8" y="131.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="836.8" y="142.0"></text>
</g>
<g>
<title>__pread (198 samples, 3.66%)</title><rect x="834.5" y="131.0" width="43.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="837.5" y="142.0">__pr..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (8 samples, 0.15%)</title><rect x="877.6" y="131.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="880.6" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.04%)</title><rect x="879.4" y="131.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="882.4" y="142.0"></text>
</g>
<g>
<title>fdval (4 samples, 0.07%)</title><rect x="879.8" y="131.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="882.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.11%)</title><rect x="880.7" y="179.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="883.7" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.11%)</title><rect x="880.7" y="163.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="883.7" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (6 samples, 0.11%)</title><rect x="880.7" y="147.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="883.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (6 samples, 0.11%)</title><rect x="880.7" y="131.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="883.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (16 samples, 0.30%)</title><rect x="882.0" y="179.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="885.0" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (16 samples, 0.30%)</title><rect x="882.0" y="163.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="885.0" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (16 samples, 0.30%)</title><rect x="882.0" y="147.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="885.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (16 samples, 0.30%)</title><rect x="882.0" y="131.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="885.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (31 samples, 0.57%)</title><rect x="885.5" y="195.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="888.5" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (7 samples, 0.13%)</title><rect x="890.7" y="179.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="893.7" y="190.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (2 samples, 0.04%)</title><rect x="891.6" y="163.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="894.6" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (10 samples, 0.18%)</title><rect x="892.2" y="195.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="895.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.09%)</title><rect x="894.4" y="355.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="897.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.09%)</title><rect x="894.4" y="339.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="897.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.09%)</title><rect x="894.4" y="323.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="897.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.07%)</title><rect x="894.4" y="307.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="897.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.07%)</title><rect x="894.4" y="291.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="897.4" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.07%)</title><rect x="894.4" y="275.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="897.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.07%)</title><rect x="894.4" y="259.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="897.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.07%)</title><rect x="894.4" y="243.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="897.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.07%)</title><rect x="894.4" y="227.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="897.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.06%)</title><rect x="894.4" y="211.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="897.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.06%)</title><rect x="894.4" y="195.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="897.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.06%)</title><rect x="894.4" y="179.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (3 samples, 0.06%)</title><rect x="894.4" y="163.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="897.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.04%)</title><rect x="894.6" y="147.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="897.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.04%)</title><rect x="894.6" y="131.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="897.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.04%)</title><rect x="894.6" y="115.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="897.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.04%)</title><rect x="894.6" y="99.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="897.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.04%)</title><rect x="894.6" y="83.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="897.6" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.04%)</title><rect x="894.6" y="67.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="897.6" y="78.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.04%)</title><rect x="894.6" y="51.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="897.6" y="62.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=6992] (663 samples, 12.25%)</title><rect x="895.7" y="579.0" width="144.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="898.7" y="590.0">[NIO Selector #6 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (661 samples, 12.21%)</title><rect x="896.1" y="563.0" width="144.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="899.1" y="574.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/Session.process (660 samples, 12.19%)</title><rect x="896.4" y="547.0" width="143.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="899.4" y="558.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (660 samples, 12.19%)</title><rect x="896.4" y="531.0" width="143.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.4" y="542.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (660 samples, 12.19%)</title><rect x="896.4" y="515.0" width="143.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="899.4" y="526.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (660 samples, 12.19%)</title><rect x="896.4" y="499.0" width="143.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="899.4" y="510.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (660 samples, 12.19%)</title><rect x="896.4" y="483.0" width="143.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="899.4" y="494.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (659 samples, 12.17%)</title><rect x="896.4" y="467.0" width="143.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.4" y="478.0">RequestHandler0_re..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.04%)</title><rect x="896.4" y="451.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.04%)</title><rect x="896.4" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="899.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (657 samples, 12.14%)</title><rect x="896.8" y="451.0" width="143.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.8" y="462.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (6 samples, 0.11%)</title><rect x="896.8" y="435.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="899.8" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (6 samples, 0.11%)</title><rect x="896.8" y="419.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="899.8" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (6 samples, 0.11%)</title><rect x="896.8" y="403.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="899.8" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (6 samples, 0.11%)</title><rect x="896.8" y="387.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="899.8" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (6 samples, 0.11%)</title><rect x="896.8" y="371.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="899.8" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (6 samples, 0.11%)</title><rect x="896.8" y="355.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="899.8" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (6 samples, 0.11%)</title><rect x="896.8" y="339.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="899.8" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (6 samples, 0.11%)</title><rect x="896.8" y="323.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="899.8" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (6 samples, 0.11%)</title><rect x="896.8" y="307.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="899.8" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (3 samples, 0.06%)</title><rect x="896.8" y="291.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="899.8" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (2 samples, 0.04%)</title><rect x="896.8" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.8" y="286.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (2 samples, 0.04%)</title><rect x="896.8" y="259.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="899.8" y="270.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (2 samples, 0.04%)</title><rect x="896.8" y="243.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="899.8" y="254.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (2 samples, 0.04%)</title><rect x="896.8" y="227.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="899.8" y="238.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (2 samples, 0.04%)</title><rect x="896.8" y="211.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="899.8" y="222.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (2 samples, 0.04%)</title><rect x="896.8" y="195.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="899.8" y="206.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (2 samples, 0.04%)</title><rect x="896.8" y="179.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="899.8" y="190.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (2 samples, 0.04%)</title><rect x="896.8" y="163.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="899.8" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (3 samples, 0.06%)</title><rect x="897.5" y="291.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="900.5" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (3 samples, 0.06%)</title><rect x="897.5" y="275.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="900.5" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (3 samples, 0.06%)</title><rect x="897.5" y="259.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="900.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.06%)</title><rect x="897.5" y="243.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="900.5" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.06%)</title><rect x="897.5" y="227.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="900.5" y="238.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.04%)</title><rect x="897.7" y="211.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="900.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (651 samples, 12.03%)</title><rect x="898.1" y="435.0" width="141.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="901.1" y="446.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (651 samples, 12.03%)</title><rect x="898.1" y="419.0" width="141.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="901.1" y="430.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (19 samples, 0.35%)</title><rect x="898.1" y="403.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="901.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (19 samples, 0.35%)</title><rect x="898.1" y="387.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="901.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (19 samples, 0.35%)</title><rect x="898.1" y="371.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="901.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (19 samples, 0.35%)</title><rect x="898.1" y="355.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="901.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (19 samples, 0.35%)</title><rect x="898.1" y="339.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="901.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (18 samples, 0.33%)</title><rect x="898.1" y="323.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="901.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (17 samples, 0.31%)</title><rect x="898.3" y="307.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="901.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (17 samples, 0.31%)</title><rect x="898.3" y="291.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="901.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (17 samples, 0.31%)</title><rect x="898.3" y="275.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="901.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (17 samples, 0.31%)</title><rect x="898.3" y="259.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="901.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.31%)</title><rect x="898.3" y="243.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="901.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.31%)</title><rect x="898.3" y="227.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="901.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (15 samples, 0.28%)</title><rect x="898.3" y="211.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="901.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (15 samples, 0.28%)</title><rect x="898.3" y="195.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="901.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (15 samples, 0.28%)</title><rect x="898.3" y="179.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="901.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (15 samples, 0.28%)</title><rect x="898.3" y="163.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="901.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (5 samples, 0.09%)</title><rect x="898.5" y="147.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="901.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.09%)</title><rect x="898.5" y="131.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.09%)</title><rect x="898.5" y="115.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="901.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.07%)</title><rect x="898.5" y="99.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="901.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.07%)</title><rect x="898.5" y="83.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="901.5" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.07%)</title><rect x="898.5" y="67.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="901.5" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.07%)</title><rect x="898.5" y="51.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="901.5" y="62.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.04%)</title><rect x="898.8" y="35.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="901.8" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (9 samples, 0.17%)</title><rect x="899.6" y="147.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="902.6" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (8 samples, 0.15%)</title><rect x="899.6" y="131.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="902.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.13%)</title><rect x="899.9" y="115.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="902.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.09%)</title><rect x="900.1" y="99.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="903.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.09%)</title><rect x="900.1" y="83.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="903.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.09%)</title><rect x="900.1" y="67.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="903.1" y="78.0"></text>
</g>
<g>
<title>__pread (4 samples, 0.07%)</title><rect x="900.1" y="51.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="903.1" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="901.6" y="211.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="901.6" y="195.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="904.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="901.6" y="179.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="904.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="901.6" y="163.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="904.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (632 samples, 11.68%)</title><rect x="902.2" y="403.0" width="137.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="905.2" y="414.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (632 samples, 11.68%)</title><rect x="902.2" y="387.0" width="137.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.2" y="398.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (628 samples, 11.60%)</title><rect x="902.7" y="371.0" width="136.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="905.7" y="382.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (44 samples, 0.81%)</title><rect x="902.7" y="355.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="905.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (44 samples, 0.81%)</title><rect x="902.7" y="339.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (43 samples, 0.79%)</title><rect x="902.9" y="323.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="905.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (43 samples, 0.79%)</title><rect x="902.9" y="307.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (43 samples, 0.79%)</title><rect x="902.9" y="291.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="905.9" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (43 samples, 0.79%)</title><rect x="902.9" y="275.0" width="9.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (43 samples, 0.79%)</title><rect x="902.9" y="259.0" width="9.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="905.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (43 samples, 0.79%)</title><rect x="902.9" y="243.0" width="9.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="905.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (40 samples, 0.74%)</title><rect x="902.9" y="227.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="905.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (40 samples, 0.74%)</title><rect x="902.9" y="211.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="905.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (40 samples, 0.74%)</title><rect x="902.9" y="195.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="905.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (40 samples, 0.74%)</title><rect x="902.9" y="179.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (11 samples, 0.20%)</title><rect x="902.9" y="163.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="905.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (9 samples, 0.17%)</title><rect x="903.1" y="147.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="906.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (9 samples, 0.17%)</title><rect x="903.1" y="131.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (8 samples, 0.15%)</title><rect x="903.1" y="115.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="906.1" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.04%)</title><rect x="903.1" y="99.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="906.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.04%)</title><rect x="903.1" y="83.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="906.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.09%)</title><rect x="903.6" y="99.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="906.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.09%)</title><rect x="903.6" y="83.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="906.6" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.09%)</title><rect x="903.6" y="67.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="906.6" y="78.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.06%)</title><rect x="904.0" y="51.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="907.0" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (29 samples, 0.54%)</title><rect x="905.3" y="163.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="908.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (29 samples, 0.54%)</title><rect x="905.3" y="147.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="908.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (27 samples, 0.50%)</title><rect x="905.5" y="131.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="908.5" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.04%)</title><rect x="905.7" y="115.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="908.7" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.04%)</title><rect x="905.7" y="99.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="908.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (20 samples, 0.37%)</title><rect x="906.2" y="115.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="909.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (20 samples, 0.37%)</title><rect x="906.2" y="99.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="909.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (20 samples, 0.37%)</title><rect x="906.2" y="83.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="909.2" y="94.0"></text>
</g>
<g>
<title>__pread (18 samples, 0.33%)</title><rect x="906.6" y="67.0" width="3.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="909.6" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="910.5" y="115.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="913.5" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="910.5" y="99.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="913.5" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.04%)</title><rect x="910.5" y="83.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="913.5" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.04%)</title><rect x="910.5" y="67.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="913.5" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="911.0" y="115.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.0" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="911.0" y="99.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="914.0" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.04%)</title><rect x="911.0" y="83.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.0" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.04%)</title><rect x="911.0" y="67.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="914.0" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="911.6" y="227.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="914.6" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="911.6" y="211.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="914.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="911.6" y="195.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="914.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="911.6" y="179.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="914.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.04%)</title><rect x="911.8" y="163.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="914.8" y="174.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (578 samples, 10.68%)</title><rect x="912.3" y="355.0" width="126.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="915.3" y="366.0">java/util/Collec..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (578 samples, 10.68%)</title><rect x="912.3" y="339.0" width="126.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="915.3" y="350.0">java/lang/Iterab..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.04%)</title><rect x="912.5" y="323.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="915.5" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (2 samples, 0.04%)</title><rect x="912.5" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="915.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (575 samples, 10.62%)</title><rect x="912.9" y="323.0" width="125.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="915.9" y="334.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (575 samples, 10.62%)</title><rect x="912.9" y="307.0" width="125.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="915.9" y="318.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (575 samples, 10.62%)</title><rect x="912.9" y="291.0" width="125.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="915.9" y="302.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (575 samples, 10.62%)</title><rect x="912.9" y="275.0" width="125.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="915.9" y="286.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (575 samples, 10.62%)</title><rect x="912.9" y="259.0" width="125.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="915.9" y="270.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.30%)</title><rect x="912.9" y="243.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.9" y="254.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (16 samples, 0.30%)</title><rect x="912.9" y="227.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="915.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.13%)</title><rect x="914.7" y="211.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="917.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (559 samples, 10.33%)</title><rect x="916.4" y="243.0" width="121.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="919.4" y="254.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (17 samples, 0.31%)</title><rect x="917.3" y="227.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="920.3" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.markValue (2 samples, 0.04%)</title><rect x="917.7" y="211.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="920.7" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.24%)</title><rect x="918.2" y="211.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="921.2" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (13 samples, 0.24%)</title><rect x="918.2" y="195.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="921.2" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (11 samples, 0.20%)</title><rect x="918.4" y="179.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="921.4" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (10 samples, 0.18%)</title><rect x="918.6" y="163.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="921.6" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.06%)</title><rect x="918.8" y="147.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="921.8" y="158.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.11%)</title><rect x="919.5" y="147.0" width="1.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="922.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (178 samples, 3.29%)</title><rect x="921.0" y="227.0" width="38.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="924.0" y="238.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.15%)</title><rect x="921.0" y="211.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="924.0" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.13%)</title><rect x="921.2" y="195.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="924.2" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.13%)</title><rect x="921.2" y="179.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="924.2" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="922.3" y="163.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="925.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="922.3" y="147.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="925.3" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="922.3" y="131.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="925.3" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.15%)</title><rect x="922.7" y="211.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="925.7" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.13%)</title><rect x="922.7" y="195.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="925.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.13%)</title><rect x="922.7" y="179.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="925.7" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="923.4" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="926.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.07%)</title><rect x="923.4" y="147.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="926.4" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.07%)</title><rect x="923.4" y="131.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="926.4" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.07%)</title><rect x="923.4" y="115.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="926.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (161 samples, 2.97%)</title><rect x="924.5" y="211.0" width="35.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="927.5" y="222.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (160 samples, 2.96%)</title><rect x="924.7" y="195.0" width="34.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="927.7" y="206.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.07%)</title><rect x="924.9" y="179.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="927.9" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.06%)</title><rect x="925.1" y="163.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="928.1" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.04%)</title><rect x="925.4" y="147.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="928.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (152 samples, 2.81%)</title><rect x="925.8" y="179.0" width="33.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="928.8" y="190.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (16 samples, 0.30%)</title><rect x="926.0" y="163.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="929.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (16 samples, 0.30%)</title><rect x="926.0" y="147.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="929.0" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (13 samples, 0.24%)</title><rect x="926.2" y="131.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="929.2" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.09%)</title><rect x="928.0" y="115.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="931.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.04%)</title><rect x="929.1" y="131.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="932.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.04%)</title><rect x="929.1" y="115.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="932.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.04%)</title><rect x="929.1" y="99.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="932.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (121 samples, 2.24%)</title><rect x="929.5" y="163.0" width="26.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="932.5" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (121 samples, 2.24%)</title><rect x="929.5" y="147.0" width="26.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="932.5" y="158.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (121 samples, 2.24%)</title><rect x="929.5" y="131.0" width="26.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="932.5" y="142.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (3 samples, 0.06%)</title><rect x="930.8" y="115.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="933.8" y="126.0"></text>
</g>
<g>
<title>__pread (105 samples, 1.94%)</title><rect x="931.5" y="115.0" width="22.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="934.5" y="126.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.04%)</title><rect x="954.3" y="115.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="957.3" y="126.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.09%)</title><rect x="954.8" y="115.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="957.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.13%)</title><rect x="955.9" y="163.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="958.9" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.13%)</title><rect x="955.9" y="147.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="958.9" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (7 samples, 0.13%)</title><rect x="955.9" y="131.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="958.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (7 samples, 0.13%)</title><rect x="955.9" y="115.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="958.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (7 samples, 0.13%)</title><rect x="957.4" y="163.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.4" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.13%)</title><rect x="957.4" y="147.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.4" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (7 samples, 0.13%)</title><rect x="957.4" y="131.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="960.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (7 samples, 0.13%)</title><rect x="957.4" y="115.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.06%)</title><rect x="958.9" y="179.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="961.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.06%)</title><rect x="958.9" y="163.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="961.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (359 samples, 6.63%)</title><rect x="959.8" y="227.0" width="78.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="962.8" y="238.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (3 samples, 0.06%)</title><rect x="960.5" y="211.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="963.5" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (353 samples, 6.52%)</title><rect x="961.1" y="211.0" width="77.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="964.1" y="222.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (18 samples, 0.33%)</title><rect x="962.0" y="195.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="965.0" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (18 samples, 0.33%)</title><rect x="962.0" y="179.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="965.0" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.13%)</title><rect x="964.2" y="163.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="967.2" y="174.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (7 samples, 0.13%)</title><rect x="964.2" y="147.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.2" y="158.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (7 samples, 0.13%)</title><rect x="964.2" y="131.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="967.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (3 samples, 0.06%)</title><rect x="965.9" y="195.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="968.9" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.04%)</title><rect x="966.1" y="179.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="969.1" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.04%)</title><rect x="966.1" y="163.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="969.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (296 samples, 5.47%)</title><rect x="966.8" y="195.0" width="64.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="969.8" y="206.0">sun/nio..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (23 samples, 0.42%)</title><rect x="967.9" y="179.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="970.9" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (22 samples, 0.41%)</title><rect x="968.1" y="163.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="971.1" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (8 samples, 0.15%)</title><rect x="969.0" y="147.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="972.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (9 samples, 0.17%)</title><rect x="970.9" y="147.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="973.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (9 samples, 0.17%)</title><rect x="970.9" y="131.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="973.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (9 samples, 0.17%)</title><rect x="970.9" y="115.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="973.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (6 samples, 0.11%)</title><rect x="971.1" y="99.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="974.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (2 samples, 0.04%)</title><rect x="972.0" y="83.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="975.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (2 samples, 0.04%)</title><rect x="972.4" y="99.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="975.4" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (240 samples, 4.43%)</title><rect x="972.9" y="179.0" width="52.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="975.9" y="190.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (237 samples, 4.38%)</title><rect x="973.5" y="163.0" width="51.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="976.5" y="174.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (236 samples, 4.36%)</title><rect x="973.8" y="147.0" width="51.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="976.8" y="158.0">sun/n..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (5 samples, 0.09%)</title><rect x="978.1" y="131.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="981.1" y="142.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.04%)</title><rect x="978.8" y="115.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="981.8" y="126.0"></text>
</g>
<g>
<title>__pread (195 samples, 3.60%)</title><rect x="979.2" y="131.0" width="42.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="982.2" y="142.0">__pr..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.07%)</title><rect x="1021.7" y="131.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1024.7" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (8 samples, 0.15%)</title><rect x="1022.6" y="131.0" width="1.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1025.6" y="142.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.06%)</title><rect x="1024.5" y="131.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1027.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (16 samples, 0.30%)</title><rect x="1025.2" y="179.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1028.2" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (16 samples, 0.30%)</title><rect x="1025.2" y="163.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1028.2" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (16 samples, 0.30%)</title><rect x="1025.2" y="147.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1028.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (16 samples, 0.30%)</title><rect x="1025.2" y="131.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1028.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (12 samples, 0.22%)</title><rect x="1028.7" y="179.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1031.7" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (12 samples, 0.22%)</title><rect x="1028.7" y="163.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1031.7" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (12 samples, 0.22%)</title><rect x="1028.7" y="147.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1031.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (12 samples, 0.22%)</title><rect x="1028.7" y="131.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1031.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (26 samples, 0.48%)</title><rect x="1031.3" y="195.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1034.3" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (9 samples, 0.17%)</title><rect x="1035.0" y="179.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1038.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (5 samples, 0.09%)</title><rect x="1037.0" y="195.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1040.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.09%)</title><rect x="1038.5" y="355.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.09%)</title><rect x="1038.5" y="339.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1041.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.09%)</title><rect x="1038.5" y="323.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1041.5" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.04%)</title><rect x="1038.5" y="307.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1041.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.04%)</title><rect x="1038.5" y="291.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1041.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2 samples, 0.04%)</title><rect x="1038.5" y="275.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1041.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.04%)</title><rect x="1038.5" y="259.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1041.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.04%)</title><rect x="1038.5" y="243.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1041.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.06%)</title><rect x="1038.9" y="307.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1041.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.06%)</title><rect x="1038.9" y="291.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1041.9" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3 samples, 0.06%)</title><rect x="1038.9" y="275.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1041.9" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 0.06%)</title><rect x="1038.9" y="259.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1041.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="1038.9" y="243.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1041.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="1038.9" y="227.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1041.9" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.06%)</title><rect x="1038.9" y="211.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1041.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.06%)</title><rect x="1038.9" y="195.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1041.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.06%)</title><rect x="1038.9" y="179.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1041.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (3 samples, 0.06%)</title><rect x="1038.9" y="163.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1041.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.06%)</title><rect x="1038.9" y="147.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1041.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.06%)</title><rect x="1038.9" y="131.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.06%)</title><rect x="1038.9" y="115.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1041.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.06%)</title><rect x="1038.9" y="99.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1041.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.06%)</title><rect x="1038.9" y="83.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1041.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.06%)</title><rect x="1038.9" y="67.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1041.9" y="78.0"></text>
</g>
<g>
<title>__pread (3 samples, 0.06%)</title><rect x="1038.9" y="51.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1041.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (2 samples, 0.04%)</title><rect x="1039.6" y="371.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1042.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (2 samples, 0.04%)</title><rect x="1039.6" y="355.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1042.6" y="366.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=6993] (681 samples, 12.58%)</title><rect x="1040.2" y="579.0" width="148.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1043.2" y="590.0">[NIO Selector #7 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (680 samples, 12.56%)</title><rect x="1040.5" y="563.0" width="148.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1043.5" y="574.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/Session.process (680 samples, 12.56%)</title><rect x="1040.5" y="547.0" width="148.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1043.5" y="558.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (680 samples, 12.56%)</title><rect x="1040.5" y="531.0" width="148.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1043.5" y="542.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (675 samples, 12.47%)</title><rect x="1040.5" y="515.0" width="147.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1043.5" y="526.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (675 samples, 12.47%)</title><rect x="1040.5" y="499.0" width="147.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1043.5" y="510.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (675 samples, 12.47%)</title><rect x="1040.5" y="483.0" width="147.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1043.5" y="494.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (674 samples, 12.45%)</title><rect x="1040.5" y="467.0" width="146.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1043.5" y="478.0">RequestHandler0_re..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (673 samples, 12.43%)</title><rect x="1040.7" y="451.0" width="146.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1043.7" y="462.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (2 samples, 0.04%)</title><rect x="1040.7" y="435.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1043.7" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (2 samples, 0.04%)</title><rect x="1040.7" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1043.7" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (2 samples, 0.04%)</title><rect x="1040.7" y="403.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1043.7" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (2 samples, 0.04%)</title><rect x="1040.7" y="387.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1043.7" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (2 samples, 0.04%)</title><rect x="1040.7" y="371.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1043.7" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (2 samples, 0.04%)</title><rect x="1040.7" y="355.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1043.7" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (2 samples, 0.04%)</title><rect x="1040.7" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1043.7" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (2 samples, 0.04%)</title><rect x="1040.7" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1043.7" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (2 samples, 0.04%)</title><rect x="1040.7" y="307.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1043.7" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (2 samples, 0.04%)</title><rect x="1040.7" y="291.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1043.7" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (2 samples, 0.04%)</title><rect x="1040.7" y="275.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1043.7" y="286.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (2 samples, 0.04%)</title><rect x="1040.7" y="259.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1043.7" y="270.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (2 samples, 0.04%)</title><rect x="1040.7" y="243.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1043.7" y="254.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (2 samples, 0.04%)</title><rect x="1040.7" y="227.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1043.7" y="238.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (2 samples, 0.04%)</title><rect x="1040.7" y="211.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1043.7" y="222.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (2 samples, 0.04%)</title><rect x="1040.7" y="195.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1043.7" y="206.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (2 samples, 0.04%)</title><rect x="1040.7" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1043.7" y="190.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (2 samples, 0.04%)</title><rect x="1040.7" y="163.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1043.7" y="174.0"></text>
</g>
<g>
<title>writeBytes (2 samples, 0.04%)</title><rect x="1040.7" y="147.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1043.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (671 samples, 12.40%)</title><rect x="1041.1" y="435.0" width="146.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1044.1" y="446.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (671 samples, 12.40%)</title><rect x="1041.1" y="419.0" width="146.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1044.1" y="430.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (21 samples, 0.39%)</title><rect x="1041.1" y="403.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1044.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (21 samples, 0.39%)</title><rect x="1041.1" y="387.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1044.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (21 samples, 0.39%)</title><rect x="1041.1" y="371.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1044.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (21 samples, 0.39%)</title><rect x="1041.1" y="355.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1044.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (21 samples, 0.39%)</title><rect x="1041.1" y="339.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1044.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (21 samples, 0.39%)</title><rect x="1041.1" y="323.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1044.1" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.04%)</title><rect x="1041.1" y="307.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1044.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.04%)</title><rect x="1041.1" y="291.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1044.1" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2 samples, 0.04%)</title><rect x="1041.1" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1044.1" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (19 samples, 0.35%)</title><rect x="1041.5" y="307.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1044.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (19 samples, 0.35%)</title><rect x="1041.5" y="291.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1044.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (19 samples, 0.35%)</title><rect x="1041.5" y="275.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.5" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (19 samples, 0.35%)</title><rect x="1041.5" y="259.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1044.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (19 samples, 0.35%)</title><rect x="1041.5" y="243.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1044.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (19 samples, 0.35%)</title><rect x="1041.5" y="227.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1044.5" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (18 samples, 0.33%)</title><rect x="1041.5" y="211.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1044.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (18 samples, 0.33%)</title><rect x="1041.5" y="195.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (18 samples, 0.33%)</title><rect x="1041.5" y="179.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1044.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (18 samples, 0.33%)</title><rect x="1041.5" y="163.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1044.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (6 samples, 0.11%)</title><rect x="1041.5" y="147.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1044.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.09%)</title><rect x="1041.8" y="131.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1044.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.09%)</title><rect x="1041.8" y="115.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1044.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.09%)</title><rect x="1041.8" y="99.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1044.8" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.04%)</title><rect x="1041.8" y="83.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1044.8" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.04%)</title><rect x="1041.8" y="67.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1044.8" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.04%)</title><rect x="1041.8" y="51.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1044.8" y="62.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.04%)</title><rect x="1041.8" y="35.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1044.8" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="1042.2" y="83.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1045.2" y="94.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="1042.2" y="67.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1045.2" y="78.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.04%)</title><rect x="1042.2" y="51.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1045.2" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.04%)</title><rect x="1042.2" y="35.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1045.2" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (12 samples, 0.22%)</title><rect x="1042.9" y="147.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1045.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (12 samples, 0.22%)</title><rect x="1042.9" y="131.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1045.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.20%)</title><rect x="1043.1" y="115.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1046.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.17%)</title><rect x="1043.3" y="99.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1046.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 0.17%)</title><rect x="1043.3" y="83.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1046.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.17%)</title><rect x="1043.3" y="67.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1046.3" y="78.0"></text>
</g>
<g>
<title>__pread (8 samples, 0.15%)</title><rect x="1043.3" y="51.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1046.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (650 samples, 12.01%)</title><rect x="1045.7" y="403.0" width="141.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1048.7" y="414.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (650 samples, 12.01%)</title><rect x="1045.7" y="387.0" width="141.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1048.7" y="398.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (650 samples, 12.01%)</title><rect x="1045.7" y="371.0" width="141.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1048.7" y="382.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (64 samples, 1.18%)</title><rect x="1045.7" y="355.0" width="13.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1048.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (64 samples, 1.18%)</title><rect x="1045.7" y="339.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1048.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1046.1" y="323.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1049.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (60 samples, 1.11%)</title><rect x="1046.6" y="323.0" width="13.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1049.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (60 samples, 1.11%)</title><rect x="1046.6" y="307.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1049.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (60 samples, 1.11%)</title><rect x="1046.6" y="291.0" width="13.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1049.6" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (60 samples, 1.11%)</title><rect x="1046.6" y="275.0" width="13.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1049.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (60 samples, 1.11%)</title><rect x="1046.6" y="259.0" width="13.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1049.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (60 samples, 1.11%)</title><rect x="1046.6" y="243.0" width="13.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1049.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (58 samples, 1.07%)</title><rect x="1046.6" y="227.0" width="12.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1049.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (56 samples, 1.03%)</title><rect x="1047.0" y="211.0" width="12.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1050.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (56 samples, 1.03%)</title><rect x="1047.0" y="195.0" width="12.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1050.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (56 samples, 1.03%)</title><rect x="1047.0" y="179.0" width="12.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1050.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (25 samples, 0.46%)</title><rect x="1047.0" y="163.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1050.0" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="1047.0" y="147.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1050.0" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1047.0" y="131.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1050.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1047.0" y="115.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1050.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (23 samples, 0.42%)</title><rect x="1047.4" y="147.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1050.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (23 samples, 0.42%)</title><rect x="1047.4" y="131.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1050.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.06%)</title><rect x="1047.7" y="115.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1050.7" y="126.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.06%)</title><rect x="1047.7" y="99.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1050.7" y="110.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.04%)</title><rect x="1047.7" y="83.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1050.7" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (19 samples, 0.35%)</title><rect x="1048.3" y="115.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1051.3" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.04%)</title><rect x="1048.3" y="99.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.3" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.04%)</title><rect x="1048.3" y="83.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1051.3" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.04%)</title><rect x="1048.3" y="67.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1051.3" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.04%)</title><rect x="1048.3" y="51.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1051.3" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (15 samples, 0.28%)</title><rect x="1048.7" y="99.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1051.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (15 samples, 0.28%)</title><rect x="1048.7" y="83.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1051.7" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (15 samples, 0.28%)</title><rect x="1048.7" y="67.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1051.7" y="78.0"></text>
</g>
<g>
<title>__pread (14 samples, 0.26%)</title><rect x="1049.0" y="51.0" width="3.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1052.0" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="1052.0" y="99.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1055.0" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="1052.0" y="83.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1055.0" y="94.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.04%)</title><rect x="1052.0" y="67.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1055.0" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.04%)</title><rect x="1052.0" y="51.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.0" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (31 samples, 0.57%)</title><rect x="1052.4" y="163.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1055.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (30 samples, 0.55%)</title><rect x="1052.7" y="147.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1055.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (27 samples, 0.50%)</title><rect x="1052.9" y="131.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1055.9" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.06%)</title><rect x="1052.9" y="115.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1055.9" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.06%)</title><rect x="1052.9" y="99.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1055.9" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.04%)</title><rect x="1052.9" y="83.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1055.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (20 samples, 0.37%)</title><rect x="1053.5" y="115.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1056.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (19 samples, 0.35%)</title><rect x="1053.8" y="99.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1056.8" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (19 samples, 0.35%)</title><rect x="1053.8" y="83.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1056.8" y="94.0"></text>
</g>
<g>
<title>__pread (17 samples, 0.31%)</title><rect x="1054.2" y="67.0" width="3.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1057.2" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.06%)</title><rect x="1058.1" y="115.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1061.1" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.06%)</title><rect x="1058.1" y="99.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1061.1" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.06%)</title><rect x="1058.1" y="83.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1061.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.06%)</title><rect x="1058.1" y="67.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1061.1" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="1059.2" y="227.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1062.2" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="1059.2" y="211.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1062.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="1059.2" y="195.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1062.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="1059.2" y="179.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1062.2" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="1059.2" y="163.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1062.2" y="174.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.04%)</title><rect x="1059.2" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1062.2" y="158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (577 samples, 10.66%)</title><rect x="1059.6" y="355.0" width="125.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1062.6" y="366.0">java/util/Colle..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (577 samples, 10.66%)</title><rect x="1059.6" y="339.0" width="125.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1062.6" y="350.0">java/lang/Itera..</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.hasNext (2 samples, 0.04%)</title><rect x="1059.6" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1062.6" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.hasNext (2 samples, 0.04%)</title><rect x="1059.6" y="307.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1062.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (574 samples, 10.60%)</title><rect x="1060.3" y="323.0" width="125.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1063.3" y="334.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (574 samples, 10.60%)</title><rect x="1060.3" y="307.0" width="125.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1063.3" y="318.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (573 samples, 10.59%)</title><rect x="1060.5" y="291.0" width="124.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1063.5" y="302.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (572 samples, 10.57%)</title><rect x="1060.7" y="275.0" width="124.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1063.7" y="286.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (572 samples, 10.57%)</title><rect x="1060.7" y="259.0" width="124.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1063.7" y="270.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.30%)</title><rect x="1060.7" y="243.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1063.7" y="254.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (15 samples, 0.28%)</title><rect x="1060.9" y="227.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1063.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (9 samples, 0.17%)</title><rect x="1062.3" y="211.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1065.3" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.04%)</title><rect x="1063.8" y="195.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1066.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (556 samples, 10.27%)</title><rect x="1064.2" y="243.0" width="121.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1067.2" y="254.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="1064.4" y="227.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1067.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1064.4" y="211.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1067.4" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1064.4" y="195.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1067.4" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (15 samples, 0.28%)</title><rect x="1064.9" y="227.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1067.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.24%)</title><rect x="1065.3" y="211.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1068.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.22%)</title><rect x="1065.3" y="195.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1068.3" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (10 samples, 0.18%)</title><rect x="1065.7" y="179.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1068.7" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.09%)</title><rect x="1066.4" y="163.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1069.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="1066.4" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1069.4" y="158.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="1066.8" y="147.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1069.8" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="1067.5" y="163.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1070.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (175 samples, 3.23%)</title><rect x="1068.1" y="227.0" width="38.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1071.1" y="238.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.13%)</title><rect x="1068.1" y="211.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1071.1" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.13%)</title><rect x="1068.1" y="195.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1071.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.13%)</title><rect x="1068.1" y="179.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1071.1" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1069.0" y="163.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1072.0" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.06%)</title><rect x="1069.0" y="147.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1072.0" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.06%)</title><rect x="1069.0" y="131.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1072.0" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.20%)</title><rect x="1069.7" y="211.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1072.7" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.20%)</title><rect x="1069.7" y="195.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1072.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.20%)</title><rect x="1069.7" y="179.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1072.7" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.13%)</title><rect x="1070.5" y="163.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1073.5" y="174.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1070.8" y="147.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1073.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="1071.0" y="131.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1074.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.06%)</title><rect x="1071.4" y="147.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1074.4" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.06%)</title><rect x="1071.4" y="131.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1074.4" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.06%)</title><rect x="1071.4" y="115.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1074.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (156 samples, 2.88%)</title><rect x="1072.1" y="211.0" width="34.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1075.1" y="222.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (155 samples, 2.86%)</title><rect x="1072.3" y="195.0" width="33.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.3" y="206.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (145 samples, 2.68%)</title><rect x="1073.2" y="179.0" width="31.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1076.2" y="190.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (15 samples, 0.28%)</title><rect x="1073.2" y="163.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1076.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (14 samples, 0.26%)</title><rect x="1073.4" y="147.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1076.4" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (7 samples, 0.13%)</title><rect x="1074.5" y="131.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1077.5" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.07%)</title><rect x="1075.1" y="115.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1078.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.04%)</title><rect x="1076.0" y="131.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1079.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.04%)</title><rect x="1076.0" y="115.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1079.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.04%)</title><rect x="1076.0" y="99.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1079.0" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (122 samples, 2.25%)</title><rect x="1076.4" y="163.0" width="26.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1079.4" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (122 samples, 2.25%)</title><rect x="1076.4" y="147.0" width="26.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1079.4" y="158.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (122 samples, 2.25%)</title><rect x="1076.4" y="131.0" width="26.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1079.4" y="142.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.04%)</title><rect x="1077.7" y="115.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1080.7" y="126.0"></text>
</g>
<g>
<title>__pread (104 samples, 1.92%)</title><rect x="1078.2" y="115.0" width="22.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1081.2" y="126.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.09%)</title><rect x="1100.8" y="115.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1103.8" y="126.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.07%)</title><rect x="1101.9" y="115.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1104.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.06%)</title><rect x="1103.0" y="163.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1106.0" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.06%)</title><rect x="1103.0" y="147.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1106.0" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.06%)</title><rect x="1103.0" y="131.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1106.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.06%)</title><rect x="1103.0" y="115.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1106.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (5 samples, 0.09%)</title><rect x="1103.7" y="163.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1106.7" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.09%)</title><rect x="1103.7" y="147.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1106.7" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.09%)</title><rect x="1103.7" y="131.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1106.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (5 samples, 0.09%)</title><rect x="1103.7" y="115.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1106.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.09%)</title><rect x="1104.8" y="179.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1107.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.07%)</title><rect x="1105.0" y="163.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1108.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (363 samples, 6.71%)</title><rect x="1106.3" y="227.0" width="79.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1109.3" y="238.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (361 samples, 6.67%)</title><rect x="1106.7" y="211.0" width="78.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1109.7" y="222.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (17 samples, 0.31%)</title><rect x="1108.5" y="195.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1111.5" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (17 samples, 0.31%)</title><rect x="1108.5" y="179.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1111.5" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.11%)</title><rect x="1110.9" y="163.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1113.9" y="174.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (6 samples, 0.11%)</title><rect x="1110.9" y="147.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1113.9" y="158.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (6 samples, 0.11%)</title><rect x="1110.9" y="131.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1113.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (5 samples, 0.09%)</title><rect x="1112.2" y="195.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1115.2" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (5 samples, 0.09%)</title><rect x="1112.2" y="179.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1115.2" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.09%)</title><rect x="1112.2" y="163.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1115.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (290 samples, 5.36%)</title><rect x="1113.5" y="195.0" width="63.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1116.5" y="206.0">sun/nio..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (30 samples, 0.55%)</title><rect x="1115.4" y="179.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1118.4" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (30 samples, 0.55%)</title><rect x="1115.4" y="163.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1118.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (12 samples, 0.22%)</title><rect x="1116.3" y="147.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1119.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (13 samples, 0.24%)</title><rect x="1119.2" y="147.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1122.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (13 samples, 0.24%)</title><rect x="1119.2" y="131.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1122.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (12 samples, 0.22%)</title><rect x="1119.2" y="115.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1122.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (6 samples, 0.11%)</title><rect x="1119.4" y="99.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1122.4" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (2 samples, 0.04%)</title><rect x="1120.2" y="83.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1123.2" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (5 samples, 0.09%)</title><rect x="1120.7" y="99.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1123.7" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkOffset (3 samples, 0.06%)</title><rect x="1121.1" y="83.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1124.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (221 samples, 4.08%)</title><rect x="1122.0" y="179.0" width="48.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1125.0" y="190.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (220 samples, 4.06%)</title><rect x="1122.2" y="163.0" width="48.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1125.2" y="174.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (220 samples, 4.06%)</title><rect x="1122.2" y="147.0" width="48.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.2" y="158.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.04%)</title><rect x="1124.2" y="131.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1127.2" y="142.0"></text>
</g>
<g>
<title>__pread (202 samples, 3.73%)</title><rect x="1124.6" y="131.0" width="44.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1127.6" y="142.0">__pr..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.07%)</title><rect x="1168.6" y="131.0" width="0.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1171.6" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.06%)</title><rect x="1169.5" y="131.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1172.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (10 samples, 0.18%)</title><rect x="1170.2" y="179.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1173.2" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (10 samples, 0.18%)</title><rect x="1170.2" y="163.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1173.2" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (10 samples, 0.18%)</title><rect x="1170.2" y="147.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1173.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (10 samples, 0.18%)</title><rect x="1170.2" y="131.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1173.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (20 samples, 0.37%)</title><rect x="1172.3" y="179.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1175.3" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (20 samples, 0.37%)</title><rect x="1172.3" y="163.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1175.3" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (20 samples, 0.37%)</title><rect x="1172.3" y="147.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1175.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (20 samples, 0.37%)</title><rect x="1172.3" y="131.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1175.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (31 samples, 0.57%)</title><rect x="1176.7" y="195.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1179.7" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.07%)</title><rect x="1182.6" y="179.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1185.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (9 samples, 0.17%)</title><rect x="1183.5" y="195.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1186.5" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.06%)</title><rect x="1184.8" y="179.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1187.8" y="190.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.06%)</title><rect x="1184.8" y="163.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.8" y="174.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (2 samples, 0.04%)</title><rect x="1185.0" y="147.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.17%)</title><rect x="1185.4" y="355.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1188.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.17%)</title><rect x="1185.4" y="339.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1188.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.17%)</title><rect x="1185.4" y="323.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1188.4" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.06%)</title><rect x="1185.4" y="307.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1188.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.06%)</title><rect x="1185.4" y="291.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.4" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.06%)</title><rect x="1185.4" y="275.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="1185.4" y="259.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1188.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="1185.4" y="243.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1188.4" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="1185.6" y="227.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1188.6" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="1185.6" y="211.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1188.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="1185.6" y="195.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1188.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="1185.6" y="179.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1188.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.04%)</title><rect x="1185.6" y="163.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1188.6" y="174.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6 samples, 0.11%)</title><rect x="1186.1" y="307.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1189.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6 samples, 0.11%)</title><rect x="1186.1" y="291.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1189.1" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6 samples, 0.11%)</title><rect x="1186.1" y="275.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1189.1" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6 samples, 0.11%)</title><rect x="1186.1" y="259.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1189.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.11%)</title><rect x="1186.1" y="243.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1189.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.11%)</title><rect x="1186.1" y="227.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1189.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6 samples, 0.11%)</title><rect x="1186.1" y="211.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1189.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.09%)</title><rect x="1186.3" y="195.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1189.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.09%)</title><rect x="1186.3" y="179.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1189.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (5 samples, 0.09%)</title><rect x="1186.3" y="163.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1189.3" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.07%)</title><rect x="1186.5" y="147.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1189.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.07%)</title><rect x="1186.5" y="131.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1189.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.06%)</title><rect x="1186.5" y="115.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1189.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.06%)</title><rect x="1186.5" y="99.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1189.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.06%)</title><rect x="1186.5" y="83.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1189.5" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.06%)</title><rect x="1186.5" y="67.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1189.5" y="78.0"></text>
</g>
<g>
<title>__pread (2 samples, 0.04%)</title><rect x="1186.7" y="51.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1189.7" y="62.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 0.09%)</title><rect x="1187.6" y="515.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1190.6" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (5 samples, 0.09%)</title><rect x="1187.6" y="499.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1190.6" y="510.0"></text>
</g>
<g>
<title>__recv (4 samples, 0.07%)</title><rect x="1187.8" y="483.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1190.8" y="494.0"></text>
</g>
<g>
<title>[RMI TCP Connection(1)-127.0.0.1 tid=7198] (3 samples, 0.06%)</title><rect x="1188.7" y="579.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1191.7" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.06%)</title><rect x="1188.7" y="563.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1191.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.06%)</title><rect x="1188.7" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1191.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.06%)</title><rect x="1188.7" y="531.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1191.7" y="542.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (3 samples, 0.06%)</title><rect x="1188.7" y="515.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.7" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.06%)</title><rect x="1188.7" y="499.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1191.7" y="510.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$93/1386574298.run (3 samples, 0.06%)</title><rect x="1188.7" y="483.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1191.7" y="494.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (3 samples, 0.06%)</title><rect x="1188.7" y="467.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1191.7" y="478.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (3 samples, 0.06%)</title><rect x="1188.7" y="451.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.7" y="462.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (3 samples, 0.06%)</title><rect x="1188.7" y="435.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.7" y="446.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (3 samples, 0.06%)</title><rect x="1188.7" y="419.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1191.7" y="430.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.06%)</title><rect x="1188.7" y="403.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.7" y="414.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (3 samples, 0.06%)</title><rect x="1188.7" y="387.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1191.7" y="398.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (3 samples, 0.06%)</title><rect x="1188.7" y="371.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1191.7" y="382.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (3 samples, 0.06%)</title><rect x="1188.7" y="355.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1191.7" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.04%)</title><rect x="1188.7" y="339.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.04%)</title><rect x="1188.7" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1191.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor38.invoke (2 samples, 0.04%)</title><rect x="1188.7" y="307.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1191.7" y="318.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttributes (2 samples, 0.04%)</title><rect x="1188.7" y="291.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1191.7" y="302.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (2 samples, 0.04%)</title><rect x="1188.7" y="275.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.7" y="286.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (2 samples, 0.04%)</title><rect x="1188.7" y="259.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1191.7" y="270.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (2 samples, 0.04%)</title><rect x="1188.7" y="243.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1191.7" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttributes (2 samples, 0.04%)</title><rect x="1188.7" y="227.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.7" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttributes (2 samples, 0.04%)</title><rect x="1188.7" y="211.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1191.7" y="222.0"></text>
</g>
<g>
<title>[VM Thread tid=6974] (3 samples, 0.06%)</title><rect x="1189.3" y="579.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1192.3" y="590.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.04%)</title><rect x="1189.6" y="563.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1192.6" y="574.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.04%)</title><rect x="1189.6" y="547.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1192.6" y="558.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.04%)</title><rect x="1189.6" y="531.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.6" y="542.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.04%)</title><rect x="1189.6" y="515.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.6" y="526.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.04%)</title><rect x="1189.6" y="499.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.6" y="510.0"></text>
</g>
</g>
</svg>
