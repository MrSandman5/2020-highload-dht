<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="501"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="501"> </text>
<g id="frames">
<g>
<title>all (43 samples, 100.00%)</title><rect x="10.0" y="467.0" width="1180.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="478.0">all</text>
</g>
<g>
<title>[unknown_Java] (3 samples, 6.98%)</title><rect x="10.0" y="451.0" width="82.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.0" y="462.0">[unknown_..</text>
</g>
<g>
<title>Interpreter (1 samples, 2.33%)</title><rect x="10.0" y="435.0" width="27.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="446.0">I..</text>
</g>
<g>
<title>__clock_gettime (2 samples, 4.65%)</title><rect x="37.4" y="435.0" width="54.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="40.4" y="446.0">__clo..</text>
</g>
<g>
<title>[vdso] (2 samples, 4.65%)</title><rect x="37.4" y="419.0" width="54.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="40.4" y="430.0">[vdso]</text>
</g>
<g>
<title>java/lang/Thread.run (28 samples, 65.12%)</title><rect x="92.3" y="451.0" width="768.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="95.3" y="462.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (28 samples, 65.12%)</title><rect x="92.3" y="435.0" width="768.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="95.3" y="446.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (28 samples, 65.12%)</title><rect x="92.3" y="419.0" width="768.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="95.3" y="430.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 9.30%)</title><rect x="92.3" y="403.0" width="109.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="95.3" y="414.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (4 samples, 9.30%)</title><rect x="92.3" y="387.0" width="109.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="95.3" y="398.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (4 samples, 9.30%)</title><rect x="92.3" y="371.0" width="109.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="95.3" y="382.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (1 samples, 2.33%)</title><rect x="92.3" y="355.0" width="27.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="95.3" y="366.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (1 samples, 2.33%)</title><rect x="92.3" y="339.0" width="27.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="95.3" y="350.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 2.33%)</title><rect x="92.3" y="323.0" width="27.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="95.3" y="334.0">j..</text>
</g>
<g>
<title>Unsafe_Park (1 samples, 2.33%)</title><rect x="92.3" y="307.0" width="27.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="95.3" y="318.0">U..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 2.33%)</title><rect x="92.3" y="291.0" width="27.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="95.3" y="302.0">P..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (3 samples, 6.98%)</title><rect x="119.8" y="355.0" width="82.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.8" y="366.0">java/util..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$86/336669398.run (10 samples, 23.26%)</title><rect x="202.1" y="403.0" width="274.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.1" y="414.0">ru/mail/polis/service/mrsandman5/Serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$asyncExecute$12 (10 samples, 23.26%)</title><rect x="202.1" y="387.0" width="274.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="205.1" y="398.0">ru/mail/polis/service/mrsandman5/Serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$100/1689499378.act (8 samples, 18.60%)</title><rect x="202.1" y="371.0" width="219.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="205.1" y="382.0">ru/mail/polis/service/mrsandm..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replicasGet$1 (8 samples, 18.60%)</title><rect x="202.1" y="355.0" width="219.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="205.1" y="366.0">ru/mail/polis/service/mrsandm..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/SimpleRequests.get (8 samples, 18.60%)</title><rect x="202.1" y="339.0" width="219.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="205.1" y="350.0">ru/mail/polis/service/mrsandm..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/Entry.entryFromBytes (7 samples, 16.28%)</title><rect x="202.1" y="323.0" width="192.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="205.1" y="334.0">ru/mail/polis/service/mrs..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 2.33%)</title><rect x="202.1" y="307.0" width="27.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="205.1" y="318.0">r..</text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils$$Lambda$99/825650796.apply (1 samples, 2.33%)</title><rect x="202.1" y="291.0" width="27.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="205.1" y="302.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 2.33%)</title><rect x="202.1" y="275.0" width="27.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="205.1" y="286.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 2.33%)</title><rect x="202.1" y="259.0" width="27.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.1" y="270.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 2.33%)</title><rect x="202.1" y="243.0" width="27.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="205.1" y="254.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 2.33%)</title><rect x="202.1" y="227.0" width="27.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="205.1" y="238.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 2.33%)</title><rect x="202.1" y="211.0" width="27.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.1" y="222.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 2.33%)</title><rect x="202.1" y="195.0" width="27.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="205.1" y="206.0">j..</text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 2.33%)</title><rect x="202.1" y="179.0" width="27.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="205.1" y="190.0">j..</text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.entryIterators (6 samples, 13.95%)</title><rect x="229.5" y="307.0" width="164.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="232.5" y="318.0">ru/mail/polis/utils/I..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (6 samples, 13.95%)</title><rect x="229.5" y="291.0" width="164.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="232.5" y="302.0">ru/mail/polis/dao/imp..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (6 samples, 13.95%)</title><rect x="229.5" y="275.0" width="164.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="232.5" y="286.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (6 samples, 13.95%)</title><rect x="229.5" y="259.0" width="164.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="232.5" y="270.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (6 samples, 13.95%)</title><rect x="229.5" y="243.0" width="164.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="232.5" y="254.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (6 samples, 13.95%)</title><rect x="229.5" y="227.0" width="164.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="232.5" y="238.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (6 samples, 13.95%)</title><rect x="229.5" y="211.0" width="164.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="232.5" y="222.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 2.33%)</title><rect x="229.5" y="195.0" width="27.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="232.5" y="206.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 2.33%)</title><rect x="229.5" y="179.0" width="27.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="232.5" y="190.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 2.33%)</title><rect x="229.5" y="163.0" width="27.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="232.5" y="174.0">j..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 2.33%)</title><rect x="229.5" y="147.0" width="27.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="232.5" y="158.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 2.33%)</title><rect x="229.5" y="131.0" width="27.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="232.5" y="142.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (5 samples, 11.63%)</title><rect x="257.0" y="195.0" width="137.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="260.0" y="206.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 9.30%)</title><rect x="284.4" y="179.0" width="109.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="287.4" y="190.0">java/util/con..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 9.30%)</title><rect x="284.4" y="163.0" width="109.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.4" y="174.0">java/nio/Byte..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 6.98%)</title><rect x="311.9" y="147.0" width="82.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="314.9" y="158.0">java/nio/..</text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 2.33%)</title><rect x="339.3" y="131.0" width="27.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="342.3" y="142.0">j..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 2.33%)</title><rect x="339.3" y="115.0" width="27.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.3" y="126.0">j..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 2.33%)</title><rect x="366.7" y="131.0" width="27.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="369.7" y="142.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/Entry.entryToResponse (1 samples, 2.33%)</title><rect x="394.2" y="323.0" width="27.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="397.2" y="334.0">r..</text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.nonemptyResponse (1 samples, 2.33%)</title><rect x="394.2" y="307.0" width="27.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="397.2" y="318.0">r..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 2.33%)</title><rect x="394.2" y="291.0" width="27.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="397.2" y="302.0">o..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 2.33%)</title><rect x="394.2" y="275.0" width="27.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="397.2" y="286.0">j..</text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (2 samples, 4.65%)</title><rect x="421.6" y="371.0" width="54.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="424.6" y="382.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 4.65%)</title><rect x="421.6" y="355.0" width="54.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="424.6" y="366.0">one/n..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 2.33%)</title><rect x="421.6" y="339.0" width="27.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="424.6" y="350.0">S..</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 2.33%)</title><rect x="421.6" y="323.0" width="27.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="424.6" y="334.0">O..</text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 2.33%)</title><rect x="421.6" y="307.0" width="27.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="424.6" y="318.0">O..</text>
</g>
<g>
<title>ObjectSynchronizer::omAlloc(Thread*) (1 samples, 2.33%)</title><rect x="421.6" y="291.0" width="27.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="424.6" y="302.0">O..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 2.33%)</title><rect x="449.1" y="339.0" width="27.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="452.1" y="350.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 2.33%)</title><rect x="449.1" y="323.0" width="27.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="452.1" y="334.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 2.33%)</title><rect x="449.1" y="307.0" width="27.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="452.1" y="318.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 2.33%)</title><rect x="449.1" y="291.0" width="27.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.1" y="302.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 2.33%)</title><rect x="449.1" y="275.0" width="27.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.1" y="286.0">o..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$89/1483688984.run (14 samples, 32.56%)</title><rect x="476.5" y="403.0" width="384.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.5" y="414.0">ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replicasGet$3 (14 samples, 32.56%)</title><rect x="476.5" y="387.0" width="384.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.5" y="398.0">ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.replication (13 samples, 30.23%)</title><rect x="476.5" y="371.0" width="356.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.5" y="382.0">ru/mail/polis/service/mrsandman5/ServiceImpl.rep..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (10 samples, 23.26%)</title><rect x="476.5" y="355.0" width="274.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="479.5" y="366.0">java/util/stream/ReferencePipeline.co..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 23.26%)</title><rect x="476.5" y="339.0" width="274.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="479.5" y="350.0">java/util/stream/AbstractPipeline.eva..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (10 samples, 23.26%)</title><rect x="476.5" y="323.0" width="274.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="479.5" y="334.0">java/util/stream/ReduceOps$ReduceOp.e..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (10 samples, 23.26%)</title><rect x="476.5" y="307.0" width="274.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="479.5" y="318.0">java/util/stream/AbstractPipeline.wra..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (10 samples, 23.26%)</title><rect x="476.5" y="291.0" width="274.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.5" y="302.0">java/util/stream/AbstractPipeline.cop..</text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (10 samples, 23.26%)</title><rect x="476.5" y="275.0" width="274.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.5" y="286.0">java/util/HashMap$KeySpliterator.forE..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (10 samples, 23.26%)</title><rect x="476.5" y="259.0" width="274.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="479.5" y="270.0">java/util/stream/ReferencePipeline$3$..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$79/751199668.apply (10 samples, 23.26%)</title><rect x="476.5" y="243.0" width="274.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="479.5" y="254.0">ru/mail/polis/service/mrsandman5/Serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replication$0 (10 samples, 23.26%)</title><rect x="476.5" y="227.0" width="274.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="479.5" y="238.0">ru/mail/polis/service/mrsandman5/Serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$93/1086403673.act (1 samples, 2.33%)</title><rect x="476.5" y="211.0" width="27.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.5" y="222.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replicasGet$2 (1 samples, 2.33%)</title><rect x="476.5" y="195.0" width="27.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.5" y="206.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/SimpleRequests.get (1 samples, 2.33%)</title><rect x="476.5" y="179.0" width="27.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.5" y="190.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/Entry.entryFromBytes (1 samples, 2.33%)</title><rect x="476.5" y="163.0" width="27.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="479.5" y="174.0">r..</text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.entryIterators (1 samples, 2.33%)</title><rect x="476.5" y="147.0" width="27.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.5" y="158.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (1 samples, 2.33%)</title><rect x="476.5" y="131.0" width="27.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.5" y="142.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (1 samples, 2.33%)</title><rect x="476.5" y="115.0" width="27.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.5" y="126.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (1 samples, 2.33%)</title><rect x="476.5" y="99.0" width="27.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.5" y="110.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 2.33%)</title><rect x="476.5" y="83.0" width="27.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="479.5" y="94.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (1 samples, 2.33%)</title><rect x="476.5" y="67.0" width="27.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="479.5" y="78.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (1 samples, 2.33%)</title><rect x="476.5" y="51.0" width="27.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="479.5" y="62.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (1 samples, 2.33%)</title><rect x="476.5" y="35.0" width="27.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="479.5" y="46.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.proxy (9 samples, 20.93%)</title><rect x="504.0" y="211.0" width="246.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="507.0" y="222.0">ru/mail/polis/service/mrsandman5/..</text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 2.33%)</title><rect x="504.0" y="195.0" width="27.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="507.0" y="206.0">j..</text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 2.33%)</title><rect x="504.0" y="179.0" width="27.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="507.0" y="190.0">j..</text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 2.33%)</title><rect x="504.0" y="163.0" width="27.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="507.0" y="174.0">j..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (8 samples, 18.60%)</title><rect x="531.4" y="195.0" width="219.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.4" y="206.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (8 samples, 18.60%)</title><rect x="531.4" y="179.0" width="219.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="534.4" y="190.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (3 samples, 6.98%)</title><rect x="531.4" y="163.0" width="82.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="534.4" y="174.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 6.98%)</title><rect x="531.4" y="147.0" width="82.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="534.4" y="158.0">one/nio/n..</text>
</g>
<g>
<title>__recv (2 samples, 4.65%)</title><rect x="558.8" y="131.0" width="54.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="561.8" y="142.0">__recv</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (3 samples, 6.98%)</title><rect x="613.7" y="163.0" width="82.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="616.7" y="174.0">one/nio/h..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 2.33%)</title><rect x="641.2" y="147.0" width="27.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="644.2" y="158.0">j..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (1 samples, 2.33%)</title><rect x="668.6" y="147.0" width="27.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="671.6" y="158.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 2.33%)</title><rect x="668.6" y="131.0" width="27.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="671.6" y="142.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 2.33%)</title><rect x="668.6" y="115.0" width="27.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="671.6" y="126.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1 samples, 2.33%)</title><rect x="696.0" y="163.0" width="27.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="699.0" y="174.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 2.33%)</title><rect x="696.0" y="147.0" width="27.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.0" y="158.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 2.33%)</title><rect x="696.0" y="131.0" width="27.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="699.0" y="142.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 2.33%)</title><rect x="696.0" y="115.0" width="27.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.0" y="126.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 2.33%)</title><rect x="696.0" y="99.0" width="27.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.0" y="110.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1 samples, 2.33%)</title><rect x="723.5" y="163.0" width="27.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="726.5" y="174.0">o..</text>
</g>
<g>
<title>__libc_send (1 samples, 2.33%)</title><rect x="723.5" y="147.0" width="27.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="726.5" y="158.0">_..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/clustering/ConsistentHashingTopology.replicasFor (3 samples, 6.98%)</title><rect x="750.9" y="355.0" width="82.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="753.9" y="366.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (3 samples, 6.98%)</title><rect x="750.9" y="339.0" width="82.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="753.9" y="350.0">com/googl..</text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (2 samples, 4.65%)</title><rect x="750.9" y="323.0" width="54.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.9" y="334.0">com/g..</text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (2 samples, 4.65%)</title><rect x="750.9" y="307.0" width="54.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="753.9" y="318.0">com/g..</text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (2 samples, 4.65%)</title><rect x="750.9" y="291.0" width="54.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.9" y="302.0">com/g..</text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2 samples, 4.65%)</title><rect x="750.9" y="275.0" width="54.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="753.9" y="286.0">com/g..</text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2 samples, 4.65%)</title><rect x="750.9" y="259.0" width="54.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.9" y="270.0">com/g..</text>
</g>
<g>
<title>com/google/common/hash/AbstractHasher.&lt;init&gt; (1 samples, 2.33%)</title><rect x="750.9" y="243.0" width="27.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="753.9" y="254.0">c..</text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 2.33%)</title><rect x="750.9" y="227.0" width="27.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="753.9" y="238.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.order (1 samples, 2.33%)</title><rect x="778.4" y="243.0" width="27.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="781.4" y="254.0">j..</text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (1 samples, 2.33%)</title><rect x="805.8" y="323.0" width="27.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.8" y="334.0">c..</text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 2.33%)</title><rect x="805.8" y="307.0" width="27.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="808.8" y="318.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 2.33%)</title><rect x="805.8" y="291.0" width="27.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="808.8" y="302.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 2.33%)</title><rect x="805.8" y="275.0" width="27.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.8" y="286.0">j..</text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (1 samples, 2.33%)</title><rect x="833.3" y="371.0" width="27.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="836.3" y="382.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 2.33%)</title><rect x="833.3" y="355.0" width="27.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="836.3" y="366.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 2.33%)</title><rect x="833.3" y="339.0" width="27.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="836.3" y="350.0">j..</text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 2.33%)</title><rect x="833.3" y="323.0" width="27.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="836.3" y="334.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 2.33%)</title><rect x="833.3" y="307.0" width="27.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="836.3" y="318.0">j..</text>
</g>
<g>
<title>gettimeofday (1 samples, 2.33%)</title><rect x="833.3" y="291.0" width="27.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="836.3" y="302.0">g..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (12 samples, 27.91%)</title><rect x="860.7" y="451.0" width="329.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="863.7" y="462.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 6.98%)</title><rect x="888.1" y="435.0" width="82.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="891.1" y="446.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 6.98%)</title><rect x="888.1" y="419.0" width="82.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="891.1" y="430.0">one/nio/n..</text>
</g>
<g>
<title>epoll_wait (3 samples, 6.98%)</title><rect x="888.1" y="403.0" width="82.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="891.1" y="414.0">epoll_wait</text>
</g>
<g>
<title>one/nio/net/Session.process (8 samples, 18.60%)</title><rect x="970.5" y="435.0" width="219.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="973.5" y="446.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8 samples, 18.60%)</title><rect x="970.5" y="419.0" width="219.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="973.5" y="430.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (7 samples, 16.28%)</title><rect x="970.5" y="403.0" width="192.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="973.5" y="414.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 2.33%)</title><rect x="970.5" y="387.0" width="27.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="973.5" y="398.0">I..</text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 2.33%)</title><rect x="997.9" y="387.0" width="27.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1000.9" y="398.0">I..</text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 2.33%)</title><rect x="997.9" y="371.0" width="27.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1000.9" y="382.0">I..</text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 2.33%)</title><rect x="997.9" y="355.0" width="27.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1000.9" y="366.0">T..</text>
</g>
<g>
<title>TieredThresholdPolicy::method_back_branch_event(methodHandle const&amp;, methodHandle const&amp;, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 2.33%)</title><rect x="997.9" y="339.0" width="27.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1000.9" y="350.0">T..</text>
</g>
<g>
<title>TieredThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 2.33%)</title><rect x="997.9" y="323.0" width="27.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1000.9" y="334.0">T..</text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 2.33%)</title><rect x="997.9" y="307.0" width="27.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1000.9" y="318.0">C..</text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 2.33%)</title><rect x="997.9" y="291.0" width="27.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1000.9" y="302.0">C..</text>
</g>
<g>
<title>InstanceKlass::lookup_osr_nmethod(Method const*, int, int, bool) const (1 samples, 2.33%)</title><rect x="997.9" y="275.0" width="27.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1000.9" y="286.0">I..</text>
</g>
<g>
<title>SharedRuntime::OSR_migration_end(long*) (1 samples, 2.33%)</title><rect x="1025.3" y="387.0" width="27.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1028.3" y="398.0">S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 6.98%)</title><rect x="1052.8" y="387.0" width="82.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1055.8" y="398.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 6.98%)</title><rect x="1052.8" y="371.0" width="82.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1055.8" y="382.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (3 samples, 6.98%)</title><rect x="1052.8" y="355.0" width="82.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1055.8" y="366.0">RequestHa..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (3 samples, 6.98%)</title><rect x="1052.8" y="339.0" width="82.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1055.8" y="350.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 2.33%)</title><rect x="1052.8" y="323.0" width="27.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1055.8" y="334.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 2.33%)</title><rect x="1052.8" y="307.0" width="27.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1055.8" y="318.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.replicasPut (2 samples, 4.65%)</title><rect x="1080.2" y="323.0" width="54.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1083.2" y="334.0">ru/ma..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 2.33%)</title><rect x="1080.2" y="307.0" width="27.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1083.2" y="318.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 2.33%)</title><rect x="1080.2" y="291.0" width="27.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1083.2" y="302.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$85/450287612.get$Lambda (1 samples, 2.33%)</title><rect x="1080.2" y="275.0" width="27.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1083.2" y="286.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$85/450287612.&lt;init&gt; (1 samples, 2.33%)</title><rect x="1080.2" y="259.0" width="27.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1083.2" y="270.0">r..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 2.33%)</title><rect x="1080.2" y="243.0" width="27.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1083.2" y="254.0">j..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (1 samples, 2.33%)</title><rect x="1107.7" y="307.0" width="27.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1110.7" y="318.0">o..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 2.33%)</title><rect x="1107.7" y="291.0" width="27.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1110.7" y="302.0">j..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (1 samples, 2.33%)</title><rect x="1107.7" y="275.0" width="27.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1110.7" y="286.0">o..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (1 samples, 2.33%)</title><rect x="1107.7" y="259.0" width="27.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1110.7" y="270.0">o..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (1 samples, 2.33%)</title><rect x="1107.7" y="243.0" width="27.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1110.7" y="254.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 2.33%)</title><rect x="1135.1" y="387.0" width="27.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1138.1" y="398.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 2.33%)</title><rect x="1135.1" y="371.0" width="27.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1138.1" y="382.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 2.33%)</title><rect x="1162.6" y="403.0" width="27.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1165.6" y="414.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 2.33%)</title><rect x="1162.6" y="387.0" width="27.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1165.6" y="398.0">o..</text>
</g>
<g>
<title>__recv (1 samples, 2.33%)</title><rect x="1162.6" y="371.0" width="27.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1165.6" y="382.0">_..</text>
</g>
</g>
</svg>
