<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="613"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="613"> </text>
<g id="frames">
<g>
<title>all (84,840 samples, 100.00%)</title><rect x="10.0" y="579.0" width="1180.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="13.0" y="590.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (54,354 samples, 64.07%)</title><rect x="10.0" y="563.0" width="756.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="574.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (54,354 samples, 64.07%)</title><rect x="10.0" y="547.0" width="756.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="558.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (54,354 samples, 64.07%)</title><rect x="10.0" y="531.0" width="756.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (14,708 samples, 17.34%)</title><rect x="10.0" y="515.0" width="204.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (14,708 samples, 17.34%)</title><rect x="10.0" y="499.0" width="204.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (14,120 samples, 16.64%)</title><rect x="10.0" y="483.0" width="196.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="494.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$161/701954098.apply (14,120 samples, 16.64%)</title><rect x="10.0" y="467.0" width="196.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/internal/net/http/Mult..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (14,120 samples, 16.64%)</title><rect x="10.0" y="451.0" width="196.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/internal/net/http/Mult..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (14,120 samples, 16.64%)</title><rect x="10.0" y="435.0" width="196.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="446.0">jdk/internal/net/http/Mult..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (9,518 samples, 11.22%)</title><rect x="10.0" y="419.0" width="132.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="430.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (9,518 samples, 11.22%)</title><rect x="10.0" y="403.0" width="132.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="414.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (9,518 samples, 11.22%)</title><rect x="10.0" y="387.0" width="132.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="398.0">jdk/internal/net..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (7,630 samples, 8.99%)</title><rect x="10.0" y="371.0" width="106.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="382.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (7,630 samples, 8.99%)</title><rect x="10.0" y="355.0" width="106.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="366.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7,630 samples, 8.99%)</title><rect x="10.0" y="339.0" width="106.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="350.0">java/util/con..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$280/1794368300.apply (7,630 samples, 8.99%)</title><rect x="10.0" y="323.0" width="106.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="334.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (7,630 samples, 8.99%)</title><rect x="10.0" y="307.0" width="106.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="318.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (7,630 samples, 8.99%)</title><rect x="10.0" y="291.0" width="106.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="302.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$204/1335605778.apply (7,630 samples, 8.99%)</title><rect x="10.0" y="275.0" width="106.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="286.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (7,630 samples, 8.99%)</title><rect x="10.0" y="259.0" width="106.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="270.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (7,630 samples, 8.99%)</title><rect x="10.0" y="243.0" width="106.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="254.0">jdk/internal/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7,630 samples, 8.99%)</title><rect x="10.0" y="227.0" width="106.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="238.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7,630 samples, 8.99%)</title><rect x="10.0" y="211.0" width="106.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="222.0">java/util/con..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$308/596850472.apply (7,630 samples, 8.99%)</title><rect x="10.0" y="195.0" width="106.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="206.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (7,630 samples, 8.99%)</title><rect x="10.0" y="179.0" width="106.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="190.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (7,630 samples, 8.99%)</title><rect x="10.0" y="163.0" width="106.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="174.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (7,630 samples, 8.99%)</title><rect x="10.0" y="147.0" width="106.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="158.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1,390 samples, 1.64%)</title><rect x="10.0" y="131.0" width="19.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1,390 samples, 1.64%)</title><rect x="10.0" y="115.0" width="19.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1,390 samples, 1.64%)</title><rect x="10.0" y="99.0" width="19.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1,390 samples, 1.64%)</title><rect x="10.0" y="83.0" width="19.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1,390 samples, 1.64%)</title><rect x="10.0" y="67.0" width="19.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="78.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (623 samples, 0.73%)</title><rect x="10.0" y="51.0" width="8.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="13.0" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (767 samples, 0.90%)</title><rect x="18.7" y="51.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="21.7" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (767 samples, 0.90%)</title><rect x="18.7" y="35.0" width="10.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="21.7" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (6,240 samples, 7.36%)</title><rect x="29.3" y="131.0" width="86.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.3" y="142.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (6,240 samples, 7.36%)</title><rect x="29.3" y="115.0" width="86.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.3" y="126.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (6,240 samples, 7.36%)</title><rect x="29.3" y="99.0" width="86.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.3" y="110.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (6,240 samples, 7.36%)</title><rect x="29.3" y="83.0" width="86.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.3" y="94.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (6,240 samples, 7.36%)</title><rect x="29.3" y="67.0" width="86.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.3" y="78.0">jdk/intern..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (4,999 samples, 5.89%)</title><rect x="29.3" y="51.0" width="69.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="32.3" y="62.0">jdk.int..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,241 samples, 1.46%)</title><rect x="98.9" y="51.0" width="17.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.9" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (1,241 samples, 1.46%)</title><rect x="98.9" y="35.0" width="17.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="101.9" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,888 samples, 2.23%)</title><rect x="116.1" y="371.0" width="26.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.1" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,888 samples, 2.23%)</title><rect x="116.1" y="355.0" width="26.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="119.1" y="366.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (1,888 samples, 2.23%)</title><rect x="116.1" y="339.0" width="26.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="119.1" y="350.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,888 samples, 2.23%)</title><rect x="116.1" y="323.0" width="26.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.1" y="334.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1,887 samples, 2.22%)</title><rect x="116.1" y="307.0" width="26.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.1" y="318.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (1,887 samples, 2.22%)</title><rect x="116.1" y="291.0" width="26.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="119.1" y="302.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (1,887 samples, 2.22%)</title><rect x="116.1" y="275.0" width="26.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="119.1" y="286.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (4,309 samples, 5.08%)</title><rect x="142.4" y="419.0" width="59.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.4" y="430.0">jdk/in..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (2,431 samples, 2.87%)</title><rect x="142.4" y="403.0" width="33.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="145.4" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (1,878 samples, 2.21%)</title><rect x="176.2" y="403.0" width="26.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="179.2" y="414.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,878 samples, 2.21%)</title><rect x="176.2" y="387.0" width="26.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="179.2" y="398.0">s..</text>
</g>
<g>
<title>java.lang.Object (1,878 samples, 2.21%)</title><rect x="176.2" y="371.0" width="26.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="179.2" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (293 samples, 0.35%)</title><rect x="202.3" y="419.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="205.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (293 samples, 0.35%)</title><rect x="202.3" y="403.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (279 samples, 0.33%)</title><rect x="202.5" y="387.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="205.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Class (279 samples, 0.33%)</title><rect x="202.5" y="371.0" width="3.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="205.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (588 samples, 0.69%)</title><rect x="206.4" y="483.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (588 samples, 0.69%)</title><rect x="206.4" y="467.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="209.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (576 samples, 0.68%)</title><rect x="206.4" y="451.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="209.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (576 samples, 0.68%)</title><rect x="206.4" y="435.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (576 samples, 0.68%)</title><rect x="206.4" y="419.0" width="8.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (576 samples, 0.68%)</title><rect x="206.4" y="403.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="209.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (576 samples, 0.68%)</title><rect x="206.4" y="387.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="209.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (576 samples, 0.68%)</title><rect x="206.4" y="371.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="209.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (576 samples, 0.68%)</title><rect x="206.4" y="355.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="209.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (576 samples, 0.68%)</title><rect x="206.4" y="339.0" width="8.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (576 samples, 0.68%)</title><rect x="206.4" y="323.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="209.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (576 samples, 0.68%)</title><rect x="206.4" y="307.0" width="8.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="209.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,750 samples, 2.06%)</title><rect x="214.6" y="515.0" width="24.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="217.6" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,189 samples, 1.40%)</title><rect x="214.6" y="499.0" width="16.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="217.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,189 samples, 1.40%)</title><rect x="214.6" y="483.0" width="16.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="217.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,189 samples, 1.40%)</title><rect x="214.6" y="467.0" width="16.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="217.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,189 samples, 1.40%)</title><rect x="214.6" y="451.0" width="16.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="217.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,189 samples, 1.40%)</title><rect x="214.6" y="435.0" width="16.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="217.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,189 samples, 1.40%)</title><rect x="214.6" y="419.0" width="16.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="217.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,189 samples, 1.40%)</title><rect x="214.6" y="403.0" width="16.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="217.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,189 samples, 1.40%)</title><rect x="214.6" y="387.0" width="16.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="217.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,189 samples, 1.40%)</title><rect x="214.6" y="371.0" width="16.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="217.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,189 samples, 1.40%)</title><rect x="214.6" y="355.0" width="16.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="217.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,189 samples, 1.40%)</title><rect x="214.6" y="339.0" width="16.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="217.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,189 samples, 1.40%)</title><rect x="214.6" y="323.0" width="16.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="217.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,189 samples, 1.40%)</title><rect x="214.6" y="307.0" width="16.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="217.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,189 samples, 1.40%)</title><rect x="214.6" y="291.0" width="16.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="217.6" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,189 samples, 1.40%)</title><rect x="214.6" y="275.0" width="16.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="217.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (561 samples, 0.66%)</title><rect x="231.1" y="499.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="234.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (561 samples, 0.66%)</title><rect x="231.1" y="483.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="234.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FuturesUtils$$Lambda$192/574997146.accept (561 samples, 0.66%)</title><rect x="231.1" y="467.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="234.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FuturesUtils.lambda$atLeastAsync$0 (561 samples, 0.66%)</title><rect x="231.1" y="451.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="234.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (560 samples, 0.66%)</title><rect x="231.1" y="435.0" width="7.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="234.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (560 samples, 0.66%)</title><rect x="231.1" y="419.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="234.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (560 samples, 0.66%)</title><rect x="231.1" y="403.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="234.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (560 samples, 0.66%)</title><rect x="231.1" y="387.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="234.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (560 samples, 0.66%)</title><rect x="231.1" y="371.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="234.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (560 samples, 0.66%)</title><rect x="231.1" y="355.0" width="7.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="234.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (560 samples, 0.66%)</title><rect x="231.1" y="339.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (560 samples, 0.66%)</title><rect x="231.1" y="323.0" width="7.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="234.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (560 samples, 0.66%)</title><rect x="231.1" y="307.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="234.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (560 samples, 0.66%)</title><rect x="231.1" y="291.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="234.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (560 samples, 0.66%)</title><rect x="231.1" y="275.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="234.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (560 samples, 0.66%)</title><rect x="231.1" y="259.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="234.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (560 samples, 0.66%)</title><rect x="231.1" y="243.0" width="7.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="234.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (13,684 samples, 16.13%)</title><rect x="238.9" y="515.0" width="190.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="241.9" y="526.0">java/util/concurrent/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (13,684 samples, 16.13%)</title><rect x="238.9" y="499.0" width="190.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="241.9" y="510.0">java/util/concurrent/Arra..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,947 samples, 2.29%)</title><rect x="238.9" y="483.0" width="27.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="241.9" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,947 samples, 2.29%)</title><rect x="238.9" y="467.0" width="27.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="241.9" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,947 samples, 2.29%)</title><rect x="238.9" y="451.0" width="27.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="241.9" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,947 samples, 2.29%)</title><rect x="238.9" y="435.0" width="27.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.9" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,947 samples, 2.29%)</title><rect x="238.9" y="419.0" width="27.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="241.9" y="430.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,947 samples, 2.29%)</title><rect x="238.9" y="403.0" width="27.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="241.9" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (11,737 samples, 13.83%)</title><rect x="266.0" y="483.0" width="163.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="269.0" y="494.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (11,737 samples, 13.83%)</title><rect x="266.0" y="467.0" width="163.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="269.0" y="478.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (11,737 samples, 13.83%)</title><rect x="266.0" y="451.0" width="163.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="269.0" y="462.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (11,737 samples, 13.83%)</title><rect x="266.0" y="435.0" width="163.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="269.0" y="446.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (11,737 samples, 13.83%)</title><rect x="266.0" y="419.0" width="163.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="269.0" y="430.0">java/util/concurrent/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11,737 samples, 13.83%)</title><rect x="266.0" y="403.0" width="163.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="269.0" y="414.0">jdk/internal/misc/Uns..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (11,737 samples, 13.83%)</title><rect x="266.0" y="387.0" width="163.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="269.0" y="398.0">java.util.concurrent...</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (24,202 samples, 28.53%)</title><rect x="429.4" y="515.0" width="336.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="432.4" y="526.0">jdk/internal/net/http/common/SequentialSchedul..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (24,202 samples, 28.53%)</title><rect x="429.4" y="499.0" width="336.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.4" y="510.0">jdk/internal/net/http/common/SequentialSchedul..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (9,074 samples, 10.70%)</title><rect x="429.4" y="483.0" width="126.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.4" y="494.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$270/1387273586.run (9,074 samples, 10.70%)</title><rect x="429.4" y="467.0" width="126.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="432.4" y="478.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (9,074 samples, 10.70%)</title><rect x="429.4" y="451.0" width="126.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.4" y="462.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (7,429 samples, 8.76%)</title><rect x="429.4" y="435.0" width="103.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.4" y="446.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (7,429 samples, 8.76%)</title><rect x="429.4" y="419.0" width="103.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="432.4" y="430.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (7,429 samples, 8.76%)</title><rect x="429.4" y="403.0" width="103.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="432.4" y="414.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (7,429 samples, 8.76%)</title><rect x="429.4" y="387.0" width="103.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="432.4" y="398.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (7,429 samples, 8.76%)</title><rect x="429.4" y="371.0" width="103.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="432.4" y="382.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (7,429 samples, 8.76%)</title><rect x="429.4" y="355.0" width="103.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="432.4" y="366.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (7,429 samples, 8.76%)</title><rect x="429.4" y="339.0" width="103.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="432.4" y="350.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (7,429 samples, 8.76%)</title><rect x="429.4" y="323.0" width="103.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="432.4" y="334.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (7,429 samples, 8.76%)</title><rect x="429.4" y="307.0" width="103.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.4" y="318.0">jdk/internal..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (6,413 samples, 7.56%)</title><rect x="429.4" y="291.0" width="89.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="432.4" y="302.0">jdk.intern..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,016 samples, 1.20%)</title><rect x="518.6" y="291.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.6" y="302.0"></text>
</g>
<g>
<title>java.lang.Object (1,016 samples, 1.20%)</title><rect x="518.6" y="275.0" width="14.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="521.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1,645 samples, 1.94%)</title><rect x="532.7" y="435.0" width="22.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="535.7" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,645 samples, 1.94%)</title><rect x="532.7" y="419.0" width="22.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="535.7" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,645 samples, 1.94%)</title><rect x="532.7" y="403.0" width="22.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="535.7" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,645 samples, 1.94%)</title><rect x="532.7" y="387.0" width="22.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="535.7" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,645 samples, 1.94%)</title><rect x="532.7" y="371.0" width="22.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="535.7" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,645 samples, 1.94%)</title><rect x="532.7" y="355.0" width="22.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="535.7" y="366.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,645 samples, 1.94%)</title><rect x="532.7" y="339.0" width="22.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.7" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,645 samples, 1.94%)</title><rect x="532.7" y="323.0" width="22.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="535.7" y="334.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,645 samples, 1.94%)</title><rect x="532.7" y="307.0" width="22.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="535.7" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,645 samples, 1.94%)</title><rect x="532.7" y="291.0" width="22.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="535.7" y="302.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,645 samples, 1.94%)</title><rect x="532.7" y="275.0" width="22.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="535.7" y="286.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,645 samples, 1.94%)</title><rect x="532.7" y="259.0" width="22.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="535.7" y="270.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,645 samples, 1.94%)</title><rect x="532.7" y="243.0" width="22.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="535.7" y="254.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (417 samples, 0.49%)</title><rect x="532.7" y="227.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="535.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$315/703902426.apply (417 samples, 0.49%)</title><rect x="532.7" y="211.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="535.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (417 samples, 0.49%)</title><rect x="532.7" y="195.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="535.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (417 samples, 0.49%)</title><rect x="532.7" y="179.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="535.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (417 samples, 0.49%)</title><rect x="532.7" y="163.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (417 samples, 0.49%)</title><rect x="532.7" y="147.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.7" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (417 samples, 0.49%)</title><rect x="532.7" y="131.0" width="5.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="535.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1,228 samples, 1.45%)</title><rect x="538.5" y="227.0" width="17.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="541.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,228 samples, 1.45%)</title><rect x="538.5" y="211.0" width="17.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="541.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$319/1455266356.apply (1,228 samples, 1.45%)</title><rect x="538.5" y="195.0" width="17.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="541.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (1,228 samples, 1.45%)</title><rect x="538.5" y="179.0" width="17.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (1,228 samples, 1.45%)</title><rect x="538.5" y="163.0" width="17.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="541.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (1,228 samples, 1.45%)</title><rect x="538.5" y="147.0" width="17.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="541.5" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (1,228 samples, 1.45%)</title><rect x="538.5" y="131.0" width="17.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="541.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (15,128 samples, 17.83%)</title><rect x="555.6" y="483.0" width="210.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="558.6" y="494.0">jdk/internal/net/http/common..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (15,128 samples, 17.83%)</title><rect x="555.6" y="467.0" width="210.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="558.6" y="478.0">jdk/internal/net/http/common..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (15,128 samples, 17.83%)</title><rect x="555.6" y="451.0" width="210.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.6" y="462.0">jdk/internal/net/http/common..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$270/1387273586.run (15,128 samples, 17.83%)</title><rect x="555.6" y="435.0" width="210.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.6" y="446.0">jdk/internal/net/http/Http1A..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (15,128 samples, 17.83%)</title><rect x="555.6" y="419.0" width="210.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.6" y="430.0">jdk/internal/net/http/Http1A..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (15,092 samples, 17.79%)</title><rect x="555.6" y="403.0" width="209.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="558.6" y="414.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (15,092 samples, 17.79%)</title><rect x="555.6" y="387.0" width="209.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.6" y="398.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (15,092 samples, 17.79%)</title><rect x="555.6" y="371.0" width="209.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.6" y="382.0">jdk/internal/net/http/Respo..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$402/1777809380.run (15,092 samples, 17.79%)</title><rect x="555.6" y="355.0" width="209.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.6" y="366.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (15,092 samples, 17.79%)</title><rect x="555.6" y="339.0" width="209.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="558.6" y="350.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (15,092 samples, 17.79%)</title><rect x="555.6" y="323.0" width="209.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="558.6" y="334.0">jdk/internal/net/http/HttpC..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (15,092 samples, 17.79%)</title><rect x="555.6" y="307.0" width="209.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="558.6" y="318.0">jdk/internal/net/http/Conne..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (15,092 samples, 17.79%)</title><rect x="555.6" y="291.0" width="209.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.6" y="302.0">jdk/internal/net/http/Conne..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (5,242 samples, 6.18%)</title><rect x="555.6" y="275.0" width="72.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="558.6" y="286.0">jdk.inte..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (9,850 samples, 11.61%)</title><rect x="628.5" y="275.0" width="137.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.5" y="286.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (9,850 samples, 11.61%)</title><rect x="628.5" y="259.0" width="137.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="631.5" y="270.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1,807 samples, 2.13%)</title><rect x="628.5" y="243.0" width="25.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="631.5" y="254.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1,807 samples, 2.13%)</title><rect x="628.5" y="227.0" width="25.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="631.5" y="238.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1,807 samples, 2.13%)</title><rect x="628.5" y="211.0" width="25.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="631.5" y="222.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1,807 samples, 2.13%)</title><rect x="628.5" y="195.0" width="25.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.5" y="206.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1,807 samples, 2.13%)</title><rect x="628.5" y="179.0" width="25.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.5" y="190.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1,248 samples, 1.47%)</title><rect x="628.5" y="163.0" width="17.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="631.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (559 samples, 0.66%)</title><rect x="645.8" y="163.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="648.8" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (559 samples, 0.66%)</title><rect x="645.8" y="147.0" width="7.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="648.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (8,043 samples, 9.48%)</title><rect x="653.6" y="243.0" width="111.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="656.6" y="254.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (8,043 samples, 9.48%)</title><rect x="653.6" y="227.0" width="111.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="656.6" y="238.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (8,043 samples, 9.48%)</title><rect x="653.6" y="211.0" width="111.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="656.6" y="222.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (8,043 samples, 9.48%)</title><rect x="653.6" y="195.0" width="111.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="656.6" y="206.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (8,043 samples, 9.48%)</title><rect x="653.6" y="179.0" width="111.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="656.6" y="190.0">jdk/internal/..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (7,310 samples, 8.62%)</title><rect x="653.6" y="163.0" width="101.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="656.6" y="174.0">jdk.internal..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (733 samples, 0.86%)</title><rect x="755.3" y="163.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="758.3" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (733 samples, 0.86%)</title><rect x="755.3" y="147.0" width="10.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="758.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (36 samples, 0.04%)</title><rect x="765.5" y="403.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="768.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (36 samples, 0.04%)</title><rect x="765.5" y="387.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="768.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (36 samples, 0.04%)</title><rect x="765.5" y="371.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="768.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (36 samples, 0.04%)</title><rect x="765.5" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="768.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (36 samples, 0.04%)</title><rect x="765.5" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (36 samples, 0.04%)</title><rect x="765.5" y="323.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (36 samples, 0.04%)</title><rect x="765.5" y="307.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="768.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (36 samples, 0.04%)</title><rect x="765.5" y="291.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="768.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (36 samples, 0.04%)</title><rect x="765.5" y="275.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="768.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (36 samples, 0.04%)</title><rect x="765.5" y="259.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="768.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (36 samples, 0.04%)</title><rect x="765.5" y="243.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="768.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (36 samples, 0.04%)</title><rect x="765.5" y="227.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (36 samples, 0.04%)</title><rect x="765.5" y="211.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="768.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (26 samples, 0.03%)</title><rect x="765.6" y="195.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="768.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (26 samples, 0.03%)</title><rect x="765.6" y="179.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$319/1455266356.apply (26 samples, 0.03%)</title><rect x="765.6" y="163.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="768.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (26 samples, 0.03%)</title><rect x="765.6" y="147.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (26 samples, 0.03%)</title><rect x="765.6" y="131.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="768.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (26 samples, 0.03%)</title><rect x="765.6" y="115.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.6" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (26 samples, 0.03%)</title><rect x="765.6" y="99.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="768.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (2,273 samples, 2.68%)</title><rect x="766.0" y="563.0" width="31.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="769.0" y="574.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (2,273 samples, 2.68%)</title><rect x="766.0" y="547.0" width="31.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.0" y="558.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (2,273 samples, 2.68%)</title><rect x="766.0" y="531.0" width="31.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.0" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (2,273 samples, 2.68%)</title><rect x="766.0" y="515.0" width="31.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="769.0" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (2,273 samples, 2.68%)</title><rect x="766.0" y="499.0" width="31.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="769.0" y="510.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (2,273 samples, 2.68%)</title><rect x="766.0" y="483.0" width="31.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="769.0" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2,273 samples, 2.68%)</title><rect x="766.0" y="467.0" width="31.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="769.0" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2,273 samples, 2.68%)</title><rect x="766.0" y="451.0" width="31.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="769.0" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,273 samples, 2.68%)</title><rect x="766.0" y="435.0" width="31.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.0" y="446.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,273 samples, 2.68%)</title><rect x="766.0" y="419.0" width="31.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.0" y="430.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2,273 samples, 2.68%)</title><rect x="766.0" y="403.0" width="31.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.0" y="414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,273 samples, 2.68%)</title><rect x="766.0" y="387.0" width="31.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.0" y="398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2,273 samples, 2.68%)</title><rect x="766.0" y="371.0" width="31.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="769.0" y="382.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2,273 samples, 2.68%)</title><rect x="766.0" y="355.0" width="31.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="769.0" y="366.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2,273 samples, 2.68%)</title><rect x="766.0" y="339.0" width="31.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="769.0" y="350.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2,273 samples, 2.68%)</title><rect x="766.0" y="323.0" width="31.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.0" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,273 samples, 2.68%)</title><rect x="766.0" y="307.0" width="31.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.0" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,273 samples, 2.68%)</title><rect x="766.0" y="291.0" width="31.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="769.0" y="302.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,273 samples, 2.68%)</title><rect x="766.0" y="275.0" width="31.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="769.0" y="286.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,273 samples, 2.68%)</title><rect x="766.0" y="259.0" width="31.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="769.0" y="270.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (24,474 samples, 28.85%)</title><rect x="797.6" y="563.0" width="340.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="800.6" y="574.0">jdk/internal/net/http/HttpClientImpl$SelectorM..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,481 samples, 1.75%)</title><rect x="797.6" y="547.0" width="20.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="800.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$329/591297947.accept (1,481 samples, 1.75%)</title><rect x="797.6" y="531.0" width="20.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="800.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (1,481 samples, 1.75%)</title><rect x="797.6" y="515.0" width="20.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="800.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (1,481 samples, 1.75%)</title><rect x="797.6" y="499.0" width="20.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="800.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (1,481 samples, 1.75%)</title><rect x="797.6" y="483.0" width="20.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="800.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (1,481 samples, 1.75%)</title><rect x="797.6" y="467.0" width="20.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="800.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (1,481 samples, 1.75%)</title><rect x="797.6" y="451.0" width="20.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="800.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,481 samples, 1.75%)</title><rect x="797.6" y="435.0" width="20.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="800.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,481 samples, 1.75%)</title><rect x="797.6" y="419.0" width="20.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="800.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,481 samples, 1.75%)</title><rect x="797.6" y="403.0" width="20.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="800.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,481 samples, 1.75%)</title><rect x="797.6" y="387.0" width="20.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="800.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$242/950557252.run (1,481 samples, 1.75%)</title><rect x="797.6" y="371.0" width="20.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="800.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,481 samples, 1.75%)</title><rect x="797.6" y="355.0" width="20.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="800.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1,481 samples, 1.75%)</title><rect x="797.6" y="339.0" width="20.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="800.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1,481 samples, 1.75%)</title><rect x="797.6" y="323.0" width="20.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="800.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (1,481 samples, 1.75%)</title><rect x="797.6" y="307.0" width="20.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="800.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,481 samples, 1.75%)</title><rect x="797.6" y="291.0" width="20.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="800.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,481 samples, 1.75%)</title><rect x="797.6" y="275.0" width="20.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="800.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,481 samples, 1.75%)</title><rect x="797.6" y="259.0" width="20.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="800.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,481 samples, 1.75%)</title><rect x="797.6" y="243.0" width="20.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="800.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,481 samples, 1.75%)</title><rect x="797.6" y="227.0" width="20.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="800.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,481 samples, 1.75%)</title><rect x="797.6" y="211.0" width="20.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="800.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,481 samples, 1.75%)</title><rect x="797.6" y="195.0" width="20.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="800.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,481 samples, 1.75%)</title><rect x="797.6" y="179.0" width="20.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="800.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,481 samples, 1.75%)</title><rect x="797.6" y="163.0" width="20.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="800.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,481 samples, 1.75%)</title><rect x="797.6" y="147.0" width="20.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="800.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,481 samples, 1.75%)</title><rect x="797.6" y="131.0" width="20.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="800.6" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,481 samples, 1.75%)</title><rect x="797.6" y="115.0" width="20.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="800.6" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (12,142 samples, 14.31%)</title><rect x="818.2" y="547.0" width="168.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="821.2" y="558.0">jdk.internal.net.http...</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (3,678 samples, 4.34%)</title><rect x="987.1" y="547.0" width="51.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="990.1" y="558.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$250/1665419686.run (1,446 samples, 1.70%)</title><rect x="987.1" y="531.0" width="20.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="990.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (1,446 samples, 1.70%)</title><rect x="987.1" y="515.0" width="20.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="990.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,446 samples, 1.70%)</title><rect x="987.1" y="499.0" width="20.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="990.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,446 samples, 1.70%)</title><rect x="987.1" y="483.0" width="20.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="990.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,446 samples, 1.70%)</title><rect x="987.1" y="467.0" width="20.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="990.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,446 samples, 1.70%)</title><rect x="987.1" y="451.0" width="20.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="990.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$242/950557252.run (1,446 samples, 1.70%)</title><rect x="987.1" y="435.0" width="20.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="990.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,446 samples, 1.70%)</title><rect x="987.1" y="419.0" width="20.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="990.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1,446 samples, 1.70%)</title><rect x="987.1" y="403.0" width="20.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="990.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1,446 samples, 1.70%)</title><rect x="987.1" y="387.0" width="20.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="990.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (1,446 samples, 1.70%)</title><rect x="987.1" y="371.0" width="20.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="990.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,446 samples, 1.70%)</title><rect x="987.1" y="355.0" width="20.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="990.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,446 samples, 1.70%)</title><rect x="987.1" y="339.0" width="20.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="990.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,446 samples, 1.70%)</title><rect x="987.1" y="323.0" width="20.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="990.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,446 samples, 1.70%)</title><rect x="987.1" y="307.0" width="20.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="990.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,446 samples, 1.70%)</title><rect x="987.1" y="291.0" width="20.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="990.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,446 samples, 1.70%)</title><rect x="987.1" y="275.0" width="20.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="990.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,446 samples, 1.70%)</title><rect x="987.1" y="259.0" width="20.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="990.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,446 samples, 1.70%)</title><rect x="987.1" y="243.0" width="20.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="990.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,446 samples, 1.70%)</title><rect x="987.1" y="227.0" width="20.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="990.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,446 samples, 1.70%)</title><rect x="987.1" y="211.0" width="20.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="990.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,446 samples, 1.70%)</title><rect x="987.1" y="195.0" width="20.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="990.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,446 samples, 1.70%)</title><rect x="987.1" y="179.0" width="20.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="990.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$260/374484389.run (2,232 samples, 2.63%)</title><rect x="1007.2" y="531.0" width="31.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1010.2" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (2,232 samples, 2.63%)</title><rect x="1007.2" y="515.0" width="31.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1010.2" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,232 samples, 2.63%)</title><rect x="1007.2" y="499.0" width="31.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1010.2" y="510.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,232 samples, 2.63%)</title><rect x="1007.2" y="483.0" width="31.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1010.2" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2,232 samples, 2.63%)</title><rect x="1007.2" y="467.0" width="31.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1010.2" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2,232 samples, 2.63%)</title><rect x="1007.2" y="451.0" width="31.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1010.2" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2,232 samples, 2.63%)</title><rect x="1007.2" y="435.0" width="31.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1010.2" y="446.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2,232 samples, 2.63%)</title><rect x="1007.2" y="419.0" width="31.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1010.2" y="430.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,232 samples, 2.63%)</title><rect x="1007.2" y="403.0" width="31.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1010.2" y="414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,232 samples, 2.63%)</title><rect x="1007.2" y="387.0" width="31.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1010.2" y="398.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,232 samples, 2.63%)</title><rect x="1007.2" y="371.0" width="31.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1010.2" y="382.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,232 samples, 2.63%)</title><rect x="1007.2" y="355.0" width="31.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1010.2" y="366.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,863 samples, 3.37%)</title><rect x="1038.2" y="547.0" width="39.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1041.2" y="558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,863 samples, 3.37%)</title><rect x="1038.2" y="531.0" width="39.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.2" y="542.0">jdk..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (2,863 samples, 3.37%)</title><rect x="1038.2" y="515.0" width="39.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1041.2" y="526.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (3,121 samples, 3.68%)</title><rect x="1078.1" y="547.0" width="43.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1081.1" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (3,121 samples, 3.68%)</title><rect x="1078.1" y="531.0" width="43.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1081.1" y="542.0">jdk...</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1,151 samples, 1.36%)</title><rect x="1121.5" y="547.0" width="16.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1124.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1,151 samples, 1.36%)</title><rect x="1121.5" y="531.0" width="16.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1124.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1,151 samples, 1.36%)</title><rect x="1121.5" y="515.0" width="16.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1124.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1,151 samples, 1.36%)</title><rect x="1121.5" y="499.0" width="16.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1124.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (1,151 samples, 1.36%)</title><rect x="1121.5" y="483.0" width="16.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1124.5" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (1,151 samples, 1.36%)</title><rect x="1121.5" y="467.0" width="16.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1124.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (38 samples, 0.04%)</title><rect x="1137.5" y="547.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1140.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (38 samples, 0.04%)</title><rect x="1137.5" y="531.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1140.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (38 samples, 0.04%)</title><rect x="1137.5" y="515.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1140.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (38 samples, 0.04%)</title><rect x="1137.5" y="499.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1140.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (38 samples, 0.04%)</title><rect x="1137.5" y="483.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1140.5" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (38 samples, 0.04%)</title><rect x="1137.5" y="467.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1140.5" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,739 samples, 4.41%)</title><rect x="1138.0" y="563.0" width="52.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1141.0" y="574.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.process (3,739 samples, 4.41%)</title><rect x="1138.0" y="547.0" width="52.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.0" y="558.0">one/n..</text>
</g>
<g>
<title>one.nio.http.HttpSession (77 samples, 0.09%)</title><rect x="1138.0" y="531.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1141.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,662 samples, 4.32%)</title><rect x="1139.1" y="531.0" width="50.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1142.1" y="542.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,662 samples, 4.32%)</title><rect x="1139.1" y="515.0" width="50.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1142.1" y="526.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3,662 samples, 4.32%)</title><rect x="1139.1" y="499.0" width="50.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1142.1" y="510.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3,662 samples, 4.32%)</title><rect x="1139.1" y="483.0" width="50.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1142.1" y="494.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (3,662 samples, 4.32%)</title><rect x="1139.1" y="467.0" width="50.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1142.1" y="478.0">Reque..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (3,662 samples, 4.32%)</title><rect x="1139.1" y="451.0" width="50.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1142.1" y="462.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.replicasPut (3,097 samples, 3.65%)</title><rect x="1139.1" y="435.0" width="43.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1142.1" y="446.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1,014 samples, 1.20%)</title><rect x="1139.1" y="419.0" width="14.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1142.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1,014 samples, 1.20%)</title><rect x="1139.1" y="403.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1142.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,014 samples, 1.20%)</title><rect x="1139.1" y="387.0" width="14.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1142.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,014 samples, 1.20%)</title><rect x="1139.1" y="371.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,014 samples, 1.20%)</title><rect x="1139.1" y="355.0" width="14.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,014 samples, 1.20%)</title><rect x="1139.1" y="339.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,014 samples, 1.20%)</title><rect x="1139.1" y="323.0" width="14.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1142.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,014 samples, 1.20%)</title><rect x="1139.1" y="307.0" width="14.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1142.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,014 samples, 1.20%)</title><rect x="1139.1" y="291.0" width="14.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,014 samples, 1.20%)</title><rect x="1139.1" y="275.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1142.1" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,014 samples, 1.20%)</title><rect x="1139.1" y="259.0" width="14.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1142.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (1,883 samples, 2.22%)</title><rect x="1153.2" y="419.0" width="26.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1156.2" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,883 samples, 2.22%)</title><rect x="1153.2" y="403.0" width="26.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1156.2" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,883 samples, 2.22%)</title><rect x="1153.2" y="387.0" width="26.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1156.2" y="398.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,883 samples, 2.22%)</title><rect x="1153.2" y="371.0" width="26.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1156.2" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1,883 samples, 2.22%)</title><rect x="1153.2" y="355.0" width="26.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1156.2" y="366.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1,883 samples, 2.22%)</title><rect x="1153.2" y="339.0" width="26.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1156.2" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,883 samples, 2.22%)</title><rect x="1153.2" y="323.0" width="26.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1156.2" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,883 samples, 2.22%)</title><rect x="1153.2" y="307.0" width="26.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1156.2" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,883 samples, 2.22%)</title><rect x="1153.2" y="291.0" width="26.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1156.2" y="302.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,883 samples, 2.22%)</title><rect x="1153.2" y="275.0" width="26.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1156.2" y="286.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,883 samples, 2.22%)</title><rect x="1153.2" y="259.0" width="26.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1156.2" y="270.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,883 samples, 2.22%)</title><rect x="1153.2" y="243.0" width="26.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1156.2" y="254.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,883 samples, 2.22%)</title><rect x="1153.2" y="227.0" width="26.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1156.2" y="238.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,883 samples, 2.22%)</title><rect x="1153.2" y="211.0" width="26.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1156.2" y="222.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,883 samples, 2.22%)</title><rect x="1153.2" y="195.0" width="26.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1156.2" y="206.0">j..</text>
</g>
<g>
<title>ru/mail/polis/utils/FuturesUtils.atLeastAsync (200 samples, 0.24%)</title><rect x="1179.4" y="419.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1182.4" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (200 samples, 0.24%)</title><rect x="1179.4" y="403.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1182.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FuturesUtils$$Lambda$187/449291540.accept (200 samples, 0.24%)</title><rect x="1179.4" y="387.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1182.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FuturesUtils.lambda$atLeastAsync$1 (200 samples, 0.24%)</title><rect x="1179.4" y="371.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1182.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (200 samples, 0.24%)</title><rect x="1179.4" y="355.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1182.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (200 samples, 0.24%)</title><rect x="1179.4" y="339.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1182.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (200 samples, 0.24%)</title><rect x="1179.4" y="323.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1182.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (200 samples, 0.24%)</title><rect x="1179.4" y="307.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1182.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (200 samples, 0.24%)</title><rect x="1179.4" y="291.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1182.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (200 samples, 0.24%)</title><rect x="1179.4" y="275.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1182.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (200 samples, 0.24%)</title><rect x="1179.4" y="259.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1182.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (200 samples, 0.24%)</title><rect x="1179.4" y="243.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1182.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (200 samples, 0.24%)</title><rect x="1179.4" y="227.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1182.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (200 samples, 0.24%)</title><rect x="1179.4" y="211.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1182.4" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (200 samples, 0.24%)</title><rect x="1179.4" y="195.0" width="2.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1182.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/SimpleRequests.put (565 samples, 0.67%)</title><rect x="1182.1" y="435.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1185.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (565 samples, 0.67%)</title><rect x="1182.1" y="419.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1185.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (565 samples, 0.67%)</title><rect x="1182.1" y="403.0" width="7.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1185.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (565 samples, 0.67%)</title><rect x="1182.1" y="387.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1185.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (565 samples, 0.67%)</title><rect x="1182.1" y="371.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1185.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (565 samples, 0.67%)</title><rect x="1182.1" y="355.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1185.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (565 samples, 0.67%)</title><rect x="1182.1" y="339.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1185.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (565 samples, 0.67%)</title><rect x="1182.1" y="323.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1185.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (565 samples, 0.67%)</title><rect x="1182.1" y="307.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1185.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (565 samples, 0.67%)</title><rect x="1182.1" y="291.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1185.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (565 samples, 0.67%)</title><rect x="1182.1" y="275.0" width="7.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1185.1" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (565 samples, 0.67%)</title><rect x="1182.1" y="259.0" width="7.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1185.1" y="270.0"></text>
</g>
</g>
</svg>
