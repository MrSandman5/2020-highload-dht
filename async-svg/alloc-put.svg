<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="645"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="645"> </text>
<g id="frames">
<g>
<title>all (3,132 samples, 100.00%)</title><rect x="10.0" y="611.0" width="1180.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.0" y="622.0">all</text>
</g>
<g>
<title>[C1 CompilerThre tid=2832] (1 samples, 0.03%)</title><rect x="10.0" y="595.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.03%)</title><rect x="10.0" y="579.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.03%)</title><rect x="10.0" y="563.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=2839] (370 samples, 11.81%)</title><rect x="10.4" y="595.0" width="139.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.4" y="606.0">[NIO Selector #0 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (370 samples, 11.81%)</title><rect x="10.4" y="579.0" width="139.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.4" y="590.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/Session.process (370 samples, 11.81%)</title><rect x="10.4" y="563.0" width="139.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.4" y="574.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (370 samples, 11.81%)</title><rect x="10.4" y="547.0" width="139.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.4" y="558.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (370 samples, 11.81%)</title><rect x="10.4" y="531.0" width="139.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.4" y="542.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (288 samples, 9.20%)</title><rect x="10.4" y="515.0" width="108.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.4" y="526.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (288 samples, 9.20%)</title><rect x="10.4" y="499.0" width="108.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.4" y="510.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (275 samples, 8.78%)</title><rect x="10.4" y="483.0" width="103.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.4" y="494.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (26 samples, 0.83%)</title><rect x="10.4" y="467.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (26 samples, 0.83%)</title><rect x="10.4" y="451.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (16 samples, 0.51%)</title><rect x="10.4" y="435.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.4" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (16 samples, 0.51%)</title><rect x="10.4" y="419.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.4" y="430.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.51%)</title><rect x="10.4" y="403.0" width="6.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="13.4" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.32%)</title><rect x="16.4" y="435.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.4" y="446.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (10 samples, 0.32%)</title><rect x="16.4" y="419.0" width="3.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="19.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (9 samples, 0.29%)</title><rect x="20.2" y="467.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.29%)</title><rect x="20.2" y="451.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.29%)</title><rect x="20.2" y="435.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.29%)</title><rect x="20.2" y="419.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.06%)</title><rect x="20.2" y="403.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="23.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.22%)</title><rect x="20.9" y="403.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.9" y="414.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.22%)</title><rect x="20.9" y="387.0" width="2.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="23.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (240 samples, 7.66%)</title><rect x="23.6" y="467.0" width="90.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.6" y="478.0">ru/mail/po..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (161 samples, 5.14%)</title><rect x="23.6" y="451.0" width="60.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.6" y="462.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (161 samples, 5.14%)</title><rect x="23.6" y="435.0" width="60.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.6" y="446.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (159 samples, 5.08%)</title><rect x="23.6" y="419.0" width="59.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.6" y="430.0">ch/qos..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (17 samples, 0.54%)</title><rect x="23.6" y="403.0" width="6.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="26.6" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (142 samples, 4.53%)</title><rect x="30.0" y="403.0" width="53.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.0" y="414.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (142 samples, 4.53%)</title><rect x="30.0" y="387.0" width="53.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.0" y="398.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (142 samples, 4.53%)</title><rect x="30.0" y="371.0" width="53.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="33.0" y="382.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (142 samples, 4.53%)</title><rect x="30.0" y="355.0" width="53.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="33.0" y="366.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (142 samples, 4.53%)</title><rect x="30.0" y="339.0" width="53.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="33.0" y="350.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (142 samples, 4.53%)</title><rect x="30.0" y="323.0" width="53.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="33.0" y="334.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (35 samples, 1.12%)</title><rect x="30.0" y="307.0" width="13.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="33.0" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (35 samples, 1.12%)</title><rect x="30.0" y="291.0" width="13.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.0" y="302.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (35 samples, 1.12%)</title><rect x="30.0" y="275.0" width="13.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.0" y="286.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (35 samples, 1.12%)</title><rect x="30.0" y="259.0" width="13.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.0" y="270.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (3 samples, 0.10%)</title><rect x="30.0" y="243.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="33.0" y="254.0"></text>
</g>
<g>
<title>java.util.HashMap (4 samples, 0.13%)</title><rect x="31.1" y="243.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="34.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (17 samples, 0.54%)</title><rect x="32.6" y="243.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="35.6" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (17 samples, 0.54%)</title><rect x="32.6" y="227.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="35.6" y="238.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.54%)</title><rect x="32.6" y="211.0" width="6.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="35.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.26%)</title><rect x="39.0" y="243.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.26%)</title><rect x="39.0" y="227.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.0" y="238.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.03%)</title><rect x="39.0" y="211.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="42.0" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.22%)</title><rect x="39.4" y="211.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.4" y="222.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.22%)</title><rect x="39.4" y="195.0" width="2.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="42.4" y="206.0"></text>
</g>
<g>
<title>org.slf4j.helpers.FormattingTuple (3 samples, 0.10%)</title><rect x="42.0" y="243.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="45.0" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (107 samples, 3.42%)</title><rect x="43.2" y="307.0" width="40.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="46.2" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (71 samples, 2.27%)</title><rect x="43.2" y="291.0" width="26.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="46.2" y="302.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (71 samples, 2.27%)</title><rect x="43.2" y="275.0" width="26.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="46.2" y="286.0">c..</text>
</g>
<g>
<title>java.lang.StringBuilder (5 samples, 0.16%)</title><rect x="43.2" y="259.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="46.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (8 samples, 0.26%)</title><rect x="45.0" y="259.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.0" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (8 samples, 0.26%)</title><rect x="45.0" y="243.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.0" y="254.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.26%)</title><rect x="45.0" y="227.0" width="3.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="48.0" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (36 samples, 1.15%)</title><rect x="48.1" y="259.0" width="13.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="51.1" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (36 samples, 1.15%)</title><rect x="48.1" y="243.0" width="13.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.1" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (36 samples, 1.15%)</title><rect x="48.1" y="227.0" width="13.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="51.1" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (36 samples, 1.15%)</title><rect x="48.1" y="211.0" width="13.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.1" y="222.0"></text>
</g>
<g>
<title>byte[] (36 samples, 1.15%)</title><rect x="48.1" y="195.0" width="13.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="51.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (22 samples, 0.70%)</title><rect x="61.6" y="259.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.6" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.70%)</title><rect x="61.6" y="243.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.6" y="254.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.16%)</title><rect x="61.6" y="227.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="64.6" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.54%)</title><rect x="63.5" y="227.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="66.5" y="238.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.54%)</title><rect x="63.5" y="211.0" width="6.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="66.5" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (36 samples, 1.15%)</title><rect x="69.9" y="291.0" width="13.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="72.9" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (36 samples, 1.15%)</title><rect x="69.9" y="275.0" width="13.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (36 samples, 1.15%)</title><rect x="69.9" y="259.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (36 samples, 1.15%)</title><rect x="69.9" y="243.0" width="13.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (36 samples, 1.15%)</title><rect x="69.9" y="227.0" width="13.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.9" y="238.0"></text>
</g>
<g>
<title>byte[] (36 samples, 1.15%)</title><rect x="69.9" y="211.0" width="13.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="72.9" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.06%)</title><rect x="83.5" y="419.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="86.5" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="84.2" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="87.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.03%)</title><rect x="84.2" y="435.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="87.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.03%)</title><rect x="84.2" y="419.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="87.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="84.2" y="403.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.2" y="414.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.03%)</title><rect x="84.2" y="387.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="87.2" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.13%)</title><rect x="84.6" y="451.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.6" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.13%)</title><rect x="84.6" y="435.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.6" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.13%)</title><rect x="84.6" y="419.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="87.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (74 samples, 2.36%)</title><rect x="86.1" y="451.0" width="27.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.1" y="462.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.19%)</title><rect x="86.1" y="435.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="89.1" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.19%)</title><rect x="86.1" y="419.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="89.1" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.19%)</title><rect x="86.1" y="403.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="89.1" y="414.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.03%)</title><rect x="88.4" y="435.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="91.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (16 samples, 0.51%)</title><rect x="88.7" y="435.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.7" y="446.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.29%)</title><rect x="88.7" y="419.0" width="3.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="91.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.10%)</title><rect x="92.1" y="419.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="95.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.10%)</title><rect x="93.3" y="419.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="96.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="94.4" y="419.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.4" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="94.4" y="403.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="97.4" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="94.4" y="387.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.4" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="94.4" y="371.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.4" y="382.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.03%)</title><rect x="94.4" y="355.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="97.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (51 samples, 1.63%)</title><rect x="94.8" y="435.0" width="19.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.8" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (16 samples, 0.51%)</title><rect x="94.8" y="419.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.8" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.51%)</title><rect x="94.8" y="403.0" width="6.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="97.8" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.13%)</title><rect x="100.8" y="419.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="103.8" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.13%)</title><rect x="100.8" y="403.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="103.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (31 samples, 0.99%)</title><rect x="102.3" y="419.0" width="11.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="105.3" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (20 samples, 0.64%)</title><rect x="102.3" y="403.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.3" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (20 samples, 0.64%)</title><rect x="102.3" y="387.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="105.3" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (20 samples, 0.64%)</title><rect x="102.3" y="371.0" width="7.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="105.3" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.06%)</title><rect x="109.8" y="403.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.8" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.06%)</title><rect x="109.8" y="387.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="112.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (2 samples, 0.06%)</title><rect x="110.6" y="403.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="113.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.06%)</title><rect x="110.6" y="387.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.6" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (2 samples, 0.06%)</title><rect x="110.6" y="371.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="113.6" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (7 samples, 0.22%)</title><rect x="111.3" y="403.0" width="2.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="114.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (13 samples, 0.42%)</title><rect x="114.0" y="483.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.0" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.42%)</title><rect x="114.0" y="467.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.42%)</title><rect x="114.0" y="451.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.16%)</title><rect x="114.0" y="435.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="117.0" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.26%)</title><rect x="115.9" y="435.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="118.9" y="446.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.26%)</title><rect x="115.9" y="419.0" width="3.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="118.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (33 samples, 1.05%)</title><rect x="118.9" y="515.0" width="12.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="121.9" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Request (5 samples, 0.16%)</title><rect x="118.9" y="499.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="121.9" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 0.35%)</title><rect x="120.8" y="499.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.8" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.35%)</title><rect x="120.8" y="483.0" width="4.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="123.8" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.54%)</title><rect x="124.9" y="499.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="127.9" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.54%)</title><rect x="124.9" y="483.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="127.9" y="494.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.32%)</title><rect x="124.9" y="467.0" width="3.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="127.9" y="478.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.10%)</title><rect x="128.7" y="467.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="131.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.13%)</title><rect x="129.8" y="467.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.13%)</title><rect x="129.8" y="451.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.13%)</title><rect x="129.8" y="435.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.8" y="446.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.13%)</title><rect x="129.8" y="419.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="132.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (6 samples, 0.19%)</title><rect x="131.3" y="515.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="134.3" y="526.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.19%)</title><rect x="131.3" y="499.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="134.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.16%)</title><rect x="133.6" y="515.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.16%)</title><rect x="133.6" y="499.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.16%)</title><rect x="133.6" y="483.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.6" y="494.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.06%)</title><rect x="133.6" y="467.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="136.6" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.10%)</title><rect x="134.3" y="467.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="137.3" y="478.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.10%)</title><rect x="134.3" y="451.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="137.3" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (38 samples, 1.21%)</title><rect x="135.5" y="515.0" width="14.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.5" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (38 samples, 1.21%)</title><rect x="135.5" y="499.0" width="14.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.5" y="510.0"></text>
</g>
<g>
<title>char[] (18 samples, 0.57%)</title><rect x="135.5" y="483.0" width="6.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="138.5" y="494.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.29%)</title><rect x="142.2" y="483.0" width="3.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="145.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.35%)</title><rect x="145.6" y="483.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.6" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.35%)</title><rect x="145.6" y="467.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (11 samples, 0.35%)</title><rect x="145.6" y="451.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.6" y="462.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.35%)</title><rect x="145.6" y="435.0" width="4.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="148.6" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=2840] (348 samples, 11.11%)</title><rect x="149.8" y="595.0" width="131.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="152.8" y="606.0">[NIO Selector #1..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (348 samples, 11.11%)</title><rect x="149.8" y="579.0" width="131.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="152.8" y="590.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 0.22%)</title><rect x="149.8" y="563.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="152.8" y="574.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (7 samples, 0.22%)</title><rect x="149.8" y="547.0" width="2.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="152.8" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (341 samples, 10.89%)</title><rect x="152.4" y="563.0" width="128.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.4" y="574.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (341 samples, 10.89%)</title><rect x="152.4" y="547.0" width="128.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.4" y="558.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (341 samples, 10.89%)</title><rect x="152.4" y="531.0" width="128.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="155.4" y="542.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (252 samples, 8.05%)</title><rect x="152.4" y="515.0" width="95.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.4" y="526.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (252 samples, 8.05%)</title><rect x="152.4" y="499.0" width="95.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="155.4" y="510.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (247 samples, 7.89%)</title><rect x="152.4" y="483.0" width="93.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.4" y="494.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 0.48%)</title><rect x="152.4" y="467.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (15 samples, 0.48%)</title><rect x="152.4" y="451.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="155.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 0.35%)</title><rect x="152.4" y="435.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.4" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (11 samples, 0.35%)</title><rect x="152.4" y="419.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="155.4" y="430.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.35%)</title><rect x="152.4" y="403.0" width="4.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="155.4" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.13%)</title><rect x="156.6" y="435.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="159.6" y="446.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (4 samples, 0.13%)</title><rect x="156.6" y="419.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="159.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (8 samples, 0.26%)</title><rect x="158.1" y="467.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.1" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.26%)</title><rect x="158.1" y="451.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="161.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.26%)</title><rect x="158.1" y="435.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="161.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.26%)</title><rect x="158.1" y="419.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.13%)</title><rect x="158.1" y="403.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="161.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.13%)</title><rect x="159.6" y="403.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="162.6" y="414.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.13%)</title><rect x="159.6" y="387.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="162.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (224 samples, 7.15%)</title><rect x="161.1" y="467.0" width="84.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="164.1" y="478.0">ru/mail/po..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (151 samples, 4.82%)</title><rect x="161.1" y="451.0" width="56.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="164.1" y="462.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (151 samples, 4.82%)</title><rect x="161.1" y="435.0" width="56.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="164.1" y="446.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (149 samples, 4.76%)</title><rect x="161.1" y="419.0" width="56.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.1" y="430.0">ch/qos..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (10 samples, 0.32%)</title><rect x="161.1" y="403.0" width="3.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="164.1" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (139 samples, 4.44%)</title><rect x="164.8" y="403.0" width="52.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.8" y="414.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (139 samples, 4.44%)</title><rect x="164.8" y="387.0" width="52.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="167.8" y="398.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (139 samples, 4.44%)</title><rect x="164.8" y="371.0" width="52.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.8" y="382.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (139 samples, 4.44%)</title><rect x="164.8" y="355.0" width="52.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="167.8" y="366.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (139 samples, 4.44%)</title><rect x="164.8" y="339.0" width="52.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.8" y="350.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (139 samples, 4.44%)</title><rect x="164.8" y="323.0" width="52.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="167.8" y="334.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (30 samples, 0.96%)</title><rect x="164.8" y="307.0" width="11.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="167.8" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (30 samples, 0.96%)</title><rect x="164.8" y="291.0" width="11.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.8" y="302.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (30 samples, 0.96%)</title><rect x="164.8" y="275.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="167.8" y="286.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (30 samples, 0.96%)</title><rect x="164.8" y="259.0" width="11.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="167.8" y="270.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.06%)</title><rect x="164.8" y="243.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="167.8" y="254.0"></text>
</g>
<g>
<title>java.util.HashMap (10 samples, 0.32%)</title><rect x="165.6" y="243.0" width="3.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="168.6" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (9 samples, 0.29%)</title><rect x="169.4" y="243.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="172.4" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (9 samples, 0.29%)</title><rect x="169.4" y="227.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.4" y="238.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.29%)</title><rect x="169.4" y="211.0" width="3.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="172.4" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (7 samples, 0.22%)</title><rect x="172.8" y="243.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="175.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.22%)</title><rect x="172.8" y="227.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="175.8" y="238.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.10%)</title><rect x="172.8" y="211.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="175.8" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.13%)</title><rect x="173.9" y="211.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.9" y="222.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.13%)</title><rect x="173.9" y="195.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="176.9" y="206.0"></text>
</g>
<g>
<title>org.slf4j.helpers.FormattingTuple (2 samples, 0.06%)</title><rect x="175.4" y="243.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="178.4" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (109 samples, 3.48%)</title><rect x="176.1" y="307.0" width="41.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.1" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (82 samples, 2.62%)</title><rect x="176.1" y="291.0" width="30.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="179.1" y="302.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (82 samples, 2.62%)</title><rect x="176.1" y="275.0" width="30.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="179.1" y="286.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.03%)</title><rect x="176.1" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="179.1" y="270.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.03%)</title><rect x="176.1" y="243.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="179.1" y="254.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (1 samples, 0.03%)</title><rect x="176.1" y="227.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="179.1" y="238.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (5 samples, 0.16%)</title><rect x="176.5" y="259.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="179.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (5 samples, 0.16%)</title><rect x="178.4" y="259.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="181.4" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (5 samples, 0.16%)</title><rect x="178.4" y="243.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="181.4" y="254.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.16%)</title><rect x="178.4" y="227.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="181.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (51 samples, 1.63%)</title><rect x="180.3" y="259.0" width="19.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="183.3" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (51 samples, 1.63%)</title><rect x="180.3" y="243.0" width="19.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="183.3" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (51 samples, 1.63%)</title><rect x="180.3" y="227.0" width="19.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="183.3" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (51 samples, 1.63%)</title><rect x="180.3" y="211.0" width="19.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="183.3" y="222.0"></text>
</g>
<g>
<title>byte[] (51 samples, 1.63%)</title><rect x="180.3" y="195.0" width="19.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="183.3" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (20 samples, 0.64%)</title><rect x="199.5" y="259.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="202.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.64%)</title><rect x="199.5" y="243.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="202.5" y="254.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.16%)</title><rect x="199.5" y="227.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="202.5" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.48%)</title><rect x="201.4" y="227.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.4" y="238.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.48%)</title><rect x="201.4" y="211.0" width="5.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="204.4" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (27 samples, 0.86%)</title><rect x="207.0" y="291.0" width="10.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="210.0" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (27 samples, 0.86%)</title><rect x="207.0" y="275.0" width="10.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="210.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (27 samples, 0.86%)</title><rect x="207.0" y="259.0" width="10.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.0" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (27 samples, 0.86%)</title><rect x="207.0" y="243.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="210.0" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (27 samples, 0.86%)</title><rect x="207.0" y="227.0" width="10.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.0" y="238.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.86%)</title><rect x="207.0" y="211.0" width="10.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="210.0" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.06%)</title><rect x="217.2" y="419.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="220.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.13%)</title><rect x="218.0" y="451.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="221.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.13%)</title><rect x="218.0" y="435.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="221.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.13%)</title><rect x="218.0" y="419.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="221.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.13%)</title><rect x="218.0" y="403.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="221.0" y="414.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.13%)</title><rect x="218.0" y="387.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="221.0" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.16%)</title><rect x="219.5" y="451.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="222.5" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.16%)</title><rect x="219.5" y="435.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="222.5" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.16%)</title><rect x="219.5" y="419.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="222.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (64 samples, 2.04%)</title><rect x="221.4" y="451.0" width="24.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="224.4" y="462.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.16%)</title><rect x="221.4" y="435.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="224.4" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.16%)</title><rect x="221.4" y="419.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="224.4" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.16%)</title><rect x="221.4" y="403.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="224.4" y="414.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.03%)</title><rect x="223.2" y="435.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="226.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (13 samples, 0.42%)</title><rect x="223.6" y="435.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="226.6" y="446.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.22%)</title><rect x="223.6" y="419.0" width="2.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="226.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.03%)</title><rect x="226.3" y="419.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="229.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.13%)</title><rect x="226.6" y="419.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="229.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="228.1" y="419.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="231.1" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="228.1" y="403.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="231.1" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="228.1" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="231.1" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="228.1" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="231.1" y="382.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.03%)</title><rect x="228.1" y="355.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="231.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (45 samples, 1.44%)</title><rect x="228.5" y="435.0" width="17.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="231.5" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (19 samples, 0.61%)</title><rect x="228.5" y="419.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.5" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (19 samples, 0.61%)</title><rect x="228.5" y="403.0" width="7.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="231.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="235.7" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="238.7" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.03%)</title><rect x="235.7" y="403.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="238.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (25 samples, 0.80%)</title><rect x="236.1" y="419.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="239.1" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (18 samples, 0.57%)</title><rect x="236.1" y="403.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (18 samples, 0.57%)</title><rect x="236.1" y="387.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="239.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (18 samples, 0.57%)</title><rect x="236.1" y="371.0" width="6.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="239.1" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (7 samples, 0.22%)</title><rect x="242.8" y="403.0" width="2.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="245.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.16%)</title><rect x="245.5" y="483.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="248.5" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.16%)</title><rect x="245.5" y="467.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="248.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.16%)</title><rect x="245.5" y="451.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="248.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.06%)</title><rect x="245.5" y="435.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="248.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.10%)</title><rect x="246.2" y="435.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="249.2" y="446.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.10%)</title><rect x="246.2" y="419.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="249.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (48 samples, 1.53%)</title><rect x="247.4" y="515.0" width="18.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="250.4" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Request (14 samples, 0.45%)</title><rect x="247.4" y="499.0" width="5.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="250.4" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (14 samples, 0.45%)</title><rect x="252.6" y="499.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="255.6" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (14 samples, 0.45%)</title><rect x="252.6" y="483.0" width="5.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="255.6" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.64%)</title><rect x="257.9" y="499.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="260.9" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.64%)</title><rect x="257.9" y="483.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.9" y="494.0"></text>
</g>
<g>
<title>char[] (11 samples, 0.35%)</title><rect x="257.9" y="467.0" width="4.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="260.9" y="478.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.16%)</title><rect x="262.0" y="467.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="265.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.13%)</title><rect x="263.9" y="467.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="266.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.13%)</title><rect x="263.9" y="451.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="266.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.13%)</title><rect x="263.9" y="435.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="266.9" y="446.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.13%)</title><rect x="263.9" y="419.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="266.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.06%)</title><rect x="265.4" y="515.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="268.4" y="526.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.06%)</title><rect x="265.4" y="499.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="268.4" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.13%)</title><rect x="266.2" y="515.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="269.2" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.13%)</title><rect x="266.2" y="499.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="269.2" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.13%)</title><rect x="266.2" y="483.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="269.2" y="494.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.06%)</title><rect x="266.2" y="467.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="269.2" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.06%)</title><rect x="266.9" y="467.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="269.9" y="478.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.06%)</title><rect x="266.9" y="451.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="269.9" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 1.12%)</title><rect x="267.7" y="515.0" width="13.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="270.7" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 1.12%)</title><rect x="267.7" y="499.0" width="13.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="270.7" y="510.0"></text>
</g>
<g>
<title>char[] (20 samples, 0.64%)</title><rect x="267.7" y="483.0" width="7.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="270.7" y="494.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.10%)</title><rect x="275.2" y="483.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="278.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.38%)</title><rect x="276.4" y="483.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="279.4" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.38%)</title><rect x="276.4" y="467.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="279.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (12 samples, 0.38%)</title><rect x="276.4" y="451.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.4" y="462.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.38%)</title><rect x="276.4" y="435.0" width="4.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="279.4" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=2841] (373 samples, 11.91%)</title><rect x="280.9" y="595.0" width="140.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="283.9" y="606.0">[NIO Selector #2 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (373 samples, 11.91%)</title><rect x="280.9" y="579.0" width="140.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.9" y="590.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (8 samples, 0.26%)</title><rect x="280.9" y="563.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.9" y="574.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (8 samples, 0.26%)</title><rect x="280.9" y="547.0" width="3.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="283.9" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (365 samples, 11.65%)</title><rect x="283.9" y="563.0" width="137.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="286.9" y="574.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (365 samples, 11.65%)</title><rect x="283.9" y="547.0" width="137.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="286.9" y="558.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (365 samples, 11.65%)</title><rect x="283.9" y="531.0" width="137.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.9" y="542.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (286 samples, 9.13%)</title><rect x="283.9" y="515.0" width="107.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.9" y="526.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (286 samples, 9.13%)</title><rect x="283.9" y="499.0" width="107.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.9" y="510.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (274 samples, 8.75%)</title><rect x="283.9" y="483.0" width="103.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.9" y="494.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (22 samples, 0.70%)</title><rect x="283.9" y="467.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (22 samples, 0.70%)</title><rect x="283.9" y="451.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="286.9" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.45%)</title><rect x="283.9" y="435.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="286.9" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (14 samples, 0.45%)</title><rect x="283.9" y="419.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="286.9" y="430.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.45%)</title><rect x="283.9" y="403.0" width="5.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="286.9" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.26%)</title><rect x="289.2" y="435.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="292.2" y="446.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (8 samples, 0.26%)</title><rect x="289.2" y="419.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="292.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (7 samples, 0.22%)</title><rect x="292.2" y="467.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.22%)</title><rect x="292.2" y="451.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.22%)</title><rect x="292.2" y="435.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="295.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.22%)</title><rect x="292.2" y="419.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="295.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.10%)</title><rect x="292.2" y="403.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="295.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.13%)</title><rect x="293.3" y="403.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.3" y="414.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.13%)</title><rect x="293.3" y="387.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="296.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (245 samples, 7.82%)</title><rect x="294.8" y="467.0" width="92.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="297.8" y="478.0">ru/mail/pol..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (171 samples, 5.46%)</title><rect x="294.8" y="451.0" width="64.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="297.8" y="462.0">ch/qos/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (171 samples, 5.46%)</title><rect x="294.8" y="435.0" width="64.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="297.8" y="446.0">ch/qos/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (168 samples, 5.36%)</title><rect x="294.8" y="419.0" width="63.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="297.8" y="430.0">ch/qos/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (8 samples, 0.26%)</title><rect x="294.8" y="403.0" width="3.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="297.8" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (160 samples, 5.11%)</title><rect x="297.8" y="403.0" width="60.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.8" y="414.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (160 samples, 5.11%)</title><rect x="297.8" y="387.0" width="60.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="300.8" y="398.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (160 samples, 5.11%)</title><rect x="297.8" y="371.0" width="60.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="300.8" y="382.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (160 samples, 5.11%)</title><rect x="297.8" y="355.0" width="60.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="300.8" y="366.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (160 samples, 5.11%)</title><rect x="297.8" y="339.0" width="60.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.8" y="350.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (160 samples, 5.11%)</title><rect x="297.8" y="323.0" width="60.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="300.8" y="334.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (54 samples, 1.72%)</title><rect x="297.8" y="307.0" width="20.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="300.8" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (54 samples, 1.72%)</title><rect x="297.8" y="291.0" width="20.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="300.8" y="302.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (54 samples, 1.72%)</title><rect x="297.8" y="275.0" width="20.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="300.8" y="286.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (54 samples, 1.72%)</title><rect x="297.8" y="259.0" width="20.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="300.8" y="270.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (6 samples, 0.19%)</title><rect x="297.8" y="243.0" width="2.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="300.8" y="254.0"></text>
</g>
<g>
<title>java.util.HashMap (8 samples, 0.26%)</title><rect x="300.1" y="243.0" width="3.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="303.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (15 samples, 0.48%)</title><rect x="303.1" y="243.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="306.1" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (15 samples, 0.48%)</title><rect x="303.1" y="227.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="306.1" y="238.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.48%)</title><rect x="303.1" y="211.0" width="5.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="306.1" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (20 samples, 0.64%)</title><rect x="308.8" y="243.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="311.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.64%)</title><rect x="308.8" y="227.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="311.8" y="238.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.26%)</title><rect x="308.8" y="211.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="311.8" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.38%)</title><rect x="311.8" y="211.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="314.8" y="222.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.38%)</title><rect x="311.8" y="195.0" width="4.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="314.8" y="206.0"></text>
</g>
<g>
<title>org.slf4j.helpers.FormattingTuple (5 samples, 0.16%)</title><rect x="316.3" y="243.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="319.3" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (106 samples, 3.38%)</title><rect x="318.2" y="307.0" width="39.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.2" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (81 samples, 2.59%)</title><rect x="318.2" y="291.0" width="30.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="321.2" y="302.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (81 samples, 2.59%)</title><rect x="318.2" y="275.0" width="30.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="321.2" y="286.0">ch..</text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.06%)</title><rect x="318.2" y="259.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="321.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (5 samples, 0.16%)</title><rect x="318.9" y="259.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="321.9" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (5 samples, 0.16%)</title><rect x="318.9" y="243.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="321.9" y="254.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.16%)</title><rect x="318.9" y="227.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="321.9" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (47 samples, 1.50%)</title><rect x="320.8" y="259.0" width="17.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.8" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (47 samples, 1.50%)</title><rect x="320.8" y="243.0" width="17.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="323.8" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (47 samples, 1.50%)</title><rect x="320.8" y="227.0" width="17.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="323.8" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (47 samples, 1.50%)</title><rect x="320.8" y="211.0" width="17.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="323.8" y="222.0"></text>
</g>
<g>
<title>byte[] (47 samples, 1.50%)</title><rect x="320.8" y="195.0" width="17.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="323.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (27 samples, 0.86%)</title><rect x="338.5" y="259.0" width="10.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="341.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (27 samples, 0.86%)</title><rect x="338.5" y="243.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="341.5" y="254.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.10%)</title><rect x="338.5" y="227.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="341.5" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (24 samples, 0.77%)</title><rect x="339.7" y="227.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="342.7" y="238.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.77%)</title><rect x="339.7" y="211.0" width="9.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="342.7" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (25 samples, 0.80%)</title><rect x="348.7" y="291.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="351.7" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (25 samples, 0.80%)</title><rect x="348.7" y="275.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="351.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (25 samples, 0.80%)</title><rect x="348.7" y="259.0" width="9.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="351.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (25 samples, 0.80%)</title><rect x="348.7" y="243.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="351.7" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (25 samples, 0.80%)</title><rect x="348.7" y="227.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="351.7" y="238.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.80%)</title><rect x="348.7" y="211.0" width="9.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="351.7" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.10%)</title><rect x="358.1" y="419.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="361.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (7 samples, 0.22%)</title><rect x="359.3" y="451.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="362.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (7 samples, 0.22%)</title><rect x="359.3" y="435.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="362.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (7 samples, 0.22%)</title><rect x="359.3" y="419.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="362.3" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.22%)</title><rect x="359.3" y="403.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="362.3" y="414.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.22%)</title><rect x="359.3" y="387.0" width="2.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="362.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.13%)</title><rect x="361.9" y="451.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="364.9" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.13%)</title><rect x="361.9" y="435.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="364.9" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.13%)</title><rect x="361.9" y="419.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="364.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (63 samples, 2.01%)</title><rect x="363.4" y="451.0" width="23.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="366.4" y="462.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.16%)</title><rect x="363.4" y="435.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="366.4" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.16%)</title><rect x="363.4" y="419.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="366.4" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.16%)</title><rect x="363.4" y="403.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="366.4" y="414.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.06%)</title><rect x="365.3" y="435.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="368.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (14 samples, 0.45%)</title><rect x="366.0" y="435.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="369.0" y="446.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.26%)</title><rect x="366.0" y="419.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="369.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.06%)</title><rect x="369.0" y="419.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="372.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.13%)</title><rect x="369.8" y="419.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="372.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (42 samples, 1.34%)</title><rect x="371.3" y="435.0" width="15.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="374.3" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (17 samples, 0.54%)</title><rect x="371.3" y="419.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="374.3" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.54%)</title><rect x="371.3" y="403.0" width="6.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="374.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (25 samples, 0.80%)</title><rect x="377.7" y="419.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.7" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (17 samples, 0.54%)</title><rect x="377.7" y="403.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="380.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (17 samples, 0.54%)</title><rect x="377.7" y="387.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="380.7" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.54%)</title><rect x="377.7" y="371.0" width="6.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="380.7" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.06%)</title><rect x="384.1" y="403.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="387.1" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.06%)</title><rect x="384.1" y="387.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="387.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (2 samples, 0.06%)</title><rect x="384.9" y="403.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="387.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.06%)</title><rect x="384.9" y="387.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="387.9" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (2 samples, 0.06%)</title><rect x="384.9" y="371.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="387.9" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (4 samples, 0.13%)</title><rect x="385.6" y="403.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="388.6" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (12 samples, 0.38%)</title><rect x="387.1" y="483.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="390.1" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.38%)</title><rect x="387.1" y="467.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="390.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.38%)</title><rect x="387.1" y="451.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="390.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.22%)</title><rect x="387.1" y="435.0" width="2.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="390.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.16%)</title><rect x="389.8" y="435.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="392.8" y="446.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.16%)</title><rect x="389.8" y="419.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="392.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (33 samples, 1.05%)</title><rect x="391.7" y="515.0" width="12.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.7" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Request (2 samples, 0.06%)</title><rect x="391.7" y="499.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="394.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (14 samples, 0.45%)</title><rect x="392.4" y="499.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="395.4" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (14 samples, 0.45%)</title><rect x="392.4" y="483.0" width="5.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="395.4" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.54%)</title><rect x="397.7" y="499.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="400.7" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.54%)</title><rect x="397.7" y="483.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="400.7" y="494.0"></text>
</g>
<g>
<title>char[] (13 samples, 0.42%)</title><rect x="397.7" y="467.0" width="4.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="400.7" y="478.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.03%)</title><rect x="402.6" y="467.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="405.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.10%)</title><rect x="403.0" y="467.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="406.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.10%)</title><rect x="403.0" y="451.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="406.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.10%)</title><rect x="403.0" y="435.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.0" y="446.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.10%)</title><rect x="403.0" y="419.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="406.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (5 samples, 0.16%)</title><rect x="404.1" y="515.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="407.1" y="526.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.16%)</title><rect x="404.1" y="499.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="407.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.19%)</title><rect x="406.0" y="515.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="409.0" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.19%)</title><rect x="406.0" y="499.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="409.0" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.19%)</title><rect x="406.0" y="483.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="409.0" y="494.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.03%)</title><rect x="406.0" y="467.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="409.0" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.16%)</title><rect x="406.3" y="467.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="409.3" y="478.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.16%)</title><rect x="406.3" y="451.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="409.3" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 1.12%)</title><rect x="408.2" y="515.0" width="13.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.2" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 1.12%)</title><rect x="408.2" y="499.0" width="13.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="411.2" y="510.0"></text>
</g>
<g>
<title>char[] (14 samples, 0.45%)</title><rect x="408.2" y="483.0" width="5.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="411.2" y="494.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.16%)</title><rect x="413.5" y="483.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="416.5" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.51%)</title><rect x="415.4" y="483.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="418.4" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.51%)</title><rect x="415.4" y="467.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="418.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (16 samples, 0.51%)</title><rect x="415.4" y="451.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="418.4" y="462.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.51%)</title><rect x="415.4" y="435.0" width="6.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="418.4" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=2842] (319 samples, 10.19%)</title><rect x="421.4" y="595.0" width="120.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="424.4" y="606.0">[NIO Selector #..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (319 samples, 10.19%)</title><rect x="421.4" y="579.0" width="120.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.4" y="590.0">one/nio/server/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 0.22%)</title><rect x="421.4" y="563.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.4" y="574.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (7 samples, 0.22%)</title><rect x="421.4" y="547.0" width="2.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="424.4" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (312 samples, 9.96%)</title><rect x="424.1" y="563.0" width="117.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="427.1" y="574.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (312 samples, 9.96%)</title><rect x="424.1" y="547.0" width="117.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="427.1" y="558.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (312 samples, 9.96%)</title><rect x="424.1" y="531.0" width="117.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="427.1" y="542.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (231 samples, 7.38%)</title><rect x="424.1" y="515.0" width="87.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="427.1" y="526.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (231 samples, 7.38%)</title><rect x="424.1" y="499.0" width="87.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="427.1" y="510.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (225 samples, 7.18%)</title><rect x="424.1" y="483.0" width="84.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="427.1" y="494.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (16 samples, 0.51%)</title><rect x="424.1" y="467.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.1" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (16 samples, 0.51%)</title><rect x="424.1" y="451.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="427.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 0.35%)</title><rect x="424.1" y="435.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="427.1" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (11 samples, 0.35%)</title><rect x="424.1" y="419.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.1" y="430.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.35%)</title><rect x="424.1" y="403.0" width="4.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="427.1" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.16%)</title><rect x="428.2" y="435.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="431.2" y="446.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.16%)</title><rect x="428.2" y="419.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="431.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (9 samples, 0.29%)</title><rect x="430.1" y="467.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="433.1" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.29%)</title><rect x="430.1" y="451.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="433.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.29%)</title><rect x="430.1" y="435.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.29%)</title><rect x="430.1" y="419.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="433.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.16%)</title><rect x="430.1" y="403.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="433.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.13%)</title><rect x="432.0" y="403.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="435.0" y="414.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.13%)</title><rect x="432.0" y="387.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="435.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (200 samples, 6.39%)</title><rect x="433.5" y="467.0" width="75.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.5" y="478.0">ru/mail/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (125 samples, 3.99%)</title><rect x="433.5" y="451.0" width="47.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="436.5" y="462.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (125 samples, 3.99%)</title><rect x="433.5" y="435.0" width="47.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="436.5" y="446.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (122 samples, 3.90%)</title><rect x="433.5" y="419.0" width="45.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="436.5" y="430.0">ch/q..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (8 samples, 0.26%)</title><rect x="433.5" y="403.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="436.5" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (114 samples, 3.64%)</title><rect x="436.5" y="403.0" width="42.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="439.5" y="414.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (114 samples, 3.64%)</title><rect x="436.5" y="387.0" width="42.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.5" y="398.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (114 samples, 3.64%)</title><rect x="436.5" y="371.0" width="42.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.5" y="382.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (114 samples, 3.64%)</title><rect x="436.5" y="355.0" width="42.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="439.5" y="366.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (114 samples, 3.64%)</title><rect x="436.5" y="339.0" width="42.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.5" y="350.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (114 samples, 3.64%)</title><rect x="436.5" y="323.0" width="42.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="439.5" y="334.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (31 samples, 0.99%)</title><rect x="436.5" y="307.0" width="11.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="439.5" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (31 samples, 0.99%)</title><rect x="436.5" y="291.0" width="11.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="439.5" y="302.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (31 samples, 0.99%)</title><rect x="436.5" y="275.0" width="11.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.5" y="286.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (31 samples, 0.99%)</title><rect x="436.5" y="259.0" width="11.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="439.5" y="270.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (4 samples, 0.13%)</title><rect x="436.5" y="243.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="439.5" y="254.0"></text>
</g>
<g>
<title>java.util.HashMap (3 samples, 0.10%)</title><rect x="438.0" y="243.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="441.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (9 samples, 0.29%)</title><rect x="439.1" y="243.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.1" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (9 samples, 0.29%)</title><rect x="439.1" y="227.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.1" y="238.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.29%)</title><rect x="439.1" y="211.0" width="3.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="442.1" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (13 samples, 0.42%)</title><rect x="442.5" y="243.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="445.5" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.42%)</title><rect x="442.5" y="227.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="445.5" y="238.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.22%)</title><rect x="442.5" y="211.0" width="2.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="445.5" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.19%)</title><rect x="445.2" y="211.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="448.2" y="222.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.19%)</title><rect x="445.2" y="195.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="448.2" y="206.0"></text>
</g>
<g>
<title>org.slf4j.helpers.FormattingTuple (2 samples, 0.06%)</title><rect x="447.4" y="243.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="450.4" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (83 samples, 2.65%)</title><rect x="448.2" y="307.0" width="31.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="451.2" y="318.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (65 samples, 2.08%)</title><rect x="448.2" y="291.0" width="24.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="451.2" y="302.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (65 samples, 2.08%)</title><rect x="448.2" y="275.0" width="24.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="451.2" y="286.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.03%)</title><rect x="448.2" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="451.2" y="270.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.03%)</title><rect x="448.2" y="243.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="451.2" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (1 samples, 0.03%)</title><rect x="448.2" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="451.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="448.2" y="211.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="451.2" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="448.2" y="195.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="451.2" y="206.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.03%)</title><rect x="448.2" y="179.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="451.2" y="190.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (7 samples, 0.22%)</title><rect x="448.5" y="259.0" width="2.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="451.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (7 samples, 0.22%)</title><rect x="451.2" y="259.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="454.2" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (7 samples, 0.22%)</title><rect x="451.2" y="243.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.2" y="254.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.22%)</title><rect x="451.2" y="227.0" width="2.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="454.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (28 samples, 0.89%)</title><rect x="453.8" y="259.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="456.8" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (28 samples, 0.89%)</title><rect x="453.8" y="243.0" width="10.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="456.8" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (28 samples, 0.89%)</title><rect x="453.8" y="227.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="456.8" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (28 samples, 0.89%)</title><rect x="453.8" y="211.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="456.8" y="222.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.89%)</title><rect x="453.8" y="195.0" width="10.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="456.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (22 samples, 0.70%)</title><rect x="464.4" y="259.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="467.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.70%)</title><rect x="464.4" y="243.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="467.4" y="254.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.06%)</title><rect x="464.4" y="227.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="467.4" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.64%)</title><rect x="465.1" y="227.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="468.1" y="238.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.64%)</title><rect x="465.1" y="211.0" width="7.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="468.1" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (18 samples, 0.57%)</title><rect x="472.7" y="291.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="475.7" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (18 samples, 0.57%)</title><rect x="472.7" y="275.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="475.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (18 samples, 0.57%)</title><rect x="472.7" y="259.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="475.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (18 samples, 0.57%)</title><rect x="472.7" y="243.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="475.7" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.57%)</title><rect x="472.7" y="227.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="475.7" y="238.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.57%)</title><rect x="472.7" y="211.0" width="6.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="475.7" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.10%)</title><rect x="479.4" y="419.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="482.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.16%)</title><rect x="480.6" y="451.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="483.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (5 samples, 0.16%)</title><rect x="480.6" y="435.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="483.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (5 samples, 0.16%)</title><rect x="480.6" y="419.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="483.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.16%)</title><rect x="480.6" y="403.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="483.6" y="414.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.16%)</title><rect x="480.6" y="387.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="483.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.16%)</title><rect x="482.5" y="451.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.5" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.16%)</title><rect x="482.5" y="435.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="485.5" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.16%)</title><rect x="482.5" y="419.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="485.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (65 samples, 2.08%)</title><rect x="484.3" y="451.0" width="24.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="487.3" y="462.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.22%)</title><rect x="484.3" y="435.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.3" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.22%)</title><rect x="484.3" y="419.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="487.3" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.22%)</title><rect x="484.3" y="403.0" width="2.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="487.3" y="414.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.06%)</title><rect x="487.0" y="435.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="490.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (17 samples, 0.54%)</title><rect x="487.7" y="435.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.7" y="446.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.19%)</title><rect x="487.7" y="419.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="490.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.19%)</title><rect x="490.0" y="419.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="493.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.13%)</title><rect x="492.2" y="419.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="495.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.03%)</title><rect x="493.8" y="419.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="496.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="493.8" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="496.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="493.8" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="496.8" y="398.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.03%)</title><rect x="493.8" y="371.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="496.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (39 samples, 1.25%)</title><rect x="494.1" y="435.0" width="14.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="497.1" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (15 samples, 0.48%)</title><rect x="494.1" y="419.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="497.1" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.48%)</title><rect x="494.1" y="403.0" width="5.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="497.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.06%)</title><rect x="499.8" y="419.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="502.8" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.06%)</title><rect x="499.8" y="403.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="502.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (22 samples, 0.70%)</title><rect x="500.5" y="419.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="503.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (14 samples, 0.45%)</title><rect x="500.5" y="403.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="503.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (14 samples, 0.45%)</title><rect x="500.5" y="387.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.5" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.45%)</title><rect x="500.5" y="371.0" width="5.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="503.5" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.10%)</title><rect x="505.8" y="403.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="508.8" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.10%)</title><rect x="505.8" y="387.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="508.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (1 samples, 0.03%)</title><rect x="506.9" y="403.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.03%)</title><rect x="506.9" y="387.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="509.9" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (1 samples, 0.03%)</title><rect x="506.9" y="371.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="509.9" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (4 samples, 0.13%)</title><rect x="507.3" y="403.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="510.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (6 samples, 0.19%)</title><rect x="508.8" y="483.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="511.8" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.19%)</title><rect x="508.8" y="467.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="511.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.19%)</title><rect x="508.8" y="451.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.06%)</title><rect x="508.8" y="435.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="511.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.13%)</title><rect x="509.6" y="435.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="512.6" y="446.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.13%)</title><rect x="509.6" y="419.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="512.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (37 samples, 1.18%)</title><rect x="511.1" y="515.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="514.1" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Request (9 samples, 0.29%)</title><rect x="511.1" y="499.0" width="3.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="514.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 0.35%)</title><rect x="514.5" y="499.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="517.5" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.35%)</title><rect x="514.5" y="483.0" width="4.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="517.5" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.54%)</title><rect x="518.6" y="499.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="521.6" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.54%)</title><rect x="518.6" y="483.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.6" y="494.0"></text>
</g>
<g>
<title>char[] (9 samples, 0.29%)</title><rect x="518.6" y="467.0" width="3.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="521.6" y="478.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.06%)</title><rect x="522.0" y="467.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="525.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.19%)</title><rect x="522.8" y="467.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.19%)</title><rect x="522.8" y="451.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="525.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.19%)</title><rect x="522.8" y="435.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="525.8" y="446.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.19%)</title><rect x="522.8" y="419.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="525.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.13%)</title><rect x="525.0" y="515.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="528.0" y="526.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.13%)</title><rect x="525.0" y="499.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="528.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.22%)</title><rect x="526.5" y="515.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="529.5" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.22%)</title><rect x="526.5" y="499.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="529.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.22%)</title><rect x="526.5" y="483.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="529.5" y="494.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.10%)</title><rect x="526.5" y="467.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="529.5" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.13%)</title><rect x="527.7" y="467.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="530.7" y="478.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.13%)</title><rect x="527.7" y="451.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="530.7" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (33 samples, 1.05%)</title><rect x="529.2" y="515.0" width="12.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="532.2" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (33 samples, 1.05%)</title><rect x="529.2" y="499.0" width="12.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.2" y="510.0"></text>
</g>
<g>
<title>char[] (18 samples, 0.57%)</title><rect x="529.2" y="483.0" width="6.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="532.2" y="494.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.22%)</title><rect x="536.0" y="483.0" width="2.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="539.0" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.26%)</title><rect x="538.6" y="483.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.6" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.26%)</title><rect x="538.6" y="467.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.26%)</title><rect x="538.6" y="451.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="541.6" y="462.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.26%)</title><rect x="538.6" y="435.0" width="3.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="541.6" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=2843] (353 samples, 11.27%)</title><rect x="541.6" y="595.0" width="133.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="544.6" y="606.0">[NIO Selector #4..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (353 samples, 11.27%)</title><rect x="541.6" y="579.0" width="133.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.6" y="590.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/Session.process (353 samples, 11.27%)</title><rect x="541.6" y="563.0" width="133.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="544.6" y="574.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (353 samples, 11.27%)</title><rect x="541.6" y="547.0" width="133.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="544.6" y="558.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (353 samples, 11.27%)</title><rect x="541.6" y="531.0" width="133.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="544.6" y="542.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (267 samples, 8.52%)</title><rect x="541.6" y="515.0" width="100.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="544.6" y="526.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (267 samples, 8.52%)</title><rect x="541.6" y="499.0" width="100.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.6" y="510.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (259 samples, 8.27%)</title><rect x="541.6" y="483.0" width="97.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="544.6" y="494.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (17 samples, 0.54%)</title><rect x="541.6" y="467.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="544.6" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (17 samples, 0.54%)</title><rect x="541.6" y="451.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.38%)</title><rect x="541.6" y="435.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="544.6" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (12 samples, 0.38%)</title><rect x="541.6" y="419.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="544.6" y="430.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.38%)</title><rect x="541.6" y="403.0" width="4.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="544.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.16%)</title><rect x="546.1" y="435.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="549.1" y="446.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.16%)</title><rect x="546.1" y="419.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="549.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.10%)</title><rect x="548.0" y="467.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="551.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.10%)</title><rect x="548.0" y="451.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="551.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.10%)</title><rect x="548.0" y="435.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="551.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.10%)</title><rect x="548.0" y="419.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="551.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.03%)</title><rect x="548.0" y="403.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="551.0" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.06%)</title><rect x="548.4" y="403.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.4" y="414.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.06%)</title><rect x="548.4" y="387.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="551.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (239 samples, 7.63%)</title><rect x="549.1" y="467.0" width="90.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="552.1" y="478.0">ru/mail/po..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (157 samples, 5.01%)</title><rect x="549.1" y="451.0" width="59.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.1" y="462.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (157 samples, 5.01%)</title><rect x="549.1" y="435.0" width="59.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="552.1" y="446.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (154 samples, 4.92%)</title><rect x="549.1" y="419.0" width="58.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="552.1" y="430.0">ch/qos..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (17 samples, 0.54%)</title><rect x="549.1" y="403.0" width="6.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="552.1" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (137 samples, 4.37%)</title><rect x="555.5" y="403.0" width="51.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="558.5" y="414.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (137 samples, 4.37%)</title><rect x="555.5" y="387.0" width="51.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="558.5" y="398.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (137 samples, 4.37%)</title><rect x="555.5" y="371.0" width="51.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.5" y="382.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (137 samples, 4.37%)</title><rect x="555.5" y="355.0" width="51.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="558.5" y="366.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (137 samples, 4.37%)</title><rect x="555.5" y="339.0" width="51.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="558.5" y="350.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (137 samples, 4.37%)</title><rect x="555.5" y="323.0" width="51.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="558.5" y="334.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (28 samples, 0.89%)</title><rect x="555.5" y="307.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="558.5" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (28 samples, 0.89%)</title><rect x="555.5" y="291.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="558.5" y="302.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (28 samples, 0.89%)</title><rect x="555.5" y="275.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="558.5" y="286.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (28 samples, 0.89%)</title><rect x="555.5" y="259.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.5" y="270.0"></text>
</g>
<g>
<title>java.util.HashMap (7 samples, 0.22%)</title><rect x="555.5" y="243.0" width="2.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="558.5" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (9 samples, 0.29%)</title><rect x="558.2" y="243.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="561.2" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (9 samples, 0.29%)</title><rect x="558.2" y="227.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="561.2" y="238.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.29%)</title><rect x="558.2" y="211.0" width="3.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="561.2" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (9 samples, 0.29%)</title><rect x="561.6" y="243.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.6" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.29%)</title><rect x="561.6" y="227.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="564.6" y="238.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.06%)</title><rect x="561.6" y="211.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="564.6" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.22%)</title><rect x="562.3" y="211.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="565.3" y="222.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.22%)</title><rect x="562.3" y="195.0" width="2.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="565.3" y="206.0"></text>
</g>
<g>
<title>org.slf4j.helpers.FormattingTuple (3 samples, 0.10%)</title><rect x="565.0" y="243.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="568.0" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (109 samples, 3.48%)</title><rect x="566.1" y="307.0" width="41.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="569.1" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (86 samples, 2.75%)</title><rect x="566.1" y="291.0" width="32.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="569.1" y="302.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (86 samples, 2.75%)</title><rect x="566.1" y="275.0" width="32.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="569.1" y="286.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.03%)</title><rect x="566.1" y="259.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.1" y="270.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.03%)</title><rect x="566.1" y="243.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="569.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="566.1" y="227.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="569.1" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.03%)</title><rect x="566.1" y="211.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.1" y="222.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.03%)</title><rect x="566.1" y="195.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="569.1" y="206.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (4 samples, 0.13%)</title><rect x="566.5" y="259.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="569.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.06%)</title><rect x="568.0" y="259.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="571.0" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.06%)</title><rect x="568.0" y="243.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="571.0" y="254.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.06%)</title><rect x="568.0" y="227.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="571.0" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (54 samples, 1.72%)</title><rect x="568.7" y="259.0" width="20.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="571.7" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (54 samples, 1.72%)</title><rect x="568.7" y="243.0" width="20.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="571.7" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (54 samples, 1.72%)</title><rect x="568.7" y="227.0" width="20.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="571.7" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (54 samples, 1.72%)</title><rect x="568.7" y="211.0" width="20.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.7" y="222.0"></text>
</g>
<g>
<title>byte[] (54 samples, 1.72%)</title><rect x="568.7" y="195.0" width="20.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="571.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (25 samples, 0.80%)</title><rect x="589.1" y="259.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="592.1" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (25 samples, 0.80%)</title><rect x="589.1" y="243.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="592.1" y="254.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.10%)</title><rect x="589.1" y="227.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="592.1" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.70%)</title><rect x="590.2" y="227.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.2" y="238.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.70%)</title><rect x="590.2" y="211.0" width="8.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="593.2" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (23 samples, 0.73%)</title><rect x="598.5" y="291.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.5" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (23 samples, 0.73%)</title><rect x="598.5" y="275.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (23 samples, 0.73%)</title><rect x="598.5" y="259.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="601.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (23 samples, 0.73%)</title><rect x="598.5" y="243.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (23 samples, 0.73%)</title><rect x="598.5" y="227.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="601.5" y="238.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.73%)</title><rect x="598.5" y="211.0" width="8.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="601.5" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.10%)</title><rect x="607.2" y="419.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="610.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.19%)</title><rect x="608.3" y="451.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="611.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.19%)</title><rect x="608.3" y="435.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="611.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.19%)</title><rect x="608.3" y="419.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="611.3" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.19%)</title><rect x="608.3" y="403.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.3" y="414.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.19%)</title><rect x="608.3" y="387.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="611.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.35%)</title><rect x="610.5" y="451.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="613.5" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.35%)</title><rect x="610.5" y="435.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="613.5" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.35%)</title><rect x="610.5" y="419.0" width="4.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="613.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (65 samples, 2.08%)</title><rect x="614.7" y="451.0" width="24.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.7" y="462.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.38%)</title><rect x="614.7" y="435.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="617.7" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.38%)</title><rect x="614.7" y="419.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="617.7" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.38%)</title><rect x="614.7" y="403.0" width="4.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="617.7" y="414.0"></text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 0.13%)</title><rect x="619.2" y="435.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="622.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (13 samples, 0.42%)</title><rect x="620.7" y="435.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="623.7" y="446.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.26%)</title><rect x="620.7" y="419.0" width="3.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="623.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.10%)</title><rect x="623.7" y="419.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="626.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.06%)</title><rect x="624.9" y="419.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="627.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (36 samples, 1.15%)</title><rect x="625.6" y="435.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.6" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (11 samples, 0.35%)</title><rect x="625.6" y="419.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="628.6" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.35%)</title><rect x="625.6" y="403.0" width="4.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="628.6" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.19%)</title><rect x="629.8" y="419.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="632.8" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.19%)</title><rect x="629.8" y="403.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="632.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (19 samples, 0.61%)</title><rect x="632.0" y="419.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="635.0" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (15 samples, 0.48%)</title><rect x="632.0" y="403.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="635.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (15 samples, 0.48%)</title><rect x="632.0" y="387.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.0" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.48%)</title><rect x="632.0" y="371.0" width="5.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="635.0" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (4 samples, 0.13%)</title><rect x="637.7" y="403.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="640.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.26%)</title><rect x="639.2" y="483.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.26%)</title><rect x="639.2" y="467.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.26%)</title><rect x="639.2" y="451.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.13%)</title><rect x="639.2" y="435.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="642.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.13%)</title><rect x="640.7" y="435.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="643.7" y="446.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.13%)</title><rect x="640.7" y="419.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="643.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (38 samples, 1.21%)</title><rect x="642.2" y="515.0" width="14.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.2" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Request (5 samples, 0.16%)</title><rect x="642.2" y="499.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="645.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 0.35%)</title><rect x="644.1" y="499.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.1" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.35%)</title><rect x="644.1" y="483.0" width="4.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="647.1" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.70%)</title><rect x="648.2" y="499.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="651.2" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.70%)</title><rect x="648.2" y="483.0" width="8.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.2" y="494.0"></text>
</g>
<g>
<title>char[] (13 samples, 0.42%)</title><rect x="648.2" y="467.0" width="4.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="651.2" y="478.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.06%)</title><rect x="653.1" y="467.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="656.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.22%)</title><rect x="653.9" y="467.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="656.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.22%)</title><rect x="653.9" y="451.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="656.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 0.22%)</title><rect x="653.9" y="435.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="656.9" y="446.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.22%)</title><rect x="653.9" y="419.0" width="2.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="656.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.26%)</title><rect x="656.5" y="515.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.5" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.26%)</title><rect x="656.5" y="499.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.26%)</title><rect x="656.5" y="483.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="659.5" y="494.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.10%)</title><rect x="656.5" y="467.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="659.5" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.16%)</title><rect x="657.6" y="467.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="660.6" y="478.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.16%)</title><rect x="657.6" y="451.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="660.6" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (40 samples, 1.28%)</title><rect x="659.5" y="515.0" width="15.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="662.5" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (40 samples, 1.28%)</title><rect x="659.5" y="499.0" width="15.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="662.5" y="510.0"></text>
</g>
<g>
<title>char[] (13 samples, 0.42%)</title><rect x="659.5" y="483.0" width="4.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="662.5" y="494.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.42%)</title><rect x="664.4" y="483.0" width="4.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="667.4" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.45%)</title><rect x="669.3" y="483.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="672.3" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.45%)</title><rect x="669.3" y="467.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="672.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (14 samples, 0.45%)</title><rect x="669.3" y="451.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="672.3" y="462.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.45%)</title><rect x="669.3" y="435.0" width="5.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="672.3" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=2844] (371 samples, 11.85%)</title><rect x="674.6" y="595.0" width="139.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="677.6" y="606.0">[NIO Selector #5 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (371 samples, 11.85%)</title><rect x="674.6" y="579.0" width="139.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="677.6" y="590.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 0.29%)</title><rect x="674.6" y="563.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="677.6" y="574.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (9 samples, 0.29%)</title><rect x="674.6" y="547.0" width="3.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="677.6" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (362 samples, 11.56%)</title><rect x="678.0" y="563.0" width="136.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="681.0" y="574.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (362 samples, 11.56%)</title><rect x="678.0" y="547.0" width="136.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.0" y="558.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (362 samples, 11.56%)</title><rect x="678.0" y="531.0" width="136.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="681.0" y="542.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (283 samples, 9.04%)</title><rect x="678.0" y="515.0" width="106.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="681.0" y="526.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (283 samples, 9.04%)</title><rect x="678.0" y="499.0" width="106.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.0" y="510.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (282 samples, 9.00%)</title><rect x="678.0" y="483.0" width="106.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="681.0" y="494.0">RequestHandle..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (29 samples, 0.93%)</title><rect x="678.0" y="467.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="681.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (29 samples, 0.93%)</title><rect x="678.0" y="451.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="681.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.45%)</title><rect x="678.0" y="435.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.0" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (14 samples, 0.45%)</title><rect x="678.0" y="419.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="681.0" y="430.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.45%)</title><rect x="678.0" y="403.0" width="5.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="681.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (15 samples, 0.48%)</title><rect x="683.3" y="435.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.3" y="446.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (15 samples, 0.48%)</title><rect x="683.3" y="419.0" width="5.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="686.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (11 samples, 0.35%)</title><rect x="688.9" y="467.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (11 samples, 0.35%)</title><rect x="688.9" y="451.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.35%)</title><rect x="688.9" y="435.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.35%)</title><rect x="688.9" y="419.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.13%)</title><rect x="688.9" y="403.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="691.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.22%)</title><rect x="690.4" y="403.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="693.4" y="414.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.22%)</title><rect x="690.4" y="387.0" width="2.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="693.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (242 samples, 7.73%)</title><rect x="693.1" y="467.0" width="91.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.1" y="478.0">ru/mail/pol..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (157 samples, 5.01%)</title><rect x="693.1" y="451.0" width="59.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.1" y="462.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (157 samples, 5.01%)</title><rect x="693.1" y="435.0" width="59.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="696.1" y="446.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (152 samples, 4.85%)</title><rect x="693.1" y="419.0" width="57.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="696.1" y="430.0">ch/qos..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (17 samples, 0.54%)</title><rect x="693.1" y="403.0" width="6.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="696.1" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (135 samples, 4.31%)</title><rect x="699.5" y="403.0" width="50.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.5" y="414.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (135 samples, 4.31%)</title><rect x="699.5" y="387.0" width="50.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.5" y="398.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (135 samples, 4.31%)</title><rect x="699.5" y="371.0" width="50.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="702.5" y="382.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (135 samples, 4.31%)</title><rect x="699.5" y="355.0" width="50.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.5" y="366.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (135 samples, 4.31%)</title><rect x="699.5" y="339.0" width="50.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.5" y="350.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (135 samples, 4.31%)</title><rect x="699.5" y="323.0" width="50.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.5" y="334.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (31 samples, 0.99%)</title><rect x="699.5" y="307.0" width="11.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="702.5" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (31 samples, 0.99%)</title><rect x="699.5" y="291.0" width="11.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.5" y="302.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (31 samples, 0.99%)</title><rect x="699.5" y="275.0" width="11.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.5" y="286.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (31 samples, 0.99%)</title><rect x="699.5" y="259.0" width="11.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="702.5" y="270.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.03%)</title><rect x="699.5" y="243.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="702.5" y="254.0"></text>
</g>
<g>
<title>java.util.HashMap (10 samples, 0.32%)</title><rect x="699.8" y="243.0" width="3.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="702.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (10 samples, 0.32%)</title><rect x="703.6" y="243.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="706.6" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (10 samples, 0.32%)</title><rect x="703.6" y="227.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="706.6" y="238.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.32%)</title><rect x="703.6" y="211.0" width="3.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="706.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (7 samples, 0.22%)</title><rect x="707.4" y="243.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="710.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.22%)</title><rect x="707.4" y="227.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.4" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.22%)</title><rect x="707.4" y="211.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="710.4" y="222.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.22%)</title><rect x="707.4" y="195.0" width="2.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="710.4" y="206.0"></text>
</g>
<g>
<title>org.slf4j.helpers.FormattingTuple (3 samples, 0.10%)</title><rect x="710.0" y="243.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="713.0" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (104 samples, 3.32%)</title><rect x="711.1" y="307.0" width="39.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.1" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (71 samples, 2.27%)</title><rect x="711.1" y="291.0" width="26.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="714.1" y="302.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (71 samples, 2.27%)</title><rect x="711.1" y="275.0" width="26.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="714.1" y="286.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.03%)</title><rect x="711.1" y="259.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.1" y="270.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.03%)</title><rect x="711.1" y="243.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="714.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="711.1" y="227.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="714.1" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.03%)</title><rect x="711.1" y="211.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="714.1" y="222.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.03%)</title><rect x="711.1" y="195.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="714.1" y="206.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (3 samples, 0.10%)</title><rect x="711.5" y="259.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="714.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.06%)</title><rect x="712.7" y="259.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="715.7" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.06%)</title><rect x="712.7" y="243.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.7" y="254.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.06%)</title><rect x="712.7" y="227.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="715.7" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (47 samples, 1.50%)</title><rect x="713.4" y="259.0" width="17.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="716.4" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (47 samples, 1.50%)</title><rect x="713.4" y="243.0" width="17.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="716.4" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (47 samples, 1.50%)</title><rect x="713.4" y="227.0" width="17.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="716.4" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (47 samples, 1.50%)</title><rect x="713.4" y="211.0" width="17.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="716.4" y="222.0"></text>
</g>
<g>
<title>byte[] (47 samples, 1.50%)</title><rect x="713.4" y="195.0" width="17.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="716.4" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (18 samples, 0.57%)</title><rect x="731.1" y="259.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.1" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.57%)</title><rect x="731.1" y="243.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.1" y="254.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.10%)</title><rect x="731.1" y="227.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="734.1" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.48%)</title><rect x="732.2" y="227.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="735.2" y="238.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.48%)</title><rect x="732.2" y="211.0" width="5.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="735.2" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (33 samples, 1.05%)</title><rect x="737.9" y="291.0" width="12.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="740.9" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (33 samples, 1.05%)</title><rect x="737.9" y="275.0" width="12.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (33 samples, 1.05%)</title><rect x="737.9" y="259.0" width="12.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (33 samples, 1.05%)</title><rect x="737.9" y="243.0" width="12.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="740.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (33 samples, 1.05%)</title><rect x="737.9" y="227.0" width="12.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.9" y="238.0"></text>
</g>
<g>
<title>byte[] (33 samples, 1.05%)</title><rect x="737.9" y="211.0" width="12.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="740.9" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.16%)</title><rect x="750.3" y="419.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="753.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.19%)</title><rect x="752.2" y="451.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="755.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.19%)</title><rect x="752.2" y="435.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="755.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.19%)</title><rect x="752.2" y="419.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.19%)</title><rect x="752.2" y="403.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="755.2" y="414.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.19%)</title><rect x="752.2" y="387.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="755.2" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.22%)</title><rect x="754.5" y="451.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="757.5" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.22%)</title><rect x="754.5" y="435.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="757.5" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.22%)</title><rect x="754.5" y="419.0" width="2.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="757.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (72 samples, 2.30%)</title><rect x="757.1" y="451.0" width="27.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.1" y="462.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.42%)</title><rect x="757.1" y="435.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.1" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.42%)</title><rect x="757.1" y="419.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="760.1" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.42%)</title><rect x="757.1" y="403.0" width="4.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="760.1" y="414.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.06%)</title><rect x="762.0" y="435.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="765.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (17 samples, 0.54%)</title><rect x="762.8" y="435.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="765.8" y="446.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.26%)</title><rect x="762.8" y="419.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="765.8" y="430.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.03%)</title><rect x="765.8" y="419.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="768.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.13%)</title><rect x="766.1" y="419.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="769.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.13%)</title><rect x="767.7" y="419.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="770.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (40 samples, 1.28%)</title><rect x="769.2" y="435.0" width="15.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="772.2" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (17 samples, 0.54%)</title><rect x="769.2" y="419.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="772.2" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.54%)</title><rect x="769.2" y="403.0" width="6.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="772.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.06%)</title><rect x="775.6" y="419.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="778.6" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.06%)</title><rect x="775.6" y="403.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="778.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (21 samples, 0.67%)</title><rect x="776.3" y="419.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="779.3" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (16 samples, 0.51%)</title><rect x="776.3" y="403.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="779.3" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (16 samples, 0.51%)</title><rect x="776.3" y="387.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="779.3" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.51%)</title><rect x="776.3" y="371.0" width="6.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="779.3" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.10%)</title><rect x="782.3" y="403.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="785.3" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.10%)</title><rect x="782.3" y="387.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="785.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (1 samples, 0.03%)</title><rect x="783.5" y="403.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="786.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.03%)</title><rect x="783.5" y="387.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="786.5" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (1 samples, 0.03%)</title><rect x="783.5" y="371.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="786.5" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (1 samples, 0.03%)</title><rect x="783.9" y="403.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="786.9" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.03%)</title><rect x="784.2" y="483.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="787.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="784.2" y="467.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="787.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="784.2" y="451.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="787.2" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="784.2" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="787.2" y="446.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.03%)</title><rect x="784.2" y="419.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="787.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (32 samples, 1.02%)</title><rect x="784.6" y="515.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="787.6" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Request (10 samples, 0.32%)</title><rect x="784.6" y="499.0" width="3.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="787.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.19%)</title><rect x="788.4" y="499.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="791.4" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.19%)</title><rect x="788.4" y="483.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="791.4" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.51%)</title><rect x="790.6" y="499.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="793.6" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.51%)</title><rect x="790.6" y="483.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="793.6" y="494.0"></text>
</g>
<g>
<title>char[] (7 samples, 0.22%)</title><rect x="790.6" y="467.0" width="2.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="793.6" y="478.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.10%)</title><rect x="793.3" y="467.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="796.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.19%)</title><rect x="794.4" y="467.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="797.4" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.19%)</title><rect x="794.4" y="451.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="797.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.19%)</title><rect x="794.4" y="435.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="797.4" y="446.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.19%)</title><rect x="794.4" y="419.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="797.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.06%)</title><rect x="796.7" y="515.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="799.7" y="526.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.06%)</title><rect x="796.7" y="499.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="799.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.32%)</title><rect x="797.4" y="515.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="800.4" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.32%)</title><rect x="797.4" y="499.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="800.4" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.32%)</title><rect x="797.4" y="483.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="800.4" y="494.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.10%)</title><rect x="797.4" y="467.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="800.4" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.22%)</title><rect x="798.6" y="467.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="801.6" y="478.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.22%)</title><rect x="798.6" y="451.0" width="2.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="801.6" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 1.12%)</title><rect x="801.2" y="515.0" width="13.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.2" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 1.12%)</title><rect x="801.2" y="499.0" width="13.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="804.2" y="510.0"></text>
</g>
<g>
<title>char[] (14 samples, 0.45%)</title><rect x="801.2" y="483.0" width="5.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="804.2" y="494.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.19%)</title><rect x="806.5" y="483.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="809.5" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.48%)</title><rect x="808.7" y="483.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="811.7" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.48%)</title><rect x="808.7" y="467.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="811.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (15 samples, 0.48%)</title><rect x="808.7" y="451.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="811.7" y="462.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.48%)</title><rect x="808.7" y="435.0" width="5.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="811.7" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=2845] (346 samples, 11.05%)</title><rect x="814.4" y="595.0" width="130.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="817.4" y="606.0">[NIO Selector #6..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (346 samples, 11.05%)</title><rect x="814.4" y="579.0" width="130.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="817.4" y="590.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 0.29%)</title><rect x="814.4" y="563.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="817.4" y="574.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (9 samples, 0.29%)</title><rect x="814.4" y="547.0" width="3.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="817.4" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (337 samples, 10.76%)</title><rect x="817.8" y="563.0" width="126.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="820.8" y="574.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (337 samples, 10.76%)</title><rect x="817.8" y="547.0" width="126.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="820.8" y="558.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (337 samples, 10.76%)</title><rect x="817.8" y="531.0" width="126.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="820.8" y="542.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (252 samples, 8.05%)</title><rect x="817.8" y="515.0" width="94.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="820.8" y="526.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (252 samples, 8.05%)</title><rect x="817.8" y="499.0" width="94.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="820.8" y="510.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (242 samples, 7.73%)</title><rect x="817.8" y="483.0" width="91.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="820.8" y="494.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 0.48%)</title><rect x="817.8" y="467.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="820.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (15 samples, 0.48%)</title><rect x="817.8" y="451.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="820.8" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.29%)</title><rect x="817.8" y="435.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="820.8" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (9 samples, 0.29%)</title><rect x="817.8" y="419.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="820.8" y="430.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.29%)</title><rect x="817.8" y="403.0" width="3.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="820.8" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.19%)</title><rect x="821.2" y="435.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="824.2" y="446.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.19%)</title><rect x="821.2" y="419.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="824.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5 samples, 0.16%)</title><rect x="823.4" y="467.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.16%)</title><rect x="823.4" y="451.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="826.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.16%)</title><rect x="823.4" y="435.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="826.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.16%)</title><rect x="823.4" y="419.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="826.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.10%)</title><rect x="823.4" y="403.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="826.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.06%)</title><rect x="824.5" y="403.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="827.5" y="414.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.06%)</title><rect x="824.5" y="387.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="827.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (222 samples, 7.09%)</title><rect x="825.3" y="467.0" width="83.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="828.3" y="478.0">ru/mail/p..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (149 samples, 4.76%)</title><rect x="825.3" y="451.0" width="56.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.3" y="462.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (149 samples, 4.76%)</title><rect x="825.3" y="435.0" width="56.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="828.3" y="446.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (143 samples, 4.57%)</title><rect x="825.3" y="419.0" width="53.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.3" y="430.0">ch/qo..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (12 samples, 0.38%)</title><rect x="825.3" y="403.0" width="4.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="828.3" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (131 samples, 4.18%)</title><rect x="829.8" y="403.0" width="49.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="832.8" y="414.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (131 samples, 4.18%)</title><rect x="829.8" y="387.0" width="49.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="832.8" y="398.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (131 samples, 4.18%)</title><rect x="829.8" y="371.0" width="49.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.8" y="382.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (131 samples, 4.18%)</title><rect x="829.8" y="355.0" width="49.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="832.8" y="366.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (131 samples, 4.18%)</title><rect x="829.8" y="339.0" width="49.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="832.8" y="350.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (131 samples, 4.18%)</title><rect x="829.8" y="323.0" width="49.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="832.8" y="334.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (44 samples, 1.40%)</title><rect x="829.8" y="307.0" width="16.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="832.8" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (44 samples, 1.40%)</title><rect x="829.8" y="291.0" width="16.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="832.8" y="302.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (44 samples, 1.40%)</title><rect x="829.8" y="275.0" width="16.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="832.8" y="286.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (44 samples, 1.40%)</title><rect x="829.8" y="259.0" width="16.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="832.8" y="270.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (4 samples, 0.13%)</title><rect x="829.8" y="243.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="832.8" y="254.0"></text>
</g>
<g>
<title>java.util.HashMap (9 samples, 0.29%)</title><rect x="831.3" y="243.0" width="3.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="834.3" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (14 samples, 0.45%)</title><rect x="834.7" y="243.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="837.7" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (14 samples, 0.45%)</title><rect x="834.7" y="227.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="837.7" y="238.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.45%)</title><rect x="834.7" y="211.0" width="5.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="837.7" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (13 samples, 0.42%)</title><rect x="840.0" y="243.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.42%)</title><rect x="840.0" y="227.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.0" y="238.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.16%)</title><rect x="840.0" y="211.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="843.0" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.26%)</title><rect x="841.9" y="211.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="844.9" y="222.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.26%)</title><rect x="841.9" y="195.0" width="3.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="844.9" y="206.0"></text>
</g>
<g>
<title>org.slf4j.helpers.FormattingTuple (4 samples, 0.13%)</title><rect x="844.9" y="243.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="847.9" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (87 samples, 2.78%)</title><rect x="846.4" y="307.0" width="32.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="849.4" y="318.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (69 samples, 2.20%)</title><rect x="846.4" y="291.0" width="26.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.4" y="302.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (69 samples, 2.20%)</title><rect x="846.4" y="275.0" width="26.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="849.4" y="286.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.03%)</title><rect x="846.4" y="259.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="849.4" y="270.0"></text>
</g>
<g>
<title>java.util.Date (1 samples, 0.03%)</title><rect x="846.4" y="243.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="849.4" y="254.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (6 samples, 0.19%)</title><rect x="846.8" y="259.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="849.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (7 samples, 0.22%)</title><rect x="849.0" y="259.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="852.0" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (7 samples, 0.22%)</title><rect x="849.0" y="243.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="852.0" y="254.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.22%)</title><rect x="849.0" y="227.0" width="2.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="852.0" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (34 samples, 1.09%)</title><rect x="851.7" y="259.0" width="12.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="854.7" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (34 samples, 1.09%)</title><rect x="851.7" y="243.0" width="12.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="854.7" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (34 samples, 1.09%)</title><rect x="851.7" y="227.0" width="12.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.7" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (34 samples, 1.09%)</title><rect x="851.7" y="211.0" width="12.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="854.7" y="222.0"></text>
</g>
<g>
<title>byte[] (34 samples, 1.09%)</title><rect x="851.7" y="195.0" width="12.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="854.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (21 samples, 0.67%)</title><rect x="864.5" y="259.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="867.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.67%)</title><rect x="864.5" y="243.0" width="7.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="867.5" y="254.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.06%)</title><rect x="864.5" y="227.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="867.5" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.61%)</title><rect x="865.2" y="227.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="868.2" y="238.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.61%)</title><rect x="865.2" y="211.0" width="7.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="868.2" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (18 samples, 0.57%)</title><rect x="872.4" y="291.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="875.4" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (18 samples, 0.57%)</title><rect x="872.4" y="275.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="875.4" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (18 samples, 0.57%)</title><rect x="872.4" y="259.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="875.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (18 samples, 0.57%)</title><rect x="872.4" y="243.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="875.4" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.57%)</title><rect x="872.4" y="227.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="875.4" y="238.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.57%)</title><rect x="872.4" y="211.0" width="6.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="875.4" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.19%)</title><rect x="879.2" y="419.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="882.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.06%)</title><rect x="881.4" y="451.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="884.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.06%)</title><rect x="881.4" y="435.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.06%)</title><rect x="881.4" y="419.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="884.4" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.06%)</title><rect x="881.4" y="403.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="884.4" y="414.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.06%)</title><rect x="881.4" y="387.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="884.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.19%)</title><rect x="882.2" y="451.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="885.2" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.19%)</title><rect x="882.2" y="435.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="885.2" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.19%)</title><rect x="882.2" y="419.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="885.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (65 samples, 2.08%)</title><rect x="884.5" y="451.0" width="24.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="887.5" y="462.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.32%)</title><rect x="884.5" y="435.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="887.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.32%)</title><rect x="884.5" y="419.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="887.5" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.32%)</title><rect x="884.5" y="403.0" width="3.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="887.5" y="414.0"></text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.10%)</title><rect x="888.2" y="435.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="891.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (14 samples, 0.45%)</title><rect x="889.3" y="435.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="892.3" y="446.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.19%)</title><rect x="889.3" y="419.0" width="2.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="892.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.13%)</title><rect x="891.6" y="419.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="894.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.13%)</title><rect x="893.1" y="419.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="896.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (38 samples, 1.21%)</title><rect x="894.6" y="435.0" width="14.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="897.6" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (14 samples, 0.45%)</title><rect x="894.6" y="419.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="897.6" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.45%)</title><rect x="894.6" y="403.0" width="5.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="897.6" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.13%)</title><rect x="899.9" y="419.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="902.9" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.13%)</title><rect x="899.9" y="403.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="902.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (20 samples, 0.64%)</title><rect x="901.4" y="419.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="904.4" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (16 samples, 0.51%)</title><rect x="901.4" y="403.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="904.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (16 samples, 0.51%)</title><rect x="901.4" y="387.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="904.4" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.51%)</title><rect x="901.4" y="371.0" width="6.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="904.4" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.03%)</title><rect x="907.4" y="403.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="910.4" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.03%)</title><rect x="907.4" y="387.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="910.4" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (3 samples, 0.10%)</title><rect x="907.8" y="403.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="910.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (10 samples, 0.32%)</title><rect x="908.9" y="483.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="911.9" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.32%)</title><rect x="908.9" y="467.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="911.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.32%)</title><rect x="908.9" y="451.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="911.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.16%)</title><rect x="908.9" y="435.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="911.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.16%)</title><rect x="910.8" y="435.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="913.8" y="446.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.16%)</title><rect x="910.8" y="419.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="913.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (33 samples, 1.05%)</title><rect x="912.7" y="515.0" width="12.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="915.7" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Request (6 samples, 0.19%)</title><rect x="912.7" y="499.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="915.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 0.35%)</title><rect x="915.0" y="499.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.0" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.35%)</title><rect x="915.0" y="483.0" width="4.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="918.0" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.51%)</title><rect x="919.1" y="499.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="922.1" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.51%)</title><rect x="919.1" y="483.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="922.1" y="494.0"></text>
</g>
<g>
<title>char[] (6 samples, 0.19%)</title><rect x="919.1" y="467.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="922.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.10%)</title><rect x="921.4" y="467.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="924.4" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.22%)</title><rect x="922.5" y="467.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="925.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.22%)</title><rect x="922.5" y="451.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="925.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 0.22%)</title><rect x="922.5" y="435.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="925.5" y="446.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.22%)</title><rect x="922.5" y="419.0" width="2.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="925.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.13%)</title><rect x="925.1" y="515.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="928.1" y="526.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.13%)</title><rect x="925.1" y="499.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="928.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.38%)</title><rect x="926.6" y="515.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="929.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.38%)</title><rect x="926.6" y="499.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="929.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.38%)</title><rect x="926.6" y="483.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="929.6" y="494.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.19%)</title><rect x="926.6" y="467.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="929.6" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.19%)</title><rect x="928.9" y="467.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="931.9" y="478.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.19%)</title><rect x="928.9" y="451.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="931.9" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 1.15%)</title><rect x="931.2" y="515.0" width="13.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="934.2" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 1.15%)</title><rect x="931.2" y="499.0" width="13.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="934.2" y="510.0"></text>
</g>
<g>
<title>char[] (21 samples, 0.67%)</title><rect x="931.2" y="483.0" width="7.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="934.2" y="494.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.22%)</title><rect x="939.1" y="483.0" width="2.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="942.1" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.26%)</title><rect x="941.7" y="483.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="944.7" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.26%)</title><rect x="941.7" y="467.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="944.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.26%)</title><rect x="941.7" y="451.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="944.7" y="462.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.26%)</title><rect x="941.7" y="435.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="944.7" y="446.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=2846] (376 samples, 12.01%)</title><rect x="944.7" y="595.0" width="141.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="947.7" y="606.0">[NIO Selector #7 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (376 samples, 12.01%)</title><rect x="944.7" y="579.0" width="141.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="947.7" y="590.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/Session.process (376 samples, 12.01%)</title><rect x="944.7" y="563.0" width="141.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="947.7" y="574.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (376 samples, 12.01%)</title><rect x="944.7" y="547.0" width="141.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="947.7" y="558.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (376 samples, 12.01%)</title><rect x="944.7" y="531.0" width="141.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="947.7" y="542.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (289 samples, 9.23%)</title><rect x="944.7" y="515.0" width="108.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="947.7" y="526.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (289 samples, 9.23%)</title><rect x="944.7" y="499.0" width="108.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="947.7" y="510.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (277 samples, 8.84%)</title><rect x="944.7" y="483.0" width="104.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.7" y="494.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (22 samples, 0.70%)</title><rect x="944.7" y="467.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="947.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (22 samples, 0.70%)</title><rect x="944.7" y="451.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="947.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (17 samples, 0.54%)</title><rect x="944.7" y="435.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="947.7" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (17 samples, 0.54%)</title><rect x="944.7" y="419.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="947.7" y="430.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.54%)</title><rect x="944.7" y="403.0" width="6.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="947.7" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.16%)</title><rect x="951.1" y="435.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="954.1" y="446.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.16%)</title><rect x="951.1" y="419.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="954.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5 samples, 0.16%)</title><rect x="953.0" y="467.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="956.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.16%)</title><rect x="953.0" y="451.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="956.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.16%)</title><rect x="953.0" y="435.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="956.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.16%)</title><rect x="953.0" y="419.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="956.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.03%)</title><rect x="953.0" y="403.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="956.0" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.13%)</title><rect x="953.4" y="403.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="956.4" y="414.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.13%)</title><rect x="953.4" y="387.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="956.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (250 samples, 7.98%)</title><rect x="954.9" y="467.0" width="94.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="957.9" y="478.0">ru/mail/pol..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (164 samples, 5.24%)</title><rect x="954.9" y="451.0" width="61.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="957.9" y="462.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (164 samples, 5.24%)</title><rect x="954.9" y="435.0" width="61.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="957.9" y="446.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (163 samples, 5.20%)</title><rect x="954.9" y="419.0" width="61.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="957.9" y="430.0">ch/qos..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (20 samples, 0.64%)</title><rect x="954.9" y="403.0" width="7.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="957.9" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (143 samples, 4.57%)</title><rect x="962.4" y="403.0" width="53.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="965.4" y="414.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (143 samples, 4.57%)</title><rect x="962.4" y="387.0" width="53.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="965.4" y="398.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (143 samples, 4.57%)</title><rect x="962.4" y="371.0" width="53.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="965.4" y="382.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (143 samples, 4.57%)</title><rect x="962.4" y="355.0" width="53.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="965.4" y="366.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (143 samples, 4.57%)</title><rect x="962.4" y="339.0" width="53.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="965.4" y="350.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (143 samples, 4.57%)</title><rect x="962.4" y="323.0" width="53.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="965.4" y="334.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (34 samples, 1.09%)</title><rect x="962.4" y="307.0" width="12.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="965.4" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (34 samples, 1.09%)</title><rect x="962.4" y="291.0" width="12.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="965.4" y="302.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (34 samples, 1.09%)</title><rect x="962.4" y="275.0" width="12.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="965.4" y="286.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (34 samples, 1.09%)</title><rect x="962.4" y="259.0" width="12.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="965.4" y="270.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.06%)</title><rect x="962.4" y="243.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="965.4" y="254.0"></text>
</g>
<g>
<title>java.util.HashMap (4 samples, 0.13%)</title><rect x="963.2" y="243.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="966.2" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (16 samples, 0.51%)</title><rect x="964.7" y="243.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.7" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (16 samples, 0.51%)</title><rect x="964.7" y="227.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="967.7" y="238.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.51%)</title><rect x="964.7" y="211.0" width="6.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="967.7" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (10 samples, 0.32%)</title><rect x="970.7" y="243.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="973.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.32%)</title><rect x="970.7" y="227.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="973.7" y="238.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.10%)</title><rect x="970.7" y="211.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="973.7" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.22%)</title><rect x="971.9" y="211.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="974.9" y="222.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.22%)</title><rect x="971.9" y="195.0" width="2.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="974.9" y="206.0"></text>
</g>
<g>
<title>org.slf4j.helpers.FormattingTuple (2 samples, 0.06%)</title><rect x="974.5" y="243.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="977.5" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (2 samples, 0.06%)</title><rect x="975.2" y="307.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="978.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.06%)</title><rect x="975.2" y="291.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="978.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.06%)</title><rect x="975.2" y="275.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="978.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.06%)</title><rect x="975.2" y="259.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="978.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.06%)</title><rect x="975.2" y="243.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="978.2" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (107 samples, 3.42%)</title><rect x="976.0" y="307.0" width="40.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="979.0" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (81 samples, 2.59%)</title><rect x="976.0" y="291.0" width="30.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="979.0" y="302.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (81 samples, 2.59%)</title><rect x="976.0" y="275.0" width="30.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="979.0" y="286.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.03%)</title><rect x="976.0" y="259.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="979.0" y="270.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.03%)</title><rect x="976.0" y="243.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="979.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (1 samples, 0.03%)</title><rect x="976.0" y="227.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="979.0" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="976.0" y="211.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="979.0" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="976.0" y="195.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="979.0" y="206.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.03%)</title><rect x="976.0" y="179.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="979.0" y="190.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.06%)</title><rect x="976.4" y="259.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="979.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (5 samples, 0.16%)</title><rect x="977.1" y="259.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="980.1" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (5 samples, 0.16%)</title><rect x="977.1" y="243.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="980.1" y="254.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.16%)</title><rect x="977.1" y="227.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="980.1" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (54 samples, 1.72%)</title><rect x="979.0" y="259.0" width="20.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="982.0" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (54 samples, 1.72%)</title><rect x="979.0" y="243.0" width="20.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="982.0" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (54 samples, 1.72%)</title><rect x="979.0" y="227.0" width="20.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="982.0" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (54 samples, 1.72%)</title><rect x="979.0" y="211.0" width="20.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="982.0" y="222.0"></text>
</g>
<g>
<title>byte[] (54 samples, 1.72%)</title><rect x="979.0" y="195.0" width="20.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="982.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (19 samples, 0.61%)</title><rect x="999.4" y="259.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1002.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.61%)</title><rect x="999.4" y="243.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1002.4" y="254.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.03%)</title><rect x="999.4" y="227.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1002.4" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.57%)</title><rect x="999.7" y="227.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1002.7" y="238.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.57%)</title><rect x="999.7" y="211.0" width="6.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1002.7" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (26 samples, 0.83%)</title><rect x="1006.5" y="291.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1009.5" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (26 samples, 0.83%)</title><rect x="1006.5" y="275.0" width="9.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1009.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (26 samples, 0.83%)</title><rect x="1006.5" y="259.0" width="9.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1009.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (26 samples, 0.83%)</title><rect x="1006.5" y="243.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1009.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (26 samples, 0.83%)</title><rect x="1006.5" y="227.0" width="9.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1009.5" y="238.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.83%)</title><rect x="1006.5" y="211.0" width="9.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1009.5" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.03%)</title><rect x="1016.3" y="419.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1019.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.06%)</title><rect x="1016.7" y="451.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1019.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.06%)</title><rect x="1016.7" y="435.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1019.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.06%)</title><rect x="1016.7" y="419.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1019.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.06%)</title><rect x="1016.7" y="403.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1019.7" y="414.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.06%)</title><rect x="1016.7" y="387.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1019.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.10%)</title><rect x="1017.4" y="451.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1020.4" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.10%)</title><rect x="1017.4" y="435.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1020.4" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.10%)</title><rect x="1017.4" y="419.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1020.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (81 samples, 2.59%)</title><rect x="1018.6" y="451.0" width="30.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1021.6" y="462.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.16%)</title><rect x="1018.6" y="435.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1021.6" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.16%)</title><rect x="1018.6" y="419.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1021.6" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.16%)</title><rect x="1018.6" y="403.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1021.6" y="414.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.06%)</title><rect x="1020.5" y="435.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1023.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (20 samples, 0.64%)</title><rect x="1021.2" y="435.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1024.2" y="446.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.29%)</title><rect x="1021.2" y="419.0" width="3.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1024.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.22%)</title><rect x="1024.6" y="419.0" width="2.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1027.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.10%)</title><rect x="1027.2" y="419.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1030.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.03%)</title><rect x="1028.4" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1031.4" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="1028.4" y="403.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1031.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="1028.4" y="387.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1031.4" y="398.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.03%)</title><rect x="1028.4" y="371.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1031.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (54 samples, 1.72%)</title><rect x="1028.7" y="435.0" width="20.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1031.7" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (21 samples, 0.67%)</title><rect x="1028.7" y="419.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1031.7" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.67%)</title><rect x="1028.7" y="403.0" width="8.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1031.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.10%)</title><rect x="1036.7" y="419.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1039.7" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.10%)</title><rect x="1036.7" y="403.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1039.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (30 samples, 0.96%)</title><rect x="1037.8" y="419.0" width="11.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1040.8" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (17 samples, 0.54%)</title><rect x="1037.8" y="403.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1040.8" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (17 samples, 0.54%)</title><rect x="1037.8" y="387.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1040.8" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.54%)</title><rect x="1037.8" y="371.0" width="6.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1040.8" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.16%)</title><rect x="1044.2" y="403.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1047.2" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.16%)</title><rect x="1044.2" y="387.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1047.2" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (8 samples, 0.26%)</title><rect x="1046.1" y="403.0" width="3.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1049.1" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (12 samples, 0.38%)</title><rect x="1049.1" y="483.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1052.1" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.38%)</title><rect x="1049.1" y="467.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1052.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.38%)</title><rect x="1049.1" y="451.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1052.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.10%)</title><rect x="1049.1" y="435.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1052.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.29%)</title><rect x="1050.2" y="435.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1053.2" y="446.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.29%)</title><rect x="1050.2" y="419.0" width="3.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1053.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (41 samples, 1.31%)</title><rect x="1053.6" y="515.0" width="15.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1056.6" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Request (6 samples, 0.19%)</title><rect x="1053.6" y="499.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1056.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 0.35%)</title><rect x="1055.9" y="499.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1058.9" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.35%)</title><rect x="1055.9" y="483.0" width="4.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1058.9" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 0.77%)</title><rect x="1060.0" y="499.0" width="9.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1063.0" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 0.77%)</title><rect x="1060.0" y="483.0" width="9.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1063.0" y="494.0"></text>
</g>
<g>
<title>char[] (13 samples, 0.42%)</title><rect x="1060.0" y="467.0" width="4.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1063.0" y="478.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.10%)</title><rect x="1064.9" y="467.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1067.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.26%)</title><rect x="1066.0" y="467.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1069.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.26%)</title><rect x="1066.0" y="451.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1069.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.26%)</title><rect x="1066.0" y="435.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1069.0" y="446.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.26%)</title><rect x="1066.0" y="419.0" width="3.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1069.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.10%)</title><rect x="1069.1" y="515.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1072.1" y="526.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.10%)</title><rect x="1069.1" y="499.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1072.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.29%)</title><rect x="1070.2" y="515.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1073.2" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.29%)</title><rect x="1070.2" y="499.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1073.2" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.29%)</title><rect x="1070.2" y="483.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1073.2" y="494.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.16%)</title><rect x="1070.2" y="467.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1073.2" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.13%)</title><rect x="1072.1" y="467.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1075.1" y="478.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.13%)</title><rect x="1072.1" y="451.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1075.1" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (34 samples, 1.09%)</title><rect x="1073.6" y="515.0" width="12.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1076.6" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (34 samples, 1.09%)</title><rect x="1073.6" y="499.0" width="12.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1076.6" y="510.0"></text>
</g>
<g>
<title>char[] (15 samples, 0.48%)</title><rect x="1073.6" y="483.0" width="5.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1076.6" y="494.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.16%)</title><rect x="1079.2" y="483.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1082.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.45%)</title><rect x="1081.1" y="483.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1084.1" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.45%)</title><rect x="1081.1" y="467.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1084.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (14 samples, 0.45%)</title><rect x="1081.1" y="451.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1084.1" y="462.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.45%)</title><rect x="1081.1" y="435.0" width="5.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1084.1" y="446.0"></text>
</g>
<g>
<title>[pool-1-thread-1 tid=2924] (274 samples, 8.75%)</title><rect x="1086.4" y="595.0" width="103.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1089.4" y="606.0">[pool-1-thre..</text>
</g>
<g>
<title>java/lang/Thread.run (274 samples, 8.75%)</title><rect x="1086.4" y="579.0" width="103.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1089.4" y="590.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (274 samples, 8.75%)</title><rect x="1086.4" y="563.0" width="103.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1089.4" y="574.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (274 samples, 8.75%)</title><rect x="1086.4" y="547.0" width="103.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1089.4" y="558.0">java/util/co..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$58/1232167154.run (274 samples, 8.75%)</title><rect x="1086.4" y="531.0" width="103.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1089.4" y="542.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$flush$5 (274 samples, 8.75%)</title><rect x="1086.4" y="515.0" width="103.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1089.4" y="526.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="1086.4" y="499.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1089.4" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.03%)</title><rect x="1086.4" y="483.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1089.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.serialize (272 samples, 8.68%)</title><rect x="1086.8" y="499.0" width="102.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1089.8" y="510.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (3 samples, 0.10%)</title><rect x="1086.8" y="483.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1089.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (3 samples, 0.10%)</title><rect x="1086.8" y="467.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1089.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (3 samples, 0.10%)</title><rect x="1086.8" y="451.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1089.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (3 samples, 0.10%)</title><rect x="1086.8" y="435.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1089.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (3 samples, 0.10%)</title><rect x="1086.8" y="419.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1089.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (3 samples, 0.10%)</title><rect x="1086.8" y="403.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1089.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.10%)</title><rect x="1086.8" y="387.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1089.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.makeConcatWithConstants (3 samples, 0.10%)</title><rect x="1086.8" y="371.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1089.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.doStringConcat (3 samples, 0.10%)</title><rect x="1086.8" y="355.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1089.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.generate (3 samples, 0.10%)</title><rect x="1086.8" y="339.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1089.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.generate (3 samples, 0.10%)</title><rect x="1086.8" y="323.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1089.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.foldArguments (1 samples, 0.03%)</title><rect x="1086.8" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1089.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLL.copyWithExtendL (1 samples, 0.03%)</title><rect x="1086.8" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1089.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="1086.8" y="275.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1089.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLL.make (1 samples, 0.03%)</title><rect x="1086.8" y="259.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1089.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLL.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1086.8" y="243.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1089.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1086.8" y="227.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1089.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1086.8" y="211.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1089.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (1 samples, 0.03%)</title><rect x="1086.8" y="195.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1089.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.03%)</title><rect x="1086.8" y="179.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1089.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 0.03%)</title><rect x="1086.8" y="163.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1089.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (1 samples, 0.03%)</title><rect x="1086.8" y="147.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1089.8" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (1 samples, 0.03%)</title><rect x="1086.8" y="131.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1089.8" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (1 samples, 0.03%)</title><rect x="1086.8" y="115.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1089.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitFieldInsn (1 samples, 0.03%)</title><rect x="1086.8" y="99.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1089.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.newFieldItem (1 samples, 0.03%)</title><rect x="1086.8" y="83.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1089.8" y="94.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.newNameType (1 samples, 0.03%)</title><rect x="1086.8" y="67.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1089.8" y="78.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.newNameTypeItem (1 samples, 0.03%)</title><rect x="1086.8" y="51.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1089.8" y="62.0"></text>
</g>
<g>
<title>jdk.internal.org.objectweb.asm.Item (1 samples, 0.03%)</title><rect x="1086.8" y="35.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1089.8" y="46.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.insertArguments (2 samples, 0.06%)</title><rect x="1087.1" y="307.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1090.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.insertArgumentPrimitive (2 samples, 0.06%)</title><rect x="1087.1" y="291.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1090.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.bindArgumentI (2 samples, 0.06%)</title><rect x="1087.1" y="275.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1090.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.bindArgumentI (2 samples, 0.06%)</title><rect x="1087.1" y="259.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1090.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLL.copyWithExtendI (2 samples, 0.06%)</title><rect x="1087.1" y="243.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1090.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.06%)</title><rect x="1087.1" y="227.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1090.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLI.make (2 samples, 0.06%)</title><rect x="1087.1" y="211.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1090.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLI.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1087.1" y="195.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1090.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1087.1" y="179.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1090.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1087.1" y="163.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1090.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (2 samples, 0.06%)</title><rect x="1087.1" y="147.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1090.1" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (2 samples, 0.06%)</title><rect x="1087.1" y="131.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.1" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (2 samples, 0.06%)</title><rect x="1087.1" y="115.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1090.1" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1087.1" y="99.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1090.1" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1087.1" y="83.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1090.1" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1087.1" y="67.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1090.1" y="78.0"></text>
</g>
<g>
<title>java.lang.Class[] (1 samples, 0.03%)</title><rect x="1087.1" y="51.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1090.1" y="62.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (1 samples, 0.03%)</title><rect x="1087.5" y="99.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1090.5" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classFilePrologue (1 samples, 0.03%)</title><rect x="1087.5" y="83.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1090.5" y="94.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1087.5" y="67.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1090.5" y="78.0"></text>
</g>
<g>
<title>jdk.internal.org.objectweb.asm.Item (1 samples, 0.03%)</title><rect x="1087.5" y="51.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1090.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.write (269 samples, 8.59%)</title><rect x="1087.9" y="483.0" width="101.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1090.9" y="494.0">ru/mail/poli..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (61 samples, 1.95%)</title><rect x="1087.9" y="467.0" width="23.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1090.9" y="478.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (60 samples, 1.92%)</title><rect x="1087.9" y="451.0" width="22.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1090.9" y="462.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$59/1884929459.apply (60 samples, 1.92%)</title><rect x="1087.9" y="435.0" width="22.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1090.9" y="446.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (60 samples, 1.92%)</title><rect x="1087.9" y="419.0" width="22.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1090.9" y="430.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (28 samples, 0.89%)</title><rect x="1087.9" y="403.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (28 samples, 0.89%)</title><rect x="1087.9" y="387.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1090.9" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (28 samples, 0.89%)</title><rect x="1087.9" y="371.0" width="10.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1090.9" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (24 samples, 0.77%)</title><rect x="1098.4" y="403.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1101.4" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (24 samples, 0.77%)</title><rect x="1098.4" y="387.0" width="9.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1101.4" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (8 samples, 0.26%)</title><rect x="1107.5" y="403.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1110.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="1110.5" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1113.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="1110.5" y="435.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1113.5" y="446.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (1 samples, 0.03%)</title><rect x="1110.5" y="419.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1113.5" y="430.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (6 samples, 0.19%)</title><rect x="1110.9" y="467.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1113.9" y="478.0"></text>
</g>
<g>
<title>java.lang.Integer (6 samples, 0.19%)</title><rect x="1110.9" y="451.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1113.9" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (68 samples, 2.17%)</title><rect x="1113.1" y="467.0" width="25.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1116.1" y="478.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (68 samples, 2.17%)</title><rect x="1113.1" y="451.0" width="25.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1116.1" y="462.0">j..</text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.16%)</title><rect x="1138.8" y="467.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1141.8" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.16%)</title><rect x="1138.8" y="451.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1141.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.16%)</title><rect x="1138.8" y="435.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1141.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.16%)</title><rect x="1138.8" y="419.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1141.8" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.16%)</title><rect x="1138.8" y="403.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1141.8" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.10%)</title><rect x="1138.8" y="387.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1141.8" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.06%)</title><rect x="1139.9" y="387.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1142.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.06%)</title><rect x="1139.9" y="371.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1142.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (42 samples, 1.34%)</title><rect x="1140.6" y="467.0" width="15.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1143.6" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (26 samples, 0.83%)</title><rect x="1140.6" y="451.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.6" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (26 samples, 0.83%)</title><rect x="1140.6" y="435.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.6" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (26 samples, 0.83%)</title><rect x="1140.6" y="419.0" width="9.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1143.6" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (16 samples, 0.51%)</title><rect x="1150.4" y="451.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1153.4" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.51%)</title><rect x="1150.4" y="435.0" width="6.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1153.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.fromInt (56 samples, 1.79%)</title><rect x="1156.5" y="467.0" width="21.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1159.5" y="478.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (56 samples, 1.79%)</title><rect x="1156.5" y="451.0" width="21.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1159.5" y="462.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 1.15%)</title><rect x="1156.5" y="435.0" width="13.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1159.5" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (20 samples, 0.64%)</title><rect x="1170.0" y="435.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1173.0" y="446.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.64%)</title><rect x="1170.0" y="419.0" width="7.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1173.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.fromLong (31 samples, 0.99%)</title><rect x="1177.6" y="467.0" width="11.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1180.6" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (31 samples, 0.99%)</title><rect x="1177.6" y="451.0" width="11.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1180.6" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.35%)</title><rect x="1177.6" y="435.0" width="4.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1180.6" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (20 samples, 0.64%)</title><rect x="1181.7" y="435.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1184.7" y="446.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.64%)</title><rect x="1181.7" y="419.0" width="7.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1184.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (1 samples, 0.03%)</title><rect x="1189.2" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1192.2" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.03%)</title><rect x="1189.2" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1192.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.03%)</title><rect x="1189.2" y="467.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1192.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.03%)</title><rect x="1189.2" y="451.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1192.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.03%)</title><rect x="1189.2" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1192.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.03%)</title><rect x="1189.2" y="419.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.03%)</title><rect x="1189.2" y="403.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (1 samples, 0.03%)</title><rect x="1189.2" y="387.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1192.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.checkResource (1 samples, 0.03%)</title><rect x="1189.2" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1192.2" y="382.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1189.2" y="355.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.2" y="366.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1189.2" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1192.2" y="350.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.parseURL (1 samples, 0.03%)</title><rect x="1189.2" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.2" y="334.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.parseContextSpec (1 samples, 0.03%)</title><rect x="1189.2" y="307.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1192.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="1189.2" y="291.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.2" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="1189.2" y="275.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.2" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="1189.2" y="259.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1192.2" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="1189.2" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1192.2" y="254.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.03%)</title><rect x="1189.2" y="227.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1192.2" y="238.0"></text>
</g>
<g>
<title>[tid=2925] (1 samples, 0.03%)</title><rect x="1189.6" y="595.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1192.6" y="606.0"></text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.03%)</title><rect x="1189.6" y="579.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1192.6" y="590.0"></text>
</g>
<g>
<title>java.lang.ClassCastException (1 samples, 0.03%)</title><rect x="1189.6" y="563.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1192.6" y="574.0"></text>
</g>
</g>
</svg>
