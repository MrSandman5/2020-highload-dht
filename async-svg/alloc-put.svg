<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="501"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="501"> </text>
<g id="frames">
<g>
<title>all (4,232 samples, 100.00%)</title><rect x="10.0" y="467.0" width="1180.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="478.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=52973] (227 samples, 5.36%)</title><rect x="10.0" y="451.0" width="63.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="462.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (227 samples, 5.36%)</title><rect x="10.0" y="435.0" width="63.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="446.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.process (227 samples, 5.36%)</title><rect x="10.0" y="419.0" width="63.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="430.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (227 samples, 5.36%)</title><rect x="10.0" y="403.0" width="63.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (227 samples, 5.36%)</title><rect x="10.0" y="387.0" width="63.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (160 samples, 3.78%)</title><rect x="10.0" y="371.0" width="44.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="382.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (160 samples, 3.78%)</title><rect x="10.0" y="355.0" width="44.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="366.0">one/..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (151 samples, 3.57%)</title><rect x="10.0" y="339.0" width="42.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="350.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (4 samples, 0.09%)</title><rect x="10.0" y="323.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.09%)</title><rect x="10.0" y="307.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.09%)</title><rect x="10.0" y="291.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.09%)</title><rect x="10.0" y="275.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="10.0" y="259.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="10.6" y="259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.6" y="270.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="10.6" y="243.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="13.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (147 samples, 3.47%)</title><rect x="11.1" y="323.0" width="41.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.1" y="334.0">ru/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (118 samples, 2.79%)</title><rect x="11.1" y="307.0" width="32.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.1" y="318.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (118 samples, 2.79%)</title><rect x="11.1" y="291.0" width="32.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.1" y="302.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (117 samples, 2.76%)</title><rect x="11.1" y="275.0" width="32.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.1" y="286.0">ch..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (7 samples, 0.17%)</title><rect x="11.1" y="259.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="14.1" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (110 samples, 2.60%)</title><rect x="13.1" y="259.0" width="30.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.1" y="270.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (110 samples, 2.60%)</title><rect x="13.1" y="243.0" width="30.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="16.1" y="254.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (110 samples, 2.60%)</title><rect x="13.1" y="227.0" width="30.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="16.1" y="238.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (110 samples, 2.60%)</title><rect x="13.1" y="211.0" width="30.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.1" y="222.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (110 samples, 2.60%)</title><rect x="13.1" y="195.0" width="30.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.1" y="206.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (110 samples, 2.60%)</title><rect x="13.1" y="179.0" width="30.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.1" y="190.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (21 samples, 0.50%)</title><rect x="13.1" y="163.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="16.1" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (21 samples, 0.50%)</title><rect x="13.1" y="147.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.1" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (21 samples, 0.50%)</title><rect x="13.1" y="131.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.1" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (21 samples, 0.50%)</title><rect x="13.1" y="115.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.1" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (4 samples, 0.09%)</title><rect x="13.1" y="99.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="16.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (11 samples, 0.26%)</title><rect x="14.2" y="99.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.2" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (11 samples, 0.26%)</title><rect x="14.2" y="83.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.2" y="94.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.26%)</title><rect x="14.2" y="67.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="17.2" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 0.14%)</title><rect x="17.2" y="99.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.2" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.14%)</title><rect x="17.2" y="83.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.2" y="94.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="17.2" y="67.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="20.2" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="18.1" y="67.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.1" y="78.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="18.1" y="51.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="21.1" y="62.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (89 samples, 2.10%)</title><rect x="18.9" y="163.0" width="24.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.9" y="174.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (74 samples, 1.75%)</title><rect x="18.9" y="147.0" width="20.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.9" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (74 samples, 1.75%)</title><rect x="18.9" y="131.0" width="20.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.9" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (7 samples, 0.17%)</title><rect x="18.9" y="115.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="21.9" y="126.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (7 samples, 0.17%)</title><rect x="18.9" y="99.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.9" y="110.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (2 samples, 0.05%)</title><rect x="18.9" y="83.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="21.9" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="19.5" y="83.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.5" y="94.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.09%)</title><rect x="19.5" y="67.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.5" y="78.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="19.5" y="51.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="22.5" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (1 samples, 0.02%)</title><rect x="20.6" y="83.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.6" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="20.6" y="67.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.6" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="20.6" y="51.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.6" y="62.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="20.6" y="35.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="23.6" y="46.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.05%)</title><rect x="20.9" y="115.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="23.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.07%)</title><rect x="21.4" y="115.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.4" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.07%)</title><rect x="21.4" y="99.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.4" y="110.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="21.4" y="83.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="24.4" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (38 samples, 0.90%)</title><rect x="22.3" y="115.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.3" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (38 samples, 0.90%)</title><rect x="22.3" y="99.0" width="10.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.3" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (38 samples, 0.90%)</title><rect x="22.3" y="83.0" width="10.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.3" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (38 samples, 0.90%)</title><rect x="22.3" y="67.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.3" y="78.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.90%)</title><rect x="22.3" y="51.0" width="10.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="25.3" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (24 samples, 0.57%)</title><rect x="32.9" y="115.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="35.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.57%)</title><rect x="32.9" y="99.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="35.9" y="110.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.14%)</title><rect x="32.9" y="83.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="35.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.43%)</title><rect x="34.5" y="83.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="37.5" y="94.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.43%)</title><rect x="34.5" y="67.0" width="5.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="37.5" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (15 samples, 0.35%)</title><rect x="39.6" y="147.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="42.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (15 samples, 0.35%)</title><rect x="39.6" y="131.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (15 samples, 0.35%)</title><rect x="39.6" y="115.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="42.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (15 samples, 0.35%)</title><rect x="39.6" y="99.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="42.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (15 samples, 0.35%)</title><rect x="39.6" y="83.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.6" y="94.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.35%)</title><rect x="39.6" y="67.0" width="4.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="42.6" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="43.7" y="275.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="46.7" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.19%)</title><rect x="44.0" y="307.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.19%)</title><rect x="44.0" y="291.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (8 samples, 0.19%)</title><rect x="44.0" y="275.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.0" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.19%)</title><rect x="44.0" y="259.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.0" y="270.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.19%)</title><rect x="44.0" y="243.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="47.0" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.19%)</title><rect x="46.2" y="307.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.19%)</title><rect x="46.2" y="291.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.2" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.19%)</title><rect x="46.2" y="275.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="49.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (13 samples, 0.31%)</title><rect x="48.5" y="307.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="51.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="48.5" y="291.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="51.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="48.5" y="275.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="51.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.get$Lambda (5 samples, 0.12%)</title><rect x="48.5" y="259.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.5" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$60 (5 samples, 0.12%)</title><rect x="48.5" y="243.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="51.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.19%)</title><rect x="49.9" y="291.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.9" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.19%)</title><rect x="49.9" y="275.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.9" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.19%)</title><rect x="49.9" y="259.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="52.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (9 samples, 0.21%)</title><rect x="52.1" y="339.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.21%)</title><rect x="52.1" y="323.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.21%)</title><rect x="52.1" y="307.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="55.1" y="318.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="52.1" y="291.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="55.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.14%)</title><rect x="52.9" y="291.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.9" y="302.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="52.9" y="275.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="55.9" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (28 samples, 0.66%)</title><rect x="54.6" y="371.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="57.6" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (5 samples, 0.12%)</title><rect x="54.6" y="355.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="57.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (10 samples, 0.24%)</title><rect x="56.0" y="355.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="59.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.24%)</title><rect x="56.0" y="339.0" width="2.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="59.0" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.31%)</title><rect x="58.8" y="355.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="61.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.31%)</title><rect x="58.8" y="339.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="61.8" y="350.0"></text>
</g>
<g>
<title>char[] (9 samples, 0.21%)</title><rect x="58.8" y="323.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="61.8" y="334.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="61.3" y="323.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="64.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="61.9" y="323.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="61.9" y="307.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.05%)</title><rect x="61.9" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.9" y="302.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="61.9" y="275.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="64.9" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.09%)</title><rect x="62.4" y="371.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.4" y="382.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="62.4" y="355.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="65.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.26%)</title><rect x="63.5" y="371.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.26%)</title><rect x="63.5" y="355.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="66.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.26%)</title><rect x="63.5" y="339.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="66.5" y="350.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="63.5" y="323.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="66.5" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.14%)</title><rect x="64.9" y="323.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="67.9" y="334.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="64.9" y="307.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="67.9" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 0.57%)</title><rect x="66.6" y="371.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="69.6" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 0.57%)</title><rect x="66.6" y="355.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.6" y="366.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.24%)</title><rect x="66.6" y="339.0" width="2.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="69.6" y="350.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.17%)</title><rect x="69.4" y="339.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="72.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.17%)</title><rect x="71.3" y="339.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.17%)</title><rect x="71.3" y="323.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 0.17%)</title><rect x="71.3" y="307.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="74.3" y="318.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="71.3" y="291.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="74.3" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=52974] (214 samples, 5.06%)</title><rect x="73.3" y="451.0" width="59.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="76.3" y="462.0">[NIO S..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (214 samples, 5.06%)</title><rect x="73.3" y="435.0" width="59.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.3" y="446.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.process (214 samples, 5.06%)</title><rect x="73.3" y="419.0" width="59.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="76.3" y="430.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (214 samples, 5.06%)</title><rect x="73.3" y="403.0" width="59.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="76.3" y="414.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (214 samples, 5.06%)</title><rect x="73.3" y="387.0" width="59.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="76.3" y="398.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (143 samples, 3.38%)</title><rect x="73.3" y="371.0" width="39.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.3" y="382.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (143 samples, 3.38%)</title><rect x="73.3" y="355.0" width="39.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.3" y="366.0">one..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (134 samples, 3.17%)</title><rect x="73.3" y="339.0" width="37.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.3" y="350.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (7 samples, 0.17%)</title><rect x="73.3" y="323.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.3" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.17%)</title><rect x="73.3" y="307.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="76.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.17%)</title><rect x="73.3" y="291.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.17%)</title><rect x="73.3" y="275.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.3" y="286.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="73.3" y="259.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="76.3" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="74.7" y="259.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="77.7" y="270.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="74.7" y="243.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="77.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (127 samples, 3.00%)</title><rect x="75.2" y="323.0" width="35.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.2" y="334.0">ru/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (111 samples, 2.62%)</title><rect x="75.2" y="307.0" width="31.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.2" y="318.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (111 samples, 2.62%)</title><rect x="75.2" y="291.0" width="31.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.2" y="302.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (107 samples, 2.53%)</title><rect x="75.2" y="275.0" width="29.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="78.2" y="286.0">ch..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (10 samples, 0.24%)</title><rect x="75.2" y="259.0" width="2.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="78.2" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (97 samples, 2.29%)</title><rect x="78.0" y="259.0" width="27.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.0" y="270.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (97 samples, 2.29%)</title><rect x="78.0" y="243.0" width="27.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="81.0" y="254.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (97 samples, 2.29%)</title><rect x="78.0" y="227.0" width="27.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="81.0" y="238.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (97 samples, 2.29%)</title><rect x="78.0" y="211.0" width="27.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="81.0" y="222.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (97 samples, 2.29%)</title><rect x="78.0" y="195.0" width="27.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.0" y="206.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (97 samples, 2.29%)</title><rect x="78.0" y="179.0" width="27.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.0" y="190.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (21 samples, 0.50%)</title><rect x="78.0" y="163.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.0" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (21 samples, 0.50%)</title><rect x="78.0" y="147.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.0" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (21 samples, 0.50%)</title><rect x="78.0" y="131.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="81.0" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (21 samples, 0.50%)</title><rect x="78.0" y="115.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="81.0" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (5 samples, 0.12%)</title><rect x="78.0" y="99.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="81.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (7 samples, 0.17%)</title><rect x="79.4" y="99.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.4" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (7 samples, 0.17%)</title><rect x="79.4" y="83.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.4" y="94.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="79.4" y="67.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="82.4" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (9 samples, 0.21%)</title><rect x="81.4" y="99.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.21%)</title><rect x="81.4" y="83.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.4" y="94.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="81.4" y="67.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="84.4" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.14%)</title><rect x="82.2" y="67.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.2" y="78.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="82.2" y="51.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="85.2" y="62.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (2 samples, 0.05%)</title><rect x="83.9" y="163.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="86.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="83.9" y="147.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="83.9" y="131.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.05%)</title><rect x="83.9" y="115.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="86.9" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.05%)</title><rect x="83.9" y="99.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="86.9" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (74 samples, 1.75%)</title><rect x="84.4" y="163.0" width="20.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.4" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (61 samples, 1.44%)</title><rect x="84.4" y="147.0" width="17.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.4" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (61 samples, 1.44%)</title><rect x="84.4" y="131.0" width="17.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.4" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 0.05%)</title><rect x="84.4" y="115.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.4" y="126.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (2 samples, 0.05%)</title><rect x="84.4" y="99.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="87.4" y="110.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (1 samples, 0.02%)</title><rect x="84.4" y="83.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="87.4" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (1 samples, 0.02%)</title><rect x="84.7" y="83.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="87.7" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="84.7" y="67.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.7" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="84.7" y="51.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.7" y="62.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="84.7" y="35.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="87.7" y="46.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (3 samples, 0.07%)</title><rect x="85.0" y="115.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="88.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4 samples, 0.09%)</title><rect x="85.8" y="115.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="88.8" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.09%)</title><rect x="85.8" y="99.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.8" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="85.8" y="83.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="88.8" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (37 samples, 0.87%)</title><rect x="87.0" y="115.0" width="10.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.0" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (37 samples, 0.87%)</title><rect x="87.0" y="99.0" width="10.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.0" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (37 samples, 0.87%)</title><rect x="87.0" y="83.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.0" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (37 samples, 0.87%)</title><rect x="87.0" y="67.0" width="10.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.0" y="78.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.87%)</title><rect x="87.0" y="51.0" width="10.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="90.0" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (15 samples, 0.35%)</title><rect x="97.3" y="115.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="100.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.35%)</title><rect x="97.3" y="99.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="97.3" y="83.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="100.3" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.28%)</title><rect x="98.1" y="83.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.1" y="94.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.28%)</title><rect x="98.1" y="67.0" width="3.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="101.1" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (13 samples, 0.31%)</title><rect x="101.5" y="147.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.5" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (13 samples, 0.31%)</title><rect x="101.5" y="131.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.5" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (13 samples, 0.31%)</title><rect x="101.5" y="115.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (13 samples, 0.31%)</title><rect x="101.5" y="99.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.5" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.31%)</title><rect x="101.5" y="83.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="104.5" y="94.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.31%)</title><rect x="101.5" y="67.0" width="3.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="104.5" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.09%)</title><rect x="105.1" y="275.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="108.1" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.12%)</title><rect x="106.2" y="307.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (5 samples, 0.12%)</title><rect x="106.2" y="291.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="109.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (5 samples, 0.12%)</title><rect x="106.2" y="275.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="109.2" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.12%)</title><rect x="106.2" y="259.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="109.2" y="270.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="106.2" y="243.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="109.2" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.12%)</title><rect x="107.6" y="307.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="110.6" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.12%)</title><rect x="107.6" y="291.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.6" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.12%)</title><rect x="107.6" y="275.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="110.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (6 samples, 0.14%)</title><rect x="109.0" y="307.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="112.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="109.0" y="291.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="109.0" y="275.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.get$Lambda (2 samples, 0.05%)</title><rect x="109.0" y="259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="112.0" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$60 (2 samples, 0.05%)</title><rect x="109.0" y="243.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="112.0" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.09%)</title><rect x="109.5" y="291.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.5" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.09%)</title><rect x="109.5" y="275.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="112.5" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.09%)</title><rect x="109.5" y="259.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="112.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (9 samples, 0.21%)</title><rect x="110.7" y="339.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.21%)</title><rect x="110.7" y="323.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.21%)</title><rect x="110.7" y="307.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.7" y="318.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="110.7" y="291.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="113.7" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.14%)</title><rect x="111.5" y="291.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="114.5" y="302.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="111.5" y="275.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="114.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (42 samples, 0.99%)</title><rect x="113.2" y="371.0" width="11.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="116.2" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (4 samples, 0.09%)</title><rect x="113.2" y="355.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="116.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (16 samples, 0.38%)</title><rect x="114.3" y="355.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.3" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (16 samples, 0.38%)</title><rect x="114.3" y="339.0" width="4.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="117.3" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.52%)</title><rect x="118.7" y="355.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.7" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.52%)</title><rect x="118.7" y="339.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.7" y="350.0"></text>
</g>
<g>
<title>char[] (14 samples, 0.33%)</title><rect x="118.7" y="323.0" width="3.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="121.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="122.6" y="323.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="125.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.12%)</title><rect x="123.5" y="323.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="126.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.12%)</title><rect x="123.5" y="307.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.12%)</title><rect x="123.5" y="291.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.5" y="302.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="123.5" y="275.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="126.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.09%)</title><rect x="124.9" y="371.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="127.9" y="382.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="124.9" y="355.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="127.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="126.0" y="371.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="126.0" y="355.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="129.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="126.0" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.0" y="350.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="126.0" y="323.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="129.0" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="126.3" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.3" y="334.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="126.3" y="307.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="129.3" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 0.54%)</title><rect x="126.6" y="371.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.6" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 0.54%)</title><rect x="126.6" y="355.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.6" y="366.0"></text>
</g>
<g>
<title>char[] (11 samples, 0.26%)</title><rect x="126.6" y="339.0" width="3.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="129.6" y="350.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="129.6" y="339.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="132.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.17%)</title><rect x="131.0" y="339.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.17%)</title><rect x="131.0" y="323.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 0.17%)</title><rect x="131.0" y="307.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.0" y="318.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="131.0" y="291.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="134.0" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=52975] (208 samples, 4.91%)</title><rect x="133.0" y="451.0" width="58.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="136.0" y="462.0">[NIO S..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (208 samples, 4.91%)</title><rect x="133.0" y="435.0" width="58.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.0" y="446.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 0.14%)</title><rect x="133.0" y="419.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.0" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (6 samples, 0.14%)</title><rect x="133.0" y="403.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="136.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (202 samples, 4.77%)</title><rect x="134.6" y="419.0" width="56.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.6" y="430.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (202 samples, 4.77%)</title><rect x="134.6" y="403.0" width="56.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="137.6" y="414.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (202 samples, 4.77%)</title><rect x="134.6" y="387.0" width="56.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.6" y="398.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (134 samples, 3.17%)</title><rect x="134.6" y="371.0" width="37.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="137.6" y="382.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (134 samples, 3.17%)</title><rect x="134.6" y="355.0" width="37.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="137.6" y="366.0">one..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (131 samples, 3.10%)</title><rect x="134.6" y="339.0" width="36.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.6" y="350.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.07%)</title><rect x="134.6" y="323.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.07%)</title><rect x="134.6" y="307.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="137.6" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.07%)</title><rect x="134.6" y="291.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.6" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="134.6" y="275.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="137.6" y="286.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="134.6" y="259.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="137.6" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="135.2" y="259.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.2" y="270.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="135.2" y="243.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="138.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (128 samples, 3.02%)</title><rect x="135.5" y="323.0" width="35.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.5" y="334.0">ru/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (111 samples, 2.62%)</title><rect x="135.5" y="307.0" width="30.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.5" y="318.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (111 samples, 2.62%)</title><rect x="135.5" y="291.0" width="30.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.5" y="302.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (104 samples, 2.46%)</title><rect x="135.5" y="275.0" width="29.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.5" y="286.0">ch..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (14 samples, 0.33%)</title><rect x="135.5" y="259.0" width="3.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="138.5" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (90 samples, 2.13%)</title><rect x="139.4" y="259.0" width="25.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.4" y="270.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (90 samples, 2.13%)</title><rect x="139.4" y="243.0" width="25.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.4" y="254.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (90 samples, 2.13%)</title><rect x="139.4" y="227.0" width="25.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="142.4" y="238.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (90 samples, 2.13%)</title><rect x="139.4" y="211.0" width="25.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.4" y="222.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (90 samples, 2.13%)</title><rect x="139.4" y="195.0" width="25.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="142.4" y="206.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (90 samples, 2.13%)</title><rect x="139.4" y="179.0" width="25.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.4" y="190.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (24 samples, 0.57%)</title><rect x="139.4" y="163.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.4" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (24 samples, 0.57%)</title><rect x="139.4" y="147.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.4" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (24 samples, 0.57%)</title><rect x="139.4" y="131.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="142.4" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (24 samples, 0.57%)</title><rect x="139.4" y="115.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="142.4" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.02%)</title><rect x="139.4" y="99.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="142.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (16 samples, 0.38%)</title><rect x="139.7" y="99.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="142.7" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (16 samples, 0.38%)</title><rect x="139.7" y="83.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.7" y="94.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.38%)</title><rect x="139.7" y="67.0" width="4.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="142.7" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (7 samples, 0.17%)</title><rect x="144.1" y="99.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.17%)</title><rect x="144.1" y="83.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.1" y="94.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.09%)</title><rect x="144.1" y="67.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="147.1" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="145.2" y="67.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="148.2" y="78.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="145.2" y="51.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="148.2" y="62.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (2 samples, 0.05%)</title><rect x="146.1" y="163.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="146.1" y="147.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="146.1" y="131.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.05%)</title><rect x="146.1" y="115.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="149.1" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.05%)</title><rect x="146.1" y="99.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="149.1" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (64 samples, 1.51%)</title><rect x="146.6" y="163.0" width="17.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.6" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (54 samples, 1.28%)</title><rect x="146.6" y="147.0" width="15.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="149.6" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (54 samples, 1.28%)</title><rect x="146.6" y="131.0" width="15.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.6" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.02%)</title><rect x="146.6" y="115.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.6" y="126.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.02%)</title><rect x="146.6" y="99.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (1 samples, 0.02%)</title><rect x="146.6" y="83.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.6" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="146.6" y="67.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.6" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="146.6" y="51.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.6" y="62.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="146.6" y="35.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="149.6" y="46.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (6 samples, 0.14%)</title><rect x="146.9" y="115.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="149.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.07%)</title><rect x="148.6" y="115.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.6" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.07%)</title><rect x="148.6" y="99.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.6" y="110.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="148.6" y="83.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="151.6" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (31 samples, 0.73%)</title><rect x="149.4" y="115.0" width="8.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="152.4" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (31 samples, 0.73%)</title><rect x="149.4" y="99.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.4" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (31 samples, 0.73%)</title><rect x="149.4" y="83.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.4" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (31 samples, 0.73%)</title><rect x="149.4" y="67.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.4" y="78.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.73%)</title><rect x="149.4" y="51.0" width="8.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="152.4" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (13 samples, 0.31%)</title><rect x="158.1" y="115.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="161.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.31%)</title><rect x="158.1" y="99.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="161.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="158.1" y="83.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="161.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.28%)</title><rect x="158.3" y="83.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.3" y="94.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.28%)</title><rect x="158.3" y="67.0" width="3.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="161.3" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (10 samples, 0.24%)</title><rect x="161.7" y="147.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="164.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.24%)</title><rect x="161.7" y="131.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="164.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.24%)</title><rect x="161.7" y="115.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="164.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (10 samples, 0.24%)</title><rect x="161.7" y="99.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="164.7" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.24%)</title><rect x="161.7" y="83.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="164.7" y="94.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.24%)</title><rect x="161.7" y="67.0" width="2.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="164.7" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.17%)</title><rect x="164.5" y="275.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="167.5" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.14%)</title><rect x="166.4" y="307.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="169.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.14%)</title><rect x="166.4" y="291.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="169.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.14%)</title><rect x="166.4" y="275.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="169.4" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.14%)</title><rect x="166.4" y="259.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="169.4" y="270.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="166.4" y="243.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="169.4" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.14%)</title><rect x="168.1" y="307.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="171.1" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.14%)</title><rect x="168.1" y="291.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="171.1" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.14%)</title><rect x="168.1" y="275.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="171.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (5 samples, 0.12%)</title><rect x="169.8" y="307.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="172.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="169.8" y="291.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="169.8" y="275.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.get$Lambda (3 samples, 0.07%)</title><rect x="169.8" y="259.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.8" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$60 (3 samples, 0.07%)</title><rect x="169.8" y="243.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="172.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="170.6" y="291.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="173.6" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="170.6" y="275.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.6" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.05%)</title><rect x="170.6" y="259.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="173.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.07%)</title><rect x="171.2" y="339.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="174.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.07%)</title><rect x="171.2" y="323.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="174.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="171.2" y="307.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="174.2" y="318.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="171.2" y="291.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="174.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (28 samples, 0.66%)</title><rect x="172.0" y="371.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="175.0" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (2 samples, 0.05%)</title><rect x="172.0" y="355.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="175.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (9 samples, 0.21%)</title><rect x="172.6" y="355.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="175.6" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (9 samples, 0.21%)</title><rect x="172.6" y="339.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="175.6" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.40%)</title><rect x="175.1" y="355.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.1" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.40%)</title><rect x="175.1" y="339.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.1" y="350.0"></text>
</g>
<g>
<title>char[] (7 samples, 0.17%)</title><rect x="175.1" y="323.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="178.1" y="334.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="177.0" y="323.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="180.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.19%)</title><rect x="177.6" y="323.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="180.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.19%)</title><rect x="177.6" y="307.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="180.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.19%)</title><rect x="177.6" y="291.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.6" y="302.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.19%)</title><rect x="177.6" y="275.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="180.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.05%)</title><rect x="179.8" y="371.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.8" y="382.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="179.8" y="355.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="182.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.12%)</title><rect x="180.4" y="371.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="183.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.12%)</title><rect x="180.4" y="355.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="183.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="180.4" y="339.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="183.4" y="350.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="180.4" y="323.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="183.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="180.9" y="323.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="183.9" y="334.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="180.9" y="307.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="183.9" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (33 samples, 0.78%)</title><rect x="181.8" y="371.0" width="9.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="184.8" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (33 samples, 0.78%)</title><rect x="181.8" y="355.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="184.8" y="366.0"></text>
</g>
<g>
<title>char[] (16 samples, 0.38%)</title><rect x="181.8" y="339.0" width="4.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="184.8" y="350.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.17%)</title><rect x="186.2" y="339.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="189.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.24%)</title><rect x="188.2" y="339.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="191.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.24%)</title><rect x="188.2" y="323.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10 samples, 0.24%)</title><rect x="188.2" y="307.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.2" y="318.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.24%)</title><rect x="188.2" y="291.0" width="2.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="191.2" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=52976] (227 samples, 5.36%)</title><rect x="191.0" y="451.0" width="63.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="194.0" y="462.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (227 samples, 5.36%)</title><rect x="191.0" y="435.0" width="63.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="194.0" y="446.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 0.14%)</title><rect x="191.0" y="419.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="194.0" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (6 samples, 0.14%)</title><rect x="191.0" y="403.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="194.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (221 samples, 5.22%)</title><rect x="192.6" y="419.0" width="61.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.6" y="430.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (221 samples, 5.22%)</title><rect x="192.6" y="403.0" width="61.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="195.6" y="414.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (221 samples, 5.22%)</title><rect x="192.6" y="387.0" width="61.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.6" y="398.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (152 samples, 3.59%)</title><rect x="192.6" y="371.0" width="42.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="195.6" y="382.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (152 samples, 3.59%)</title><rect x="192.6" y="355.0" width="42.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.6" y="366.0">one/..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (144 samples, 3.40%)</title><rect x="192.6" y="339.0" width="40.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.6" y="350.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (9 samples, 0.21%)</title><rect x="192.6" y="323.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="195.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.21%)</title><rect x="192.6" y="307.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.6" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.21%)</title><rect x="192.6" y="291.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.6" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.21%)</title><rect x="192.6" y="275.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="195.6" y="286.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.14%)</title><rect x="192.6" y="259.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="195.6" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="194.3" y="259.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="197.3" y="270.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="194.3" y="243.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="197.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (135 samples, 3.19%)</title><rect x="195.1" y="323.0" width="37.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="198.1" y="334.0">ru/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (118 samples, 2.79%)</title><rect x="195.1" y="307.0" width="32.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="198.1" y="318.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (118 samples, 2.79%)</title><rect x="195.1" y="291.0" width="32.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="198.1" y="302.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (115 samples, 2.72%)</title><rect x="195.1" y="275.0" width="32.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="198.1" y="286.0">ch..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (7 samples, 0.17%)</title><rect x="195.1" y="259.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="198.1" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (108 samples, 2.55%)</title><rect x="197.1" y="259.0" width="30.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="200.1" y="270.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (108 samples, 2.55%)</title><rect x="197.1" y="243.0" width="30.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="200.1" y="254.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (108 samples, 2.55%)</title><rect x="197.1" y="227.0" width="30.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="200.1" y="238.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (108 samples, 2.55%)</title><rect x="197.1" y="211.0" width="30.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="200.1" y="222.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (108 samples, 2.55%)</title><rect x="197.1" y="195.0" width="30.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="200.1" y="206.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (108 samples, 2.55%)</title><rect x="197.1" y="179.0" width="30.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="200.1" y="190.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (17 samples, 0.40%)</title><rect x="197.1" y="163.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="200.1" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (17 samples, 0.40%)</title><rect x="197.1" y="147.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.1" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (17 samples, 0.40%)</title><rect x="197.1" y="131.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="200.1" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (17 samples, 0.40%)</title><rect x="197.1" y="115.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="200.1" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (5 samples, 0.12%)</title><rect x="197.1" y="99.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="200.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (6 samples, 0.14%)</title><rect x="198.5" y="99.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="201.5" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (6 samples, 0.14%)</title><rect x="198.5" y="83.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="201.5" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="198.5" y="67.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="201.5" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 0.14%)</title><rect x="200.2" y="99.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="203.2" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.14%)</title><rect x="200.2" y="83.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="203.2" y="94.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="200.2" y="67.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="203.2" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.09%)</title><rect x="200.7" y="67.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.7" y="78.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="200.7" y="51.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="203.7" y="62.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (91 samples, 2.15%)</title><rect x="201.8" y="163.0" width="25.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.8" y="174.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (71 samples, 1.68%)</title><rect x="201.8" y="147.0" width="19.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="204.8" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (71 samples, 1.68%)</title><rect x="201.8" y="131.0" width="19.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="204.8" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 0.05%)</title><rect x="201.8" y="115.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="204.8" y="126.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (2 samples, 0.05%)</title><rect x="201.8" y="99.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="204.8" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (2 samples, 0.05%)</title><rect x="201.8" y="83.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="204.8" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="201.8" y="67.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.8" y="78.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="201.8" y="51.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="204.8" y="62.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.05%)</title><rect x="202.4" y="115.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="205.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.07%)</title><rect x="202.9" y="115.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="205.9" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.07%)</title><rect x="202.9" y="99.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.9" y="110.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="202.9" y="83.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="205.9" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (40 samples, 0.95%)</title><rect x="203.8" y="115.0" width="11.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="206.8" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (40 samples, 0.95%)</title><rect x="203.8" y="99.0" width="11.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.8" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (40 samples, 0.95%)</title><rect x="203.8" y="83.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="206.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (40 samples, 0.95%)</title><rect x="203.8" y="67.0" width="11.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="206.8" y="78.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.95%)</title><rect x="203.8" y="51.0" width="11.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="206.8" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (24 samples, 0.57%)</title><rect x="214.9" y="115.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="217.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.57%)</title><rect x="214.9" y="99.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="217.9" y="110.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="214.9" y="83.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="217.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.45%)</title><rect x="216.3" y="83.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="219.3" y="94.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.45%)</title><rect x="216.3" y="67.0" width="5.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="219.3" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (20 samples, 0.47%)</title><rect x="221.6" y="147.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="224.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (20 samples, 0.47%)</title><rect x="221.6" y="131.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="224.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (20 samples, 0.47%)</title><rect x="221.6" y="115.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (20 samples, 0.47%)</title><rect x="221.6" y="99.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="224.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (20 samples, 0.47%)</title><rect x="221.6" y="83.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="224.6" y="94.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.47%)</title><rect x="221.6" y="67.0" width="5.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="224.6" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.07%)</title><rect x="227.2" y="275.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="230.2" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.07%)</title><rect x="228.0" y="307.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.07%)</title><rect x="228.0" y="291.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="231.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.07%)</title><rect x="228.0" y="275.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="231.0" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.07%)</title><rect x="228.0" y="259.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="231.0" y="270.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="228.0" y="243.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="231.0" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.17%)</title><rect x="228.9" y="307.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="231.9" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.17%)</title><rect x="228.9" y="291.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="231.9" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.17%)</title><rect x="228.9" y="275.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="231.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (7 samples, 0.17%)</title><rect x="230.8" y="307.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="233.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="230.8" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="233.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="230.8" y="275.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="233.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.get$Lambda (2 samples, 0.05%)</title><rect x="230.8" y="259.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="233.8" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$60 (2 samples, 0.05%)</title><rect x="230.8" y="243.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="233.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.12%)</title><rect x="231.4" y="291.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="234.4" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.12%)</title><rect x="231.4" y="275.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="234.4" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.12%)</title><rect x="231.4" y="259.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="234.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.19%)</title><rect x="232.8" y="339.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="235.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.19%)</title><rect x="232.8" y="323.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="235.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.19%)</title><rect x="232.8" y="307.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="235.8" y="318.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="232.8" y="291.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="235.8" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="234.2" y="291.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.2" y="302.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="234.2" y="275.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="237.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (25 samples, 0.59%)</title><rect x="235.0" y="371.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.0" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (4 samples, 0.09%)</title><rect x="235.0" y="355.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="238.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (7 samples, 0.17%)</title><rect x="236.1" y="355.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.17%)</title><rect x="236.1" y="339.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="239.1" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.33%)</title><rect x="238.1" y="355.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="241.1" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.33%)</title><rect x="238.1" y="339.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="241.1" y="350.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.12%)</title><rect x="238.1" y="323.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="241.1" y="334.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="239.5" y="323.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="242.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.17%)</title><rect x="240.0" y="323.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="243.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.17%)</title><rect x="240.0" y="307.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="243.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 0.17%)</title><rect x="240.0" y="291.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="243.0" y="302.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="240.0" y="275.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="243.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.02%)</title><rect x="242.0" y="371.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.0" y="382.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="242.0" y="355.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="245.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.26%)</title><rect x="242.3" y="371.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="245.3" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.26%)</title><rect x="242.3" y="355.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="245.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.26%)</title><rect x="242.3" y="339.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="245.3" y="350.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.14%)</title><rect x="242.3" y="323.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="245.3" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.12%)</title><rect x="243.9" y="323.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="246.9" y="334.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="243.9" y="307.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="246.9" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 0.76%)</title><rect x="245.3" y="371.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="248.3" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 0.76%)</title><rect x="245.3" y="355.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="248.3" y="366.0"></text>
</g>
<g>
<title>char[] (13 samples, 0.31%)</title><rect x="245.3" y="339.0" width="3.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="248.3" y="350.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.26%)</title><rect x="249.0" y="339.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="252.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.19%)</title><rect x="252.0" y="339.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="255.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.19%)</title><rect x="252.0" y="323.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.19%)</title><rect x="252.0" y="307.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.0" y="318.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.19%)</title><rect x="252.0" y="291.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="255.0" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=52977] (207 samples, 4.89%)</title><rect x="254.3" y="451.0" width="57.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="257.3" y="462.0">[NIO S..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (207 samples, 4.89%)</title><rect x="254.3" y="435.0" width="57.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="257.3" y="446.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (8 samples, 0.19%)</title><rect x="254.3" y="419.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="257.3" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (8 samples, 0.19%)</title><rect x="254.3" y="403.0" width="2.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="257.3" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (199 samples, 4.70%)</title><rect x="256.5" y="419.0" width="55.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="259.5" y="430.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (199 samples, 4.70%)</title><rect x="256.5" y="403.0" width="55.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="259.5" y="414.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (199 samples, 4.70%)</title><rect x="256.5" y="387.0" width="55.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.5" y="398.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (138 samples, 3.26%)</title><rect x="256.5" y="371.0" width="38.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="259.5" y="382.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (138 samples, 3.26%)</title><rect x="256.5" y="355.0" width="38.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="259.5" y="366.0">one..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (131 samples, 3.10%)</title><rect x="256.5" y="339.0" width="36.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="259.5" y="350.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5 samples, 0.12%)</title><rect x="256.5" y="323.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="259.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.12%)</title><rect x="256.5" y="307.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.5" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.12%)</title><rect x="256.5" y="291.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="259.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="256.5" y="275.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.5" y="286.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="256.5" y="259.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="259.5" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.09%)</title><rect x="256.8" y="259.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.8" y="270.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="256.8" y="243.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="259.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (126 samples, 2.98%)</title><rect x="257.9" y="323.0" width="35.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="260.9" y="334.0">ru/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (100 samples, 2.36%)</title><rect x="257.9" y="307.0" width="27.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.9" y="318.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (100 samples, 2.36%)</title><rect x="257.9" y="291.0" width="27.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.9" y="302.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (98 samples, 2.32%)</title><rect x="257.9" y="275.0" width="27.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="260.9" y="286.0">c..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (8 samples, 0.19%)</title><rect x="257.9" y="259.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="260.9" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (90 samples, 2.13%)</title><rect x="260.1" y="259.0" width="25.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="263.1" y="270.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (90 samples, 2.13%)</title><rect x="260.1" y="243.0" width="25.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="263.1" y="254.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (90 samples, 2.13%)</title><rect x="260.1" y="227.0" width="25.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="263.1" y="238.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (90 samples, 2.13%)</title><rect x="260.1" y="211.0" width="25.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="263.1" y="222.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (90 samples, 2.13%)</title><rect x="260.1" y="195.0" width="25.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="263.1" y="206.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (90 samples, 2.13%)</title><rect x="260.1" y="179.0" width="25.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="263.1" y="190.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (13 samples, 0.31%)</title><rect x="260.1" y="163.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="263.1" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (13 samples, 0.31%)</title><rect x="260.1" y="147.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="263.1" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (13 samples, 0.31%)</title><rect x="260.1" y="131.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="263.1" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (13 samples, 0.31%)</title><rect x="260.1" y="115.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="263.1" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.02%)</title><rect x="260.1" y="99.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="263.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (7 samples, 0.17%)</title><rect x="260.4" y="99.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="263.4" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (7 samples, 0.17%)</title><rect x="260.4" y="83.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="263.4" y="94.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="260.4" y="67.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="263.4" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5 samples, 0.12%)</title><rect x="262.3" y="99.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="265.3" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="262.3" y="83.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="265.3" y="94.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="262.3" y="67.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="265.3" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="263.2" y="67.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="266.2" y="78.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="263.2" y="51.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="266.2" y="62.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (77 samples, 1.82%)</title><rect x="263.7" y="163.0" width="21.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="266.7" y="174.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (70 samples, 1.65%)</title><rect x="263.7" y="147.0" width="19.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="266.7" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (70 samples, 1.65%)</title><rect x="263.7" y="131.0" width="19.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="266.7" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 0.05%)</title><rect x="263.7" y="115.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="266.7" y="126.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (2 samples, 0.05%)</title><rect x="263.7" y="99.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="266.7" y="110.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (1 samples, 0.02%)</title><rect x="263.7" y="83.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="266.7" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="264.0" y="83.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="267.0" y="94.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="264.0" y="67.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="267.0" y="78.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="264.0" y="51.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="267.0" y="62.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.02%)</title><rect x="264.3" y="115.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="267.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (5 samples, 0.12%)</title><rect x="264.6" y="115.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="267.6" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (5 samples, 0.12%)</title><rect x="264.6" y="99.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="267.6" y="110.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="264.6" y="83.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="267.6" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (43 samples, 1.02%)</title><rect x="266.0" y="115.0" width="12.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="269.0" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (43 samples, 1.02%)</title><rect x="266.0" y="99.0" width="12.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="269.0" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (43 samples, 1.02%)</title><rect x="266.0" y="83.0" width="12.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="269.0" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (43 samples, 1.02%)</title><rect x="266.0" y="67.0" width="12.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="269.0" y="78.0"></text>
</g>
<g>
<title>byte[] (43 samples, 1.02%)</title><rect x="266.0" y="51.0" width="12.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="269.0" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (19 samples, 0.45%)</title><rect x="278.0" y="115.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="281.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.45%)</title><rect x="278.0" y="99.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="281.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="278.0" y="83.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="281.0" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.40%)</title><rect x="278.5" y="83.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.5" y="94.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.40%)</title><rect x="278.5" y="67.0" width="4.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="281.5" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (7 samples, 0.17%)</title><rect x="283.3" y="147.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="286.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (7 samples, 0.17%)</title><rect x="283.3" y="131.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="286.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (7 samples, 0.17%)</title><rect x="283.3" y="115.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="286.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (7 samples, 0.17%)</title><rect x="283.3" y="99.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="286.3" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.17%)</title><rect x="283.3" y="83.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.3" y="94.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="283.3" y="67.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="286.3" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="285.2" y="275.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="288.2" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.24%)</title><rect x="285.8" y="307.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.24%)</title><rect x="285.8" y="291.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="288.8" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (10 samples, 0.24%)</title><rect x="285.8" y="275.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="288.8" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.24%)</title><rect x="285.8" y="259.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="288.8" y="270.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.24%)</title><rect x="285.8" y="243.0" width="2.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="288.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.26%)</title><rect x="288.5" y="307.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="291.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.26%)</title><rect x="288.5" y="291.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.5" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.26%)</title><rect x="288.5" y="275.0" width="3.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="291.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (5 samples, 0.12%)</title><rect x="291.6" y="307.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="294.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="291.6" y="291.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="294.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="291.6" y="275.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="294.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.get$Lambda (3 samples, 0.07%)</title><rect x="291.6" y="259.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="294.6" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$60 (3 samples, 0.07%)</title><rect x="291.6" y="243.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="294.6" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="292.5" y="291.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="295.5" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="292.5" y="275.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.5" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.05%)</title><rect x="292.5" y="259.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="295.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (7 samples, 0.17%)</title><rect x="293.0" y="339.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="296.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.17%)</title><rect x="293.0" y="323.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="296.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.17%)</title><rect x="293.0" y="307.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="296.0" y="318.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="293.0" y="291.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="296.0" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="294.4" y="291.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="297.4" y="302.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="294.4" y="275.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="297.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (28 samples, 0.66%)</title><rect x="295.0" y="371.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="298.0" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (4 samples, 0.09%)</title><rect x="295.0" y="355.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="298.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (12 samples, 0.28%)</title><rect x="296.1" y="355.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="299.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (12 samples, 0.28%)</title><rect x="296.1" y="339.0" width="3.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="299.1" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.28%)</title><rect x="299.4" y="355.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="302.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.28%)</title><rect x="299.4" y="339.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="302.4" y="350.0"></text>
</g>
<g>
<title>char[] (8 samples, 0.19%)</title><rect x="299.4" y="323.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="302.4" y="334.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="301.7" y="323.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="304.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="302.5" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="305.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="302.5" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="305.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.02%)</title><rect x="302.5" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="305.5" y="302.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="302.5" y="275.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="305.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.02%)</title><rect x="302.8" y="371.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="305.8" y="382.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="302.8" y="355.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="305.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.09%)</title><rect x="303.0" y="371.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="306.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.09%)</title><rect x="303.0" y="355.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.09%)</title><rect x="303.0" y="339.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="306.0" y="350.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="303.0" y="323.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="306.0" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="303.3" y="323.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="306.3" y="334.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="303.3" y="307.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="306.3" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 0.66%)</title><rect x="304.2" y="371.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="307.2" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 0.66%)</title><rect x="304.2" y="355.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="307.2" y="366.0"></text>
</g>
<g>
<title>char[] (11 samples, 0.26%)</title><rect x="304.2" y="339.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="307.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="307.2" y="339.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="310.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.28%)</title><rect x="308.6" y="339.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="311.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.28%)</title><rect x="308.6" y="323.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="311.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (12 samples, 0.28%)</title><rect x="308.6" y="307.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="311.6" y="318.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.28%)</title><rect x="308.6" y="291.0" width="3.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="311.6" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=52978] (194 samples, 4.58%)</title><rect x="312.0" y="451.0" width="54.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="315.0" y="462.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (194 samples, 4.58%)</title><rect x="312.0" y="435.0" width="54.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="315.0" y="446.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.process (194 samples, 4.58%)</title><rect x="312.0" y="419.0" width="54.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="315.0" y="430.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (194 samples, 4.58%)</title><rect x="312.0" y="403.0" width="54.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="315.0" y="414.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (194 samples, 4.58%)</title><rect x="312.0" y="387.0" width="54.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="315.0" y="398.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (126 samples, 2.98%)</title><rect x="312.0" y="371.0" width="35.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="315.0" y="382.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (126 samples, 2.98%)</title><rect x="312.0" y="355.0" width="35.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="315.0" y="366.0">one..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (121 samples, 2.86%)</title><rect x="312.0" y="339.0" width="33.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="315.0" y="350.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.05%)</title><rect x="312.0" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="315.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.05%)</title><rect x="312.0" y="307.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="315.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="312.0" y="291.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="312.0" y="275.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="315.0" y="286.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="312.0" y="259.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="315.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (119 samples, 2.81%)</title><rect x="312.5" y="323.0" width="33.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="315.5" y="334.0">ru..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (98 samples, 2.32%)</title><rect x="312.5" y="307.0" width="27.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="315.5" y="318.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (98 samples, 2.32%)</title><rect x="312.5" y="291.0" width="27.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="315.5" y="302.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (97 samples, 2.29%)</title><rect x="312.5" y="275.0" width="27.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="315.5" y="286.0">c..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (7 samples, 0.17%)</title><rect x="312.5" y="259.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="315.5" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (90 samples, 2.13%)</title><rect x="314.5" y="259.0" width="25.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="317.5" y="270.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (90 samples, 2.13%)</title><rect x="314.5" y="243.0" width="25.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="317.5" y="254.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (90 samples, 2.13%)</title><rect x="314.5" y="227.0" width="25.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="317.5" y="238.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (90 samples, 2.13%)</title><rect x="314.5" y="211.0" width="25.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="317.5" y="222.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (90 samples, 2.13%)</title><rect x="314.5" y="195.0" width="25.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.5" y="206.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (90 samples, 2.13%)</title><rect x="314.5" y="179.0" width="25.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="317.5" y="190.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (27 samples, 0.64%)</title><rect x="314.5" y="163.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="317.5" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (27 samples, 0.64%)</title><rect x="314.5" y="147.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="317.5" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (27 samples, 0.64%)</title><rect x="314.5" y="131.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="317.5" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (27 samples, 0.64%)</title><rect x="314.5" y="115.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="317.5" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (3 samples, 0.07%)</title><rect x="314.5" y="99.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="317.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (15 samples, 0.35%)</title><rect x="315.3" y="99.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="318.3" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (15 samples, 0.35%)</title><rect x="315.3" y="83.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="318.3" y="94.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.35%)</title><rect x="315.3" y="67.0" width="4.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="318.3" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (9 samples, 0.21%)</title><rect x="319.5" y="99.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="322.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.21%)</title><rect x="319.5" y="83.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="322.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.14%)</title><rect x="319.5" y="67.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="322.5" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="321.2" y="67.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="324.2" y="78.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="321.2" y="51.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="324.2" y="62.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (63 samples, 1.49%)</title><rect x="322.0" y="163.0" width="17.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="325.0" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (53 samples, 1.25%)</title><rect x="322.0" y="147.0" width="14.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="325.0" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (53 samples, 1.25%)</title><rect x="322.0" y="131.0" width="14.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="325.0" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 0.05%)</title><rect x="322.0" y="115.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.0" y="126.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (2 samples, 0.05%)</title><rect x="322.0" y="99.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="325.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="322.0" y="83.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="325.0" y="94.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.05%)</title><rect x="322.0" y="67.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.0" y="78.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="322.0" y="51.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="325.0" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.05%)</title><rect x="322.6" y="115.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.6" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.05%)</title><rect x="322.6" y="99.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="325.6" y="110.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="322.6" y="83.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="325.6" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (35 samples, 0.83%)</title><rect x="323.1" y="115.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.1" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (35 samples, 0.83%)</title><rect x="323.1" y="99.0" width="9.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="326.1" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (35 samples, 0.83%)</title><rect x="323.1" y="83.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="326.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (35 samples, 0.83%)</title><rect x="323.1" y="67.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="326.1" y="78.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.83%)</title><rect x="323.1" y="51.0" width="9.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="326.1" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (14 samples, 0.33%)</title><rect x="332.9" y="115.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.33%)</title><rect x="332.9" y="99.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="335.9" y="110.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.09%)</title><rect x="332.9" y="83.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="335.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.24%)</title><rect x="334.0" y="83.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="337.0" y="94.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.24%)</title><rect x="334.0" y="67.0" width="2.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="337.0" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (10 samples, 0.24%)</title><rect x="336.8" y="147.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="339.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.24%)</title><rect x="336.8" y="131.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="339.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.24%)</title><rect x="336.8" y="115.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="339.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (10 samples, 0.24%)</title><rect x="336.8" y="99.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="339.8" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.24%)</title><rect x="336.8" y="83.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="339.8" y="94.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.24%)</title><rect x="336.8" y="67.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="339.8" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="339.6" y="275.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="342.6" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.07%)</title><rect x="339.9" y="307.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.07%)</title><rect x="339.9" y="291.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="342.9" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.07%)</title><rect x="339.9" y="275.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="342.9" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.07%)</title><rect x="339.9" y="259.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="342.9" y="270.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="339.9" y="243.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="342.9" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.24%)</title><rect x="340.7" y="307.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.7" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.24%)</title><rect x="340.7" y="291.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="343.7" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.24%)</title><rect x="340.7" y="275.0" width="2.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="343.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (8 samples, 0.19%)</title><rect x="343.5" y="307.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="346.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="343.5" y="291.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="346.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="343.5" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="346.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.get$Lambda (1 samples, 0.02%)</title><rect x="343.5" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="346.5" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$60 (1 samples, 0.02%)</title><rect x="343.5" y="243.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="346.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.17%)</title><rect x="343.8" y="291.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="346.8" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.17%)</title><rect x="343.8" y="275.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="346.8" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.17%)</title><rect x="343.8" y="259.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="346.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.12%)</title><rect x="345.7" y="339.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="348.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.12%)</title><rect x="345.7" y="323.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="348.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="345.7" y="307.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="348.7" y="318.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="345.7" y="291.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="348.7" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="346.3" y="291.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="349.3" y="302.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="346.3" y="275.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="349.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (41 samples, 0.97%)</title><rect x="347.1" y="371.0" width="11.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="350.1" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (5 samples, 0.12%)</title><rect x="347.1" y="355.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="350.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (14 samples, 0.33%)</title><rect x="348.5" y="355.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="351.5" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (14 samples, 0.33%)</title><rect x="348.5" y="339.0" width="3.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="351.5" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.52%)</title><rect x="352.4" y="355.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="355.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.52%)</title><rect x="352.4" y="339.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="355.4" y="350.0"></text>
</g>
<g>
<title>char[] (11 samples, 0.26%)</title><rect x="352.4" y="323.0" width="3.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="355.4" y="334.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.09%)</title><rect x="355.5" y="323.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="358.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.17%)</title><rect x="356.6" y="323.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="359.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.17%)</title><rect x="356.6" y="307.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="359.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 0.17%)</title><rect x="356.6" y="291.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="359.6" y="302.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="356.6" y="275.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="359.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.07%)</title><rect x="358.5" y="371.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="361.5" y="382.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="358.5" y="355.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="361.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.12%)</title><rect x="359.4" y="371.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="362.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.12%)</title><rect x="359.4" y="355.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="362.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="359.4" y="339.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="362.4" y="350.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.09%)</title><rect x="359.4" y="323.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="362.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="360.5" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="363.5" y="334.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="360.5" y="307.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="363.5" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.45%)</title><rect x="360.8" y="371.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="363.8" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.45%)</title><rect x="360.8" y="355.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="363.8" y="366.0"></text>
</g>
<g>
<title>char[] (11 samples, 0.26%)</title><rect x="360.8" y="339.0" width="3.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="363.8" y="350.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.09%)</title><rect x="363.8" y="339.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="366.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.09%)</title><rect x="364.9" y="339.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="367.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.09%)</title><rect x="364.9" y="323.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.09%)</title><rect x="364.9" y="307.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="367.9" y="318.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="364.9" y="291.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="367.9" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=52979] (239 samples, 5.65%)</title><rect x="366.1" y="451.0" width="66.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="369.1" y="462.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (239 samples, 5.65%)</title><rect x="366.1" y="435.0" width="66.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="369.1" y="446.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 0.17%)</title><rect x="366.1" y="419.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="369.1" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (7 samples, 0.17%)</title><rect x="366.1" y="403.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="369.1" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (232 samples, 5.48%)</title><rect x="368.0" y="419.0" width="64.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="371.0" y="430.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (232 samples, 5.48%)</title><rect x="368.0" y="403.0" width="64.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="371.0" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (232 samples, 5.48%)</title><rect x="368.0" y="387.0" width="64.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="371.0" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (150 samples, 3.54%)</title><rect x="368.0" y="371.0" width="41.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="371.0" y="382.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (150 samples, 3.54%)</title><rect x="368.0" y="355.0" width="41.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="371.0" y="366.0">one..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (140 samples, 3.31%)</title><rect x="368.0" y="339.0" width="39.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="371.0" y="350.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (6 samples, 0.14%)</title><rect x="368.0" y="323.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="371.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.14%)</title><rect x="368.0" y="307.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="371.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.14%)</title><rect x="368.0" y="291.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="371.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.14%)</title><rect x="368.0" y="275.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="371.0" y="286.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="368.0" y="259.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="371.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.12%)</title><rect x="368.3" y="259.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="371.3" y="270.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.12%)</title><rect x="368.3" y="243.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="371.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (134 samples, 3.17%)</title><rect x="369.7" y="323.0" width="37.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="372.7" y="334.0">ru/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (114 samples, 2.69%)</title><rect x="369.7" y="307.0" width="31.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="372.7" y="318.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (114 samples, 2.69%)</title><rect x="369.7" y="291.0" width="31.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="372.7" y="302.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (113 samples, 2.67%)</title><rect x="369.7" y="275.0" width="31.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="372.7" y="286.0">ch..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (9 samples, 0.21%)</title><rect x="369.7" y="259.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="372.7" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (104 samples, 2.46%)</title><rect x="372.2" y="259.0" width="29.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="375.2" y="270.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (104 samples, 2.46%)</title><rect x="372.2" y="243.0" width="29.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="375.2" y="254.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (104 samples, 2.46%)</title><rect x="372.2" y="227.0" width="29.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="375.2" y="238.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (104 samples, 2.46%)</title><rect x="372.2" y="211.0" width="29.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="375.2" y="222.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (104 samples, 2.46%)</title><rect x="372.2" y="195.0" width="29.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="375.2" y="206.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (104 samples, 2.46%)</title><rect x="372.2" y="179.0" width="29.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="375.2" y="190.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (18 samples, 0.43%)</title><rect x="372.2" y="163.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="375.2" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (18 samples, 0.43%)</title><rect x="372.2" y="147.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="375.2" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (18 samples, 0.43%)</title><rect x="372.2" y="131.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.2" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (18 samples, 0.43%)</title><rect x="372.2" y="115.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.2" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.02%)</title><rect x="372.2" y="99.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="375.2" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (9 samples, 0.21%)</title><rect x="372.5" y="99.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.5" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (9 samples, 0.21%)</title><rect x="372.5" y="83.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.5" y="94.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.21%)</title><rect x="372.5" y="67.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="375.5" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.19%)</title><rect x="375.0" y="99.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="378.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.19%)</title><rect x="375.0" y="83.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="378.0" y="94.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.09%)</title><rect x="375.0" y="67.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="378.0" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.09%)</title><rect x="376.1" y="67.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="379.1" y="78.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="376.1" y="51.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="379.1" y="62.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (86 samples, 2.03%)</title><rect x="377.2" y="163.0" width="24.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.2" y="174.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (75 samples, 1.77%)</title><rect x="377.2" y="147.0" width="20.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="380.2" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (75 samples, 1.77%)</title><rect x="377.2" y="131.0" width="20.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="380.2" y="142.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (4 samples, 0.09%)</title><rect x="377.2" y="115.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="380.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.05%)</title><rect x="378.3" y="115.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="381.3" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.05%)</title><rect x="378.3" y="99.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="381.3" y="110.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="378.3" y="83.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="381.3" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (38 samples, 0.90%)</title><rect x="378.9" y="115.0" width="10.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="381.9" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (38 samples, 0.90%)</title><rect x="378.9" y="99.0" width="10.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="381.9" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (38 samples, 0.90%)</title><rect x="378.9" y="83.0" width="10.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="381.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (38 samples, 0.90%)</title><rect x="378.9" y="67.0" width="10.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="381.9" y="78.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.90%)</title><rect x="378.9" y="51.0" width="10.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="381.9" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (31 samples, 0.73%)</title><rect x="389.5" y="115.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="392.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.73%)</title><rect x="389.5" y="99.0" width="8.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="392.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.19%)</title><rect x="389.5" y="83.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="392.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.54%)</title><rect x="391.7" y="83.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="394.7" y="94.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.54%)</title><rect x="391.7" y="67.0" width="6.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="394.7" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (11 samples, 0.26%)</title><rect x="398.1" y="147.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="401.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (11 samples, 0.26%)</title><rect x="398.1" y="131.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="401.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (11 samples, 0.26%)</title><rect x="398.1" y="115.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="401.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (11 samples, 0.26%)</title><rect x="398.1" y="99.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="401.1" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.26%)</title><rect x="398.1" y="83.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="401.1" y="94.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.26%)</title><rect x="398.1" y="67.0" width="3.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="401.1" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="401.2" y="275.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="404.2" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (7 samples, 0.17%)</title><rect x="401.5" y="307.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="404.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (7 samples, 0.17%)</title><rect x="401.5" y="291.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="404.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (7 samples, 0.17%)</title><rect x="401.5" y="275.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="404.5" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.17%)</title><rect x="401.5" y="259.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="404.5" y="270.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="401.5" y="243.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="404.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.09%)</title><rect x="403.4" y="307.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="406.4" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.09%)</title><rect x="403.4" y="291.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="406.4" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.09%)</title><rect x="403.4" y="275.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="406.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (9 samples, 0.21%)</title><rect x="404.5" y="307.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.09%)</title><rect x="404.5" y="291.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="407.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.09%)</title><rect x="404.5" y="275.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="407.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.get$Lambda (4 samples, 0.09%)</title><rect x="404.5" y="259.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="407.5" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$60 (4 samples, 0.09%)</title><rect x="404.5" y="243.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="407.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.12%)</title><rect x="405.7" y="291.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="408.7" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.12%)</title><rect x="405.7" y="275.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="408.7" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.12%)</title><rect x="405.7" y="259.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="408.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (10 samples, 0.24%)</title><rect x="407.1" y="339.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="410.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.24%)</title><rect x="407.1" y="323.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="410.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.24%)</title><rect x="407.1" y="307.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="410.1" y="318.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.14%)</title><rect x="407.1" y="291.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="410.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.09%)</title><rect x="408.7" y="291.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="411.7" y="302.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="408.7" y="275.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="411.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (37 samples, 0.87%)</title><rect x="409.8" y="371.0" width="10.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="412.8" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (5 samples, 0.12%)</title><rect x="409.8" y="355.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="412.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 0.26%)</title><rect x="411.2" y="355.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="414.2" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.26%)</title><rect x="411.2" y="339.0" width="3.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="414.2" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.50%)</title><rect x="414.3" y="355.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="417.3" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.50%)</title><rect x="414.3" y="339.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.3" y="350.0"></text>
</g>
<g>
<title>char[] (8 samples, 0.19%)</title><rect x="414.3" y="323.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="417.3" y="334.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="416.5" y="323.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="419.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.19%)</title><rect x="417.9" y="323.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="420.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.19%)</title><rect x="417.9" y="307.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="420.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.19%)</title><rect x="417.9" y="291.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="420.9" y="302.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.19%)</title><rect x="417.9" y="275.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="420.9" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.09%)</title><rect x="420.2" y="371.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="423.2" y="382.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="420.2" y="355.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="423.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.17%)</title><rect x="421.3" y="371.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="424.3" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.17%)</title><rect x="421.3" y="355.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.17%)</title><rect x="421.3" y="339.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="424.3" y="350.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="421.3" y="323.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="424.3" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="422.7" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.7" y="334.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="422.7" y="307.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="425.7" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (34 samples, 0.80%)</title><rect x="423.2" y="371.0" width="9.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.2" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (34 samples, 0.80%)</title><rect x="423.2" y="355.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="426.2" y="366.0"></text>
</g>
<g>
<title>char[] (18 samples, 0.43%)</title><rect x="423.2" y="339.0" width="5.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="426.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="428.2" y="339.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="431.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.31%)</title><rect x="429.1" y="339.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.31%)</title><rect x="429.1" y="323.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="432.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (13 samples, 0.31%)</title><rect x="429.1" y="307.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.1" y="318.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.31%)</title><rect x="429.1" y="291.0" width="3.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="432.1" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=52980] (213 samples, 5.03%)</title><rect x="432.7" y="451.0" width="59.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="435.7" y="462.0">[NIO S..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (213 samples, 5.03%)</title><rect x="432.7" y="435.0" width="59.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="435.7" y="446.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 0.17%)</title><rect x="432.7" y="419.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="435.7" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (7 samples, 0.17%)</title><rect x="432.7" y="403.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="435.7" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (206 samples, 4.87%)</title><rect x="434.7" y="419.0" width="57.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="437.7" y="430.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (206 samples, 4.87%)</title><rect x="434.7" y="403.0" width="57.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="437.7" y="414.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (206 samples, 4.87%)</title><rect x="434.7" y="387.0" width="57.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="437.7" y="398.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (151 samples, 3.57%)</title><rect x="434.7" y="371.0" width="42.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="437.7" y="382.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (151 samples, 3.57%)</title><rect x="434.7" y="355.0" width="42.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="437.7" y="366.0">one/..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (143 samples, 3.38%)</title><rect x="434.7" y="339.0" width="39.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="437.7" y="350.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (4 samples, 0.09%)</title><rect x="434.7" y="323.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="437.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.09%)</title><rect x="434.7" y="307.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="437.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.09%)</title><rect x="434.7" y="291.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="437.7" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.09%)</title><rect x="434.7" y="275.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="437.7" y="286.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="434.7" y="259.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="437.7" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="435.2" y="259.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="438.2" y="270.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="435.2" y="243.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="438.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (139 samples, 3.28%)</title><rect x="435.8" y="323.0" width="38.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="438.8" y="334.0">ru/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (121 samples, 2.86%)</title><rect x="435.8" y="307.0" width="33.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="438.8" y="318.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (121 samples, 2.86%)</title><rect x="435.8" y="291.0" width="33.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="438.8" y="302.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (117 samples, 2.76%)</title><rect x="435.8" y="275.0" width="32.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="438.8" y="286.0">ch..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (11 samples, 0.26%)</title><rect x="435.8" y="259.0" width="3.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="438.8" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (106 samples, 2.50%)</title><rect x="438.8" y="259.0" width="29.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.8" y="270.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (106 samples, 2.50%)</title><rect x="438.8" y="243.0" width="29.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="441.8" y="254.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (106 samples, 2.50%)</title><rect x="438.8" y="227.0" width="29.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="441.8" y="238.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (106 samples, 2.50%)</title><rect x="438.8" y="211.0" width="29.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="441.8" y="222.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (106 samples, 2.50%)</title><rect x="438.8" y="195.0" width="29.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="441.8" y="206.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (106 samples, 2.50%)</title><rect x="438.8" y="179.0" width="29.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="441.8" y="190.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (26 samples, 0.61%)</title><rect x="438.8" y="163.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="441.8" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (26 samples, 0.61%)</title><rect x="438.8" y="147.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="441.8" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (26 samples, 0.61%)</title><rect x="438.8" y="131.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="441.8" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (26 samples, 0.61%)</title><rect x="438.8" y="115.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="441.8" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (4 samples, 0.09%)</title><rect x="438.8" y="99.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="441.8" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (14 samples, 0.33%)</title><rect x="440.0" y="99.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="443.0" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (14 samples, 0.33%)</title><rect x="440.0" y="83.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="443.0" y="94.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.33%)</title><rect x="440.0" y="67.0" width="3.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="443.0" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.19%)</title><rect x="443.9" y="99.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="446.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.19%)</title><rect x="443.9" y="83.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="446.9" y="94.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="443.9" y="67.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="446.9" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.14%)</title><rect x="444.4" y="67.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="447.4" y="78.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="444.4" y="51.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="447.4" y="62.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (80 samples, 1.89%)</title><rect x="446.1" y="163.0" width="22.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="449.1" y="174.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (62 samples, 1.47%)</title><rect x="446.1" y="147.0" width="17.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="449.1" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (62 samples, 1.47%)</title><rect x="446.1" y="131.0" width="17.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="449.1" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 0.05%)</title><rect x="446.1" y="115.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="449.1" y="126.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (2 samples, 0.05%)</title><rect x="446.1" y="99.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="449.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="446.1" y="83.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="449.1" y="94.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.05%)</title><rect x="446.1" y="67.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="449.1" y="78.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="446.1" y="51.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="449.1" y="62.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.02%)</title><rect x="446.6" y="115.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="449.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4 samples, 0.09%)</title><rect x="446.9" y="115.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="449.9" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.09%)</title><rect x="446.9" y="99.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="449.9" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="446.9" y="83.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="449.9" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (43 samples, 1.02%)</title><rect x="448.0" y="115.0" width="12.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="451.0" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (43 samples, 1.02%)</title><rect x="448.0" y="99.0" width="12.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="451.0" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (43 samples, 1.02%)</title><rect x="448.0" y="83.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="451.0" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (43 samples, 1.02%)</title><rect x="448.0" y="67.0" width="12.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="451.0" y="78.0"></text>
</g>
<g>
<title>byte[] (43 samples, 1.02%)</title><rect x="448.0" y="51.0" width="12.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="451.0" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (12 samples, 0.28%)</title><rect x="460.0" y="115.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.28%)</title><rect x="460.0" y="99.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="460.0" y="83.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="463.0" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.24%)</title><rect x="460.6" y="83.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.6" y="94.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.24%)</title><rect x="460.6" y="67.0" width="2.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="463.6" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (18 samples, 0.43%)</title><rect x="463.4" y="147.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="466.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (18 samples, 0.43%)</title><rect x="463.4" y="131.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (18 samples, 0.43%)</title><rect x="463.4" y="115.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (18 samples, 0.43%)</title><rect x="463.4" y="99.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.4" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.43%)</title><rect x="463.4" y="83.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.4" y="94.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.43%)</title><rect x="463.4" y="67.0" width="5.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="466.4" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.09%)</title><rect x="468.4" y="275.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="471.4" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (7 samples, 0.17%)</title><rect x="469.5" y="307.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="472.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (7 samples, 0.17%)</title><rect x="469.5" y="291.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (7 samples, 0.17%)</title><rect x="469.5" y="275.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="472.5" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.17%)</title><rect x="469.5" y="259.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.5" y="270.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.17%)</title><rect x="469.5" y="243.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="472.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.14%)</title><rect x="471.5" y="307.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.14%)</title><rect x="471.5" y="291.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="474.5" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.14%)</title><rect x="471.5" y="275.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="474.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (5 samples, 0.12%)</title><rect x="473.1" y="307.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="473.1" y="291.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="476.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="473.1" y="275.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.get$Lambda (2 samples, 0.05%)</title><rect x="473.1" y="259.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="476.1" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$60 (2 samples, 0.05%)</title><rect x="473.1" y="243.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="476.1" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.07%)</title><rect x="473.7" y="291.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="476.7" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.07%)</title><rect x="473.7" y="275.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="476.7" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.07%)</title><rect x="473.7" y="259.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="476.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.19%)</title><rect x="474.5" y="339.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="477.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.19%)</title><rect x="474.5" y="323.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="477.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.19%)</title><rect x="474.5" y="307.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.5" y="318.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="474.5" y="291.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="477.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.14%)</title><rect x="475.1" y="291.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="478.1" y="302.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="475.1" y="275.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="478.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (22 samples, 0.52%)</title><rect x="476.8" y="371.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.8" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (1 samples, 0.02%)</title><rect x="476.8" y="355.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="479.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (8 samples, 0.19%)</title><rect x="477.0" y="355.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="480.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.19%)</title><rect x="477.0" y="339.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="480.0" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.31%)</title><rect x="479.3" y="355.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.3" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.31%)</title><rect x="479.3" y="339.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.3" y="350.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.12%)</title><rect x="479.3" y="323.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="482.3" y="334.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.09%)</title><rect x="480.7" y="323.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="483.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.09%)</title><rect x="481.8" y="323.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="484.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.09%)</title><rect x="481.8" y="307.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.09%)</title><rect x="481.8" y="291.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.8" y="302.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="481.8" y="275.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="484.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.02%)</title><rect x="482.9" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.9" y="382.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="482.9" y="355.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="485.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.07%)</title><rect x="483.2" y="371.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="486.2" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.07%)</title><rect x="483.2" y="355.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="483.2" y="339.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.2" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.07%)</title><rect x="483.2" y="323.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="486.2" y="334.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="483.2" y="307.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="486.2" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (29 samples, 0.69%)</title><rect x="484.0" y="371.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="487.0" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (29 samples, 0.69%)</title><rect x="484.0" y="355.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.0" y="366.0"></text>
</g>
<g>
<title>char[] (11 samples, 0.26%)</title><rect x="484.0" y="339.0" width="3.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="487.0" y="350.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.17%)</title><rect x="487.1" y="339.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="490.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.26%)</title><rect x="489.0" y="339.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="492.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.26%)</title><rect x="489.0" y="323.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="492.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (11 samples, 0.26%)</title><rect x="489.0" y="307.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="492.0" y="318.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.26%)</title><rect x="489.0" y="291.0" width="3.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="492.0" y="302.0"></text>
</g>
<g>
<title>[pool-1-thread-4 tid=53437] (690 samples, 16.30%)</title><rect x="492.1" y="451.0" width="192.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="495.1" y="462.0">[pool-1-thread-4 tid=53437]</text>
</g>
<g>
<title>java/lang/Thread.run (690 samples, 16.30%)</title><rect x="492.1" y="435.0" width="192.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="495.1" y="446.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (690 samples, 16.30%)</title><rect x="492.1" y="419.0" width="192.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="495.1" y="430.0">java/util/concurrent/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (690 samples, 16.30%)</title><rect x="492.1" y="403.0" width="192.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="495.1" y="414.0">java/util/concurrent/Thre..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$64/638581253.run (690 samples, 16.30%)</title><rect x="492.1" y="387.0" width="192.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="495.1" y="398.0">ru/mail/polis/dao/impl/DA..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$flush$5 (690 samples, 16.30%)</title><rect x="492.1" y="371.0" width="192.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="495.1" y="382.0">ru/mail/polis/dao/impl/DA..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.02%)</title><rect x="492.1" y="355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="495.1" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.02%)</title><rect x="492.1" y="339.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="495.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.serialize (689 samples, 16.28%)</title><rect x="492.4" y="355.0" width="192.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="495.4" y="366.0">ru/mail/polis/dao/impl/DA..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.write (689 samples, 16.28%)</title><rect x="492.4" y="339.0" width="192.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="495.4" y="350.0">ru/mail/polis/dao/impl/ta..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (190 samples, 4.49%)</title><rect x="492.4" y="323.0" width="52.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="495.4" y="334.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (190 samples, 4.49%)</title><rect x="492.4" y="307.0" width="52.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="495.4" y="318.0">com/g..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$65/714876873.apply (190 samples, 4.49%)</title><rect x="492.4" y="291.0" width="52.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="495.4" y="302.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (190 samples, 4.49%)</title><rect x="492.4" y="275.0" width="52.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="495.4" y="286.0">ru/ma..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (150 samples, 3.54%)</title><rect x="492.4" y="259.0" width="41.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="495.4" y="270.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (150 samples, 3.54%)</title><rect x="492.4" y="243.0" width="41.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="495.4" y="254.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (150 samples, 3.54%)</title><rect x="492.4" y="227.0" width="41.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="495.4" y="238.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (37 samples, 0.87%)</title><rect x="534.2" y="259.0" width="10.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="537.2" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.87%)</title><rect x="534.2" y="243.0" width="10.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="537.2" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (3 samples, 0.07%)</title><rect x="544.5" y="259.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="547.5" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.05%)</title><rect x="545.3" y="323.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="548.3" y="334.0"></text>
</g>
<g>
<title>java.lang.Integer (2 samples, 0.05%)</title><rect x="545.3" y="307.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="548.3" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (139 samples, 3.28%)</title><rect x="545.9" y="323.0" width="38.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="548.9" y="334.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (139 samples, 3.28%)</title><rect x="545.9" y="307.0" width="38.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="548.9" y="318.0">jav..</text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.17%)</title><rect x="584.7" y="323.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="587.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.17%)</title><rect x="584.7" y="307.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="587.7" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.17%)</title><rect x="584.7" y="291.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="587.7" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.17%)</title><rect x="584.7" y="275.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="587.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.17%)</title><rect x="584.7" y="259.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="587.7" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.17%)</title><rect x="584.7" y="243.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="587.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (37 samples, 0.87%)</title><rect x="586.6" y="323.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="589.6" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (37 samples, 0.87%)</title><rect x="586.6" y="307.0" width="10.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="589.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (37 samples, 0.87%)</title><rect x="586.6" y="291.0" width="10.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="589.6" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.87%)</title><rect x="586.6" y="275.0" width="10.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="589.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.fromInt (254 samples, 6.00%)</title><rect x="596.9" y="323.0" width="70.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="599.9" y="334.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (254 samples, 6.00%)</title><rect x="596.9" y="307.0" width="70.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="599.9" y="318.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (134 samples, 3.17%)</title><rect x="596.9" y="291.0" width="37.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="599.9" y="302.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (120 samples, 2.84%)</title><rect x="634.3" y="291.0" width="33.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="637.3" y="302.0">ja..</text>
</g>
<g>
<title>byte[] (120 samples, 2.84%)</title><rect x="634.3" y="275.0" width="33.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="637.3" y="286.0">by..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.fromLong (60 samples, 1.42%)</title><rect x="667.8" y="323.0" width="16.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (60 samples, 1.42%)</title><rect x="667.8" y="307.0" width="16.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="670.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.50%)</title><rect x="667.8" y="291.0" width="5.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="670.8" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (39 samples, 0.92%)</title><rect x="673.6" y="291.0" width="10.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.6" y="302.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.92%)</title><rect x="673.6" y="275.0" width="10.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="676.6" y="286.0"></text>
</g>
<g>
<title>[pool-3-thread-1 tid=53019] (227 samples, 5.36%)</title><rect x="684.5" y="451.0" width="63.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="687.5" y="462.0">[pool-3..</text>
</g>
<g>
<title>java/lang/Thread.run (227 samples, 5.36%)</title><rect x="684.5" y="435.0" width="63.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.5" y="446.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (227 samples, 5.36%)</title><rect x="684.5" y="419.0" width="63.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="687.5" y="430.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (227 samples, 5.36%)</title><rect x="684.5" y="403.0" width="63.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="687.5" y="414.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.14%)</title><rect x="684.5" y="387.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.14%)</title><rect x="684.5" y="371.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="687.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.14%)</title><rect x="684.5" y="355.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="687.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.14%)</title><rect x="684.5" y="339.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.14%)</title><rect x="684.5" y="323.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="687.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.run (221 samples, 5.22%)</title><rect x="686.2" y="387.0" width="61.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.2" y="398.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (221 samples, 5.22%)</title><rect x="686.2" y="371.0" width="61.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="689.2" y="382.0">ru/mai..</text>
</g>
<g>
<title>one.nio.http.Response (11 samples, 0.26%)</title><rect x="686.2" y="355.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="689.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (61 samples, 1.44%)</title><rect x="689.2" y="355.0" width="17.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="692.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (61 samples, 1.44%)</title><rect x="689.2" y="339.0" width="17.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="692.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (47 samples, 1.11%)</title><rect x="689.2" y="323.0" width="13.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.2" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (47 samples, 1.11%)</title><rect x="689.2" y="307.0" width="13.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="692.2" y="318.0"></text>
</g>
<g>
<title>byte[] (47 samples, 1.11%)</title><rect x="689.2" y="291.0" width="13.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="692.2" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (14 samples, 0.33%)</title><rect x="702.3" y="323.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.3" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (14 samples, 0.33%)</title><rect x="702.3" y="307.0" width="3.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="705.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (42 samples, 0.99%)</title><rect x="706.2" y="355.0" width="11.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="709.2" y="366.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.40%)</title><rect x="706.2" y="339.0" width="4.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="709.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (16 samples, 0.38%)</title><rect x="711.0" y="339.0" width="4.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="714.0" y="350.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.21%)</title><rect x="715.4" y="339.0" width="2.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="718.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (107 samples, 2.53%)</title><rect x="717.9" y="355.0" width="29.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="720.9" y="366.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (50 samples, 1.18%)</title><rect x="717.9" y="339.0" width="14.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.9" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (50 samples, 1.18%)</title><rect x="717.9" y="323.0" width="14.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="720.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.07%)</title><rect x="731.9" y="339.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="734.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.07%)</title><rect x="731.9" y="323.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.07%)</title><rect x="731.9" y="307.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.9" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.07%)</title><rect x="731.9" y="291.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.9" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.07%)</title><rect x="731.9" y="275.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.9" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.02%)</title><rect x="731.9" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="734.9" y="270.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (1 samples, 0.02%)</title><rect x="731.9" y="243.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="734.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (2 samples, 0.05%)</title><rect x="732.2" y="259.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="735.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (2 samples, 0.05%)</title><rect x="732.2" y="243.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.2" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (2 samples, 0.05%)</title><rect x="732.2" y="227.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="735.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (54 samples, 1.28%)</title><rect x="732.7" y="339.0" width="15.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="735.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (37 samples, 0.87%)</title><rect x="732.7" y="323.0" width="10.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="735.7" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (37 samples, 0.87%)</title><rect x="732.7" y="307.0" width="10.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.7" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.87%)</title><rect x="732.7" y="291.0" width="10.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="735.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (5 samples, 0.12%)</title><rect x="743.0" y="323.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (5 samples, 0.12%)</title><rect x="743.0" y="307.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="746.0" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (1 samples, 0.02%)</title><rect x="743.0" y="291.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="746.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (4 samples, 0.09%)</title><rect x="743.3" y="291.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="746.3" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (12 samples, 0.28%)</title><rect x="744.4" y="323.0" width="3.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="747.4" y="334.0"></text>
</g>
<g>
<title>[pool-3-thread-2 tid=53020] (241 samples, 5.69%)</title><rect x="747.8" y="451.0" width="67.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="750.8" y="462.0">[pool-3..</text>
</g>
<g>
<title>java/lang/Thread.run (241 samples, 5.69%)</title><rect x="747.8" y="435.0" width="67.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="750.8" y="446.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (241 samples, 5.69%)</title><rect x="747.8" y="419.0" width="67.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.8" y="430.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (241 samples, 5.69%)</title><rect x="747.8" y="403.0" width="67.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="750.8" y="414.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.21%)</title><rect x="747.8" y="387.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (9 samples, 0.21%)</title><rect x="747.8" y="371.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="750.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 0.21%)</title><rect x="747.8" y="355.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (9 samples, 0.21%)</title><rect x="747.8" y="339.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (9 samples, 0.21%)</title><rect x="747.8" y="323.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="750.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.run (232 samples, 5.48%)</title><rect x="750.3" y="387.0" width="64.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="753.3" y="398.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (232 samples, 5.48%)</title><rect x="750.3" y="371.0" width="64.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="753.3" y="382.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (8 samples, 0.19%)</title><rect x="750.3" y="355.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="753.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (63 samples, 1.49%)</title><rect x="752.5" y="355.0" width="17.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="755.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (63 samples, 1.49%)</title><rect x="752.5" y="339.0" width="17.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="755.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (44 samples, 1.04%)</title><rect x="752.5" y="323.0" width="12.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="755.5" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (44 samples, 1.04%)</title><rect x="752.5" y="307.0" width="12.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="755.5" y="318.0"></text>
</g>
<g>
<title>byte[] (44 samples, 1.04%)</title><rect x="752.5" y="291.0" width="12.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="755.5" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (19 samples, 0.45%)</title><rect x="764.8" y="323.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="767.8" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (19 samples, 0.45%)</title><rect x="764.8" y="307.0" width="5.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="767.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (49 samples, 1.16%)</title><rect x="770.1" y="355.0" width="13.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="773.1" y="366.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.50%)</title><rect x="770.1" y="339.0" width="5.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="773.1" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (18 samples, 0.43%)</title><rect x="775.9" y="339.0" width="5.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="778.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.24%)</title><rect x="781.0" y="339.0" width="2.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="784.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (112 samples, 2.65%)</title><rect x="783.7" y="355.0" width="31.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="786.7" y="366.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (49 samples, 1.16%)</title><rect x="783.7" y="339.0" width="13.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="786.7" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (49 samples, 1.16%)</title><rect x="783.7" y="323.0" width="13.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="786.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.02%)</title><rect x="797.4" y="339.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="800.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.02%)</title><rect x="797.4" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.02%)</title><rect x="797.4" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="800.4" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="797.4" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="800.4" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="797.4" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="800.4" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.02%)</title><rect x="797.4" y="259.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.4" y="270.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (1 samples, 0.02%)</title><rect x="797.4" y="243.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="800.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (62 samples, 1.47%)</title><rect x="797.7" y="339.0" width="17.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="800.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (37 samples, 0.87%)</title><rect x="797.7" y="323.0" width="10.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="800.7" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (37 samples, 0.87%)</title><rect x="797.7" y="307.0" width="10.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="800.7" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.87%)</title><rect x="797.7" y="291.0" width="10.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="800.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (10 samples, 0.24%)</title><rect x="808.0" y="323.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="811.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (10 samples, 0.24%)</title><rect x="808.0" y="307.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="811.0" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (3 samples, 0.07%)</title><rect x="808.0" y="291.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="811.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (7 samples, 0.17%)</title><rect x="808.8" y="291.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="811.8" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (15 samples, 0.35%)</title><rect x="810.8" y="323.0" width="4.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="813.8" y="334.0"></text>
</g>
<g>
<title>[pool-3-thread-3 tid=53021] (225 samples, 5.32%)</title><rect x="815.0" y="451.0" width="62.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="818.0" y="462.0">[pool-..</text>
</g>
<g>
<title>java/lang/Thread.run (225 samples, 5.32%)</title><rect x="815.0" y="435.0" width="62.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="818.0" y="446.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (225 samples, 5.32%)</title><rect x="815.0" y="419.0" width="62.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="818.0" y="430.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (225 samples, 5.32%)</title><rect x="815.0" y="403.0" width="62.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="818.0" y="414.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (12 samples, 0.28%)</title><rect x="815.0" y="387.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="818.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (12 samples, 0.28%)</title><rect x="815.0" y="371.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="818.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (12 samples, 0.28%)</title><rect x="815.0" y="355.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="818.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (12 samples, 0.28%)</title><rect x="815.0" y="339.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="818.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (12 samples, 0.28%)</title><rect x="815.0" y="323.0" width="3.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="818.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.run (213 samples, 5.03%)</title><rect x="818.3" y="387.0" width="59.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="821.3" y="398.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (213 samples, 5.03%)</title><rect x="818.3" y="371.0" width="59.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="821.3" y="382.0">ru/mai..</text>
</g>
<g>
<title>one.nio.http.Response (9 samples, 0.21%)</title><rect x="818.3" y="355.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="821.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (58 samples, 1.37%)</title><rect x="820.8" y="355.0" width="16.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (58 samples, 1.37%)</title><rect x="820.8" y="339.0" width="16.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="823.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (38 samples, 0.90%)</title><rect x="820.8" y="323.0" width="10.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.8" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (38 samples, 0.90%)</title><rect x="820.8" y="307.0" width="10.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.8" y="318.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.90%)</title><rect x="820.8" y="291.0" width="10.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="823.8" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (20 samples, 0.47%)</title><rect x="831.4" y="323.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="834.4" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (20 samples, 0.47%)</title><rect x="831.4" y="307.0" width="5.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="834.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (37 samples, 0.87%)</title><rect x="837.0" y="355.0" width="10.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.0" y="366.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.35%)</title><rect x="837.0" y="339.0" width="4.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="840.0" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (14 samples, 0.33%)</title><rect x="841.2" y="339.0" width="3.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="844.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.19%)</title><rect x="845.1" y="339.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="848.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (109 samples, 2.58%)</title><rect x="847.3" y="355.0" width="30.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.3" y="366.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (46 samples, 1.09%)</title><rect x="847.3" y="339.0" width="12.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.3" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (46 samples, 1.09%)</title><rect x="847.3" y="323.0" width="12.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="850.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.09%)</title><rect x="860.1" y="339.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="863.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.09%)</title><rect x="860.1" y="323.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="863.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.09%)</title><rect x="860.1" y="307.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="863.1" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.05%)</title><rect x="860.1" y="291.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="863.1" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.05%)</title><rect x="860.1" y="275.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="863.1" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.02%)</title><rect x="860.1" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="863.1" y="270.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (1 samples, 0.02%)</title><rect x="860.1" y="243.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="863.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.02%)</title><rect x="860.4" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="863.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.02%)</title><rect x="860.4" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="863.4" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (1 samples, 0.02%)</title><rect x="860.4" y="227.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="863.4" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.05%)</title><rect x="860.7" y="291.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="863.7" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.05%)</title><rect x="860.7" y="275.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="863.7" y="286.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (2 samples, 0.05%)</title><rect x="860.7" y="259.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="863.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (59 samples, 1.39%)</title><rect x="861.3" y="339.0" width="16.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="864.3" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (49 samples, 1.16%)</title><rect x="861.3" y="323.0" width="13.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="864.3" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (49 samples, 1.16%)</title><rect x="861.3" y="307.0" width="13.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="864.3" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (49 samples, 1.16%)</title><rect x="861.3" y="291.0" width="13.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="864.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (3 samples, 0.07%)</title><rect x="874.9" y="323.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="877.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (3 samples, 0.07%)</title><rect x="874.9" y="307.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="877.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (2 samples, 0.05%)</title><rect x="874.9" y="291.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="877.9" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (1 samples, 0.02%)</title><rect x="875.5" y="291.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="878.5" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (7 samples, 0.17%)</title><rect x="875.8" y="323.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="878.8" y="334.0"></text>
</g>
<g>
<title>[pool-3-thread-4 tid=53022] (210 samples, 4.96%)</title><rect x="877.7" y="451.0" width="58.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="880.7" y="462.0">[pool-..</text>
</g>
<g>
<title>java/lang/Thread.run (210 samples, 4.96%)</title><rect x="877.7" y="435.0" width="58.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="880.7" y="446.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (210 samples, 4.96%)</title><rect x="877.7" y="419.0" width="58.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="880.7" y="430.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (210 samples, 4.96%)</title><rect x="877.7" y="403.0" width="58.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="880.7" y="414.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (14 samples, 0.33%)</title><rect x="877.7" y="387.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="880.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (14 samples, 0.33%)</title><rect x="877.7" y="371.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="880.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 0.33%)</title><rect x="877.7" y="355.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="880.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (14 samples, 0.33%)</title><rect x="877.7" y="339.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="880.7" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (14 samples, 0.33%)</title><rect x="877.7" y="323.0" width="3.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="880.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.run (196 samples, 4.63%)</title><rect x="881.6" y="387.0" width="54.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="884.6" y="398.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (196 samples, 4.63%)</title><rect x="881.6" y="371.0" width="54.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="884.6" y="382.0">ru/ma..</text>
</g>
<g>
<title>one.nio.http.Response (8 samples, 0.19%)</title><rect x="881.6" y="355.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="884.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (55 samples, 1.30%)</title><rect x="883.8" y="355.0" width="15.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="886.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (55 samples, 1.30%)</title><rect x="883.8" y="339.0" width="15.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="886.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (44 samples, 1.04%)</title><rect x="883.8" y="323.0" width="12.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="886.8" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (44 samples, 1.04%)</title><rect x="883.8" y="307.0" width="12.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="886.8" y="318.0"></text>
</g>
<g>
<title>byte[] (44 samples, 1.04%)</title><rect x="883.8" y="291.0" width="12.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="886.8" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 0.26%)</title><rect x="896.1" y="323.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.1" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (11 samples, 0.26%)</title><rect x="896.1" y="307.0" width="3.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="899.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (40 samples, 0.95%)</title><rect x="899.2" y="355.0" width="11.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="902.2" y="366.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.61%)</title><rect x="899.2" y="339.0" width="7.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="902.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.19%)</title><rect x="906.4" y="339.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="909.4" y="350.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.14%)</title><rect x="908.7" y="339.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="911.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (93 samples, 2.20%)</title><rect x="910.3" y="355.0" width="26.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="913.3" y="366.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (46 samples, 1.09%)</title><rect x="910.3" y="339.0" width="12.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.3" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (46 samples, 1.09%)</title><rect x="910.3" y="323.0" width="12.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="913.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (47 samples, 1.11%)</title><rect x="923.2" y="339.0" width="13.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="926.2" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (36 samples, 0.85%)</title><rect x="923.2" y="323.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="926.2" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (36 samples, 0.85%)</title><rect x="923.2" y="307.0" width="10.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="926.2" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (36 samples, 0.85%)</title><rect x="923.2" y="291.0" width="10.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="926.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (4 samples, 0.09%)</title><rect x="933.2" y="323.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="936.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (4 samples, 0.09%)</title><rect x="933.2" y="307.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="936.2" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (3 samples, 0.07%)</title><rect x="933.2" y="291.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="936.2" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (1 samples, 0.02%)</title><rect x="934.0" y="291.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="937.0" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (7 samples, 0.17%)</title><rect x="934.3" y="323.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="937.3" y="334.0"></text>
</g>
<g>
<title>[pool-3-thread-5 tid=53023] (231 samples, 5.46%)</title><rect x="936.3" y="451.0" width="64.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="939.3" y="462.0">[pool-3..</text>
</g>
<g>
<title>java/lang/Thread.run (231 samples, 5.46%)</title><rect x="936.3" y="435.0" width="64.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="939.3" y="446.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (231 samples, 5.46%)</title><rect x="936.3" y="419.0" width="64.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="939.3" y="430.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (231 samples, 5.46%)</title><rect x="936.3" y="403.0" width="64.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="939.3" y="414.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (7 samples, 0.17%)</title><rect x="936.3" y="387.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="939.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (7 samples, 0.17%)</title><rect x="936.3" y="371.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="939.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.17%)</title><rect x="936.3" y="355.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="939.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (7 samples, 0.17%)</title><rect x="936.3" y="339.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="939.3" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (7 samples, 0.17%)</title><rect x="936.3" y="323.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="939.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.run (224 samples, 5.29%)</title><rect x="938.2" y="387.0" width="62.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="941.2" y="398.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (224 samples, 5.29%)</title><rect x="938.2" y="371.0" width="62.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="941.2" y="382.0">ru/mai..</text>
</g>
<g>
<title>one.nio.http.Response (15 samples, 0.35%)</title><rect x="938.2" y="355.0" width="4.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="941.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (65 samples, 1.54%)</title><rect x="942.4" y="355.0" width="18.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="945.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (65 samples, 1.54%)</title><rect x="942.4" y="339.0" width="18.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="945.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (43 samples, 1.02%)</title><rect x="942.4" y="323.0" width="12.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="945.4" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (43 samples, 1.02%)</title><rect x="942.4" y="307.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="945.4" y="318.0"></text>
</g>
<g>
<title>byte[] (43 samples, 1.02%)</title><rect x="942.4" y="291.0" width="12.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="945.4" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (22 samples, 0.52%)</title><rect x="954.4" y="323.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="957.4" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (22 samples, 0.52%)</title><rect x="954.4" y="307.0" width="6.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="957.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (45 samples, 1.06%)</title><rect x="960.5" y="355.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="963.5" y="366.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.40%)</title><rect x="960.5" y="339.0" width="4.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="963.5" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (16 samples, 0.38%)</title><rect x="965.3" y="339.0" width="4.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="968.3" y="350.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.28%)</title><rect x="969.7" y="339.0" width="3.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="972.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (99 samples, 2.34%)</title><rect x="973.1" y="355.0" width="27.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="976.1" y="366.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (37 samples, 0.87%)</title><rect x="973.1" y="339.0" width="10.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="976.1" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.87%)</title><rect x="973.1" y="323.0" width="10.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="976.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (62 samples, 1.47%)</title><rect x="983.4" y="339.0" width="17.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="986.4" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (45 samples, 1.06%)</title><rect x="983.4" y="323.0" width="12.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="986.4" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (45 samples, 1.06%)</title><rect x="983.4" y="307.0" width="12.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="986.4" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (45 samples, 1.06%)</title><rect x="983.4" y="291.0" width="12.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="986.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (7 samples, 0.17%)</title><rect x="995.9" y="323.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="998.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (7 samples, 0.17%)</title><rect x="995.9" y="307.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="998.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (6 samples, 0.14%)</title><rect x="995.9" y="291.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="998.9" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (1 samples, 0.02%)</title><rect x="997.6" y="291.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1000.6" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (10 samples, 0.24%)</title><rect x="997.9" y="323.0" width="2.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1000.9" y="334.0"></text>
</g>
<g>
<title>[pool-3-thread-6 tid=53024] (217 samples, 5.13%)</title><rect x="1000.7" y="451.0" width="60.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1003.7" y="462.0">[pool-..</text>
</g>
<g>
<title>java/lang/Thread.run (217 samples, 5.13%)</title><rect x="1000.7" y="435.0" width="60.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1003.7" y="446.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (217 samples, 5.13%)</title><rect x="1000.7" y="419.0" width="60.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1003.7" y="430.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (217 samples, 5.13%)</title><rect x="1000.7" y="403.0" width="60.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1003.7" y="414.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 0.26%)</title><rect x="1000.7" y="387.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1003.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (11 samples, 0.26%)</title><rect x="1000.7" y="371.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1003.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 0.26%)</title><rect x="1000.7" y="355.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1003.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (11 samples, 0.26%)</title><rect x="1000.7" y="339.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1003.7" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (11 samples, 0.26%)</title><rect x="1000.7" y="323.0" width="3.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1003.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.run (206 samples, 4.87%)</title><rect x="1003.7" y="387.0" width="57.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1006.7" y="398.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (206 samples, 4.87%)</title><rect x="1003.7" y="371.0" width="57.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1006.7" y="382.0">ru/mai..</text>
</g>
<g>
<title>one.nio.http.Response (12 samples, 0.28%)</title><rect x="1003.7" y="355.0" width="3.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1006.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (49 samples, 1.16%)</title><rect x="1007.1" y="355.0" width="13.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1010.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (49 samples, 1.16%)</title><rect x="1007.1" y="339.0" width="13.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1010.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (33 samples, 0.78%)</title><rect x="1007.1" y="323.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1010.1" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (33 samples, 0.78%)</title><rect x="1007.1" y="307.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1010.1" y="318.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.78%)</title><rect x="1007.1" y="291.0" width="9.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1010.1" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (16 samples, 0.38%)</title><rect x="1016.3" y="323.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1019.3" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (16 samples, 0.38%)</title><rect x="1016.3" y="307.0" width="4.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1019.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (40 samples, 0.95%)</title><rect x="1020.8" y="355.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1023.8" y="366.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.31%)</title><rect x="1020.8" y="339.0" width="3.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1023.8" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (17 samples, 0.40%)</title><rect x="1024.4" y="339.0" width="4.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1027.4" y="350.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.24%)</title><rect x="1029.1" y="339.0" width="2.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1032.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (105 samples, 2.48%)</title><rect x="1031.9" y="355.0" width="29.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1034.9" y="366.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (53 samples, 1.25%)</title><rect x="1031.9" y="339.0" width="14.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1034.9" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (53 samples, 1.25%)</title><rect x="1031.9" y="323.0" width="14.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1034.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.02%)</title><rect x="1046.7" y="339.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1049.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.02%)</title><rect x="1046.7" y="323.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1049.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.02%)</title><rect x="1046.7" y="307.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1049.7" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.02%)</title><rect x="1046.7" y="291.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1049.7" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.02%)</title><rect x="1046.7" y="275.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1049.7" y="286.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (1 samples, 0.02%)</title><rect x="1046.7" y="259.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1049.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (51 samples, 1.21%)</title><rect x="1047.0" y="339.0" width="14.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1050.0" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (37 samples, 0.87%)</title><rect x="1047.0" y="323.0" width="10.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1050.0" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (37 samples, 0.87%)</title><rect x="1047.0" y="307.0" width="10.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1050.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.87%)</title><rect x="1047.0" y="291.0" width="10.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1050.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (7 samples, 0.17%)</title><rect x="1057.3" y="323.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1060.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (7 samples, 0.17%)</title><rect x="1057.3" y="307.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1060.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (3 samples, 0.07%)</title><rect x="1057.3" y="291.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1060.3" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (4 samples, 0.09%)</title><rect x="1058.1" y="291.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1061.1" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (7 samples, 0.17%)</title><rect x="1059.2" y="323.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1062.2" y="334.0"></text>
</g>
<g>
<title>[pool-3-thread-7 tid=53026] (232 samples, 5.48%)</title><rect x="1061.2" y="451.0" width="64.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1064.2" y="462.0">[pool-3..</text>
</g>
<g>
<title>java/lang/Thread.run (232 samples, 5.48%)</title><rect x="1061.2" y="435.0" width="64.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1064.2" y="446.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (232 samples, 5.48%)</title><rect x="1061.2" y="419.0" width="64.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.2" y="430.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (232 samples, 5.48%)</title><rect x="1061.2" y="403.0" width="64.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.2" y="414.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 0.26%)</title><rect x="1061.2" y="387.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (11 samples, 0.26%)</title><rect x="1061.2" y="371.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1064.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 0.26%)</title><rect x="1061.2" y="355.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1064.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (11 samples, 0.26%)</title><rect x="1061.2" y="339.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.2" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (11 samples, 0.26%)</title><rect x="1061.2" y="323.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1064.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.run (221 samples, 5.22%)</title><rect x="1064.2" y="387.0" width="61.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1067.2" y="398.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (221 samples, 5.22%)</title><rect x="1064.2" y="371.0" width="61.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1067.2" y="382.0">ru/mai..</text>
</g>
<g>
<title>one.nio.http.Response (9 samples, 0.21%)</title><rect x="1064.2" y="355.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1067.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (59 samples, 1.39%)</title><rect x="1066.8" y="355.0" width="16.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1069.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (59 samples, 1.39%)</title><rect x="1066.8" y="339.0" width="16.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1069.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (42 samples, 0.99%)</title><rect x="1066.8" y="323.0" width="11.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1069.8" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (42 samples, 0.99%)</title><rect x="1066.8" y="307.0" width="11.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1069.8" y="318.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.99%)</title><rect x="1066.8" y="291.0" width="11.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1069.8" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (17 samples, 0.40%)</title><rect x="1078.5" y="323.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1081.5" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (17 samples, 0.40%)</title><rect x="1078.5" y="307.0" width="4.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1081.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (41 samples, 0.97%)</title><rect x="1083.2" y="355.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1086.2" y="366.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.47%)</title><rect x="1083.2" y="339.0" width="5.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1086.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (16 samples, 0.38%)</title><rect x="1088.8" y="339.0" width="4.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1091.8" y="350.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.12%)</title><rect x="1093.2" y="339.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1096.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (112 samples, 2.65%)</title><rect x="1094.6" y="355.0" width="31.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1097.6" y="366.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (43 samples, 1.02%)</title><rect x="1094.6" y="339.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1097.6" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (43 samples, 1.02%)</title><rect x="1094.6" y="323.0" width="12.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1097.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.05%)</title><rect x="1106.6" y="339.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1109.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.05%)</title><rect x="1106.6" y="323.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1109.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.05%)</title><rect x="1106.6" y="307.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1109.6" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="1106.6" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1109.6" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="1106.6" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1109.6" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.02%)</title><rect x="1106.6" y="259.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1109.6" y="270.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (1 samples, 0.02%)</title><rect x="1106.6" y="243.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1109.6" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.02%)</title><rect x="1106.9" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1109.9" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.02%)</title><rect x="1106.9" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1109.9" y="286.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (1 samples, 0.02%)</title><rect x="1106.9" y="259.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1109.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (67 samples, 1.58%)</title><rect x="1107.2" y="339.0" width="18.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1110.2" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (50 samples, 1.18%)</title><rect x="1107.2" y="323.0" width="13.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1110.2" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (50 samples, 1.18%)</title><rect x="1107.2" y="307.0" width="13.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1110.2" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (50 samples, 1.18%)</title><rect x="1107.2" y="291.0" width="13.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1110.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (10 samples, 0.24%)</title><rect x="1121.1" y="323.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1124.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (10 samples, 0.24%)</title><rect x="1121.1" y="307.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1124.1" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (4 samples, 0.09%)</title><rect x="1121.1" y="291.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1124.1" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (6 samples, 0.14%)</title><rect x="1122.2" y="291.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1125.2" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (7 samples, 0.17%)</title><rect x="1123.9" y="323.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1126.9" y="334.0"></text>
</g>
<g>
<title>[pool-3-thread-8 tid=53025] (230 samples, 5.43%)</title><rect x="1125.9" y="451.0" width="64.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1128.9" y="462.0">[pool-3..</text>
</g>
<g>
<title>java/lang/Thread.run (230 samples, 5.43%)</title><rect x="1125.9" y="435.0" width="64.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1128.9" y="446.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (230 samples, 5.43%)</title><rect x="1125.9" y="419.0" width="64.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.9" y="430.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (230 samples, 5.43%)</title><rect x="1125.9" y="403.0" width="64.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1128.9" y="414.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (14 samples, 0.33%)</title><rect x="1125.9" y="387.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1128.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (14 samples, 0.33%)</title><rect x="1125.9" y="371.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1128.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 0.33%)</title><rect x="1125.9" y="355.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1128.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (14 samples, 0.33%)</title><rect x="1125.9" y="339.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1128.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (14 samples, 0.33%)</title><rect x="1125.9" y="323.0" width="3.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1128.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/1249702441.run (216 samples, 5.10%)</title><rect x="1129.8" y="387.0" width="60.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1132.8" y="398.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (216 samples, 5.10%)</title><rect x="1129.8" y="371.0" width="60.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1132.8" y="382.0">ru/mai..</text>
</g>
<g>
<title>one.nio.http.Response (13 samples, 0.31%)</title><rect x="1129.8" y="355.0" width="3.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1132.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (52 samples, 1.23%)</title><rect x="1133.4" y="355.0" width="14.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (52 samples, 1.23%)</title><rect x="1133.4" y="339.0" width="14.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (37 samples, 0.87%)</title><rect x="1133.4" y="323.0" width="10.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1136.4" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (37 samples, 0.87%)</title><rect x="1133.4" y="307.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1136.4" y="318.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.87%)</title><rect x="1133.4" y="291.0" width="10.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1136.4" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (15 samples, 0.35%)</title><rect x="1143.7" y="323.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1146.7" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (15 samples, 0.35%)</title><rect x="1143.7" y="307.0" width="4.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1146.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (48 samples, 1.13%)</title><rect x="1147.9" y="355.0" width="13.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1150.9" y="366.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.38%)</title><rect x="1147.9" y="339.0" width="4.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1150.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (16 samples, 0.38%)</title><rect x="1152.4" y="339.0" width="4.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1155.4" y="350.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.38%)</title><rect x="1156.8" y="339.0" width="4.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1159.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (103 samples, 2.43%)</title><rect x="1161.3" y="355.0" width="28.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1164.3" y="366.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (49 samples, 1.16%)</title><rect x="1161.3" y="339.0" width="13.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1164.3" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (49 samples, 1.16%)</title><rect x="1161.3" y="323.0" width="13.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1164.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.02%)</title><rect x="1174.9" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1177.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.02%)</title><rect x="1174.9" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1177.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.02%)</title><rect x="1174.9" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1177.9" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="1174.9" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1177.9" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="1174.9" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1177.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.02%)</title><rect x="1174.9" y="259.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1177.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.02%)</title><rect x="1174.9" y="243.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1177.9" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (1 samples, 0.02%)</title><rect x="1174.9" y="227.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1177.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (53 samples, 1.25%)</title><rect x="1175.2" y="339.0" width="14.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1178.2" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (42 samples, 0.99%)</title><rect x="1175.2" y="323.0" width="11.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1178.2" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (42 samples, 0.99%)</title><rect x="1175.2" y="307.0" width="11.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1178.2" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (42 samples, 0.99%)</title><rect x="1175.2" y="291.0" width="11.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1178.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (6 samples, 0.14%)</title><rect x="1186.9" y="323.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1189.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (6 samples, 0.14%)</title><rect x="1186.9" y="307.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1189.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (2 samples, 0.05%)</title><rect x="1186.9" y="291.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1189.9" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (4 samples, 0.09%)</title><rect x="1187.5" y="291.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1190.5" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (5 samples, 0.12%)</title><rect x="1188.6" y="323.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1191.6" y="334.0"></text>
</g>
</g>
</svg>
