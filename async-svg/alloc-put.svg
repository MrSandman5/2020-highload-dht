<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="837"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="837"> </text>
<g id="frames">
<g>
<title>all (42,970 samples, 100.00%)</title><rect x="10.0" y="803.0" width="1180.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="814.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (21,729 samples, 50.57%)</title><rect x="10.0" y="787.0" width="596.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (21,729 samples, 50.57%)</title><rect x="10.0" y="771.0" width="596.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (21,729 samples, 50.57%)</title><rect x="10.0" y="755.0" width="596.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (17,295 samples, 40.25%)</title><rect x="10.0" y="739.0" width="474.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6,414 samples, 14.93%)</title><rect x="10.0" y="723.0" width="176.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/util/concurrent/Co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3,168 samples, 7.37%)</title><rect x="10.0" y="707.0" width="87.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="718.0">java/util/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$161/701954098.apply (3,160 samples, 7.35%)</title><rect x="10.2" y="691.0" width="86.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.2" y="702.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (3,160 samples, 7.35%)</title><rect x="10.2" y="675.0" width="86.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.2" y="686.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (3,160 samples, 7.35%)</title><rect x="10.2" y="659.0" width="86.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.2" y="670.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.05%)</title><rect x="10.2" y="643.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.05%)</title><rect x="10.2" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$315/703902426.get$Lambda (15 samples, 0.03%)</title><rect x="10.2" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.2" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$315 (15 samples, 0.03%)</title><rect x="10.2" y="595.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="13.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (38 samples, 0.09%)</title><rect x="10.9" y="643.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (38 samples, 0.09%)</title><rect x="10.9" y="627.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.9" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (23 samples, 0.05%)</title><rect x="10.9" y="611.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="13.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.03%)</title><rect x="11.5" y="611.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.03%)</title><rect x="11.5" y="595.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.5" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.03%)</title><rect x="11.5" y="579.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="14.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (80 samples, 0.19%)</title><rect x="11.9" y="643.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (80 samples, 0.19%)</title><rect x="11.9" y="627.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.9" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (47 samples, 0.11%)</title><rect x="11.9" y="611.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="14.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.08%)</title><rect x="13.2" y="611.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.08%)</title><rect x="13.2" y="595.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="16.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (33 samples, 0.08%)</title><rect x="13.2" y="579.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="16.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (2,932 samples, 6.82%)</title><rect x="14.1" y="643.0" width="80.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.1" y="654.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (2,932 samples, 6.82%)</title><rect x="14.1" y="627.0" width="80.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.1" y="638.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (2,932 samples, 6.82%)</title><rect x="14.1" y="611.0" width="80.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.1" y="622.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.11%)</title><rect x="14.1" y="595.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.11%)</title><rect x="14.1" y="579.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$204/1335605778.get$Lambda (18 samples, 0.04%)</title><rect x="14.3" y="563.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$204 (18 samples, 0.04%)</title><rect x="14.3" y="547.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="17.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$280/1794368300.get$Lambda (21 samples, 0.05%)</title><rect x="14.8" y="563.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$280 (21 samples, 0.05%)</title><rect x="14.8" y="547.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="17.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,053 samples, 4.78%)</title><rect x="15.4" y="595.0" width="56.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.4" y="606.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,053 samples, 4.78%)</title><rect x="15.4" y="579.0" width="56.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.4" y="590.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,033 samples, 4.73%)</title><rect x="15.4" y="563.0" width="55.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.4" y="574.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$280/1794368300.apply (2,033 samples, 4.73%)</title><rect x="15.4" y="547.0" width="55.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.4" y="558.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (2,033 samples, 4.73%)</title><rect x="15.4" y="531.0" width="55.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.4" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2,033 samples, 4.73%)</title><rect x="15.4" y="515.0" width="55.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.4" y="526.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$204/1335605778.apply (2,033 samples, 4.73%)</title><rect x="15.4" y="499.0" width="55.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.4" y="510.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2,033 samples, 4.73%)</title><rect x="15.4" y="483.0" width="55.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.4" y="494.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.03%)</title><rect x="15.4" y="467.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.03%)</title><rect x="15.4" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$312/838027427.get$Lambda (11 samples, 0.03%)</title><rect x="15.4" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$312 (11 samples, 0.03%)</title><rect x="15.4" y="419.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="18.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (36 samples, 0.08%)</title><rect x="15.7" y="467.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (36 samples, 0.08%)</title><rect x="15.7" y="451.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (20 samples, 0.05%)</title><rect x="15.7" y="435.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="18.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.03%)</title><rect x="16.3" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.03%)</title><rect x="16.3" y="419.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.03%)</title><rect x="16.3" y="403.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="19.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (43 samples, 0.10%)</title><rect x="16.7" y="467.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (43 samples, 0.10%)</title><rect x="16.7" y="451.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (25 samples, 0.06%)</title><rect x="16.7" y="435.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="19.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.04%)</title><rect x="17.4" y="435.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="20.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.04%)</title><rect x="17.4" y="419.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.04%)</title><rect x="17.4" y="403.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="20.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1,943 samples, 4.52%)</title><rect x="17.9" y="467.0" width="53.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.9" y="478.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.05%)</title><rect x="17.9" y="451.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="20.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.05%)</title><rect x="17.9" y="435.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="20.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$308/596850472.get$Lambda (12 samples, 0.03%)</title><rect x="17.9" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="20.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$308 (12 samples, 0.03%)</title><rect x="17.9" y="403.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="20.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,620 samples, 3.77%)</title><rect x="18.5" y="451.0" width="44.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="21.5" y="462.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,620 samples, 3.77%)</title><rect x="18.5" y="435.0" width="44.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.5" y="446.0">java..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (31 samples, 0.07%)</title><rect x="18.5" y="419.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="21.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$308/596850472.apply (1,552 samples, 3.61%)</title><rect x="19.3" y="419.0" width="42.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.3" y="430.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (1,552 samples, 3.61%)</title><rect x="19.3" y="403.0" width="42.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.3" y="414.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.04%)</title><rect x="19.3" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="22.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.04%)</title><rect x="19.3" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="22.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$337/2121782347.get$Lambda (16 samples, 0.04%)</title><rect x="19.3" y="355.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$337 (16 samples, 0.04%)</title><rect x="19.3" y="339.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="22.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (53 samples, 0.12%)</title><rect x="19.7" y="387.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (53 samples, 0.12%)</title><rect x="19.7" y="371.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.7" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (33 samples, 0.08%)</title><rect x="19.7" y="355.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="22.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.05%)</title><rect x="20.7" y="355.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.05%)</title><rect x="20.7" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.05%)</title><rect x="20.7" y="323.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="23.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.06%)</title><rect x="21.2" y="387.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="24.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (31 samples, 0.07%)</title><rect x="21.9" y="387.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (13 samples, 0.03%)</title><rect x="21.9" y="371.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="24.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (18 samples, 0.04%)</title><rect x="22.3" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (18 samples, 0.04%)</title><rect x="22.3" y="355.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (18 samples, 0.04%)</title><rect x="22.3" y="339.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (18 samples, 0.04%)</title><rect x="22.3" y="323.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (18 samples, 0.04%)</title><rect x="22.3" y="307.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (18 samples, 0.04%)</title><rect x="22.3" y="291.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="25.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (49 samples, 0.11%)</title><rect x="22.8" y="387.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="25.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (49 samples, 0.11%)</title><rect x="22.8" y="371.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (15 samples, 0.03%)</title><rect x="22.8" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (15 samples, 0.03%)</title><rect x="22.8" y="339.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (15 samples, 0.03%)</title><rect x="22.8" y="323.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (15 samples, 0.03%)</title><rect x="22.8" y="307.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="25.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (34 samples, 0.08%)</title><rect x="23.2" y="355.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="26.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (34 samples, 0.08%)</title><rect x="23.2" y="339.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (21 samples, 0.05%)</title><rect x="23.2" y="323.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="26.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (13 samples, 0.03%)</title><rect x="23.8" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="26.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (13 samples, 0.03%)</title><rect x="23.8" y="307.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="26.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (1,377 samples, 3.20%)</title><rect x="24.1" y="387.0" width="37.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="27.1" y="398.0">jdk..</text>
</g>
<g>
<title>java.lang.StringBuilder (14 samples, 0.03%)</title><rect x="24.1" y="371.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="27.1" y="382.0"></text>
</g>
<g>
<title>java/lang/Long.toString (36 samples, 0.08%)</title><rect x="24.5" y="371.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.5" y="382.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.05%)</title><rect x="24.5" y="355.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="27.5" y="366.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.03%)</title><rect x="25.1" y="355.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="28.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (98 samples, 0.23%)</title><rect x="25.5" y="371.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (98 samples, 0.23%)</title><rect x="25.5" y="355.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="28.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (98 samples, 0.23%)</title><rect x="25.5" y="339.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="28.5" y="350.0"></text>
</g>
<g>
<title>byte[] (98 samples, 0.23%)</title><rect x="25.5" y="323.0" width="2.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="28.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (56 samples, 0.13%)</title><rect x="28.2" y="371.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.2" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (56 samples, 0.13%)</title><rect x="28.2" y="355.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="31.2" y="366.0"></text>
</g>
<g>
<title>byte[] (56 samples, 0.13%)</title><rect x="28.2" y="339.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="31.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (112 samples, 0.26%)</title><rect x="29.7" y="371.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="32.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (112 samples, 0.26%)</title><rect x="29.7" y="355.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.7" y="366.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.03%)</title><rect x="29.7" y="339.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="32.7" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (100 samples, 0.23%)</title><rect x="30.0" y="339.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.0" y="350.0"></text>
</g>
<g>
<title>byte[] (100 samples, 0.23%)</title><rect x="30.0" y="323.0" width="2.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="33.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (37 samples, 0.09%)</title><rect x="32.8" y="371.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="35.8" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (37 samples, 0.09%)</title><rect x="32.8" y="355.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="35.8" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (37 samples, 0.09%)</title><rect x="32.8" y="339.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="35.8" y="350.0"></text>
</g>
<g>
<title>java/util/List.of (14 samples, 0.03%)</title><rect x="33.8" y="371.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="36.8" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (14 samples, 0.03%)</title><rect x="33.8" y="355.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="36.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (786 samples, 1.83%)</title><rect x="34.2" y="371.0" width="21.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="37.2" y="382.0">j..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (18 samples, 0.04%)</title><rect x="34.2" y="355.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.04%)</title><rect x="34.2" y="339.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="37.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.04%)</title><rect x="34.2" y="323.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="37.2" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$350/198188022.get$Lambda (18 samples, 0.04%)</title><rect x="34.2" y="307.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.2" y="318.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$350 (18 samples, 0.04%)</title><rect x="34.2" y="291.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="37.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (429 samples, 1.00%)</title><rect x="34.7" y="355.0" width="11.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.7" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (259 samples, 0.60%)</title><rect x="34.7" y="339.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="37.7" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (259 samples, 0.60%)</title><rect x="34.7" y="323.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="37.7" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (259 samples, 0.60%)</title><rect x="34.7" y="307.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.7" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (259 samples, 0.60%)</title><rect x="34.7" y="291.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.7" y="302.0"></text>
</g>
<g>
<title>byte[] (259 samples, 0.60%)</title><rect x="34.7" y="275.0" width="7.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="37.7" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (38 samples, 0.09%)</title><rect x="41.8" y="339.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="44.8" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (38 samples, 0.09%)</title><rect x="41.8" y="323.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.8" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (38 samples, 0.09%)</title><rect x="41.8" y="307.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="44.8" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (38 samples, 0.09%)</title><rect x="41.8" y="291.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="44.8" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (38 samples, 0.09%)</title><rect x="42.8" y="339.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.8" y="350.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (14 samples, 0.03%)</title><rect x="42.8" y="323.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="45.8" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (24 samples, 0.06%)</title><rect x="43.2" y="323.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.2" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (24 samples, 0.06%)</title><rect x="43.2" y="307.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="46.2" y="318.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$350/198188022.test (94 samples, 0.22%)</title><rect x="43.9" y="339.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="46.9" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (94 samples, 0.22%)</title><rect x="43.9" y="323.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="46.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$86/1605851606.test (94 samples, 0.22%)</title><rect x="43.9" y="307.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="46.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (94 samples, 0.22%)</title><rect x="43.9" y="291.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.9" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$75/253601149.test (94 samples, 0.22%)</title><rect x="43.9" y="275.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="46.9" y="286.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (94 samples, 0.22%)</title><rect x="43.9" y="259.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="46.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$74/403170294.test (94 samples, 0.22%)</title><rect x="43.9" y="243.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (94 samples, 0.22%)</title><rect x="43.9" y="227.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="46.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (94 samples, 0.22%)</title><rect x="43.9" y="211.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="46.9" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (94 samples, 0.22%)</title><rect x="43.9" y="195.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="46.9" y="206.0"></text>
</g>
<g>
<title>java.lang.String (49 samples, 0.11%)</title><rect x="43.9" y="179.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="46.9" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (45 samples, 0.10%)</title><rect x="45.2" y="179.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.2" y="190.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.10%)</title><rect x="45.2" y="163.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="48.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (339 samples, 0.79%)</title><rect x="46.5" y="355.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.5" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (339 samples, 0.79%)</title><rect x="46.5" y="339.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.5" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (339 samples, 0.79%)</title><rect x="46.5" y="323.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.5" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (13 samples, 0.03%)</title><rect x="46.7" y="307.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="49.7" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap (35 samples, 0.08%)</title><rect x="47.0" y="307.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="50.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.05%)</title><rect x="48.2" y="307.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="51.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.05%)</title><rect x="48.2" y="291.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.2" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.get$Lambda (23 samples, 0.05%)</title><rect x="48.2" y="275.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.2" y="286.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$131 (23 samples, 0.05%)</title><rect x="48.2" y="259.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="51.2" y="270.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (14 samples, 0.03%)</title><rect x="48.8" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="51.8" y="318.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (14 samples, 0.03%)</title><rect x="48.8" y="291.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="51.8" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (211 samples, 0.49%)</title><rect x="49.2" y="307.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.2" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.accept (211 samples, 0.49%)</title><rect x="49.2" y="291.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="52.2" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (211 samples, 0.49%)</title><rect x="49.2" y="275.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.08%)</title><rect x="49.2" y="259.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="52.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.08%)</title><rect x="49.2" y="243.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.2" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1026326437.get$Lambda (36 samples, 0.08%)</title><rect x="49.2" y="227.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.2" y="238.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$141 (36 samples, 0.08%)</title><rect x="49.2" y="211.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="52.2" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (32 samples, 0.07%)</title><rect x="50.2" y="259.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.2" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1026326437.accept (32 samples, 0.07%)</title><rect x="50.2" y="243.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="53.2" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (32 samples, 0.07%)</title><rect x="50.2" y="227.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="53.2" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (32 samples, 0.07%)</title><rect x="50.2" y="211.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.2" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (32 samples, 0.07%)</title><rect x="50.2" y="195.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.2" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (32 samples, 0.07%)</title><rect x="50.2" y="179.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.2" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (32 samples, 0.07%)</title><rect x="50.2" y="163.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="53.2" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (32 samples, 0.07%)</title><rect x="50.2" y="147.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.2" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (32 samples, 0.07%)</title><rect x="50.2" y="131.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="53.2" y="142.0"></text>
</g>
<g>
<title>java/util/List.copyOf (69 samples, 0.16%)</title><rect x="51.1" y="259.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.1" y="270.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (69 samples, 0.16%)</title><rect x="51.1" y="243.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="54.1" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (30 samples, 0.07%)</title><rect x="51.1" y="227.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.1" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (30 samples, 0.07%)</title><rect x="51.1" y="211.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.1" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (30 samples, 0.07%)</title><rect x="51.1" y="195.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="54.1" y="206.0"></text>
</g>
<g>
<title>java/util/List.of (39 samples, 0.09%)</title><rect x="51.9" y="227.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.9" y="238.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (39 samples, 0.09%)</title><rect x="51.9" y="211.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="54.9" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (74 samples, 0.17%)</title><rect x="53.0" y="259.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.0" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (74 samples, 0.17%)</title><rect x="53.0" y="243.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="56.0" y="254.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (28 samples, 0.07%)</title><rect x="55.0" y="307.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.0" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap (28 samples, 0.07%)</title><rect x="55.0" y="291.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="58.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (58 samples, 0.13%)</title><rect x="55.8" y="371.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.8" y="382.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (15 samples, 0.03%)</title><rect x="55.8" y="355.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="58.8" y="366.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.03%)</title><rect x="55.8" y="339.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="58.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.10%)</title><rect x="56.2" y="355.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="59.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (43 samples, 0.10%)</title><rect x="56.2" y="339.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="59.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1234250905.invoke (43 samples, 0.10%)</title><rect x="56.2" y="323.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="59.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.10%)</title><rect x="56.2" y="307.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="59.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (21 samples, 0.05%)</title><rect x="56.2" y="291.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="59.2" y="302.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.05%)</title><rect x="56.2" y="275.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="59.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (22 samples, 0.05%)</title><rect x="56.8" y="291.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="59.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (22 samples, 0.05%)</title><rect x="56.8" y="275.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.8" y="286.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.05%)</title><rect x="56.8" y="259.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="59.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (47 samples, 0.11%)</title><rect x="57.4" y="371.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="60.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (47 samples, 0.11%)</title><rect x="57.4" y="355.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (47 samples, 0.11%)</title><rect x="57.4" y="339.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (47 samples, 0.11%)</title><rect x="57.4" y="323.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1234250905.invoke (47 samples, 0.11%)</title><rect x="57.4" y="307.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (47 samples, 0.11%)</title><rect x="57.4" y="291.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (20 samples, 0.05%)</title><rect x="57.4" y="275.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.4" y="286.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.05%)</title><rect x="57.4" y="259.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="60.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (27 samples, 0.06%)</title><rect x="57.9" y="275.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (27 samples, 0.06%)</title><rect x="57.9" y="259.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.9" y="270.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.06%)</title><rect x="57.9" y="243.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="60.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (119 samples, 0.28%)</title><rect x="58.7" y="371.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="61.7" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (30 samples, 0.07%)</title><rect x="58.7" y="355.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="61.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (31 samples, 0.07%)</title><rect x="59.5" y="355.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.5" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (31 samples, 0.07%)</title><rect x="59.5" y="339.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="62.5" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (58 samples, 0.13%)</title><rect x="60.3" y="355.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.3" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (58 samples, 0.13%)</title><rect x="60.3" y="339.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="63.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.09%)</title><rect x="61.9" y="419.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.09%)</title><rect x="61.9" y="403.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (37 samples, 0.09%)</title><rect x="61.9" y="387.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="64.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (55 samples, 0.13%)</title><rect x="62.9" y="451.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="65.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.04%)</title><rect x="64.5" y="451.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="67.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (229 samples, 0.53%)</title><rect x="64.9" y="451.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.06%)</title><rect x="64.9" y="435.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.06%)</title><rect x="64.9" y="419.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$286/1311967678.get$Lambda (11 samples, 0.03%)</title><rect x="64.9" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$286 (11 samples, 0.03%)</title><rect x="64.9" y="387.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="67.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$287/1480311531.get$Lambda (14 samples, 0.03%)</title><rect x="65.3" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$287 (14 samples, 0.03%)</title><rect x="65.3" y="387.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="68.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (18 samples, 0.04%)</title><rect x="65.6" y="435.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="68.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (17 samples, 0.04%)</title><rect x="66.1" y="435.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="69.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (31 samples, 0.07%)</title><rect x="66.6" y="435.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="69.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (65 samples, 0.15%)</title><rect x="67.4" y="435.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="70.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (65 samples, 0.15%)</title><rect x="67.4" y="419.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (65 samples, 0.15%)</title><rect x="67.4" y="403.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="70.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (65 samples, 0.15%)</title><rect x="67.4" y="387.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (65 samples, 0.15%)</title><rect x="67.4" y="371.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="70.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (65 samples, 0.15%)</title><rect x="67.4" y="355.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="70.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$270/1387273586.run (65 samples, 0.15%)</title><rect x="67.4" y="339.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="70.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (65 samples, 0.15%)</title><rect x="67.4" y="323.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="70.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (65 samples, 0.15%)</title><rect x="67.4" y="307.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="70.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.07%)</title><rect x="67.4" y="291.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.07%)</title><rect x="67.4" y="275.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$290/404964990.get$Lambda (14 samples, 0.03%)</title><rect x="67.4" y="259.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="70.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$290 (14 samples, 0.03%)</title><rect x="67.4" y="243.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="70.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$293/45308323.get$Lambda (17 samples, 0.04%)</title><rect x="67.8" y="259.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$293 (17 samples, 0.04%)</title><rect x="67.8" y="243.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="70.8" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (14 samples, 0.03%)</title><rect x="68.3" y="291.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="71.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (20 samples, 0.05%)</title><rect x="68.7" y="291.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (20 samples, 0.05%)</title><rect x="68.7" y="275.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (12 samples, 0.03%)</title><rect x="68.9" y="259.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.9" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (12 samples, 0.03%)</title><rect x="68.9" y="243.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="71.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (52 samples, 0.12%)</title><rect x="69.2" y="435.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.2" y="446.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (12 samples, 0.03%)</title><rect x="69.2" y="419.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="72.2" y="430.0"></text>
</g>
<g>
<title>java.util.HashMap (25 samples, 0.06%)</title><rect x="69.6" y="419.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="72.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (15 samples, 0.03%)</title><rect x="70.2" y="419.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.2" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (15 samples, 0.03%)</title><rect x="70.2" y="403.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.2" y="414.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.03%)</title><rect x="70.2" y="387.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="73.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (21 samples, 0.05%)</title><rect x="70.7" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="73.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.05%)</title><rect x="70.7" y="419.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="73.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.05%)</title><rect x="71.2" y="563.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.05%)</title><rect x="71.2" y="547.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.05%)</title><rect x="71.2" y="531.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="74.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (40 samples, 0.09%)</title><rect x="71.8" y="595.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (40 samples, 0.09%)</title><rect x="71.8" y="579.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.8" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (15 samples, 0.03%)</title><rect x="71.8" y="563.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="74.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.06%)</title><rect x="72.2" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="75.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.06%)</title><rect x="72.2" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="75.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.06%)</title><rect x="72.2" y="531.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="75.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (791 samples, 1.84%)</title><rect x="72.9" y="595.0" width="21.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.9" y="606.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.06%)</title><rect x="72.9" y="579.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.06%)</title><rect x="72.9" y="563.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$274/776394132.get$Lambda (19 samples, 0.04%)</title><rect x="72.9" y="547.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$274 (19 samples, 0.04%)</title><rect x="72.9" y="531.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="75.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (33 samples, 0.08%)</title><rect x="73.6" y="579.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (33 samples, 0.08%)</title><rect x="73.6" y="563.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$276/356294275.apply (16 samples, 0.04%)</title><rect x="73.6" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="76.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (16 samples, 0.04%)</title><rect x="73.6" y="531.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="76.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (16 samples, 0.04%)</title><rect x="73.6" y="515.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="76.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.04%)</title><rect x="73.6" y="499.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="76.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.04%)</title><rect x="74.1" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.04%)</title><rect x="74.1" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.04%)</title><rect x="74.1" y="515.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="77.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (27 samples, 0.06%)</title><rect x="74.5" y="579.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (27 samples, 0.06%)</title><rect x="74.5" y="563.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.06%)</title><rect x="74.5" y="547.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="77.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.06%)</title><rect x="74.5" y="531.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.06%)</title><rect x="74.5" y="515.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="77.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (704 samples, 1.64%)</title><rect x="75.3" y="579.0" width="19.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (704 samples, 1.64%)</title><rect x="75.3" y="563.0" width="19.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (56 samples, 0.13%)</title><rect x="75.3" y="547.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="78.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (628 samples, 1.46%)</title><rect x="76.8" y="547.0" width="17.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="79.8" y="558.0"></text>
</g>
<g>
<title>java.lang.Object (11 samples, 0.03%)</title><rect x="76.8" y="531.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="79.8" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList (19 samples, 0.04%)</title><rect x="77.1" y="531.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="80.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (17 samples, 0.04%)</title><rect x="77.6" y="531.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="80.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.03%)</title><rect x="78.1" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.03%)</title><rect x="78.1" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$211/933378171.get$Lambda (14 samples, 0.03%)</title><rect x="78.1" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="81.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$211 (14 samples, 0.03%)</title><rect x="78.1" y="483.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="81.1" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (25 samples, 0.06%)</title><rect x="78.5" y="531.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="81.5" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (25 samples, 0.06%)</title><rect x="78.5" y="515.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.5" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (25 samples, 0.06%)</title><rect x="78.5" y="499.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="81.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (10 samples, 0.02%)</title><rect x="79.2" y="531.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (10 samples, 0.02%)</title><rect x="79.2" y="515.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="82.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (33 samples, 0.08%)</title><rect x="79.4" y="531.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="82.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (35 samples, 0.08%)</title><rect x="80.4" y="531.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="83.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (31 samples, 0.07%)</title><rect x="81.3" y="531.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="84.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (42 samples, 0.10%)</title><rect x="82.2" y="531.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="85.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (175 samples, 0.41%)</title><rect x="83.3" y="531.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="86.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (19 samples, 0.04%)</title><rect x="83.3" y="515.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="86.3" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (13 samples, 0.03%)</title><rect x="84.1" y="515.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="87.1" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (14 samples, 0.03%)</title><rect x="84.4" y="515.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="87.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (10 samples, 0.02%)</title><rect x="85.0" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.0" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (10 samples, 0.02%)</title><rect x="85.0" y="499.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="88.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (11 samples, 0.03%)</title><rect x="85.3" y="515.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="88.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.04%)</title><rect x="85.6" y="515.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="88.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (75 samples, 0.17%)</title><rect x="86.1" y="515.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="89.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (18 samples, 0.04%)</title><rect x="86.1" y="499.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="89.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (12 samples, 0.03%)</title><rect x="86.6" y="499.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="89.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (13 samples, 0.03%)</title><rect x="86.9" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="89.9" y="510.0"></text>
</g>
<g>
<title>java.lang.Object (13 samples, 0.03%)</title><rect x="86.9" y="483.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="89.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (32 samples, 0.07%)</title><rect x="87.2" y="499.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (15 samples, 0.03%)</title><rect x="87.7" y="483.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="90.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (139 samples, 0.32%)</title><rect x="88.1" y="531.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.03%)</title><rect x="88.1" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.03%)</title><rect x="88.1" y="499.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$$Lambda$214/182580392.get$Lambda (11 samples, 0.03%)</title><rect x="88.1" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$$Lambda$214 (11 samples, 0.03%)</title><rect x="88.1" y="467.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="91.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (13 samples, 0.03%)</title><rect x="88.4" y="515.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="91.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (14 samples, 0.03%)</title><rect x="88.8" y="515.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="91.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (12 samples, 0.03%)</title><rect x="89.4" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="92.4" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (12 samples, 0.03%)</title><rect x="89.4" y="499.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="92.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (81 samples, 0.19%)</title><rect x="89.7" y="515.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="92.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (17 samples, 0.04%)</title><rect x="89.7" y="499.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="92.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (20 samples, 0.05%)</title><rect x="90.2" y="499.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="93.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (35 samples, 0.08%)</title><rect x="91.0" y="499.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (13 samples, 0.03%)</title><rect x="91.0" y="483.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="94.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (12 samples, 0.03%)</title><rect x="91.3" y="483.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="94.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (10 samples, 0.02%)</title><rect x="91.7" y="483.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="94.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (14 samples, 0.03%)</title><rect x="91.9" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="94.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.03%)</title><rect x="91.9" y="515.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.03%)</title><rect x="91.9" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$266/911706757.get$Lambda (14 samples, 0.03%)</title><rect x="91.9" y="483.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="94.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$$Lambda$266 (14 samples, 0.03%)</title><rect x="91.9" y="467.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="94.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (15 samples, 0.03%)</title><rect x="92.3" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (15 samples, 0.03%)</title><rect x="92.3" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="95.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (15 samples, 0.03%)</title><rect x="92.3" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="95.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.get (15 samples, 0.03%)</title><rect x="92.3" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.3" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (15 samples, 0.03%)</title><rect x="92.3" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (15 samples, 0.03%)</title><rect x="92.3" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="95.3" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.03%)</title><rect x="92.3" y="435.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="95.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (48 samples, 0.11%)</title><rect x="92.7" y="531.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="95.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/558216562.linkToTargetMethod (13 samples, 0.03%)</title><rect x="92.7" y="515.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="95.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.03%)</title><rect x="92.7" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="95.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$217/1260205426.get$Lambda (13 samples, 0.03%)</title><rect x="92.7" y="483.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$217 (13 samples, 0.03%)</title><rect x="92.7" y="467.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="95.7" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (35 samples, 0.08%)</title><rect x="93.1" y="515.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="96.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$217/1260205426.run (35 samples, 0.08%)</title><rect x="93.1" y="499.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (35 samples, 0.08%)</title><rect x="93.1" y="483.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="96.1" y="494.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (27 samples, 0.06%)</title><rect x="93.3" y="467.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="96.3" y="478.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (13 samples, 0.03%)</title><rect x="93.3" y="451.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="96.3" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (14 samples, 0.03%)</title><rect x="93.7" y="451.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.7" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (14 samples, 0.03%)</title><rect x="93.7" y="435.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.7" y="446.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (14 samples, 0.03%)</title><rect x="93.7" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.7" y="430.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (14 samples, 0.03%)</title><rect x="93.7" y="403.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="96.7" y="414.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (14 samples, 0.03%)</title><rect x="93.7" y="387.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="96.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (20 samples, 0.05%)</title><rect x="94.1" y="547.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.05%)</title><rect x="94.1" y="531.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="97.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (25 samples, 0.06%)</title><rect x="94.6" y="643.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.6" y="654.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (25 samples, 0.06%)</title><rect x="94.6" y="627.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.6" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (25 samples, 0.06%)</title><rect x="94.6" y="611.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.6" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (25 samples, 0.06%)</title><rect x="94.6" y="595.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="97.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (62 samples, 0.14%)</title><rect x="95.3" y="643.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="98.3" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (33 samples, 0.08%)</title><rect x="95.3" y="627.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="98.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (29 samples, 0.07%)</title><rect x="96.2" y="627.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="99.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (29 samples, 0.07%)</title><rect x="96.2" y="611.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="99.2" y="622.0"></text>
</g>
<g>
<title>java/time/Instant.now (17 samples, 0.04%)</title><rect x="96.2" y="595.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="99.2" y="606.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (17 samples, 0.04%)</title><rect x="96.2" y="579.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.2" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (17 samples, 0.04%)</title><rect x="96.2" y="563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.2" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.create (17 samples, 0.04%)</title><rect x="96.2" y="547.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="99.2" y="558.0"></text>
</g>
<g>
<title>java.time.Instant (17 samples, 0.04%)</title><rect x="96.2" y="531.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="99.2" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.plus (12 samples, 0.03%)</title><rect x="96.7" y="595.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="99.7" y="606.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (12 samples, 0.03%)</title><rect x="96.7" y="579.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="99.7" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (12 samples, 0.03%)</title><rect x="96.7" y="563.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.7" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plus (12 samples, 0.03%)</title><rect x="96.7" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="99.7" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (12 samples, 0.03%)</title><rect x="96.7" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="99.7" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.plus (12 samples, 0.03%)</title><rect x="96.7" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.7" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (12 samples, 0.03%)</title><rect x="96.7" y="499.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="99.7" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (12 samples, 0.03%)</title><rect x="96.7" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="99.7" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (12 samples, 0.03%)</title><rect x="96.7" y="467.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="99.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3,246 samples, 7.55%)</title><rect x="97.0" y="707.0" width="89.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="100.0" y="718.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3,246 samples, 7.55%)</title><rect x="97.0" y="691.0" width="89.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="100.0" y="702.0">java/util/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$206/2123650476.accept (3,246 samples, 7.55%)</title><rect x="97.0" y="675.0" width="89.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.0" y="686.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$respond$0 (3,246 samples, 7.55%)</title><rect x="97.0" y="659.0" width="89.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.0" y="670.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (3,246 samples, 7.55%)</title><rect x="97.0" y="643.0" width="89.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="100.0" y="654.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3,246 samples, 7.55%)</title><rect x="97.0" y="627.0" width="89.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.0" y="638.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3,246 samples, 7.55%)</title><rect x="97.0" y="611.0" width="89.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="100.0" y="622.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2,263 samples, 5.27%)</title><rect x="97.0" y="595.0" width="62.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.0" y="606.0">one/ni..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,263 samples, 5.27%)</title><rect x="97.0" y="579.0" width="62.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.0" y="590.0">one/ni..</text>
</g>
<g>
<title>byte[] (1,519 samples, 3.54%)</title><rect x="97.0" y="563.0" width="41.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="100.0" y="574.0">byt..</text>
</g>
<g>
<title>byte[] (744 samples, 1.73%)</title><rect x="138.7" y="563.0" width="20.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="141.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (983 samples, 2.29%)</title><rect x="159.1" y="595.0" width="27.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.1" y="606.0">o..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (983 samples, 2.29%)</title><rect x="159.1" y="579.0" width="27.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="162.1" y="590.0">o..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$120/1851269310.get (123 samples, 0.29%)</title><rect x="186.1" y="723.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="189.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replicasPut$2 (123 samples, 0.29%)</title><rect x="186.1" y="707.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="189.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.06%)</title><rect x="186.1" y="691.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.06%)</title><rect x="186.1" y="675.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="189.1" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.06%)</title><rect x="186.1" y="659.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="189.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (61 samples, 0.14%)</title><rect x="186.9" y="691.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="189.9" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (24 samples, 0.06%)</title><rect x="186.9" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="189.9" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (24 samples, 0.06%)</title><rect x="186.9" y="659.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="189.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (35 samples, 0.08%)</title><rect x="187.6" y="675.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.6" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (27 samples, 0.06%)</title><rect x="187.6" y="659.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="190.6" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (27 samples, 0.06%)</title><rect x="187.6" y="643.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="190.6" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.06%)</title><rect x="187.6" y="627.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="190.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.emptyResponse (35 samples, 0.08%)</title><rect x="188.6" y="691.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (27 samples, 0.06%)</title><rect x="188.8" y="675.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.8" y="686.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.02%)</title><rect x="189.2" y="659.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="192.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/SimpleRequests$$Lambda$383/1483224964.get (10,758 samples, 25.04%)</title><rect x="189.5" y="723.0" width="295.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.5" y="734.0">ru/mail/polis/service/mrsandman5/replica..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/SimpleRequests.lambda$put$1 (10,758 samples, 25.04%)</title><rect x="189.5" y="707.0" width="295.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="192.5" y="718.0">ru/mail/polis/service/mrsandman5/replica..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,862 samples, 4.33%)</title><rect x="189.5" y="691.0" width="51.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="192.5" y="702.0">java/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,862 samples, 4.33%)</title><rect x="189.5" y="675.0" width="51.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.5" y="686.0">java/..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,862 samples, 4.33%)</title><rect x="189.5" y="659.0" width="51.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="192.5" y="670.0">java...</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (5,778 samples, 13.45%)</title><rect x="240.6" y="691.0" width="158.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.6" y="702.0">ru/mail/polis/dao/im..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2,443 samples, 5.69%)</title><rect x="240.6" y="675.0" width="67.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="243.6" y="686.0">java/ni..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2,443 samples, 5.69%)</title><rect x="240.6" y="659.0" width="67.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="243.6" y="670.0">java.ni..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (47 samples, 0.11%)</title><rect x="307.7" y="675.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="310.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (47 samples, 0.11%)</title><rect x="307.7" y="659.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="310.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (47 samples, 0.11%)</title><rect x="307.7" y="643.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.7" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (35 samples, 0.08%)</title><rect x="307.7" y="627.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.7" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (35 samples, 0.08%)</title><rect x="307.7" y="611.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.7" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (22 samples, 0.05%)</title><rect x="307.7" y="595.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="310.7" y="606.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (22 samples, 0.05%)</title><rect x="307.7" y="579.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="310.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (13 samples, 0.03%)</title><rect x="308.3" y="595.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (13 samples, 0.03%)</title><rect x="308.3" y="579.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="311.3" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (13 samples, 0.03%)</title><rect x="308.3" y="563.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="311.3" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (12 samples, 0.03%)</title><rect x="308.7" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.7" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (12 samples, 0.03%)</title><rect x="308.7" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.7" y="622.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (12 samples, 0.03%)</title><rect x="308.7" y="595.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="311.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (3,288 samples, 7.65%)</title><rect x="309.0" y="675.0" width="90.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="312.0" y="686.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2,490 samples, 5.79%)</title><rect x="309.0" y="659.0" width="68.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="312.0" y="670.0">java/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2,490 samples, 5.79%)</title><rect x="309.0" y="643.0" width="68.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="312.0" y="654.0">java/ni..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2,490 samples, 5.79%)</title><rect x="309.0" y="627.0" width="68.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="312.0" y="638.0">java.ni..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (225 samples, 0.52%)</title><rect x="377.4" y="659.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="380.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (225 samples, 0.52%)</title><rect x="377.4" y="643.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="380.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (75 samples, 0.17%)</title><rect x="377.4" y="627.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="380.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (150 samples, 0.35%)</title><rect x="379.5" y="627.0" width="4.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="382.5" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (573 samples, 1.33%)</title><rect x="383.6" y="659.0" width="15.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="386.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.emptyResponse (3,118 samples, 7.26%)</title><rect x="399.3" y="691.0" width="85.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="402.3" y="702.0">ru/mail/po..</text>
</g>
<g>
<title>one.nio.http.Response (554 samples, 1.29%)</title><rect x="399.3" y="675.0" width="15.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="402.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,564 samples, 5.97%)</title><rect x="414.5" y="675.0" width="70.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="417.5" y="686.0">one/nio/..</text>
</g>
<g>
<title>byte[] (1,079 samples, 2.51%)</title><rect x="414.5" y="659.0" width="29.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="417.5" y="670.0">by..</text>
</g>
<g>
<title>java.lang.String[] (810 samples, 1.89%)</title><rect x="444.2" y="659.0" width="22.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="447.2" y="670.0">j..</text>
</g>
<g>
<title>java.lang.String (675 samples, 1.57%)</title><rect x="466.4" y="659.0" width="18.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="469.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (202 samples, 0.47%)</title><rect x="484.9" y="739.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (169 samples, 0.39%)</title><rect x="484.9" y="723.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="487.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (49 samples, 0.11%)</title><rect x="484.9" y="707.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (49 samples, 0.11%)</title><rect x="484.9" y="691.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="487.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (49 samples, 0.11%)</title><rect x="484.9" y="675.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (49 samples, 0.11%)</title><rect x="484.9" y="659.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="487.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$206/2123650476.accept (47 samples, 0.11%)</title><rect x="485.0" y="643.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$respond$0 (47 samples, 0.11%)</title><rect x="485.0" y="627.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="488.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (47 samples, 0.11%)</title><rect x="485.0" y="611.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="488.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (47 samples, 0.11%)</title><rect x="485.0" y="595.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="488.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (47 samples, 0.11%)</title><rect x="485.0" y="579.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="488.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (30 samples, 0.07%)</title><rect x="485.0" y="563.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="488.0" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (30 samples, 0.07%)</title><rect x="485.0" y="547.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.0" y="558.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.07%)</title><rect x="485.0" y="531.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="488.0" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (17 samples, 0.04%)</title><rect x="485.8" y="563.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="488.8" y="574.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (17 samples, 0.04%)</title><rect x="485.8" y="547.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="488.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$183/172221686.apply (81 samples, 0.19%)</title><rect x="486.3" y="707.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="489.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replicasPut$3 (81 samples, 0.19%)</title><rect x="486.3" y="691.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="489.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.emptyResponse (81 samples, 0.19%)</title><rect x="486.3" y="675.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="489.3" y="686.0"></text>
</g>
<g>
<title>one.nio.http.Response (22 samples, 0.05%)</title><rect x="486.3" y="659.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="489.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (59 samples, 0.14%)</title><rect x="486.9" y="659.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="489.9" y="670.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.05%)</title><rect x="486.9" y="643.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="489.9" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (22 samples, 0.05%)</title><rect x="487.5" y="643.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="490.5" y="654.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.03%)</title><rect x="488.1" y="643.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="491.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$199/321800161.apply (39 samples, 0.09%)</title><rect x="488.5" y="707.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="491.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replicasPut$4 (39 samples, 0.09%)</title><rect x="488.5" y="691.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="491.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.emptyResponse (39 samples, 0.09%)</title><rect x="488.5" y="675.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.5" y="686.0"></text>
</g>
<g>
<title>one.nio.http.Response (13 samples, 0.03%)</title><rect x="488.5" y="659.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="491.5" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (26 samples, 0.06%)</title><rect x="488.9" y="659.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.9" y="670.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.03%)</title><rect x="488.9" y="643.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="491.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (33 samples, 0.08%)</title><rect x="489.6" y="723.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="492.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (33 samples, 0.08%)</title><rect x="489.6" y="707.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="492.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FuturesUtils$$Lambda$192/574997146.accept (33 samples, 0.08%)</title><rect x="489.6" y="691.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FuturesUtils.lambda$atLeastAsync$0 (33 samples, 0.08%)</title><rect x="489.6" y="675.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (33 samples, 0.08%)</title><rect x="489.6" y="659.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="492.6" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (33 samples, 0.08%)</title><rect x="489.6" y="643.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="492.6" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.08%)</title><rect x="489.6" y="627.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="492.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,119 samples, 2.60%)</title><rect x="490.5" y="739.0" width="30.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.5" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,119 samples, 2.60%)</title><rect x="490.5" y="723.0" width="30.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.5" y="734.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,106 samples, 2.57%)</title><rect x="490.5" y="707.0" width="30.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="493.5" y="718.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1,106 samples, 2.57%)</title><rect x="490.5" y="691.0" width="30.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="493.5" y="702.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,106 samples, 2.57%)</title><rect x="490.5" y="675.0" width="30.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="493.5" y="686.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (13 samples, 0.03%)</title><rect x="520.9" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="523.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (13 samples, 0.03%)</title><rect x="520.9" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="523.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (13 samples, 0.03%)</title><rect x="520.9" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="523.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (13 samples, 0.03%)</title><rect x="520.9" y="659.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="523.9" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (13 samples, 0.03%)</title><rect x="520.9" y="643.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="523.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$344/2115454959.run (741 samples, 1.72%)</title><rect x="521.2" y="739.0" width="20.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="524.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (741 samples, 1.72%)</title><rect x="521.2" y="723.0" width="20.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="524.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (741 samples, 1.72%)</title><rect x="521.2" y="707.0" width="20.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (741 samples, 1.72%)</title><rect x="521.2" y="691.0" width="20.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="524.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (741 samples, 1.72%)</title><rect x="521.2" y="675.0" width="20.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="524.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (741 samples, 1.72%)</title><rect x="521.2" y="659.0" width="20.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (741 samples, 1.72%)</title><rect x="521.2" y="643.0" width="20.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (741 samples, 1.72%)</title><rect x="521.2" y="627.0" width="20.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="524.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (741 samples, 1.72%)</title><rect x="521.2" y="611.0" width="20.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (741 samples, 1.72%)</title><rect x="521.2" y="595.0" width="20.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="524.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (741 samples, 1.72%)</title><rect x="521.2" y="579.0" width="20.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (668 samples, 1.55%)</title><rect x="521.2" y="563.0" width="18.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.09%)</title><rect x="521.2" y="547.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="524.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.09%)</title><rect x="521.2" y="531.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="524.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$356/1019675645.get$Lambda (15 samples, 0.03%)</title><rect x="521.2" y="515.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="524.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$356 (15 samples, 0.03%)</title><rect x="521.2" y="499.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="524.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$378/1745146989.get$Lambda (13 samples, 0.03%)</title><rect x="521.6" y="515.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="524.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$378 (13 samples, 0.03%)</title><rect x="521.6" y="499.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="524.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$380/1756385671.get$Lambda (11 samples, 0.03%)</title><rect x="522.0" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="525.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$380 (11 samples, 0.03%)</title><rect x="522.0" y="499.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="525.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (629 samples, 1.46%)</title><rect x="522.3" y="547.0" width="17.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="525.3" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (28 samples, 0.07%)</title><rect x="522.3" y="531.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="525.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (601 samples, 1.40%)</title><rect x="523.1" y="531.0" width="16.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (601 samples, 1.40%)</title><rect x="523.1" y="515.0" width="16.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (601 samples, 1.40%)</title><rect x="523.1" y="499.0" width="16.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (103 samples, 0.24%)</title><rect x="523.1" y="483.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="526.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (37 samples, 0.09%)</title><rect x="523.1" y="467.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="526.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$372/98170111.apply (65 samples, 0.15%)</title><rect x="524.1" y="467.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="527.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (65 samples, 0.15%)</title><rect x="524.1" y="451.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="527.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (65 samples, 0.15%)</title><rect x="524.1" y="435.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="527.1" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (14 samples, 0.03%)</title><rect x="524.1" y="419.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.1" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (14 samples, 0.03%)</title><rect x="524.1" y="403.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="527.1" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (14 samples, 0.03%)</title><rect x="524.1" y="387.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="527.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (51 samples, 0.12%)</title><rect x="524.5" y="419.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="527.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (43 samples, 0.10%)</title><rect x="524.7" y="403.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (43 samples, 0.10%)</title><rect x="524.7" y="387.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="527.7" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (21 samples, 0.05%)</title><rect x="524.7" y="371.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="527.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.05%)</title><rect x="525.3" y="371.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="528.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.05%)</title><rect x="525.3" y="355.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="528.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.05%)</title><rect x="525.3" y="339.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="528.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (498 samples, 1.16%)</title><rect x="525.9" y="483.0" width="13.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="528.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (498 samples, 1.16%)</title><rect x="525.9" y="467.0" width="13.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="528.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$312/838027427.apply (498 samples, 1.16%)</title><rect x="525.9" y="451.0" width="13.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="528.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (498 samples, 1.16%)</title><rect x="525.9" y="435.0" width="13.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="528.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (498 samples, 1.16%)</title><rect x="525.9" y="419.0" width="13.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="528.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$198/423295079.apply (498 samples, 1.16%)</title><rect x="525.9" y="403.0" width="13.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="528.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (498 samples, 1.16%)</title><rect x="525.9" y="387.0" width="13.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="528.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (41 samples, 0.10%)</title><rect x="526.1" y="371.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="529.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (41 samples, 0.10%)</title><rect x="526.1" y="355.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (22 samples, 0.05%)</title><rect x="526.1" y="339.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="529.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.04%)</title><rect x="526.7" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.04%)</title><rect x="526.7" y="323.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.04%)</title><rect x="526.7" y="307.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="529.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (449 samples, 1.04%)</title><rect x="527.2" y="371.0" width="12.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="530.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.05%)</title><rect x="527.2" y="355.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.05%)</title><rect x="527.2" y="339.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="530.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$362/304763652.get$Lambda (13 samples, 0.03%)</title><rect x="527.2" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="530.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$362 (13 samples, 0.03%)</title><rect x="527.2" y="307.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="530.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (167 samples, 0.39%)</title><rect x="527.8" y="355.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (167 samples, 0.39%)</title><rect x="527.8" y="339.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="530.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (167 samples, 0.39%)</title><rect x="527.8" y="323.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="530.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$362/304763652.accept (67 samples, 0.16%)</title><rect x="527.8" y="307.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="530.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (67 samples, 0.16%)</title><rect x="527.8" y="291.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="530.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (67 samples, 0.16%)</title><rect x="527.8" y="275.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="530.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.04%)</title><rect x="527.8" y="259.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="530.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.04%)</title><rect x="527.8" y="243.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="530.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$367/327437031.get$Lambda (18 samples, 0.04%)</title><rect x="527.8" y="227.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$367 (18 samples, 0.04%)</title><rect x="527.8" y="211.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="530.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (49 samples, 0.11%)</title><rect x="528.3" y="259.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="531.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (49 samples, 0.11%)</title><rect x="528.3" y="243.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.3" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (24 samples, 0.06%)</title><rect x="528.3" y="227.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="531.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.06%)</title><rect x="528.9" y="227.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="531.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.06%)</title><rect x="528.9" y="211.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.9" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.06%)</title><rect x="528.9" y="195.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="531.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$369/1082072813.accept (65 samples, 0.15%)</title><rect x="529.6" y="307.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="532.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (65 samples, 0.15%)</title><rect x="529.6" y="291.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="532.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (65 samples, 0.15%)</title><rect x="529.6" y="275.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="532.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (65 samples, 0.15%)</title><rect x="529.6" y="259.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="532.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (65 samples, 0.15%)</title><rect x="529.6" y="243.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="532.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (65 samples, 0.15%)</title><rect x="529.6" y="227.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="532.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (65 samples, 0.15%)</title><rect x="529.6" y="211.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="532.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (65 samples, 0.15%)</title><rect x="529.6" y="195.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="532.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (65 samples, 0.15%)</title><rect x="529.6" y="179.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="532.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (65 samples, 0.15%)</title><rect x="529.6" y="163.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="532.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (29 samples, 0.07%)</title><rect x="529.6" y="147.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (29 samples, 0.07%)</title><rect x="529.6" y="131.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="532.6" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (18 samples, 0.04%)</title><rect x="529.6" y="115.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="532.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (11 samples, 0.03%)</title><rect x="530.1" y="115.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="533.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (11 samples, 0.03%)</title><rect x="530.1" y="99.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (11 samples, 0.03%)</title><rect x="530.1" y="83.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="533.1" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (11 samples, 0.03%)</title><rect x="530.1" y="67.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="533.1" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (11 samples, 0.03%)</title><rect x="530.1" y="51.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="533.1" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (11 samples, 0.03%)</title><rect x="530.1" y="35.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="533.1" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (36 samples, 0.08%)</title><rect x="530.4" y="147.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="533.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (36 samples, 0.08%)</title><rect x="530.4" y="131.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="533.4" y="142.0"></text>
</g>
<g>
<title>java/util/List.of (17 samples, 0.04%)</title><rect x="530.4" y="115.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.4" y="126.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (17 samples, 0.04%)</title><rect x="530.4" y="99.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="533.4" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (19 samples, 0.04%)</title><rect x="530.9" y="115.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="533.9" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (14 samples, 0.03%)</title><rect x="530.9" y="99.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="533.9" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (35 samples, 0.08%)</title><rect x="531.4" y="307.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="534.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (35 samples, 0.08%)</title><rect x="531.4" y="291.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="534.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (35 samples, 0.08%)</title><rect x="531.4" y="275.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="534.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (262 samples, 0.61%)</title><rect x="532.4" y="355.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (15 samples, 0.03%)</title><rect x="532.4" y="339.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="535.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (17 samples, 0.04%)</title><rect x="532.8" y="339.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="535.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (17 samples, 0.04%)</title><rect x="532.8" y="323.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="535.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.04%)</title><rect x="532.8" y="307.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="535.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (230 samples, 0.54%)</title><rect x="533.2" y="339.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="536.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (120 samples, 0.28%)</title><rect x="533.5" y="323.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="536.5" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (17 samples, 0.04%)</title><rect x="533.5" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="536.5" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (17 samples, 0.04%)</title><rect x="533.5" y="291.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="536.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (16 samples, 0.04%)</title><rect x="534.0" y="307.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="537.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (87 samples, 0.20%)</title><rect x="534.4" y="307.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="537.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (10 samples, 0.02%)</title><rect x="534.4" y="291.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="537.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (10 samples, 0.02%)</title><rect x="534.7" y="291.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="537.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (18 samples, 0.04%)</title><rect x="534.9" y="291.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="537.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (16 samples, 0.04%)</title><rect x="535.4" y="291.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="538.4" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (16 samples, 0.04%)</title><rect x="535.4" y="275.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="538.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (33 samples, 0.08%)</title><rect x="535.9" y="291.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="538.9" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (13 samples, 0.03%)</title><rect x="535.9" y="275.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="538.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (13 samples, 0.03%)</title><rect x="536.2" y="275.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="539.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (101 samples, 0.24%)</title><rect x="536.8" y="323.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="539.8" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (14 samples, 0.03%)</title><rect x="536.8" y="307.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="539.8" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (49 samples, 0.11%)</title><rect x="537.2" y="307.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="540.2" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (35 samples, 0.08%)</title><rect x="537.2" y="291.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="540.2" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.03%)</title><rect x="538.1" y="291.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.1" y="302.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.03%)</title><rect x="538.1" y="275.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="541.1" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (38 samples, 0.09%)</title><rect x="538.5" y="307.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="541.5" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (38 samples, 0.09%)</title><rect x="538.5" y="291.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="541.5" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (38 samples, 0.09%)</title><rect x="538.5" y="275.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.5" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (38 samples, 0.09%)</title><rect x="538.5" y="259.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="541.5" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (38 samples, 0.09%)</title><rect x="538.5" y="243.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="541.5" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (38 samples, 0.09%)</title><rect x="538.5" y="227.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="541.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (73 samples, 0.17%)</title><rect x="539.6" y="563.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="542.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (73 samples, 0.17%)</title><rect x="539.6" y="547.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="542.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (73 samples, 0.17%)</title><rect x="539.6" y="531.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="542.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (73 samples, 0.17%)</title><rect x="539.6" y="515.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="542.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (73 samples, 0.17%)</title><rect x="539.6" y="499.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="542.6" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (73 samples, 0.17%)</title><rect x="539.6" y="483.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="542.6" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (31 samples, 0.07%)</title><rect x="539.6" y="467.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="542.6" y="478.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (31 samples, 0.07%)</title><rect x="539.6" y="451.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="542.6" y="462.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (42 samples, 0.10%)</title><rect x="540.4" y="467.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="543.4" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (42 samples, 0.10%)</title><rect x="540.4" y="451.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="543.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,372 samples, 5.52%)</title><rect x="541.6" y="739.0" width="65.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="544.6" y="750.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,372 samples, 5.52%)</title><rect x="541.6" y="723.0" width="65.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.6" y="734.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,970 samples, 4.58%)</title><rect x="541.6" y="707.0" width="54.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="544.6" y="718.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$270/1387273586.run (1,970 samples, 4.58%)</title><rect x="541.6" y="691.0" width="54.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="544.6" y="702.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,970 samples, 4.58%)</title><rect x="541.6" y="675.0" width="54.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="544.6" y="686.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (55 samples, 0.13%)</title><rect x="541.6" y="659.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (55 samples, 0.13%)</title><rect x="541.6" y="643.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (55 samples, 0.13%)</title><rect x="541.6" y="627.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="544.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (55 samples, 0.13%)</title><rect x="541.6" y="611.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="544.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/116669570.linkToTargetMethod (28 samples, 0.07%)</title><rect x="541.6" y="595.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="544.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/454884231.invoke (28 samples, 0.07%)</title><rect x="541.6" y="579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="544.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.07%)</title><rect x="541.6" y="563.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="544.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (28 samples, 0.07%)</title><rect x="541.6" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="544.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (28 samples, 0.07%)</title><rect x="541.6" y="531.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="544.6" y="542.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.07%)</title><rect x="541.6" y="515.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="544.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (27 samples, 0.06%)</title><rect x="542.3" y="595.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="545.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.06%)</title><rect x="542.3" y="579.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="545.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.06%)</title><rect x="542.3" y="563.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="545.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$353/182948253.get$Lambda (27 samples, 0.06%)</title><rect x="542.3" y="547.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="545.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$353 (27 samples, 0.06%)</title><rect x="542.3" y="531.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="545.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1,915 samples, 4.46%)</title><rect x="543.1" y="659.0" width="52.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.1" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,915 samples, 4.46%)</title><rect x="543.1" y="643.0" width="52.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="546.1" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,915 samples, 4.46%)</title><rect x="543.1" y="627.0" width="52.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="546.1" y="638.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,915 samples, 4.46%)</title><rect x="543.1" y="611.0" width="52.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.1" y="622.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (886 samples, 2.06%)</title><rect x="543.1" y="595.0" width="24.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="546.1" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (886 samples, 2.06%)</title><rect x="543.1" y="579.0" width="24.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="546.1" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (886 samples, 2.06%)</title><rect x="543.1" y="563.0" width="24.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="546.1" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (886 samples, 2.06%)</title><rect x="543.1" y="547.0" width="24.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.1" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (886 samples, 2.06%)</title><rect x="543.1" y="531.0" width="24.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.1" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (886 samples, 2.06%)</title><rect x="543.1" y="515.0" width="24.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="546.1" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (886 samples, 2.06%)</title><rect x="543.1" y="499.0" width="24.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="546.1" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (866 samples, 2.02%)</title><rect x="543.1" y="483.0" width="23.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="546.1" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (866 samples, 2.02%)</title><rect x="543.1" y="467.0" width="23.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="546.1" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (853 samples, 1.99%)</title><rect x="543.1" y="451.0" width="23.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="546.1" y="462.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (15 samples, 0.03%)</title><rect x="543.1" y="435.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="546.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$167/1947942813.apply (806 samples, 1.88%)</title><rect x="543.5" y="435.0" width="22.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="546.5" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (806 samples, 1.88%)</title><rect x="543.5" y="419.0" width="22.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="546.5" y="430.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.04%)</title><rect x="543.5" y="403.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.04%)</title><rect x="543.5" y="387.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$428/1182523009.get$Lambda (19 samples, 0.04%)</title><rect x="543.5" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$428 (19 samples, 0.04%)</title><rect x="543.5" y="355.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="546.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (49 samples, 0.11%)</title><rect x="544.0" y="403.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="547.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (49 samples, 0.11%)</title><rect x="544.0" y="387.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="547.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (25 samples, 0.06%)</title><rect x="544.0" y="371.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="547.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.06%)</title><rect x="544.7" y="371.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="547.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.06%)</title><rect x="544.7" y="355.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="547.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.06%)</title><rect x="544.7" y="339.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="547.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (738 samples, 1.72%)</title><rect x="545.4" y="403.0" width="20.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="548.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (36 samples, 0.08%)</title><rect x="545.6" y="387.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="548.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (36 samples, 0.08%)</title><rect x="545.6" y="371.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (18 samples, 0.04%)</title><rect x="545.6" y="355.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="548.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.04%)</title><rect x="546.1" y="355.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="549.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.04%)</title><rect x="546.1" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="549.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.04%)</title><rect x="546.1" y="323.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="549.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (694 samples, 1.62%)</title><rect x="546.6" y="387.0" width="19.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="549.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseInfoImpl (16 samples, 0.04%)</title><rect x="546.6" y="371.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="549.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (633 samples, 1.47%)</title><rect x="547.0" y="371.0" width="17.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="550.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.04%)</title><rect x="547.0" y="355.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="550.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.04%)</title><rect x="547.0" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$423/125129836.get$Lambda (13 samples, 0.03%)</title><rect x="547.2" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$423 (13 samples, 0.03%)</title><rect x="547.2" y="307.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="550.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1720084687.linkToTargetMethod (21 samples, 0.05%)</title><rect x="547.5" y="355.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="550.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1463263860.invokeStatic (21 samples, 0.05%)</title><rect x="547.5" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$397/1581807967.get$Lambda (21 samples, 0.05%)</title><rect x="547.5" y="323.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$397 (21 samples, 0.05%)</title><rect x="547.5" y="307.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="550.5" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (130 samples, 0.30%)</title><rect x="548.1" y="355.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="551.1" y="366.0"></text>
</g>
<g>
<title>java/util/Collection.stream (53 samples, 0.12%)</title><rect x="548.1" y="339.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="551.1" y="350.0"></text>
</g>
<g>
<title>java/util/List.spliterator (24 samples, 0.06%)</title><rect x="548.1" y="323.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="551.1" y="334.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (24 samples, 0.06%)</title><rect x="548.1" y="307.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="551.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (29 samples, 0.07%)</title><rect x="548.8" y="323.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="551.8" y="334.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (29 samples, 0.07%)</title><rect x="548.8" y="307.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="551.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (40 samples, 0.09%)</title><rect x="549.6" y="339.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (40 samples, 0.09%)</title><rect x="549.6" y="323.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (40 samples, 0.09%)</title><rect x="549.6" y="307.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$392/812181035.get (19 samples, 0.04%)</title><rect x="549.8" y="291.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.8" y="302.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (19 samples, 0.04%)</title><rect x="549.8" y="275.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="552.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (12 samples, 0.03%)</title><rect x="550.3" y="291.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="553.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (12 samples, 0.03%)</title><rect x="550.3" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.3" y="286.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (12 samples, 0.03%)</title><rect x="550.3" y="259.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.3" y="270.0"></text>
</g>
<g>
<title>java.util.OptionalLong (12 samples, 0.03%)</title><rect x="550.3" y="243.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="553.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (37 samples, 0.09%)</title><rect x="550.7" y="339.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="553.7" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (37 samples, 0.09%)</title><rect x="550.7" y="323.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="553.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (91 samples, 0.21%)</title><rect x="551.7" y="355.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="554.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (44 samples, 0.10%)</title><rect x="551.7" y="339.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="554.7" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (30 samples, 0.07%)</title><rect x="551.7" y="323.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="554.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.03%)</title><rect x="552.5" y="323.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="555.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.03%)</title><rect x="552.5" y="307.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="555.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.03%)</title><rect x="552.5" y="291.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="555.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (47 samples, 0.11%)</title><rect x="552.9" y="339.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="555.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (47 samples, 0.11%)</title><rect x="552.9" y="323.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (25 samples, 0.06%)</title><rect x="552.9" y="307.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="555.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.05%)</title><rect x="553.6" y="307.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="556.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.05%)</title><rect x="553.6" y="291.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="556.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.05%)</title><rect x="553.6" y="275.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="556.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (19 samples, 0.04%)</title><rect x="554.2" y="355.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="557.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (12 samples, 0.03%)</title><rect x="554.7" y="355.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="557.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.03%)</title><rect x="555.0" y="355.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="558.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (319 samples, 0.74%)</title><rect x="555.6" y="355.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$397/1581807967.run (319 samples, 0.74%)</title><rect x="555.6" y="339.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (319 samples, 0.74%)</title><rect x="555.6" y="323.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="558.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.08%)</title><rect x="555.6" y="307.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.08%)</title><rect x="555.6" y="291.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="558.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$415/1645310768.get$Lambda (19 samples, 0.04%)</title><rect x="556.1" y="275.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="559.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$415 (19 samples, 0.04%)</title><rect x="556.1" y="259.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="559.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (42 samples, 0.10%)</title><rect x="556.6" y="307.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (42 samples, 0.10%)</title><rect x="556.6" y="291.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.6" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (22 samples, 0.05%)</title><rect x="556.6" y="275.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="559.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.05%)</title><rect x="557.2" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="560.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.05%)</title><rect x="557.2" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="560.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.05%)</title><rect x="557.2" y="243.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="560.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (30 samples, 0.07%)</title><rect x="557.8" y="307.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="560.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (21 samples, 0.05%)</title><rect x="558.6" y="307.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="561.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.05%)</title><rect x="558.6" y="291.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="561.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (46 samples, 0.11%)</title><rect x="559.2" y="307.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="562.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (46 samples, 0.11%)</title><rect x="559.2" y="291.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="562.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.03%)</title><rect x="559.2" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="562.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.03%)</title><rect x="559.2" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$417/601776469.get$Lambda (11 samples, 0.03%)</title><rect x="559.2" y="243.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="562.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$417 (11 samples, 0.03%)</title><rect x="559.2" y="227.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="562.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (35 samples, 0.08%)</title><rect x="559.5" y="275.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="562.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (35 samples, 0.08%)</title><rect x="559.5" y="259.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="562.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (35 samples, 0.08%)</title><rect x="559.5" y="243.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.5" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (19 samples, 0.04%)</title><rect x="559.5" y="227.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="562.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.04%)</title><rect x="560.0" y="227.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.04%)</title><rect x="560.0" y="211.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.0" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.04%)</title><rect x="560.0" y="195.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="563.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (49 samples, 0.11%)</title><rect x="560.4" y="307.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.11%)</title><rect x="560.4" y="291.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/890545344.invoke (49 samples, 0.11%)</title><rect x="560.4" y="275.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="563.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.11%)</title><rect x="560.4" y="259.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="563.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (12 samples, 0.03%)</title><rect x="560.4" y="243.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="563.4" y="254.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.03%)</title><rect x="560.4" y="227.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="563.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (37 samples, 0.09%)</title><rect x="560.8" y="243.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (37 samples, 0.09%)</title><rect x="560.8" y="227.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.8" y="238.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.09%)</title><rect x="560.8" y="211.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="563.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (95 samples, 0.22%)</title><rect x="561.8" y="307.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (19 samples, 0.04%)</title><rect x="561.8" y="291.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="564.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (76 samples, 0.18%)</title><rect x="562.3" y="291.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (76 samples, 0.18%)</title><rect x="562.3" y="275.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="565.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/890545344.invoke (76 samples, 0.18%)</title><rect x="562.3" y="259.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="565.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (76 samples, 0.18%)</title><rect x="562.3" y="243.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="565.3" y="254.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (13 samples, 0.03%)</title><rect x="562.3" y="227.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="565.3" y="238.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.03%)</title><rect x="562.3" y="211.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="565.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (63 samples, 0.15%)</title><rect x="562.7" y="227.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="565.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (63 samples, 0.15%)</title><rect x="562.7" y="211.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="565.7" y="222.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.15%)</title><rect x="562.7" y="195.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="565.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/handlers/PutBodyHandler.apply (45 samples, 0.10%)</title><rect x="564.4" y="371.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.discarding (45 samples, 0.10%)</title><rect x="564.4" y="355.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$NullSubscriber (14 samples, 0.03%)</title><rect x="564.4" y="339.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="567.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (31 samples, 0.07%)</title><rect x="564.8" y="339.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (14 samples, 0.03%)</title><rect x="564.8" y="323.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="567.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.04%)</title><rect x="565.2" y="323.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="568.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$315/703902426.apply (32 samples, 0.07%)</title><rect x="565.6" y="435.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (32 samples, 0.07%)</title><rect x="565.6" y="419.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (14 samples, 0.03%)</title><rect x="565.6" y="403.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="568.6" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (14 samples, 0.03%)</title><rect x="565.6" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.6" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (14 samples, 0.03%)</title><rect x="565.6" y="371.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.6" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (14 samples, 0.03%)</title><rect x="565.6" y="355.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="568.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (18 samples, 0.04%)</title><rect x="566.0" y="403.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="569.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.04%)</title><rect x="566.0" y="387.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="569.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (13 samples, 0.03%)</title><rect x="566.5" y="451.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="569.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (13 samples, 0.03%)</title><rect x="566.5" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$319/1455266356.apply (13 samples, 0.03%)</title><rect x="566.5" y="419.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="569.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (13 samples, 0.03%)</title><rect x="566.5" y="403.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="569.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (13 samples, 0.03%)</title><rect x="566.5" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="569.5" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.03%)</title><rect x="566.5" y="371.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="569.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$382/489610158.apply (20 samples, 0.05%)</title><rect x="566.9" y="483.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="569.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (20 samples, 0.05%)</title><rect x="566.9" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="569.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (20 samples, 0.05%)</title><rect x="566.9" y="451.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="569.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1,029 samples, 2.39%)</title><rect x="567.4" y="595.0" width="28.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.4" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (59 samples, 0.14%)</title><rect x="567.4" y="579.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="570.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (59 samples, 0.14%)</title><rect x="567.4" y="563.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="570.4" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (59 samples, 0.14%)</title><rect x="567.4" y="547.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.4" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (59 samples, 0.14%)</title><rect x="567.4" y="531.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.4" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (59 samples, 0.14%)</title><rect x="567.4" y="515.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="570.4" y="526.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.14%)</title><rect x="567.4" y="499.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="570.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (36 samples, 0.08%)</title><rect x="569.0" y="579.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="572.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (36 samples, 0.08%)</title><rect x="569.0" y="563.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.0" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (36 samples, 0.08%)</title><rect x="569.0" y="547.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="572.0" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (36 samples, 0.08%)</title><rect x="569.0" y="531.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (36 samples, 0.08%)</title><rect x="569.0" y="515.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="572.0" y="526.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.08%)</title><rect x="569.0" y="499.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="572.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (89 samples, 0.21%)</title><rect x="570.0" y="579.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.0" y="590.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (21 samples, 0.05%)</title><rect x="570.0" y="563.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="573.0" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.03%)</title><rect x="570.6" y="563.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="573.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.03%)</title><rect x="570.6" y="547.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="573.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.03%)</title><rect x="570.6" y="531.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.6" y="542.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.03%)</title><rect x="570.6" y="515.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="573.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (15 samples, 0.03%)</title><rect x="571.0" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="574.0" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (15 samples, 0.03%)</title><rect x="571.0" y="547.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.0" y="558.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.03%)</title><rect x="571.0" y="531.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="574.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (38 samples, 0.09%)</title><rect x="571.4" y="563.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="574.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (38 samples, 0.09%)</title><rect x="571.4" y="547.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.4" y="558.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.03%)</title><rect x="571.4" y="531.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="574.4" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.06%)</title><rect x="571.7" y="531.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.7" y="542.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.06%)</title><rect x="571.7" y="515.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="574.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (307 samples, 0.71%)</title><rect x="572.5" y="579.0" width="8.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.5" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (307 samples, 0.71%)</title><rect x="572.5" y="563.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="575.5" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (307 samples, 0.71%)</title><rect x="572.5" y="547.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="575.5" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (12 samples, 0.03%)</title><rect x="572.5" y="531.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="575.5" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (15 samples, 0.03%)</title><rect x="572.8" y="531.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="575.8" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (27 samples, 0.06%)</title><rect x="573.2" y="531.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="576.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.04%)</title><rect x="574.1" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="577.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.04%)</title><rect x="574.1" y="515.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.1" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.get$Lambda (19 samples, 0.04%)</title><rect x="574.1" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="577.1" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$131 (19 samples, 0.04%)</title><rect x="574.1" y="483.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="577.1" y="494.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (12 samples, 0.03%)</title><rect x="574.6" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="577.6" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (12 samples, 0.03%)</title><rect x="574.6" y="515.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="577.6" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (187 samples, 0.44%)</title><rect x="575.0" y="531.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="578.0" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.accept (187 samples, 0.44%)</title><rect x="575.0" y="515.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.0" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (187 samples, 0.44%)</title><rect x="575.0" y="499.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="578.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.06%)</title><rect x="575.0" y="483.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.06%)</title><rect x="575.0" y="467.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.0" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1026326437.get$Lambda (25 samples, 0.06%)</title><rect x="575.0" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="578.0" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$141 (25 samples, 0.06%)</title><rect x="575.0" y="435.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="578.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (37 samples, 0.09%)</title><rect x="575.6" y="483.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="578.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1026326437.accept (37 samples, 0.09%)</title><rect x="575.6" y="467.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="578.6" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (37 samples, 0.09%)</title><rect x="575.6" y="451.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (37 samples, 0.09%)</title><rect x="575.6" y="435.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="578.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (37 samples, 0.09%)</title><rect x="575.6" y="419.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="578.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (37 samples, 0.09%)</title><rect x="575.6" y="403.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="578.6" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (37 samples, 0.09%)</title><rect x="575.6" y="387.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="578.6" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (37 samples, 0.09%)</title><rect x="575.6" y="371.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.6" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (37 samples, 0.09%)</title><rect x="575.6" y="355.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="578.6" y="366.0"></text>
</g>
<g>
<title>java/util/List.copyOf (69 samples, 0.16%)</title><rect x="576.7" y="483.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="579.7" y="494.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (69 samples, 0.16%)</title><rect x="576.7" y="467.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="579.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (36 samples, 0.08%)</title><rect x="576.7" y="451.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="579.7" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (36 samples, 0.08%)</title><rect x="576.7" y="435.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="579.7" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (36 samples, 0.08%)</title><rect x="576.7" y="419.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="579.7" y="430.0"></text>
</g>
<g>
<title>java/util/List.of (33 samples, 0.08%)</title><rect x="577.6" y="451.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="580.6" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (33 samples, 0.08%)</title><rect x="577.6" y="435.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="580.6" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (56 samples, 0.13%)</title><rect x="578.6" y="483.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="581.6" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (56 samples, 0.13%)</title><rect x="578.6" y="467.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="581.6" y="478.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (29 samples, 0.07%)</title><rect x="580.1" y="531.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="583.1" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (29 samples, 0.07%)</title><rect x="580.1" y="515.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="583.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (538 samples, 1.25%)</title><rect x="580.9" y="579.0" width="14.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="583.9" y="590.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (30 samples, 0.07%)</title><rect x="580.9" y="563.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="583.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (31 samples, 0.07%)</title><rect x="581.7" y="563.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="584.7" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (31 samples, 0.07%)</title><rect x="581.7" y="547.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="584.7" y="558.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.07%)</title><rect x="581.7" y="531.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="584.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (73 samples, 0.17%)</title><rect x="582.6" y="563.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (73 samples, 0.17%)</title><rect x="582.6" y="547.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="585.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.07%)</title><rect x="582.6" y="531.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="585.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (44 samples, 0.10%)</title><rect x="583.4" y="531.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="586.4" y="542.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.10%)</title><rect x="583.4" y="515.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="586.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (404 samples, 0.94%)</title><rect x="584.6" y="563.0" width="11.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="587.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (127 samples, 0.30%)</title><rect x="584.6" y="547.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="587.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (127 samples, 0.30%)</title><rect x="584.6" y="531.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="587.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (69 samples, 0.16%)</title><rect x="584.6" y="515.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="587.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (58 samples, 0.13%)</title><rect x="586.5" y="515.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="589.5" y="526.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.13%)</title><rect x="586.5" y="499.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="589.5" y="510.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (59 samples, 0.14%)</title><rect x="588.1" y="547.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="591.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (59 samples, 0.14%)</title><rect x="588.1" y="531.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.1" y="542.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.07%)</title><rect x="588.1" y="515.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="591.1" y="526.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.07%)</title><rect x="588.9" y="515.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="591.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.trim (48 samples, 0.11%)</title><rect x="589.7" y="547.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="592.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (48 samples, 0.11%)</title><rect x="589.7" y="531.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="592.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (48 samples, 0.11%)</title><rect x="589.7" y="515.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="592.7" y="526.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.07%)</title><rect x="589.7" y="499.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="592.7" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.04%)</title><rect x="590.5" y="499.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.5" y="510.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.04%)</title><rect x="590.5" y="483.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="593.5" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (66 samples, 0.15%)</title><rect x="591.0" y="547.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="594.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (66 samples, 0.15%)</title><rect x="591.0" y="531.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (66 samples, 0.15%)</title><rect x="591.0" y="515.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (66 samples, 0.15%)</title><rect x="591.0" y="499.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="594.0" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (66 samples, 0.15%)</title><rect x="591.0" y="483.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="594.0" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (66 samples, 0.15%)</title><rect x="591.0" y="467.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="594.0" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (104 samples, 0.24%)</title><rect x="592.8" y="547.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.8" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (42 samples, 0.10%)</title><rect x="592.8" y="531.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.8" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (42 samples, 0.10%)</title><rect x="592.8" y="515.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="595.8" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (40 samples, 0.09%)</title><rect x="594.0" y="531.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="597.0" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (40 samples, 0.09%)</title><rect x="594.0" y="515.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="597.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$386/1694216227.apply (22 samples, 0.05%)</title><rect x="595.1" y="531.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="598.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (22 samples, 0.05%)</title><rect x="595.1" y="515.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="598.1" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (22 samples, 0.05%)</title><rect x="595.1" y="499.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="598.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (402 samples, 0.94%)</title><rect x="595.7" y="707.0" width="11.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="598.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (402 samples, 0.94%)</title><rect x="595.7" y="691.0" width="11.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="598.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (402 samples, 0.94%)</title><rect x="595.7" y="675.0" width="11.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="598.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$270/1387273586.run (402 samples, 0.94%)</title><rect x="595.7" y="659.0" width="11.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="598.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (402 samples, 0.94%)</title><rect x="595.7" y="643.0" width="11.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="598.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (395 samples, 0.92%)</title><rect x="595.7" y="627.0" width="10.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="598.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.06%)</title><rect x="595.7" y="611.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="598.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.06%)</title><rect x="595.7" y="595.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="598.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$293/45308323.get$Lambda (18 samples, 0.04%)</title><rect x="595.9" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="598.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$293 (18 samples, 0.04%)</title><rect x="595.9" y="563.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="598.9" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (24 samples, 0.06%)</title><rect x="596.4" y="611.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="599.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (22 samples, 0.05%)</title><rect x="597.0" y="611.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (22 samples, 0.05%)</title><rect x="597.0" y="595.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="600.0" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (10 samples, 0.02%)</title><rect x="597.0" y="579.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="600.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (12 samples, 0.03%)</title><rect x="597.3" y="579.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="600.3" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (12 samples, 0.03%)</title><rect x="597.3" y="563.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="600.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (323 samples, 0.75%)</title><rect x="597.6" y="611.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="600.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (323 samples, 0.75%)</title><rect x="597.6" y="595.0" width="8.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$402/1777809380.run (290 samples, 0.67%)</title><rect x="597.6" y="579.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="600.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (290 samples, 0.67%)</title><rect x="597.6" y="563.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="600.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (290 samples, 0.67%)</title><rect x="597.6" y="547.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="600.6" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (87 samples, 0.20%)</title><rect x="597.6" y="531.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.6" y="542.0"></text>
</g>
<g>
<title>java/util/Collection.stream (59 samples, 0.14%)</title><rect x="597.6" y="515.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.6" y="526.0"></text>
</g>
<g>
<title>java/util/List.spliterator (18 samples, 0.04%)</title><rect x="597.6" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="600.6" y="510.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (18 samples, 0.04%)</title><rect x="597.6" y="483.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="600.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (41 samples, 0.10%)</title><rect x="598.1" y="499.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.1" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (41 samples, 0.10%)</title><rect x="598.1" y="483.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="601.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (28 samples, 0.07%)</title><rect x="599.3" y="515.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="602.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (28 samples, 0.07%)</title><rect x="599.3" y="499.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="602.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (28 samples, 0.07%)</title><rect x="599.3" y="483.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$60/550302731.get (13 samples, 0.03%)</title><rect x="599.3" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.3" y="478.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (13 samples, 0.03%)</title><rect x="599.3" y="451.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="602.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (15 samples, 0.03%)</title><rect x="599.6" y="467.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="602.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (15 samples, 0.03%)</title><rect x="599.6" y="451.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.6" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.of (15 samples, 0.03%)</title><rect x="599.6" y="435.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="602.6" y="446.0"></text>
</g>
<g>
<title>java.util.Optional (15 samples, 0.03%)</title><rect x="599.6" y="419.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="602.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (197 samples, 0.46%)</title><rect x="600.2" y="531.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="603.2" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.now (17 samples, 0.04%)</title><rect x="600.2" y="515.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.2" y="526.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (17 samples, 0.04%)</title><rect x="600.2" y="499.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.2" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (17 samples, 0.04%)</title><rect x="600.2" y="483.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="603.2" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.create (17 samples, 0.04%)</title><rect x="600.2" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.2" y="478.0"></text>
</g>
<g>
<title>java.time.Instant (17 samples, 0.04%)</title><rect x="600.2" y="451.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="603.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (180 samples, 0.42%)</title><rect x="600.7" y="515.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (58 samples, 0.13%)</title><rect x="600.7" y="499.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="603.7" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plus (12 samples, 0.03%)</title><rect x="600.7" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="603.7" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (12 samples, 0.03%)</title><rect x="600.7" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.7" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (12 samples, 0.03%)</title><rect x="600.7" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="603.7" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (12 samples, 0.03%)</title><rect x="600.7" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.7" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.create (12 samples, 0.03%)</title><rect x="600.7" y="419.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="603.7" y="430.0"></text>
</g>
<g>
<title>java.time.Instant (12 samples, 0.03%)</title><rect x="600.7" y="403.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="603.7" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (13 samples, 0.03%)</title><rect x="601.0" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="604.0" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (13 samples, 0.03%)</title><rect x="601.0" y="467.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.0" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (13 samples, 0.03%)</title><rect x="601.0" y="451.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="604.0" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (13 samples, 0.03%)</title><rect x="601.0" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="604.0" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.create (13 samples, 0.03%)</title><rect x="601.0" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="604.0" y="430.0"></text>
</g>
<g>
<title>java.time.Instant (13 samples, 0.03%)</title><rect x="601.0" y="403.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="604.0" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (14 samples, 0.03%)</title><rect x="601.4" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="604.4" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (14 samples, 0.03%)</title><rect x="601.4" y="467.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="604.4" y="478.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (14 samples, 0.03%)</title><rect x="601.4" y="451.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="604.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (18 samples, 0.04%)</title><rect x="601.8" y="483.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="604.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (51 samples, 0.12%)</title><rect x="602.3" y="499.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="605.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.get (18 samples, 0.04%)</title><rect x="602.3" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.3" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (18 samples, 0.04%)</title><rect x="602.3" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="605.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (18 samples, 0.04%)</title><rect x="602.3" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="605.3" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.04%)</title><rect x="602.3" y="435.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="605.3" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (10 samples, 0.02%)</title><rect x="602.7" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.7" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (10 samples, 0.02%)</title><rect x="602.7" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.7" y="478.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (10 samples, 0.02%)</title><rect x="602.7" y="451.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="605.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (23 samples, 0.05%)</title><rect x="603.0" y="483.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="606.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (23 samples, 0.05%)</title><rect x="603.0" y="467.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="606.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (71 samples, 0.17%)</title><rect x="603.7" y="499.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (24 samples, 0.06%)</title><rect x="603.7" y="483.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="606.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (47 samples, 0.11%)</title><rect x="604.3" y="483.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (17 samples, 0.04%)</title><rect x="604.3" y="467.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (17 samples, 0.04%)</title><rect x="604.3" y="451.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (17 samples, 0.04%)</title><rect x="604.3" y="435.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="607.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (17 samples, 0.04%)</title><rect x="604.3" y="419.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="607.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (30 samples, 0.07%)</title><rect x="604.8" y="467.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (30 samples, 0.07%)</title><rect x="604.8" y="451.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (22 samples, 0.05%)</title><rect x="604.8" y="435.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="607.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (33 samples, 0.08%)</title><rect x="605.6" y="579.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="608.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (33 samples, 0.08%)</title><rect x="605.6" y="563.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="608.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (33 samples, 0.08%)</title><rect x="605.6" y="547.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="608.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (33 samples, 0.08%)</title><rect x="605.6" y="531.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (33 samples, 0.08%)</title><rect x="605.6" y="515.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="608.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (33 samples, 0.08%)</title><rect x="605.6" y="499.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="608.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (33 samples, 0.08%)</title><rect x="605.6" y="483.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="608.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$420/1846817389.accept (33 samples, 0.08%)</title><rect x="605.6" y="467.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="608.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (33 samples, 0.08%)</title><rect x="605.6" y="451.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (33 samples, 0.08%)</title><rect x="605.6" y="435.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="608.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (33 samples, 0.08%)</title><rect x="605.6" y="419.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (33 samples, 0.08%)</title><rect x="605.6" y="403.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="608.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$428/1182523009.apply (33 samples, 0.08%)</title><rect x="605.6" y="387.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (33 samples, 0.08%)</title><rect x="605.6" y="371.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="608.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (33 samples, 0.08%)</title><rect x="605.6" y="355.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="608.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (102 samples, 0.24%)</title><rect x="606.7" y="787.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="609.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (102 samples, 0.24%)</title><rect x="606.7" y="771.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="609.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (102 samples, 0.24%)</title><rect x="606.7" y="755.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="609.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (102 samples, 0.24%)</title><rect x="606.7" y="739.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="609.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (102 samples, 0.24%)</title><rect x="606.7" y="723.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="609.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (102 samples, 0.24%)</title><rect x="606.7" y="707.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="609.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (102 samples, 0.24%)</title><rect x="606.7" y="691.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="609.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (102 samples, 0.24%)</title><rect x="606.7" y="675.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="609.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (102 samples, 0.24%)</title><rect x="606.7" y="659.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="609.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (102 samples, 0.24%)</title><rect x="606.7" y="643.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="609.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (102 samples, 0.24%)</title><rect x="606.7" y="627.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="609.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (102 samples, 0.24%)</title><rect x="606.7" y="611.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="609.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (102 samples, 0.24%)</title><rect x="606.7" y="595.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="609.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (102 samples, 0.24%)</title><rect x="606.7" y="579.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="609.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (102 samples, 0.24%)</title><rect x="606.7" y="563.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (102 samples, 0.24%)</title><rect x="606.7" y="547.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (102 samples, 0.24%)</title><rect x="606.7" y="531.0" width="2.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="609.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,609 samples, 3.74%)</title><rect x="609.5" y="787.0" width="44.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="612.5" y="798.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.09%)</title><rect x="609.5" y="771.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="612.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.09%)</title><rect x="609.5" y="755.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="612.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$325/336932547.get$Lambda (29 samples, 0.07%)</title><rect x="609.5" y="739.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="612.5" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$325 (29 samples, 0.07%)</title><rect x="609.5" y="723.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="612.5" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/558216562.linkToTargetMethod (40 samples, 0.09%)</title><rect x="610.5" y="771.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="613.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.09%)</title><rect x="610.5" y="755.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="613.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$328/1363851879.get$Lambda (40 samples, 0.09%)</title><rect x="610.5" y="739.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.5" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$328 (40 samples, 0.09%)</title><rect x="610.5" y="723.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="613.5" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (373 samples, 0.87%)</title><rect x="611.6" y="771.0" width="10.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="614.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$329/591297947.accept (293 samples, 0.68%)</title><rect x="611.6" y="755.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (293 samples, 0.68%)</title><rect x="611.6" y="739.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="614.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (293 samples, 0.68%)</title><rect x="611.6" y="723.0" width="8.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="614.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (293 samples, 0.68%)</title><rect x="611.6" y="707.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="614.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (293 samples, 0.68%)</title><rect x="611.6" y="691.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (293 samples, 0.68%)</title><rect x="611.6" y="675.0" width="8.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="614.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (293 samples, 0.68%)</title><rect x="611.6" y="659.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="614.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (293 samples, 0.68%)</title><rect x="611.6" y="643.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="614.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (293 samples, 0.68%)</title><rect x="611.6" y="627.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="614.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (293 samples, 0.68%)</title><rect x="611.6" y="611.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="614.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$242/950557252.run (293 samples, 0.68%)</title><rect x="611.6" y="595.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="614.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (293 samples, 0.68%)</title><rect x="611.6" y="579.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="614.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (37 samples, 0.09%)</title><rect x="611.6" y="563.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="614.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (37 samples, 0.09%)</title><rect x="611.6" y="547.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (37 samples, 0.09%)</title><rect x="611.6" y="531.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="614.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (33 samples, 0.08%)</title><rect x="611.6" y="515.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (33 samples, 0.08%)</title><rect x="611.6" y="499.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="614.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (33 samples, 0.08%)</title><rect x="611.6" y="483.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="614.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (33 samples, 0.08%)</title><rect x="611.6" y="467.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="614.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (33 samples, 0.08%)</title><rect x="611.6" y="451.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="614.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (37 samples, 0.09%)</title><rect x="612.6" y="563.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="615.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.09%)</title><rect x="612.6" y="547.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="615.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.09%)</title><rect x="612.6" y="531.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="615.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$353/182948253.get$Lambda (37 samples, 0.09%)</title><rect x="612.6" y="515.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="615.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$353 (37 samples, 0.09%)</title><rect x="612.6" y="499.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="615.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (219 samples, 0.51%)</title><rect x="613.6" y="563.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="616.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (122 samples, 0.28%)</title><rect x="613.6" y="547.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="616.6" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (81 samples, 0.19%)</title><rect x="613.6" y="531.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="616.6" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (81 samples, 0.19%)</title><rect x="613.6" y="515.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="616.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (41 samples, 0.10%)</title><rect x="615.9" y="531.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="618.9" y="542.0"></text>
</g>
<g>
<title>java/util/List.of (41 samples, 0.10%)</title><rect x="615.9" y="515.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.9" y="526.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (41 samples, 0.10%)</title><rect x="615.9" y="499.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="618.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (97 samples, 0.23%)</title><rect x="617.0" y="547.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="620.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$234/991350063.get (97 samples, 0.23%)</title><rect x="617.0" y="531.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="620.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (97 samples, 0.23%)</title><rect x="617.0" y="515.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="620.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (97 samples, 0.23%)</title><rect x="617.0" y="499.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="620.0" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (97 samples, 0.23%)</title><rect x="617.0" y="483.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="620.0" y="494.0"></text>
</g>
<g>
<title>byte[] (92 samples, 0.21%)</title><rect x="617.1" y="467.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="620.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$336/1064311059.accept (80 samples, 0.19%)</title><rect x="619.7" y="755.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="622.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (80 samples, 0.19%)</title><rect x="619.7" y="739.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="622.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$328/1363851879.run (80 samples, 0.19%)</title><rect x="619.7" y="723.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="622.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (80 samples, 0.19%)</title><rect x="619.7" y="707.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (80 samples, 0.19%)</title><rect x="619.7" y="691.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="622.7" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (80 samples, 0.19%)</title><rect x="619.7" y="675.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="622.7" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (80 samples, 0.19%)</title><rect x="619.7" y="659.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.7" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (80 samples, 0.19%)</title><rect x="619.7" y="643.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="622.7" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (229 samples, 0.53%)</title><rect x="621.9" y="771.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.9" y="782.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (229 samples, 0.53%)</title><rect x="621.9" y="755.0" width="6.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="624.9" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (85 samples, 0.20%)</title><rect x="628.1" y="771.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (43 samples, 0.10%)</title><rect x="628.1" y="755.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.1" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (43 samples, 0.10%)</title><rect x="628.1" y="739.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="631.1" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (43 samples, 0.10%)</title><rect x="628.1" y="723.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.1" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (43 samples, 0.10%)</title><rect x="628.1" y="707.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="631.1" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (43 samples, 0.10%)</title><rect x="628.1" y="691.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.1" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (43 samples, 0.10%)</title><rect x="628.1" y="675.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="631.1" y="686.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (43 samples, 0.10%)</title><rect x="628.1" y="659.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="631.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (42 samples, 0.10%)</title><rect x="629.3" y="755.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="632.3" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (42 samples, 0.10%)</title><rect x="629.3" y="739.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="632.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (168 samples, 0.39%)</title><rect x="630.5" y="771.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$250/1665419686.run (109 samples, 0.25%)</title><rect x="630.5" y="755.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="633.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (109 samples, 0.25%)</title><rect x="630.5" y="739.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (109 samples, 0.25%)</title><rect x="630.5" y="723.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (109 samples, 0.25%)</title><rect x="630.5" y="707.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (109 samples, 0.25%)</title><rect x="630.5" y="691.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (109 samples, 0.25%)</title><rect x="630.5" y="675.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$242/950557252.run (109 samples, 0.25%)</title><rect x="630.5" y="659.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="633.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (109 samples, 0.25%)</title><rect x="630.5" y="643.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="633.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (109 samples, 0.25%)</title><rect x="630.5" y="627.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="633.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (109 samples, 0.25%)</title><rect x="630.5" y="611.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="633.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (108 samples, 0.25%)</title><rect x="630.5" y="595.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="633.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (108 samples, 0.25%)</title><rect x="630.5" y="579.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (108 samples, 0.25%)</title><rect x="630.5" y="563.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="633.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/116669570.linkToTargetMethod (81 samples, 0.19%)</title><rect x="630.5" y="547.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/454884231.invoke (81 samples, 0.19%)</title><rect x="630.5" y="531.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="633.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (81 samples, 0.19%)</title><rect x="630.5" y="515.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (81 samples, 0.19%)</title><rect x="630.5" y="499.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="633.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (81 samples, 0.19%)</title><rect x="630.5" y="483.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="633.5" y="494.0"></text>
</g>
<g>
<title>byte[] (81 samples, 0.19%)</title><rect x="630.5" y="467.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="633.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (27 samples, 0.06%)</title><rect x="632.7" y="547.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.06%)</title><rect x="632.7" y="531.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="635.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.06%)</title><rect x="632.7" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$353/182948253.get$Lambda (27 samples, 0.06%)</title><rect x="632.7" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$353 (27 samples, 0.06%)</title><rect x="632.7" y="483.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="635.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$260/374484389.run (59 samples, 0.14%)</title><rect x="633.5" y="755.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="636.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (59 samples, 0.14%)</title><rect x="633.5" y="739.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="636.5" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.13%)</title><rect x="633.5" y="723.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.5" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.13%)</title><rect x="633.5" y="707.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="636.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$344/2115454959.get$Lambda (57 samples, 0.13%)</title><rect x="633.5" y="691.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="636.5" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$344 (57 samples, 0.13%)</title><rect x="633.5" y="675.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="636.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (196 samples, 0.46%)</title><rect x="635.1" y="771.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="638.1" y="782.0"></text>
</g>
<g>
<title>java/time/Instant.now (47 samples, 0.11%)</title><rect x="635.1" y="755.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="638.1" y="766.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (47 samples, 0.11%)</title><rect x="635.1" y="739.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="638.1" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (47 samples, 0.11%)</title><rect x="635.1" y="723.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="638.1" y="734.0"></text>
</g>
<g>
<title>java/time/Instant.create (47 samples, 0.11%)</title><rect x="635.1" y="707.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="638.1" y="718.0"></text>
</g>
<g>
<title>java.time.Instant (47 samples, 0.11%)</title><rect x="635.1" y="691.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="638.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (149 samples, 0.35%)</title><rect x="636.4" y="755.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.06%)</title><rect x="636.4" y="739.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.06%)</title><rect x="636.4" y="723.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$437/211809538.get$Lambda (26 samples, 0.06%)</title><rect x="636.4" y="707.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.4" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$437 (26 samples, 0.06%)</title><rect x="636.4" y="691.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="639.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (123 samples, 0.29%)</title><rect x="637.1" y="739.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="640.1" y="750.0"></text>
</g>
<g>
<title>java.util.ArrayList (57 samples, 0.13%)</title><rect x="637.1" y="723.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="640.1" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (66 samples, 0.15%)</title><rect x="638.7" y="723.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="641.7" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (66 samples, 0.15%)</title><rect x="638.7" y="707.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="641.7" y="718.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (66 samples, 0.15%)</title><rect x="638.7" y="691.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="641.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (312 samples, 0.73%)</title><rect x="640.5" y="771.0" width="8.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.07%)</title><rect x="640.5" y="755.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.07%)</title><rect x="640.5" y="739.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$324/1343189537.get$Lambda (30 samples, 0.07%)</title><rect x="640.5" y="723.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.5" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$324 (30 samples, 0.07%)</title><rect x="640.5" y="707.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="643.5" y="718.0"></text>
</g>
<g>
<title>java/util/Collection.stream (149 samples, 0.35%)</title><rect x="641.3" y="755.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="644.3" y="766.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (61 samples, 0.14%)</title><rect x="641.3" y="739.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="644.3" y="750.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (61 samples, 0.14%)</title><rect x="641.3" y="723.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="644.3" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (88 samples, 0.20%)</title><rect x="643.0" y="739.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="646.0" y="750.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (88 samples, 0.20%)</title><rect x="643.0" y="723.0" width="2.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="646.0" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (133 samples, 0.31%)</title><rect x="645.4" y="755.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="648.4" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (133 samples, 0.31%)</title><rect x="645.4" y="739.0" width="3.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="648.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (103 samples, 0.24%)</title><rect x="649.0" y="771.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.0" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (103 samples, 0.24%)</title><rect x="649.0" y="755.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="652.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (103 samples, 0.24%)</title><rect x="649.0" y="739.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="652.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (103 samples, 0.24%)</title><rect x="649.0" y="723.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="652.0" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (33 samples, 0.08%)</title><rect x="649.0" y="707.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="652.0" y="718.0"></text>
</g>
<g>
<title>java.lang.Integer (33 samples, 0.08%)</title><rect x="649.0" y="691.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="652.0" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (70 samples, 0.16%)</title><rect x="650.0" y="707.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="653.0" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.add (70 samples, 0.16%)</title><rect x="650.0" y="691.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="653.0" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (70 samples, 0.16%)</title><rect x="650.0" y="675.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.0" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (70 samples, 0.16%)</title><rect x="650.0" y="659.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="653.0" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (70 samples, 0.16%)</title><rect x="650.0" y="643.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.0" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (70 samples, 0.16%)</title><rect x="650.0" y="627.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="653.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (37 samples, 0.09%)</title><rect x="651.9" y="771.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="654.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (37 samples, 0.09%)</title><rect x="651.9" y="755.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="654.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (37 samples, 0.09%)</title><rect x="651.9" y="739.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.9" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (37 samples, 0.09%)</title><rect x="651.9" y="723.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.9" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (35 samples, 0.08%)</title><rect x="651.9" y="707.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.9" y="718.0"></text>
</g>
<g>
<title>java.lang.Integer (35 samples, 0.08%)</title><rect x="651.9" y="691.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="654.9" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (29 samples, 0.07%)</title><rect x="652.9" y="771.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="655.9" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (29 samples, 0.07%)</title><rect x="652.9" y="755.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="655.9" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (29 samples, 0.07%)</title><rect x="652.9" y="739.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="655.9" y="750.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (29 samples, 0.07%)</title><rect x="652.9" y="723.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="655.9" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (19,530 samples, 45.45%)</title><rect x="653.7" y="787.0" width="536.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="656.7" y="798.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (213 samples, 0.50%)</title><rect x="653.7" y="771.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.7" y="782.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (213 samples, 0.50%)</title><rect x="653.7" y="755.0" width="5.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="656.7" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (19,317 samples, 44.95%)</title><rect x="659.5" y="771.0" width="530.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.5" y="782.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (19,317 samples, 44.95%)</title><rect x="659.5" y="755.0" width="530.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="662.5" y="766.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (19,317 samples, 44.95%)</title><rect x="659.5" y="739.0" width="530.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="662.5" y="750.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (9,810 samples, 22.83%)</title><rect x="659.5" y="723.0" width="269.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="662.5" y="734.0">one/nio/http/HttpSession.handleParse..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (9,810 samples, 22.83%)</title><rect x="659.5" y="707.0" width="269.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="662.5" y="718.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (9,222 samples, 21.46%)</title><rect x="659.5" y="691.0" width="253.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="662.5" y="702.0">RequestHandler1_response.handleReq..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (472 samples, 1.10%)</title><rect x="659.5" y="675.0" width="13.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="662.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (472 samples, 1.10%)</title><rect x="659.5" y="659.0" width="13.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="662.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (472 samples, 1.10%)</title><rect x="659.5" y="643.0" width="13.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="662.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (472 samples, 1.10%)</title><rect x="659.5" y="627.0" width="13.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.5" y="638.0"></text>
</g>
<g>
<title>java.lang.String (236 samples, 0.55%)</title><rect x="659.5" y="611.0" width="6.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="662.5" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (236 samples, 0.55%)</title><rect x="666.0" y="611.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.0" y="622.0"></text>
</g>
<g>
<title>byte[] (236 samples, 0.55%)</title><rect x="666.0" y="595.0" width="6.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="669.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (8,750 samples, 20.36%)</title><rect x="672.5" y="675.0" width="240.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="675.5" y="686.0">ru/mail/polis/service/mrsandman5..</text>
</g>
<g>
<title>java/lang/String.getBytes (272 samples, 0.63%)</title><rect x="672.5" y="659.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="675.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (272 samples, 0.63%)</title><rect x="672.5" y="643.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (272 samples, 0.63%)</title><rect x="672.5" y="627.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="675.5" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (272 samples, 0.63%)</title><rect x="672.5" y="611.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="675.5" y="622.0"></text>
</g>
<g>
<title>byte[] (272 samples, 0.63%)</title><rect x="672.5" y="595.0" width="7.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="675.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (617 samples, 1.44%)</title><rect x="680.0" y="659.0" width="16.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.0" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (617 samples, 1.44%)</title><rect x="680.0" y="643.0" width="16.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="683.0" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (617 samples, 1.44%)</title><rect x="680.0" y="627.0" width="16.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="683.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (581 samples, 1.35%)</title><rect x="696.9" y="659.0" width="16.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="699.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (581 samples, 1.35%)</title><rect x="696.9" y="643.0" width="16.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="699.9" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (581 samples, 1.35%)</title><rect x="696.9" y="627.0" width="16.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="699.9" y="638.0"></text>
</g>
<g>
<title>java.lang.String (331 samples, 0.77%)</title><rect x="696.9" y="611.0" width="9.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="699.9" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (250 samples, 0.58%)</title><rect x="706.0" y="611.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.0" y="622.0"></text>
</g>
<g>
<title>byte[] (250 samples, 0.58%)</title><rect x="706.0" y="595.0" width="6.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="709.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.replicasPut (5,701 samples, 13.27%)</title><rect x="712.9" y="659.0" width="156.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="715.9" y="670.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>java.util.ArrayList (23 samples, 0.05%)</title><rect x="712.9" y="643.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="715.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.03%)</title><rect x="713.5" y="643.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="716.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.03%)</title><rect x="713.5" y="627.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="716.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$120/1851269310.get$Lambda (14 samples, 0.03%)</title><rect x="713.5" y="611.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="716.5" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$120 (14 samples, 0.03%)</title><rect x="713.5" y="595.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="716.5" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (32 samples, 0.07%)</title><rect x="713.9" y="643.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="716.9" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (32 samples, 0.07%)</title><rect x="713.9" y="627.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="716.9" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (19 samples, 0.04%)</title><rect x="714.8" y="643.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="717.8" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (19 samples, 0.04%)</title><rect x="714.8" y="627.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="717.8" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (40 samples, 0.09%)</title><rect x="715.3" y="643.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="718.3" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (28 samples, 0.07%)</title><rect x="715.3" y="627.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.3" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (28 samples, 0.07%)</title><rect x="715.3" y="611.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="718.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (12 samples, 0.03%)</title><rect x="716.1" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.1" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (12 samples, 0.03%)</title><rect x="716.1" y="611.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="719.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (37 samples, 0.09%)</title><rect x="716.4" y="643.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="719.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (37 samples, 0.09%)</title><rect x="716.4" y="627.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (22 samples, 0.05%)</title><rect x="716.4" y="611.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="719.4" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (15 samples, 0.03%)</title><rect x="717.0" y="611.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="720.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (150 samples, 0.35%)</title><rect x="717.4" y="643.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="720.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (150 samples, 0.35%)</title><rect x="717.4" y="627.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="720.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (93 samples, 0.22%)</title><rect x="717.4" y="611.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="720.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (48 samples, 0.11%)</title><rect x="720.2" y="611.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="723.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (48 samples, 0.11%)</title><rect x="720.2" y="595.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="723.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (48 samples, 0.11%)</title><rect x="720.2" y="579.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="723.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (2,924 samples, 6.80%)</title><rect x="721.5" y="643.0" width="80.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.5" y="654.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (2,924 samples, 6.80%)</title><rect x="721.5" y="627.0" width="80.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="724.5" y="638.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (2,924 samples, 6.80%)</title><rect x="721.5" y="611.0" width="80.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.5" y="622.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (2,924 samples, 6.80%)</title><rect x="721.5" y="595.0" width="80.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.5" y="606.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.06%)</title><rect x="721.5" y="579.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="724.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.06%)</title><rect x="721.5" y="563.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="724.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$177/1623483085.get$Lambda (27 samples, 0.06%)</title><rect x="721.5" y="547.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$177 (27 samples, 0.06%)</title><rect x="721.5" y="531.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="724.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (103 samples, 0.24%)</title><rect x="722.3" y="579.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="725.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (103 samples, 0.24%)</title><rect x="722.3" y="563.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="725.3" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (66 samples, 0.15%)</title><rect x="722.3" y="547.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="725.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.09%)</title><rect x="724.1" y="547.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.09%)</title><rect x="724.1" y="531.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="727.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (37 samples, 0.09%)</title><rect x="724.1" y="515.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="727.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (115 samples, 0.27%)</title><rect x="725.1" y="579.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="728.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (115 samples, 0.27%)</title><rect x="725.1" y="563.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="728.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (64 samples, 0.15%)</title><rect x="725.1" y="547.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="728.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.12%)</title><rect x="726.8" y="547.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.12%)</title><rect x="726.8" y="531.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="729.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.12%)</title><rect x="726.8" y="515.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="729.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (80 samples, 0.19%)</title><rect x="728.2" y="579.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="731.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (130 samples, 0.30%)</title><rect x="730.4" y="579.0" width="3.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="733.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (1,475 samples, 3.43%)</title><rect x="734.0" y="579.0" width="40.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="737.0" y="590.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (150 samples, 0.35%)</title><rect x="734.0" y="563.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="737.0" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (122 samples, 0.28%)</title><rect x="734.0" y="547.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="737.0" y="558.0"></text>
</g>
<g>
<title>java/util/List.spliterator (33 samples, 0.08%)</title><rect x="734.0" y="531.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="737.0" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (33 samples, 0.08%)</title><rect x="734.0" y="515.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="737.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (89 samples, 0.21%)</title><rect x="734.9" y="531.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="737.9" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (89 samples, 0.21%)</title><rect x="734.9" y="515.0" width="2.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="737.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (28 samples, 0.07%)</title><rect x="737.4" y="547.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.4" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (28 samples, 0.07%)</title><rect x="737.4" y="531.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="740.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (28 samples, 0.07%)</title><rect x="737.4" y="515.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="740.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$60/550302731.get (28 samples, 0.07%)</title><rect x="737.4" y="499.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.4" y="510.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (28 samples, 0.07%)</title><rect x="737.4" y="483.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="740.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (571 samples, 1.33%)</title><rect x="738.1" y="563.0" width="15.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="741.1" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (571 samples, 1.33%)</title><rect x="738.1" y="547.0" width="15.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="741.1" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (24 samples, 0.06%)</title><rect x="738.1" y="531.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="741.1" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (39 samples, 0.09%)</title><rect x="738.8" y="531.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="741.8" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (70 samples, 0.16%)</title><rect x="739.9" y="531.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="742.9" y="542.0"></text>
</g>
<g>
<title>java.util.TreeSet (19 samples, 0.04%)</title><rect x="741.8" y="531.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="744.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 0.11%)</title><rect x="742.3" y="531.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 0.11%)</title><rect x="742.3" y="515.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.3" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.get$Lambda (46 samples, 0.11%)</title><rect x="742.3" y="499.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.3" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$131 (46 samples, 0.11%)</title><rect x="742.3" y="483.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="745.3" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (252 samples, 0.59%)</title><rect x="743.6" y="531.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.6" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (252 samples, 0.59%)</title><rect x="743.6" y="515.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.6" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.accept (252 samples, 0.59%)</title><rect x="743.6" y="499.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="746.6" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (252 samples, 0.59%)</title><rect x="743.6" y="483.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.6" y="494.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (84 samples, 0.20%)</title><rect x="743.6" y="467.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="746.6" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1026326437.accept (84 samples, 0.20%)</title><rect x="743.6" y="451.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="746.6" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (84 samples, 0.20%)</title><rect x="743.6" y="435.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (84 samples, 0.20%)</title><rect x="743.6" y="419.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="746.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (84 samples, 0.20%)</title><rect x="743.6" y="403.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.6" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (84 samples, 0.20%)</title><rect x="743.6" y="387.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="746.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (84 samples, 0.20%)</title><rect x="743.6" y="371.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="746.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (84 samples, 0.20%)</title><rect x="743.6" y="355.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="746.6" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (84 samples, 0.20%)</title><rect x="743.6" y="339.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="746.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.07%)</title><rect x="745.9" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="748.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.07%)</title><rect x="745.9" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="748.9" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1026326437.get$Lambda (28 samples, 0.07%)</title><rect x="745.9" y="435.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="748.9" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$141 (28 samples, 0.07%)</title><rect x="745.9" y="419.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="748.9" y="430.0"></text>
</g>
<g>
<title>java/util/List.copyOf (80 samples, 0.19%)</title><rect x="746.6" y="467.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="749.6" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (80 samples, 0.19%)</title><rect x="746.6" y="451.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="749.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (35 samples, 0.08%)</title><rect x="746.6" y="435.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="749.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (35 samples, 0.08%)</title><rect x="746.6" y="419.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="749.6" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (35 samples, 0.08%)</title><rect x="746.6" y="403.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="749.6" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (45 samples, 0.10%)</title><rect x="747.6" y="435.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.6" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (45 samples, 0.10%)</title><rect x="747.6" y="419.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="750.6" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (60 samples, 0.14%)</title><rect x="748.8" y="467.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.8" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (60 samples, 0.14%)</title><rect x="748.8" y="451.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="751.8" y="462.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (48 samples, 0.11%)</title><rect x="750.5" y="531.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="753.5" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (48 samples, 0.11%)</title><rect x="750.5" y="515.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="753.5" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (73 samples, 0.17%)</title><rect x="751.8" y="531.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="754.8" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (73 samples, 0.17%)</title><rect x="751.8" y="515.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="754.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (31 samples, 0.07%)</title><rect x="753.8" y="563.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="756.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (529 samples, 1.23%)</title><rect x="754.7" y="563.0" width="14.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="757.7" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (529 samples, 1.23%)</title><rect x="754.7" y="547.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="757.7" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (469 samples, 1.09%)</title><rect x="754.7" y="531.0" width="12.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="757.7" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (469 samples, 1.09%)</title><rect x="754.7" y="515.0" width="12.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="757.7" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (469 samples, 1.09%)</title><rect x="754.7" y="499.0" width="12.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="757.7" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (101 samples, 0.24%)</title><rect x="754.7" y="483.0" width="2.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="757.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (144 samples, 0.34%)</title><rect x="757.4" y="483.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.4" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (144 samples, 0.34%)</title><rect x="757.4" y="467.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.4" y="478.0"></text>
</g>
<g>
<title>byte[] (144 samples, 0.34%)</title><rect x="757.4" y="451.0" width="4.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="760.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (224 samples, 0.52%)</title><rect x="761.4" y="483.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="764.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (224 samples, 0.52%)</title><rect x="761.4" y="467.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="764.4" y="478.0"></text>
</g>
<g>
<title>java.lang.String (93 samples, 0.22%)</title><rect x="761.4" y="451.0" width="2.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="764.4" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (131 samples, 0.30%)</title><rect x="763.9" y="451.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="766.9" y="462.0"></text>
</g>
<g>
<title>byte[] (131 samples, 0.30%)</title><rect x="763.9" y="435.0" width="3.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="766.9" y="446.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (60 samples, 0.14%)</title><rect x="767.5" y="531.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="770.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (70 samples, 0.16%)</title><rect x="769.2" y="563.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.2" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (70 samples, 0.16%)</title><rect x="769.2" y="547.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="772.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (124 samples, 0.29%)</title><rect x="771.1" y="563.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="774.1" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (27 samples, 0.06%)</title><rect x="771.1" y="547.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="774.1" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (37 samples, 0.09%)</title><rect x="771.9" y="547.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="774.9" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (37 samples, 0.09%)</title><rect x="771.9" y="531.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="774.9" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (60 samples, 0.14%)</title><rect x="772.9" y="547.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="775.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (60 samples, 0.14%)</title><rect x="772.9" y="531.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="775.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (686 samples, 1.60%)</title><rect x="774.5" y="579.0" width="18.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="777.5" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (27 samples, 0.06%)</title><rect x="774.5" y="563.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="777.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (96 samples, 0.22%)</title><rect x="775.3" y="563.0" width="2.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="778.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (21 samples, 0.05%)</title><rect x="777.9" y="563.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="780.9" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (21 samples, 0.05%)</title><rect x="777.9" y="547.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="780.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (542 samples, 1.26%)</title><rect x="778.5" y="563.0" width="14.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="781.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (542 samples, 1.26%)</title><rect x="778.5" y="547.0" width="14.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="781.5" y="558.0"></text>
</g>
<g>
<title>java.lang.Class[] (40 samples, 0.09%)</title><rect x="778.5" y="531.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="781.5" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (66 samples, 0.15%)</title><rect x="779.6" y="531.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="782.6" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList (53 samples, 0.12%)</title><rect x="781.4" y="531.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="784.4" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (232 samples, 0.54%)</title><rect x="782.8" y="531.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="785.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (232 samples, 0.54%)</title><rect x="782.8" y="515.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="785.8" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (232 samples, 0.54%)</title><rect x="782.8" y="499.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="785.8" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (232 samples, 0.54%)</title><rect x="782.8" y="483.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="785.8" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (232 samples, 0.54%)</title><rect x="782.8" y="467.0" width="6.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="785.8" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (88 samples, 0.20%)</title><rect x="789.2" y="531.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="792.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (88 samples, 0.20%)</title><rect x="789.2" y="515.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="792.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (22 samples, 0.05%)</title><rect x="789.2" y="499.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="792.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (22 samples, 0.05%)</title><rect x="789.2" y="483.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="792.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (66 samples, 0.15%)</title><rect x="789.8" y="499.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="792.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (66 samples, 0.15%)</title><rect x="789.8" y="483.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="792.8" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (63 samples, 0.15%)</title><rect x="791.6" y="531.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.6" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (63 samples, 0.15%)</title><rect x="791.6" y="515.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="794.6" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (63 samples, 0.15%)</title><rect x="791.6" y="499.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="794.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (308 samples, 0.72%)</title><rect x="793.4" y="579.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (26 samples, 0.06%)</title><rect x="793.4" y="563.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="796.4" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (25 samples, 0.06%)</title><rect x="793.4" y="547.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="796.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.11%)</title><rect x="794.1" y="563.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="797.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (236 samples, 0.55%)</title><rect x="795.3" y="563.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="798.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.11%)</title><rect x="795.3" y="547.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="798.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.11%)</title><rect x="795.3" y="531.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="798.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$161/701954098.get$Lambda (30 samples, 0.07%)</title><rect x="795.3" y="515.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="798.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$161 (30 samples, 0.07%)</title><rect x="795.3" y="499.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="798.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$167/1947942813.get$Lambda (19 samples, 0.04%)</title><rect x="796.2" y="515.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$167 (19 samples, 0.04%)</title><rect x="796.2" y="499.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="799.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (187 samples, 0.44%)</title><rect x="796.7" y="547.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (187 samples, 0.44%)</title><rect x="796.7" y="531.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (94 samples, 0.22%)</title><rect x="796.7" y="515.0" width="2.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="799.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (93 samples, 0.22%)</title><rect x="799.3" y="515.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="802.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (93 samples, 0.22%)</title><rect x="799.3" y="499.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="802.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (93 samples, 0.22%)</title><rect x="799.3" y="483.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="802.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (679 samples, 1.58%)</title><rect x="801.8" y="643.0" width="18.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.8" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (55 samples, 0.13%)</title><rect x="801.8" y="627.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="804.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (624 samples, 1.45%)</title><rect x="803.3" y="627.0" width="17.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="806.3" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (572 samples, 1.33%)</title><rect x="803.3" y="611.0" width="15.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="806.3" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (572 samples, 1.33%)</title><rect x="803.3" y="595.0" width="15.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="806.3" y="606.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (27 samples, 0.06%)</title><rect x="803.3" y="579.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="806.3" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (33 samples, 0.08%)</title><rect x="804.1" y="579.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="807.1" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (75 samples, 0.17%)</title><rect x="805.0" y="579.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="808.0" y="590.0"></text>
</g>
<g>
<title>java.util.TreeSet (24 samples, 0.06%)</title><rect x="807.0" y="579.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="810.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.11%)</title><rect x="807.7" y="579.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="810.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.11%)</title><rect x="807.7" y="563.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="810.7" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.get$Lambda (48 samples, 0.11%)</title><rect x="807.7" y="547.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.7" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$131 (48 samples, 0.11%)</title><rect x="807.7" y="531.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="810.7" y="542.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (59 samples, 0.14%)</title><rect x="809.0" y="579.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="812.0" y="590.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (59 samples, 0.14%)</title><rect x="809.0" y="563.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="812.0" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (245 samples, 0.57%)</title><rect x="810.6" y="579.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.6" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.accept (245 samples, 0.57%)</title><rect x="810.6" y="563.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="813.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (245 samples, 0.57%)</title><rect x="810.6" y="547.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.09%)</title><rect x="810.6" y="531.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="813.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.09%)</title><rect x="810.6" y="515.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="813.6" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1026326437.get$Lambda (40 samples, 0.09%)</title><rect x="810.6" y="499.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="813.6" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$141 (40 samples, 0.09%)</title><rect x="810.6" y="483.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="813.6" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (74 samples, 0.17%)</title><rect x="811.7" y="531.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="814.7" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1026326437.accept (74 samples, 0.17%)</title><rect x="811.7" y="515.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="814.7" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (74 samples, 0.17%)</title><rect x="811.7" y="499.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="814.7" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (74 samples, 0.17%)</title><rect x="811.7" y="483.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="814.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (74 samples, 0.17%)</title><rect x="811.7" y="467.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="814.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (74 samples, 0.17%)</title><rect x="811.7" y="451.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="814.7" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (74 samples, 0.17%)</title><rect x="811.7" y="435.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="814.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (74 samples, 0.17%)</title><rect x="811.7" y="419.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="814.7" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (74 samples, 0.17%)</title><rect x="811.7" y="403.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="814.7" y="414.0"></text>
</g>
<g>
<title>java/util/List.copyOf (72 samples, 0.17%)</title><rect x="813.8" y="531.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="816.8" y="542.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (72 samples, 0.17%)</title><rect x="813.8" y="515.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="816.8" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (33 samples, 0.08%)</title><rect x="813.8" y="499.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="816.8" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (33 samples, 0.08%)</title><rect x="813.8" y="483.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="816.8" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.08%)</title><rect x="813.8" y="467.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="816.8" y="478.0"></text>
</g>
<g>
<title>java/util/List.of (39 samples, 0.09%)</title><rect x="814.7" y="499.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="817.7" y="510.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (39 samples, 0.09%)</title><rect x="814.7" y="483.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="817.7" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (59 samples, 0.14%)</title><rect x="815.7" y="531.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="818.7" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (59 samples, 0.14%)</title><rect x="815.7" y="515.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="818.7" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (61 samples, 0.14%)</title><rect x="817.4" y="579.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="820.4" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (61 samples, 0.14%)</title><rect x="817.4" y="563.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="820.4" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (52 samples, 0.12%)</title><rect x="819.0" y="611.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="822.0" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.of (52 samples, 0.12%)</title><rect x="819.0" y="595.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.0" y="606.0"></text>
</g>
<g>
<title>java.util.Optional (52 samples, 0.12%)</title><rect x="819.0" y="579.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="822.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/clustering/ConsistentHashingTopology.replicasFor (506 samples, 1.18%)</title><rect x="820.5" y="643.0" width="13.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="823.5" y="654.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (173 samples, 0.40%)</title><rect x="820.5" y="627.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="823.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (110 samples, 0.26%)</title><rect x="820.5" y="611.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (110 samples, 0.26%)</title><rect x="820.5" y="595.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="823.5" y="606.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (37 samples, 0.09%)</title><rect x="820.5" y="579.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="823.5" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (73 samples, 0.17%)</title><rect x="821.5" y="579.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="824.5" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (73 samples, 0.17%)</title><rect x="821.5" y="563.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="824.5" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (73 samples, 0.17%)</title><rect x="821.5" y="547.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="824.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (73 samples, 0.17%)</title><rect x="821.5" y="531.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.5" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (43 samples, 0.10%)</title><rect x="821.5" y="515.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="824.5" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (30 samples, 0.07%)</title><rect x="822.7" y="515.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="825.7" y="526.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.07%)</title><rect x="822.7" y="499.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="825.7" y="510.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (63 samples, 0.15%)</title><rect x="823.5" y="611.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="826.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (63 samples, 0.15%)</title><rect x="823.5" y="595.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.5" y="606.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.07%)</title><rect x="823.5" y="579.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="826.5" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (31 samples, 0.07%)</title><rect x="824.4" y="579.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="827.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (31 samples, 0.07%)</title><rect x="824.4" y="563.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="827.4" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (31 samples, 0.07%)</title><rect x="824.4" y="547.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="827.4" y="558.0"></text>
</g>
<g>
<title>java.util.HashSet (15 samples, 0.03%)</title><rect x="825.2" y="627.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="828.2" y="638.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (17 samples, 0.04%)</title><rect x="825.6" y="627.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.6" y="638.0"></text>
</g>
<g>
<title>java.lang.Long (17 samples, 0.04%)</title><rect x="825.6" y="611.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="828.6" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (30 samples, 0.07%)</title><rect x="826.1" y="627.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="829.1" y="638.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (30 samples, 0.07%)</title><rect x="826.1" y="611.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="829.1" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (70 samples, 0.16%)</title><rect x="826.9" y="627.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="829.9" y="638.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (26 samples, 0.06%)</title><rect x="826.9" y="611.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="829.9" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (44 samples, 0.10%)</title><rect x="827.6" y="611.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.6" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (23 samples, 0.05%)</title><rect x="827.6" y="595.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="830.6" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (23 samples, 0.05%)</title><rect x="827.6" y="579.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="830.6" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (21 samples, 0.05%)</title><rect x="828.3" y="595.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="831.3" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (21 samples, 0.05%)</title><rect x="828.3" y="579.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="831.3" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (16 samples, 0.04%)</title><rect x="828.8" y="627.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="831.8" y="638.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (16 samples, 0.04%)</title><rect x="828.8" y="611.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="831.8" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (29 samples, 0.07%)</title><rect x="829.3" y="627.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="832.3" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap (29 samples, 0.07%)</title><rect x="829.3" y="611.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="832.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (123 samples, 0.29%)</title><rect x="830.1" y="627.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="833.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (123 samples, 0.29%)</title><rect x="830.1" y="611.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="833.1" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (123 samples, 0.29%)</title><rect x="830.1" y="595.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="833.1" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (72 samples, 0.17%)</title><rect x="830.1" y="579.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="833.1" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (72 samples, 0.17%)</title><rect x="830.1" y="563.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="833.1" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (51 samples, 0.12%)</title><rect x="832.0" y="579.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.0" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (51 samples, 0.12%)</title><rect x="832.0" y="563.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="835.0" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (32 samples, 0.07%)</title><rect x="833.5" y="627.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="836.5" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (32 samples, 0.07%)</title><rect x="833.5" y="611.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="836.5" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (32 samples, 0.07%)</title><rect x="833.5" y="595.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="836.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ByteUtils.getWrap (46 samples, 0.11%)</title><rect x="834.4" y="643.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="837.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (15 samples, 0.03%)</title><rect x="834.4" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.4" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (15 samples, 0.03%)</title><rect x="834.4" y="611.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="837.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (15 samples, 0.03%)</title><rect x="834.4" y="595.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="837.4" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (15 samples, 0.03%)</title><rect x="834.4" y="579.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="837.4" y="590.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.03%)</title><rect x="834.4" y="563.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="837.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (31 samples, 0.07%)</title><rect x="834.8" y="627.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="837.8" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (31 samples, 0.07%)</title><rect x="834.8" y="611.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="837.8" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (31 samples, 0.07%)</title><rect x="834.8" y="595.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="837.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FuturesUtils.atLeastAsync (316 samples, 0.74%)</title><rect x="835.6" y="643.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="838.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (19 samples, 0.04%)</title><rect x="835.6" y="627.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="838.6" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (16 samples, 0.04%)</title><rect x="836.1" y="627.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="839.1" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (22 samples, 0.05%)</title><rect x="836.6" y="627.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="839.6" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (230 samples, 0.54%)</title><rect x="837.2" y="627.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="840.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FuturesUtils$$Lambda$187/449291540.accept (230 samples, 0.54%)</title><rect x="837.2" y="611.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="840.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FuturesUtils.lambda$atLeastAsync$1 (230 samples, 0.54%)</title><rect x="837.2" y="595.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="840.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/380931844.linkToTargetMethod (85 samples, 0.20%)</title><rect x="837.2" y="579.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="840.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/2114684409.invokeStatic (85 samples, 0.20%)</title><rect x="837.2" y="563.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="840.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FuturesUtils$$Lambda$192/574997146.get$Lambda (85 samples, 0.20%)</title><rect x="837.2" y="547.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="840.2" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.utils.FuturesUtils$$Lambda$192 (85 samples, 0.20%)</title><rect x="837.2" y="531.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="840.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (145 samples, 0.34%)</title><rect x="839.5" y="579.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="842.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (145 samples, 0.34%)</title><rect x="839.5" y="563.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="842.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (86 samples, 0.20%)</title><rect x="839.5" y="547.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="842.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (14 samples, 0.03%)</title><rect x="841.9" y="547.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="844.9" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (14 samples, 0.03%)</title><rect x="841.9" y="531.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="844.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.10%)</title><rect x="842.3" y="547.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="845.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.10%)</title><rect x="842.3" y="531.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="845.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.10%)</title><rect x="842.3" y="515.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="845.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (29 samples, 0.07%)</title><rect x="843.5" y="627.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="846.5" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.03%)</title><rect x="843.5" y="611.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="846.5" y="622.0"></text>
</g>
<g>
<title>java.lang.Object (17 samples, 0.04%)</title><rect x="843.8" y="611.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="846.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.requestForReplica (915 samples, 2.13%)</title><rect x="844.3" y="643.0" width="25.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="847.3" y="654.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (115 samples, 0.27%)</title><rect x="844.3" y="627.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="847.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (115 samples, 0.27%)</title><rect x="844.3" y="611.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="847.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1234250905.invoke (115 samples, 0.27%)</title><rect x="844.3" y="595.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="847.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (115 samples, 0.27%)</title><rect x="844.3" y="579.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="847.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (34 samples, 0.08%)</title><rect x="844.3" y="563.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="847.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.08%)</title><rect x="844.3" y="547.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="847.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (81 samples, 0.19%)</title><rect x="845.2" y="563.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="848.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (81 samples, 0.19%)</title><rect x="845.2" y="547.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="848.2" y="558.0"></text>
</g>
<g>
<title>byte[] (81 samples, 0.19%)</title><rect x="845.2" y="531.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="848.2" y="542.0"></text>
</g>
<g>
<title>java/net/URI.create (528 samples, 1.23%)</title><rect x="847.5" y="627.0" width="14.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.5" y="638.0"></text>
</g>
<g>
<title>java.net.URI (116 samples, 0.27%)</title><rect x="847.5" y="611.0" width="3.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="850.5" y="622.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (412 samples, 0.96%)</title><rect x="850.6" y="611.0" width="11.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.6" y="622.0"></text>
</g>
<g>
<title>java.net.URI$Parser (52 samples, 0.12%)</title><rect x="850.6" y="595.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="853.6" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (360 samples, 0.84%)</title><rect x="852.1" y="595.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (71 samples, 0.17%)</title><rect x="852.1" y="579.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (71 samples, 0.17%)</title><rect x="852.1" y="563.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="855.1" y="574.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.09%)</title><rect x="852.1" y="547.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="855.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (33 samples, 0.08%)</title><rect x="853.1" y="547.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="856.1" y="558.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.08%)</title><rect x="853.1" y="531.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="856.1" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (289 samples, 0.67%)</title><rect x="854.0" y="579.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="857.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (131 samples, 0.30%)</title><rect x="854.0" y="563.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="857.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (131 samples, 0.30%)</title><rect x="854.0" y="547.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="857.0" y="558.0"></text>
</g>
<g>
<title>java.lang.String (67 samples, 0.16%)</title><rect x="854.0" y="531.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="857.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (64 samples, 0.15%)</title><rect x="855.9" y="531.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="858.9" y="542.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.15%)</title><rect x="855.9" y="515.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="858.9" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (158 samples, 0.37%)</title><rect x="857.6" y="563.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="860.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (85 samples, 0.20%)</title><rect x="857.6" y="547.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="860.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (85 samples, 0.20%)</title><rect x="857.6" y="531.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="860.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.07%)</title><rect x="857.6" y="515.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="860.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (53 samples, 0.12%)</title><rect x="858.5" y="515.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="861.5" y="526.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.12%)</title><rect x="858.5" y="499.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="861.5" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (73 samples, 0.17%)</title><rect x="859.9" y="547.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="862.9" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (73 samples, 0.17%)</title><rect x="859.9" y="531.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="862.9" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (73 samples, 0.17%)</title><rect x="859.9" y="515.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="862.9" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (73 samples, 0.17%)</title><rect x="859.9" y="499.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="862.9" y="510.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.07%)</title><rect x="859.9" y="483.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="862.9" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (41 samples, 0.10%)</title><rect x="860.8" y="483.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="863.8" y="494.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.10%)</title><rect x="860.8" y="467.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="863.8" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (110 samples, 0.26%)</title><rect x="862.0" y="627.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="865.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (110 samples, 0.26%)</title><rect x="862.0" y="611.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="865.0" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (29 samples, 0.07%)</title><rect x="862.0" y="595.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="865.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (81 samples, 0.19%)</title><rect x="862.7" y="595.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="865.7" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (81 samples, 0.19%)</title><rect x="862.7" y="579.0" width="2.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="865.7" y="590.0"></text>
</g>
<g>
<title>java/time/Duration.ofMillis (29 samples, 0.07%)</title><rect x="865.0" y="627.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="868.0" y="638.0"></text>
</g>
<g>
<title>java/time/Duration.create (29 samples, 0.07%)</title><rect x="865.0" y="611.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="868.0" y="622.0"></text>
</g>
<g>
<title>java.time.Duration (29 samples, 0.07%)</title><rect x="865.0" y="595.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="868.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (133 samples, 0.31%)</title><rect x="865.8" y="627.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="868.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (133 samples, 0.31%)</title><rect x="865.8" y="611.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="868.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (133 samples, 0.31%)</title><rect x="865.8" y="595.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="868.8" y="606.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (133 samples, 0.31%)</title><rect x="865.8" y="579.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="868.8" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (61 samples, 0.14%)</title><rect x="865.8" y="563.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="868.8" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (61 samples, 0.14%)</title><rect x="865.8" y="547.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="868.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$124/371540559.apply (72 samples, 0.17%)</title><rect x="867.4" y="563.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="870.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (72 samples, 0.17%)</title><rect x="867.4" y="547.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="870.4" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (40 samples, 0.09%)</title><rect x="867.4" y="531.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="870.4" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (32 samples, 0.07%)</title><rect x="868.5" y="531.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="871.5" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (32 samples, 0.07%)</title><rect x="868.5" y="515.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="871.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.respond (816 samples, 1.90%)</title><rect x="869.4" y="659.0" width="22.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="872.4" y="670.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (117 samples, 0.27%)</title><rect x="869.4" y="643.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="872.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (117 samples, 0.27%)</title><rect x="869.4" y="627.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="872.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$206/2123650476.get$Lambda (117 samples, 0.27%)</title><rect x="869.4" y="611.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="872.4" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$206 (117 samples, 0.27%)</title><rect x="869.4" y="595.0" width="3.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="872.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (699 samples, 1.63%)</title><rect x="872.6" y="643.0" width="19.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="875.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (699 samples, 1.63%)</title><rect x="872.6" y="627.0" width="19.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="875.6" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (419 samples, 0.98%)</title><rect x="872.6" y="611.0" width="11.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="875.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (271 samples, 0.63%)</title><rect x="884.1" y="611.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="887.1" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (271 samples, 0.63%)</title><rect x="884.1" y="595.0" width="7.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="887.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/SimpleRequests.put (763 samples, 1.78%)</title><rect x="891.8" y="659.0" width="21.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="894.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (256 samples, 0.60%)</title><rect x="891.8" y="643.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="894.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (256 samples, 0.60%)</title><rect x="891.8" y="627.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="894.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/SimpleRequests$$Lambda$383/1483224964.get$Lambda (256 samples, 0.60%)</title><rect x="891.8" y="611.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="894.8" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.replication.SimpleRequests$$Lambda$383 (256 samples, 0.60%)</title><rect x="891.8" y="595.0" width="7.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="894.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (507 samples, 1.18%)</title><rect x="898.9" y="643.0" width="13.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (507 samples, 1.18%)</title><rect x="898.9" y="627.0" width="13.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="901.9" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (245 samples, 0.57%)</title><rect x="898.9" y="611.0" width="6.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="901.9" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (259 samples, 0.60%)</title><rect x="905.6" y="611.0" width="7.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="908.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (588 samples, 1.37%)</title><rect x="912.8" y="691.0" width="16.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="915.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (588 samples, 1.37%)</title><rect x="912.8" y="675.0" width="16.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="915.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (588 samples, 1.37%)</title><rect x="912.8" y="659.0" width="16.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="915.8" y="670.0"></text>
</g>
<g>
<title>java.lang.String (232 samples, 0.54%)</title><rect x="912.8" y="643.0" width="6.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="915.8" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (356 samples, 0.83%)</title><rect x="919.2" y="643.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="922.2" y="654.0"></text>
</g>
<g>
<title>byte[] (356 samples, 0.83%)</title><rect x="919.2" y="627.0" width="9.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="922.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2,989 samples, 6.96%)</title><rect x="928.9" y="723.0" width="82.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="931.9" y="734.0">one/nio/h..</text>
</g>
<g>
<title>one.nio.http.Request (458 samples, 1.07%)</title><rect x="928.9" y="707.0" width="12.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="931.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (867 samples, 2.02%)</title><rect x="941.5" y="707.0" width="23.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="944.5" y="718.0">o..</text>
</g>
<g>
<title>java.lang.String[] (867 samples, 2.02%)</title><rect x="941.5" y="691.0" width="23.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="944.5" y="702.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,664 samples, 3.87%)</title><rect x="965.3" y="707.0" width="45.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="968.3" y="718.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,664 samples, 3.87%)</title><rect x="965.3" y="691.0" width="45.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="968.3" y="702.0">one/..</text>
</g>
<g>
<title>char[] (1,067 samples, 2.48%)</title><rect x="965.3" y="675.0" width="29.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="968.3" y="686.0">ch..</text>
</g>
<g>
<title>java.lang.String (227 samples, 0.53%)</title><rect x="994.6" y="675.0" width="6.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="997.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (370 samples, 0.86%)</title><rect x="1000.8" y="675.0" width="10.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1003.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (370 samples, 0.86%)</title><rect x="1000.8" y="659.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1003.8" y="670.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (370 samples, 0.86%)</title><rect x="1000.8" y="643.0" width="10.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1003.8" y="654.0"></text>
</g>
<g>
<title>byte[] (370 samples, 0.86%)</title><rect x="1000.8" y="627.0" width="10.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1003.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (266 samples, 0.62%)</title><rect x="1011.0" y="723.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1014.0" y="734.0"></text>
</g>
<g>
<title>byte[] (266 samples, 0.62%)</title><rect x="1011.0" y="707.0" width="7.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1014.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (489 samples, 1.14%)</title><rect x="1018.3" y="723.0" width="13.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1021.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (489 samples, 1.14%)</title><rect x="1018.3" y="707.0" width="13.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1021.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (489 samples, 1.14%)</title><rect x="1018.3" y="691.0" width="13.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1021.3" y="702.0"></text>
</g>
<g>
<title>java.lang.String (233 samples, 0.54%)</title><rect x="1018.3" y="675.0" width="6.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1021.3" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (256 samples, 0.60%)</title><rect x="1024.7" y="675.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1027.7" y="686.0"></text>
</g>
<g>
<title>byte[] (256 samples, 0.60%)</title><rect x="1024.7" y="659.0" width="7.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1027.7" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,763 samples, 13.41%)</title><rect x="1031.7" y="723.0" width="158.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1034.7" y="734.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,763 samples, 13.41%)</title><rect x="1031.7" y="707.0" width="158.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1034.7" y="718.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (2,855 samples, 6.64%)</title><rect x="1031.7" y="691.0" width="78.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1034.7" y="702.0">char[]</text>
</g>
<g>
<title>java.lang.String (997 samples, 2.32%)</title><rect x="1110.1" y="691.0" width="27.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1113.1" y="702.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,911 samples, 4.45%)</title><rect x="1137.5" y="691.0" width="52.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1140.5" y="702.0">java/..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,911 samples, 4.45%)</title><rect x="1137.5" y="675.0" width="52.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1140.5" y="686.0">java/..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,911 samples, 4.45%)</title><rect x="1137.5" y="659.0" width="52.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1140.5" y="670.0">java/..</text>
</g>
<g>
<title>byte[] (1,911 samples, 4.45%)</title><rect x="1137.5" y="643.0" width="52.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1140.5" y="654.0">byte[]</text>
</g>
</g>
</svg>
