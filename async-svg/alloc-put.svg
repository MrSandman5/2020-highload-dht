<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="437"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="437"> </text>
<g id="frames">
<g>
<title>all (798 samples, 100.00%)</title><rect x="10.0" y="403.0" width="1180.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="13.0" y="414.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (309 samples, 38.72%)</title><rect x="10.0" y="387.0" width="456.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="398.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (309 samples, 38.72%)</title><rect x="10.0" y="371.0" width="456.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="382.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (309 samples, 38.72%)</title><rect x="10.0" y="355.0" width="456.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="366.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.38%)</title><rect x="10.0" y="339.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (3 samples, 0.38%)</title><rect x="10.0" y="323.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (3 samples, 0.38%)</title><rect x="10.0" y="307.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (3 samples, 0.38%)</title><rect x="10.0" y="291.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (3 samples, 0.38%)</title><rect x="10.0" y="275.0" width="4.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$71/911420605.run (163 samples, 20.43%)</title><rect x="14.4" y="339.0" width="241.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.4" y="350.0">ru/mail/polis/service/mrsandman5..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replicasPut$7 (163 samples, 20.43%)</title><rect x="14.4" y="323.0" width="241.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.4" y="334.0">ru/mail/polis/service/mrsandman5..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.13%)</title><rect x="14.4" y="307.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.13%)</title><rect x="14.4" y="291.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$77/1326017910.get$Lambda (1 samples, 0.13%)</title><rect x="14.4" y="275.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.4" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$77 (1 samples, 0.13%)</title><rect x="14.4" y="259.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="17.4" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.25%)</title><rect x="15.9" y="307.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.25%)</title><rect x="15.9" y="291.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.9" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2 samples, 0.25%)</title><rect x="15.9" y="275.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="18.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (5 samples, 0.63%)</title><rect x="18.9" y="307.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="21.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.63%)</title><rect x="18.9" y="291.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (5 samples, 0.63%)</title><rect x="18.9" y="275.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.63%)</title><rect x="18.9" y="259.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.50%)</title><rect x="18.9" y="243.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.9" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (3 samples, 0.38%)</title><rect x="18.9" y="227.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.38%)</title><rect x="18.9" y="211.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (3 samples, 0.38%)</title><rect x="18.9" y="195.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$82/356018038.accept (3 samples, 0.38%)</title><rect x="18.9" y="179.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.9" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.38%)</title><rect x="18.9" y="163.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.9" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.38%)</title><rect x="18.9" y="147.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.9" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.38%)</title><rect x="18.9" y="131.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.9" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.38%)</title><rect x="18.9" y="115.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.38%)</title><rect x="18.9" y="99.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="21.9" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.38%)</title><rect x="18.9" y="83.0" width="4.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="21.9" y="94.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (1 samples, 0.13%)</title><rect x="23.3" y="227.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (1 samples, 0.13%)</title><rect x="23.3" y="211.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="26.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$80/1780749756.get (1 samples, 0.13%)</title><rect x="23.3" y="195.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="26.3" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.13%)</title><rect x="23.3" y="179.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="26.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.13%)</title><rect x="24.8" y="243.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="27.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (1 samples, 0.13%)</title><rect x="24.8" y="227.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="27.8" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (1 samples, 0.13%)</title><rect x="24.8" y="211.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="27.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1 samples, 0.13%)</title><rect x="26.3" y="307.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="29.3" y="318.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (1 samples, 0.13%)</title><rect x="26.3" y="291.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="29.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.replication (148 samples, 18.55%)</title><rect x="27.7" y="307.0" width="218.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.7" y="318.0">ru/mail/polis/service/mrsandm..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.75%)</title><rect x="27.7" y="291.0" width="8.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="30.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.75%)</title><rect x="27.7" y="275.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$79/751199668.get$Lambda (6 samples, 0.75%)</title><rect x="27.7" y="259.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.7" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$79 (6 samples, 0.75%)</title><rect x="27.7" y="243.0" width="8.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="30.7" y="254.0"></text>
</g>
<g>
<title>java/util/Collection.stream (7 samples, 0.88%)</title><rect x="36.6" y="291.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.6" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (1 samples, 0.13%)</title><rect x="36.6" y="275.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="39.6" y="286.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (1 samples, 0.13%)</title><rect x="36.6" y="259.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="39.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (6 samples, 0.75%)</title><rect x="38.1" y="275.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.1" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (6 samples, 0.75%)</title><rect x="38.1" y="259.0" width="8.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="41.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (119 samples, 14.91%)</title><rect x="47.0" y="291.0" width="175.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.0" y="302.0">java/util/stream/Refere..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (119 samples, 14.91%)</title><rect x="47.0" y="275.0" width="175.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="50.0" y="286.0">java/util/stream/Abstra..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (119 samples, 14.91%)</title><rect x="47.0" y="259.0" width="175.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="50.0" y="270.0">java/util/stream/Reduce..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (119 samples, 14.91%)</title><rect x="47.0" y="243.0" width="175.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="50.0" y="254.0">java/util/stream/Abstra..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (119 samples, 14.91%)</title><rect x="47.0" y="227.0" width="175.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="50.0" y="238.0">java/util/stream/Abstra..</text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (119 samples, 14.91%)</title><rect x="47.0" y="211.0" width="175.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="50.0" y="222.0">java/util/HashMap$KeySp..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (119 samples, 14.91%)</title><rect x="47.0" y="195.0" width="175.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.0" y="206.0">java/util/stream/Refere..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$79/751199668.apply (119 samples, 14.91%)</title><rect x="47.0" y="179.0" width="175.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="50.0" y="190.0">ru/mail/polis/service/m..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replication$0 (119 samples, 14.91%)</title><rect x="47.0" y="163.0" width="175.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.0" y="174.0">ru/mail/polis/service/m..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$77/1326017910.act (4 samples, 0.50%)</title><rect x="47.0" y="147.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="50.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replicasPut$5 (4 samples, 0.50%)</title><rect x="47.0" y="131.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/SimpleRequests.put (4 samples, 0.50%)</title><rect x="47.0" y="115.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="50.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (3 samples, 0.38%)</title><rect x="47.0" y="99.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="50.0" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.13%)</title><rect x="47.0" y="83.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="50.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.13%)</title><rect x="47.0" y="67.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="50.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (2 samples, 0.25%)</title><rect x="48.4" y="83.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="51.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.25%)</title><rect x="48.4" y="67.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="51.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.25%)</title><rect x="48.4" y="51.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="51.4" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.25%)</title><rect x="48.4" y="35.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="51.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.emptyResponse (1 samples, 0.13%)</title><rect x="51.4" y="99.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.4" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.13%)</title><rect x="51.4" y="83.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="54.4" y="94.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.13%)</title><rect x="51.4" y="67.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="54.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.proxy (115 samples, 14.41%)</title><rect x="52.9" y="147.0" width="170.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="55.9" y="158.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.13%)</title><rect x="52.9" y="131.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="55.9" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/875917495.invoke (1 samples, 0.13%)</title><rect x="52.9" y="115.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="55.9" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.13%)</title><rect x="52.9" y="99.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="55.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.13%)</title><rect x="52.9" y="83.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.9" y="94.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.13%)</title><rect x="52.9" y="67.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="55.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (114 samples, 14.29%)</title><rect x="54.4" y="131.0" width="168.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.4" y="142.0">one/nio/http/HttpClien..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (114 samples, 14.29%)</title><rect x="54.4" y="115.0" width="168.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="57.4" y="126.0">one/nio/http/HttpClien..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (2 samples, 0.25%)</title><rect x="54.4" y="99.0" width="2.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="57.4" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (98 samples, 12.28%)</title><rect x="57.3" y="99.0" width="144.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="60.3" y="110.0">one/nio/http/HttpC..</text>
</g>
<g>
<title>byte[] (93 samples, 11.65%)</title><rect x="57.3" y="83.0" width="137.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="60.3" y="94.0">byte[]</text>
</g>
<g>
<title>byte[] (5 samples, 0.63%)</title><rect x="194.8" y="83.0" width="7.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="197.8" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (13 samples, 1.63%)</title><rect x="202.2" y="99.0" width="19.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.2" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.25%)</title><rect x="202.2" y="83.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.2" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.25%)</title><rect x="202.2" y="67.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="205.2" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.25%)</title><rect x="202.2" y="51.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.2" y="62.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.25%)</title><rect x="202.2" y="35.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="205.2" y="46.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (10 samples, 1.25%)</title><rect x="205.2" y="83.0" width="14.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.2" y="94.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 1.25%)</title><rect x="205.2" y="67.0" width="14.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.2" y="78.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 1.25%)</title><rect x="205.2" y="51.0" width="14.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="208.2" y="62.0"></text>
</g>
<g>
<title>char[] (9 samples, 1.13%)</title><rect x="205.2" y="35.0" width="13.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="208.2" y="46.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.13%)</title><rect x="218.5" y="35.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="221.5" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.13%)</title><rect x="220.0" y="83.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="223.0" y="94.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.13%)</title><rect x="220.0" y="67.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="223.0" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.13%)</title><rect x="221.5" y="99.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="224.5" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.13%)</title><rect x="221.5" y="83.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="224.5" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.13%)</title><rect x="221.5" y="67.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.5" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.13%)</title><rect x="221.5" y="51.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="224.5" y="62.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.13%)</title><rect x="221.5" y="35.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="224.5" y="46.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (12 samples, 1.50%)</title><rect x="222.9" y="291.0" width="17.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="225.9" y="302.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (12 samples, 1.50%)</title><rect x="222.9" y="275.0" width="17.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="225.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/clustering/ConsistentHashingTopology.replicasFor (4 samples, 0.50%)</title><rect x="240.7" y="291.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (2 samples, 0.25%)</title><rect x="240.7" y="275.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="243.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (2 samples, 0.25%)</title><rect x="240.7" y="259.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="243.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (2 samples, 0.25%)</title><rect x="240.7" y="243.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.7" y="254.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.13%)</title><rect x="240.7" y="227.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="243.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.13%)</title><rect x="242.2" y="227.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="245.2" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.13%)</title><rect x="242.2" y="211.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.2" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.13%)</title><rect x="242.2" y="195.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="245.2" y="206.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.13%)</title><rect x="243.6" y="275.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="246.6" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.13%)</title><rect x="243.6" y="259.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="246.6" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (1 samples, 0.13%)</title><rect x="243.6" y="243.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="246.6" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (1 samples, 0.13%)</title><rect x="243.6" y="227.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="246.6" y="238.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.13%)</title><rect x="245.1" y="275.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="248.1" y="286.0"></text>
</g>
<g>
<title>java.util.HashMap (1 samples, 0.13%)</title><rect x="245.1" y="259.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="248.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendEmptyResponse (6 samples, 0.75%)</title><rect x="246.6" y="307.0" width="8.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="249.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.emptyResponse (5 samples, 0.63%)</title><rect x="246.6" y="291.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="249.6" y="302.0"></text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.38%)</title><rect x="246.6" y="275.0" width="4.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="249.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.25%)</title><rect x="251.0" y="275.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="254.0" y="286.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.25%)</title><rect x="251.0" y="259.0" width="3.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="254.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (1 samples, 0.13%)</title><rect x="254.0" y="291.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="257.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.13%)</title><rect x="254.0" y="275.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="257.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.13%)</title><rect x="254.0" y="259.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="257.0" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.13%)</title><rect x="254.0" y="243.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.0" y="254.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.13%)</title><rect x="254.0" y="227.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.0" y="238.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.13%)</title><rect x="254.0" y="211.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="257.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$86/336669398.run (143 samples, 17.92%)</title><rect x="255.5" y="339.0" width="211.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="258.5" y="350.0">ru/mail/polis/service/mrsand..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$asyncExecute$12 (143 samples, 17.92%)</title><rect x="255.5" y="323.0" width="211.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="258.5" y="334.0">ru/mail/polis/service/mrsand..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$85/450287612.act (96 samples, 12.03%)</title><rect x="255.5" y="307.0" width="141.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.5" y="318.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replicasPut$4 (96 samples, 12.03%)</title><rect x="255.5" y="291.0" width="141.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="258.5" y="302.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/SimpleRequests.put (96 samples, 12.03%)</title><rect x="255.5" y="275.0" width="141.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="258.5" y="286.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 3.26%)</title><rect x="255.5" y="259.0" width="38.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="258.5" y="270.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 3.26%)</title><rect x="255.5" y="243.0" width="38.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="258.5" y="254.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 3.26%)</title><rect x="255.5" y="227.0" width="38.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="258.5" y="238.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (50 samples, 6.27%)</title><rect x="293.9" y="259.0" width="73.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="296.9" y="270.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (18 samples, 2.26%)</title><rect x="293.9" y="243.0" width="26.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="296.9" y="254.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (18 samples, 2.26%)</title><rect x="293.9" y="227.0" width="26.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="296.9" y="238.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (32 samples, 4.01%)</title><rect x="320.5" y="243.0" width="47.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="323.5" y="254.0">ru/m..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (31 samples, 3.88%)</title><rect x="320.5" y="227.0" width="45.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.5" y="238.0">java..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (31 samples, 3.88%)</title><rect x="320.5" y="211.0" width="45.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="323.5" y="222.0">java..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 3.88%)</title><rect x="320.5" y="195.0" width="45.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="323.5" y="206.0">java..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (1 samples, 0.13%)</title><rect x="366.4" y="227.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="369.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.emptyResponse (20 samples, 2.51%)</title><rect x="367.8" y="259.0" width="29.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="370.8" y="270.0">ru..</text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.38%)</title><rect x="367.8" y="243.0" width="4.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="370.8" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (17 samples, 2.13%)</title><rect x="372.3" y="243.0" width="25.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="375.3" y="254.0">o..</text>
</g>
<g>
<title>byte[] (8 samples, 1.00%)</title><rect x="372.3" y="227.0" width="11.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="375.3" y="238.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.75%)</title><rect x="384.1" y="227.0" width="8.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="387.1" y="238.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.38%)</title><rect x="393.0" y="227.0" width="4.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="396.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (47 samples, 5.89%)</title><rect x="397.4" y="307.0" width="69.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="400.4" y="318.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (47 samples, 5.89%)</title><rect x="397.4" y="291.0" width="69.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="400.4" y="302.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (47 samples, 5.89%)</title><rect x="397.4" y="275.0" width="69.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="400.4" y="286.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (41 samples, 5.14%)</title><rect x="397.4" y="259.0" width="60.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="400.4" y="270.0">one/ni..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (41 samples, 5.14%)</title><rect x="397.4" y="243.0" width="60.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="400.4" y="254.0">one/ni..</text>
</g>
<g>
<title>byte[] (41 samples, 5.14%)</title><rect x="397.4" y="227.0" width="60.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="400.4" y="238.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.75%)</title><rect x="458.0" y="259.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="461.0" y="270.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.75%)</title><rect x="458.0" y="243.0" width="8.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="461.0" y="254.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (489 samples, 61.28%)</title><rect x="466.9" y="387.0" width="723.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="469.9" y="398.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (18 samples, 2.26%)</title><rect x="466.9" y="371.0" width="26.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="469.9" y="382.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (18 samples, 2.26%)</title><rect x="466.9" y="355.0" width="26.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="469.9" y="366.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (471 samples, 59.02%)</title><rect x="493.5" y="371.0" width="696.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="496.5" y="382.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (471 samples, 59.02%)</title><rect x="493.5" y="355.0" width="696.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="496.5" y="366.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (471 samples, 59.02%)</title><rect x="493.5" y="339.0" width="696.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="496.5" y="350.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (120 samples, 15.04%)</title><rect x="493.5" y="323.0" width="177.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="496.5" y="334.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (120 samples, 15.04%)</title><rect x="493.5" y="307.0" width="177.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="496.5" y="318.0">one/nio/http/HttpServer..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (94 samples, 11.78%)</title><rect x="493.5" y="291.0" width="139.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="496.5" y="302.0">RequestHandler1_r..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (19 samples, 2.38%)</title><rect x="493.5" y="275.0" width="28.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="496.5" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (19 samples, 2.38%)</title><rect x="493.5" y="259.0" width="28.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="496.5" y="270.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 2.38%)</title><rect x="493.5" y="243.0" width="28.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="496.5" y="254.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 2.38%)</title><rect x="493.5" y="227.0" width="28.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="496.5" y="238.0">ja..</text>
</g>
<g>
<title>java.lang.String (6 samples, 0.75%)</title><rect x="493.5" y="211.0" width="8.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="496.5" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 1.63%)</title><rect x="502.4" y="211.0" width="19.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="505.4" y="222.0"></text>
</g>
<g>
<title>byte[] (13 samples, 1.63%)</title><rect x="502.4" y="195.0" width="19.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="505.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (75 samples, 9.40%)</title><rect x="521.6" y="275.0" width="110.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="524.6" y="286.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 1.13%)</title><rect x="521.6" y="259.0" width="13.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="524.6" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (9 samples, 1.13%)</title><rect x="521.6" y="243.0" width="13.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.6" y="254.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (9 samples, 1.13%)</title><rect x="521.6" y="227.0" width="13.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.6" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 1.13%)</title><rect x="521.6" y="211.0" width="13.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="524.6" y="222.0"></text>
</g>
<g>
<title>byte[] (9 samples, 1.13%)</title><rect x="521.6" y="195.0" width="13.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="524.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 1.75%)</title><rect x="534.9" y="259.0" width="20.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="537.9" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 1.75%)</title><rect x="534.9" y="243.0" width="20.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="537.9" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 1.75%)</title><rect x="534.9" y="227.0" width="20.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="537.9" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (20 samples, 2.51%)</title><rect x="555.6" y="259.0" width="29.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="558.6" y="270.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 2.51%)</title><rect x="555.6" y="243.0" width="29.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.6" y="254.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 2.51%)</title><rect x="555.6" y="227.0" width="29.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="558.6" y="238.0">ja..</text>
</g>
<g>
<title>java.lang.String (7 samples, 0.88%)</title><rect x="555.6" y="211.0" width="10.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="558.6" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 1.63%)</title><rect x="566.0" y="211.0" width="19.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="569.0" y="222.0"></text>
</g>
<g>
<title>byte[] (13 samples, 1.63%)</title><rect x="566.0" y="195.0" width="19.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="569.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.replicasPut (32 samples, 4.01%)</title><rect x="585.2" y="259.0" width="47.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="588.2" y="270.0">ru/m..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.25%)</title><rect x="585.2" y="243.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="588.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.25%)</title><rect x="585.2" y="227.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="588.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$85/450287612.get$Lambda (2 samples, 0.25%)</title><rect x="585.2" y="211.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.2" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$85 (2 samples, 0.25%)</title><rect x="585.2" y="195.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="588.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/845983407.linkToTargetMethod (17 samples, 2.13%)</title><rect x="588.2" y="243.0" width="25.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="591.2" y="254.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 2.13%)</title><rect x="588.2" y="227.0" width="25.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="591.2" y="238.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$71/911420605.get$Lambda (17 samples, 2.13%)</title><rect x="588.2" y="211.0" width="25.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="591.2" y="222.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$71 (17 samples, 2.13%)</title><rect x="588.2" y="195.0" width="25.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="591.2" y="206.0">r..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (8 samples, 1.00%)</title><rect x="613.3" y="243.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="616.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 1.00%)</title><rect x="613.3" y="227.0" width="11.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="616.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.reject (1 samples, 0.13%)</title><rect x="613.3" y="211.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="616.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$AbortPolicy.rejectedExecution (1 samples, 0.13%)</title><rect x="613.3" y="195.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.3" y="206.0"></text>
</g>
<g>
<title>java/lang/Object.toString (1 samples, 0.13%)</title><rect x="613.3" y="179.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="616.3" y="190.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.13%)</title><rect x="613.3" y="163.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="616.3" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.13%)</title><rect x="613.3" y="147.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.3" y="158.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.13%)</title><rect x="613.3" y="131.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="616.3" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.13%)</title><rect x="613.3" y="115.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="616.3" y="126.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.13%)</title><rect x="613.3" y="99.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="616.3" y="110.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (7 samples, 0.88%)</title><rect x="614.8" y="211.0" width="10.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="617.8" y="222.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (7 samples, 0.88%)</title><rect x="614.8" y="195.0" width="10.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="617.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (7 samples, 0.88%)</title><rect x="614.8" y="179.0" width="10.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="617.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (7 samples, 0.88%)</title><rect x="614.8" y="163.0" width="10.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (7 samples, 0.88%)</title><rect x="614.8" y="147.0" width="10.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="617.8" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (7 samples, 0.88%)</title><rect x="614.8" y="131.0" width="10.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="617.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.asyncExecute (5 samples, 0.63%)</title><rect x="625.1" y="243.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.25%)</title><rect x="625.1" y="227.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="628.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.25%)</title><rect x="625.1" y="211.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$86/336669398.get$Lambda (2 samples, 0.25%)</title><rect x="625.1" y="195.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.1" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$86 (2 samples, 0.25%)</title><rect x="625.1" y="179.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="628.1" y="190.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (3 samples, 0.38%)</title><rect x="628.1" y="227.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.38%)</title><rect x="628.1" y="211.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="631.1" y="222.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (3 samples, 0.38%)</title><rect x="628.1" y="195.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="631.1" y="206.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (3 samples, 0.38%)</title><rect x="628.1" y="179.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="631.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (3 samples, 0.38%)</title><rect x="628.1" y="163.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="631.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (3 samples, 0.38%)</title><rect x="628.1" y="147.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="631.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (3 samples, 0.38%)</title><rect x="628.1" y="131.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="631.1" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (3 samples, 0.38%)</title><rect x="628.1" y="115.0" width="4.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="631.1" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (26 samples, 3.26%)</title><rect x="632.5" y="291.0" width="38.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.5" y="302.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (26 samples, 3.26%)</title><rect x="632.5" y="275.0" width="38.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="635.5" y="286.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (26 samples, 3.26%)</title><rect x="632.5" y="259.0" width="38.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.5" y="270.0">jav..</text>
</g>
<g>
<title>java.lang.String (12 samples, 1.50%)</title><rect x="632.5" y="243.0" width="17.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="635.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 1.75%)</title><rect x="650.3" y="243.0" width="20.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="653.3" y="254.0"></text>
</g>
<g>
<title>byte[] (14 samples, 1.75%)</title><rect x="650.3" y="227.0" width="20.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="653.3" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (149 samples, 18.67%)</title><rect x="671.0" y="323.0" width="220.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="674.0" y="334.0">one/nio/http/HttpSession.pars..</text>
</g>
<g>
<title>one.nio.http.Request (26 samples, 3.26%)</title><rect x="671.0" y="307.0" width="38.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="674.0" y="318.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (46 samples, 5.76%)</title><rect x="709.4" y="307.0" width="68.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="712.4" y="318.0">one/nio..</text>
</g>
<g>
<title>java.lang.String[] (46 samples, 5.76%)</title><rect x="709.4" y="291.0" width="68.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="712.4" y="302.0">java.la..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (77 samples, 9.65%)</title><rect x="777.4" y="307.0" width="113.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="780.4" y="318.0">one/nio/util/U..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (77 samples, 9.65%)</title><rect x="777.4" y="291.0" width="113.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="780.4" y="302.0">one/nio/util/U..</text>
</g>
<g>
<title>char[] (48 samples, 6.02%)</title><rect x="777.4" y="275.0" width="71.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="780.4" y="286.0">char[]</text>
</g>
<g>
<title>java.lang.String (9 samples, 1.13%)</title><rect x="848.4" y="275.0" width="13.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="851.4" y="286.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 2.51%)</title><rect x="861.7" y="275.0" width="29.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="864.7" y="286.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 2.51%)</title><rect x="861.7" y="259.0" width="29.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="864.7" y="270.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (20 samples, 2.51%)</title><rect x="861.7" y="243.0" width="29.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="864.7" y="254.0">ja..</text>
</g>
<g>
<title>byte[] (20 samples, 2.51%)</title><rect x="861.7" y="227.0" width="29.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="864.7" y="238.0">by..</text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (7 samples, 0.88%)</title><rect x="891.3" y="323.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="894.3" y="334.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.88%)</title><rect x="891.3" y="307.0" width="10.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="894.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (21 samples, 2.63%)</title><rect x="901.7" y="323.0" width="31.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="904.7" y="334.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 2.63%)</title><rect x="901.7" y="307.0" width="31.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="904.7" y="318.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 2.63%)</title><rect x="901.7" y="291.0" width="31.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="904.7" y="302.0">ja..</text>
</g>
<g>
<title>java.lang.String (6 samples, 0.75%)</title><rect x="901.7" y="275.0" width="8.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="904.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 1.88%)</title><rect x="910.5" y="275.0" width="22.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="913.5" y="286.0">j..</text>
</g>
<g>
<title>byte[] (15 samples, 1.88%)</title><rect x="910.5" y="259.0" width="22.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="913.5" y="270.0">b..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (174 samples, 21.80%)</title><rect x="932.7" y="323.0" width="257.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="935.7" y="334.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (174 samples, 21.80%)</title><rect x="932.7" y="307.0" width="257.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="935.7" y="318.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (97 samples, 12.16%)</title><rect x="932.7" y="291.0" width="143.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="935.7" y="302.0">char[]</text>
</g>
<g>
<title>java.lang.String (23 samples, 2.88%)</title><rect x="1076.1" y="291.0" width="34.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1079.1" y="302.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (54 samples, 6.77%)</title><rect x="1110.2" y="291.0" width="79.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1113.2" y="302.0">java/lang..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (54 samples, 6.77%)</title><rect x="1110.2" y="275.0" width="79.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1113.2" y="286.0">java/lang..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (54 samples, 6.77%)</title><rect x="1110.2" y="259.0" width="79.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1113.2" y="270.0">java/lang..</text>
</g>
<g>
<title>byte[] (54 samples, 6.77%)</title><rect x="1110.2" y="243.0" width="79.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1113.2" y="254.0">byte[]</text>
</g>
</g>
</svg>
