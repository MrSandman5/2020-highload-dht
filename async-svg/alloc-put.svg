<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="501"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="501"> </text>
<g id="frames">
<g>
<title>all (5,539 samples, 100.00%)</title><rect x="10.0" y="467.0" width="1180.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="13.0" y="478.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=117865] (353 samples, 6.37%)</title><rect x="10.0" y="451.0" width="75.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (353 samples, 6.37%)</title><rect x="10.0" y="435.0" width="75.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (353 samples, 6.37%)</title><rect x="10.0" y="419.0" width="75.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (353 samples, 6.37%)</title><rect x="10.0" y="403.0" width="75.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (353 samples, 6.37%)</title><rect x="10.0" y="387.0" width="75.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (238 samples, 4.30%)</title><rect x="10.0" y="371.0" width="50.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="382.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (238 samples, 4.30%)</title><rect x="10.0" y="355.0" width="50.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="366.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (229 samples, 4.13%)</title><rect x="10.0" y="339.0" width="48.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="350.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (10 samples, 0.18%)</title><rect x="10.0" y="323.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.18%)</title><rect x="10.0" y="307.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.18%)</title><rect x="10.0" y="291.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.18%)</title><rect x="10.0" y="275.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="10.0" y="259.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.13%)</title><rect x="10.6" y="259.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.6" y="270.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.13%)</title><rect x="10.6" y="243.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="13.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (219 samples, 3.95%)</title><rect x="12.1" y="323.0" width="46.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.1" y="334.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (184 samples, 3.32%)</title><rect x="12.1" y="307.0" width="39.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.1" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (184 samples, 3.32%)</title><rect x="12.1" y="291.0" width="39.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="15.1" y="302.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (174 samples, 3.14%)</title><rect x="12.1" y="275.0" width="37.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.1" y="286.0">ch/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (13 samples, 0.23%)</title><rect x="12.1" y="259.0" width="2.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="15.1" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (161 samples, 2.91%)</title><rect x="14.9" y="259.0" width="34.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.9" y="270.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (161 samples, 2.91%)</title><rect x="14.9" y="243.0" width="34.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.9" y="254.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (161 samples, 2.91%)</title><rect x="14.9" y="227.0" width="34.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.9" y="238.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (161 samples, 2.91%)</title><rect x="14.9" y="211.0" width="34.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.9" y="222.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (161 samples, 2.91%)</title><rect x="14.9" y="195.0" width="34.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.9" y="206.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (161 samples, 2.91%)</title><rect x="14.9" y="179.0" width="34.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.9" y="190.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (38 samples, 0.69%)</title><rect x="14.9" y="163.0" width="8.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.9" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (38 samples, 0.69%)</title><rect x="14.9" y="147.0" width="8.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.9" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (38 samples, 0.69%)</title><rect x="14.9" y="131.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.9" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (38 samples, 0.69%)</title><rect x="14.9" y="115.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.9" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.04%)</title><rect x="14.9" y="99.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="17.9" y="110.0"></text>
</g>
<g>
<title>java.util.HashMap (7 samples, 0.13%)</title><rect x="15.3" y="99.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="18.3" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (13 samples, 0.23%)</title><rect x="16.8" y="99.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.8" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (13 samples, 0.23%)</title><rect x="16.8" y="83.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.8" y="94.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.23%)</title><rect x="16.8" y="67.0" width="2.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="19.8" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (14 samples, 0.25%)</title><rect x="19.6" y="99.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.25%)</title><rect x="19.6" y="83.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.6" y="94.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.09%)</title><rect x="19.6" y="67.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="22.6" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.16%)</title><rect x="20.7" y="67.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.7" y="78.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.16%)</title><rect x="20.7" y="51.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="23.7" y="62.0"></text>
</g>
<g>
<title>org.slf4j.helpers.FormattingTuple (2 samples, 0.04%)</title><rect x="22.6" y="99.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="25.6" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (123 samples, 2.22%)</title><rect x="23.0" y="163.0" width="26.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.0" y="174.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (100 samples, 1.81%)</title><rect x="23.0" y="147.0" width="21.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.0" y="158.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (100 samples, 1.81%)</title><rect x="23.0" y="131.0" width="21.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.0" y="142.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (5 samples, 0.09%)</title><rect x="23.0" y="115.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="26.0" y="126.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (5 samples, 0.09%)</title><rect x="23.0" y="99.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (5 samples, 0.09%)</title><rect x="23.0" y="83.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="26.0" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.09%)</title><rect x="23.0" y="67.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.0" y="78.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="23.0" y="51.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="26.0" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.04%)</title><rect x="23.6" y="51.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.6" y="62.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="23.6" y="35.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="26.6" y="46.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (8 samples, 0.14%)</title><rect x="24.1" y="115.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="27.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4 samples, 0.07%)</title><rect x="25.8" y="115.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="28.8" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.07%)</title><rect x="25.8" y="99.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.8" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="25.8" y="83.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="28.8" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (56 samples, 1.01%)</title><rect x="26.6" y="115.0" width="11.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.6" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (56 samples, 1.01%)</title><rect x="26.6" y="99.0" width="11.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="29.6" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (56 samples, 1.01%)</title><rect x="26.6" y="83.0" width="11.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="29.6" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (56 samples, 1.01%)</title><rect x="26.6" y="67.0" width="11.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="29.6" y="78.0"></text>
</g>
<g>
<title>byte[] (56 samples, 1.01%)</title><rect x="26.6" y="51.0" width="11.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="29.6" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (27 samples, 0.49%)</title><rect x="38.5" y="115.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (27 samples, 0.49%)</title><rect x="38.5" y="99.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="41.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.11%)</title><rect x="38.5" y="83.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="41.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.38%)</title><rect x="39.8" y="83.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.8" y="94.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.38%)</title><rect x="39.8" y="67.0" width="4.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="42.8" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (23 samples, 0.42%)</title><rect x="44.3" y="147.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (23 samples, 0.42%)</title><rect x="44.3" y="131.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (23 samples, 0.42%)</title><rect x="44.3" y="115.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (23 samples, 0.42%)</title><rect x="44.3" y="99.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.3" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (23 samples, 0.42%)</title><rect x="44.3" y="83.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.3" y="94.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.42%)</title><rect x="44.3" y="67.0" width="4.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="47.3" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.18%)</title><rect x="49.2" y="275.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="52.2" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.14%)</title><rect x="51.3" y="307.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.14%)</title><rect x="51.3" y="291.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (8 samples, 0.14%)</title><rect x="51.3" y="275.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.3" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.14%)</title><rect x="51.3" y="259.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="54.3" y="270.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.14%)</title><rect x="51.3" y="243.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="54.3" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.25%)</title><rect x="53.0" y="307.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.0" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.25%)</title><rect x="53.0" y="291.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.25%)</title><rect x="53.0" y="275.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="56.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (13 samples, 0.23%)</title><rect x="56.0" y="307.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="59.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.11%)</title><rect x="56.0" y="291.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="59.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.11%)</title><rect x="56.0" y="275.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="59.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.get$Lambda (6 samples, 0.11%)</title><rect x="56.0" y="259.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="59.0" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$60 (6 samples, 0.11%)</title><rect x="56.0" y="243.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="59.0" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.13%)</title><rect x="57.3" y="291.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="60.3" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.13%)</title><rect x="57.3" y="275.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="60.3" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.13%)</title><rect x="57.3" y="259.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="60.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (9 samples, 0.16%)</title><rect x="58.8" y="339.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.16%)</title><rect x="58.8" y="323.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.16%)</title><rect x="58.8" y="307.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="61.8" y="318.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.07%)</title><rect x="58.8" y="291.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="61.8" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.09%)</title><rect x="59.6" y="291.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.6" y="302.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="59.6" y="275.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="62.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (56 samples, 1.01%)</title><rect x="60.7" y="371.0" width="11.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.7" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (7 samples, 0.13%)</title><rect x="60.7" y="355.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="63.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (20 samples, 0.36%)</title><rect x="62.2" y="355.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.2" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (20 samples, 0.36%)</title><rect x="62.2" y="339.0" width="4.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="65.2" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (29 samples, 0.52%)</title><rect x="66.5" y="355.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (29 samples, 0.52%)</title><rect x="66.5" y="339.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.5" y="350.0"></text>
</g>
<g>
<title>char[] (22 samples, 0.40%)</title><rect x="66.5" y="323.0" width="4.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="69.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.09%)</title><rect x="71.1" y="323.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="74.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="72.2" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="75.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="72.2" y="307.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="75.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.04%)</title><rect x="72.2" y="291.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.2" y="302.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="72.2" y="275.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="75.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.07%)</title><rect x="72.6" y="371.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.6" y="382.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="72.6" y="355.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="75.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.14%)</title><rect x="73.5" y="371.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="76.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.14%)</title><rect x="73.5" y="355.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.14%)</title><rect x="73.5" y="339.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.5" y="350.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.14%)</title><rect x="73.5" y="323.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="76.5" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (47 samples, 0.85%)</title><rect x="75.2" y="371.0" width="10.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.2" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (47 samples, 0.85%)</title><rect x="75.2" y="355.0" width="10.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="78.2" y="366.0"></text>
</g>
<g>
<title>char[] (25 samples, 0.45%)</title><rect x="75.2" y="339.0" width="5.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="78.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.16%)</title><rect x="80.5" y="339.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="83.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.23%)</title><rect x="82.4" y="339.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.23%)</title><rect x="82.4" y="323.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (13 samples, 0.23%)</title><rect x="82.4" y="307.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="85.4" y="318.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.23%)</title><rect x="82.4" y="291.0" width="2.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="85.4" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=117866] (360 samples, 6.50%)</title><rect x="85.2" y="451.0" width="76.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="88.2" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (360 samples, 6.50%)</title><rect x="85.2" y="435.0" width="76.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.2" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (11 samples, 0.20%)</title><rect x="85.2" y="419.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.2" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (11 samples, 0.20%)</title><rect x="85.2" y="403.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="88.2" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (349 samples, 6.30%)</title><rect x="87.5" y="419.0" width="74.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.5" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (349 samples, 6.30%)</title><rect x="87.5" y="403.0" width="74.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.5" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (349 samples, 6.30%)</title><rect x="87.5" y="387.0" width="74.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="90.5" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (244 samples, 4.41%)</title><rect x="87.5" y="371.0" width="52.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="90.5" y="382.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (244 samples, 4.41%)</title><rect x="87.5" y="355.0" width="52.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.5" y="366.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (236 samples, 4.26%)</title><rect x="87.5" y="339.0" width="50.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.5" y="350.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (15 samples, 0.27%)</title><rect x="87.5" y="323.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (15 samples, 0.27%)</title><rect x="87.5" y="307.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="90.5" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.27%)</title><rect x="87.5" y="291.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.27%)</title><rect x="87.5" y="275.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.5" y="286.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.09%)</title><rect x="87.5" y="259.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="90.5" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.18%)</title><rect x="88.6" y="259.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.6" y="270.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.18%)</title><rect x="88.6" y="243.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="91.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (221 samples, 3.99%)</title><rect x="90.7" y="323.0" width="47.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="93.7" y="334.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (190 samples, 3.43%)</title><rect x="90.7" y="307.0" width="40.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="93.7" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (190 samples, 3.43%)</title><rect x="90.7" y="291.0" width="40.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.7" y="302.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (187 samples, 3.38%)</title><rect x="90.7" y="275.0" width="39.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="93.7" y="286.0">ch/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (17 samples, 0.31%)</title><rect x="90.7" y="259.0" width="3.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="93.7" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (170 samples, 3.07%)</title><rect x="94.4" y="259.0" width="36.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.4" y="270.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (170 samples, 3.07%)</title><rect x="94.4" y="243.0" width="36.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.4" y="254.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (170 samples, 3.07%)</title><rect x="94.4" y="227.0" width="36.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.4" y="238.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (170 samples, 3.07%)</title><rect x="94.4" y="211.0" width="36.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.4" y="222.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (170 samples, 3.07%)</title><rect x="94.4" y="195.0" width="36.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.4" y="206.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (170 samples, 3.07%)</title><rect x="94.4" y="179.0" width="36.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.4" y="190.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (51 samples, 0.92%)</title><rect x="94.4" y="163.0" width="10.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="97.4" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (51 samples, 0.92%)</title><rect x="94.4" y="147.0" width="10.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.4" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (51 samples, 0.92%)</title><rect x="94.4" y="131.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.4" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (51 samples, 0.92%)</title><rect x="94.4" y="115.0" width="10.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.4" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (6 samples, 0.11%)</title><rect x="94.4" y="99.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="97.4" y="110.0"></text>
</g>
<g>
<title>java.util.HashMap (8 samples, 0.14%)</title><rect x="95.6" y="99.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="98.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (20 samples, 0.36%)</title><rect x="97.3" y="99.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="100.3" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (20 samples, 0.36%)</title><rect x="97.3" y="83.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="100.3" y="94.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.36%)</title><rect x="97.3" y="67.0" width="4.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="100.3" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (13 samples, 0.23%)</title><rect x="101.6" y="99.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.23%)</title><rect x="101.6" y="83.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="104.6" y="94.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.07%)</title><rect x="101.6" y="67.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="104.6" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.16%)</title><rect x="102.5" y="67.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.5" y="78.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.16%)</title><rect x="102.5" y="51.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="105.5" y="62.0"></text>
</g>
<g>
<title>org.slf4j.helpers.FormattingTuple (4 samples, 0.07%)</title><rect x="104.4" y="99.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="107.4" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (118 samples, 2.13%)</title><rect x="105.4" y="163.0" width="25.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="108.4" y="174.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (99 samples, 1.79%)</title><rect x="105.4" y="147.0" width="21.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.4" y="158.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (99 samples, 1.79%)</title><rect x="105.4" y="131.0" width="21.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.4" y="142.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 0.04%)</title><rect x="105.4" y="115.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="108.4" y="126.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (2 samples, 0.04%)</title><rect x="105.4" y="99.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="108.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (2 samples, 0.04%)</title><rect x="105.4" y="83.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.4" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="105.4" y="67.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="108.4" y="78.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (5 samples, 0.09%)</title><rect x="105.9" y="115.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="108.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4 samples, 0.07%)</title><rect x="106.9" y="115.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="109.9" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.07%)</title><rect x="106.9" y="99.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="109.9" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="106.9" y="83.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="109.9" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (56 samples, 1.01%)</title><rect x="107.8" y="115.0" width="11.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.8" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (56 samples, 1.01%)</title><rect x="107.8" y="99.0" width="11.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="110.8" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (56 samples, 1.01%)</title><rect x="107.8" y="83.0" width="11.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (56 samples, 1.01%)</title><rect x="107.8" y="67.0" width="11.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.8" y="78.0"></text>
</g>
<g>
<title>byte[] (56 samples, 1.01%)</title><rect x="107.8" y="51.0" width="11.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="110.8" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (32 samples, 0.58%)</title><rect x="119.7" y="115.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="122.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.58%)</title><rect x="119.7" y="99.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.13%)</title><rect x="119.7" y="83.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="122.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.45%)</title><rect x="121.2" y="83.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="124.2" y="94.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.45%)</title><rect x="121.2" y="67.0" width="5.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="124.2" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (19 samples, 0.34%)</title><rect x="126.5" y="147.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.5" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (19 samples, 0.34%)</title><rect x="126.5" y="131.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.5" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (19 samples, 0.34%)</title><rect x="126.5" y="115.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (19 samples, 0.34%)</title><rect x="126.5" y="99.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.5" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.34%)</title><rect x="126.5" y="83.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="129.5" y="94.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.34%)</title><rect x="126.5" y="67.0" width="4.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="129.5" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.05%)</title><rect x="130.6" y="275.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="133.6" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.11%)</title><rect x="131.2" y="307.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="134.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.11%)</title><rect x="131.2" y="291.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.11%)</title><rect x="131.2" y="275.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.2" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.11%)</title><rect x="131.2" y="259.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="134.2" y="270.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="131.2" y="243.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="134.2" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.16%)</title><rect x="132.5" y="307.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.16%)</title><rect x="132.5" y="291.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.5" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.16%)</title><rect x="132.5" y="275.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="135.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (16 samples, 0.29%)</title><rect x="134.4" y="307.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="137.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.09%)</title><rect x="134.4" y="291.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="137.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.09%)</title><rect x="134.4" y="275.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.get$Lambda (5 samples, 0.09%)</title><rect x="134.4" y="259.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="137.4" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$60 (5 samples, 0.09%)</title><rect x="134.4" y="243.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="137.4" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.20%)</title><rect x="135.5" y="291.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="138.5" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.20%)</title><rect x="135.5" y="275.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="138.5" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.20%)</title><rect x="135.5" y="259.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="138.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.14%)</title><rect x="137.8" y="339.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="140.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.14%)</title><rect x="137.8" y="323.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="140.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.14%)</title><rect x="137.8" y="307.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.8" y="318.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.07%)</title><rect x="137.8" y="291.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="140.8" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.07%)</title><rect x="138.7" y="291.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="141.7" y="302.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="138.7" y="275.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="141.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (45 samples, 0.81%)</title><rect x="139.5" y="371.0" width="9.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.5" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (5 samples, 0.09%)</title><rect x="139.5" y="355.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="142.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 0.20%)</title><rect x="140.6" y="355.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.6" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.20%)</title><rect x="140.6" y="339.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="143.6" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (29 samples, 0.52%)</title><rect x="142.9" y="355.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="145.9" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (29 samples, 0.52%)</title><rect x="142.9" y="339.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.9" y="350.0"></text>
</g>
<g>
<title>char[] (14 samples, 0.25%)</title><rect x="142.9" y="323.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="145.9" y="334.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.11%)</title><rect x="145.9" y="323.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="148.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.16%)</title><rect x="147.2" y="323.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="150.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.16%)</title><rect x="147.2" y="307.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="150.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.16%)</title><rect x="147.2" y="291.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="150.2" y="302.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.16%)</title><rect x="147.2" y="275.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="150.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (6 samples, 0.11%)</title><rect x="149.1" y="371.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="152.1" y="382.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="149.1" y="355.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="152.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.13%)</title><rect x="150.4" y="371.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.13%)</title><rect x="150.4" y="355.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.13%)</title><rect x="150.4" y="339.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="153.4" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.11%)</title><rect x="150.6" y="323.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="153.6" y="334.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="150.6" y="307.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="153.6" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (47 samples, 0.85%)</title><rect x="151.9" y="371.0" width="10.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (47 samples, 0.85%)</title><rect x="151.9" y="355.0" width="10.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="154.9" y="366.0"></text>
</g>
<g>
<title>char[] (27 samples, 0.49%)</title><rect x="151.9" y="339.0" width="5.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="154.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.11%)</title><rect x="157.6" y="339.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="160.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.25%)</title><rect x="158.9" y="339.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="161.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.25%)</title><rect x="158.9" y="323.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="161.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (14 samples, 0.25%)</title><rect x="158.9" y="307.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="161.9" y="318.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.25%)</title><rect x="158.9" y="291.0" width="3.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="161.9" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=117867] (356 samples, 6.43%)</title><rect x="161.9" y="451.0" width="75.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="164.9" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (356 samples, 6.43%)</title><rect x="161.9" y="435.0" width="75.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="164.9" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (8 samples, 0.14%)</title><rect x="161.9" y="419.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.9" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (8 samples, 0.14%)</title><rect x="161.9" y="403.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="164.9" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (348 samples, 6.28%)</title><rect x="163.6" y="419.0" width="74.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.6" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (348 samples, 6.28%)</title><rect x="163.6" y="403.0" width="74.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.6" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (348 samples, 6.28%)</title><rect x="163.6" y="387.0" width="74.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="166.6" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (255 samples, 4.60%)</title><rect x="163.6" y="371.0" width="54.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.6" y="382.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (255 samples, 4.60%)</title><rect x="163.6" y="355.0" width="54.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="166.6" y="366.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (242 samples, 4.37%)</title><rect x="163.6" y="339.0" width="51.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.6" y="350.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (7 samples, 0.13%)</title><rect x="163.6" y="323.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.13%)</title><rect x="163.6" y="307.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="166.6" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.13%)</title><rect x="163.6" y="291.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.6" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.13%)</title><rect x="163.6" y="275.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.6" y="286.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.11%)</title><rect x="163.6" y="259.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="166.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (235 samples, 4.24%)</title><rect x="165.1" y="323.0" width="50.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="168.1" y="334.0">ru/ma..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (207 samples, 3.74%)</title><rect x="165.1" y="307.0" width="44.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.1" y="318.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (207 samples, 3.74%)</title><rect x="165.1" y="291.0" width="44.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.1" y="302.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (198 samples, 3.57%)</title><rect x="165.1" y="275.0" width="42.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="168.1" y="286.0">ch/q..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (10 samples, 0.18%)</title><rect x="165.1" y="259.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="168.1" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (188 samples, 3.39%)</title><rect x="167.2" y="259.0" width="40.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="170.2" y="270.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (188 samples, 3.39%)</title><rect x="167.2" y="243.0" width="40.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="170.2" y="254.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (188 samples, 3.39%)</title><rect x="167.2" y="227.0" width="40.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.2" y="238.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (188 samples, 3.39%)</title><rect x="167.2" y="211.0" width="40.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="170.2" y="222.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (188 samples, 3.39%)</title><rect x="167.2" y="195.0" width="40.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="170.2" y="206.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (188 samples, 3.39%)</title><rect x="167.2" y="179.0" width="40.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.2" y="190.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (59 samples, 1.07%)</title><rect x="167.2" y="163.0" width="12.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="170.2" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (59 samples, 1.07%)</title><rect x="167.2" y="147.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="170.2" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (59 samples, 1.07%)</title><rect x="167.2" y="131.0" width="12.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.2" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (59 samples, 1.07%)</title><rect x="167.2" y="115.0" width="12.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.2" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (4 samples, 0.07%)</title><rect x="167.2" y="99.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="170.2" y="110.0"></text>
</g>
<g>
<title>java.util.HashMap (11 samples, 0.20%)</title><rect x="168.1" y="99.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="171.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (23 samples, 0.42%)</title><rect x="170.4" y="99.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="173.4" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (23 samples, 0.42%)</title><rect x="170.4" y="83.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="173.4" y="94.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.42%)</title><rect x="170.4" y="67.0" width="4.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="173.4" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (16 samples, 0.29%)</title><rect x="175.3" y="99.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.3" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.29%)</title><rect x="175.3" y="83.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="178.3" y="94.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.07%)</title><rect x="175.3" y="67.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="178.3" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.22%)</title><rect x="176.2" y="67.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="179.2" y="78.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.22%)</title><rect x="176.2" y="51.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="179.2" y="62.0"></text>
</g>
<g>
<title>org.slf4j.helpers.FormattingTuple (5 samples, 0.09%)</title><rect x="178.7" y="99.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="181.7" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (129 samples, 2.33%)</title><rect x="179.8" y="163.0" width="27.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="182.8" y="174.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (107 samples, 1.93%)</title><rect x="179.8" y="147.0" width="22.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="182.8" y="158.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (107 samples, 1.93%)</title><rect x="179.8" y="131.0" width="22.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.8" y="142.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (3 samples, 0.05%)</title><rect x="179.8" y="115.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="182.8" y="126.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (3 samples, 0.05%)</title><rect x="179.8" y="99.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="182.8" y="110.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (2 samples, 0.04%)</title><rect x="179.8" y="83.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="182.8" y="94.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (6 samples, 0.11%)</title><rect x="180.4" y="115.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="183.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (11 samples, 0.20%)</title><rect x="181.7" y="115.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="184.7" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (11 samples, 0.20%)</title><rect x="181.7" y="99.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="184.7" y="110.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.20%)</title><rect x="181.7" y="83.0" width="2.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="184.7" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (59 samples, 1.07%)</title><rect x="184.0" y="115.0" width="12.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="187.0" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (59 samples, 1.07%)</title><rect x="184.0" y="99.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="187.0" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (59 samples, 1.07%)</title><rect x="184.0" y="83.0" width="12.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="187.0" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (59 samples, 1.07%)</title><rect x="184.0" y="67.0" width="12.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.0" y="78.0"></text>
</g>
<g>
<title>byte[] (59 samples, 1.07%)</title><rect x="184.0" y="51.0" width="12.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="187.0" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (28 samples, 0.51%)</title><rect x="196.6" y="115.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="199.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.51%)</title><rect x="196.6" y="99.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="199.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.11%)</title><rect x="196.6" y="83.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="199.6" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.40%)</title><rect x="197.9" y="83.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="200.9" y="94.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.40%)</title><rect x="197.9" y="67.0" width="4.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="200.9" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (22 samples, 0.40%)</title><rect x="202.6" y="147.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="205.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (22 samples, 0.40%)</title><rect x="202.6" y="131.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="205.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (22 samples, 0.40%)</title><rect x="202.6" y="115.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="205.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (22 samples, 0.40%)</title><rect x="202.6" y="99.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="205.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.40%)</title><rect x="202.6" y="83.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.6" y="94.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.40%)</title><rect x="202.6" y="67.0" width="4.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="205.6" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.16%)</title><rect x="207.3" y="275.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="210.3" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.11%)</title><rect x="209.4" y="307.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="212.4" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.11%)</title><rect x="209.4" y="291.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="212.4" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.11%)</title><rect x="209.4" y="275.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="212.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (21 samples, 0.38%)</title><rect x="210.7" y="307.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="213.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.16%)</title><rect x="210.7" y="291.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="213.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.16%)</title><rect x="210.7" y="275.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="213.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.get$Lambda (9 samples, 0.16%)</title><rect x="210.7" y="259.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="213.7" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$60 (9 samples, 0.16%)</title><rect x="210.7" y="243.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="213.7" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.22%)</title><rect x="212.6" y="291.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="215.6" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.22%)</title><rect x="212.6" y="275.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="215.6" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.22%)</title><rect x="212.6" y="259.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="215.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (13 samples, 0.23%)</title><rect x="215.2" y="339.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="218.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.23%)</title><rect x="215.2" y="323.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="218.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.23%)</title><rect x="215.2" y="307.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="218.2" y="318.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.13%)</title><rect x="215.2" y="291.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="218.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.11%)</title><rect x="216.6" y="291.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="219.6" y="302.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="216.6" y="275.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="219.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (41 samples, 0.74%)</title><rect x="217.9" y="371.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="220.9" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (6 samples, 0.11%)</title><rect x="217.9" y="355.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="220.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (14 samples, 0.25%)</title><rect x="219.2" y="355.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="222.2" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (14 samples, 0.25%)</title><rect x="219.2" y="339.0" width="3.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="222.2" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.38%)</title><rect x="222.2" y="355.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="225.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.38%)</title><rect x="222.2" y="339.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="225.2" y="350.0"></text>
</g>
<g>
<title>char[] (13 samples, 0.23%)</title><rect x="222.2" y="323.0" width="2.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="225.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.11%)</title><rect x="225.0" y="323.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="228.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="226.2" y="323.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="229.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="226.2" y="307.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="229.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.04%)</title><rect x="226.2" y="291.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.2" y="302.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="226.2" y="275.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="229.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.04%)</title><rect x="226.7" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="229.7" y="382.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="226.7" y="355.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="229.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (14 samples, 0.25%)</title><rect x="227.1" y="371.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.1" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.25%)</title><rect x="227.1" y="355.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.25%)</title><rect x="227.1" y="339.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.1" y="350.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.16%)</title><rect x="227.1" y="323.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="230.1" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.09%)</title><rect x="229.0" y="323.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="232.0" y="334.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="229.0" y="307.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="232.0" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 0.65%)</title><rect x="230.1" y="371.0" width="7.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="233.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 0.65%)</title><rect x="230.1" y="355.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="233.1" y="366.0"></text>
</g>
<g>
<title>char[] (18 samples, 0.32%)</title><rect x="230.1" y="339.0" width="3.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="233.1" y="350.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.09%)</title><rect x="233.9" y="339.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="236.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.23%)</title><rect x="235.0" y="339.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="238.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.23%)</title><rect x="235.0" y="323.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="238.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (13 samples, 0.23%)</title><rect x="235.0" y="307.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="238.0" y="318.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.23%)</title><rect x="235.0" y="291.0" width="2.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="238.0" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=117868] (359 samples, 6.48%)</title><rect x="237.7" y="451.0" width="76.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="240.7" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (359 samples, 6.48%)</title><rect x="237.7" y="435.0" width="76.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="240.7" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 0.09%)</title><rect x="237.7" y="419.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="240.7" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (5 samples, 0.09%)</title><rect x="237.7" y="403.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="240.7" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (354 samples, 6.39%)</title><rect x="238.8" y="419.0" width="75.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.8" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (354 samples, 6.39%)</title><rect x="238.8" y="403.0" width="75.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.8" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (354 samples, 6.39%)</title><rect x="238.8" y="387.0" width="75.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="241.8" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (243 samples, 4.39%)</title><rect x="238.8" y="371.0" width="51.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="241.8" y="382.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (243 samples, 4.39%)</title><rect x="238.8" y="355.0" width="51.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.8" y="366.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (231 samples, 4.17%)</title><rect x="238.8" y="339.0" width="49.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="241.8" y="350.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (10 samples, 0.18%)</title><rect x="238.8" y="323.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="241.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.18%)</title><rect x="238.8" y="307.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="241.8" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.18%)</title><rect x="238.8" y="291.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="241.8" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.18%)</title><rect x="238.8" y="275.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.8" y="286.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.11%)</title><rect x="238.8" y="259.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="241.8" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.07%)</title><rect x="240.1" y="259.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.1" y="270.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="240.1" y="243.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="243.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (221 samples, 3.99%)</title><rect x="240.9" y="323.0" width="47.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="243.9" y="334.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (194 samples, 3.50%)</title><rect x="240.9" y="307.0" width="41.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="243.9" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (194 samples, 3.50%)</title><rect x="240.9" y="291.0" width="41.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="243.9" y="302.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (193 samples, 3.48%)</title><rect x="240.9" y="275.0" width="41.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="243.9" y="286.0">ch/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (14 samples, 0.25%)</title><rect x="240.9" y="259.0" width="3.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="243.9" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (179 samples, 3.23%)</title><rect x="243.9" y="259.0" width="38.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="246.9" y="270.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (179 samples, 3.23%)</title><rect x="243.9" y="243.0" width="38.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="246.9" y="254.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (179 samples, 3.23%)</title><rect x="243.9" y="227.0" width="38.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="246.9" y="238.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (179 samples, 3.23%)</title><rect x="243.9" y="211.0" width="38.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="246.9" y="222.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (179 samples, 3.23%)</title><rect x="243.9" y="195.0" width="38.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="246.9" y="206.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (179 samples, 3.23%)</title><rect x="243.9" y="179.0" width="38.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="246.9" y="190.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (45 samples, 0.81%)</title><rect x="243.9" y="163.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="246.9" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (45 samples, 0.81%)</title><rect x="243.9" y="147.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="246.9" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (45 samples, 0.81%)</title><rect x="243.9" y="131.0" width="9.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.9" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (45 samples, 0.81%)</title><rect x="243.9" y="115.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="246.9" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.04%)</title><rect x="243.9" y="99.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="246.9" y="110.0"></text>
</g>
<g>
<title>java.util.HashMap (7 samples, 0.13%)</title><rect x="244.3" y="99.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="247.3" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (23 samples, 0.42%)</title><rect x="245.8" y="99.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="248.8" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (23 samples, 0.42%)</title><rect x="245.8" y="83.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="248.8" y="94.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.42%)</title><rect x="245.8" y="67.0" width="4.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="248.8" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.14%)</title><rect x="250.7" y="99.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="253.7" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.14%)</title><rect x="250.7" y="83.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="253.7" y="94.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="250.7" y="67.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="253.7" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.09%)</title><rect x="251.4" y="67.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="254.4" y="78.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="251.4" y="51.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="254.4" y="62.0"></text>
</g>
<g>
<title>org.slf4j.helpers.FormattingTuple (5 samples, 0.09%)</title><rect x="252.4" y="99.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="255.4" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (134 samples, 2.42%)</title><rect x="253.5" y="163.0" width="28.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="256.5" y="174.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (107 samples, 1.93%)</title><rect x="253.5" y="147.0" width="22.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="256.5" y="158.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (107 samples, 1.93%)</title><rect x="253.5" y="131.0" width="22.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="256.5" y="142.0">c..</text>
</g>
<g>
<title>java.lang.StringBuilder (4 samples, 0.07%)</title><rect x="253.7" y="115.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="256.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (6 samples, 0.11%)</title><rect x="254.6" y="115.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="257.6" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (6 samples, 0.11%)</title><rect x="254.6" y="99.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="257.6" y="110.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="254.6" y="83.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="257.6" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (67 samples, 1.21%)</title><rect x="255.8" y="115.0" width="14.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="258.8" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (67 samples, 1.21%)</title><rect x="255.8" y="99.0" width="14.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="258.8" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (67 samples, 1.21%)</title><rect x="255.8" y="83.0" width="14.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (67 samples, 1.21%)</title><rect x="255.8" y="67.0" width="14.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.8" y="78.0"></text>
</g>
<g>
<title>byte[] (67 samples, 1.21%)</title><rect x="255.8" y="51.0" width="14.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="258.8" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (29 samples, 0.52%)</title><rect x="270.1" y="115.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="273.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.52%)</title><rect x="270.1" y="99.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="273.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.07%)</title><rect x="270.1" y="83.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="273.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.45%)</title><rect x="271.0" y="83.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="274.0" y="94.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.45%)</title><rect x="271.0" y="67.0" width="5.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="274.0" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (27 samples, 0.49%)</title><rect x="276.3" y="147.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="279.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (27 samples, 0.49%)</title><rect x="276.3" y="131.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="279.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (27 samples, 0.49%)</title><rect x="276.3" y="115.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="279.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (27 samples, 0.49%)</title><rect x="276.3" y="99.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="279.3" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (27 samples, 0.49%)</title><rect x="276.3" y="83.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="279.3" y="94.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.49%)</title><rect x="276.3" y="67.0" width="5.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="279.3" y="78.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.09%)</title><rect x="282.3" y="307.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="285.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (5 samples, 0.09%)</title><rect x="282.3" y="291.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="285.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (5 samples, 0.09%)</title><rect x="282.3" y="275.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="285.3" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.09%)</title><rect x="282.3" y="259.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.3" y="270.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="282.3" y="243.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="285.3" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.13%)</title><rect x="283.3" y="307.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="286.3" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.13%)</title><rect x="283.3" y="291.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="286.3" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.13%)</title><rect x="283.3" y="275.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="286.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (15 samples, 0.27%)</title><rect x="284.8" y="307.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="287.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.11%)</title><rect x="284.8" y="291.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="287.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.11%)</title><rect x="284.8" y="275.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.get$Lambda (6 samples, 0.11%)</title><rect x="284.8" y="259.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="287.8" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$60 (6 samples, 0.11%)</title><rect x="284.8" y="243.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="287.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.16%)</title><rect x="286.1" y="291.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.1" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.16%)</title><rect x="286.1" y="275.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.1" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.16%)</title><rect x="286.1" y="259.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="289.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (12 samples, 0.22%)</title><rect x="288.0" y="339.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="291.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.22%)</title><rect x="288.0" y="323.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.22%)</title><rect x="288.0" y="307.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="291.0" y="318.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.11%)</title><rect x="288.0" y="291.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="291.0" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.11%)</title><rect x="289.3" y="291.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="292.3" y="302.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="289.3" y="275.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="292.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (43 samples, 0.78%)</title><rect x="290.6" y="371.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="293.6" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (7 samples, 0.13%)</title><rect x="290.6" y="355.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="293.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (17 samples, 0.31%)</title><rect x="292.1" y="355.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="295.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (17 samples, 0.31%)</title><rect x="292.1" y="339.0" width="3.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="295.1" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.34%)</title><rect x="295.7" y="355.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="298.7" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.34%)</title><rect x="295.7" y="339.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.7" y="350.0"></text>
</g>
<g>
<title>char[] (9 samples, 0.16%)</title><rect x="295.7" y="323.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="298.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.09%)</title><rect x="297.6" y="323.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="300.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.09%)</title><rect x="298.7" y="323.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="301.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.09%)</title><rect x="298.7" y="307.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="301.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.09%)</title><rect x="298.7" y="291.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="301.7" y="302.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="298.7" y="275.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="301.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (7 samples, 0.13%)</title><rect x="299.7" y="371.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="302.7" y="382.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.13%)</title><rect x="299.7" y="355.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="302.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.14%)</title><rect x="301.2" y="371.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.2" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.14%)</title><rect x="301.2" y="355.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="304.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.14%)</title><rect x="301.2" y="339.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="304.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.07%)</title><rect x="301.2" y="323.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="304.2" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.07%)</title><rect x="302.1" y="323.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.1" y="334.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="302.1" y="307.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="305.1" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (53 samples, 0.96%)</title><rect x="302.9" y="371.0" width="11.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="305.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (53 samples, 0.96%)</title><rect x="302.9" y="355.0" width="11.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.9" y="366.0"></text>
</g>
<g>
<title>char[] (26 samples, 0.47%)</title><rect x="302.9" y="339.0" width="5.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="305.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.22%)</title><rect x="308.5" y="339.0" width="2.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="311.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.27%)</title><rect x="311.0" y="339.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.27%)</title><rect x="311.0" y="323.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (15 samples, 0.27%)</title><rect x="311.0" y="307.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="314.0" y="318.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.27%)</title><rect x="311.0" y="291.0" width="3.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="314.0" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=117869] (366 samples, 6.61%)</title><rect x="314.2" y="451.0" width="78.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="317.2" y="462.0">[NIO Sele..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (366 samples, 6.61%)</title><rect x="314.2" y="435.0" width="78.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.2" y="446.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 0.16%)</title><rect x="314.2" y="419.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="317.2" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (9 samples, 0.16%)</title><rect x="314.2" y="403.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="317.2" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (357 samples, 6.45%)</title><rect x="316.1" y="419.0" width="76.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="319.1" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (357 samples, 6.45%)</title><rect x="316.1" y="403.0" width="76.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="319.1" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (357 samples, 6.45%)</title><rect x="316.1" y="387.0" width="76.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="319.1" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (235 samples, 4.24%)</title><rect x="316.1" y="371.0" width="50.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="319.1" y="382.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (235 samples, 4.24%)</title><rect x="316.1" y="355.0" width="50.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="319.1" y="366.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (228 samples, 4.12%)</title><rect x="316.1" y="339.0" width="48.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="319.1" y="350.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (14 samples, 0.25%)</title><rect x="316.1" y="323.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="319.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (14 samples, 0.25%)</title><rect x="316.1" y="307.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="319.1" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.25%)</title><rect x="316.1" y="291.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="319.1" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.25%)</title><rect x="316.1" y="275.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="319.1" y="286.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.07%)</title><rect x="316.1" y="259.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="319.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.18%)</title><rect x="317.0" y="259.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="320.0" y="270.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.18%)</title><rect x="317.0" y="243.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="320.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (214 samples, 3.86%)</title><rect x="319.1" y="323.0" width="45.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="322.1" y="334.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (185 samples, 3.34%)</title><rect x="319.1" y="307.0" width="39.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="322.1" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (185 samples, 3.34%)</title><rect x="319.1" y="291.0" width="39.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="322.1" y="302.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (183 samples, 3.30%)</title><rect x="319.1" y="275.0" width="39.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="322.1" y="286.0">ch/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (14 samples, 0.25%)</title><rect x="319.1" y="259.0" width="3.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="322.1" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (169 samples, 3.05%)</title><rect x="322.1" y="259.0" width="36.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="325.1" y="270.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (169 samples, 3.05%)</title><rect x="322.1" y="243.0" width="36.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="325.1" y="254.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (169 samples, 3.05%)</title><rect x="322.1" y="227.0" width="36.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="325.1" y="238.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (169 samples, 3.05%)</title><rect x="322.1" y="211.0" width="36.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="325.1" y="222.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (169 samples, 3.05%)</title><rect x="322.1" y="195.0" width="36.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="325.1" y="206.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (169 samples, 3.05%)</title><rect x="322.1" y="179.0" width="36.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="325.1" y="190.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (51 samples, 0.92%)</title><rect x="322.1" y="163.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.1" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (51 samples, 0.92%)</title><rect x="322.1" y="147.0" width="10.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="325.1" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (51 samples, 0.92%)</title><rect x="322.1" y="131.0" width="10.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="325.1" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (51 samples, 0.92%)</title><rect x="322.1" y="115.0" width="10.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="325.1" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (6 samples, 0.11%)</title><rect x="322.1" y="99.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="325.1" y="110.0"></text>
</g>
<g>
<title>java.util.HashMap (8 samples, 0.14%)</title><rect x="323.4" y="99.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="326.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (16 samples, 0.29%)</title><rect x="325.1" y="99.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="328.1" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (16 samples, 0.29%)</title><rect x="325.1" y="83.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="328.1" y="94.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.29%)</title><rect x="325.1" y="67.0" width="3.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="328.1" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (19 samples, 0.34%)</title><rect x="328.5" y="99.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.34%)</title><rect x="328.5" y="83.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="331.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.09%)</title><rect x="328.5" y="67.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="331.5" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.25%)</title><rect x="329.6" y="67.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="332.6" y="78.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.25%)</title><rect x="329.6" y="51.0" width="2.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="332.6" y="62.0"></text>
</g>
<g>
<title>org.slf4j.helpers.FormattingTuple (2 samples, 0.04%)</title><rect x="332.5" y="99.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="335.5" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (118 samples, 2.13%)</title><rect x="333.0" y="163.0" width="25.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="336.0" y="174.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (98 samples, 1.77%)</title><rect x="333.0" y="147.0" width="20.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="336.0" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (98 samples, 1.77%)</title><rect x="333.0" y="131.0" width="20.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="336.0" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 0.04%)</title><rect x="333.0" y="115.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="336.0" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (3 samples, 0.05%)</title><rect x="333.4" y="115.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="336.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (9 samples, 0.16%)</title><rect x="334.0" y="115.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="337.0" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (9 samples, 0.16%)</title><rect x="334.0" y="99.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="337.0" y="110.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.16%)</title><rect x="334.0" y="83.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="337.0" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (55 samples, 0.99%)</title><rect x="335.9" y="115.0" width="11.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.9" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (55 samples, 0.99%)</title><rect x="335.9" y="99.0" width="11.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="338.9" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (55 samples, 0.99%)</title><rect x="335.9" y="83.0" width="11.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="338.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (55 samples, 0.99%)</title><rect x="335.9" y="67.0" width="11.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="338.9" y="78.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.99%)</title><rect x="335.9" y="51.0" width="11.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="338.9" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (29 samples, 0.52%)</title><rect x="347.7" y="115.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="350.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.52%)</title><rect x="347.7" y="99.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="350.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.09%)</title><rect x="347.7" y="83.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="350.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (24 samples, 0.43%)</title><rect x="348.7" y="83.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="351.7" y="94.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.43%)</title><rect x="348.7" y="67.0" width="5.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="351.7" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (20 samples, 0.36%)</title><rect x="353.8" y="147.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="356.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (20 samples, 0.36%)</title><rect x="353.8" y="131.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="356.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (20 samples, 0.36%)</title><rect x="353.8" y="115.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="356.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (20 samples, 0.36%)</title><rect x="353.8" y="99.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="356.8" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (20 samples, 0.36%)</title><rect x="353.8" y="83.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="356.8" y="94.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.36%)</title><rect x="353.8" y="67.0" width="4.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="356.8" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="358.1" y="275.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="361.1" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.05%)</title><rect x="358.5" y="307.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="361.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.05%)</title><rect x="358.5" y="291.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="361.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.05%)</title><rect x="358.5" y="275.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="361.5" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.05%)</title><rect x="358.5" y="259.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="361.5" y="270.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="358.5" y="243.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="361.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.18%)</title><rect x="359.2" y="307.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="362.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.18%)</title><rect x="359.2" y="291.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="362.2" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.18%)</title><rect x="359.2" y="275.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="362.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (16 samples, 0.29%)</title><rect x="361.3" y="307.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="364.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.07%)</title><rect x="361.3" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="364.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.07%)</title><rect x="361.3" y="275.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="364.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.get$Lambda (4 samples, 0.07%)</title><rect x="361.3" y="259.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="364.3" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$60 (4 samples, 0.07%)</title><rect x="361.3" y="243.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="364.3" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.22%)</title><rect x="362.1" y="291.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="365.1" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.22%)</title><rect x="362.1" y="275.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="365.1" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.22%)</title><rect x="362.1" y="259.0" width="2.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="365.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (7 samples, 0.13%)</title><rect x="364.7" y="339.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="367.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.13%)</title><rect x="364.7" y="323.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="367.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.13%)</title><rect x="364.7" y="307.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.7" y="318.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.09%)</title><rect x="364.7" y="291.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="367.7" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.04%)</title><rect x="365.8" y="291.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.8" y="302.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="365.8" y="275.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="368.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (64 samples, 1.16%)</title><rect x="366.2" y="371.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="369.2" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (11 samples, 0.20%)</title><rect x="366.2" y="355.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="369.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (21 samples, 0.38%)</title><rect x="368.5" y="355.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="371.5" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (21 samples, 0.38%)</title><rect x="368.5" y="339.0" width="4.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="371.5" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 0.58%)</title><rect x="373.0" y="355.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="376.0" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 0.58%)</title><rect x="373.0" y="339.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="376.0" y="350.0"></text>
</g>
<g>
<title>char[] (12 samples, 0.22%)</title><rect x="373.0" y="323.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="376.0" y="334.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.14%)</title><rect x="375.6" y="323.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="378.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.22%)</title><rect x="377.3" y="323.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="380.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.22%)</title><rect x="377.3" y="307.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="380.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (12 samples, 0.22%)</title><rect x="377.3" y="291.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="380.3" y="302.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.22%)</title><rect x="377.3" y="275.0" width="2.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="380.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (6 samples, 0.11%)</title><rect x="379.8" y="371.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="382.8" y="382.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="379.8" y="355.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="382.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.16%)</title><rect x="381.1" y="371.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.1" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.16%)</title><rect x="381.1" y="355.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="384.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.16%)</title><rect x="381.1" y="339.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="384.1" y="350.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.09%)</title><rect x="381.1" y="323.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="384.1" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.07%)</title><rect x="382.2" y="323.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="385.2" y="334.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="382.2" y="307.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="385.2" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (43 samples, 0.78%)</title><rect x="383.0" y="371.0" width="9.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.0" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (43 samples, 0.78%)</title><rect x="383.0" y="355.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.0" y="366.0"></text>
</g>
<g>
<title>char[] (22 samples, 0.40%)</title><rect x="383.0" y="339.0" width="4.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="386.0" y="350.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="387.7" y="339.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="390.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 0.32%)</title><rect x="388.3" y="339.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="391.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 0.32%)</title><rect x="388.3" y="323.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (18 samples, 0.32%)</title><rect x="388.3" y="307.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="391.3" y="318.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.32%)</title><rect x="388.3" y="291.0" width="3.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="391.3" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=117870] (345 samples, 6.23%)</title><rect x="392.2" y="451.0" width="73.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="395.2" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (345 samples, 6.23%)</title><rect x="392.2" y="435.0" width="73.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="395.2" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (14 samples, 0.25%)</title><rect x="392.2" y="419.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="395.2" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (14 samples, 0.25%)</title><rect x="392.2" y="403.0" width="3.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="395.2" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (331 samples, 5.98%)</title><rect x="395.2" y="419.0" width="70.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.2" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (331 samples, 5.98%)</title><rect x="395.2" y="403.0" width="70.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.2" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (331 samples, 5.98%)</title><rect x="395.2" y="387.0" width="70.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="398.2" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (230 samples, 4.15%)</title><rect x="395.2" y="371.0" width="49.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.2" y="382.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (230 samples, 4.15%)</title><rect x="395.2" y="355.0" width="49.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="398.2" y="366.0">one/..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (225 samples, 4.06%)</title><rect x="395.2" y="339.0" width="47.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="398.2" y="350.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (16 samples, 0.29%)</title><rect x="395.2" y="323.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (16 samples, 0.29%)</title><rect x="395.2" y="307.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="398.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.29%)</title><rect x="395.2" y="291.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="398.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.29%)</title><rect x="395.2" y="275.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="398.2" y="286.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.09%)</title><rect x="395.2" y="259.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="398.2" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.20%)</title><rect x="396.2" y="259.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.2" y="270.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.20%)</title><rect x="396.2" y="243.0" width="2.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="399.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (209 samples, 3.77%)</title><rect x="398.6" y="323.0" width="44.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.6" y="334.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (180 samples, 3.25%)</title><rect x="398.6" y="307.0" width="38.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="401.6" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (180 samples, 3.25%)</title><rect x="398.6" y="291.0" width="38.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="401.6" y="302.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (176 samples, 3.18%)</title><rect x="398.6" y="275.0" width="37.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="401.6" y="286.0">ch/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (11 samples, 0.20%)</title><rect x="398.6" y="259.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="401.6" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (165 samples, 2.98%)</title><rect x="400.9" y="259.0" width="35.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="403.9" y="270.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (165 samples, 2.98%)</title><rect x="400.9" y="243.0" width="35.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="403.9" y="254.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (165 samples, 2.98%)</title><rect x="400.9" y="227.0" width="35.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="403.9" y="238.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (165 samples, 2.98%)</title><rect x="400.9" y="211.0" width="35.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="403.9" y="222.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (165 samples, 2.98%)</title><rect x="400.9" y="195.0" width="35.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="403.9" y="206.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (165 samples, 2.98%)</title><rect x="400.9" y="179.0" width="35.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="403.9" y="190.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (44 samples, 0.79%)</title><rect x="400.9" y="163.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="403.9" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (44 samples, 0.79%)</title><rect x="400.9" y="147.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="403.9" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (44 samples, 0.79%)</title><rect x="400.9" y="131.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="403.9" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (44 samples, 0.79%)</title><rect x="400.9" y="115.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="403.9" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (3 samples, 0.05%)</title><rect x="400.9" y="99.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="403.9" y="110.0"></text>
</g>
<g>
<title>java.util.HashMap (7 samples, 0.13%)</title><rect x="401.6" y="99.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="404.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (18 samples, 0.32%)</title><rect x="403.0" y="99.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="406.0" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (18 samples, 0.32%)</title><rect x="403.0" y="83.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="406.0" y="94.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.32%)</title><rect x="403.0" y="67.0" width="3.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="406.0" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (11 samples, 0.20%)</title><rect x="406.9" y="99.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="409.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.20%)</title><rect x="406.9" y="83.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="409.9" y="94.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="406.9" y="67.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="409.9" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.14%)</title><rect x="407.5" y="67.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="410.5" y="78.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.14%)</title><rect x="407.5" y="51.0" width="1.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="410.5" y="62.0"></text>
</g>
<g>
<title>org.slf4j.helpers.FormattingTuple (5 samples, 0.09%)</title><rect x="409.2" y="99.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="412.2" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (120 samples, 2.17%)</title><rect x="410.5" y="163.0" width="25.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="413.5" y="174.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (95 samples, 1.72%)</title><rect x="410.5" y="147.0" width="20.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.5" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (95 samples, 1.72%)</title><rect x="410.5" y="131.0" width="20.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="413.5" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 0.04%)</title><rect x="410.5" y="115.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.5" y="126.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (2 samples, 0.04%)</title><rect x="410.5" y="99.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.5" y="110.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (3 samples, 0.05%)</title><rect x="410.9" y="115.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="413.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (6 samples, 0.11%)</title><rect x="411.6" y="115.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="414.6" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (6 samples, 0.11%)</title><rect x="411.6" y="99.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="414.6" y="110.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="411.6" y="83.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="414.6" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (46 samples, 0.83%)</title><rect x="412.8" y="115.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="415.8" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (46 samples, 0.83%)</title><rect x="412.8" y="99.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="415.8" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (46 samples, 0.83%)</title><rect x="412.8" y="83.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (46 samples, 0.83%)</title><rect x="412.8" y="67.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="415.8" y="78.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.83%)</title><rect x="412.8" y="51.0" width="9.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="415.8" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (38 samples, 0.69%)</title><rect x="422.6" y="115.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="425.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (38 samples, 0.69%)</title><rect x="422.6" y="99.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="425.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.07%)</title><rect x="422.6" y="83.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="425.6" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (34 samples, 0.61%)</title><rect x="423.5" y="83.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="426.5" y="94.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.61%)</title><rect x="423.5" y="67.0" width="7.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="426.5" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (25 samples, 0.45%)</title><rect x="430.7" y="147.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="433.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (25 samples, 0.45%)</title><rect x="430.7" y="131.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="433.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (25 samples, 0.45%)</title><rect x="430.7" y="115.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="433.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (25 samples, 0.45%)</title><rect x="430.7" y="99.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="433.7" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (25 samples, 0.45%)</title><rect x="430.7" y="83.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="433.7" y="94.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.45%)</title><rect x="430.7" y="67.0" width="5.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="433.7" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.07%)</title><rect x="436.1" y="275.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="439.1" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.07%)</title><rect x="436.9" y="307.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.07%)</title><rect x="436.9" y="291.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="439.9" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.07%)</title><rect x="436.9" y="275.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="439.9" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.07%)</title><rect x="436.9" y="259.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="439.9" y="270.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="436.9" y="243.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="439.9" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.18%)</title><rect x="437.8" y="307.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="440.8" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.18%)</title><rect x="437.8" y="291.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="440.8" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.18%)</title><rect x="437.8" y="275.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="440.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (15 samples, 0.27%)</title><rect x="439.9" y="307.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="442.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.14%)</title><rect x="439.9" y="291.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="442.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.14%)</title><rect x="439.9" y="275.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.get$Lambda (8 samples, 0.14%)</title><rect x="439.9" y="259.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.9" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$60 (8 samples, 0.14%)</title><rect x="439.9" y="243.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="442.9" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.13%)</title><rect x="441.6" y="291.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="444.6" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.13%)</title><rect x="441.6" y="275.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="444.6" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.13%)</title><rect x="441.6" y="259.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="444.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.09%)</title><rect x="443.1" y="339.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="446.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.09%)</title><rect x="443.1" y="323.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="446.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.09%)</title><rect x="443.1" y="307.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="446.1" y="318.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.04%)</title><rect x="443.1" y="291.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="446.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.05%)</title><rect x="443.5" y="291.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="446.5" y="302.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="443.5" y="275.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="446.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (44 samples, 0.79%)</title><rect x="444.2" y="371.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="447.2" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (4 samples, 0.07%)</title><rect x="444.2" y="355.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="447.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (18 samples, 0.32%)</title><rect x="445.0" y="355.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="448.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (18 samples, 0.32%)</title><rect x="445.0" y="339.0" width="3.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="448.0" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.40%)</title><rect x="448.9" y="355.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="451.9" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.40%)</title><rect x="448.9" y="339.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="451.9" y="350.0"></text>
</g>
<g>
<title>char[] (9 samples, 0.16%)</title><rect x="448.9" y="323.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="451.9" y="334.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="450.8" y="323.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="453.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.18%)</title><rect x="451.4" y="323.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="454.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.18%)</title><rect x="451.4" y="307.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="454.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10 samples, 0.18%)</title><rect x="451.4" y="291.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="454.4" y="302.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.18%)</title><rect x="451.4" y="275.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="454.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.05%)</title><rect x="453.5" y="371.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="456.5" y="382.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="453.5" y="355.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="456.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.18%)</title><rect x="454.2" y="371.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="457.2" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.18%)</title><rect x="454.2" y="355.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="457.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.18%)</title><rect x="454.2" y="339.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="457.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="454.2" y="323.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="457.2" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.13%)</title><rect x="454.8" y="323.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.8" y="334.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.13%)</title><rect x="454.8" y="307.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="457.8" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (44 samples, 0.79%)</title><rect x="456.3" y="371.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="459.3" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (44 samples, 0.79%)</title><rect x="456.3" y="355.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="459.3" y="366.0"></text>
</g>
<g>
<title>char[] (15 samples, 0.27%)</title><rect x="456.3" y="339.0" width="3.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="459.3" y="350.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.22%)</title><rect x="459.5" y="339.0" width="2.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="462.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.31%)</title><rect x="462.1" y="339.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="465.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.31%)</title><rect x="462.1" y="323.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="465.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (17 samples, 0.31%)</title><rect x="462.1" y="307.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="465.1" y="318.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.31%)</title><rect x="462.1" y="291.0" width="3.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="465.1" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=117871] (353 samples, 6.37%)</title><rect x="465.7" y="451.0" width="75.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="468.7" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (353 samples, 6.37%)</title><rect x="465.7" y="435.0" width="75.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.7" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (353 samples, 6.37%)</title><rect x="465.7" y="419.0" width="75.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="468.7" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (353 samples, 6.37%)</title><rect x="465.7" y="403.0" width="75.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.7" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (353 samples, 6.37%)</title><rect x="465.7" y="387.0" width="75.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.7" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (225 samples, 4.06%)</title><rect x="465.7" y="371.0" width="47.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.7" y="382.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (225 samples, 4.06%)</title><rect x="465.7" y="355.0" width="47.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="468.7" y="366.0">one/..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (213 samples, 3.85%)</title><rect x="465.7" y="339.0" width="45.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.7" y="350.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (7 samples, 0.13%)</title><rect x="465.7" y="323.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="468.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.13%)</title><rect x="465.7" y="307.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.13%)</title><rect x="465.7" y="291.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="468.7" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.13%)</title><rect x="465.7" y="275.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="468.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.11%)</title><rect x="465.9" y="259.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="468.9" y="270.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="465.9" y="243.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="468.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (206 samples, 3.72%)</title><rect x="467.2" y="323.0" width="43.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="470.2" y="334.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (181 samples, 3.27%)</title><rect x="467.2" y="307.0" width="38.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="470.2" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (181 samples, 3.27%)</title><rect x="467.2" y="291.0" width="38.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="470.2" y="302.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (177 samples, 3.20%)</title><rect x="467.2" y="275.0" width="37.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.2" y="286.0">ch/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (13 samples, 0.23%)</title><rect x="467.2" y="259.0" width="2.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="470.2" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (164 samples, 2.96%)</title><rect x="469.9" y="259.0" width="35.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="472.9" y="270.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (164 samples, 2.96%)</title><rect x="469.9" y="243.0" width="35.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="472.9" y="254.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (164 samples, 2.96%)</title><rect x="469.9" y="227.0" width="35.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="472.9" y="238.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (164 samples, 2.96%)</title><rect x="469.9" y="211.0" width="35.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="472.9" y="222.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (164 samples, 2.96%)</title><rect x="469.9" y="195.0" width="35.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.9" y="206.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (164 samples, 2.96%)</title><rect x="469.9" y="179.0" width="35.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.9" y="190.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (45 samples, 0.81%)</title><rect x="469.9" y="163.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.9" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (45 samples, 0.81%)</title><rect x="469.9" y="147.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="472.9" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (45 samples, 0.81%)</title><rect x="469.9" y="131.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="472.9" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (45 samples, 0.81%)</title><rect x="469.9" y="115.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="472.9" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (5 samples, 0.09%)</title><rect x="469.9" y="99.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="472.9" y="110.0"></text>
</g>
<g>
<title>java.util.HashMap (7 samples, 0.13%)</title><rect x="471.0" y="99.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="474.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (18 samples, 0.32%)</title><rect x="472.5" y="99.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="475.5" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (18 samples, 0.32%)</title><rect x="472.5" y="83.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="475.5" y="94.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.32%)</title><rect x="472.5" y="67.0" width="3.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="475.5" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (10 samples, 0.18%)</title><rect x="476.3" y="99.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="479.3" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.18%)</title><rect x="476.3" y="83.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="479.3" y="94.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="476.3" y="67.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="479.3" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.13%)</title><rect x="477.0" y="67.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="480.0" y="78.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.13%)</title><rect x="477.0" y="51.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="480.0" y="62.0"></text>
</g>
<g>
<title>org.slf4j.helpers.FormattingTuple (5 samples, 0.09%)</title><rect x="478.5" y="99.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="481.5" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (119 samples, 2.15%)</title><rect x="479.5" y="163.0" width="25.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="482.5" y="174.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (91 samples, 1.64%)</title><rect x="479.5" y="147.0" width="19.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.5" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (91 samples, 1.64%)</title><rect x="479.5" y="131.0" width="19.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.5" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 0.04%)</title><rect x="479.5" y="115.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.5" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (8 samples, 0.14%)</title><rect x="480.0" y="115.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="483.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4 samples, 0.07%)</title><rect x="481.7" y="115.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="484.7" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.07%)</title><rect x="481.7" y="99.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="484.7" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="481.7" y="83.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="484.7" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (48 samples, 0.87%)</title><rect x="482.5" y="115.0" width="10.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="485.5" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (48 samples, 0.87%)</title><rect x="482.5" y="99.0" width="10.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.5" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (48 samples, 0.87%)</title><rect x="482.5" y="83.0" width="10.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (48 samples, 0.87%)</title><rect x="482.5" y="67.0" width="10.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.5" y="78.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.87%)</title><rect x="482.5" y="51.0" width="10.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="485.5" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (29 samples, 0.52%)</title><rect x="492.7" y="115.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="495.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.52%)</title><rect x="492.7" y="99.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="495.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.07%)</title><rect x="492.7" y="83.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="495.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.45%)</title><rect x="493.6" y="83.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="496.6" y="94.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.45%)</title><rect x="493.6" y="67.0" width="5.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="496.6" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (28 samples, 0.51%)</title><rect x="498.9" y="147.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="501.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (28 samples, 0.51%)</title><rect x="498.9" y="131.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (28 samples, 0.51%)</title><rect x="498.9" y="115.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="501.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (28 samples, 0.51%)</title><rect x="498.9" y="99.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.9" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (28 samples, 0.51%)</title><rect x="498.9" y="83.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.9" y="94.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.51%)</title><rect x="498.9" y="67.0" width="6.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="501.9" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.07%)</title><rect x="504.9" y="275.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="507.9" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.09%)</title><rect x="505.7" y="307.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="508.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (5 samples, 0.09%)</title><rect x="505.7" y="291.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.7" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (5 samples, 0.09%)</title><rect x="505.7" y="275.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="508.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.09%)</title><rect x="505.7" y="259.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="508.7" y="270.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="505.7" y="243.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="508.7" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.14%)</title><rect x="506.8" y="307.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="509.8" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.14%)</title><rect x="506.8" y="291.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="509.8" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.14%)</title><rect x="506.8" y="275.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="509.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (12 samples, 0.22%)</title><rect x="508.5" y="307.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.13%)</title><rect x="508.5" y="291.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="511.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.13%)</title><rect x="508.5" y="275.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="511.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.get$Lambda (7 samples, 0.13%)</title><rect x="508.5" y="259.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="511.5" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$60 (7 samples, 0.13%)</title><rect x="508.5" y="243.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="511.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.07%)</title><rect x="510.0" y="291.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="513.0" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.07%)</title><rect x="510.0" y="275.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="513.0" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.07%)</title><rect x="510.0" y="259.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="513.0" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (12 samples, 0.22%)</title><rect x="511.1" y="339.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.22%)</title><rect x="511.1" y="323.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="514.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.22%)</title><rect x="511.1" y="307.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.1" y="318.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="511.1" y="291.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="514.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.16%)</title><rect x="511.7" y="291.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="514.7" y="302.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.16%)</title><rect x="511.7" y="275.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="514.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (61 samples, 1.10%)</title><rect x="513.6" y="371.0" width="13.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="516.6" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (5 samples, 0.09%)</title><rect x="513.6" y="355.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="516.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (21 samples, 0.38%)</title><rect x="514.7" y="355.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="517.7" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (21 samples, 0.38%)</title><rect x="514.7" y="339.0" width="4.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="517.7" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 0.63%)</title><rect x="519.2" y="355.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="522.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 0.63%)</title><rect x="519.2" y="339.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.2" y="350.0"></text>
</g>
<g>
<title>char[] (21 samples, 0.38%)</title><rect x="519.2" y="323.0" width="4.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="522.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.07%)</title><rect x="523.6" y="323.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="526.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.18%)</title><rect x="524.5" y="323.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="527.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.18%)</title><rect x="524.5" y="307.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="527.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10 samples, 0.18%)</title><rect x="524.5" y="291.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="527.5" y="302.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.18%)</title><rect x="524.5" y="275.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="527.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (5 samples, 0.09%)</title><rect x="526.6" y="371.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="529.6" y="382.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="526.6" y="355.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="529.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15 samples, 0.27%)</title><rect x="527.7" y="371.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="530.7" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.27%)</title><rect x="527.7" y="355.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="530.7" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.27%)</title><rect x="527.7" y="339.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="530.7" y="350.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.14%)</title><rect x="527.7" y="323.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="530.7" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.13%)</title><rect x="529.4" y="323.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="532.4" y="334.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.13%)</title><rect x="529.4" y="307.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="532.4" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (47 samples, 0.85%)</title><rect x="530.9" y="371.0" width="10.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="533.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (47 samples, 0.85%)</title><rect x="530.9" y="355.0" width="10.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.9" y="366.0"></text>
</g>
<g>
<title>char[] (24 samples, 0.43%)</title><rect x="530.9" y="339.0" width="5.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="533.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.14%)</title><rect x="536.0" y="339.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="539.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.27%)</title><rect x="537.7" y="339.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="540.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.27%)</title><rect x="537.7" y="323.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="540.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (15 samples, 0.27%)</title><rect x="537.7" y="307.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="540.7" y="318.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.27%)</title><rect x="537.7" y="291.0" width="3.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="540.7" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=117872] (367 samples, 6.63%)</title><rect x="540.9" y="451.0" width="78.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="543.9" y="462.0">[NIO Sele..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (367 samples, 6.63%)</title><rect x="540.9" y="435.0" width="78.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="543.9" y="446.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/Session.process (367 samples, 6.63%)</title><rect x="540.9" y="419.0" width="78.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="543.9" y="430.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (367 samples, 6.63%)</title><rect x="540.9" y="403.0" width="78.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="543.9" y="414.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (367 samples, 6.63%)</title><rect x="540.9" y="387.0" width="78.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.9" y="398.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (253 samples, 4.57%)</title><rect x="540.9" y="371.0" width="53.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="543.9" y="382.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (253 samples, 4.57%)</title><rect x="540.9" y="355.0" width="53.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="543.9" y="366.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (242 samples, 4.37%)</title><rect x="540.9" y="339.0" width="51.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="543.9" y="350.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (9 samples, 0.16%)</title><rect x="540.9" y="323.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="543.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.16%)</title><rect x="540.9" y="307.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.9" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.16%)</title><rect x="540.9" y="291.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.9" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.16%)</title><rect x="540.9" y="275.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="543.9" y="286.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.09%)</title><rect x="540.9" y="259.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="543.9" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.07%)</title><rect x="541.9" y="259.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="544.9" y="270.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="541.9" y="243.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="544.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (233 samples, 4.21%)</title><rect x="542.8" y="323.0" width="49.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="545.8" y="334.0">ru/ma..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (205 samples, 3.70%)</title><rect x="542.8" y="307.0" width="43.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="545.8" y="318.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (205 samples, 3.70%)</title><rect x="542.8" y="291.0" width="43.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="545.8" y="302.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (197 samples, 3.56%)</title><rect x="542.8" y="275.0" width="42.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="545.8" y="286.0">ch/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (12 samples, 0.22%)</title><rect x="542.8" y="259.0" width="2.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="545.8" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (185 samples, 3.34%)</title><rect x="545.4" y="259.0" width="39.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="548.4" y="270.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (185 samples, 3.34%)</title><rect x="545.4" y="243.0" width="39.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="548.4" y="254.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (185 samples, 3.34%)</title><rect x="545.4" y="227.0" width="39.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="548.4" y="238.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (185 samples, 3.34%)</title><rect x="545.4" y="211.0" width="39.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="548.4" y="222.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (185 samples, 3.34%)</title><rect x="545.4" y="195.0" width="39.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="548.4" y="206.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (185 samples, 3.34%)</title><rect x="545.4" y="179.0" width="39.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="548.4" y="190.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (56 samples, 1.01%)</title><rect x="545.4" y="163.0" width="11.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="548.4" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (56 samples, 1.01%)</title><rect x="545.4" y="147.0" width="11.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="548.4" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (56 samples, 1.01%)</title><rect x="545.4" y="131.0" width="11.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="548.4" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (56 samples, 1.01%)</title><rect x="545.4" y="115.0" width="11.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="548.4" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (4 samples, 0.07%)</title><rect x="545.4" y="99.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="548.4" y="110.0"></text>
</g>
<g>
<title>java.util.HashMap (11 samples, 0.20%)</title><rect x="546.2" y="99.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="549.2" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (21 samples, 0.38%)</title><rect x="548.6" y="99.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="551.6" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (21 samples, 0.38%)</title><rect x="548.6" y="83.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="551.6" y="94.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.38%)</title><rect x="548.6" y="67.0" width="4.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="551.6" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (14 samples, 0.25%)</title><rect x="553.0" y="99.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.25%)</title><rect x="553.0" y="83.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="556.0" y="94.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.09%)</title><rect x="553.0" y="67.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="556.0" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.16%)</title><rect x="554.1" y="67.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.1" y="78.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.16%)</title><rect x="554.1" y="51.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="557.1" y="62.0"></text>
</g>
<g>
<title>org.slf4j.helpers.FormattingTuple (6 samples, 0.11%)</title><rect x="556.0" y="99.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="559.0" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (129 samples, 2.33%)</title><rect x="557.3" y="163.0" width="27.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="560.3" y="174.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (92 samples, 1.66%)</title><rect x="557.3" y="147.0" width="19.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="560.3" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (92 samples, 1.66%)</title><rect x="557.3" y="131.0" width="19.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="560.3" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 0.04%)</title><rect x="557.3" y="115.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="560.3" y="126.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (2 samples, 0.04%)</title><rect x="557.3" y="99.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="560.3" y="110.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (4 samples, 0.07%)</title><rect x="557.7" y="115.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="560.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (8 samples, 0.14%)</title><rect x="558.6" y="115.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="561.6" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (8 samples, 0.14%)</title><rect x="558.6" y="99.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="561.6" y="110.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.14%)</title><rect x="558.6" y="83.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="561.6" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (50 samples, 0.90%)</title><rect x="560.3" y="115.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.3" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (50 samples, 0.90%)</title><rect x="560.3" y="99.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.3" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (50 samples, 0.90%)</title><rect x="560.3" y="83.0" width="10.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="563.3" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (50 samples, 0.90%)</title><rect x="560.3" y="67.0" width="10.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.3" y="78.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.90%)</title><rect x="560.3" y="51.0" width="10.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="563.3" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (28 samples, 0.51%)</title><rect x="570.9" y="115.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="573.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.51%)</title><rect x="570.9" y="99.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.9" y="110.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="570.9" y="83.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="573.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.45%)</title><rect x="571.6" y="83.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="574.6" y="94.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.45%)</title><rect x="571.6" y="67.0" width="5.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="574.6" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (37 samples, 0.67%)</title><rect x="576.9" y="147.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="579.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (37 samples, 0.67%)</title><rect x="576.9" y="131.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="579.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (37 samples, 0.67%)</title><rect x="576.9" y="115.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="579.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (37 samples, 0.67%)</title><rect x="576.9" y="99.0" width="7.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="579.9" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (37 samples, 0.67%)</title><rect x="576.9" y="83.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="579.9" y="94.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.67%)</title><rect x="576.9" y="67.0" width="7.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="579.9" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.14%)</title><rect x="584.8" y="275.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="587.8" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.09%)</title><rect x="586.5" y="307.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="589.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (5 samples, 0.09%)</title><rect x="586.5" y="291.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="589.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (5 samples, 0.09%)</title><rect x="586.5" y="275.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="589.5" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.09%)</title><rect x="586.5" y="259.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="589.5" y="270.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="586.5" y="243.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="589.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.16%)</title><rect x="587.5" y="307.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.16%)</title><rect x="587.5" y="291.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="590.5" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.16%)</title><rect x="587.5" y="275.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="590.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.put (14 samples, 0.25%)</title><rect x="589.5" y="307.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.09%)</title><rect x="589.5" y="291.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="592.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.09%)</title><rect x="589.5" y="275.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.get$Lambda (5 samples, 0.09%)</title><rect x="589.5" y="259.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="592.5" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$60 (5 samples, 0.09%)</title><rect x="589.5" y="243.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="592.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.16%)</title><rect x="590.5" y="291.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.5" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.16%)</title><rect x="590.5" y="275.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="593.5" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.16%)</title><rect x="590.5" y="259.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="593.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (11 samples, 0.20%)</title><rect x="592.4" y="339.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.20%)</title><rect x="592.4" y="323.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.20%)</title><rect x="592.4" y="307.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.4" y="318.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="592.4" y="291.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="595.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.14%)</title><rect x="593.1" y="291.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.1" y="302.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.14%)</title><rect x="593.1" y="275.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="596.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (54 samples, 0.97%)</title><rect x="594.8" y="371.0" width="11.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.8" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (8 samples, 0.14%)</title><rect x="594.8" y="355.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="597.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (20 samples, 0.36%)</title><rect x="596.5" y="355.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.5" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (20 samples, 0.36%)</title><rect x="596.5" y="339.0" width="4.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="599.5" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 0.47%)</title><rect x="600.7" y="355.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.7" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 0.47%)</title><rect x="600.7" y="339.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="603.7" y="350.0"></text>
</g>
<g>
<title>char[] (20 samples, 0.36%)</title><rect x="600.7" y="323.0" width="4.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="603.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.04%)</title><rect x="605.0" y="323.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="608.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.07%)</title><rect x="605.4" y="323.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="608.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.07%)</title><rect x="605.4" y="307.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="608.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.07%)</title><rect x="605.4" y="291.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="608.4" y="302.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="605.4" y="275.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="608.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (6 samples, 0.11%)</title><rect x="606.3" y="371.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="609.3" y="382.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="606.3" y="355.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="609.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.13%)</title><rect x="607.6" y="371.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="610.6" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.13%)</title><rect x="607.6" y="355.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.13%)</title><rect x="607.6" y="339.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="610.6" y="350.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.04%)</title><rect x="607.6" y="323.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="610.6" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.09%)</title><rect x="608.0" y="323.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.0" y="334.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="608.0" y="307.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="611.0" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (47 samples, 0.85%)</title><rect x="609.1" y="371.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="612.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (47 samples, 0.85%)</title><rect x="609.1" y="355.0" width="10.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.1" y="366.0"></text>
</g>
<g>
<title>char[] (26 samples, 0.47%)</title><rect x="609.1" y="339.0" width="5.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="612.1" y="350.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.16%)</title><rect x="614.6" y="339.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="617.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.22%)</title><rect x="616.5" y="339.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="619.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.22%)</title><rect x="616.5" y="323.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="619.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (12 samples, 0.22%)</title><rect x="616.5" y="307.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="619.5" y="318.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.22%)</title><rect x="616.5" y="291.0" width="2.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="619.5" y="302.0"></text>
</g>
<g>
<title>[pool-3-thread-1 tid=117884] (344 samples, 6.21%)</title><rect x="619.1" y="451.0" width="73.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="622.1" y="462.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (344 samples, 6.21%)</title><rect x="619.1" y="435.0" width="73.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="622.1" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (344 samples, 6.21%)</title><rect x="619.1" y="419.0" width="73.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="622.1" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (344 samples, 6.21%)</title><rect x="619.1" y="403.0" width="73.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="622.1" y="414.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (14 samples, 0.25%)</title><rect x="619.1" y="387.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="622.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (14 samples, 0.25%)</title><rect x="619.1" y="371.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="622.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (13 samples, 0.23%)</title><rect x="619.1" y="355.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (13 samples, 0.23%)</title><rect x="619.1" y="339.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (13 samples, 0.23%)</title><rect x="619.1" y="323.0" width="2.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="622.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.run (330 samples, 5.96%)</title><rect x="622.0" y="387.0" width="70.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.0" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (330 samples, 5.96%)</title><rect x="622.0" y="371.0" width="70.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.0" y="382.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.putValue (330 samples, 5.96%)</title><rect x="622.0" y="355.0" width="70.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="625.0" y="366.0">ru/mail/..</text>
</g>
<g>
<title>one.nio.http.Response (18 samples, 0.32%)</title><rect x="622.0" y="339.0" width="3.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="625.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (71 samples, 1.28%)</title><rect x="625.9" y="339.0" width="15.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (71 samples, 1.28%)</title><rect x="625.9" y="323.0" width="15.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (48 samples, 0.87%)</title><rect x="625.9" y="307.0" width="10.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.9" y="318.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (48 samples, 0.87%)</title><rect x="625.9" y="291.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.9" y="302.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.87%)</title><rect x="625.9" y="275.0" width="10.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="628.9" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (23 samples, 0.42%)</title><rect x="636.1" y="307.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.1" y="318.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (23 samples, 0.42%)</title><rect x="636.1" y="291.0" width="4.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="639.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (58 samples, 1.05%)</title><rect x="641.0" y="339.0" width="12.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.0" y="350.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.52%)</title><rect x="641.0" y="323.0" width="6.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="644.0" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (19 samples, 0.34%)</title><rect x="647.2" y="323.0" width="4.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="650.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.18%)</title><rect x="651.2" y="323.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="654.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (183 samples, 3.30%)</title><rect x="653.4" y="339.0" width="39.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.4" y="350.0">ru/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (72 samples, 1.30%)</title><rect x="653.4" y="323.0" width="15.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="656.4" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (72 samples, 1.30%)</title><rect x="653.4" y="307.0" width="15.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="656.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (6 samples, 0.11%)</title><rect x="668.7" y="323.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="671.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (6 samples, 0.11%)</title><rect x="668.7" y="307.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (6 samples, 0.11%)</title><rect x="668.7" y="291.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="671.7" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.11%)</title><rect x="668.7" y="275.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="671.7" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (6 samples, 0.11%)</title><rect x="668.7" y="259.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.7" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 0.05%)</title><rect x="668.7" y="243.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.7" y="254.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (3 samples, 0.05%)</title><rect x="668.7" y="227.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="671.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (3 samples, 0.05%)</title><rect x="669.3" y="243.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="672.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (3 samples, 0.05%)</title><rect x="669.3" y="227.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="672.3" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (3 samples, 0.05%)</title><rect x="669.3" y="211.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="672.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (105 samples, 1.90%)</title><rect x="670.0" y="323.0" width="22.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="673.0" y="334.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (81 samples, 1.46%)</title><rect x="670.0" y="307.0" width="17.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="673.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (81 samples, 1.46%)</title><rect x="670.0" y="291.0" width="17.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="673.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (81 samples, 1.46%)</title><rect x="670.0" y="275.0" width="17.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="673.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (5 samples, 0.09%)</title><rect x="687.2" y="307.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (5 samples, 0.09%)</title><rect x="687.2" y="291.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.2" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (5 samples, 0.09%)</title><rect x="687.2" y="275.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="690.2" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (19 samples, 0.34%)</title><rect x="688.3" y="307.0" width="4.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="691.3" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-2 tid=117890] (334 samples, 6.03%)</title><rect x="692.4" y="451.0" width="71.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="695.4" y="462.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (334 samples, 6.03%)</title><rect x="692.4" y="435.0" width="71.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.4" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (334 samples, 6.03%)</title><rect x="692.4" y="419.0" width="71.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.4" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (334 samples, 6.03%)</title><rect x="692.4" y="403.0" width="71.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.4" y="414.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (22 samples, 0.40%)</title><rect x="692.4" y="387.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (22 samples, 0.40%)</title><rect x="692.4" y="371.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (21 samples, 0.38%)</title><rect x="692.4" y="355.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (21 samples, 0.38%)</title><rect x="692.4" y="339.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="695.4" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (21 samples, 0.38%)</title><rect x="692.4" y="323.0" width="4.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="695.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.run (312 samples, 5.63%)</title><rect x="697.0" y="387.0" width="66.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.0" y="398.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (312 samples, 5.63%)</title><rect x="697.0" y="371.0" width="66.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.0" y="382.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.putValue (312 samples, 5.63%)</title><rect x="697.0" y="355.0" width="66.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="700.0" y="366.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (18 samples, 0.32%)</title><rect x="697.0" y="339.0" width="3.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="700.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (74 samples, 1.34%)</title><rect x="700.9" y="339.0" width="15.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="703.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (74 samples, 1.34%)</title><rect x="700.9" y="323.0" width="15.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="703.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (54 samples, 0.97%)</title><rect x="700.9" y="307.0" width="11.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="703.9" y="318.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (54 samples, 0.97%)</title><rect x="700.9" y="291.0" width="11.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.9" y="302.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.97%)</title><rect x="700.9" y="275.0" width="11.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="703.9" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (20 samples, 0.36%)</title><rect x="712.4" y="307.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="715.4" y="318.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (20 samples, 0.36%)</title><rect x="712.4" y="291.0" width="4.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="715.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (58 samples, 1.05%)</title><rect x="716.6" y="339.0" width="12.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="719.6" y="350.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.49%)</title><rect x="716.6" y="323.0" width="5.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="719.6" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (22 samples, 0.40%)</title><rect x="722.4" y="323.0" width="4.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="725.4" y="334.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.16%)</title><rect x="727.1" y="323.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="730.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (162 samples, 2.92%)</title><rect x="729.0" y="339.0" width="34.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.0" y="350.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (65 samples, 1.17%)</title><rect x="729.0" y="323.0" width="13.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="732.0" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (65 samples, 1.17%)</title><rect x="729.0" y="307.0" width="13.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="732.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.05%)</title><rect x="742.8" y="323.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.05%)</title><rect x="742.8" y="307.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="745.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.05%)</title><rect x="742.8" y="291.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="745.8" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.05%)</title><rect x="742.8" y="275.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="745.8" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.05%)</title><rect x="742.8" y="259.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="745.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (3 samples, 0.05%)</title><rect x="742.8" y="243.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="745.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (3 samples, 0.05%)</title><rect x="742.8" y="227.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="745.8" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (3 samples, 0.05%)</title><rect x="742.8" y="211.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="745.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (94 samples, 1.70%)</title><rect x="743.5" y="323.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="746.5" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (68 samples, 1.23%)</title><rect x="743.5" y="307.0" width="14.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="746.5" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (68 samples, 1.23%)</title><rect x="743.5" y="291.0" width="14.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.5" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (68 samples, 1.23%)</title><rect x="743.5" y="275.0" width="14.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="746.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (10 samples, 0.18%)</title><rect x="758.0" y="307.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="761.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (10 samples, 0.18%)</title><rect x="758.0" y="291.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="761.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (9 samples, 0.16%)</title><rect x="758.2" y="275.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="761.2" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (16 samples, 0.29%)</title><rect x="760.1" y="307.0" width="3.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="763.1" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-3 tid=117889] (335 samples, 6.05%)</title><rect x="763.5" y="451.0" width="71.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="766.5" y="462.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (335 samples, 6.05%)</title><rect x="763.5" y="435.0" width="71.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="766.5" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (335 samples, 6.05%)</title><rect x="763.5" y="419.0" width="71.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="766.5" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (335 samples, 6.05%)</title><rect x="763.5" y="403.0" width="71.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="766.5" y="414.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (16 samples, 0.29%)</title><rect x="763.5" y="387.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="766.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (16 samples, 0.29%)</title><rect x="763.5" y="371.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="766.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 0.25%)</title><rect x="763.5" y="355.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="766.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (14 samples, 0.25%)</title><rect x="763.5" y="339.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="766.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (14 samples, 0.25%)</title><rect x="763.5" y="323.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="766.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.04%)</title><rect x="766.5" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.04%)</title><rect x="766.5" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="769.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.04%)</title><rect x="766.5" y="323.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.04%)</title><rect x="766.5" y="307.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="769.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.04%)</title><rect x="766.5" y="291.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="769.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.run (319 samples, 5.76%)</title><rect x="766.9" y="387.0" width="68.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="769.9" y="398.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (319 samples, 5.76%)</title><rect x="766.9" y="371.0" width="68.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="769.9" y="382.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.putValue (319 samples, 5.76%)</title><rect x="766.9" y="355.0" width="68.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.9" y="366.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (15 samples, 0.27%)</title><rect x="766.9" y="339.0" width="3.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="769.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (93 samples, 1.68%)</title><rect x="770.1" y="339.0" width="19.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="773.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (93 samples, 1.68%)</title><rect x="770.1" y="323.0" width="19.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="773.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (65 samples, 1.17%)</title><rect x="770.1" y="307.0" width="13.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="773.1" y="318.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (65 samples, 1.17%)</title><rect x="770.1" y="291.0" width="13.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="773.1" y="302.0"></text>
</g>
<g>
<title>byte[] (65 samples, 1.17%)</title><rect x="770.1" y="275.0" width="13.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="773.1" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (28 samples, 0.51%)</title><rect x="784.0" y="307.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="787.0" y="318.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (28 samples, 0.51%)</title><rect x="784.0" y="291.0" width="5.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="787.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (59 samples, 1.07%)</title><rect x="789.9" y="339.0" width="12.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="792.9" y="350.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.51%)</title><rect x="789.9" y="323.0" width="6.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="792.9" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (21 samples, 0.38%)</title><rect x="795.9" y="323.0" width="4.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="798.9" y="334.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.18%)</title><rect x="800.4" y="323.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="803.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (152 samples, 2.74%)</title><rect x="802.5" y="339.0" width="32.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.5" y="350.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (65 samples, 1.17%)</title><rect x="802.5" y="323.0" width="13.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.5" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (65 samples, 1.17%)</title><rect x="802.5" y="307.0" width="13.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="805.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.05%)</title><rect x="816.3" y="323.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="819.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.05%)</title><rect x="816.3" y="307.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="819.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.05%)</title><rect x="816.3" y="291.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.3" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.05%)</title><rect x="816.3" y="275.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.3" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.05%)</title><rect x="816.3" y="259.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (2 samples, 0.04%)</title><rect x="816.5" y="243.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="819.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (2 samples, 0.04%)</title><rect x="816.5" y="227.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.5" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (2 samples, 0.04%)</title><rect x="816.5" y="211.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="819.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (84 samples, 1.52%)</title><rect x="817.0" y="323.0" width="17.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="820.0" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (65 samples, 1.17%)</title><rect x="817.0" y="307.0" width="13.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="820.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (65 samples, 1.17%)</title><rect x="817.0" y="291.0" width="13.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="820.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (65 samples, 1.17%)</title><rect x="817.0" y="275.0" width="13.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="820.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (6 samples, 0.11%)</title><rect x="830.8" y="307.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="833.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (6 samples, 0.11%)</title><rect x="830.8" y="291.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="833.8" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (5 samples, 0.09%)</title><rect x="831.0" y="275.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="834.0" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (13 samples, 0.23%)</title><rect x="832.1" y="307.0" width="2.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="835.1" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-4 tid=117887] (333 samples, 6.01%)</title><rect x="834.9" y="451.0" width="70.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="837.9" y="462.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (333 samples, 6.01%)</title><rect x="834.9" y="435.0" width="70.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="837.9" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (333 samples, 6.01%)</title><rect x="834.9" y="419.0" width="70.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="837.9" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (333 samples, 6.01%)</title><rect x="834.9" y="403.0" width="70.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="837.9" y="414.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (12 samples, 0.22%)</title><rect x="834.9" y="387.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="837.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (12 samples, 0.22%)</title><rect x="834.9" y="371.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (12 samples, 0.22%)</title><rect x="834.9" y="355.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="837.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (12 samples, 0.22%)</title><rect x="834.9" y="339.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="837.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (12 samples, 0.22%)</title><rect x="834.9" y="323.0" width="2.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="837.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.run (321 samples, 5.80%)</title><rect x="837.4" y="387.0" width="68.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="840.4" y="398.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (321 samples, 5.80%)</title><rect x="837.4" y="371.0" width="68.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="840.4" y="382.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.putValue (321 samples, 5.80%)</title><rect x="837.4" y="355.0" width="68.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="840.4" y="366.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (17 samples, 0.31%)</title><rect x="837.4" y="339.0" width="3.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="840.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (76 samples, 1.37%)</title><rect x="841.0" y="339.0" width="16.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="844.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (76 samples, 1.37%)</title><rect x="841.0" y="323.0" width="16.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="844.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (51 samples, 0.92%)</title><rect x="841.0" y="307.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="844.0" y="318.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (51 samples, 0.92%)</title><rect x="841.0" y="291.0" width="10.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="844.0" y="302.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.92%)</title><rect x="841.0" y="275.0" width="10.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="844.0" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (25 samples, 0.45%)</title><rect x="851.9" y="307.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="854.9" y="318.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (25 samples, 0.45%)</title><rect x="851.9" y="291.0" width="5.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="854.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (64 samples, 1.16%)</title><rect x="857.2" y="339.0" width="13.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="860.2" y="350.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.42%)</title><rect x="857.2" y="323.0" width="4.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="860.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (23 samples, 0.42%)</title><rect x="862.1" y="323.0" width="4.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="865.1" y="334.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.32%)</title><rect x="867.0" y="323.0" width="3.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="870.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (164 samples, 2.96%)</title><rect x="870.9" y="339.0" width="34.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="873.9" y="350.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (65 samples, 1.17%)</title><rect x="870.9" y="323.0" width="13.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="873.9" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (65 samples, 1.17%)</title><rect x="870.9" y="307.0" width="13.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="873.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (5 samples, 0.09%)</title><rect x="884.7" y="323.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (5 samples, 0.09%)</title><rect x="884.7" y="307.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="887.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (5 samples, 0.09%)</title><rect x="884.7" y="291.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.7" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.09%)</title><rect x="884.7" y="275.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="887.7" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.09%)</title><rect x="884.7" y="259.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="887.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (4 samples, 0.07%)</title><rect x="884.9" y="243.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="887.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (4 samples, 0.07%)</title><rect x="884.9" y="227.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="887.9" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (4 samples, 0.07%)</title><rect x="884.9" y="211.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="887.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (94 samples, 1.70%)</title><rect x="885.8" y="323.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="888.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (72 samples, 1.30%)</title><rect x="885.8" y="307.0" width="15.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="888.8" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (72 samples, 1.30%)</title><rect x="885.8" y="291.0" width="15.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="888.8" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (72 samples, 1.30%)</title><rect x="885.8" y="275.0" width="15.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="888.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (5 samples, 0.09%)</title><rect x="901.1" y="307.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="904.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (5 samples, 0.09%)</title><rect x="901.1" y="291.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="904.1" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (4 samples, 0.07%)</title><rect x="901.3" y="275.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="904.3" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (17 samples, 0.31%)</title><rect x="902.2" y="307.0" width="3.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="905.2" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-5 tid=117885] (339 samples, 6.12%)</title><rect x="905.8" y="451.0" width="72.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="908.8" y="462.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (339 samples, 6.12%)</title><rect x="905.8" y="435.0" width="72.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="908.8" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (339 samples, 6.12%)</title><rect x="905.8" y="419.0" width="72.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.8" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (339 samples, 6.12%)</title><rect x="905.8" y="403.0" width="72.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.8" y="414.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (16 samples, 0.29%)</title><rect x="905.8" y="387.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="908.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (16 samples, 0.29%)</title><rect x="905.8" y="371.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="908.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (16 samples, 0.29%)</title><rect x="905.8" y="355.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="908.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (16 samples, 0.29%)</title><rect x="905.8" y="339.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (16 samples, 0.29%)</title><rect x="905.8" y="323.0" width="3.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="908.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.run (323 samples, 5.83%)</title><rect x="909.2" y="387.0" width="68.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="912.2" y="398.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (323 samples, 5.83%)</title><rect x="909.2" y="371.0" width="68.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="912.2" y="382.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.putValue (323 samples, 5.83%)</title><rect x="909.2" y="355.0" width="68.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="912.2" y="366.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (19 samples, 0.34%)</title><rect x="909.2" y="339.0" width="4.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="912.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (86 samples, 1.55%)</title><rect x="913.3" y="339.0" width="18.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="916.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (86 samples, 1.55%)</title><rect x="913.3" y="323.0" width="18.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.3" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (69 samples, 1.25%)</title><rect x="913.3" y="307.0" width="14.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="916.3" y="318.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (69 samples, 1.25%)</title><rect x="913.3" y="291.0" width="14.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="916.3" y="302.0"></text>
</g>
<g>
<title>byte[] (69 samples, 1.25%)</title><rect x="913.3" y="275.0" width="14.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="916.3" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (17 samples, 0.31%)</title><rect x="928.0" y="307.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="931.0" y="318.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (17 samples, 0.31%)</title><rect x="928.0" y="291.0" width="3.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="931.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (60 samples, 1.08%)</title><rect x="931.6" y="339.0" width="12.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="934.6" y="350.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.56%)</title><rect x="931.6" y="323.0" width="6.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="934.6" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (13 samples, 0.23%)</title><rect x="938.2" y="323.0" width="2.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="941.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.29%)</title><rect x="941.0" y="323.0" width="3.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="944.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (158 samples, 2.85%)</title><rect x="944.4" y="339.0" width="33.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="947.4" y="350.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (75 samples, 1.35%)</title><rect x="944.4" y="323.0" width="15.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="947.4" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (75 samples, 1.35%)</title><rect x="944.4" y="307.0" width="15.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="947.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (82 samples, 1.48%)</title><rect x="960.6" y="323.0" width="17.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="963.6" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (65 samples, 1.17%)</title><rect x="960.6" y="307.0" width="13.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="963.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (65 samples, 1.17%)</title><rect x="960.6" y="291.0" width="13.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="963.6" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (65 samples, 1.17%)</title><rect x="960.6" y="275.0" width="13.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="963.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (9 samples, 0.16%)</title><rect x="974.4" y="307.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="977.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (9 samples, 0.16%)</title><rect x="974.4" y="291.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="977.4" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (2 samples, 0.04%)</title><rect x="974.4" y="275.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="977.4" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (7 samples, 0.13%)</title><rect x="974.8" y="275.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="977.8" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (8 samples, 0.14%)</title><rect x="976.3" y="307.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="979.3" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-6 tid=117886] (329 samples, 5.94%)</title><rect x="978.0" y="451.0" width="70.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="981.0" y="462.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (329 samples, 5.94%)</title><rect x="978.0" y="435.0" width="70.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="981.0" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (329 samples, 5.94%)</title><rect x="978.0" y="419.0" width="70.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="981.0" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (329 samples, 5.94%)</title><rect x="978.0" y="403.0" width="70.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="981.0" y="414.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (25 samples, 0.45%)</title><rect x="978.0" y="387.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="981.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (25 samples, 0.45%)</title><rect x="978.0" y="371.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (24 samples, 0.43%)</title><rect x="978.0" y="355.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (24 samples, 0.43%)</title><rect x="978.0" y="339.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="981.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (24 samples, 0.43%)</title><rect x="978.0" y="323.0" width="5.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="981.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.run (304 samples, 5.49%)</title><rect x="983.4" y="387.0" width="64.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="986.4" y="398.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (304 samples, 5.49%)</title><rect x="983.4" y="371.0" width="64.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="986.4" y="382.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.putValue (304 samples, 5.49%)</title><rect x="983.4" y="355.0" width="64.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="986.4" y="366.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (10 samples, 0.18%)</title><rect x="983.4" y="339.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="986.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (80 samples, 1.44%)</title><rect x="985.5" y="339.0" width="17.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="988.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (80 samples, 1.44%)</title><rect x="985.5" y="323.0" width="17.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="988.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (59 samples, 1.07%)</title><rect x="985.5" y="307.0" width="12.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="988.5" y="318.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (59 samples, 1.07%)</title><rect x="985.5" y="291.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="988.5" y="302.0"></text>
</g>
<g>
<title>byte[] (59 samples, 1.07%)</title><rect x="985.5" y="275.0" width="12.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="988.5" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (21 samples, 0.38%)</title><rect x="998.1" y="307.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1001.1" y="318.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (21 samples, 0.38%)</title><rect x="998.1" y="291.0" width="4.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1001.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (68 samples, 1.23%)</title><rect x="1002.5" y="339.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1005.5" y="350.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.42%)</title><rect x="1002.5" y="323.0" width="4.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1005.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (20 samples, 0.36%)</title><rect x="1007.4" y="323.0" width="4.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1010.4" y="334.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.45%)</title><rect x="1011.7" y="323.0" width="5.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1014.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (146 samples, 2.64%)</title><rect x="1017.0" y="339.0" width="31.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1020.0" y="350.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (57 samples, 1.03%)</title><rect x="1017.0" y="323.0" width="12.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1020.0" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (57 samples, 1.03%)</title><rect x="1017.0" y="307.0" width="12.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1020.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (6 samples, 0.11%)</title><rect x="1029.2" y="323.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1032.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (6 samples, 0.11%)</title><rect x="1029.2" y="307.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1032.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (6 samples, 0.11%)</title><rect x="1029.2" y="291.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1032.2" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.11%)</title><rect x="1029.2" y="275.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1032.2" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (6 samples, 0.11%)</title><rect x="1029.2" y="259.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1032.2" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (4 samples, 0.07%)</title><rect x="1029.2" y="243.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1032.2" y="254.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (4 samples, 0.07%)</title><rect x="1029.2" y="227.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1032.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (2 samples, 0.04%)</title><rect x="1030.0" y="243.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1033.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (2 samples, 0.04%)</title><rect x="1030.0" y="227.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1033.0" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (2 samples, 0.04%)</title><rect x="1030.0" y="211.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1033.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (83 samples, 1.50%)</title><rect x="1030.4" y="323.0" width="17.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1033.4" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (59 samples, 1.07%)</title><rect x="1030.4" y="307.0" width="12.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1033.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (59 samples, 1.07%)</title><rect x="1030.4" y="291.0" width="12.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1033.4" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (59 samples, 1.07%)</title><rect x="1030.4" y="275.0" width="12.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1033.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (5 samples, 0.09%)</title><rect x="1043.0" y="307.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1046.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (5 samples, 0.09%)</title><rect x="1043.0" y="291.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1046.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (4 samples, 0.07%)</title><rect x="1043.2" y="275.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1046.2" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (19 samples, 0.34%)</title><rect x="1044.1" y="307.0" width="4.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1047.1" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-7 tid=117888] (334 samples, 6.03%)</title><rect x="1048.1" y="451.0" width="71.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1051.1" y="462.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (334 samples, 6.03%)</title><rect x="1048.1" y="435.0" width="71.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1051.1" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (334 samples, 6.03%)</title><rect x="1048.1" y="419.0" width="71.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.1" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (334 samples, 6.03%)</title><rect x="1048.1" y="403.0" width="71.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1051.1" y="414.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (15 samples, 0.27%)</title><rect x="1048.1" y="387.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1051.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (15 samples, 0.27%)</title><rect x="1048.1" y="371.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1051.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (15 samples, 0.27%)</title><rect x="1048.1" y="355.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1051.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (15 samples, 0.27%)</title><rect x="1048.1" y="339.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1051.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (15 samples, 0.27%)</title><rect x="1048.1" y="323.0" width="3.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1051.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.run (319 samples, 5.76%)</title><rect x="1051.3" y="387.0" width="68.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1054.3" y="398.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (319 samples, 5.76%)</title><rect x="1051.3" y="371.0" width="68.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1054.3" y="382.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.putValue (319 samples, 5.76%)</title><rect x="1051.3" y="355.0" width="68.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1054.3" y="366.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (15 samples, 0.27%)</title><rect x="1051.3" y="339.0" width="3.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1054.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (89 samples, 1.61%)</title><rect x="1054.5" y="339.0" width="19.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1057.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (89 samples, 1.61%)</title><rect x="1054.5" y="323.0" width="19.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1057.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (64 samples, 1.16%)</title><rect x="1054.5" y="307.0" width="13.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1057.5" y="318.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (64 samples, 1.16%)</title><rect x="1054.5" y="291.0" width="13.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1057.5" y="302.0"></text>
</g>
<g>
<title>byte[] (64 samples, 1.16%)</title><rect x="1054.5" y="275.0" width="13.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1057.5" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (25 samples, 0.45%)</title><rect x="1068.1" y="307.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1071.1" y="318.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (25 samples, 0.45%)</title><rect x="1068.1" y="291.0" width="5.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1071.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (58 samples, 1.05%)</title><rect x="1073.5" y="339.0" width="12.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1076.5" y="350.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.40%)</title><rect x="1073.5" y="323.0" width="4.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1076.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (20 samples, 0.36%)</title><rect x="1078.2" y="323.0" width="4.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1081.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.29%)</title><rect x="1082.4" y="323.0" width="3.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1085.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (157 samples, 2.83%)</title><rect x="1085.8" y="339.0" width="33.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1088.8" y="350.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (72 samples, 1.30%)</title><rect x="1085.8" y="323.0" width="15.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1088.8" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (72 samples, 1.30%)</title><rect x="1085.8" y="307.0" width="15.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1088.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (7 samples, 0.13%)</title><rect x="1101.2" y="323.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1104.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (7 samples, 0.13%)</title><rect x="1101.2" y="307.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1104.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (7 samples, 0.13%)</title><rect x="1101.2" y="291.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1104.2" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.11%)</title><rect x="1101.2" y="275.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1104.2" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (6 samples, 0.11%)</title><rect x="1101.2" y="259.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1104.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (5 samples, 0.09%)</title><rect x="1101.4" y="243.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1104.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (5 samples, 0.09%)</title><rect x="1101.4" y="227.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1104.4" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (5 samples, 0.09%)</title><rect x="1101.4" y="211.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1104.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (78 samples, 1.41%)</title><rect x="1102.7" y="323.0" width="16.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1105.7" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (58 samples, 1.05%)</title><rect x="1102.7" y="307.0" width="12.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1105.7" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (58 samples, 1.05%)</title><rect x="1102.7" y="291.0" width="12.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1105.7" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (58 samples, 1.05%)</title><rect x="1102.7" y="275.0" width="12.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1105.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (3 samples, 0.05%)</title><rect x="1115.0" y="307.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1118.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (3 samples, 0.05%)</title><rect x="1115.0" y="291.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (3 samples, 0.05%)</title><rect x="1115.0" y="275.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1118.0" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (17 samples, 0.31%)</title><rect x="1115.7" y="307.0" width="3.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1118.7" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-8 tid=117891] (332 samples, 5.99%)</title><rect x="1119.3" y="451.0" width="70.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1122.3" y="462.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (332 samples, 5.99%)</title><rect x="1119.3" y="435.0" width="70.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1122.3" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (332 samples, 5.99%)</title><rect x="1119.3" y="419.0" width="70.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1122.3" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (332 samples, 5.99%)</title><rect x="1119.3" y="403.0" width="70.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.3" y="414.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (17 samples, 0.31%)</title><rect x="1119.3" y="387.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1122.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (17 samples, 0.31%)</title><rect x="1119.3" y="371.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1122.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (17 samples, 0.31%)</title><rect x="1119.3" y="355.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1122.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (17 samples, 0.31%)</title><rect x="1119.3" y="339.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1122.3" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (17 samples, 0.31%)</title><rect x="1119.3" y="323.0" width="3.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1122.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$60/679024208.run (315 samples, 5.69%)</title><rect x="1122.9" y="387.0" width="67.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1125.9" y="398.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$put$1 (315 samples, 5.69%)</title><rect x="1122.9" y="371.0" width="67.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1125.9" y="382.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.putValue (315 samples, 5.69%)</title><rect x="1122.9" y="355.0" width="67.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1125.9" y="366.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (12 samples, 0.22%)</title><rect x="1122.9" y="339.0" width="2.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1125.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (81 samples, 1.46%)</title><rect x="1125.5" y="339.0" width="17.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1128.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (81 samples, 1.46%)</title><rect x="1125.5" y="323.0" width="17.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (54 samples, 0.97%)</title><rect x="1125.5" y="307.0" width="11.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1128.5" y="318.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (54 samples, 0.97%)</title><rect x="1125.5" y="291.0" width="11.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1128.5" y="302.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.97%)</title><rect x="1125.5" y="275.0" width="11.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1128.5" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (27 samples, 0.49%)</title><rect x="1137.0" y="307.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.0" y="318.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (27 samples, 0.49%)</title><rect x="1137.0" y="291.0" width="5.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1140.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (73 samples, 1.32%)</title><rect x="1142.7" y="339.0" width="15.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1145.7" y="350.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.51%)</title><rect x="1142.7" y="323.0" width="6.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1145.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (23 samples, 0.42%)</title><rect x="1148.7" y="323.0" width="4.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1151.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.40%)</title><rect x="1153.6" y="323.0" width="4.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1156.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (149 samples, 2.69%)</title><rect x="1158.3" y="339.0" width="31.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1161.3" y="350.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (61 samples, 1.10%)</title><rect x="1158.3" y="323.0" width="13.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1161.3" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (61 samples, 1.10%)</title><rect x="1158.3" y="307.0" width="13.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1161.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (5 samples, 0.09%)</title><rect x="1171.3" y="323.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1174.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (5 samples, 0.09%)</title><rect x="1171.3" y="307.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1174.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (5 samples, 0.09%)</title><rect x="1171.3" y="291.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1174.3" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.09%)</title><rect x="1171.3" y="275.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1174.3" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.09%)</title><rect x="1171.3" y="259.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1174.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (4 samples, 0.07%)</title><rect x="1171.5" y="243.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1174.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (4 samples, 0.07%)</title><rect x="1171.5" y="227.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1174.5" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (4 samples, 0.07%)</title><rect x="1171.5" y="211.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1174.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.upsert (83 samples, 1.50%)</title><rect x="1172.3" y="323.0" width="17.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1175.3" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (63 samples, 1.14%)</title><rect x="1172.3" y="307.0" width="13.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1175.3" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (63 samples, 1.14%)</title><rect x="1172.3" y="291.0" width="13.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1175.3" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (63 samples, 1.14%)</title><rect x="1172.3" y="275.0" width="13.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1175.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (6 samples, 0.11%)</title><rect x="1185.7" y="307.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1188.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (6 samples, 0.11%)</title><rect x="1185.7" y="291.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.7" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (2 samples, 0.04%)</title><rect x="1185.7" y="275.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1188.7" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (4 samples, 0.07%)</title><rect x="1186.2" y="275.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1189.2" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (14 samples, 0.25%)</title><rect x="1187.0" y="307.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1190.0" y="318.0"></text>
</g>
</g>
</svg>
