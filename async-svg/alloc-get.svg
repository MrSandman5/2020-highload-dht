<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="549"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="549"> </text>
<g id="frames">
<g>
<title>all (388 samples, 100.00%)</title><rect x="10.0" y="515.0" width="1180.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.0" y="526.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (149 samples, 38.40%)</title><rect x="10.0" y="499.0" width="453.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (149 samples, 38.40%)</title><rect x="10.0" y="483.0" width="453.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="494.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (149 samples, 38.40%)</title><rect x="10.0" y="467.0" width="453.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="478.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.26%)</title><rect x="10.0" y="451.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (1 samples, 0.26%)</title><rect x="10.0" y="435.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 0.26%)</title><rect x="10.0" y="419.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.26%)</title><rect x="10.0" y="403.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (1 samples, 0.26%)</title><rect x="10.0" y="387.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$86/336669398.run (59 samples, 15.21%)</title><rect x="13.0" y="451.0" width="179.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="16.0" y="462.0">ru/mail/polis/service/m..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$asyncExecute$12 (59 samples, 15.21%)</title><rect x="13.0" y="435.0" width="179.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.0" y="446.0">ru/mail/polis/service/m..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$100/1689499378.act (52 samples, 13.40%)</title><rect x="13.0" y="419.0" width="158.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.0" y="430.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replicasGet$1 (52 samples, 13.40%)</title><rect x="13.0" y="403.0" width="158.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.0" y="414.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/SimpleRequests.get (52 samples, 13.40%)</title><rect x="13.0" y="387.0" width="158.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.0" y="398.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/Entry.entryFromBytes (43 samples, 11.08%)</title><rect x="13.0" y="371.0" width="130.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.0" y="382.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (10 samples, 2.58%)</title><rect x="13.0" y="355.0" width="30.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="16.0" y="366.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 1.03%)</title><rect x="13.0" y="339.0" width="12.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="16.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (4 samples, 1.03%)</title><rect x="13.0" y="323.0" width="12.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="16.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (4 samples, 1.03%)</title><rect x="13.0" y="307.0" width="12.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (4 samples, 1.03%)</title><rect x="13.0" y="291.0" width="12.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="16.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$97/1889463284.apply (4 samples, 1.03%)</title><rect x="13.0" y="275.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="16.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (4 samples, 1.03%)</title><rect x="13.0" y="259.0" width="12.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.0" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.26%)</title><rect x="13.0" y="243.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.26%)</title><rect x="13.0" y="227.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.0" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.26%)</title><rect x="13.0" y="211.0" width="3.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="16.0" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.26%)</title><rect x="16.1" y="243.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.1" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.26%)</title><rect x="16.1" y="227.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="19.1" y="238.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (2 samples, 0.52%)</title><rect x="19.1" y="243.0" width="6.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="22.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils$$Lambda$99/825650796.apply (6 samples, 1.55%)</title><rect x="25.2" y="339.0" width="18.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="28.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (6 samples, 1.55%)</title><rect x="25.2" y="323.0" width="18.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.2" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.26%)</title><rect x="25.2" y="307.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="28.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.26%)</title><rect x="25.2" y="291.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="28.2" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.26%)</title><rect x="25.2" y="275.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="28.2" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 1.29%)</title><rect x="28.2" y="307.0" width="15.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.2" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 1.29%)</title><rect x="28.2" y="291.0" width="15.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="31.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (1 samples, 0.26%)</title><rect x="43.5" y="355.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="46.5" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.26%)</title><rect x="43.5" y="339.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="46.5" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.26%)</title><rect x="43.5" y="323.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="46.5" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1 samples, 0.26%)</title><rect x="43.5" y="307.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="46.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/Entry.present (2 samples, 0.52%)</title><rect x="46.5" y="355.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.5" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.replication.Entry (2 samples, 0.52%)</title><rect x="46.5" y="339.0" width="6.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="49.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.entryIterators (30 samples, 7.73%)</title><rect x="52.6" y="355.0" width="91.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.6" y="366.0">ru/mail/pol..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (10 samples, 2.58%)</title><rect x="52.6" y="339.0" width="30.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.6" y="350.0">co..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.52%)</title><rect x="52.6" y="323.0" width="6.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="55.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8 samples, 2.06%)</title><rect x="58.7" y="323.0" width="24.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.7" y="334.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (3 samples, 0.77%)</title><rect x="58.7" y="307.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.7" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (3 samples, 0.77%)</title><rect x="58.7" y="291.0" width="9.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="61.7" y="302.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 1.03%)</title><rect x="67.8" y="307.0" width="12.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="70.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.26%)</title><rect x="79.9" y="307.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.9" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.26%)</title><rect x="79.9" y="291.0" width="3.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="82.9" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 1.03%)</title><rect x="83.0" y="339.0" width="12.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.0" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 1.03%)</title><rect x="83.0" y="323.0" width="12.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="86.0" y="334.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (2 samples, 0.52%)</title><rect x="95.2" y="339.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.2" y="350.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.52%)</title><rect x="95.2" y="323.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="98.2" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.52%)</title><rect x="95.2" y="307.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="98.2" y="318.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (2 samples, 0.52%)</title><rect x="95.2" y="291.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="98.2" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (2 samples, 0.52%)</title><rect x="95.2" y="275.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="98.2" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (2 samples, 0.52%)</title><rect x="95.2" y="259.0" width="6.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="98.2" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.values (1 samples, 0.26%)</title><rect x="101.2" y="339.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="104.2" y="350.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableCollection (1 samples, 0.26%)</title><rect x="101.2" y="323.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.2" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableCollection (1 samples, 0.26%)</title><rect x="101.2" y="307.0" width="3.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="104.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 2.32%)</title><rect x="104.3" y="339.0" width="27.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="107.3" y="350.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 2.32%)</title><rect x="104.3" y="323.0" width="27.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="107.3" y="334.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 2.32%)</title><rect x="104.3" y="307.0" width="27.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="107.3" y="318.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (9 samples, 2.32%)</title><rect x="104.3" y="291.0" width="27.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="107.3" y="302.0">c..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (9 samples, 2.32%)</title><rect x="104.3" y="275.0" width="27.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="107.3" y="286.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (9 samples, 2.32%)</title><rect x="104.3" y="259.0" width="27.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="107.3" y="270.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$97/1889463284.apply (9 samples, 2.32%)</title><rect x="104.3" y="243.0" width="27.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="107.3" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (9 samples, 2.32%)</title><rect x="104.3" y="227.0" width="27.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="107.3" y="238.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (3 samples, 0.77%)</title><rect x="104.3" y="211.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="107.3" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.77%)</title><rect x="104.3" y="195.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="107.3" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.77%)</title><rect x="104.3" y="179.0" width="9.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="107.3" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.77%)</title><rect x="113.4" y="211.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.4" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.77%)</title><rect x="113.4" y="195.0" width="9.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="116.4" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (3 samples, 0.77%)</title><rect x="122.5" y="211.0" width="9.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="125.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (4 samples, 1.03%)</title><rect x="131.6" y="339.0" width="12.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (2 samples, 0.52%)</title><rect x="131.6" y="323.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.6" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (2 samples, 0.52%)</title><rect x="131.6" y="307.0" width="6.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="134.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (1 samples, 0.26%)</title><rect x="137.7" y="323.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.7" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (1 samples, 0.26%)</title><rect x="137.7" y="307.0" width="3.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="140.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.26%)</title><rect x="140.8" y="323.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.26%)</title><rect x="140.8" y="307.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="143.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.26%)</title><rect x="140.8" y="291.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.8" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (1 samples, 0.26%)</title><rect x="140.8" y="275.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="143.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/Entry.entryToResponse (9 samples, 2.32%)</title><rect x="143.8" y="371.0" width="27.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="146.8" y="382.0">r..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/381306527.linkToTargetMethod (3 samples, 0.77%)</title><rect x="143.8" y="355.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1548139965.invoke (3 samples, 0.77%)</title><rect x="143.8" y="339.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.77%)</title><rect x="143.8" y="323.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.26%)</title><rect x="143.8" y="307.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.8" y="318.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.26%)</title><rect x="143.8" y="291.0" width="3.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="146.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.52%)</title><rect x="146.9" y="307.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.52%)</title><rect x="146.9" y="291.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="149.9" y="302.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.52%)</title><rect x="146.9" y="275.0" width="6.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="149.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.nonemptyResponse (6 samples, 1.55%)</title><rect x="152.9" y="355.0" width="18.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="155.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 1.55%)</title><rect x="152.9" y="339.0" width="18.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.9" y="350.0"></text>
</g>
<g>
<title>byte[] (4 samples, 1.03%)</title><rect x="152.9" y="323.0" width="12.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="155.9" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.52%)</title><rect x="165.1" y="323.0" width="6.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="168.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (7 samples, 1.80%)</title><rect x="171.2" y="419.0" width="21.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.2" y="430.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 1.80%)</title><rect x="171.2" y="403.0" width="21.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.2" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 1.80%)</title><rect x="171.2" y="387.0" width="21.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="174.2" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 1.80%)</title><rect x="171.2" y="371.0" width="21.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.2" y="382.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (7 samples, 1.80%)</title><rect x="171.2" y="355.0" width="21.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="174.2" y="366.0">o..</text>
</g>
<g>
<title>byte[] (7 samples, 1.80%)</title><rect x="171.2" y="339.0" width="21.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="174.2" y="350.0">b..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$89/1483688984.run (89 samples, 22.94%)</title><rect x="192.5" y="451.0" width="270.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.5" y="462.0">ru/mail/polis/service/mrsandman5/Ser..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replicasGet$3 (89 samples, 22.94%)</title><rect x="192.5" y="435.0" width="270.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.5" y="446.0">ru/mail/polis/service/mrsandman5/Ser..</text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.52%)</title><rect x="192.5" y="419.0" width="6.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="195.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.replication (85 samples, 21.91%)</title><rect x="198.6" y="419.0" width="258.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="201.6" y="430.0">ru/mail/polis/service/mrsandman5/S..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (79 samples, 20.36%)</title><rect x="198.6" y="403.0" width="240.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="201.6" y="414.0">java/util/stream/ReferencePipeli..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (79 samples, 20.36%)</title><rect x="198.6" y="387.0" width="240.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="201.6" y="398.0">java/util/stream/AbstractPipelin..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (79 samples, 20.36%)</title><rect x="198.6" y="371.0" width="240.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="201.6" y="382.0">java/util/stream/ReduceOps$Reduc..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (79 samples, 20.36%)</title><rect x="198.6" y="355.0" width="240.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="201.6" y="366.0">java/util/stream/AbstractPipelin..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (79 samples, 20.36%)</title><rect x="198.6" y="339.0" width="240.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.6" y="350.0">java/util/stream/AbstractPipelin..</text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (79 samples, 20.36%)</title><rect x="198.6" y="323.0" width="240.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="201.6" y="334.0">java/util/HashMap$KeySpliterator..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (79 samples, 20.36%)</title><rect x="198.6" y="307.0" width="240.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="201.6" y="318.0">java/util/stream/ReferencePipeli..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$79/751199668.apply (79 samples, 20.36%)</title><rect x="198.6" y="291.0" width="240.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="201.6" y="302.0">ru/mail/polis/service/mrsandman5..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replication$0 (79 samples, 20.36%)</title><rect x="198.6" y="275.0" width="240.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="201.6" y="286.0">ru/mail/polis/service/mrsandman5..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$93/1086403673.act (2 samples, 0.52%)</title><rect x="198.6" y="259.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="201.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replicasGet$2 (2 samples, 0.52%)</title><rect x="198.6" y="243.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="201.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/SimpleRequests.get (2 samples, 0.52%)</title><rect x="198.6" y="227.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="201.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/Entry.entryFromBytes (2 samples, 0.52%)</title><rect x="198.6" y="211.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.entryIterators (2 samples, 0.52%)</title><rect x="198.6" y="195.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.52%)</title><rect x="198.6" y="179.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="201.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.52%)</title><rect x="198.6" y="163.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="201.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.52%)</title><rect x="198.6" y="147.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="201.6" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.52%)</title><rect x="198.6" y="131.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="201.6" y="142.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (2 samples, 0.52%)</title><rect x="198.6" y="115.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="201.6" y="126.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (2 samples, 0.52%)</title><rect x="198.6" y="99.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="201.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$97/1889463284.apply (2 samples, 0.52%)</title><rect x="198.6" y="83.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="201.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (2 samples, 0.52%)</title><rect x="198.6" y="67.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="201.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.52%)</title><rect x="198.6" y="51.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.6" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.52%)</title><rect x="198.6" y="35.0" width="6.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="201.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.proxy (77 samples, 19.85%)</title><rect x="204.6" y="259.0" width="234.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="207.6" y="270.0">ru/mail/polis/service/mrsandman..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (77 samples, 19.85%)</title><rect x="204.6" y="243.0" width="234.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="207.6" y="254.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (77 samples, 19.85%)</title><rect x="204.6" y="227.0" width="234.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="207.6" y="238.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (74 samples, 19.07%)</title><rect x="204.6" y="211.0" width="225.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.6" y="222.0">one/nio/http/HttpClient$Respon..</text>
</g>
<g>
<title>byte[] (58 samples, 14.95%)</title><rect x="204.6" y="195.0" width="176.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="207.6" y="206.0">byte[]</text>
</g>
<g>
<title>byte[] (16 samples, 4.12%)</title><rect x="381.0" y="195.0" width="48.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="384.0" y="206.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (3 samples, 0.77%)</title><rect x="429.7" y="211.0" width="9.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="432.7" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (3 samples, 0.77%)</title><rect x="429.7" y="195.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="432.7" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.77%)</title><rect x="429.7" y="179.0" width="9.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="432.7" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.77%)</title><rect x="429.7" y="163.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="432.7" y="174.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.52%)</title><rect x="429.7" y="147.0" width="6.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="432.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.26%)</title><rect x="435.8" y="147.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="438.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.26%)</title><rect x="435.8" y="131.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="438.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.26%)</title><rect x="435.8" y="115.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="438.8" y="126.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="435.8" y="99.0" width="3.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="438.8" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (4 samples, 1.03%)</title><rect x="438.8" y="403.0" width="12.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="441.8" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (4 samples, 1.03%)</title><rect x="438.8" y="387.0" width="12.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="441.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/clustering/ConsistentHashingTopology.replicasFor (2 samples, 0.52%)</title><rect x="451.0" y="403.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="454.0" y="414.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.52%)</title><rect x="451.0" y="387.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="454.0" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.52%)</title><rect x="451.0" y="371.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="454.0" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.52%)</title><rect x="451.0" y="355.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="454.0" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.26%)</title><rect x="451.0" y="339.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="454.0" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1 samples, 0.26%)</title><rect x="451.0" y="323.0" width="3.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="454.0" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.26%)</title><rect x="454.0" y="339.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="457.0" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1 samples, 0.26%)</title><rect x="454.0" y="323.0" width="3.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="457.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/Entry.mergeEntries (2 samples, 0.52%)</title><rect x="457.1" y="419.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="460.1" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (2 samples, 0.52%)</title><rect x="457.1" y="403.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="460.1" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (2 samples, 0.52%)</title><rect x="457.1" y="387.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.52%)</title><rect x="457.1" y="371.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="460.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2 samples, 0.52%)</title><rect x="457.1" y="355.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="460.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.52%)</title><rect x="457.1" y="339.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="460.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.52%)</title><rect x="457.1" y="323.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (2 samples, 0.52%)</title><rect x="457.1" y="307.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="460.1" y="318.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (2 samples, 0.52%)</title><rect x="457.1" y="291.0" width="6.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="460.1" y="302.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (239 samples, 61.60%)</title><rect x="463.1" y="499.0" width="726.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.1" y="510.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (18 samples, 4.64%)</title><rect x="463.1" y="483.0" width="54.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.1" y="494.0">one/n..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (18 samples, 4.64%)</title><rect x="463.1" y="467.0" width="54.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="466.1" y="478.0">one.n..</text>
</g>
<g>
<title>one/nio/net/Session.process (221 samples, 56.96%)</title><rect x="517.9" y="483.0" width="672.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="520.9" y="494.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (221 samples, 56.96%)</title><rect x="517.9" y="467.0" width="672.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.9" y="478.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (221 samples, 56.96%)</title><rect x="517.9" y="451.0" width="672.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="520.9" y="462.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (93 samples, 23.97%)</title><rect x="517.9" y="435.0" width="282.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.9" y="446.0">one/nio/http/HttpSession.handleParsedR..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (93 samples, 23.97%)</title><rect x="517.9" y="419.0" width="282.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="520.9" y="430.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (77 samples, 19.85%)</title><rect x="517.9" y="403.0" width="234.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="520.9" y="414.0">RequestHandler1_response.handle..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (16 samples, 4.12%)</title><rect x="517.9" y="387.0" width="48.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.9" y="398.0">one/..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (16 samples, 4.12%)</title><rect x="517.9" y="371.0" width="48.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.9" y="382.0">one/..</text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 4.12%)</title><rect x="517.9" y="355.0" width="48.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="520.9" y="366.0">java..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 4.12%)</title><rect x="517.9" y="339.0" width="48.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.9" y="350.0">java..</text>
</g>
<g>
<title>java.lang.String (8 samples, 2.06%)</title><rect x="517.9" y="323.0" width="24.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="520.9" y="334.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 2.06%)</title><rect x="542.2" y="323.0" width="24.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="545.2" y="334.0">j..</text>
</g>
<g>
<title>byte[] (8 samples, 2.06%)</title><rect x="542.2" y="307.0" width="24.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="545.2" y="318.0">b..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (61 samples, 15.72%)</title><rect x="566.5" y="387.0" width="185.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.5" y="398.0">ru/mail/polis/service/mr..</text>
</g>
<g>
<title>java/lang/String.getBytes (12 samples, 3.09%)</title><rect x="566.5" y="371.0" width="36.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.5" y="382.0">jav..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (12 samples, 3.09%)</title><rect x="566.5" y="355.0" width="36.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="569.5" y="366.0">jav..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (12 samples, 3.09%)</title><rect x="566.5" y="339.0" width="36.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="569.5" y="350.0">jav..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 3.09%)</title><rect x="566.5" y="323.0" width="36.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="569.5" y="334.0">jav..</text>
</g>
<g>
<title>byte[] (12 samples, 3.09%)</title><rect x="566.5" y="307.0" width="36.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="569.5" y="318.0">byt..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (19 samples, 4.90%)</title><rect x="603.0" y="371.0" width="57.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="606.0" y="382.0">java/n..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (19 samples, 4.90%)</title><rect x="603.0" y="355.0" width="57.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="606.0" y="366.0">java/n..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 4.90%)</title><rect x="603.0" y="339.0" width="57.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="606.0" y="350.0">java.n..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 1.80%)</title><rect x="660.8" y="371.0" width="21.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.8" y="382.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 1.80%)</title><rect x="660.8" y="355.0" width="21.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.8" y="366.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 1.80%)</title><rect x="660.8" y="339.0" width="21.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="663.8" y="350.0">j..</text>
</g>
<g>
<title>java.lang.String (4 samples, 1.03%)</title><rect x="660.8" y="323.0" width="12.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="663.8" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.77%)</title><rect x="673.0" y="323.0" width="9.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="676.0" y="334.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.77%)</title><rect x="673.0" y="307.0" width="9.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="676.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.replicasGet (23 samples, 5.93%)</title><rect x="682.1" y="371.0" width="70.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="685.1" y="382.0">ru/mail..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.52%)</title><rect x="682.1" y="355.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.52%)</title><rect x="682.1" y="339.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$100/1689499378.get$Lambda (2 samples, 0.52%)</title><rect x="682.1" y="323.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.1" y="334.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$100 (2 samples, 0.52%)</title><rect x="682.1" y="307.0" width="6.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="685.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/845983407.linkToTargetMethod (7 samples, 1.80%)</title><rect x="688.2" y="355.0" width="21.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="691.2" y="366.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 1.80%)</title><rect x="688.2" y="339.0" width="21.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="691.2" y="350.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$89/1483688984.get$Lambda (7 samples, 1.80%)</title><rect x="688.2" y="323.0" width="21.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="691.2" y="334.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$89 (7 samples, 1.80%)</title><rect x="688.2" y="307.0" width="21.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="691.2" y="318.0">r..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (10 samples, 2.58%)</title><rect x="709.5" y="355.0" width="30.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.5" y="366.0">on..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 2.58%)</title><rect x="709.5" y="339.0" width="30.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="712.5" y="350.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.reject (1 samples, 0.26%)</title><rect x="709.5" y="323.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="712.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$AbortPolicy.rejectedExecution (1 samples, 0.26%)</title><rect x="709.5" y="307.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.toString (1 samples, 0.26%)</title><rect x="709.5" y="291.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.26%)</title><rect x="709.5" y="275.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="712.5" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.26%)</title><rect x="709.5" y="259.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.5" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.26%)</title><rect x="709.5" y="243.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.26%)</title><rect x="709.5" y="227.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.5" y="238.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="709.5" y="211.0" width="3.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="712.5" y="222.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (9 samples, 2.32%)</title><rect x="712.5" y="323.0" width="27.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="715.5" y="334.0">o..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (9 samples, 2.32%)</title><rect x="712.5" y="307.0" width="27.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="715.5" y="318.0">o..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (9 samples, 2.32%)</title><rect x="712.5" y="291.0" width="27.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.5" y="302.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (9 samples, 2.32%)</title><rect x="712.5" y="275.0" width="27.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="715.5" y="286.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (9 samples, 2.32%)</title><rect x="712.5" y="259.0" width="27.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="715.5" y="270.0">j..</text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (9 samples, 2.32%)</title><rect x="712.5" y="243.0" width="27.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="715.5" y="254.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.asyncExecute (4 samples, 1.03%)</title><rect x="739.9" y="355.0" width="12.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="742.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.77%)</title><rect x="739.9" y="339.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="742.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.77%)</title><rect x="739.9" y="323.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="742.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$86/336669398.get$Lambda (3 samples, 0.77%)</title><rect x="739.9" y="307.0" width="9.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="742.9" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$86 (3 samples, 0.77%)</title><rect x="739.9" y="291.0" width="9.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="742.9" y="302.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (1 samples, 0.26%)</title><rect x="749.0" y="339.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.26%)</title><rect x="749.0" y="323.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="752.0" y="334.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (1 samples, 0.26%)</title><rect x="749.0" y="307.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="752.0" y="318.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (1 samples, 0.26%)</title><rect x="749.0" y="291.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (1 samples, 0.26%)</title><rect x="749.0" y="275.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="752.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 0.26%)</title><rect x="749.0" y="259.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.26%)</title><rect x="749.0" y="243.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="752.0" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (1 samples, 0.26%)</title><rect x="749.0" y="227.0" width="3.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="752.0" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (16 samples, 4.12%)</title><rect x="752.1" y="403.0" width="48.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="755.1" y="414.0">one/..</text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 4.12%)</title><rect x="752.1" y="387.0" width="48.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="755.1" y="398.0">java..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 4.12%)</title><rect x="752.1" y="371.0" width="48.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="755.1" y="382.0">java..</text>
</g>
<g>
<title>java.lang.String (10 samples, 2.58%)</title><rect x="752.1" y="355.0" width="30.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="755.1" y="366.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 1.55%)</title><rect x="782.5" y="355.0" width="18.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="785.5" y="366.0"></text>
</g>
<g>
<title>byte[] (6 samples, 1.55%)</title><rect x="782.5" y="339.0" width="18.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="785.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (78 samples, 20.10%)</title><rect x="800.7" y="435.0" width="237.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="803.7" y="446.0">one/nio/http/HttpSession.parseR..</text>
</g>
<g>
<title>one.nio.http.Request (15 samples, 3.87%)</title><rect x="800.7" y="419.0" width="45.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="803.7" y="430.0">one...</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (27 samples, 6.96%)</title><rect x="846.3" y="419.0" width="82.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="849.3" y="430.0">one/nio/h..</text>
</g>
<g>
<title>java.lang.String[] (27 samples, 6.96%)</title><rect x="846.3" y="403.0" width="82.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="849.3" y="414.0">java.lang..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 9.28%)</title><rect x="928.5" y="419.0" width="109.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="931.5" y="430.0">one/nio/util/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 9.28%)</title><rect x="928.5" y="403.0" width="109.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="931.5" y="414.0">one/nio/util/..</text>
</g>
<g>
<title>char[] (22 samples, 5.67%)</title><rect x="928.5" y="387.0" width="66.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="931.5" y="398.0">char[]</text>
</g>
<g>
<title>java.lang.String (8 samples, 2.06%)</title><rect x="995.4" y="387.0" width="24.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="998.4" y="398.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 1.55%)</title><rect x="1019.7" y="387.0" width="18.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1022.7" y="398.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 1.55%)</title><rect x="1019.7" y="371.0" width="18.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1022.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 1.55%)</title><rect x="1019.7" y="355.0" width="18.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1022.7" y="366.0"></text>
</g>
<g>
<title>byte[] (6 samples, 1.55%)</title><rect x="1019.7" y="339.0" width="18.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1022.7" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (50 samples, 12.89%)</title><rect x="1037.9" y="435.0" width="152.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1040.9" y="446.0">one/nio/util/Utf8.r..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (50 samples, 12.89%)</title><rect x="1037.9" y="419.0" width="152.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1040.9" y="430.0">one/nio/util/Utf8.r..</text>
</g>
<g>
<title>char[] (20 samples, 5.15%)</title><rect x="1037.9" y="403.0" width="60.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1040.9" y="414.0">char[]</text>
</g>
<g>
<title>java.lang.String (10 samples, 2.58%)</title><rect x="1098.8" y="403.0" width="30.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1101.8" y="414.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 5.15%)</title><rect x="1129.2" y="403.0" width="60.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1132.2" y="414.0">java/l..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 5.15%)</title><rect x="1129.2" y="387.0" width="60.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1132.2" y="398.0">java/l..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (20 samples, 5.15%)</title><rect x="1129.2" y="371.0" width="60.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1132.2" y="382.0">java/l..</text>
</g>
<g>
<title>byte[] (20 samples, 5.15%)</title><rect x="1129.2" y="355.0" width="60.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1132.2" y="366.0">byte[]</text>
</g>
</g>
</svg>
