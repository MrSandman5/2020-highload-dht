<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (17,070 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>[JMX server connection timeout 43 tid=119835] (16 samples, 0.09%)</title><rect x="10.0" y="883.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (16 samples, 0.09%)</title><rect x="10.0" y="867.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (16 samples, 0.09%)</title><rect x="10.0" y="851.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (16 samples, 0.09%)</title><rect x="10.0" y="835.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2056735970.linkToTargetMethod (16 samples, 0.09%)</title><rect x="10.0" y="819.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/190480913.invoke (16 samples, 0.09%)</title><rect x="10.0" y="803.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.09%)</title><rect x="10.0" y="787.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (16 samples, 0.09%)</title><rect x="10.0" y="771.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (16 samples, 0.09%)</title><rect x="10.0" y="755.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray0 (16 samples, 0.09%)</title><rect x="10.0" y="739.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.09%)</title><rect x="10.0" y="723.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=117865] (923 samples, 5.41%)</title><rect x="11.1" y="883.0" width="63.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="14.1" y="894.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (923 samples, 5.41%)</title><rect x="11.1" y="867.0" width="63.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.1" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.process (923 samples, 5.41%)</title><rect x="11.1" y="851.0" width="63.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.1" y="862.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (923 samples, 5.41%)</title><rect x="11.1" y="835.0" width="63.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.1" y="846.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (923 samples, 5.41%)</title><rect x="11.1" y="819.0" width="63.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="14.1" y="830.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (699 samples, 4.09%)</title><rect x="11.1" y="803.0" width="48.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.1" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (699 samples, 4.09%)</title><rect x="11.1" y="787.0" width="48.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.1" y="798.0">one/..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (656 samples, 3.84%)</title><rect x="11.1" y="771.0" width="45.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.1" y="782.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (20 samples, 0.12%)</title><rect x="11.1" y="755.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (20 samples, 0.12%)</title><rect x="11.1" y="739.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.12%)</title><rect x="11.1" y="723.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.12%)</title><rect x="11.1" y="707.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.1" y="718.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.09%)</title><rect x="11.1" y="691.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="14.1" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.03%)</title><rect x="12.1" y="691.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="15.1" y="702.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.03%)</title><rect x="12.1" y="675.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="15.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (636 samples, 3.73%)</title><rect x="12.5" y="755.0" width="44.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.5" y="766.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (582 samples, 3.41%)</title><rect x="12.5" y="739.0" width="40.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.5" y="750.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (582 samples, 3.41%)</title><rect x="12.5" y="723.0" width="40.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.5" y="734.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (573 samples, 3.36%)</title><rect x="12.5" y="707.0" width="39.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="15.5" y="718.0">ch/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (52 samples, 0.30%)</title><rect x="12.5" y="691.0" width="3.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="15.5" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (521 samples, 3.05%)</title><rect x="16.1" y="691.0" width="36.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.1" y="702.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (521 samples, 3.05%)</title><rect x="16.1" y="675.0" width="36.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.1" y="686.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (521 samples, 3.05%)</title><rect x="16.1" y="659.0" width="36.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.1" y="670.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (521 samples, 3.05%)</title><rect x="16.1" y="643.0" width="36.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.1" y="654.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (521 samples, 3.05%)</title><rect x="16.1" y="627.0" width="36.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.1" y="638.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (521 samples, 3.05%)</title><rect x="16.1" y="611.0" width="36.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.1" y="622.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (105 samples, 0.62%)</title><rect x="16.1" y="595.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.1" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (105 samples, 0.62%)</title><rect x="16.1" y="579.0" width="7.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.1" y="590.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (105 samples, 0.62%)</title><rect x="16.1" y="563.0" width="7.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.1" y="574.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (105 samples, 0.62%)</title><rect x="16.1" y="547.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.1" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (11 samples, 0.06%)</title><rect x="16.1" y="531.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="19.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (39 samples, 0.23%)</title><rect x="16.8" y="531.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.8" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (39 samples, 0.23%)</title><rect x="16.8" y="515.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.8" y="526.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.23%)</title><rect x="16.8" y="499.0" width="2.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="19.8" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (55 samples, 0.32%)</title><rect x="19.5" y="531.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="22.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (55 samples, 0.32%)</title><rect x="19.5" y="515.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.5" y="526.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.11%)</title><rect x="19.5" y="499.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="22.5" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 0.21%)</title><rect x="20.9" y="499.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.9" y="510.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.21%)</title><rect x="20.9" y="483.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="23.9" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (414 samples, 2.43%)</title><rect x="23.5" y="595.0" width="28.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.5" y="606.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (338 samples, 1.98%)</title><rect x="23.5" y="579.0" width="23.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.5" y="590.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (338 samples, 1.98%)</title><rect x="23.5" y="563.0" width="23.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.5" y="574.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (38 samples, 0.22%)</title><rect x="23.5" y="547.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.5" y="558.0"></text>
</g>
<g>
<title>java.util.Date (5 samples, 0.03%)</title><rect x="23.5" y="531.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="26.5" y="542.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (33 samples, 0.19%)</title><rect x="23.8" y="531.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.8" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (12 samples, 0.07%)</title><rect x="23.8" y="515.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="26.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="24.7" y="515.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="27.7" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (8 samples, 0.05%)</title><rect x="24.7" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="27.7" y="510.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.05%)</title><rect x="24.7" y="483.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="27.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (13 samples, 0.08%)</title><rect x="25.2" y="515.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.08%)</title><rect x="25.2" y="499.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.2" y="510.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.02%)</title><rect x="25.2" y="483.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="28.2" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.05%)</title><rect x="25.5" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="28.5" y="494.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.05%)</title><rect x="25.5" y="467.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="28.5" y="478.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (7 samples, 0.04%)</title><rect x="26.1" y="547.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="29.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (16 samples, 0.09%)</title><rect x="26.6" y="547.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="29.6" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (16 samples, 0.09%)</title><rect x="26.6" y="531.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="29.6" y="542.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.09%)</title><rect x="26.6" y="515.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="29.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (174 samples, 1.02%)</title><rect x="27.7" y="547.0" width="12.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.7" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (174 samples, 1.02%)</title><rect x="27.7" y="531.0" width="12.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.7" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (174 samples, 1.02%)</title><rect x="27.7" y="515.0" width="12.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="30.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (174 samples, 1.02%)</title><rect x="27.7" y="499.0" width="12.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.7" y="510.0"></text>
</g>
<g>
<title>byte[] (174 samples, 1.02%)</title><rect x="27.7" y="483.0" width="12.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="30.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (103 samples, 0.60%)</title><rect x="39.7" y="547.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (103 samples, 0.60%)</title><rect x="39.7" y="531.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.09%)</title><rect x="39.7" y="515.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="42.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (87 samples, 0.51%)</title><rect x="40.8" y="515.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="43.8" y="526.0"></text>
</g>
<g>
<title>byte[] (87 samples, 0.51%)</title><rect x="40.8" y="499.0" width="6.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="43.8" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (76 samples, 0.45%)</title><rect x="46.8" y="579.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (76 samples, 0.45%)</title><rect x="46.8" y="563.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="49.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (76 samples, 0.45%)</title><rect x="46.8" y="547.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (76 samples, 0.45%)</title><rect x="46.8" y="531.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.8" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (76 samples, 0.45%)</title><rect x="46.8" y="515.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.8" y="526.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.45%)</title><rect x="46.8" y="499.0" width="5.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="49.8" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.05%)</title><rect x="52.1" y="707.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="55.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (12 samples, 0.07%)</title><rect x="52.7" y="739.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="55.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (12 samples, 0.07%)</title><rect x="52.7" y="723.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (12 samples, 0.07%)</title><rect x="52.7" y="707.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.7" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.07%)</title><rect x="52.7" y="691.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="55.7" y="702.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.07%)</title><rect x="52.7" y="675.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="55.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (29 samples, 0.17%)</title><rect x="53.6" y="739.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (29 samples, 0.17%)</title><rect x="53.6" y="723.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.6" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (29 samples, 0.17%)</title><rect x="53.6" y="707.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="56.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (13 samples, 0.08%)</title><rect x="55.6" y="739.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.08%)</title><rect x="55.6" y="723.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="58.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.08%)</title><rect x="55.6" y="707.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.get$Lambda (13 samples, 0.08%)</title><rect x="55.6" y="691.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="58.6" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$66 (13 samples, 0.08%)</title><rect x="55.6" y="675.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="58.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (43 samples, 0.25%)</title><rect x="56.5" y="771.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="59.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (43 samples, 0.25%)</title><rect x="56.5" y="755.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="59.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (43 samples, 0.25%)</title><rect x="56.5" y="739.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="59.5" y="750.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.11%)</title><rect x="56.5" y="723.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="59.5" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.15%)</title><rect x="57.7" y="723.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.7" y="734.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.15%)</title><rect x="57.7" y="707.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="60.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (155 samples, 0.91%)</title><rect x="59.4" y="803.0" width="10.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.4" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (26 samples, 0.15%)</title><rect x="59.4" y="787.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="62.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (49 samples, 0.29%)</title><rect x="61.2" y="787.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="64.2" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (49 samples, 0.29%)</title><rect x="61.2" y="771.0" width="3.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="64.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (80 samples, 0.47%)</title><rect x="64.6" y="787.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="67.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (80 samples, 0.47%)</title><rect x="64.6" y="771.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.6" y="782.0"></text>
</g>
<g>
<title>char[] (46 samples, 0.27%)</title><rect x="64.6" y="755.0" width="3.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="67.6" y="766.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.08%)</title><rect x="67.8" y="755.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="70.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (21 samples, 0.12%)</title><rect x="68.7" y="755.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (21 samples, 0.12%)</title><rect x="68.7" y="739.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (21 samples, 0.12%)</title><rect x="68.7" y="723.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="71.7" y="734.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.12%)</title><rect x="68.7" y="707.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="71.7" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (69 samples, 0.40%)</title><rect x="70.1" y="803.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (69 samples, 0.40%)</title><rect x="70.1" y="787.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.1" y="798.0"></text>
</g>
<g>
<title>char[] (40 samples, 0.23%)</title><rect x="70.1" y="771.0" width="2.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="73.1" y="782.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.07%)</title><rect x="72.9" y="771.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="75.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.10%)</title><rect x="73.7" y="771.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.10%)</title><rect x="73.7" y="755.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (17 samples, 0.10%)</title><rect x="73.7" y="739.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="76.7" y="750.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.10%)</title><rect x="73.7" y="723.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="76.7" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=117866] (953 samples, 5.58%)</title><rect x="74.9" y="883.0" width="65.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="77.9" y="894.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (953 samples, 5.58%)</title><rect x="74.9" y="867.0" width="65.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.9" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (37 samples, 0.22%)</title><rect x="74.9" y="851.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.9" y="862.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (37 samples, 0.22%)</title><rect x="74.9" y="835.0" width="2.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="77.9" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (916 samples, 5.37%)</title><rect x="77.5" y="851.0" width="63.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.5" y="862.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (916 samples, 5.37%)</title><rect x="77.5" y="835.0" width="63.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.5" y="846.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (916 samples, 5.37%)</title><rect x="77.5" y="819.0" width="63.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.5" y="830.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (717 samples, 4.20%)</title><rect x="77.5" y="803.0" width="49.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.5" y="814.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (717 samples, 4.20%)</title><rect x="77.5" y="787.0" width="49.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.5" y="798.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (684 samples, 4.01%)</title><rect x="77.5" y="771.0" width="47.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.5" y="782.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (34 samples, 0.20%)</title><rect x="77.5" y="755.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (34 samples, 0.20%)</title><rect x="77.5" y="739.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="80.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (34 samples, 0.20%)</title><rect x="77.5" y="723.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="80.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (34 samples, 0.20%)</title><rect x="77.5" y="707.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.5" y="718.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.11%)</title><rect x="77.5" y="691.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="80.5" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.09%)</title><rect x="78.7" y="691.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="81.7" y="702.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.09%)</title><rect x="78.7" y="675.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="81.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (650 samples, 3.81%)</title><rect x="79.8" y="755.0" width="45.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.8" y="766.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (603 samples, 3.53%)</title><rect x="79.8" y="739.0" width="41.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="82.8" y="750.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (603 samples, 3.53%)</title><rect x="79.8" y="723.0" width="41.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.8" y="734.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (591 samples, 3.46%)</title><rect x="79.8" y="707.0" width="40.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.8" y="718.0">ch/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (48 samples, 0.28%)</title><rect x="79.8" y="691.0" width="3.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="82.8" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (543 samples, 3.18%)</title><rect x="83.1" y="691.0" width="37.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="86.1" y="702.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (543 samples, 3.18%)</title><rect x="83.1" y="675.0" width="37.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.1" y="686.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (543 samples, 3.18%)</title><rect x="83.1" y="659.0" width="37.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.1" y="670.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (543 samples, 3.18%)</title><rect x="83.1" y="643.0" width="37.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.1" y="654.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (543 samples, 3.18%)</title><rect x="83.1" y="627.0" width="37.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="86.1" y="638.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (543 samples, 3.18%)</title><rect x="83.1" y="611.0" width="37.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.1" y="622.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (115 samples, 0.67%)</title><rect x="83.1" y="595.0" width="8.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="86.1" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (115 samples, 0.67%)</title><rect x="83.1" y="579.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.1" y="590.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (115 samples, 0.67%)</title><rect x="83.1" y="563.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.1" y="574.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (115 samples, 0.67%)</title><rect x="83.1" y="547.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.1" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (14 samples, 0.08%)</title><rect x="83.1" y="531.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="86.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (51 samples, 0.30%)</title><rect x="84.1" y="531.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.1" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (51 samples, 0.30%)</title><rect x="84.1" y="515.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.1" y="526.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.30%)</title><rect x="84.1" y="499.0" width="3.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="87.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (50 samples, 0.29%)</title><rect x="87.6" y="531.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="90.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (50 samples, 0.29%)</title><rect x="87.6" y="515.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.6" y="526.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.10%)</title><rect x="87.6" y="499.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="90.6" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (33 samples, 0.19%)</title><rect x="88.8" y="499.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.8" y="510.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.19%)</title><rect x="88.8" y="483.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="91.8" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (426 samples, 2.50%)</title><rect x="91.2" y="595.0" width="29.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.2" y="606.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (342 samples, 2.00%)</title><rect x="91.2" y="579.0" width="23.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.2" y="590.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (342 samples, 2.00%)</title><rect x="91.2" y="563.0" width="23.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="94.2" y="574.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (26 samples, 0.15%)</title><rect x="91.2" y="547.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="94.2" y="558.0"></text>
</g>
<g>
<title>java.util.Date (8 samples, 0.05%)</title><rect x="91.2" y="531.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="94.2" y="542.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (18 samples, 0.11%)</title><rect x="91.8" y="531.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.8" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (4 samples, 0.02%)</title><rect x="91.8" y="515.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="94.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (13 samples, 0.08%)</title><rect x="92.1" y="515.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="95.1" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.08%)</title><rect x="92.1" y="499.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.1" y="510.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.04%)</title><rect x="92.1" y="483.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="95.1" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.04%)</title><rect x="92.5" y="483.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="95.5" y="494.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.04%)</title><rect x="92.5" y="467.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="95.5" y="478.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (12 samples, 0.07%)</title><rect x="93.0" y="547.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="96.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (25 samples, 0.15%)</title><rect x="93.9" y="547.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.9" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (25 samples, 0.15%)</title><rect x="93.9" y="531.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="96.9" y="542.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.15%)</title><rect x="93.9" y="515.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="96.9" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (183 samples, 1.07%)</title><rect x="95.6" y="547.0" width="12.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.6" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (183 samples, 1.07%)</title><rect x="95.6" y="531.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.6" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (183 samples, 1.07%)</title><rect x="95.6" y="515.0" width="12.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (183 samples, 1.07%)</title><rect x="95.6" y="499.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="98.6" y="510.0"></text>
</g>
<g>
<title>byte[] (183 samples, 1.07%)</title><rect x="95.6" y="483.0" width="12.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="98.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (96 samples, 0.56%)</title><rect x="108.2" y="547.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="111.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (96 samples, 0.56%)</title><rect x="108.2" y="531.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="111.2" y="542.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.08%)</title><rect x="108.2" y="515.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="111.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (82 samples, 0.48%)</title><rect x="109.2" y="515.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="112.2" y="526.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.48%)</title><rect x="109.2" y="499.0" width="5.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="112.2" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (84 samples, 0.49%)</title><rect x="114.9" y="579.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (84 samples, 0.49%)</title><rect x="114.9" y="563.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="117.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (84 samples, 0.49%)</title><rect x="114.9" y="547.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (84 samples, 0.49%)</title><rect x="114.9" y="531.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (84 samples, 0.49%)</title><rect x="114.9" y="515.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="117.9" y="526.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.49%)</title><rect x="114.9" y="499.0" width="5.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="117.9" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.07%)</title><rect x="120.7" y="707.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="123.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 0.05%)</title><rect x="121.5" y="739.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (9 samples, 0.05%)</title><rect x="121.5" y="723.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (9 samples, 0.05%)</title><rect x="121.5" y="707.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.5" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.05%)</title><rect x="121.5" y="691.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.5" y="702.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.05%)</title><rect x="121.5" y="675.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="124.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.14%)</title><rect x="122.1" y="739.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="125.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.14%)</title><rect x="122.1" y="723.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="125.1" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.14%)</title><rect x="122.1" y="707.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="125.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (14 samples, 0.08%)</title><rect x="123.8" y="739.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.08%)</title><rect x="123.8" y="723.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="126.8" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.08%)</title><rect x="123.8" y="707.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.get$Lambda (14 samples, 0.08%)</title><rect x="123.8" y="691.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="126.8" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$66 (14 samples, 0.08%)</title><rect x="123.8" y="675.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="126.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (33 samples, 0.19%)</title><rect x="124.8" y="771.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (33 samples, 0.19%)</title><rect x="124.8" y="755.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="127.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (33 samples, 0.19%)</title><rect x="124.8" y="739.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="127.8" y="750.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.07%)</title><rect x="124.8" y="723.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="127.8" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.12%)</title><rect x="125.6" y="723.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="128.6" y="734.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.12%)</title><rect x="125.6" y="707.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="128.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (136 samples, 0.80%)</title><rect x="127.0" y="803.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="130.0" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (26 samples, 0.15%)</title><rect x="127.0" y="787.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="130.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (40 samples, 0.23%)</title><rect x="128.8" y="787.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="131.8" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (40 samples, 0.23%)</title><rect x="128.8" y="771.0" width="2.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="131.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (70 samples, 0.41%)</title><rect x="131.6" y="787.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="134.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (70 samples, 0.41%)</title><rect x="131.6" y="771.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="134.6" y="782.0"></text>
</g>
<g>
<title>char[] (39 samples, 0.23%)</title><rect x="131.6" y="755.0" width="2.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="134.6" y="766.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.05%)</title><rect x="134.3" y="755.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="137.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.13%)</title><rect x="134.9" y="755.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="137.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.13%)</title><rect x="134.9" y="739.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (22 samples, 0.13%)</title><rect x="134.9" y="723.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="137.9" y="734.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.13%)</title><rect x="134.9" y="707.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="137.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (63 samples, 0.37%)</title><rect x="136.4" y="803.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="139.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (63 samples, 0.37%)</title><rect x="136.4" y="787.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.4" y="798.0"></text>
</g>
<g>
<title>char[] (29 samples, 0.17%)</title><rect x="136.4" y="771.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="139.4" y="782.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.12%)</title><rect x="138.4" y="771.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="141.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.08%)</title><rect x="139.8" y="771.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.08%)</title><rect x="139.8" y="755.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (14 samples, 0.08%)</title><rect x="139.8" y="739.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.8" y="750.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.08%)</title><rect x="139.8" y="723.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="142.8" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=117867] (933 samples, 5.47%)</title><rect x="140.8" y="883.0" width="64.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="143.8" y="894.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (933 samples, 5.47%)</title><rect x="140.8" y="867.0" width="64.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="143.8" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (36 samples, 0.21%)</title><rect x="140.8" y="851.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.8" y="862.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (36 samples, 0.21%)</title><rect x="140.8" y="835.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="143.8" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (897 samples, 5.25%)</title><rect x="143.3" y="851.0" width="62.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.3" y="862.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (897 samples, 5.25%)</title><rect x="143.3" y="835.0" width="62.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.3" y="846.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (897 samples, 5.25%)</title><rect x="143.3" y="819.0" width="62.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="146.3" y="830.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (671 samples, 3.93%)</title><rect x="143.3" y="803.0" width="46.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.3" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (671 samples, 3.93%)</title><rect x="143.3" y="787.0" width="46.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="146.3" y="798.0">one/..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (645 samples, 3.78%)</title><rect x="143.3" y="771.0" width="44.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="146.3" y="782.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (24 samples, 0.14%)</title><rect x="143.3" y="755.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (24 samples, 0.14%)</title><rect x="143.3" y="739.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (24 samples, 0.14%)</title><rect x="143.3" y="723.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.14%)</title><rect x="143.3" y="707.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.3" y="718.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.06%)</title><rect x="143.3" y="691.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="146.3" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.08%)</title><rect x="144.0" y="691.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="147.0" y="702.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.08%)</title><rect x="144.0" y="675.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="147.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (621 samples, 3.64%)</title><rect x="144.9" y="755.0" width="43.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="147.9" y="766.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (567 samples, 3.32%)</title><rect x="144.9" y="739.0" width="39.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="147.9" y="750.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (567 samples, 3.32%)</title><rect x="144.9" y="723.0" width="39.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="147.9" y="734.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (552 samples, 3.23%)</title><rect x="144.9" y="707.0" width="38.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="147.9" y="718.0">ch/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (29 samples, 0.17%)</title><rect x="144.9" y="691.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="147.9" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (523 samples, 3.06%)</title><rect x="146.9" y="691.0" width="36.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="149.9" y="702.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (523 samples, 3.06%)</title><rect x="146.9" y="675.0" width="36.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="149.9" y="686.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (523 samples, 3.06%)</title><rect x="146.9" y="659.0" width="36.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.9" y="670.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (523 samples, 3.06%)</title><rect x="146.9" y="643.0" width="36.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.9" y="654.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (523 samples, 3.06%)</title><rect x="146.9" y="627.0" width="36.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="149.9" y="638.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (523 samples, 3.06%)</title><rect x="146.9" y="611.0" width="36.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.9" y="622.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (100 samples, 0.59%)</title><rect x="146.9" y="595.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.9" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (100 samples, 0.59%)</title><rect x="146.9" y="579.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.9" y="590.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (100 samples, 0.59%)</title><rect x="146.9" y="563.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.9" y="574.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (100 samples, 0.59%)</title><rect x="146.9" y="547.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="149.9" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (7 samples, 0.04%)</title><rect x="146.9" y="531.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="149.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (51 samples, 0.30%)</title><rect x="147.4" y="531.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.4" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (51 samples, 0.30%)</title><rect x="147.4" y="515.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="150.4" y="526.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.30%)</title><rect x="147.4" y="499.0" width="3.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="150.4" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (42 samples, 0.25%)</title><rect x="151.0" y="531.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="154.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (42 samples, 0.25%)</title><rect x="151.0" y="515.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="154.0" y="526.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.09%)</title><rect x="151.0" y="499.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="154.0" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (27 samples, 0.16%)</title><rect x="152.0" y="499.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.0" y="510.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.16%)</title><rect x="152.0" y="483.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="155.0" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (422 samples, 2.47%)</title><rect x="153.9" y="595.0" width="29.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.9" y="606.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (343 samples, 2.01%)</title><rect x="153.9" y="579.0" width="23.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.9" y="590.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (343 samples, 2.01%)</title><rect x="153.9" y="563.0" width="23.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="156.9" y="574.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (23 samples, 0.13%)</title><rect x="153.9" y="547.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="156.9" y="558.0"></text>
</g>
<g>
<title>java.util.Date (7 samples, 0.04%)</title><rect x="153.9" y="531.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="156.9" y="542.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (16 samples, 0.09%)</title><rect x="154.4" y="531.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.4" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (4 samples, 0.02%)</title><rect x="154.4" y="515.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="157.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (9 samples, 0.05%)</title><rect x="154.9" y="515.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="157.9" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.05%)</title><rect x="154.9" y="499.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.9" y="510.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.04%)</title><rect x="154.9" y="483.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="157.9" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (24 samples, 0.14%)</title><rect x="155.5" y="547.0" width="1.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="158.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (21 samples, 0.12%)</title><rect x="157.2" y="547.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="160.2" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (21 samples, 0.12%)</title><rect x="157.2" y="531.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="160.2" y="542.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.12%)</title><rect x="157.2" y="515.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="160.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (200 samples, 1.17%)</title><rect x="158.6" y="547.0" width="13.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.6" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (200 samples, 1.17%)</title><rect x="158.6" y="531.0" width="13.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="161.6" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (200 samples, 1.17%)</title><rect x="158.6" y="515.0" width="13.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (200 samples, 1.17%)</title><rect x="158.6" y="499.0" width="13.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="161.6" y="510.0"></text>
</g>
<g>
<title>byte[] (200 samples, 1.17%)</title><rect x="158.6" y="483.0" width="13.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="161.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (75 samples, 0.44%)</title><rect x="172.4" y="547.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="175.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (75 samples, 0.44%)</title><rect x="172.4" y="531.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="175.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.08%)</title><rect x="172.4" y="515.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="175.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (61 samples, 0.36%)</title><rect x="173.4" y="515.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="176.4" y="526.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.36%)</title><rect x="173.4" y="499.0" width="4.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="176.4" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (79 samples, 0.46%)</title><rect x="177.6" y="579.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="180.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (79 samples, 0.46%)</title><rect x="177.6" y="563.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (79 samples, 0.46%)</title><rect x="177.6" y="547.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="180.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (79 samples, 0.46%)</title><rect x="177.6" y="531.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="180.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (79 samples, 0.46%)</title><rect x="177.6" y="515.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="180.6" y="526.0"></text>
</g>
<g>
<title>byte[] (79 samples, 0.46%)</title><rect x="177.6" y="499.0" width="5.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="180.6" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.09%)</title><rect x="183.1" y="707.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="186.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.06%)</title><rect x="184.1" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="187.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.06%)</title><rect x="184.1" y="723.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (10 samples, 0.06%)</title><rect x="184.1" y="707.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="187.1" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.06%)</title><rect x="184.1" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="187.1" y="702.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.06%)</title><rect x="184.1" y="675.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="187.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (31 samples, 0.18%)</title><rect x="184.8" y="739.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="187.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (31 samples, 0.18%)</title><rect x="184.8" y="723.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="187.8" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (31 samples, 0.18%)</title><rect x="184.8" y="707.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="187.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (13 samples, 0.08%)</title><rect x="187.0" y="739.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.08%)</title><rect x="187.0" y="723.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.0" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.08%)</title><rect x="187.0" y="707.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="190.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.get$Lambda (13 samples, 0.08%)</title><rect x="187.0" y="691.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.0" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$66 (13 samples, 0.08%)</title><rect x="187.0" y="675.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="190.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (26 samples, 0.15%)</title><rect x="187.9" y="771.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="190.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (26 samples, 0.15%)</title><rect x="187.9" y="755.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="190.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (26 samples, 0.15%)</title><rect x="187.9" y="739.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="190.9" y="750.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.06%)</title><rect x="187.9" y="723.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="190.9" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.09%)</title><rect x="188.6" y="723.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.6" y="734.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.09%)</title><rect x="188.6" y="707.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="191.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (155 samples, 0.91%)</title><rect x="189.7" y="803.0" width="10.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.7" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (18 samples, 0.11%)</title><rect x="189.7" y="787.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="192.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (53 samples, 0.31%)</title><rect x="190.9" y="787.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="193.9" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (53 samples, 0.31%)</title><rect x="190.9" y="771.0" width="3.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="193.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (84 samples, 0.49%)</title><rect x="194.6" y="787.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="197.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (84 samples, 0.49%)</title><rect x="194.6" y="771.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="197.6" y="782.0"></text>
</g>
<g>
<title>char[] (40 samples, 0.23%)</title><rect x="194.6" y="755.0" width="2.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="197.6" y="766.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.12%)</title><rect x="197.3" y="755.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="200.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24 samples, 0.14%)</title><rect x="198.7" y="755.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="201.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24 samples, 0.14%)</title><rect x="198.7" y="739.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (24 samples, 0.14%)</title><rect x="198.7" y="723.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.7" y="734.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.14%)</title><rect x="198.7" y="707.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="201.7" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (71 samples, 0.42%)</title><rect x="200.4" y="803.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="203.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (71 samples, 0.42%)</title><rect x="200.4" y="787.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="203.4" y="798.0"></text>
</g>
<g>
<title>char[] (34 samples, 0.20%)</title><rect x="200.4" y="771.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="203.4" y="782.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.09%)</title><rect x="202.7" y="771.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="205.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.13%)</title><rect x="203.8" y="771.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.13%)</title><rect x="203.8" y="755.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="206.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (22 samples, 0.13%)</title><rect x="203.8" y="739.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="206.8" y="750.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.13%)</title><rect x="203.8" y="723.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="206.8" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=117868] (940 samples, 5.51%)</title><rect x="205.3" y="883.0" width="65.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="208.3" y="894.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (940 samples, 5.51%)</title><rect x="205.3" y="867.0" width="65.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="208.3" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (35 samples, 0.21%)</title><rect x="205.3" y="851.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.3" y="862.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (35 samples, 0.21%)</title><rect x="205.3" y="835.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="208.3" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (905 samples, 5.30%)</title><rect x="207.7" y="851.0" width="62.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.7" y="862.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (905 samples, 5.30%)</title><rect x="207.7" y="835.0" width="62.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="210.7" y="846.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (905 samples, 5.30%)</title><rect x="207.7" y="819.0" width="62.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="210.7" y="830.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (689 samples, 4.04%)</title><rect x="207.7" y="803.0" width="47.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="210.7" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (689 samples, 4.04%)</title><rect x="207.7" y="787.0" width="47.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.7" y="798.0">one/..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (659 samples, 3.86%)</title><rect x="207.7" y="771.0" width="45.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.7" y="782.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (32 samples, 0.19%)</title><rect x="207.7" y="755.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="210.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (32 samples, 0.19%)</title><rect x="207.7" y="739.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="210.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (32 samples, 0.19%)</title><rect x="207.7" y="723.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.19%)</title><rect x="207.7" y="707.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.7" y="718.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.12%)</title><rect x="207.7" y="691.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="210.7" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.07%)</title><rect x="209.1" y="691.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="212.1" y="702.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.07%)</title><rect x="209.1" y="675.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="212.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (627 samples, 3.67%)</title><rect x="209.9" y="755.0" width="43.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.9" y="766.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (575 samples, 3.37%)</title><rect x="209.9" y="739.0" width="39.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="212.9" y="750.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (575 samples, 3.37%)</title><rect x="209.9" y="723.0" width="39.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="212.9" y="734.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (561 samples, 3.29%)</title><rect x="209.9" y="707.0" width="38.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="212.9" y="718.0">ch/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (49 samples, 0.29%)</title><rect x="209.9" y="691.0" width="3.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="212.9" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (512 samples, 3.00%)</title><rect x="213.3" y="691.0" width="35.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="216.3" y="702.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (512 samples, 3.00%)</title><rect x="213.3" y="675.0" width="35.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.3" y="686.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (512 samples, 3.00%)</title><rect x="213.3" y="659.0" width="35.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="216.3" y="670.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (512 samples, 3.00%)</title><rect x="213.3" y="643.0" width="35.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="216.3" y="654.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (512 samples, 3.00%)</title><rect x="213.3" y="627.0" width="35.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="216.3" y="638.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (512 samples, 3.00%)</title><rect x="213.3" y="611.0" width="35.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="216.3" y="622.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (110 samples, 0.64%)</title><rect x="213.3" y="595.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.3" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (110 samples, 0.64%)</title><rect x="213.3" y="579.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="216.3" y="590.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (110 samples, 0.64%)</title><rect x="213.3" y="563.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="216.3" y="574.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (110 samples, 0.64%)</title><rect x="213.3" y="547.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.3" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (11 samples, 0.06%)</title><rect x="213.3" y="531.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="216.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (55 samples, 0.32%)</title><rect x="214.1" y="531.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="217.1" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (55 samples, 0.32%)</title><rect x="214.1" y="515.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="217.1" y="526.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.32%)</title><rect x="214.1" y="499.0" width="3.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="217.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (44 samples, 0.26%)</title><rect x="217.9" y="531.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="220.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (44 samples, 0.26%)</title><rect x="217.9" y="515.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.9" y="526.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.08%)</title><rect x="217.9" y="499.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="220.9" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (31 samples, 0.18%)</title><rect x="218.8" y="499.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="221.8" y="510.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.18%)</title><rect x="218.8" y="483.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="221.8" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (402 samples, 2.36%)</title><rect x="220.9" y="595.0" width="27.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="223.9" y="606.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (344 samples, 2.02%)</title><rect x="220.9" y="579.0" width="23.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="223.9" y="590.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (344 samples, 2.02%)</title><rect x="220.9" y="563.0" width="23.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="223.9" y="574.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (29 samples, 0.17%)</title><rect x="220.9" y="547.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="223.9" y="558.0"></text>
</g>
<g>
<title>java.util.Date (7 samples, 0.04%)</title><rect x="220.9" y="531.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="223.9" y="542.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (22 samples, 0.13%)</title><rect x="221.4" y="531.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="224.4" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (8 samples, 0.05%)</title><rect x="221.4" y="515.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="224.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="221.9" y="515.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="224.9" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.02%)</title><rect x="221.9" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="224.9" y="510.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.02%)</title><rect x="221.9" y="483.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="224.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (10 samples, 0.06%)</title><rect x="222.2" y="515.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="225.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.06%)</title><rect x="222.2" y="499.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="225.2" y="510.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.02%)</title><rect x="222.2" y="483.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="225.2" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.04%)</title><rect x="222.5" y="483.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="225.5" y="494.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.04%)</title><rect x="222.5" y="467.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="225.5" y="478.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (19 samples, 0.11%)</title><rect x="222.9" y="547.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="225.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (20 samples, 0.12%)</title><rect x="224.2" y="547.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="227.2" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (20 samples, 0.12%)</title><rect x="224.2" y="531.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="227.2" y="542.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.12%)</title><rect x="224.2" y="515.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="227.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (181 samples, 1.06%)</title><rect x="225.6" y="547.0" width="12.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="228.6" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (181 samples, 1.06%)</title><rect x="225.6" y="531.0" width="12.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="228.6" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (181 samples, 1.06%)</title><rect x="225.6" y="515.0" width="12.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="228.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (181 samples, 1.06%)</title><rect x="225.6" y="499.0" width="12.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="228.6" y="510.0"></text>
</g>
<g>
<title>byte[] (181 samples, 1.06%)</title><rect x="225.6" y="483.0" width="12.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="228.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (95 samples, 0.56%)</title><rect x="238.1" y="547.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="241.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (95 samples, 0.56%)</title><rect x="238.1" y="531.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="241.1" y="542.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.11%)</title><rect x="238.1" y="515.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="241.1" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (76 samples, 0.45%)</title><rect x="239.4" y="515.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.4" y="526.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.45%)</title><rect x="239.4" y="499.0" width="5.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="242.4" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (58 samples, 0.34%)</title><rect x="244.7" y="579.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="247.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (58 samples, 0.34%)</title><rect x="244.7" y="563.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="247.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (58 samples, 0.34%)</title><rect x="244.7" y="547.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="247.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (58 samples, 0.34%)</title><rect x="244.7" y="531.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="247.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (58 samples, 0.34%)</title><rect x="244.7" y="515.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="247.7" y="526.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.34%)</title><rect x="244.7" y="499.0" width="4.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="247.7" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.08%)</title><rect x="248.7" y="707.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="251.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (11 samples, 0.06%)</title><rect x="249.7" y="739.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (11 samples, 0.06%)</title><rect x="249.7" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (11 samples, 0.06%)</title><rect x="249.7" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.7" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.06%)</title><rect x="249.7" y="691.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="252.7" y="702.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.06%)</title><rect x="249.7" y="675.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="252.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28 samples, 0.16%)</title><rect x="250.4" y="739.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="253.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28 samples, 0.16%)</title><rect x="250.4" y="723.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="253.4" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.16%)</title><rect x="250.4" y="707.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="253.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (13 samples, 0.08%)</title><rect x="252.4" y="739.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.08%)</title><rect x="252.4" y="723.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="255.4" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.08%)</title><rect x="252.4" y="707.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="255.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.get$Lambda (13 samples, 0.08%)</title><rect x="252.4" y="691.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="255.4" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$66 (13 samples, 0.08%)</title><rect x="252.4" y="675.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="255.4" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (30 samples, 0.18%)</title><rect x="253.3" y="771.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="256.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (30 samples, 0.18%)</title><rect x="253.3" y="755.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="256.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (30 samples, 0.18%)</title><rect x="253.3" y="739.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.3" y="750.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.06%)</title><rect x="253.3" y="723.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="256.3" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.11%)</title><rect x="254.0" y="723.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="257.0" y="734.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.11%)</title><rect x="254.0" y="707.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="257.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (143 samples, 0.84%)</title><rect x="255.3" y="803.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="258.3" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (28 samples, 0.16%)</title><rect x="255.3" y="787.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="258.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (41 samples, 0.24%)</title><rect x="257.3" y="787.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.3" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (41 samples, 0.24%)</title><rect x="257.3" y="771.0" width="2.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="260.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (74 samples, 0.43%)</title><rect x="260.1" y="787.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="263.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (74 samples, 0.43%)</title><rect x="260.1" y="771.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.1" y="782.0"></text>
</g>
<g>
<title>char[] (47 samples, 0.28%)</title><rect x="260.1" y="755.0" width="3.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="263.1" y="766.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.06%)</title><rect x="263.4" y="755.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="266.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.09%)</title><rect x="264.1" y="755.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="267.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.09%)</title><rect x="264.1" y="739.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="267.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (16 samples, 0.09%)</title><rect x="264.1" y="723.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.1" y="734.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.09%)</title><rect x="264.1" y="707.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="267.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (73 samples, 0.43%)</title><rect x="265.2" y="803.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="268.2" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (73 samples, 0.43%)</title><rect x="265.2" y="787.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="268.2" y="798.0"></text>
</g>
<g>
<title>char[] (33 samples, 0.19%)</title><rect x="265.2" y="771.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="268.2" y="782.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.08%)</title><rect x="267.5" y="771.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="270.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.16%)</title><rect x="268.4" y="771.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="271.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.16%)</title><rect x="268.4" y="755.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (27 samples, 0.16%)</title><rect x="268.4" y="739.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="271.4" y="750.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.16%)</title><rect x="268.4" y="723.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="271.4" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=117869] (936 samples, 5.48%)</title><rect x="270.3" y="883.0" width="64.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="273.3" y="894.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (936 samples, 5.48%)</title><rect x="270.3" y="867.0" width="64.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="273.3" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.process (936 samples, 5.48%)</title><rect x="270.3" y="851.0" width="64.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.3" y="862.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (936 samples, 5.48%)</title><rect x="270.3" y="835.0" width="64.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="273.3" y="846.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (936 samples, 5.48%)</title><rect x="270.3" y="819.0" width="64.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="273.3" y="830.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (719 samples, 4.21%)</title><rect x="270.3" y="803.0" width="49.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="273.3" y="814.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (719 samples, 4.21%)</title><rect x="270.3" y="787.0" width="49.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="273.3" y="798.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (683 samples, 4.00%)</title><rect x="270.3" y="771.0" width="47.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.3" y="782.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (28 samples, 0.16%)</title><rect x="270.3" y="755.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="273.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (28 samples, 0.16%)</title><rect x="270.3" y="739.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="273.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (28 samples, 0.16%)</title><rect x="270.3" y="723.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="273.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.16%)</title><rect x="270.3" y="707.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="273.3" y="718.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.09%)</title><rect x="270.3" y="691.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="273.3" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.07%)</title><rect x="271.4" y="691.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="274.4" y="702.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.07%)</title><rect x="271.4" y="675.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="274.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (655 samples, 3.84%)</title><rect x="272.2" y="755.0" width="45.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="275.2" y="766.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (591 samples, 3.46%)</title><rect x="272.2" y="739.0" width="40.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="275.2" y="750.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (591 samples, 3.46%)</title><rect x="272.2" y="723.0" width="40.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="275.2" y="734.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (573 samples, 3.36%)</title><rect x="272.2" y="707.0" width="39.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="275.2" y="718.0">ch/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (44 samples, 0.26%)</title><rect x="272.2" y="691.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="275.2" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (529 samples, 3.10%)</title><rect x="275.2" y="691.0" width="36.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.2" y="702.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (529 samples, 3.10%)</title><rect x="275.2" y="675.0" width="36.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="278.2" y="686.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (529 samples, 3.10%)</title><rect x="275.2" y="659.0" width="36.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="278.2" y="670.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (529 samples, 3.10%)</title><rect x="275.2" y="643.0" width="36.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.2" y="654.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (529 samples, 3.10%)</title><rect x="275.2" y="627.0" width="36.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="278.2" y="638.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (529 samples, 3.10%)</title><rect x="275.2" y="611.0" width="36.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="278.2" y="622.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (125 samples, 0.73%)</title><rect x="275.2" y="595.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="278.2" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (125 samples, 0.73%)</title><rect x="275.2" y="579.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.2" y="590.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (125 samples, 0.73%)</title><rect x="275.2" y="563.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="278.2" y="574.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (125 samples, 0.73%)</title><rect x="275.2" y="547.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="278.2" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (28 samples, 0.16%)</title><rect x="275.2" y="531.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="278.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (45 samples, 0.26%)</title><rect x="277.2" y="531.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="280.2" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (45 samples, 0.26%)</title><rect x="277.2" y="515.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="280.2" y="526.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.26%)</title><rect x="277.2" y="499.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="280.2" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (52 samples, 0.30%)</title><rect x="280.3" y="531.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="283.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 0.30%)</title><rect x="280.3" y="515.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.3" y="526.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.04%)</title><rect x="280.3" y="499.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="283.3" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (46 samples, 0.27%)</title><rect x="280.7" y="499.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.7" y="510.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.27%)</title><rect x="280.7" y="483.0" width="3.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="283.7" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (403 samples, 2.36%)</title><rect x="284.0" y="595.0" width="27.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.0" y="606.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (333 samples, 1.95%)</title><rect x="284.0" y="579.0" width="23.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="287.0" y="590.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (333 samples, 1.95%)</title><rect x="284.0" y="563.0" width="23.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="287.0" y="574.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (21 samples, 0.12%)</title><rect x="284.0" y="547.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="287.0" y="558.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (20 samples, 0.12%)</title><rect x="284.0" y="531.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="287.0" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (9 samples, 0.05%)</title><rect x="284.0" y="515.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="287.0" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="284.6" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="287.6" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (7 samples, 0.04%)</title><rect x="284.6" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="287.6" y="510.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.04%)</title><rect x="284.6" y="483.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="287.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (4 samples, 0.02%)</title><rect x="285.1" y="515.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="288.1" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.02%)</title><rect x="285.1" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="288.1" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (9 samples, 0.05%)</title><rect x="285.4" y="547.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="288.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (20 samples, 0.12%)</title><rect x="286.0" y="547.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="289.0" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (20 samples, 0.12%)</title><rect x="286.0" y="531.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.0" y="542.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.12%)</title><rect x="286.0" y="515.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="289.0" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (185 samples, 1.08%)</title><rect x="287.4" y="547.0" width="12.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="290.4" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (185 samples, 1.08%)</title><rect x="287.4" y="531.0" width="12.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.4" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (185 samples, 1.08%)</title><rect x="287.4" y="515.0" width="12.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="290.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (185 samples, 1.08%)</title><rect x="287.4" y="499.0" width="12.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="290.4" y="510.0"></text>
</g>
<g>
<title>byte[] (185 samples, 1.08%)</title><rect x="287.4" y="483.0" width="12.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="290.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (98 samples, 0.57%)</title><rect x="300.2" y="547.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="303.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (98 samples, 0.57%)</title><rect x="300.2" y="531.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="303.2" y="542.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.12%)</title><rect x="300.2" y="515.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="303.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (77 samples, 0.45%)</title><rect x="301.6" y="515.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.6" y="526.0"></text>
</g>
<g>
<title>byte[] (77 samples, 0.45%)</title><rect x="301.6" y="499.0" width="5.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="304.6" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (70 samples, 0.41%)</title><rect x="307.0" y="579.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (70 samples, 0.41%)</title><rect x="307.0" y="563.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (70 samples, 0.41%)</title><rect x="307.0" y="547.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="310.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (70 samples, 0.41%)</title><rect x="307.0" y="531.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (70 samples, 0.41%)</title><rect x="307.0" y="515.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.0" y="526.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.41%)</title><rect x="307.0" y="499.0" width="4.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="310.0" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.11%)</title><rect x="311.8" y="707.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="314.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (19 samples, 0.11%)</title><rect x="313.1" y="739.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (19 samples, 0.11%)</title><rect x="313.1" y="723.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="316.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (19 samples, 0.11%)</title><rect x="313.1" y="707.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="316.1" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.11%)</title><rect x="313.1" y="691.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="316.1" y="702.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.11%)</title><rect x="313.1" y="675.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="316.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28 samples, 0.16%)</title><rect x="314.4" y="739.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28 samples, 0.16%)</title><rect x="314.4" y="723.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.4" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.16%)</title><rect x="314.4" y="707.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="317.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (17 samples, 0.10%)</title><rect x="316.3" y="739.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="319.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.10%)</title><rect x="316.3" y="723.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="319.3" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.10%)</title><rect x="316.3" y="707.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="319.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.get$Lambda (17 samples, 0.10%)</title><rect x="316.3" y="691.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="319.3" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$66 (17 samples, 0.10%)</title><rect x="316.3" y="675.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="319.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (36 samples, 0.21%)</title><rect x="317.5" y="771.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="320.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (36 samples, 0.21%)</title><rect x="317.5" y="755.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="320.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (36 samples, 0.21%)</title><rect x="317.5" y="739.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="320.5" y="750.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.08%)</title><rect x="317.5" y="723.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="320.5" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.13%)</title><rect x="318.4" y="723.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="321.4" y="734.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.13%)</title><rect x="318.4" y="707.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="321.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (150 samples, 0.88%)</title><rect x="320.0" y="803.0" width="10.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="323.0" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (28 samples, 0.16%)</title><rect x="320.0" y="787.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="323.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (45 samples, 0.26%)</title><rect x="321.9" y="787.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.9" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (45 samples, 0.26%)</title><rect x="321.9" y="771.0" width="3.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="324.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (77 samples, 0.45%)</title><rect x="325.0" y="787.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="328.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (77 samples, 0.45%)</title><rect x="325.0" y="771.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="328.0" y="782.0"></text>
</g>
<g>
<title>char[] (48 samples, 0.28%)</title><rect x="325.0" y="755.0" width="3.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="328.0" y="766.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.06%)</title><rect x="328.3" y="755.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="331.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (19 samples, 0.11%)</title><rect x="329.0" y="755.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="332.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (19 samples, 0.11%)</title><rect x="329.0" y="739.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="332.0" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (19 samples, 0.11%)</title><rect x="329.0" y="723.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="332.0" y="734.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.11%)</title><rect x="329.0" y="707.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="332.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (67 samples, 0.39%)</title><rect x="330.3" y="803.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (67 samples, 0.39%)</title><rect x="330.3" y="787.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="333.3" y="798.0"></text>
</g>
<g>
<title>char[] (29 samples, 0.17%)</title><rect x="330.3" y="771.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="333.3" y="782.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.11%)</title><rect x="332.3" y="771.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="335.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.12%)</title><rect x="333.6" y="771.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="336.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.12%)</title><rect x="333.6" y="755.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="336.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (20 samples, 0.12%)</title><rect x="333.6" y="739.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="336.6" y="750.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.12%)</title><rect x="333.6" y="723.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="336.6" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=117870] (916 samples, 5.37%)</title><rect x="335.0" y="883.0" width="63.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="338.0" y="894.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (916 samples, 5.37%)</title><rect x="335.0" y="867.0" width="63.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.0" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (36 samples, 0.21%)</title><rect x="335.0" y="851.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.0" y="862.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (36 samples, 0.21%)</title><rect x="335.0" y="835.0" width="2.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="338.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (880 samples, 5.16%)</title><rect x="337.5" y="851.0" width="60.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="340.5" y="862.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (880 samples, 5.16%)</title><rect x="337.5" y="835.0" width="60.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="340.5" y="846.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (880 samples, 5.16%)</title><rect x="337.5" y="819.0" width="60.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="340.5" y="830.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (667 samples, 3.91%)</title><rect x="337.5" y="803.0" width="46.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="340.5" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (667 samples, 3.91%)</title><rect x="337.5" y="787.0" width="46.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="340.5" y="798.0">one/..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (638 samples, 3.74%)</title><rect x="337.5" y="771.0" width="44.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="340.5" y="782.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (28 samples, 0.16%)</title><rect x="337.5" y="755.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="340.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (28 samples, 0.16%)</title><rect x="337.5" y="739.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="340.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (28 samples, 0.16%)</title><rect x="337.5" y="723.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="340.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.16%)</title><rect x="337.5" y="707.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="340.5" y="718.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.09%)</title><rect x="337.5" y="691.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="340.5" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.07%)</title><rect x="338.6" y="691.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="341.6" y="702.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.07%)</title><rect x="338.6" y="675.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="341.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (610 samples, 3.57%)</title><rect x="339.4" y="755.0" width="42.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="342.4" y="766.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (558 samples, 3.27%)</title><rect x="339.4" y="739.0" width="38.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.4" y="750.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (558 samples, 3.27%)</title><rect x="339.4" y="723.0" width="38.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="342.4" y="734.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (538 samples, 3.15%)</title><rect x="339.4" y="707.0" width="37.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="342.4" y="718.0">ch/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (47 samples, 0.28%)</title><rect x="339.4" y="691.0" width="3.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="342.4" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (491 samples, 2.88%)</title><rect x="342.6" y="691.0" width="34.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="345.6" y="702.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (491 samples, 2.88%)</title><rect x="342.6" y="675.0" width="34.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="345.6" y="686.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (491 samples, 2.88%)</title><rect x="342.6" y="659.0" width="34.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="345.6" y="670.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (491 samples, 2.88%)</title><rect x="342.6" y="643.0" width="34.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="345.6" y="654.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (491 samples, 2.88%)</title><rect x="342.6" y="627.0" width="34.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="345.6" y="638.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (491 samples, 2.88%)</title><rect x="342.6" y="611.0" width="34.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="345.6" y="622.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (101 samples, 0.59%)</title><rect x="342.6" y="595.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="345.6" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (101 samples, 0.59%)</title><rect x="342.6" y="579.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="345.6" y="590.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (101 samples, 0.59%)</title><rect x="342.6" y="563.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="345.6" y="574.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (101 samples, 0.59%)</title><rect x="342.6" y="547.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="345.6" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (19 samples, 0.11%)</title><rect x="342.6" y="531.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="345.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (46 samples, 0.27%)</title><rect x="344.0" y="531.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="347.0" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (46 samples, 0.27%)</title><rect x="344.0" y="515.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="347.0" y="526.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.27%)</title><rect x="344.0" y="499.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="347.0" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (36 samples, 0.21%)</title><rect x="347.1" y="531.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (36 samples, 0.21%)</title><rect x="347.1" y="515.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="350.1" y="526.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.08%)</title><rect x="347.1" y="499.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="350.1" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.13%)</title><rect x="348.0" y="499.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="351.0" y="510.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.13%)</title><rect x="348.0" y="483.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="351.0" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (390 samples, 2.28%)</title><rect x="349.6" y="595.0" width="27.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="352.6" y="606.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (327 samples, 1.92%)</title><rect x="349.6" y="579.0" width="22.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="352.6" y="590.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (327 samples, 1.92%)</title><rect x="349.6" y="563.0" width="22.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="352.6" y="574.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (22 samples, 0.13%)</title><rect x="349.6" y="547.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="352.6" y="558.0"></text>
</g>
<g>
<title>java.util.Date (8 samples, 0.05%)</title><rect x="349.6" y="531.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="352.6" y="542.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (14 samples, 0.08%)</title><rect x="350.2" y="531.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="353.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="350.4" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="353.4" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (5 samples, 0.03%)</title><rect x="350.4" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="353.4" y="510.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.03%)</title><rect x="350.4" y="483.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="353.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (6 samples, 0.04%)</title><rect x="350.7" y="515.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="353.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.04%)</title><rect x="350.7" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="353.7" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.02%)</title><rect x="350.9" y="483.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="353.9" y="494.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.02%)</title><rect x="350.9" y="467.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="353.9" y="478.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (15 samples, 0.09%)</title><rect x="351.1" y="547.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="354.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (19 samples, 0.11%)</title><rect x="352.2" y="547.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="355.2" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (19 samples, 0.11%)</title><rect x="352.2" y="531.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="355.2" y="542.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.11%)</title><rect x="352.2" y="515.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="355.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (186 samples, 1.09%)</title><rect x="353.5" y="547.0" width="12.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="356.5" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (186 samples, 1.09%)</title><rect x="353.5" y="531.0" width="12.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.5" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (186 samples, 1.09%)</title><rect x="353.5" y="515.0" width="12.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (186 samples, 1.09%)</title><rect x="353.5" y="499.0" width="12.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="356.5" y="510.0"></text>
</g>
<g>
<title>byte[] (186 samples, 1.09%)</title><rect x="353.5" y="483.0" width="12.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="356.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (85 samples, 0.50%)</title><rect x="366.4" y="547.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="369.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (85 samples, 0.50%)</title><rect x="366.4" y="531.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="369.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.06%)</title><rect x="366.4" y="515.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="369.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (75 samples, 0.44%)</title><rect x="367.0" y="515.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="370.0" y="526.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.44%)</title><rect x="367.0" y="499.0" width="5.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="370.0" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (63 samples, 0.37%)</title><rect x="372.2" y="579.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="375.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (63 samples, 0.37%)</title><rect x="372.2" y="563.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="375.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (63 samples, 0.37%)</title><rect x="372.2" y="547.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="375.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (63 samples, 0.37%)</title><rect x="372.2" y="531.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="375.2" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (63 samples, 0.37%)</title><rect x="372.2" y="515.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="375.2" y="526.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.37%)</title><rect x="372.2" y="499.0" width="4.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="375.2" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.12%)</title><rect x="376.6" y="707.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="379.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (16 samples, 0.09%)</title><rect x="378.0" y="739.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="381.0" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (16 samples, 0.09%)</title><rect x="378.0" y="723.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="381.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (16 samples, 0.09%)</title><rect x="378.0" y="707.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="381.0" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.09%)</title><rect x="378.0" y="691.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="381.0" y="702.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.09%)</title><rect x="378.0" y="675.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="381.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.14%)</title><rect x="379.1" y="739.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.14%)</title><rect x="379.1" y="723.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="382.1" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.14%)</title><rect x="379.1" y="707.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="382.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (12 samples, 0.07%)</title><rect x="380.7" y="739.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="383.7" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.07%)</title><rect x="380.7" y="723.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="383.7" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.07%)</title><rect x="380.7" y="707.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="383.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.get$Lambda (12 samples, 0.07%)</title><rect x="380.7" y="691.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.7" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$66 (12 samples, 0.07%)</title><rect x="380.7" y="675.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="383.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (29 samples, 0.17%)</title><rect x="381.6" y="771.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="384.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (29 samples, 0.17%)</title><rect x="381.6" y="755.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="384.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.17%)</title><rect x="381.6" y="739.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="384.6" y="750.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.07%)</title><rect x="381.6" y="723.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="384.6" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.10%)</title><rect x="382.4" y="723.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="385.4" y="734.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.10%)</title><rect x="382.4" y="707.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="385.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (144 samples, 0.84%)</title><rect x="383.6" y="803.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="386.6" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (26 samples, 0.15%)</title><rect x="383.6" y="787.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="386.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (40 samples, 0.23%)</title><rect x="385.4" y="787.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.4" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (40 samples, 0.23%)</title><rect x="385.4" y="771.0" width="2.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="388.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (78 samples, 0.46%)</title><rect x="388.1" y="787.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="391.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (78 samples, 0.46%)</title><rect x="388.1" y="771.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="391.1" y="782.0"></text>
</g>
<g>
<title>char[] (36 samples, 0.21%)</title><rect x="388.1" y="755.0" width="2.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="391.1" y="766.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.07%)</title><rect x="390.6" y="755.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="393.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (30 samples, 0.18%)</title><rect x="391.4" y="755.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="394.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (30 samples, 0.18%)</title><rect x="391.4" y="739.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (30 samples, 0.18%)</title><rect x="391.4" y="723.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="394.4" y="734.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.18%)</title><rect x="391.4" y="707.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="394.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (69 samples, 0.40%)</title><rect x="393.5" y="803.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.5" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (69 samples, 0.40%)</title><rect x="393.5" y="787.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="396.5" y="798.0"></text>
</g>
<g>
<title>char[] (35 samples, 0.21%)</title><rect x="393.5" y="771.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="396.5" y="782.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.07%)</title><rect x="395.9" y="771.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="398.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.13%)</title><rect x="396.8" y="771.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.13%)</title><rect x="396.8" y="755.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="399.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (22 samples, 0.13%)</title><rect x="396.8" y="739.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="399.8" y="750.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.13%)</title><rect x="396.8" y="723.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="399.8" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=117871] (938 samples, 5.50%)</title><rect x="398.3" y="883.0" width="64.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="401.3" y="894.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (938 samples, 5.50%)</title><rect x="398.3" y="867.0" width="64.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="401.3" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.process (938 samples, 5.50%)</title><rect x="398.3" y="851.0" width="64.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.3" y="862.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (938 samples, 5.50%)</title><rect x="398.3" y="835.0" width="64.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="401.3" y="846.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (938 samples, 5.50%)</title><rect x="398.3" y="819.0" width="64.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="401.3" y="830.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (716 samples, 4.19%)</title><rect x="398.3" y="803.0" width="49.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="401.3" y="814.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (716 samples, 4.19%)</title><rect x="398.3" y="787.0" width="49.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.3" y="798.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (682 samples, 4.00%)</title><rect x="398.3" y="771.0" width="47.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="401.3" y="782.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (18 samples, 0.11%)</title><rect x="398.3" y="755.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="401.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (18 samples, 0.11%)</title><rect x="398.3" y="739.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="401.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.11%)</title><rect x="398.3" y="723.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.11%)</title><rect x="398.3" y="707.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="401.3" y="718.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.06%)</title><rect x="398.3" y="691.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="401.3" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.04%)</title><rect x="399.0" y="691.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.0" y="702.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.04%)</title><rect x="399.0" y="675.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="402.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (664 samples, 3.89%)</title><rect x="399.5" y="755.0" width="45.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="402.5" y="766.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (604 samples, 3.54%)</title><rect x="399.5" y="739.0" width="41.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="402.5" y="750.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (604 samples, 3.54%)</title><rect x="399.5" y="723.0" width="41.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="402.5" y="734.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (593 samples, 3.47%)</title><rect x="399.5" y="707.0" width="41.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="402.5" y="718.0">ch/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (44 samples, 0.26%)</title><rect x="399.5" y="691.0" width="3.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="402.5" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (549 samples, 3.22%)</title><rect x="402.6" y="691.0" width="37.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="405.6" y="702.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (549 samples, 3.22%)</title><rect x="402.6" y="675.0" width="37.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="405.6" y="686.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (549 samples, 3.22%)</title><rect x="402.6" y="659.0" width="37.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="405.6" y="670.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (549 samples, 3.22%)</title><rect x="402.6" y="643.0" width="37.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="405.6" y="654.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (549 samples, 3.22%)</title><rect x="402.6" y="627.0" width="37.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="405.6" y="638.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (549 samples, 3.22%)</title><rect x="402.6" y="611.0" width="37.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="405.6" y="622.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (123 samples, 0.72%)</title><rect x="402.6" y="595.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="405.6" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (123 samples, 0.72%)</title><rect x="402.6" y="579.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="405.6" y="590.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (123 samples, 0.72%)</title><rect x="402.6" y="563.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="405.6" y="574.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (123 samples, 0.72%)</title><rect x="402.6" y="547.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="405.6" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (21 samples, 0.12%)</title><rect x="402.6" y="531.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="405.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (57 samples, 0.33%)</title><rect x="404.0" y="531.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.0" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (57 samples, 0.33%)</title><rect x="404.0" y="515.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="407.0" y="526.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.33%)</title><rect x="404.0" y="499.0" width="4.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="407.0" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (45 samples, 0.26%)</title><rect x="408.0" y="531.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="411.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (45 samples, 0.26%)</title><rect x="408.0" y="515.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="411.0" y="526.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.06%)</title><rect x="408.0" y="499.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="411.0" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (34 samples, 0.20%)</title><rect x="408.7" y="499.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="411.7" y="510.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.20%)</title><rect x="408.7" y="483.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="411.7" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (426 samples, 2.50%)</title><rect x="411.1" y="595.0" width="29.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="414.1" y="606.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (354 samples, 2.07%)</title><rect x="411.1" y="579.0" width="24.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="414.1" y="590.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (354 samples, 2.07%)</title><rect x="411.1" y="563.0" width="24.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="414.1" y="574.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (30 samples, 0.18%)</title><rect x="411.1" y="547.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="414.1" y="558.0"></text>
</g>
<g>
<title>java.util.Date (4 samples, 0.02%)</title><rect x="411.1" y="531.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="414.1" y="542.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (26 samples, 0.15%)</title><rect x="411.4" y="531.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="414.4" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (8 samples, 0.05%)</title><rect x="411.4" y="515.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="414.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="411.9" y="515.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="414.9" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (8 samples, 0.05%)</title><rect x="411.9" y="499.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="414.9" y="510.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.05%)</title><rect x="411.9" y="483.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="414.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (10 samples, 0.06%)</title><rect x="412.5" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="415.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.06%)</title><rect x="412.5" y="499.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.5" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.04%)</title><rect x="412.7" y="483.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="415.7" y="494.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.04%)</title><rect x="412.7" y="467.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="415.7" y="478.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (18 samples, 0.11%)</title><rect x="413.1" y="547.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="416.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (22 samples, 0.13%)</title><rect x="414.4" y="547.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.4" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (22 samples, 0.13%)</title><rect x="414.4" y="531.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="417.4" y="542.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.13%)</title><rect x="414.4" y="515.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="417.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (182 samples, 1.07%)</title><rect x="415.9" y="547.0" width="12.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="418.9" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (182 samples, 1.07%)</title><rect x="415.9" y="531.0" width="12.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="418.9" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (182 samples, 1.07%)</title><rect x="415.9" y="515.0" width="12.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="418.9" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (182 samples, 1.07%)</title><rect x="415.9" y="499.0" width="12.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.9" y="510.0"></text>
</g>
<g>
<title>byte[] (182 samples, 1.07%)</title><rect x="415.9" y="483.0" width="12.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="418.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (102 samples, 0.60%)</title><rect x="428.5" y="547.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="431.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (102 samples, 0.60%)</title><rect x="428.5" y="531.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="431.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.11%)</title><rect x="428.5" y="515.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="431.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (83 samples, 0.49%)</title><rect x="429.8" y="515.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="432.8" y="526.0"></text>
</g>
<g>
<title>byte[] (83 samples, 0.49%)</title><rect x="429.8" y="499.0" width="5.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="432.8" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (72 samples, 0.42%)</title><rect x="435.5" y="579.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="438.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (72 samples, 0.42%)</title><rect x="435.5" y="563.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="438.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (72 samples, 0.42%)</title><rect x="435.5" y="547.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="438.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (72 samples, 0.42%)</title><rect x="435.5" y="531.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="438.5" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (72 samples, 0.42%)</title><rect x="435.5" y="515.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="438.5" y="526.0"></text>
</g>
<g>
<title>byte[] (72 samples, 0.42%)</title><rect x="435.5" y="499.0" width="5.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="438.5" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.06%)</title><rect x="440.5" y="707.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="443.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (20 samples, 0.12%)</title><rect x="441.3" y="739.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="444.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (20 samples, 0.12%)</title><rect x="441.3" y="723.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="444.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (20 samples, 0.12%)</title><rect x="441.3" y="707.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="444.3" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (20 samples, 0.12%)</title><rect x="441.3" y="691.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="444.3" y="702.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.12%)</title><rect x="441.3" y="675.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="444.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28 samples, 0.16%)</title><rect x="442.7" y="739.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="445.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28 samples, 0.16%)</title><rect x="442.7" y="723.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="445.7" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.16%)</title><rect x="442.7" y="707.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="445.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (12 samples, 0.07%)</title><rect x="444.6" y="739.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="447.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.07%)</title><rect x="444.6" y="723.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="447.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.07%)</title><rect x="444.6" y="707.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="447.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.get$Lambda (12 samples, 0.07%)</title><rect x="444.6" y="691.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="447.6" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$66 (12 samples, 0.07%)</title><rect x="444.6" y="675.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="447.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (34 samples, 0.20%)</title><rect x="445.4" y="771.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="448.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (34 samples, 0.20%)</title><rect x="445.4" y="755.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="448.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (34 samples, 0.20%)</title><rect x="445.4" y="739.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="448.4" y="750.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.09%)</title><rect x="445.4" y="723.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="448.4" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.11%)</title><rect x="446.5" y="723.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="449.5" y="734.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.11%)</title><rect x="446.5" y="707.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="449.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (153 samples, 0.90%)</title><rect x="447.8" y="803.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="450.8" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (28 samples, 0.16%)</title><rect x="447.8" y="787.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="450.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (47 samples, 0.28%)</title><rect x="449.7" y="787.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.7" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (47 samples, 0.28%)</title><rect x="449.7" y="771.0" width="3.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="452.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (78 samples, 0.46%)</title><rect x="453.0" y="787.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="456.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (78 samples, 0.46%)</title><rect x="453.0" y="771.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="456.0" y="782.0"></text>
</g>
<g>
<title>char[] (42 samples, 0.25%)</title><rect x="453.0" y="755.0" width="2.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="456.0" y="766.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.08%)</title><rect x="455.9" y="755.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="458.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.13%)</title><rect x="456.8" y="755.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="459.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.13%)</title><rect x="456.8" y="739.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="459.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (22 samples, 0.13%)</title><rect x="456.8" y="723.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="459.8" y="734.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.13%)</title><rect x="456.8" y="707.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="459.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (69 samples, 0.40%)</title><rect x="458.4" y="803.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (69 samples, 0.40%)</title><rect x="458.4" y="787.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="461.4" y="798.0"></text>
</g>
<g>
<title>char[] (24 samples, 0.14%)</title><rect x="458.4" y="771.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="461.4" y="782.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.08%)</title><rect x="460.0" y="771.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="463.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.19%)</title><rect x="460.9" y="771.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="463.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.19%)</title><rect x="460.9" y="755.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (32 samples, 0.19%)</title><rect x="460.9" y="739.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="463.9" y="750.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.19%)</title><rect x="460.9" y="723.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="463.9" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=117872] (959 samples, 5.62%)</title><rect x="463.1" y="883.0" width="66.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="466.1" y="894.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (959 samples, 5.62%)</title><rect x="463.1" y="867.0" width="66.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.1" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.process (959 samples, 5.62%)</title><rect x="463.1" y="851.0" width="66.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.1" y="862.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (959 samples, 5.62%)</title><rect x="463.1" y="835.0" width="66.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.1" y="846.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (959 samples, 5.62%)</title><rect x="463.1" y="819.0" width="66.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.1" y="830.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (733 samples, 4.29%)</title><rect x="463.1" y="803.0" width="50.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.1" y="814.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (733 samples, 4.29%)</title><rect x="463.1" y="787.0" width="50.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.1" y="798.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (704 samples, 4.12%)</title><rect x="463.1" y="771.0" width="48.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.1" y="782.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (32 samples, 0.19%)</title><rect x="463.1" y="755.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (32 samples, 0.19%)</title><rect x="463.1" y="739.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (32 samples, 0.19%)</title><rect x="463.1" y="723.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="466.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.19%)</title><rect x="463.1" y="707.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.1" y="718.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.11%)</title><rect x="463.1" y="691.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="466.1" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.08%)</title><rect x="464.4" y="691.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="467.4" y="702.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.08%)</title><rect x="464.4" y="675.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="467.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (672 samples, 3.94%)</title><rect x="465.3" y="755.0" width="46.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="468.3" y="766.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (605 samples, 3.54%)</title><rect x="465.3" y="739.0" width="41.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="468.3" y="750.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (605 samples, 3.54%)</title><rect x="465.3" y="723.0" width="41.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.3" y="734.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (588 samples, 3.44%)</title><rect x="465.3" y="707.0" width="40.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="468.3" y="718.0">ch/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (38 samples, 0.22%)</title><rect x="465.3" y="691.0" width="2.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="468.3" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (550 samples, 3.22%)</title><rect x="468.0" y="691.0" width="38.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.0" y="702.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (550 samples, 3.22%)</title><rect x="468.0" y="675.0" width="38.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.0" y="686.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (550 samples, 3.22%)</title><rect x="468.0" y="659.0" width="38.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="471.0" y="670.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (550 samples, 3.22%)</title><rect x="468.0" y="643.0" width="38.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="471.0" y="654.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (550 samples, 3.22%)</title><rect x="468.0" y="627.0" width="38.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="471.0" y="638.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (550 samples, 3.22%)</title><rect x="468.0" y="611.0" width="38.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.0" y="622.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (110 samples, 0.64%)</title><rect x="468.0" y="595.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.0" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (110 samples, 0.64%)</title><rect x="468.0" y="579.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="471.0" y="590.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (110 samples, 0.64%)</title><rect x="468.0" y="563.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="471.0" y="574.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (110 samples, 0.64%)</title><rect x="468.0" y="547.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.0" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (16 samples, 0.09%)</title><rect x="468.0" y="531.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="471.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (44 samples, 0.26%)</title><rect x="469.1" y="531.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.1" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (44 samples, 0.26%)</title><rect x="469.1" y="515.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.1" y="526.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.26%)</title><rect x="469.1" y="499.0" width="3.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="472.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (50 samples, 0.29%)</title><rect x="472.1" y="531.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="475.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (50 samples, 0.29%)</title><rect x="472.1" y="515.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="475.1" y="526.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.10%)</title><rect x="472.1" y="499.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="475.1" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (33 samples, 0.19%)</title><rect x="473.3" y="499.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="476.3" y="510.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.19%)</title><rect x="473.3" y="483.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="476.3" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (440 samples, 2.58%)</title><rect x="475.6" y="595.0" width="30.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="478.6" y="606.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (382 samples, 2.24%)</title><rect x="475.6" y="579.0" width="26.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="478.6" y="590.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (382 samples, 2.24%)</title><rect x="475.6" y="563.0" width="26.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="478.6" y="574.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (17 samples, 0.10%)</title><rect x="475.6" y="547.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.6" y="558.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (14 samples, 0.08%)</title><rect x="475.8" y="531.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="478.8" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (6 samples, 0.04%)</title><rect x="475.8" y="515.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="478.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (8 samples, 0.05%)</title><rect x="476.2" y="515.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="479.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.05%)</title><rect x="476.2" y="499.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="479.2" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.04%)</title><rect x="476.3" y="483.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.3" y="494.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.04%)</title><rect x="476.3" y="467.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="479.3" y="478.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (23 samples, 0.13%)</title><rect x="476.7" y="547.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="479.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (25 samples, 0.15%)</title><rect x="478.3" y="547.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.3" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (25 samples, 0.15%)</title><rect x="478.3" y="531.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="481.3" y="542.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.15%)</title><rect x="478.3" y="515.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="481.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (206 samples, 1.21%)</title><rect x="480.1" y="547.0" width="14.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="483.1" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (206 samples, 1.21%)</title><rect x="480.1" y="531.0" width="14.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="483.1" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (206 samples, 1.21%)</title><rect x="480.1" y="515.0" width="14.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="483.1" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (206 samples, 1.21%)</title><rect x="480.1" y="499.0" width="14.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="483.1" y="510.0"></text>
</g>
<g>
<title>byte[] (200 samples, 1.17%)</title><rect x="480.1" y="483.0" width="13.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="483.1" y="494.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.04%)</title><rect x="493.9" y="483.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="496.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (111 samples, 0.65%)</title><rect x="494.3" y="547.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="497.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (111 samples, 0.65%)</title><rect x="494.3" y="531.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="497.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.14%)</title><rect x="494.3" y="515.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="497.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (87 samples, 0.51%)</title><rect x="496.0" y="515.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="499.0" y="526.0"></text>
</g>
<g>
<title>byte[] (87 samples, 0.51%)</title><rect x="496.0" y="499.0" width="6.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="499.0" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (58 samples, 0.34%)</title><rect x="502.0" y="579.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="505.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (58 samples, 0.34%)</title><rect x="502.0" y="563.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="505.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (58 samples, 0.34%)</title><rect x="502.0" y="547.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="505.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (58 samples, 0.34%)</title><rect x="502.0" y="531.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="505.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (58 samples, 0.34%)</title><rect x="502.0" y="515.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="505.0" y="526.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.34%)</title><rect x="502.0" y="499.0" width="4.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="505.0" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (17 samples, 0.10%)</title><rect x="506.0" y="707.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="509.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (21 samples, 0.12%)</title><rect x="507.2" y="739.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="510.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (21 samples, 0.12%)</title><rect x="507.2" y="723.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (21 samples, 0.12%)</title><rect x="507.2" y="707.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.2" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (21 samples, 0.12%)</title><rect x="507.2" y="691.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.2" y="702.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.12%)</title><rect x="507.2" y="675.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="510.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.16%)</title><rect x="508.6" y="739.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.16%)</title><rect x="508.6" y="723.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="511.6" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.16%)</title><rect x="508.6" y="707.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="511.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (19 samples, 0.11%)</title><rect x="510.5" y="739.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="513.5" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.11%)</title><rect x="510.5" y="723.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="513.5" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.11%)</title><rect x="510.5" y="707.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.get$Lambda (19 samples, 0.11%)</title><rect x="510.5" y="691.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="513.5" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$66 (19 samples, 0.11%)</title><rect x="510.5" y="675.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="513.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (29 samples, 0.17%)</title><rect x="511.8" y="771.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="514.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (29 samples, 0.17%)</title><rect x="511.8" y="755.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="514.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.17%)</title><rect x="511.8" y="739.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="514.8" y="750.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.02%)</title><rect x="511.8" y="723.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="514.8" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.15%)</title><rect x="512.1" y="723.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="515.1" y="734.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.15%)</title><rect x="512.1" y="707.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="515.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (159 samples, 0.93%)</title><rect x="513.8" y="803.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="516.8" y="814.0"></text>
</g>
<g>
<title>one.nio.http.Request (20 samples, 0.12%)</title><rect x="513.8" y="787.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="516.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (49 samples, 0.29%)</title><rect x="515.2" y="787.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.2" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (49 samples, 0.29%)</title><rect x="515.2" y="771.0" width="3.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="518.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (90 samples, 0.53%)</title><rect x="518.6" y="787.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="521.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (90 samples, 0.53%)</title><rect x="518.6" y="771.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.6" y="782.0"></text>
</g>
<g>
<title>char[] (64 samples, 0.37%)</title><rect x="518.6" y="755.0" width="4.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="521.6" y="766.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.04%)</title><rect x="523.0" y="755.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="526.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (19 samples, 0.11%)</title><rect x="523.5" y="755.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="526.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (19 samples, 0.11%)</title><rect x="523.5" y="739.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="526.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (19 samples, 0.11%)</title><rect x="523.5" y="723.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="526.5" y="734.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.11%)</title><rect x="523.5" y="707.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="526.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (67 samples, 0.39%)</title><rect x="524.8" y="803.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="527.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (67 samples, 0.39%)</title><rect x="524.8" y="787.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="527.8" y="798.0"></text>
</g>
<g>
<title>char[] (39 samples, 0.23%)</title><rect x="524.8" y="771.0" width="2.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="527.8" y="782.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.09%)</title><rect x="527.5" y="771.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="530.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.08%)</title><rect x="528.5" y="771.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="531.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.08%)</title><rect x="528.5" y="755.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="531.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (13 samples, 0.08%)</title><rect x="528.5" y="739.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="531.5" y="750.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.08%)</title><rect x="528.5" y="723.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="531.5" y="734.0"></text>
</g>
<g>
<title>[RMI TCP Connection(2)-127.0.0.1 tid=119841] (1,131 samples, 6.63%)</title><rect x="529.4" y="883.0" width="78.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="532.4" y="894.0">[RMI TCP ..</text>
</g>
<g>
<title>java/lang/Thread.run (1,131 samples, 6.63%)</title><rect x="529.4" y="867.0" width="78.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="532.4" y="878.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,131 samples, 6.63%)</title><rect x="529.4" y="851.0" width="78.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.4" y="862.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,131 samples, 6.63%)</title><rect x="529.4" y="835.0" width="78.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="532.4" y="846.0">java/util..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (1,131 samples, 6.63%)</title><rect x="529.4" y="819.0" width="78.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="532.4" y="830.0">sun/rmi/t..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,131 samples, 6.63%)</title><rect x="529.4" y="803.0" width="78.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="532.4" y="814.0">java/secu..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$130/1986636843.run (1,131 samples, 6.63%)</title><rect x="529.4" y="787.0" width="78.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="532.4" y="798.0">sun/rmi/t..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (1,131 samples, 6.63%)</title><rect x="529.4" y="771.0" width="78.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="532.4" y="782.0">sun/rmi/t..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (1,131 samples, 6.63%)</title><rect x="529.4" y="755.0" width="78.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="532.4" y="766.0">sun/rmi/t..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (1,131 samples, 6.63%)</title><rect x="529.4" y="739.0" width="78.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.4" y="750.0">sun/rmi/t..</text>
</g>
<g>
<title>java.io.DataOutputStream (16 samples, 0.09%)</title><rect x="529.4" y="723.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="532.4" y="734.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (1,114 samples, 6.53%)</title><rect x="530.6" y="723.0" width="77.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="533.6" y="734.0">sun/rmi/t..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,023 samples, 5.99%)</title><rect x="530.7" y="707.0" width="70.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="533.7" y="718.0">java/sec..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (1,023 samples, 5.99%)</title><rect x="530.7" y="691.0" width="70.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="533.7" y="702.0">sun/rmi/..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (1,023 samples, 5.99%)</title><rect x="530.7" y="675.0" width="70.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="533.7" y="686.0">sun/rmi/..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (1,023 samples, 5.99%)</title><rect x="530.7" y="659.0" width="70.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="533.7" y="670.0">sun/rmi/..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (574 samples, 3.36%)</title><rect x="531.0" y="643.0" width="39.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="534.0" y="654.0">jav..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (574 samples, 3.36%)</title><rect x="531.0" y="627.0" width="39.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="534.0" y="638.0">jdk..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (5 samples, 0.03%)</title><rect x="531.0" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.0" y="622.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttribute (5 samples, 0.03%)</title><rect x="531.0" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="534.0" y="606.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (5 samples, 0.03%)</title><rect x="531.0" y="579.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.0" y="590.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (4 samples, 0.02%)</title><rect x="531.1" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="534.1" y="574.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (4 samples, 0.02%)</title><rect x="531.1" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.1" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttribute (4 samples, 0.02%)</title><rect x="531.1" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="534.1" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttribute (4 samples, 0.02%)</title><rect x="531.1" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="534.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (558 samples, 3.27%)</title><rect x="531.4" y="611.0" width="38.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="534.4" y="622.0">jdk..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (558 samples, 3.27%)</title><rect x="531.4" y="595.0" width="38.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="534.4" y="606.0">jav..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (489 samples, 2.86%)</title><rect x="531.4" y="579.0" width="33.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.4" y="590.0">ja..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (488 samples, 2.86%)</title><rect x="531.4" y="563.0" width="33.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.4" y="574.0">ja..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (488 samples, 2.86%)</title><rect x="531.4" y="547.0" width="33.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="534.4" y="558.0">ja..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (488 samples, 2.86%)</title><rect x="531.4" y="531.0" width="33.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.4" y="542.0">co..</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (488 samples, 2.86%)</title><rect x="531.4" y="515.0" width="33.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="534.4" y="526.0">co..</text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (488 samples, 2.86%)</title><rect x="531.4" y="499.0" width="33.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="534.4" y="510.0">ja..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (488 samples, 2.86%)</title><rect x="531.4" y="483.0" width="33.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.4" y="494.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (488 samples, 2.86%)</title><rect x="531.4" y="467.0" width="33.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="534.4" y="478.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (488 samples, 2.86%)</title><rect x="531.4" y="451.0" width="33.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.4" y="462.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (488 samples, 2.86%)</title><rect x="531.4" y="435.0" width="33.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="534.4" y="446.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (488 samples, 2.86%)</title><rect x="531.4" y="419.0" width="33.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="534.4" y="430.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (488 samples, 2.86%)</title><rect x="531.4" y="403.0" width="33.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="534.4" y="414.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (488 samples, 2.86%)</title><rect x="531.4" y="387.0" width="33.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="534.4" y="398.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (433 samples, 2.54%)</title><rect x="531.4" y="371.0" width="30.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="534.4" y="382.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (433 samples, 2.54%)</title><rect x="531.4" y="355.0" width="30.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="534.4" y="366.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (433 samples, 2.54%)</title><rect x="531.4" y="339.0" width="30.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="534.4" y="350.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (433 samples, 2.54%)</title><rect x="531.4" y="323.0" width="30.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.4" y="334.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (133 samples, 0.78%)</title><rect x="531.4" y="307.0" width="9.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.4" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (106 samples, 0.62%)</title><rect x="531.4" y="291.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="534.4" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (96 samples, 0.56%)</title><rect x="531.4" y="275.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="534.4" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (96 samples, 0.56%)</title><rect x="531.4" y="259.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.4" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.03%)</title><rect x="531.4" y="243.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="534.4" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (50 samples, 0.29%)</title><rect x="532.0" y="243.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="535.0" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (4 samples, 0.02%)</title><rect x="532.0" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="535.0" y="238.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (46 samples, 0.27%)</title><rect x="532.3" y="227.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="535.3" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap (11 samples, 0.06%)</title><rect x="532.3" y="211.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="535.3" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (35 samples, 0.21%)</title><rect x="533.0" y="211.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="536.0" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (35 samples, 0.21%)</title><rect x="533.0" y="195.0" width="2.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="536.0" y="206.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (38 samples, 0.22%)</title><rect x="535.4" y="243.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="538.4" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (38 samples, 0.22%)</title><rect x="535.4" y="227.0" width="2.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="538.4" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (10 samples, 0.06%)</title><rect x="538.1" y="275.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.1" y="286.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (10 samples, 0.06%)</title><rect x="538.1" y="259.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="541.1" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (27 samples, 0.16%)</title><rect x="538.8" y="291.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="541.8" y="302.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (18 samples, 0.11%)</title><rect x="539.0" y="275.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="542.0" y="286.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (4 samples, 0.02%)</title><rect x="539.0" y="259.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="542.0" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (4 samples, 0.02%)</title><rect x="539.0" y="243.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="542.0" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (4 samples, 0.02%)</title><rect x="539.0" y="227.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="542.0" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (4 samples, 0.02%)</title><rect x="539.0" y="211.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="542.0" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (4 samples, 0.02%)</title><rect x="539.0" y="195.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="542.0" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (4 samples, 0.02%)</title><rect x="539.0" y="179.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="542.0" y="190.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (14 samples, 0.08%)</title><rect x="539.2" y="259.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="542.2" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap (6 samples, 0.04%)</title><rect x="539.2" y="243.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="542.2" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.05%)</title><rect x="539.7" y="243.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="542.7" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (8 samples, 0.05%)</title><rect x="539.7" y="227.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="542.7" y="238.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (6 samples, 0.04%)</title><rect x="540.2" y="275.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="543.2" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.04%)</title><rect x="540.2" y="259.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="543.2" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.07%)</title><rect x="540.6" y="307.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="543.6" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.04%)</title><rect x="541.4" y="307.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="544.4" y="318.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (6 samples, 0.04%)</title><rect x="541.9" y="307.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="544.9" y="318.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (150 samples, 0.88%)</title><rect x="542.3" y="307.0" width="10.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="545.3" y="318.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (13 samples, 0.08%)</title><rect x="542.3" y="291.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="545.3" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (5 samples, 0.03%)</title><rect x="542.3" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.3" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (5 samples, 0.03%)</title><rect x="542.3" y="259.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="545.3" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (5 samples, 0.03%)</title><rect x="542.3" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="545.3" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (5 samples, 0.03%)</title><rect x="542.3" y="227.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="545.3" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (5 samples, 0.03%)</title><rect x="542.3" y="211.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="545.3" y="222.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeType.isValue (7 samples, 0.04%)</title><rect x="542.8" y="275.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="545.8" y="286.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeType.isAssignableFrom (7 samples, 0.04%)</title><rect x="542.8" y="259.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.8" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (7 samples, 0.04%)</title><rect x="542.8" y="243.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="545.8" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (6 samples, 0.04%)</title><rect x="542.8" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="545.8" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (6 samples, 0.04%)</title><rect x="542.8" y="211.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="545.8" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (6 samples, 0.04%)</title><rect x="542.8" y="195.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.8" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (6 samples, 0.04%)</title><rect x="542.8" y="179.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="545.8" y="190.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (137 samples, 0.80%)</title><rect x="543.2" y="291.0" width="9.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="546.2" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap (7 samples, 0.04%)</title><rect x="543.2" y="275.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="546.2" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (130 samples, 0.76%)</title><rect x="543.7" y="275.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="546.7" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (130 samples, 0.76%)</title><rect x="543.7" y="259.0" width="9.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="546.7" y="270.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (125 samples, 0.73%)</title><rect x="552.7" y="307.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.7" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (115 samples, 0.67%)</title><rect x="552.7" y="291.0" width="8.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="555.7" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (10 samples, 0.06%)</title><rect x="560.7" y="291.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (10 samples, 0.06%)</title><rect x="560.7" y="275.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (10 samples, 0.06%)</title><rect x="560.7" y="259.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="563.7" y="270.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (10 samples, 0.06%)</title><rect x="560.7" y="243.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="563.7" y="254.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (10 samples, 0.06%)</title><rect x="560.7" y="227.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="563.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (10 samples, 0.06%)</title><rect x="560.7" y="211.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="563.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor13.invoke (4 samples, 0.02%)</title><rect x="560.7" y="195.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="563.7" y="206.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getLockedSynchronizers (4 samples, 0.02%)</title><rect x="560.7" y="179.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.7" y="190.0"></text>
</g>
<g>
<title>java/lang/Object.clone (4 samples, 0.02%)</title><rect x="560.7" y="163.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="563.7" y="174.0"></text>
</g>
<g>
<title>java.lang.management.LockInfo[] (4 samples, 0.02%)</title><rect x="560.7" y="147.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="563.7" y="158.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (55 samples, 0.32%)</title><rect x="561.4" y="371.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="564.4" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (55 samples, 0.32%)</title><rect x="561.4" y="355.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (55 samples, 0.32%)</title><rect x="561.4" y="339.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="564.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (55 samples, 0.32%)</title><rect x="561.4" y="323.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.4" y="334.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (55 samples, 0.32%)</title><rect x="561.4" y="307.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="564.4" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (55 samples, 0.32%)</title><rect x="561.4" y="291.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (55 samples, 0.32%)</title><rect x="561.4" y="275.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="564.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (52 samples, 0.30%)</title><rect x="561.4" y="259.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="564.4" y="270.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (52 samples, 0.30%)</title><rect x="561.4" y="243.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.4" y="254.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (52 samples, 0.30%)</title><rect x="561.4" y="227.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.4" y="238.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (5 samples, 0.03%)</title><rect x="561.4" y="211.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="564.4" y="222.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement (8 samples, 0.05%)</title><rect x="561.7" y="211.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="564.7" y="222.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (12 samples, 0.07%)</title><rect x="562.3" y="211.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="565.3" y="222.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (6 samples, 0.04%)</title><rect x="563.1" y="211.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="566.1" y="222.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (21 samples, 0.12%)</title><rect x="563.5" y="211.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="566.5" y="222.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (21 samples, 0.12%)</title><rect x="563.5" y="195.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="566.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.09%)</title><rect x="563.8" y="179.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="566.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (16 samples, 0.09%)</title><rect x="563.8" y="163.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="566.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1062996926.invoke (16 samples, 0.09%)</title><rect x="563.8" y="147.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="566.8" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.09%)</title><rect x="563.8" y="131.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.8" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (15 samples, 0.09%)</title><rect x="563.9" y="115.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="566.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (15 samples, 0.09%)</title><rect x="563.9" y="99.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="566.9" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray0 (14 samples, 0.08%)</title><rect x="564.0" y="83.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.0" y="94.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.07%)</title><rect x="564.0" y="67.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="567.0" y="78.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getClassLoaderFor (8 samples, 0.05%)</title><rect x="565.2" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="568.2" y="590.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.withPermissions (5 samples, 0.03%)</title><rect x="565.4" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="568.4" y="574.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (61 samples, 0.36%)</title><rect x="565.7" y="579.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="568.7" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (23 samples, 0.13%)</title><rect x="565.7" y="563.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="568.7" y="574.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (23 samples, 0.13%)</title><rect x="565.7" y="547.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.7" y="558.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (23 samples, 0.13%)</title><rect x="565.7" y="531.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.7" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/util/OrderClassLoaders.&lt;init&gt; (4 samples, 0.02%)</title><rect x="565.8" y="515.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.8" y="526.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (4 samples, 0.02%)</title><rect x="565.8" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.8" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (4 samples, 0.02%)</title><rect x="565.8" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="568.8" y="494.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (17 samples, 0.10%)</title><rect x="566.1" y="515.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="569.1" y="526.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (4 samples, 0.02%)</title><rect x="566.1" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.1" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (4 samples, 0.02%)</title><rect x="566.1" y="483.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="569.1" y="494.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader$ClassLoaderWrapper.&lt;init&gt; (12 samples, 0.07%)</title><rect x="566.5" y="499.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="569.5" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (12 samples, 0.07%)</title><rect x="566.5" y="483.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.5" y="494.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (12 samples, 0.07%)</title><rect x="566.5" y="467.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="569.5" y="478.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (10 samples, 0.06%)</title><rect x="566.5" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="569.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.04%)</title><rect x="566.5" y="435.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="569.5" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.04%)</title><rect x="566.5" y="419.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="569.5" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (6 samples, 0.04%)</title><rect x="566.5" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.04%)</title><rect x="566.5" y="387.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="569.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.02%)</title><rect x="567.0" y="435.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.02%)</title><rect x="567.0" y="419.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.02%)</title><rect x="567.0" y="403.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.0" y="414.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (36 samples, 0.21%)</title><rect x="567.4" y="563.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.4" y="574.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (36 samples, 0.21%)</title><rect x="567.4" y="547.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="570.4" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (15 samples, 0.09%)</title><rect x="567.6" y="531.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="570.6" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (15 samples, 0.09%)</title><rect x="567.6" y="515.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="570.6" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (15 samples, 0.09%)</title><rect x="567.6" y="499.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.6" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (15 samples, 0.09%)</title><rect x="567.6" y="483.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.6" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (14 samples, 0.08%)</title><rect x="567.7" y="467.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="570.7" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (6 samples, 0.04%)</title><rect x="567.7" y="451.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.7" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (6 samples, 0.04%)</title><rect x="567.7" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="570.7" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (6 samples, 0.04%)</title><rect x="567.7" y="419.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="570.7" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (4 samples, 0.02%)</title><rect x="567.7" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="570.7" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (8 samples, 0.05%)</title><rect x="568.1" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="571.1" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (6 samples, 0.04%)</title><rect x="568.3" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="571.3" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (5 samples, 0.03%)</title><rect x="568.3" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="571.3" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (5 samples, 0.03%)</title><rect x="568.3" y="403.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="571.3" y="414.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (17 samples, 0.10%)</title><rect x="568.7" y="531.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="571.7" y="542.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (17 samples, 0.10%)</title><rect x="568.7" y="515.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="571.7" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (17 samples, 0.10%)</title><rect x="568.7" y="499.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="571.7" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (14 samples, 0.08%)</title><rect x="568.8" y="483.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.8" y="494.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.02%)</title><rect x="568.8" y="467.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="571.8" y="478.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (6 samples, 0.04%)</title><rect x="569.3" y="467.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="572.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor39.invoke (8 samples, 0.05%)</title><rect x="569.9" y="611.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="572.9" y="622.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttributes (8 samples, 0.05%)</title><rect x="569.9" y="595.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="572.9" y="606.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (7 samples, 0.04%)</title><rect x="570.0" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="573.0" y="590.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (4 samples, 0.02%)</title><rect x="570.2" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.2" y="574.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (4 samples, 0.02%)</title><rect x="570.2" y="547.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="573.2" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttributes (4 samples, 0.02%)</title><rect x="570.2" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.2" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttributes (4 samples, 0.02%)</title><rect x="570.2" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.2" y="526.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttributes (4 samples, 0.02%)</title><rect x="570.2" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.2" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttributes (4 samples, 0.02%)</title><rect x="570.2" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.2" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (4 samples, 0.02%)</title><rect x="570.2" y="467.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.2" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (4 samples, 0.02%)</title><rect x="570.2" y="451.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.2" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (4 samples, 0.02%)</title><rect x="570.2" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="573.2" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (4 samples, 0.02%)</title><rect x="570.2" y="419.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="573.2" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (4 samples, 0.02%)</title><rect x="570.2" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="573.2" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (4 samples, 0.02%)</title><rect x="570.2" y="387.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.2" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (4 samples, 0.02%)</title><rect x="570.2" y="371.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="573.2" y="382.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (4 samples, 0.02%)</title><rect x="570.2" y="355.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.2" y="366.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (227 samples, 1.33%)</title><rect x="570.7" y="643.0" width="15.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.7" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (227 samples, 1.33%)</title><rect x="570.7" y="627.0" width="15.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.7" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (227 samples, 1.33%)</title><rect x="570.7" y="611.0" width="15.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="573.7" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (222 samples, 1.30%)</title><rect x="570.7" y="595.0" width="15.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.7" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (222 samples, 1.30%)</title><rect x="570.7" y="579.0" width="15.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.7" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (216 samples, 1.27%)</title><rect x="570.7" y="563.0" width="14.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.7" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (214 samples, 1.25%)</title><rect x="570.8" y="547.0" width="14.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="573.8" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (214 samples, 1.25%)</title><rect x="570.8" y="531.0" width="14.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.8" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (211 samples, 1.24%)</title><rect x="571.0" y="515.0" width="14.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="574.0" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (204 samples, 1.20%)</title><rect x="571.0" y="499.0" width="14.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="574.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (201 samples, 1.18%)</title><rect x="571.2" y="483.0" width="13.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="574.2" y="494.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (9 samples, 0.05%)</title><rect x="571.2" y="467.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="574.2" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (35 samples, 0.21%)</title><rect x="571.9" y="467.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="574.9" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (35 samples, 0.21%)</title><rect x="571.9" y="451.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="574.9" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (35 samples, 0.21%)</title><rect x="571.9" y="435.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="574.9" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (35 samples, 0.21%)</title><rect x="571.9" y="419.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="574.9" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (35 samples, 0.21%)</title><rect x="571.9" y="403.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.9" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (35 samples, 0.21%)</title><rect x="571.9" y="387.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (35 samples, 0.21%)</title><rect x="571.9" y="371.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (35 samples, 0.21%)</title><rect x="571.9" y="355.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="574.9" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (35 samples, 0.21%)</title><rect x="571.9" y="339.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="574.9" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (34 samples, 0.20%)</title><rect x="571.9" y="323.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="574.9" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (34 samples, 0.20%)</title><rect x="571.9" y="307.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.9" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (25 samples, 0.15%)</title><rect x="571.9" y="291.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="574.9" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (25 samples, 0.15%)</title><rect x="571.9" y="275.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.9" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (25 samples, 0.15%)</title><rect x="571.9" y="259.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.9" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (23 samples, 0.13%)</title><rect x="572.1" y="243.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="575.1" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (22 samples, 0.13%)</title><rect x="572.1" y="227.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="575.1" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (22 samples, 0.13%)</title><rect x="572.1" y="211.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="575.1" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (20 samples, 0.12%)</title><rect x="572.2" y="195.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="575.2" y="206.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (20 samples, 0.12%)</title><rect x="572.2" y="179.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="575.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (20 samples, 0.12%)</title><rect x="572.2" y="163.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="575.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (20 samples, 0.12%)</title><rect x="572.2" y="147.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.2" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (20 samples, 0.12%)</title><rect x="572.2" y="131.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="575.2" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (19 samples, 0.11%)</title><rect x="572.3" y="115.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.3" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (19 samples, 0.11%)</title><rect x="572.3" y="99.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="575.3" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (5 samples, 0.03%)</title><rect x="572.3" y="83.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="575.3" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (5 samples, 0.03%)</title><rect x="572.3" y="67.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="575.3" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (5 samples, 0.03%)</title><rect x="572.3" y="51.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="575.3" y="62.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (12 samples, 0.07%)</title><rect x="572.6" y="83.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="575.6" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (12 samples, 0.07%)</title><rect x="572.6" y="67.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="575.6" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (12 samples, 0.07%)</title><rect x="572.6" y="51.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="575.6" y="62.0"></text>
</g>
<g>
<title>int[] (4 samples, 0.02%)</title><rect x="572.6" y="35.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="575.6" y="46.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.05%)</title><rect x="572.9" y="35.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="575.9" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (7 samples, 0.04%)</title><rect x="573.8" y="291.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="576.8" y="302.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (7 samples, 0.04%)</title><rect x="573.8" y="275.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="576.8" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (157 samples, 0.92%)</title><rect x="574.3" y="467.0" width="10.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.3" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.02%)</title><rect x="574.3" y="451.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="577.3" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (153 samples, 0.90%)</title><rect x="574.6" y="451.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="577.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (153 samples, 0.90%)</title><rect x="574.6" y="435.0" width="10.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="577.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (153 samples, 0.90%)</title><rect x="574.6" y="419.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.6" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (153 samples, 0.90%)</title><rect x="574.6" y="403.0" width="10.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="577.6" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (7 samples, 0.04%)</title><rect x="574.6" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="577.6" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (7 samples, 0.04%)</title><rect x="574.6" y="371.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="577.6" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.04%)</title><rect x="574.6" y="355.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="577.6" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (144 samples, 0.84%)</title><rect x="575.0" y="387.0" width="10.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.0" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (144 samples, 0.84%)</title><rect x="575.0" y="371.0" width="10.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.0" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (61 samples, 0.36%)</title><rect x="575.0" y="355.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="578.0" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (4 samples, 0.02%)</title><rect x="575.0" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="578.0" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (57 samples, 0.33%)</title><rect x="575.3" y="339.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="578.3" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (53 samples, 0.31%)</title><rect x="575.3" y="323.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.3" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (53 samples, 0.31%)</title><rect x="575.3" y="307.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.3" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (53 samples, 0.31%)</title><rect x="575.3" y="291.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="578.3" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (50 samples, 0.29%)</title><rect x="575.5" y="275.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.5" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (40 samples, 0.23%)</title><rect x="575.5" y="259.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="578.5" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (40 samples, 0.23%)</title><rect x="575.5" y="243.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="578.5" y="254.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (4 samples, 0.02%)</title><rect x="575.5" y="227.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="578.5" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (36 samples, 0.21%)</title><rect x="575.8" y="227.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.8" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.03%)</title><rect x="575.8" y="211.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="578.8" y="222.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (31 samples, 0.18%)</title><rect x="576.2" y="211.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="579.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (31 samples, 0.18%)</title><rect x="576.2" y="195.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="579.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (31 samples, 0.18%)</title><rect x="576.2" y="179.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="579.2" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (31 samples, 0.18%)</title><rect x="576.2" y="163.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="579.2" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (5 samples, 0.03%)</title><rect x="576.2" y="147.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="579.2" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (5 samples, 0.03%)</title><rect x="576.2" y="131.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="579.2" y="142.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.03%)</title><rect x="576.2" y="115.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="579.2" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (24 samples, 0.14%)</title><rect x="576.5" y="147.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="579.5" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (24 samples, 0.14%)</title><rect x="576.5" y="131.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="579.5" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (17 samples, 0.10%)</title><rect x="576.5" y="115.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="579.5" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (17 samples, 0.10%)</title><rect x="576.5" y="99.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="579.5" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (17 samples, 0.10%)</title><rect x="576.5" y="83.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="579.5" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.07%)</title><rect x="576.8" y="67.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="579.8" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (7 samples, 0.04%)</title><rect x="577.7" y="115.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="580.7" y="126.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (7 samples, 0.04%)</title><rect x="577.7" y="99.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="580.7" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (10 samples, 0.06%)</title><rect x="578.3" y="259.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="581.3" y="270.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (10 samples, 0.06%)</title><rect x="578.3" y="243.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="581.3" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (4 samples, 0.02%)</title><rect x="579.0" y="323.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="582.0" y="334.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (4 samples, 0.02%)</title><rect x="579.0" y="307.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="582.0" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (30 samples, 0.18%)</title><rect x="579.3" y="355.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="582.3" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (22 samples, 0.13%)</title><rect x="579.3" y="339.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.3" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (22 samples, 0.13%)</title><rect x="579.3" y="323.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.3" y="334.0"></text>
</g>
<g>
<title>int[] (6 samples, 0.04%)</title><rect x="579.3" y="307.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="582.3" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.08%)</title><rect x="579.8" y="307.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="582.8" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (8 samples, 0.05%)</title><rect x="580.8" y="339.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.8" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (8 samples, 0.05%)</title><rect x="580.8" y="323.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="583.8" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (6 samples, 0.04%)</title><rect x="580.9" y="307.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="583.9" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (6 samples, 0.04%)</title><rect x="580.9" y="291.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="583.9" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (6 samples, 0.04%)</title><rect x="580.9" y="275.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="583.9" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (6 samples, 0.04%)</title><rect x="580.9" y="259.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="583.9" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.04%)</title><rect x="580.9" y="243.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="583.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.04%)</title><rect x="580.9" y="227.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="583.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (6 samples, 0.04%)</title><rect x="580.9" y="211.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.9" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (6 samples, 0.04%)</title><rect x="580.9" y="195.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.9" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (4 samples, 0.02%)</title><rect x="581.0" y="179.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="584.0" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.02%)</title><rect x="581.0" y="163.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="584.0" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (4 samples, 0.02%)</title><rect x="581.0" y="147.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="584.0" y="158.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (4 samples, 0.02%)</title><rect x="581.0" y="131.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="584.0" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (12 samples, 0.07%)</title><rect x="581.3" y="355.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="584.3" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (12 samples, 0.07%)</title><rect x="581.3" y="339.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.3" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (11 samples, 0.06%)</title><rect x="581.3" y="323.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="584.3" y="334.0"></text>
</g>
<g>
<title>int[] (5 samples, 0.03%)</title><rect x="581.4" y="307.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="584.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.03%)</title><rect x="581.8" y="307.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="584.8" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (41 samples, 0.24%)</title><rect x="582.2" y="355.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="585.2" y="366.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (41 samples, 0.24%)</title><rect x="582.2" y="339.0" width="2.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="585.2" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (7 samples, 0.04%)</title><rect x="585.1" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="588.1" y="510.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (7 samples, 0.04%)</title><rect x="585.1" y="483.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="588.1" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (6 samples, 0.04%)</title><rect x="585.6" y="563.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.6" y="574.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (6 samples, 0.04%)</title><rect x="585.6" y="547.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="588.6" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (4 samples, 0.02%)</title><rect x="586.0" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="589.0" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (4 samples, 0.02%)</title><rect x="586.0" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="589.0" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (4 samples, 0.02%)</title><rect x="586.0" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="589.0" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.02%)</title><rect x="586.0" y="547.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="589.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.02%)</title><rect x="586.0" y="531.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="589.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor41.invoke (4 samples, 0.02%)</title><rect x="586.0" y="515.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="589.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.writeObject (4 samples, 0.02%)</title><rect x="586.0" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="589.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (4 samples, 0.02%)</title><rect x="586.0" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="589.0" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.02%)</title><rect x="586.0" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="589.0" y="478.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (71 samples, 0.42%)</title><rect x="586.4" y="643.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="589.4" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (69 samples, 0.40%)</title><rect x="586.5" y="627.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="589.5" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (69 samples, 0.40%)</title><rect x="586.5" y="611.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="589.5" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (69 samples, 0.40%)</title><rect x="586.5" y="595.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="589.5" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (8 samples, 0.05%)</title><rect x="586.5" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="589.5" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (4 samples, 0.02%)</title><rect x="586.6" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="589.6" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (4 samples, 0.02%)</title><rect x="586.6" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="589.6" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (61 samples, 0.36%)</title><rect x="587.1" y="579.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="590.1" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (46 samples, 0.27%)</title><rect x="587.1" y="563.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="590.1" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (46 samples, 0.27%)</title><rect x="587.1" y="547.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="590.1" y="558.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (4 samples, 0.02%)</title><rect x="587.3" y="531.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="590.3" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (29 samples, 0.17%)</title><rect x="587.6" y="531.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="590.6" y="542.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (8 samples, 0.05%)</title><rect x="587.6" y="515.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="590.6" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (20 samples, 0.12%)</title><rect x="588.2" y="515.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="591.2" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (14 samples, 0.08%)</title><rect x="588.5" y="499.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="591.5" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (14 samples, 0.08%)</title><rect x="588.5" y="483.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="591.5" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (14 samples, 0.08%)</title><rect x="588.5" y="467.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="591.5" y="478.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (6 samples, 0.04%)</title><rect x="588.5" y="451.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="591.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 0.04%)</title><rect x="589.0" y="451.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.04%)</title><rect x="589.0" y="435.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="592.0" y="446.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.02%)</title><rect x="589.0" y="419.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="592.0" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (10 samples, 0.06%)</title><rect x="589.6" y="531.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="592.6" y="542.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (7 samples, 0.04%)</title><rect x="589.8" y="515.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="592.8" y="526.0"></text>
</g>
<g>
<title>java.lang.Long (7 samples, 0.04%)</title><rect x="589.8" y="499.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="592.8" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (15 samples, 0.09%)</title><rect x="590.3" y="563.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.3" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (12 samples, 0.07%)</title><rect x="590.5" y="547.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.5" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (10 samples, 0.06%)</title><rect x="590.6" y="531.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (10 samples, 0.06%)</title><rect x="590.6" y="515.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="593.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (7 samples, 0.04%)</title><rect x="590.6" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="593.6" y="510.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (7 samples, 0.04%)</title><rect x="590.6" y="483.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="593.6" y="494.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (7 samples, 0.04%)</title><rect x="590.6" y="467.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="593.6" y="478.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (146 samples, 0.86%)</title><rect x="591.3" y="643.0" width="10.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.3" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (144 samples, 0.84%)</title><rect x="591.4" y="627.0" width="10.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.4" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (143 samples, 0.84%)</title><rect x="591.5" y="611.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="594.5" y="622.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (142 samples, 0.83%)</title><rect x="591.6" y="595.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="594.6" y="606.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (142 samples, 0.83%)</title><rect x="591.6" y="579.0" width="9.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="594.6" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (142 samples, 0.83%)</title><rect x="591.6" y="563.0" width="9.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="594.6" y="574.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (8 samples, 0.05%)</title><rect x="591.7" y="547.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="594.7" y="558.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$ReplaceTable (4 samples, 0.02%)</title><rect x="592.3" y="547.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="595.3" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (87 samples, 0.51%)</title><rect x="592.5" y="547.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="595.5" y="558.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.04%)</title><rect x="592.5" y="531.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="595.5" y="542.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.22%)</title><rect x="592.9" y="531.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="595.9" y="542.0"></text>
</g>
<g>
<title>char[] (8 samples, 0.05%)</title><rect x="595.6" y="531.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="598.6" y="542.0"></text>
</g>
<g>
<title>char[] (31 samples, 0.18%)</title><rect x="596.1" y="531.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="599.1" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (15 samples, 0.09%)</title><rect x="598.5" y="547.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="601.5" y="558.0"></text>
</g>
<g>
<title>int[] (13 samples, 0.08%)</title><rect x="598.5" y="531.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="601.5" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$ReplaceTable.&lt;init&gt; (26 samples, 0.15%)</title><rect x="599.6" y="547.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="602.6" y="558.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (5 samples, 0.03%)</title><rect x="599.6" y="531.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="602.6" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (19 samples, 0.11%)</title><rect x="600.1" y="531.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.1" y="542.0"></text>
</g>
<g>
<title>int[] (15 samples, 0.09%)</title><rect x="600.1" y="515.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="603.1" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.02%)</title><rect x="601.1" y="515.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="604.1" y="526.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (82 samples, 0.48%)</title><rect x="601.8" y="707.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="604.8" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (81 samples, 0.47%)</title><rect x="601.9" y="691.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="604.9" y="702.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (79 samples, 0.46%)</title><rect x="602.0" y="675.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="605.0" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (77 samples, 0.45%)</title><rect x="602.1" y="659.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.1" y="670.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable (4 samples, 0.02%)</title><rect x="602.2" y="643.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="605.2" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (55 samples, 0.32%)</title><rect x="602.7" y="643.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.7" y="654.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.08%)</title><rect x="602.8" y="627.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="605.8" y="638.0"></text>
</g>
<g>
<title>char[] (17 samples, 0.10%)</title><rect x="603.9" y="627.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="606.9" y="638.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (20 samples, 0.12%)</title><rect x="605.1" y="627.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="608.1" y="638.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.04%)</title><rect x="605.1" y="611.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="608.1" y="622.0"></text>
</g>
<g>
<title>char[] (7 samples, 0.04%)</title><rect x="605.7" y="611.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="608.7" y="622.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.03%)</title><rect x="606.2" y="611.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="609.2" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (14 samples, 0.08%)</title><rect x="606.5" y="643.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="609.5" y="654.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.02%)</title><rect x="606.5" y="627.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="609.5" y="638.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable$HandleList[] (4 samples, 0.02%)</title><rect x="606.8" y="627.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="609.8" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.04%)</title><rect x="607.1" y="627.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="610.1" y="638.0"></text>
</g>
<g>
<title>[pool-3-thread-1 tid=117884] (1,049 samples, 6.15%)</title><rect x="607.6" y="883.0" width="72.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="610.6" y="894.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (1,049 samples, 6.15%)</title><rect x="607.6" y="867.0" width="72.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="610.6" y="878.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,049 samples, 6.15%)</title><rect x="607.6" y="851.0" width="72.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="610.6" y="862.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,049 samples, 6.15%)</title><rect x="607.6" y="835.0" width="72.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="610.6" y="846.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.run (1,048 samples, 6.14%)</title><rect x="607.7" y="819.0" width="72.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="610.7" y="830.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (1,048 samples, 6.14%)</title><rect x="607.7" y="803.0" width="72.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="610.7" y="814.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (1,048 samples, 6.14%)</title><rect x="607.7" y="787.0" width="72.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="610.7" y="798.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.03%)</title><rect x="607.7" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="610.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.03%)</title><rect x="607.7" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="610.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.03%)</title><rect x="607.7" y="739.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5 samples, 0.03%)</title><rect x="607.7" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="610.7" y="734.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.03%)</title><rect x="607.7" y="707.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="610.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (7 samples, 0.04%)</title><rect x="608.0" y="771.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="611.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.04%)</title><rect x="608.1" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="611.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,036 samples, 6.07%)</title><rect x="608.5" y="771.0" width="71.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="611.5" y="782.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (83 samples, 0.49%)</title><rect x="608.5" y="755.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.5" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (83 samples, 0.49%)</title><rect x="608.5" y="739.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="611.5" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (83 samples, 0.49%)</title><rect x="608.5" y="723.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="611.5" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (83 samples, 0.49%)</title><rect x="608.5" y="707.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="611.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (83 samples, 0.49%)</title><rect x="608.5" y="691.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="611.5" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (74 samples, 0.43%)</title><rect x="608.5" y="675.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="611.5" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (27 samples, 0.16%)</title><rect x="608.5" y="659.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="611.5" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (27 samples, 0.16%)</title><rect x="608.5" y="643.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.5" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (27 samples, 0.16%)</title><rect x="608.5" y="627.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="611.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (27 samples, 0.16%)</title><rect x="608.5" y="611.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (27 samples, 0.16%)</title><rect x="608.5" y="595.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.5" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (27 samples, 0.16%)</title><rect x="608.5" y="579.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="611.5" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (27 samples, 0.16%)</title><rect x="608.5" y="563.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="611.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (27 samples, 0.16%)</title><rect x="608.5" y="547.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (27 samples, 0.16%)</title><rect x="608.5" y="531.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (27 samples, 0.16%)</title><rect x="608.5" y="515.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="611.5" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (16 samples, 0.09%)</title><rect x="608.5" y="499.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="611.5" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.09%)</title><rect x="608.5" y="483.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="611.5" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.06%)</title><rect x="609.6" y="499.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="612.6" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.06%)</title><rect x="609.6" y="483.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="612.6" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (47 samples, 0.28%)</title><rect x="610.4" y="659.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="613.4" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (47 samples, 0.28%)</title><rect x="610.4" y="643.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="613.4" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (47 samples, 0.28%)</title><rect x="610.4" y="627.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.4" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (47 samples, 0.28%)</title><rect x="610.4" y="611.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="613.4" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (47 samples, 0.28%)</title><rect x="610.4" y="595.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.4" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (47 samples, 0.28%)</title><rect x="610.4" y="579.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="613.4" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (41 samples, 0.24%)</title><rect x="610.4" y="563.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="613.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (41 samples, 0.24%)</title><rect x="610.4" y="547.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="613.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (41 samples, 0.24%)</title><rect x="610.4" y="531.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="613.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (41 samples, 0.24%)</title><rect x="610.4" y="515.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="613.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (12 samples, 0.07%)</title><rect x="610.4" y="499.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="613.4" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.07%)</title><rect x="610.4" y="483.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="613.4" y="494.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.07%)</title><rect x="610.4" y="467.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="613.4" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (18 samples, 0.11%)</title><rect x="611.2" y="499.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="614.2" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (18 samples, 0.11%)</title><rect x="611.2" y="483.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="614.2" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (4 samples, 0.02%)</title><rect x="612.6" y="499.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="615.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (5 samples, 0.03%)</title><rect x="612.9" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="615.9" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.03%)</title><rect x="612.9" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="615.9" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="612.9" y="467.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.9" y="478.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.03%)</title><rect x="612.9" y="451.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="615.9" y="462.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.04%)</title><rect x="613.2" y="563.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="616.2" y="574.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.04%)</title><rect x="613.2" y="547.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="616.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (6 samples, 0.04%)</title><rect x="613.2" y="531.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="616.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (6 samples, 0.04%)</title><rect x="613.2" y="515.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (6 samples, 0.04%)</title><rect x="613.2" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="616.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$85/1965158079.apply (9 samples, 0.05%)</title><rect x="613.6" y="675.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (9 samples, 0.05%)</title><rect x="613.6" y="659.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.6" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.04%)</title><rect x="613.6" y="643.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="616.6" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.04%)</title><rect x="613.6" y="627.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="616.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (948 samples, 5.55%)</title><rect x="614.6" y="755.0" width="65.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="617.6" y="766.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (948 samples, 5.55%)</title><rect x="614.6" y="739.0" width="65.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="617.6" y="750.0">ru/mail..</text>
</g>
<g>
<title>java.util.ArrayList (8 samples, 0.05%)</title><rect x="614.6" y="723.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="617.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (936 samples, 5.48%)</title><rect x="615.3" y="723.0" width="64.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="618.3" y="734.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (130 samples, 0.76%)</title><rect x="615.3" y="707.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="618.3" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (130 samples, 0.76%)</title><rect x="615.3" y="691.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="618.3" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (123 samples, 0.72%)</title><rect x="615.8" y="675.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="618.8" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (123 samples, 0.72%)</title><rect x="615.8" y="659.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="618.8" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (121 samples, 0.71%)</title><rect x="616.0" y="643.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.0" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (121 samples, 0.71%)</title><rect x="616.0" y="627.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="619.0" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (121 samples, 0.71%)</title><rect x="616.0" y="611.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (121 samples, 0.71%)</title><rect x="616.0" y="595.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="619.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (94 samples, 0.55%)</title><rect x="616.0" y="579.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (7 samples, 0.04%)</title><rect x="616.0" y="563.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.0" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (6 samples, 0.04%)</title><rect x="616.0" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="619.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$65/790482547.apply (6 samples, 0.04%)</title><rect x="616.0" y="531.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="619.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (6 samples, 0.04%)</title><rect x="616.0" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="619.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (87 samples, 0.51%)</title><rect x="616.5" y="563.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="619.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (87 samples, 0.51%)</title><rect x="616.5" y="547.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="619.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (87 samples, 0.51%)</title><rect x="616.5" y="531.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="619.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (20 samples, 0.12%)</title><rect x="616.5" y="515.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="619.5" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (20 samples, 0.12%)</title><rect x="616.5" y="499.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="619.5" y="510.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.12%)</title><rect x="616.5" y="483.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="619.5" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (53 samples, 0.31%)</title><rect x="617.8" y="515.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="620.8" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (53 samples, 0.31%)</title><rect x="617.8" y="499.0" width="3.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="620.8" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (5 samples, 0.03%)</title><rect x="621.7" y="515.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="624.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (6 samples, 0.04%)</title><rect x="622.1" y="515.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="625.1" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.04%)</title><rect x="622.1" y="499.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.1" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="622.1" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="625.1" y="494.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.04%)</title><rect x="622.1" y="467.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="625.1" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (27 samples, 0.16%)</title><rect x="622.5" y="579.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.5" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (27 samples, 0.16%)</title><rect x="622.5" y="563.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="625.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (27 samples, 0.16%)</title><rect x="622.5" y="547.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="625.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (27 samples, 0.16%)</title><rect x="622.5" y="531.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (27 samples, 0.16%)</title><rect x="622.5" y="515.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.5" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.04%)</title><rect x="622.5" y="499.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="625.5" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.04%)</title><rect x="622.5" y="483.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="625.5" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 0.06%)</title><rect x="623.0" y="499.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.0" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.06%)</title><rect x="623.0" y="483.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="626.0" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (9 samples, 0.05%)</title><rect x="623.6" y="499.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="626.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (9 samples, 0.05%)</title><rect x="623.6" y="483.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="626.6" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.05%)</title><rect x="623.6" y="467.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="626.6" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (774 samples, 4.53%)</title><rect x="624.4" y="707.0" width="53.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="627.4" y="718.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (774 samples, 4.53%)</title><rect x="624.4" y="691.0" width="53.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="627.4" y="702.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1546833500.accept (773 samples, 4.53%)</title><rect x="624.5" y="675.0" width="53.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="627.5" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (773 samples, 4.53%)</title><rect x="624.5" y="659.0" width="53.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.5" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (773 samples, 4.53%)</title><rect x="624.5" y="643.0" width="53.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.5" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (7 samples, 0.04%)</title><rect x="624.5" y="627.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="627.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (766 samples, 4.49%)</title><rect x="625.0" y="627.0" width="52.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.0" y="638.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (766 samples, 4.49%)</title><rect x="625.0" y="611.0" width="52.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.0" y="622.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (766 samples, 4.49%)</title><rect x="625.0" y="595.0" width="52.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="628.0" y="606.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (458 samples, 2.68%)</title><rect x="625.0" y="579.0" width="31.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.0" y="590.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (200 samples, 1.17%)</title><rect x="625.0" y="563.0" width="13.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="628.0" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (258 samples, 1.51%)</title><rect x="638.8" y="563.0" width="17.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="641.8" y="574.0"></text>
</g>
<g>
<title>byte[] (258 samples, 1.51%)</title><rect x="638.8" y="547.0" width="17.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="641.8" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (215 samples, 1.26%)</title><rect x="656.6" y="579.0" width="14.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="659.6" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (215 samples, 1.26%)</title><rect x="656.6" y="563.0" width="14.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="659.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (93 samples, 0.54%)</title><rect x="671.5" y="579.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="674.5" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (93 samples, 0.54%)</title><rect x="671.5" y="563.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.5" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (93 samples, 0.54%)</title><rect x="671.5" y="547.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="674.5" y="558.0"></text>
</g>
<g>
<title>byte[] (93 samples, 0.54%)</title><rect x="671.5" y="531.0" width="6.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="674.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (30 samples, 0.18%)</title><rect x="678.0" y="707.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="681.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (30 samples, 0.18%)</title><rect x="678.0" y="691.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="681.0" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (30 samples, 0.18%)</title><rect x="678.0" y="675.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="681.0" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (14 samples, 0.08%)</title><rect x="678.0" y="659.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="681.0" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (14 samples, 0.08%)</title><rect x="678.0" y="643.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="681.0" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (14 samples, 0.08%)</title><rect x="678.0" y="627.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.0" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.08%)</title><rect x="678.0" y="611.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="681.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.08%)</title><rect x="678.0" y="595.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.0" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.08%)</title><rect x="678.0" y="579.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="681.0" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.08%)</title><rect x="678.0" y="563.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="681.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (14 samples, 0.08%)</title><rect x="678.0" y="547.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="681.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (14 samples, 0.08%)</title><rect x="678.0" y="531.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="681.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (14 samples, 0.08%)</title><rect x="678.0" y="515.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.0" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.04%)</title><rect x="678.0" y="499.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="681.0" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.04%)</title><rect x="678.0" y="483.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="681.0" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.05%)</title><rect x="678.4" y="499.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="681.4" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.05%)</title><rect x="678.4" y="483.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="681.4" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (16 samples, 0.09%)</title><rect x="678.9" y="659.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="681.9" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (16 samples, 0.09%)</title><rect x="678.9" y="643.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="681.9" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (16 samples, 0.09%)</title><rect x="678.9" y="627.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="681.9" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (16 samples, 0.09%)</title><rect x="678.9" y="611.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.9" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.09%)</title><rect x="678.9" y="595.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="681.9" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.09%)</title><rect x="678.9" y="579.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="681.9" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (13 samples, 0.08%)</title><rect x="678.9" y="563.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="681.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (13 samples, 0.08%)</title><rect x="678.9" y="547.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="681.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (13 samples, 0.08%)</title><rect x="678.9" y="531.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="681.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (13 samples, 0.08%)</title><rect x="678.9" y="515.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.9" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.05%)</title><rect x="679.1" y="499.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="682.1" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.05%)</title><rect x="679.1" y="483.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="682.1" y="494.0"></text>
</g>
<g>
<title>[pool-3-thread-2 tid=117890] (1,030 samples, 6.03%)</title><rect x="680.1" y="883.0" width="71.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="683.1" y="894.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (1,030 samples, 6.03%)</title><rect x="680.1" y="867.0" width="71.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.1" y="878.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,030 samples, 6.03%)</title><rect x="680.1" y="851.0" width="71.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.1" y="862.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,030 samples, 6.03%)</title><rect x="680.1" y="835.0" width="71.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="683.1" y="846.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.run (1,028 samples, 6.02%)</title><rect x="680.3" y="819.0" width="71.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="683.3" y="830.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (1,028 samples, 6.02%)</title><rect x="680.3" y="803.0" width="71.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.3" y="814.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (1,028 samples, 6.02%)</title><rect x="680.3" y="787.0" width="71.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="683.3" y="798.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.03%)</title><rect x="680.3" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.03%)</title><rect x="680.3" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,019 samples, 5.97%)</title><rect x="680.7" y="771.0" width="70.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.7" y="782.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (83 samples, 0.49%)</title><rect x="680.7" y="755.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (83 samples, 0.49%)</title><rect x="680.7" y="739.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (83 samples, 0.49%)</title><rect x="680.7" y="723.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="683.7" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (83 samples, 0.49%)</title><rect x="680.7" y="707.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="683.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (83 samples, 0.49%)</title><rect x="680.7" y="691.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="683.7" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (69 samples, 0.40%)</title><rect x="680.7" y="675.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="683.7" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (27 samples, 0.16%)</title><rect x="680.7" y="659.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.7" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (27 samples, 0.16%)</title><rect x="680.7" y="643.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.7" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (27 samples, 0.16%)</title><rect x="680.7" y="627.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (27 samples, 0.16%)</title><rect x="680.7" y="611.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="683.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (27 samples, 0.16%)</title><rect x="680.7" y="595.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="683.7" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (27 samples, 0.16%)</title><rect x="680.7" y="579.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.7" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (27 samples, 0.16%)</title><rect x="680.7" y="563.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (27 samples, 0.16%)</title><rect x="680.7" y="547.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (27 samples, 0.16%)</title><rect x="680.7" y="531.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (27 samples, 0.16%)</title><rect x="680.7" y="515.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="683.7" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (11 samples, 0.06%)</title><rect x="680.7" y="499.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="683.7" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.06%)</title><rect x="680.7" y="483.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="683.7" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (16 samples, 0.09%)</title><rect x="681.5" y="499.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="684.5" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.09%)</title><rect x="681.5" y="483.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="684.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (42 samples, 0.25%)</title><rect x="682.6" y="659.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="685.6" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (42 samples, 0.25%)</title><rect x="682.6" y="643.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.6" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (42 samples, 0.25%)</title><rect x="682.6" y="627.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.6" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (42 samples, 0.25%)</title><rect x="682.6" y="611.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="685.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (42 samples, 0.25%)</title><rect x="682.6" y="595.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="685.6" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (42 samples, 0.25%)</title><rect x="682.6" y="579.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (33 samples, 0.19%)</title><rect x="682.6" y="563.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="685.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (33 samples, 0.19%)</title><rect x="682.6" y="547.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="685.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (33 samples, 0.19%)</title><rect x="682.6" y="531.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="685.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (33 samples, 0.19%)</title><rect x="682.6" y="515.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.02%)</title><rect x="682.6" y="499.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="682.6" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.6" y="494.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.02%)</title><rect x="682.6" y="467.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="685.6" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (19 samples, 0.11%)</title><rect x="682.9" y="499.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="685.9" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 0.11%)</title><rect x="682.9" y="483.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="685.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.02%)</title><rect x="684.6" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="687.6" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.02%)</title><rect x="684.6" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.6" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="684.6" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.6" y="478.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.02%)</title><rect x="684.6" y="451.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="687.6" y="462.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.05%)</title><rect x="684.9" y="563.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="687.9" y="574.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.05%)</title><rect x="684.9" y="547.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (9 samples, 0.05%)</title><rect x="684.9" y="531.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (9 samples, 0.05%)</title><rect x="684.9" y="515.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (9 samples, 0.05%)</title><rect x="684.9" y="499.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="687.9" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="684.9" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.9" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.03%)</title><rect x="684.9" y="467.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="687.9" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.02%)</title><rect x="685.2" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="688.2" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.02%)</title><rect x="685.2" y="467.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="688.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$85/1965158079.apply (14 samples, 0.08%)</title><rect x="685.5" y="675.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="688.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (14 samples, 0.08%)</title><rect x="685.5" y="659.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="688.5" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.05%)</title><rect x="685.5" y="643.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="688.5" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.05%)</title><rect x="685.5" y="627.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="688.5" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.04%)</title><rect x="686.1" y="643.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="689.1" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.04%)</title><rect x="686.1" y="627.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="689.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (933 samples, 5.47%)</title><rect x="686.7" y="755.0" width="64.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.7" y="766.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (933 samples, 5.47%)</title><rect x="686.7" y="739.0" width="64.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="689.7" y="750.0">ru/mail..</text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.04%)</title><rect x="686.8" y="723.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="689.8" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.02%)</title><rect x="687.4" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.4" y="734.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.02%)</title><rect x="687.4" y="707.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="690.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (914 samples, 5.35%)</title><rect x="687.7" y="723.0" width="63.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.7" y="734.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (146 samples, 0.86%)</title><rect x="687.7" y="707.0" width="10.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="690.7" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (145 samples, 0.85%)</title><rect x="687.7" y="691.0" width="10.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.7" y="702.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.02%)</title><rect x="687.9" y="675.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="690.9" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (137 samples, 0.80%)</title><rect x="688.3" y="675.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="691.3" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (137 samples, 0.80%)</title><rect x="688.3" y="659.0" width="9.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.3" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (4 samples, 0.02%)</title><rect x="688.3" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="691.3" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.02%)</title><rect x="688.3" y="627.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="691.3" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.02%)</title><rect x="688.3" y="611.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="691.3" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (133 samples, 0.78%)</title><rect x="688.6" y="643.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="691.6" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (133 samples, 0.78%)</title><rect x="688.6" y="627.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.6" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (133 samples, 0.78%)</title><rect x="688.6" y="611.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (133 samples, 0.78%)</title><rect x="688.6" y="595.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.6" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (101 samples, 0.59%)</title><rect x="688.6" y="579.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="691.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (98 samples, 0.57%)</title><rect x="688.8" y="563.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="691.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (98 samples, 0.57%)</title><rect x="688.8" y="547.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="691.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (98 samples, 0.57%)</title><rect x="688.8" y="531.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="691.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (21 samples, 0.12%)</title><rect x="688.8" y="515.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="691.8" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (21 samples, 0.12%)</title><rect x="688.8" y="499.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.8" y="510.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.12%)</title><rect x="688.8" y="483.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="691.8" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (54 samples, 0.32%)</title><rect x="690.2" y="515.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="693.2" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (54 samples, 0.32%)</title><rect x="690.2" y="499.0" width="3.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="693.2" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (5 samples, 0.03%)</title><rect x="693.9" y="515.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="696.9" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (7 samples, 0.04%)</title><rect x="694.3" y="515.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="697.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (11 samples, 0.06%)</title><rect x="694.8" y="515.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="697.8" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (11 samples, 0.06%)</title><rect x="694.8" y="499.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.06%)</title><rect x="694.8" y="483.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="697.8" y="494.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.06%)</title><rect x="694.8" y="467.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="697.8" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (32 samples, 0.19%)</title><rect x="695.5" y="579.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="698.5" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (32 samples, 0.19%)</title><rect x="695.5" y="563.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="698.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (32 samples, 0.19%)</title><rect x="695.5" y="547.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="698.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (32 samples, 0.19%)</title><rect x="695.5" y="531.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="698.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (32 samples, 0.19%)</title><rect x="695.5" y="515.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="698.5" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.07%)</title><rect x="695.5" y="499.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="698.5" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.07%)</title><rect x="695.5" y="483.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="698.5" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (17 samples, 0.10%)</title><rect x="696.4" y="499.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="699.4" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17 samples, 0.10%)</title><rect x="696.4" y="483.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="699.4" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (750 samples, 4.39%)</title><rect x="697.7" y="707.0" width="51.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="700.7" y="718.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (750 samples, 4.39%)</title><rect x="697.7" y="691.0" width="51.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.7" y="702.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1546833500.accept (749 samples, 4.39%)</title><rect x="697.8" y="675.0" width="51.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.8" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (749 samples, 4.39%)</title><rect x="697.8" y="659.0" width="51.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="700.8" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (749 samples, 4.39%)</title><rect x="697.8" y="643.0" width="51.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="700.8" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (4 samples, 0.02%)</title><rect x="697.8" y="627.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="700.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (745 samples, 4.36%)</title><rect x="698.1" y="627.0" width="51.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.1" y="638.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (745 samples, 4.36%)</title><rect x="698.1" y="611.0" width="51.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="701.1" y="622.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (745 samples, 4.36%)</title><rect x="698.1" y="595.0" width="51.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.1" y="606.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (420 samples, 2.46%)</title><rect x="698.1" y="579.0" width="29.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="701.1" y="590.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (195 samples, 1.14%)</title><rect x="698.1" y="563.0" width="13.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="701.1" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (225 samples, 1.32%)</title><rect x="711.6" y="563.0" width="15.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="714.6" y="574.0"></text>
</g>
<g>
<title>byte[] (225 samples, 1.32%)</title><rect x="711.6" y="547.0" width="15.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="714.6" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (221 samples, 1.29%)</title><rect x="727.1" y="579.0" width="15.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.1" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (221 samples, 1.29%)</title><rect x="727.1" y="563.0" width="15.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="730.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (104 samples, 0.61%)</title><rect x="742.4" y="579.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (104 samples, 0.61%)</title><rect x="742.4" y="563.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="745.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (104 samples, 0.61%)</title><rect x="742.4" y="547.0" width="7.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.4" y="558.0"></text>
</g>
<g>
<title>byte[] (104 samples, 0.61%)</title><rect x="742.4" y="531.0" width="7.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="745.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (18 samples, 0.11%)</title><rect x="749.6" y="707.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="752.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (18 samples, 0.11%)</title><rect x="749.6" y="691.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="752.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (18 samples, 0.11%)</title><rect x="749.6" y="675.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="752.6" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (16 samples, 0.09%)</title><rect x="749.7" y="659.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="752.7" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (16 samples, 0.09%)</title><rect x="749.7" y="643.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="752.7" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (16 samples, 0.09%)</title><rect x="749.7" y="627.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="752.7" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (16 samples, 0.09%)</title><rect x="749.7" y="611.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="752.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.09%)</title><rect x="749.7" y="595.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="752.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.09%)</title><rect x="749.7" y="579.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="752.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (10 samples, 0.06%)</title><rect x="749.7" y="563.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="752.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (10 samples, 0.06%)</title><rect x="749.7" y="547.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (10 samples, 0.06%)</title><rect x="749.7" y="531.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (10 samples, 0.06%)</title><rect x="749.7" y="515.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="752.7" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.04%)</title><rect x="749.9" y="499.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="752.9" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.04%)</title><rect x="749.9" y="483.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="752.9" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.04%)</title><rect x="750.4" y="563.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="753.4" y="574.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.04%)</title><rect x="750.4" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (6 samples, 0.04%)</title><rect x="750.4" y="531.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (6 samples, 0.04%)</title><rect x="750.4" y="515.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (6 samples, 0.04%)</title><rect x="750.4" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="753.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (5 samples, 0.03%)</title><rect x="750.8" y="723.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.8" y="734.0"></text>
</g>
<g>
<title>[pool-3-thread-3 tid=117889] (1,109 samples, 6.50%)</title><rect x="751.3" y="883.0" width="76.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="754.3" y="894.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (1,109 samples, 6.50%)</title><rect x="751.3" y="867.0" width="76.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="754.3" y="878.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,109 samples, 6.50%)</title><rect x="751.3" y="851.0" width="76.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.3" y="862.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,109 samples, 6.50%)</title><rect x="751.3" y="835.0" width="76.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="754.3" y="846.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.run (1,108 samples, 6.49%)</title><rect x="751.4" y="819.0" width="76.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="754.4" y="830.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (1,108 samples, 6.49%)</title><rect x="751.4" y="803.0" width="76.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.4" y="814.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (1,108 samples, 6.49%)</title><rect x="751.4" y="787.0" width="76.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="754.4" y="798.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.02%)</title><rect x="751.4" y="771.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.02%)</title><rect x="751.4" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,101 samples, 6.45%)</title><rect x="751.7" y="771.0" width="76.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="754.7" y="782.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (77 samples, 0.45%)</title><rect x="751.7" y="755.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="754.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (77 samples, 0.45%)</title><rect x="751.7" y="739.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="754.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (77 samples, 0.45%)</title><rect x="751.7" y="723.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.7" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (77 samples, 0.45%)</title><rect x="751.7" y="707.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="754.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (77 samples, 0.45%)</title><rect x="751.7" y="691.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.7" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (61 samples, 0.36%)</title><rect x="751.7" y="675.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.7" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (19 samples, 0.11%)</title><rect x="751.7" y="659.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="754.7" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (19 samples, 0.11%)</title><rect x="751.7" y="643.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="754.7" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (19 samples, 0.11%)</title><rect x="751.7" y="627.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (19 samples, 0.11%)</title><rect x="751.7" y="611.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (19 samples, 0.11%)</title><rect x="751.7" y="595.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="754.7" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (19 samples, 0.11%)</title><rect x="751.7" y="579.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.7" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (19 samples, 0.11%)</title><rect x="751.7" y="563.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (19 samples, 0.11%)</title><rect x="751.7" y="547.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (19 samples, 0.11%)</title><rect x="751.7" y="531.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (19 samples, 0.11%)</title><rect x="751.7" y="515.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.7" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.07%)</title><rect x="751.7" y="499.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="754.7" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.07%)</title><rect x="751.7" y="483.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="754.7" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.04%)</title><rect x="752.6" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="755.6" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.04%)</title><rect x="752.6" y="483.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="755.6" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (42 samples, 0.25%)</title><rect x="753.0" y="659.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.0" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (42 samples, 0.25%)</title><rect x="753.0" y="643.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="756.0" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (42 samples, 0.25%)</title><rect x="753.0" y="627.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="756.0" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (42 samples, 0.25%)</title><rect x="753.0" y="611.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (42 samples, 0.25%)</title><rect x="753.0" y="595.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="756.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (42 samples, 0.25%)</title><rect x="753.0" y="579.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="756.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (35 samples, 0.21%)</title><rect x="753.0" y="563.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="756.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (35 samples, 0.21%)</title><rect x="753.0" y="547.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="756.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (35 samples, 0.21%)</title><rect x="753.0" y="531.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (35 samples, 0.21%)</title><rect x="753.0" y="515.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.04%)</title><rect x="753.0" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="756.0" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="753.0" y="483.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.0" y="494.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.04%)</title><rect x="753.0" y="467.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="756.0" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (25 samples, 0.15%)</title><rect x="753.5" y="499.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="756.5" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.15%)</title><rect x="753.5" y="483.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="756.5" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.04%)</title><rect x="755.5" y="563.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="758.5" y="574.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.04%)</title><rect x="755.5" y="547.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="758.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (7 samples, 0.04%)</title><rect x="755.5" y="531.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="758.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (7 samples, 0.04%)</title><rect x="755.5" y="515.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="758.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (7 samples, 0.04%)</title><rect x="755.5" y="499.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="758.5" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="755.5" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="758.5" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.03%)</title><rect x="755.5" y="467.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="758.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$85/1965158079.apply (16 samples, 0.09%)</title><rect x="756.0" y="675.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (16 samples, 0.09%)</title><rect x="756.0" y="659.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="759.0" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="756.0" y="643.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.0" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.03%)</title><rect x="756.0" y="627.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="759.0" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.06%)</title><rect x="756.3" y="643.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.3" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.06%)</title><rect x="756.3" y="627.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="759.3" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (9 samples, 0.05%)</title><rect x="757.1" y="755.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="760.1" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (9 samples, 0.05%)</title><rect x="757.1" y="739.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="760.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$93/297629458.apply (9 samples, 0.05%)</title><rect x="757.1" y="723.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (9 samples, 0.05%)</title><rect x="757.1" y="707.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="760.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (6 samples, 0.04%)</title><rect x="757.3" y="691.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="760.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (1,011 samples, 5.92%)</title><rect x="758.0" y="755.0" width="69.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="761.0" y="766.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (1,010 samples, 5.92%)</title><rect x="758.0" y="739.0" width="69.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="761.0" y="750.0">ru/mail..</text>
</g>
<g>
<title>java.util.ArrayList (8 samples, 0.05%)</title><rect x="758.1" y="723.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="761.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (992 samples, 5.81%)</title><rect x="759.0" y="723.0" width="68.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.0" y="734.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (128 samples, 0.75%)</title><rect x="759.0" y="707.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="762.0" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (128 samples, 0.75%)</title><rect x="759.0" y="691.0" width="8.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="762.0" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (7 samples, 0.04%)</title><rect x="759.0" y="675.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.0" y="686.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (7 samples, 0.04%)</title><rect x="759.0" y="659.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="762.0" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (120 samples, 0.70%)</title><rect x="759.5" y="675.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.5" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (120 samples, 0.70%)</title><rect x="759.5" y="659.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.5" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (117 samples, 0.69%)</title><rect x="759.8" y="643.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.8" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (117 samples, 0.69%)</title><rect x="759.8" y="627.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="762.8" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (117 samples, 0.69%)</title><rect x="759.8" y="611.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="762.8" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (117 samples, 0.69%)</title><rect x="759.8" y="595.0" width="8.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="762.8" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (92 samples, 0.54%)</title><rect x="759.8" y="579.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (6 samples, 0.04%)</title><rect x="759.8" y="563.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="762.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (4 samples, 0.02%)</title><rect x="759.8" y="547.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="762.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$65/790482547.apply (4 samples, 0.02%)</title><rect x="759.8" y="531.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="762.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (4 samples, 0.02%)</title><rect x="759.8" y="515.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="762.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (86 samples, 0.50%)</title><rect x="760.2" y="563.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="763.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (86 samples, 0.50%)</title><rect x="760.2" y="547.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="763.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (86 samples, 0.50%)</title><rect x="760.2" y="531.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="763.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (18 samples, 0.11%)</title><rect x="760.2" y="515.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="763.2" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (18 samples, 0.11%)</title><rect x="760.2" y="499.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="763.2" y="510.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.11%)</title><rect x="760.2" y="483.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="763.2" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (46 samples, 0.27%)</title><rect x="761.4" y="515.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="764.4" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (46 samples, 0.27%)</title><rect x="761.4" y="499.0" width="3.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="764.4" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (5 samples, 0.03%)</title><rect x="764.6" y="515.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="767.6" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (9 samples, 0.05%)</title><rect x="764.9" y="515.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="767.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (8 samples, 0.05%)</title><rect x="765.6" y="515.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="768.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.05%)</title><rect x="765.6" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="765.6" y="483.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="768.6" y="494.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.05%)</title><rect x="765.6" y="467.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="768.6" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (25 samples, 0.15%)</title><rect x="766.1" y="579.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="769.1" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (25 samples, 0.15%)</title><rect x="766.1" y="563.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="769.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (25 samples, 0.15%)</title><rect x="766.1" y="547.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="769.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (25 samples, 0.15%)</title><rect x="766.1" y="531.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="769.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (25 samples, 0.15%)</title><rect x="766.1" y="515.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="769.1" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.04%)</title><rect x="766.1" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.1" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.04%)</title><rect x="766.1" y="483.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="769.1" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (12 samples, 0.07%)</title><rect x="766.6" y="499.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="769.6" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.07%)</title><rect x="766.6" y="483.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="769.6" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="767.4" y="499.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="770.4" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.03%)</title><rect x="767.4" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="770.4" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.03%)</title><rect x="767.4" y="467.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="770.4" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (834 samples, 4.89%)</title><rect x="767.8" y="707.0" width="57.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.8" y="718.0">java/u..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (834 samples, 4.89%)</title><rect x="767.8" y="691.0" width="57.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="770.8" y="702.0">java/l..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1546833500.accept (832 samples, 4.87%)</title><rect x="768.0" y="675.0" width="57.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="771.0" y="686.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (832 samples, 4.87%)</title><rect x="768.0" y="659.0" width="57.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="771.0" y="670.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (832 samples, 4.87%)</title><rect x="768.0" y="643.0" width="57.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="771.0" y="654.0">ru/mai..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (8 samples, 0.05%)</title><rect x="768.0" y="627.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="771.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (824 samples, 4.83%)</title><rect x="768.5" y="627.0" width="57.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.5" y="638.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (824 samples, 4.83%)</title><rect x="768.5" y="611.0" width="57.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="771.5" y="622.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (824 samples, 4.83%)</title><rect x="768.5" y="595.0" width="57.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="771.5" y="606.0">ru/mai..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (469 samples, 2.75%)</title><rect x="768.5" y="579.0" width="32.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="771.5" y="590.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (224 samples, 1.31%)</title><rect x="768.5" y="563.0" width="15.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="771.5" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (245 samples, 1.44%)</title><rect x="784.0" y="563.0" width="17.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.0" y="574.0"></text>
</g>
<g>
<title>byte[] (245 samples, 1.44%)</title><rect x="784.0" y="547.0" width="17.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="787.0" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (242 samples, 1.42%)</title><rect x="801.0" y="579.0" width="16.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="804.0" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (242 samples, 1.42%)</title><rect x="801.0" y="563.0" width="16.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="804.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (113 samples, 0.66%)</title><rect x="817.7" y="579.0" width="7.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.7" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (113 samples, 0.66%)</title><rect x="817.7" y="563.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="820.7" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (113 samples, 0.66%)</title><rect x="817.7" y="547.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="820.7" y="558.0"></text>
</g>
<g>
<title>byte[] (113 samples, 0.66%)</title><rect x="817.7" y="531.0" width="7.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="820.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (30 samples, 0.18%)</title><rect x="825.5" y="707.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="828.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (29 samples, 0.17%)</title><rect x="825.6" y="691.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="828.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (29 samples, 0.17%)</title><rect x="825.6" y="675.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="828.6" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (15 samples, 0.09%)</title><rect x="825.6" y="659.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="828.6" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (15 samples, 0.09%)</title><rect x="825.6" y="643.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.6" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (15 samples, 0.09%)</title><rect x="825.6" y="627.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="828.6" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.09%)</title><rect x="825.6" y="611.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="828.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.09%)</title><rect x="825.6" y="595.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.6" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (15 samples, 0.09%)</title><rect x="825.6" y="579.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="828.6" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (15 samples, 0.09%)</title><rect x="825.6" y="563.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (15 samples, 0.09%)</title><rect x="825.6" y="547.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (15 samples, 0.09%)</title><rect x="825.6" y="531.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="828.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (15 samples, 0.09%)</title><rect x="825.6" y="515.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.05%)</title><rect x="825.6" y="499.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="828.6" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.05%)</title><rect x="825.6" y="483.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="828.6" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.04%)</title><rect x="826.2" y="499.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="829.2" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.04%)</title><rect x="826.2" y="483.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="829.2" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (14 samples, 0.08%)</title><rect x="826.6" y="659.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="829.6" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (14 samples, 0.08%)</title><rect x="826.6" y="643.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="829.6" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (14 samples, 0.08%)</title><rect x="826.6" y="627.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="829.6" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (14 samples, 0.08%)</title><rect x="826.6" y="611.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="829.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.08%)</title><rect x="826.6" y="595.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="829.6" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.08%)</title><rect x="826.6" y="579.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="829.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (11 samples, 0.06%)</title><rect x="826.6" y="563.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="829.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.06%)</title><rect x="826.6" y="547.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="829.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.06%)</title><rect x="826.6" y="531.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="829.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (11 samples, 0.06%)</title><rect x="826.6" y="515.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="829.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.03%)</title><rect x="826.6" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="829.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="826.6" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="829.6" y="494.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.03%)</title><rect x="826.6" y="467.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="829.6" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.04%)</title><rect x="826.9" y="499.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="829.9" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.04%)</title><rect x="826.9" y="483.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="829.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (4 samples, 0.02%)</title><rect x="827.6" y="723.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="830.6" y="734.0"></text>
</g>
<g>
<title>[pool-3-thread-4 tid=117887] (1,047 samples, 6.13%)</title><rect x="828.0" y="883.0" width="72.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="831.0" y="894.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (1,047 samples, 6.13%)</title><rect x="828.0" y="867.0" width="72.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="831.0" y="878.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,047 samples, 6.13%)</title><rect x="828.0" y="851.0" width="72.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.0" y="862.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,047 samples, 6.13%)</title><rect x="828.0" y="835.0" width="72.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="831.0" y="846.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.run (1,047 samples, 6.13%)</title><rect x="828.0" y="819.0" width="72.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="831.0" y="830.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (1,047 samples, 6.13%)</title><rect x="828.0" y="803.0" width="72.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="831.0" y="814.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (1,047 samples, 6.13%)</title><rect x="828.0" y="787.0" width="72.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="831.0" y="798.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.03%)</title><rect x="828.0" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.03%)</title><rect x="828.0" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="831.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (5 samples, 0.03%)</title><rect x="828.3" y="771.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="831.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.03%)</title><rect x="828.3" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="831.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,036 samples, 6.07%)</title><rect x="828.7" y="771.0" width="71.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.7" y="782.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (59 samples, 0.35%)</title><rect x="828.7" y="755.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="831.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (59 samples, 0.35%)</title><rect x="828.7" y="739.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (59 samples, 0.35%)</title><rect x="828.7" y="723.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="831.7" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (59 samples, 0.35%)</title><rect x="828.7" y="707.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="831.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (59 samples, 0.35%)</title><rect x="828.7" y="691.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="831.7" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (47 samples, 0.28%)</title><rect x="828.7" y="675.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="831.7" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (14 samples, 0.08%)</title><rect x="828.7" y="659.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="831.7" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (14 samples, 0.08%)</title><rect x="828.7" y="643.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="831.7" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (14 samples, 0.08%)</title><rect x="828.7" y="627.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="831.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.08%)</title><rect x="828.7" y="611.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="831.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.08%)</title><rect x="828.7" y="595.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="831.7" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.08%)</title><rect x="828.7" y="579.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="831.7" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.08%)</title><rect x="828.7" y="563.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="831.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (14 samples, 0.08%)</title><rect x="828.7" y="547.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="831.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (14 samples, 0.08%)</title><rect x="828.7" y="531.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="831.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (14 samples, 0.08%)</title><rect x="828.7" y="515.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="831.7" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.05%)</title><rect x="828.7" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.7" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.05%)</title><rect x="828.7" y="483.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="831.7" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.04%)</title><rect x="829.2" y="499.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="832.2" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.04%)</title><rect x="829.2" y="483.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="832.2" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (33 samples, 0.19%)</title><rect x="829.6" y="659.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="832.6" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (33 samples, 0.19%)</title><rect x="829.6" y="643.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="832.6" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (33 samples, 0.19%)</title><rect x="829.6" y="627.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="832.6" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (33 samples, 0.19%)</title><rect x="829.6" y="611.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="832.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (33 samples, 0.19%)</title><rect x="829.6" y="595.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.6" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (33 samples, 0.19%)</title><rect x="829.6" y="579.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="832.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (20 samples, 0.12%)</title><rect x="829.6" y="563.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="832.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (20 samples, 0.12%)</title><rect x="829.6" y="547.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="832.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (20 samples, 0.12%)</title><rect x="829.6" y="531.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (20 samples, 0.12%)</title><rect x="829.6" y="515.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="832.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 0.08%)</title><rect x="829.8" y="499.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="832.8" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.08%)</title><rect x="829.8" y="483.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="832.8" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (13 samples, 0.08%)</title><rect x="831.0" y="563.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="834.0" y="574.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (13 samples, 0.08%)</title><rect x="831.0" y="547.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="834.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (13 samples, 0.08%)</title><rect x="831.0" y="531.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (13 samples, 0.08%)</title><rect x="831.0" y="515.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="834.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (13 samples, 0.08%)</title><rect x="831.0" y="499.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="834.0" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="831.0" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="834.0" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.03%)</title><rect x="831.0" y="467.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="834.0" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.04%)</title><rect x="831.4" y="483.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="834.4" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.04%)</title><rect x="831.4" y="467.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="834.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$85/1965158079.apply (12 samples, 0.07%)</title><rect x="831.9" y="675.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="834.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (12 samples, 0.07%)</title><rect x="831.9" y="659.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.9" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.04%)</title><rect x="831.9" y="643.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="834.9" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.04%)</title><rect x="831.9" y="627.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="834.9" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.03%)</title><rect x="832.4" y="643.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.4" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.03%)</title><rect x="832.4" y="627.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="835.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (4 samples, 0.02%)</title><rect x="833.0" y="755.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="836.0" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="833.0" y="739.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="836.0" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="833.0" y="723.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="836.0" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.02%)</title><rect x="833.0" y="707.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="836.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (968 samples, 5.67%)</title><rect x="833.4" y="755.0" width="66.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="836.4" y="766.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (967 samples, 5.66%)</title><rect x="833.4" y="739.0" width="66.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="836.4" y="750.0">ru/mail..</text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.02%)</title><rect x="833.4" y="723.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="836.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (956 samples, 5.60%)</title><rect x="833.9" y="723.0" width="66.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="836.9" y="734.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (129 samples, 0.76%)</title><rect x="833.9" y="707.0" width="8.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="836.9" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (128 samples, 0.75%)</title><rect x="834.0" y="691.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="837.0" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (8 samples, 0.05%)</title><rect x="834.1" y="675.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="837.1" y="686.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (8 samples, 0.05%)</title><rect x="834.1" y="659.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="837.1" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (117 samples, 0.69%)</title><rect x="834.8" y="675.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.8" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (117 samples, 0.69%)</title><rect x="834.8" y="659.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="837.8" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (115 samples, 0.67%)</title><rect x="834.9" y="643.0" width="7.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="837.9" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (115 samples, 0.67%)</title><rect x="834.9" y="627.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="837.9" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (115 samples, 0.67%)</title><rect x="834.9" y="611.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="837.9" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (115 samples, 0.67%)</title><rect x="834.9" y="595.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="837.9" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (86 samples, 0.50%)</title><rect x="834.9" y="579.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="837.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (83 samples, 0.49%)</title><rect x="835.1" y="563.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="838.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (83 samples, 0.49%)</title><rect x="835.1" y="547.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="838.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (83 samples, 0.49%)</title><rect x="835.1" y="531.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="838.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (17 samples, 0.10%)</title><rect x="835.1" y="515.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="838.1" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (17 samples, 0.10%)</title><rect x="835.1" y="499.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="838.1" y="510.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.10%)</title><rect x="835.1" y="483.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="838.1" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (52 samples, 0.30%)</title><rect x="836.3" y="515.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="839.3" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (52 samples, 0.30%)</title><rect x="836.3" y="499.0" width="3.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="839.3" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (5 samples, 0.03%)</title><rect x="839.9" y="515.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="842.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (6 samples, 0.04%)</title><rect x="840.4" y="515.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="843.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.04%)</title><rect x="840.4" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="843.4" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="840.4" y="483.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="843.4" y="494.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.04%)</title><rect x="840.4" y="467.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="843.4" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (29 samples, 0.17%)</title><rect x="840.8" y="579.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="843.8" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (29 samples, 0.17%)</title><rect x="840.8" y="563.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="843.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (29 samples, 0.17%)</title><rect x="840.8" y="547.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="843.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (29 samples, 0.17%)</title><rect x="840.8" y="531.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="843.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (29 samples, 0.17%)</title><rect x="840.8" y="515.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="843.8" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.05%)</title><rect x="840.8" y="499.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="843.8" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.05%)</title><rect x="840.8" y="483.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="843.8" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.08%)</title><rect x="841.4" y="499.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="844.4" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.08%)</title><rect x="841.4" y="483.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="844.4" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="842.6" y="499.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="845.6" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.02%)</title><rect x="842.6" y="483.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="845.6" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (805 samples, 4.72%)</title><rect x="842.8" y="707.0" width="55.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="845.8" y="718.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (805 samples, 4.72%)</title><rect x="842.8" y="691.0" width="55.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="845.8" y="702.0">java/..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (4 samples, 0.02%)</title><rect x="842.8" y="675.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="845.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1546833500.accept (801 samples, 4.69%)</title><rect x="843.1" y="675.0" width="55.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="846.1" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (801 samples, 4.69%)</title><rect x="843.1" y="659.0" width="55.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="846.1" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (801 samples, 4.69%)</title><rect x="843.1" y="643.0" width="55.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="846.1" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (12 samples, 0.07%)</title><rect x="843.1" y="627.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="846.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (789 samples, 4.62%)</title><rect x="843.9" y="627.0" width="54.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="846.9" y="638.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (789 samples, 4.62%)</title><rect x="843.9" y="611.0" width="54.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="846.9" y="622.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (789 samples, 4.62%)</title><rect x="843.9" y="595.0" width="54.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="846.9" y="606.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (455 samples, 2.67%)</title><rect x="843.9" y="579.0" width="31.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="846.9" y="590.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (210 samples, 1.23%)</title><rect x="843.9" y="563.0" width="14.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="846.9" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (245 samples, 1.44%)</title><rect x="858.5" y="563.0" width="16.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="861.5" y="574.0"></text>
</g>
<g>
<title>byte[] (245 samples, 1.44%)</title><rect x="858.5" y="547.0" width="16.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="861.5" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (227 samples, 1.33%)</title><rect x="875.4" y="579.0" width="15.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="878.4" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (227 samples, 1.33%)</title><rect x="875.4" y="563.0" width="15.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="878.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (107 samples, 0.63%)</title><rect x="891.1" y="579.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="894.1" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (107 samples, 0.63%)</title><rect x="891.1" y="563.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="894.1" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (107 samples, 0.63%)</title><rect x="891.1" y="547.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.1" y="558.0"></text>
</g>
<g>
<title>byte[] (107 samples, 0.63%)</title><rect x="891.1" y="531.0" width="7.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="894.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (22 samples, 0.13%)</title><rect x="898.5" y="707.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="901.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (21 samples, 0.12%)</title><rect x="898.6" y="691.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (21 samples, 0.12%)</title><rect x="898.6" y="675.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="901.6" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (8 samples, 0.05%)</title><rect x="898.6" y="659.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.6" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (8 samples, 0.05%)</title><rect x="898.6" y="643.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="901.6" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (8 samples, 0.05%)</title><rect x="898.6" y="627.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="901.6" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="898.6" y="611.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="901.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="898.6" y="595.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.6" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (8 samples, 0.05%)</title><rect x="898.6" y="579.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="901.6" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (8 samples, 0.05%)</title><rect x="898.6" y="563.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="901.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (8 samples, 0.05%)</title><rect x="898.6" y="547.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="901.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (8 samples, 0.05%)</title><rect x="898.6" y="531.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="901.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (8 samples, 0.05%)</title><rect x="898.6" y="515.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="901.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="898.6" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.6" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.03%)</title><rect x="898.6" y="483.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="901.6" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (13 samples, 0.08%)</title><rect x="899.1" y="659.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="902.1" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (13 samples, 0.08%)</title><rect x="899.1" y="643.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="902.1" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (13 samples, 0.08%)</title><rect x="899.1" y="627.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="902.1" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (13 samples, 0.08%)</title><rect x="899.1" y="611.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="902.1" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.08%)</title><rect x="899.1" y="595.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="902.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.08%)</title><rect x="899.1" y="579.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="902.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (10 samples, 0.06%)</title><rect x="899.1" y="563.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="902.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (10 samples, 0.06%)</title><rect x="899.1" y="547.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="902.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (10 samples, 0.06%)</title><rect x="899.1" y="531.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="902.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (10 samples, 0.06%)</title><rect x="899.1" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="902.1" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.04%)</title><rect x="899.2" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="902.2" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.04%)</title><rect x="899.2" y="483.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="902.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (4 samples, 0.02%)</title><rect x="900.0" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="903.0" y="734.0"></text>
</g>
<g>
<title>[pool-3-thread-5 tid=117885] (1,042 samples, 6.10%)</title><rect x="900.4" y="883.0" width="72.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="903.4" y="894.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (1,042 samples, 6.10%)</title><rect x="900.4" y="867.0" width="72.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="903.4" y="878.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,042 samples, 6.10%)</title><rect x="900.4" y="851.0" width="72.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="903.4" y="862.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,042 samples, 6.10%)</title><rect x="900.4" y="835.0" width="72.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="903.4" y="846.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.run (1,039 samples, 6.09%)</title><rect x="900.6" y="819.0" width="71.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="903.6" y="830.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (1,039 samples, 6.09%)</title><rect x="900.6" y="803.0" width="71.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.6" y="814.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (1,039 samples, 6.09%)</title><rect x="900.6" y="787.0" width="71.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="903.6" y="798.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/Response.ok (4 samples, 0.02%)</title><rect x="900.8" y="771.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="903.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.02%)</title><rect x="900.8" y="755.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="903.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,032 samples, 6.05%)</title><rect x="901.0" y="771.0" width="71.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="904.0" y="782.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (85 samples, 0.50%)</title><rect x="901.0" y="755.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="904.0" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (85 samples, 0.50%)</title><rect x="901.0" y="739.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="904.0" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (85 samples, 0.50%)</title><rect x="901.0" y="723.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="904.0" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (85 samples, 0.50%)</title><rect x="901.0" y="707.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="904.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (85 samples, 0.50%)</title><rect x="901.0" y="691.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="904.0" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (64 samples, 0.37%)</title><rect x="901.0" y="675.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.0" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (14 samples, 0.08%)</title><rect x="901.0" y="659.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="904.0" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (14 samples, 0.08%)</title><rect x="901.0" y="643.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="904.0" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (14 samples, 0.08%)</title><rect x="901.0" y="627.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.0" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.08%)</title><rect x="901.0" y="611.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="904.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.08%)</title><rect x="901.0" y="595.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="904.0" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.08%)</title><rect x="901.0" y="579.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="904.0" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.08%)</title><rect x="901.0" y="563.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="904.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (14 samples, 0.08%)</title><rect x="901.0" y="547.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="904.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (14 samples, 0.08%)</title><rect x="901.0" y="531.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="904.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (14 samples, 0.08%)</title><rect x="901.0" y="515.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="904.0" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.05%)</title><rect x="901.0" y="499.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="904.0" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.05%)</title><rect x="901.0" y="483.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="904.0" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.03%)</title><rect x="901.6" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="904.6" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.03%)</title><rect x="901.6" y="483.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="904.6" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (50 samples, 0.29%)</title><rect x="902.0" y="659.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="905.0" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (50 samples, 0.29%)</title><rect x="902.0" y="643.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="905.0" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (50 samples, 0.29%)</title><rect x="902.0" y="627.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="905.0" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (50 samples, 0.29%)</title><rect x="902.0" y="611.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="905.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (50 samples, 0.29%)</title><rect x="902.0" y="595.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="905.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (50 samples, 0.29%)</title><rect x="902.0" y="579.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (36 samples, 0.21%)</title><rect x="902.0" y="563.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (36 samples, 0.21%)</title><rect x="902.0" y="547.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="905.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (36 samples, 0.21%)</title><rect x="902.0" y="531.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (36 samples, 0.21%)</title><rect x="902.0" y="515.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="905.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.04%)</title><rect x="902.0" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.0" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="902.0" y="483.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="905.0" y="494.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.04%)</title><rect x="902.0" y="467.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="905.0" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (23 samples, 0.13%)</title><rect x="902.5" y="499.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="905.5" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.13%)</title><rect x="902.5" y="483.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="905.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.02%)</title><rect x="904.2" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="907.2" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.02%)</title><rect x="904.2" y="483.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="907.2" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="904.2" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="907.2" y="478.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.02%)</title><rect x="904.2" y="451.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="907.2" y="462.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.08%)</title><rect x="904.5" y="563.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="907.5" y="574.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.08%)</title><rect x="904.5" y="547.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="907.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (14 samples, 0.08%)</title><rect x="904.5" y="531.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="907.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (14 samples, 0.08%)</title><rect x="904.5" y="515.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="907.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (14 samples, 0.08%)</title><rect x="904.5" y="499.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="907.5" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.04%)</title><rect x="904.5" y="483.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="907.5" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.04%)</title><rect x="904.5" y="467.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="907.5" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.04%)</title><rect x="904.9" y="483.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="907.9" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.04%)</title><rect x="904.9" y="467.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="907.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$85/1965158079.apply (21 samples, 0.12%)</title><rect x="905.5" y="675.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (21 samples, 0.12%)</title><rect x="905.5" y="659.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="908.5" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.05%)</title><rect x="905.5" y="643.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="908.5" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.05%)</title><rect x="905.5" y="627.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="908.5" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (12 samples, 0.07%)</title><rect x="906.1" y="643.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="909.1" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.07%)</title><rect x="906.1" y="627.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="909.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (944 samples, 5.53%)</title><rect x="907.1" y="755.0" width="65.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="910.1" y="766.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (943 samples, 5.52%)</title><rect x="907.2" y="739.0" width="65.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="910.2" y="750.0">ru/mail..</text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.04%)</title><rect x="907.3" y="723.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="910.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (930 samples, 5.45%)</title><rect x="907.8" y="723.0" width="64.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="910.8" y="734.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (143 samples, 0.84%)</title><rect x="907.8" y="707.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="910.8" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (143 samples, 0.84%)</title><rect x="907.8" y="691.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="910.8" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (8 samples, 0.05%)</title><rect x="907.9" y="675.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="910.9" y="686.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (8 samples, 0.05%)</title><rect x="907.9" y="659.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="910.9" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (132 samples, 0.77%)</title><rect x="908.6" y="675.0" width="9.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.6" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (132 samples, 0.77%)</title><rect x="908.6" y="659.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="911.6" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (130 samples, 0.76%)</title><rect x="908.7" y="643.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="911.7" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (130 samples, 0.76%)</title><rect x="908.7" y="627.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="911.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (130 samples, 0.76%)</title><rect x="908.7" y="611.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="911.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (130 samples, 0.76%)</title><rect x="908.7" y="595.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="911.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (95 samples, 0.56%)</title><rect x="908.7" y="579.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (93 samples, 0.54%)</title><rect x="908.9" y="563.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="911.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (93 samples, 0.54%)</title><rect x="908.9" y="547.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="911.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (93 samples, 0.54%)</title><rect x="908.9" y="531.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="911.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (20 samples, 0.12%)</title><rect x="908.9" y="515.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="911.9" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (20 samples, 0.12%)</title><rect x="908.9" y="499.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="911.9" y="510.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.12%)</title><rect x="908.9" y="483.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="911.9" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (50 samples, 0.29%)</title><rect x="910.2" y="515.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="913.2" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (50 samples, 0.29%)</title><rect x="910.2" y="499.0" width="3.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="913.2" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (7 samples, 0.04%)</title><rect x="913.9" y="515.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="916.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (13 samples, 0.08%)</title><rect x="914.4" y="515.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="917.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (13 samples, 0.08%)</title><rect x="914.4" y="499.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="917.4" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.08%)</title><rect x="914.4" y="483.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="917.4" y="494.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.08%)</title><rect x="914.4" y="467.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="917.4" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (35 samples, 0.21%)</title><rect x="915.3" y="579.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="918.3" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (35 samples, 0.21%)</title><rect x="915.3" y="563.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (35 samples, 0.21%)</title><rect x="915.3" y="547.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="918.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (35 samples, 0.21%)</title><rect x="915.3" y="531.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="918.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (35 samples, 0.21%)</title><rect x="915.3" y="515.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (19 samples, 0.11%)</title><rect x="915.3" y="499.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.3" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (19 samples, 0.11%)</title><rect x="915.3" y="483.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="918.3" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.05%)</title><rect x="916.6" y="499.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="919.6" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.05%)</title><rect x="916.6" y="483.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="919.6" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="917.2" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="920.2" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.03%)</title><rect x="917.2" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="920.2" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.03%)</title><rect x="917.2" y="467.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="920.2" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (764 samples, 4.48%)</title><rect x="917.8" y="707.0" width="52.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="920.8" y="718.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (764 samples, 4.48%)</title><rect x="917.8" y="691.0" width="52.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="920.8" y="702.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1546833500.accept (763 samples, 4.47%)</title><rect x="917.9" y="675.0" width="52.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="920.9" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (763 samples, 4.47%)</title><rect x="917.9" y="659.0" width="52.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="920.9" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (763 samples, 4.47%)</title><rect x="917.9" y="643.0" width="52.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="920.9" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (11 samples, 0.06%)</title><rect x="917.9" y="627.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="920.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (752 samples, 4.41%)</title><rect x="918.7" y="627.0" width="52.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="921.7" y="638.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (752 samples, 4.41%)</title><rect x="918.7" y="611.0" width="52.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="921.7" y="622.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (752 samples, 4.41%)</title><rect x="918.7" y="595.0" width="52.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="921.7" y="606.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (452 samples, 2.65%)</title><rect x="918.7" y="579.0" width="31.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.7" y="590.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (217 samples, 1.27%)</title><rect x="918.7" y="563.0" width="15.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="921.7" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (235 samples, 1.38%)</title><rect x="933.7" y="563.0" width="16.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="936.7" y="574.0"></text>
</g>
<g>
<title>byte[] (235 samples, 1.38%)</title><rect x="933.7" y="547.0" width="16.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="936.7" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (201 samples, 1.18%)</title><rect x="949.9" y="579.0" width="13.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="952.9" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (201 samples, 1.18%)</title><rect x="949.9" y="563.0" width="13.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="952.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (99 samples, 0.58%)</title><rect x="963.8" y="579.0" width="6.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="966.8" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (99 samples, 0.58%)</title><rect x="963.8" y="563.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="966.8" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (99 samples, 0.58%)</title><rect x="963.8" y="547.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="966.8" y="558.0"></text>
</g>
<g>
<title>byte[] (99 samples, 0.58%)</title><rect x="963.8" y="531.0" width="6.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="966.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (21 samples, 0.12%)</title><rect x="970.7" y="707.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="973.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (20 samples, 0.12%)</title><rect x="970.7" y="691.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="973.7" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (20 samples, 0.12%)</title><rect x="970.7" y="675.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="973.7" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (7 samples, 0.04%)</title><rect x="970.7" y="659.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="973.7" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (7 samples, 0.04%)</title><rect x="970.7" y="643.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="973.7" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (7 samples, 0.04%)</title><rect x="970.7" y="627.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="973.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.04%)</title><rect x="970.7" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="973.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.04%)</title><rect x="970.7" y="595.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="973.7" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.04%)</title><rect x="970.7" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="973.7" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.04%)</title><rect x="970.7" y="563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="973.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (7 samples, 0.04%)</title><rect x="970.7" y="547.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="973.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (7 samples, 0.04%)</title><rect x="970.7" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="973.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (7 samples, 0.04%)</title><rect x="970.7" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="973.7" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="970.7" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="973.7" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.03%)</title><rect x="970.7" y="483.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="973.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (13 samples, 0.08%)</title><rect x="971.2" y="659.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="974.2" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (13 samples, 0.08%)</title><rect x="971.2" y="643.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="974.2" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (13 samples, 0.08%)</title><rect x="971.2" y="627.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="974.2" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (13 samples, 0.08%)</title><rect x="971.2" y="611.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="974.2" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.08%)</title><rect x="971.2" y="595.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="974.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.08%)</title><rect x="971.2" y="579.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="974.2" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (12 samples, 0.07%)</title><rect x="971.2" y="563.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="974.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (12 samples, 0.07%)</title><rect x="971.2" y="547.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="974.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (12 samples, 0.07%)</title><rect x="971.2" y="531.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="974.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (12 samples, 0.07%)</title><rect x="971.2" y="515.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="974.2" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.03%)</title><rect x="971.4" y="499.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="974.4" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.03%)</title><rect x="971.4" y="483.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="974.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.02%)</title><rect x="971.8" y="499.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="974.8" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.02%)</title><rect x="971.8" y="483.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="974.8" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="971.8" y="467.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="974.8" y="478.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.02%)</title><rect x="971.8" y="451.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="974.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (4 samples, 0.02%)</title><rect x="972.1" y="723.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="975.1" y="734.0"></text>
</g>
<g>
<title>[pool-3-thread-6 tid=117886] (1,038 samples, 6.08%)</title><rect x="972.4" y="883.0" width="71.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="975.4" y="894.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (1,038 samples, 6.08%)</title><rect x="972.4" y="867.0" width="71.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="975.4" y="878.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,038 samples, 6.08%)</title><rect x="972.4" y="851.0" width="71.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="975.4" y="862.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,038 samples, 6.08%)</title><rect x="972.4" y="835.0" width="71.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="975.4" y="846.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.run (1,037 samples, 6.07%)</title><rect x="972.5" y="819.0" width="71.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="975.5" y="830.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (1,037 samples, 6.07%)</title><rect x="972.5" y="803.0" width="71.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="975.5" y="814.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (1,037 samples, 6.07%)</title><rect x="972.5" y="787.0" width="71.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="975.5" y="798.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.04%)</title><rect x="972.5" y="771.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="975.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.04%)</title><rect x="972.5" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="975.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.03%)</title><rect x="972.5" y="739.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="975.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5 samples, 0.03%)</title><rect x="972.5" y="723.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="975.5" y="734.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.03%)</title><rect x="972.5" y="707.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="975.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,028 samples, 6.02%)</title><rect x="973.1" y="771.0" width="71.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="976.1" y="782.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (77 samples, 0.45%)</title><rect x="973.1" y="755.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="976.1" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (77 samples, 0.45%)</title><rect x="973.1" y="739.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="976.1" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (77 samples, 0.45%)</title><rect x="973.1" y="723.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="976.1" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (77 samples, 0.45%)</title><rect x="973.1" y="707.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="976.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (77 samples, 0.45%)</title><rect x="973.1" y="691.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="976.1" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (64 samples, 0.37%)</title><rect x="973.1" y="675.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="976.1" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (20 samples, 0.12%)</title><rect x="973.1" y="659.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="976.1" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (20 samples, 0.12%)</title><rect x="973.1" y="643.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="976.1" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (20 samples, 0.12%)</title><rect x="973.1" y="627.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="976.1" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (20 samples, 0.12%)</title><rect x="973.1" y="611.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="976.1" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (20 samples, 0.12%)</title><rect x="973.1" y="595.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="976.1" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (20 samples, 0.12%)</title><rect x="973.1" y="579.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="976.1" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (20 samples, 0.12%)</title><rect x="973.1" y="563.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="976.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (20 samples, 0.12%)</title><rect x="973.1" y="547.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="976.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (20 samples, 0.12%)</title><rect x="973.1" y="531.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="976.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (20 samples, 0.12%)</title><rect x="973.1" y="515.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="976.1" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.04%)</title><rect x="973.1" y="499.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="976.1" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.04%)</title><rect x="973.1" y="483.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="976.1" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 0.08%)</title><rect x="973.5" y="499.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="976.5" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.08%)</title><rect x="973.5" y="483.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="976.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (44 samples, 0.26%)</title><rect x="974.5" y="659.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="977.5" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (44 samples, 0.26%)</title><rect x="974.5" y="643.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="977.5" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (44 samples, 0.26%)</title><rect x="974.5" y="627.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="977.5" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (44 samples, 0.26%)</title><rect x="974.5" y="611.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="977.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (44 samples, 0.26%)</title><rect x="974.5" y="595.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="977.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (44 samples, 0.26%)</title><rect x="974.5" y="579.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="977.5" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (35 samples, 0.21%)</title><rect x="974.5" y="563.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="977.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (35 samples, 0.21%)</title><rect x="974.5" y="547.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="977.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (35 samples, 0.21%)</title><rect x="974.5" y="531.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="977.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (35 samples, 0.21%)</title><rect x="974.5" y="515.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="977.5" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.05%)</title><rect x="974.5" y="499.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="977.5" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="974.5" y="483.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="977.5" y="494.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.05%)</title><rect x="974.5" y="467.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="977.5" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (18 samples, 0.11%)</title><rect x="975.0" y="499.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="978.0" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (18 samples, 0.11%)</title><rect x="975.0" y="483.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="978.0" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (4 samples, 0.02%)</title><rect x="976.4" y="499.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="979.4" y="510.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.05%)</title><rect x="976.9" y="563.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="979.9" y="574.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.05%)</title><rect x="976.9" y="547.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="979.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (9 samples, 0.05%)</title><rect x="976.9" y="531.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="979.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (9 samples, 0.05%)</title><rect x="976.9" y="515.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="979.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (9 samples, 0.05%)</title><rect x="976.9" y="499.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="979.9" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="976.9" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="979.9" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.03%)</title><rect x="976.9" y="467.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="979.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$85/1965158079.apply (13 samples, 0.08%)</title><rect x="977.5" y="675.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="980.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (13 samples, 0.08%)</title><rect x="977.5" y="659.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="980.5" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="977.5" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="980.5" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.02%)</title><rect x="977.5" y="627.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="980.5" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.05%)</title><rect x="977.8" y="643.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="980.8" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.05%)</title><rect x="977.8" y="627.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="980.8" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (4 samples, 0.02%)</title><rect x="978.4" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="981.4" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (4 samples, 0.02%)</title><rect x="978.4" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="981.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$93/297629458.apply (4 samples, 0.02%)</title><rect x="978.4" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (4 samples, 0.02%)</title><rect x="978.4" y="707.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="981.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (4 samples, 0.02%)</title><rect x="978.4" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (945 samples, 5.54%)</title><rect x="978.8" y="755.0" width="65.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.8" y="766.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (945 samples, 5.54%)</title><rect x="978.8" y="739.0" width="65.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="981.8" y="750.0">ru/mail..</text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.04%)</title><rect x="978.9" y="723.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="981.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (929 samples, 5.44%)</title><rect x="979.6" y="723.0" width="64.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="982.6" y="734.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (129 samples, 0.76%)</title><rect x="979.6" y="707.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="982.6" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (129 samples, 0.76%)</title><rect x="979.6" y="691.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="982.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (7 samples, 0.04%)</title><rect x="979.6" y="675.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="982.6" y="686.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (7 samples, 0.04%)</title><rect x="979.6" y="659.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="982.6" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (120 samples, 0.70%)</title><rect x="980.2" y="675.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="983.2" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (120 samples, 0.70%)</title><rect x="980.2" y="659.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="983.2" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (119 samples, 0.70%)</title><rect x="980.3" y="643.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="983.3" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (119 samples, 0.70%)</title><rect x="980.3" y="627.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="983.3" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (119 samples, 0.70%)</title><rect x="980.3" y="611.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="983.3" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (119 samples, 0.70%)</title><rect x="980.3" y="595.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="983.3" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (95 samples, 0.56%)</title><rect x="980.3" y="579.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="983.3" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (5 samples, 0.03%)</title><rect x="980.3" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="983.3" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (4 samples, 0.02%)</title><rect x="980.3" y="547.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="983.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$65/790482547.apply (4 samples, 0.02%)</title><rect x="980.3" y="531.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="983.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (4 samples, 0.02%)</title><rect x="980.3" y="515.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="983.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (90 samples, 0.53%)</title><rect x="980.6" y="563.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="983.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (90 samples, 0.53%)</title><rect x="980.6" y="547.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="983.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (90 samples, 0.53%)</title><rect x="980.6" y="531.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="983.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (17 samples, 0.10%)</title><rect x="980.6" y="515.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="983.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (17 samples, 0.10%)</title><rect x="980.6" y="499.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="983.6" y="510.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.10%)</title><rect x="980.6" y="483.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="983.6" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (54 samples, 0.32%)</title><rect x="981.8" y="515.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="984.8" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (54 samples, 0.32%)</title><rect x="981.8" y="499.0" width="3.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="984.8" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (10 samples, 0.06%)</title><rect x="985.7" y="515.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="988.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (6 samples, 0.04%)</title><rect x="986.4" y="515.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="989.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.04%)</title><rect x="986.4" y="499.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="989.4" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="986.4" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="989.4" y="494.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.04%)</title><rect x="986.4" y="467.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="989.4" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (24 samples, 0.14%)</title><rect x="986.8" y="579.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="989.8" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (24 samples, 0.14%)</title><rect x="986.8" y="563.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="989.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (24 samples, 0.14%)</title><rect x="986.8" y="547.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="989.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (24 samples, 0.14%)</title><rect x="986.8" y="531.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="989.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (24 samples, 0.14%)</title><rect x="986.8" y="515.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="989.8" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.08%)</title><rect x="986.8" y="499.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="989.8" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.08%)</title><rect x="986.8" y="483.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="989.8" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.05%)</title><rect x="987.7" y="499.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="990.7" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.05%)</title><rect x="987.7" y="483.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="990.7" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (769 samples, 4.50%)</title><rect x="988.5" y="707.0" width="53.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="991.5" y="718.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (769 samples, 4.50%)</title><rect x="988.5" y="691.0" width="53.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="991.5" y="702.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1546833500.accept (766 samples, 4.49%)</title><rect x="988.7" y="675.0" width="53.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="991.7" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (766 samples, 4.49%)</title><rect x="988.7" y="659.0" width="53.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="991.7" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (766 samples, 4.49%)</title><rect x="988.7" y="643.0" width="53.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="991.7" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (12 samples, 0.07%)</title><rect x="988.7" y="627.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="991.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (754 samples, 4.42%)</title><rect x="989.5" y="627.0" width="52.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="992.5" y="638.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (754 samples, 4.42%)</title><rect x="989.5" y="611.0" width="52.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="992.5" y="622.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (754 samples, 4.42%)</title><rect x="989.5" y="595.0" width="52.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="992.5" y="606.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (449 samples, 2.63%)</title><rect x="989.5" y="579.0" width="31.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="992.5" y="590.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (209 samples, 1.22%)</title><rect x="989.5" y="563.0" width="14.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="992.5" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (240 samples, 1.41%)</title><rect x="1004.0" y="563.0" width="16.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1007.0" y="574.0"></text>
</g>
<g>
<title>byte[] (240 samples, 1.41%)</title><rect x="1004.0" y="547.0" width="16.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1007.0" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (215 samples, 1.26%)</title><rect x="1020.6" y="579.0" width="14.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1023.6" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (215 samples, 1.26%)</title><rect x="1020.6" y="563.0" width="14.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1023.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (90 samples, 0.53%)</title><rect x="1035.4" y="579.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1038.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (90 samples, 0.53%)</title><rect x="1035.4" y="563.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1038.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (90 samples, 0.53%)</title><rect x="1035.4" y="547.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1038.4" y="558.0"></text>
</g>
<g>
<title>byte[] (90 samples, 0.53%)</title><rect x="1035.4" y="531.0" width="6.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1038.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (31 samples, 0.18%)</title><rect x="1041.7" y="707.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1044.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (31 samples, 0.18%)</title><rect x="1041.7" y="691.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1044.7" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (31 samples, 0.18%)</title><rect x="1041.7" y="675.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1044.7" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (5 samples, 0.03%)</title><rect x="1041.7" y="659.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1044.7" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (5 samples, 0.03%)</title><rect x="1041.7" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.7" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (5 samples, 0.03%)</title><rect x="1041.7" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1044.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.03%)</title><rect x="1041.7" y="611.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1044.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.03%)</title><rect x="1041.7" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1044.7" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.03%)</title><rect x="1041.7" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.7" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.03%)</title><rect x="1041.7" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1044.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (5 samples, 0.03%)</title><rect x="1041.7" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1044.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (5 samples, 0.03%)</title><rect x="1041.7" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1044.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (5 samples, 0.03%)</title><rect x="1041.7" y="515.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1044.7" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (26 samples, 0.15%)</title><rect x="1042.0" y="659.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1045.0" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (26 samples, 0.15%)</title><rect x="1042.0" y="643.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1045.0" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (26 samples, 0.15%)</title><rect x="1042.0" y="627.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1045.0" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (26 samples, 0.15%)</title><rect x="1042.0" y="611.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1045.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (26 samples, 0.15%)</title><rect x="1042.0" y="595.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1045.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (26 samples, 0.15%)</title><rect x="1042.0" y="579.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1045.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (20 samples, 0.12%)</title><rect x="1042.0" y="563.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1045.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (20 samples, 0.12%)</title><rect x="1042.0" y="547.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1045.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (20 samples, 0.12%)</title><rect x="1042.0" y="531.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1045.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (20 samples, 0.12%)</title><rect x="1042.0" y="515.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1045.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.04%)</title><rect x="1042.0" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1045.0" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="1042.0" y="483.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1045.0" y="494.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.04%)</title><rect x="1042.0" y="467.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1045.0" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 0.08%)</title><rect x="1042.4" y="499.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1045.4" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.08%)</title><rect x="1042.4" y="483.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1045.4" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.04%)</title><rect x="1043.4" y="563.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1046.4" y="574.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.04%)</title><rect x="1043.4" y="547.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1046.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (6 samples, 0.04%)</title><rect x="1043.4" y="531.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1046.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (6 samples, 0.04%)</title><rect x="1043.4" y="515.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1046.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (6 samples, 0.04%)</title><rect x="1043.4" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1046.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (5 samples, 0.03%)</title><rect x="1043.8" y="723.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1046.8" y="734.0"></text>
</g>
<g>
<title>[pool-3-thread-7 tid=117888] (1,057 samples, 6.19%)</title><rect x="1044.1" y="883.0" width="73.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1047.1" y="894.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (1,057 samples, 6.19%)</title><rect x="1044.1" y="867.0" width="73.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1047.1" y="878.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,057 samples, 6.19%)</title><rect x="1044.1" y="851.0" width="73.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1047.1" y="862.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,057 samples, 6.19%)</title><rect x="1044.1" y="835.0" width="73.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1047.1" y="846.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.run (1,057 samples, 6.19%)</title><rect x="1044.1" y="819.0" width="73.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.1" y="830.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (1,057 samples, 6.19%)</title><rect x="1044.1" y="803.0" width="73.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1047.1" y="814.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (1,057 samples, 6.19%)</title><rect x="1044.1" y="787.0" width="73.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1047.1" y="798.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,051 samples, 6.16%)</title><rect x="1044.4" y="771.0" width="72.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1047.4" y="782.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (77 samples, 0.45%)</title><rect x="1044.4" y="755.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1047.4" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (77 samples, 0.45%)</title><rect x="1044.4" y="739.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1047.4" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (77 samples, 0.45%)</title><rect x="1044.4" y="723.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1047.4" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (77 samples, 0.45%)</title><rect x="1044.4" y="707.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1047.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (77 samples, 0.45%)</title><rect x="1044.4" y="691.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.4" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (61 samples, 0.36%)</title><rect x="1044.4" y="675.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1047.4" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (18 samples, 0.11%)</title><rect x="1044.4" y="659.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1047.4" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (18 samples, 0.11%)</title><rect x="1044.4" y="643.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1047.4" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (18 samples, 0.11%)</title><rect x="1044.4" y="627.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1047.4" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (18 samples, 0.11%)</title><rect x="1044.4" y="611.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1047.4" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (18 samples, 0.11%)</title><rect x="1044.4" y="595.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1047.4" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (18 samples, 0.11%)</title><rect x="1044.4" y="579.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1047.4" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (18 samples, 0.11%)</title><rect x="1044.4" y="563.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1047.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (18 samples, 0.11%)</title><rect x="1044.4" y="547.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1047.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (18 samples, 0.11%)</title><rect x="1044.4" y="531.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1047.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (18 samples, 0.11%)</title><rect x="1044.4" y="515.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1047.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.05%)</title><rect x="1044.4" y="499.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1047.4" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.05%)</title><rect x="1044.4" y="483.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1047.4" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.05%)</title><rect x="1045.0" y="499.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1048.0" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.05%)</title><rect x="1045.0" y="483.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1048.0" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (43 samples, 0.25%)</title><rect x="1045.7" y="659.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1048.7" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (43 samples, 0.25%)</title><rect x="1045.7" y="643.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1048.7" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (43 samples, 0.25%)</title><rect x="1045.7" y="627.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1048.7" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (43 samples, 0.25%)</title><rect x="1045.7" y="611.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (43 samples, 0.25%)</title><rect x="1045.7" y="595.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1048.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (43 samples, 0.25%)</title><rect x="1045.7" y="579.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1048.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (29 samples, 0.17%)</title><rect x="1045.7" y="563.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (29 samples, 0.17%)</title><rect x="1045.7" y="547.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1048.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (29 samples, 0.17%)</title><rect x="1045.7" y="531.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1048.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (29 samples, 0.17%)</title><rect x="1045.7" y="515.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (9 samples, 0.05%)</title><rect x="1045.7" y="499.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1048.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.05%)</title><rect x="1045.7" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1048.7" y="494.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.05%)</title><rect x="1045.7" y="467.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1048.7" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (16 samples, 0.09%)</title><rect x="1046.3" y="499.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1049.3" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.09%)</title><rect x="1046.3" y="483.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1049.3" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.08%)</title><rect x="1047.7" y="563.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1050.7" y="574.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.08%)</title><rect x="1047.7" y="547.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1050.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (14 samples, 0.08%)</title><rect x="1047.7" y="531.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1050.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (14 samples, 0.08%)</title><rect x="1047.7" y="515.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1050.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (14 samples, 0.08%)</title><rect x="1047.7" y="499.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1050.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="1047.7" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1050.7" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.03%)</title><rect x="1047.7" y="467.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1050.7" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.05%)</title><rect x="1048.0" y="483.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1051.0" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.05%)</title><rect x="1048.0" y="467.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1051.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$85/1965158079.apply (16 samples, 0.09%)</title><rect x="1048.6" y="675.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1051.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (16 samples, 0.09%)</title><rect x="1048.6" y="659.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.6" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.05%)</title><rect x="1048.6" y="643.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1051.6" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.05%)</title><rect x="1048.6" y="627.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1051.6" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.05%)</title><rect x="1049.2" y="643.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1052.2" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.05%)</title><rect x="1049.2" y="627.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1052.2" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (4 samples, 0.02%)</title><rect x="1049.7" y="755.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1052.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (4 samples, 0.02%)</title><rect x="1049.7" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1052.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$93/297629458.apply (4 samples, 0.02%)</title><rect x="1049.7" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1052.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (4 samples, 0.02%)</title><rect x="1049.7" y="707.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1052.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (968 samples, 5.67%)</title><rect x="1050.2" y="755.0" width="66.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1053.2" y="766.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (966 samples, 5.66%)</title><rect x="1050.3" y="739.0" width="66.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1053.3" y="750.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (957 samples, 5.61%)</title><rect x="1050.5" y="723.0" width="66.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1053.5" y="734.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (193 samples, 1.13%)</title><rect x="1050.5" y="707.0" width="13.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1053.5" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (192 samples, 1.12%)</title><rect x="1050.6" y="691.0" width="13.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1053.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (14 samples, 0.08%)</title><rect x="1050.6" y="675.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1053.6" y="686.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (14 samples, 0.08%)</title><rect x="1050.6" y="659.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1053.6" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (176 samples, 1.03%)</title><rect x="1051.7" y="675.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1054.7" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (176 samples, 1.03%)</title><rect x="1051.7" y="659.0" width="12.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1054.7" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (5 samples, 0.03%)</title><rect x="1051.7" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1054.7" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.03%)</title><rect x="1051.7" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1054.7" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.03%)</title><rect x="1051.7" y="611.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1054.7" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (171 samples, 1.00%)</title><rect x="1052.0" y="643.0" width="11.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1055.0" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (171 samples, 1.00%)</title><rect x="1052.0" y="627.0" width="11.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1055.0" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (171 samples, 1.00%)</title><rect x="1052.0" y="611.0" width="11.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1055.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (171 samples, 1.00%)</title><rect x="1052.0" y="595.0" width="11.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1055.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (140 samples, 0.82%)</title><rect x="1052.0" y="579.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1055.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (7 samples, 0.04%)</title><rect x="1052.0" y="563.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1055.0" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (6 samples, 0.04%)</title><rect x="1052.0" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1055.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$65/790482547.apply (6 samples, 0.04%)</title><rect x="1052.0" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1055.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (6 samples, 0.04%)</title><rect x="1052.0" y="515.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1055.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (133 samples, 0.78%)</title><rect x="1052.5" y="563.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1055.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (133 samples, 0.78%)</title><rect x="1052.5" y="547.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1055.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (133 samples, 0.78%)</title><rect x="1052.5" y="531.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (37 samples, 0.22%)</title><rect x="1052.5" y="515.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1055.5" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (37 samples, 0.22%)</title><rect x="1052.5" y="499.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1055.5" y="510.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.22%)</title><rect x="1052.5" y="483.0" width="2.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1055.5" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (64 samples, 0.37%)</title><rect x="1055.1" y="515.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1058.1" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (64 samples, 0.37%)</title><rect x="1055.1" y="499.0" width="4.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1058.1" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (10 samples, 0.06%)</title><rect x="1059.5" y="515.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1062.5" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (10 samples, 0.06%)</title><rect x="1060.2" y="515.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1063.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (12 samples, 0.07%)</title><rect x="1060.9" y="515.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1063.9" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (12 samples, 0.07%)</title><rect x="1060.9" y="499.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1063.9" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.07%)</title><rect x="1060.9" y="483.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1063.9" y="494.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.07%)</title><rect x="1060.9" y="467.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1063.9" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (31 samples, 0.18%)</title><rect x="1061.7" y="579.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.7" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (31 samples, 0.18%)</title><rect x="1061.7" y="563.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1064.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (31 samples, 0.18%)</title><rect x="1061.7" y="547.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (31 samples, 0.18%)</title><rect x="1061.7" y="531.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1064.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (31 samples, 0.18%)</title><rect x="1061.7" y="515.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1064.7" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.05%)</title><rect x="1061.7" y="499.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.7" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.05%)</title><rect x="1061.7" y="483.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1064.7" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.08%)</title><rect x="1062.3" y="499.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1065.3" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.08%)</title><rect x="1062.3" y="483.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1065.3" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.04%)</title><rect x="1063.3" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1066.3" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.04%)</title><rect x="1063.3" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1066.3" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.04%)</title><rect x="1063.3" y="467.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1066.3" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (731 samples, 4.28%)</title><rect x="1063.8" y="707.0" width="50.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1066.8" y="718.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (731 samples, 4.28%)</title><rect x="1063.8" y="691.0" width="50.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1066.8" y="702.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1546833500.accept (730 samples, 4.28%)</title><rect x="1063.9" y="675.0" width="50.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.9" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (730 samples, 4.28%)</title><rect x="1063.9" y="659.0" width="50.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1066.9" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (730 samples, 4.28%)</title><rect x="1063.9" y="643.0" width="50.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1066.9" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (6 samples, 0.04%)</title><rect x="1063.9" y="627.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1066.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (724 samples, 4.24%)</title><rect x="1064.3" y="627.0" width="50.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1067.3" y="638.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (724 samples, 4.24%)</title><rect x="1064.3" y="611.0" width="50.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1067.3" y="622.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (724 samples, 4.24%)</title><rect x="1064.3" y="595.0" width="50.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1067.3" y="606.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (428 samples, 2.51%)</title><rect x="1064.3" y="579.0" width="29.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1067.3" y="590.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (204 samples, 1.20%)</title><rect x="1064.3" y="563.0" width="14.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1067.3" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (224 samples, 1.31%)</title><rect x="1078.4" y="563.0" width="15.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1081.4" y="574.0"></text>
</g>
<g>
<title>byte[] (224 samples, 1.31%)</title><rect x="1078.4" y="547.0" width="15.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1081.4" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (197 samples, 1.15%)</title><rect x="1093.9" y="579.0" width="13.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1096.9" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (197 samples, 1.15%)</title><rect x="1093.9" y="563.0" width="13.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1096.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (99 samples, 0.58%)</title><rect x="1107.5" y="579.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1110.5" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (99 samples, 0.58%)</title><rect x="1107.5" y="563.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1110.5" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (99 samples, 0.58%)</title><rect x="1107.5" y="547.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1110.5" y="558.0"></text>
</g>
<g>
<title>byte[] (99 samples, 0.58%)</title><rect x="1107.5" y="531.0" width="6.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1110.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (33 samples, 0.19%)</title><rect x="1114.4" y="707.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1117.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (32 samples, 0.19%)</title><rect x="1114.4" y="691.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1117.4" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (32 samples, 0.19%)</title><rect x="1114.4" y="675.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1117.4" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (10 samples, 0.06%)</title><rect x="1114.4" y="659.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1117.4" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (10 samples, 0.06%)</title><rect x="1114.4" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1117.4" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (10 samples, 0.06%)</title><rect x="1114.4" y="627.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.4" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.06%)</title><rect x="1114.4" y="611.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1117.4" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.06%)</title><rect x="1114.4" y="595.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1117.4" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (10 samples, 0.06%)</title><rect x="1114.4" y="579.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1117.4" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (10 samples, 0.06%)</title><rect x="1114.4" y="563.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1117.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (10 samples, 0.06%)</title><rect x="1114.4" y="547.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1117.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (10 samples, 0.06%)</title><rect x="1114.4" y="531.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1117.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (10 samples, 0.06%)</title><rect x="1114.4" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1117.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.04%)</title><rect x="1114.4" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1117.4" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.04%)</title><rect x="1114.4" y="483.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1117.4" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.02%)</title><rect x="1114.9" y="499.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.9" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.02%)</title><rect x="1114.9" y="483.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1117.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (22 samples, 0.13%)</title><rect x="1115.1" y="659.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.1" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (22 samples, 0.13%)</title><rect x="1115.1" y="643.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1118.1" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (22 samples, 0.13%)</title><rect x="1115.1" y="627.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1118.1" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (22 samples, 0.13%)</title><rect x="1115.1" y="611.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1118.1" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (22 samples, 0.13%)</title><rect x="1115.1" y="595.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1118.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (22 samples, 0.13%)</title><rect x="1115.1" y="579.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1118.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (18 samples, 0.11%)</title><rect x="1115.1" y="563.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1118.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (18 samples, 0.11%)</title><rect x="1115.1" y="547.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1118.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (18 samples, 0.11%)</title><rect x="1115.1" y="531.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1118.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (18 samples, 0.11%)</title><rect x="1115.1" y="515.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1118.1" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.02%)</title><rect x="1115.1" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1118.1" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1115.1" y="483.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1118.1" y="494.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.02%)</title><rect x="1115.1" y="467.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1118.1" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.06%)</title><rect x="1115.4" y="499.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1118.4" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.06%)</title><rect x="1115.4" y="483.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1118.4" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.02%)</title><rect x="1116.4" y="563.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1119.4" y="574.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.02%)</title><rect x="1116.4" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1119.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.02%)</title><rect x="1116.4" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1119.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.02%)</title><rect x="1116.4" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (4 samples, 0.02%)</title><rect x="1116.4" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (6 samples, 0.04%)</title><rect x="1116.7" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.02%)</title><rect x="1116.8" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1119.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.02%)</title><rect x="1116.8" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1119.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.02%)</title><rect x="1116.8" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1119.8" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (4 samples, 0.02%)</title><rect x="1116.8" y="659.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1119.8" y="670.0"></text>
</g>
<g>
<title>[pool-3-thread-8 tid=117891] (1,053 samples, 6.17%)</title><rect x="1117.2" y="883.0" width="72.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1120.2" y="894.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (1,053 samples, 6.17%)</title><rect x="1117.2" y="867.0" width="72.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1120.2" y="878.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,053 samples, 6.17%)</title><rect x="1117.2" y="851.0" width="72.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1120.2" y="862.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,053 samples, 6.17%)</title><rect x="1117.2" y="835.0" width="72.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1120.2" y="846.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/383456721.run (1,052 samples, 6.16%)</title><rect x="1117.3" y="819.0" width="72.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1120.3" y="830.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (1,052 samples, 6.16%)</title><rect x="1117.3" y="803.0" width="72.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1120.3" y="814.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (1,052 samples, 6.16%)</title><rect x="1117.3" y="787.0" width="72.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1120.3" y="798.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.03%)</title><rect x="1117.3" y="771.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.03%)</title><rect x="1117.3" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1120.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.02%)</title><rect x="1117.3" y="739.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1120.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1117.3" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1120.3" y="734.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.02%)</title><rect x="1117.3" y="707.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1120.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,045 samples, 6.12%)</title><rect x="1117.8" y="771.0" width="72.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1120.8" y="782.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (81 samples, 0.47%)</title><rect x="1117.8" y="755.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1120.8" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (81 samples, 0.47%)</title><rect x="1117.8" y="739.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1120.8" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (81 samples, 0.47%)</title><rect x="1117.8" y="723.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1120.8" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (81 samples, 0.47%)</title><rect x="1117.8" y="707.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1120.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (81 samples, 0.47%)</title><rect x="1117.8" y="691.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1120.8" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (68 samples, 0.40%)</title><rect x="1117.8" y="675.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1120.8" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (19 samples, 0.11%)</title><rect x="1117.8" y="659.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.8" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (19 samples, 0.11%)</title><rect x="1117.8" y="643.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1120.8" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (19 samples, 0.11%)</title><rect x="1117.8" y="627.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.8" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (19 samples, 0.11%)</title><rect x="1117.8" y="611.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1120.8" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (19 samples, 0.11%)</title><rect x="1117.8" y="595.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1120.8" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (19 samples, 0.11%)</title><rect x="1117.8" y="579.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1120.8" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (19 samples, 0.11%)</title><rect x="1117.8" y="563.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1120.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (19 samples, 0.11%)</title><rect x="1117.8" y="547.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1120.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (19 samples, 0.11%)</title><rect x="1117.8" y="531.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1120.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (19 samples, 0.11%)</title><rect x="1117.8" y="515.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1120.8" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.05%)</title><rect x="1117.8" y="499.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1120.8" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.05%)</title><rect x="1117.8" y="483.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1120.8" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 0.06%)</title><rect x="1118.4" y="499.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1121.4" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.06%)</title><rect x="1118.4" y="483.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1121.4" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (49 samples, 0.29%)</title><rect x="1119.1" y="659.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1122.1" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (49 samples, 0.29%)</title><rect x="1119.1" y="643.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.1" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (49 samples, 0.29%)</title><rect x="1119.1" y="627.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1122.1" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (49 samples, 0.29%)</title><rect x="1119.1" y="611.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1122.1" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (49 samples, 0.29%)</title><rect x="1119.1" y="595.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1122.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (49 samples, 0.29%)</title><rect x="1119.1" y="579.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1122.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (37 samples, 0.22%)</title><rect x="1119.1" y="563.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1122.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (37 samples, 0.22%)</title><rect x="1119.1" y="547.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1122.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (37 samples, 0.22%)</title><rect x="1119.1" y="531.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1122.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (37 samples, 0.22%)</title><rect x="1119.1" y="515.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1122.1" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.05%)</title><rect x="1119.1" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1122.1" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="1119.1" y="483.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1122.1" y="494.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.05%)</title><rect x="1119.1" y="467.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1122.1" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (23 samples, 0.13%)</title><rect x="1119.6" y="499.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1122.6" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.13%)</title><rect x="1119.6" y="483.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1122.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.02%)</title><rect x="1121.4" y="499.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1124.4" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.02%)</title><rect x="1121.4" y="483.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1124.4" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1121.4" y="467.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1124.4" y="478.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.02%)</title><rect x="1121.4" y="451.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1124.4" y="462.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (12 samples, 0.07%)</title><rect x="1121.6" y="563.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1124.6" y="574.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (12 samples, 0.07%)</title><rect x="1121.6" y="547.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1124.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (12 samples, 0.07%)</title><rect x="1121.6" y="531.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1124.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (12 samples, 0.07%)</title><rect x="1121.6" y="515.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1124.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (12 samples, 0.07%)</title><rect x="1121.6" y="499.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1124.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.05%)</title><rect x="1121.8" y="483.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1124.8" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.05%)</title><rect x="1121.8" y="467.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1124.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$85/1965158079.apply (13 samples, 0.08%)</title><rect x="1122.5" y="675.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1125.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (13 samples, 0.08%)</title><rect x="1122.5" y="659.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1125.5" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.05%)</title><rect x="1122.5" y="643.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1125.5" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.05%)</title><rect x="1122.5" y="627.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1125.5" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.03%)</title><rect x="1123.0" y="643.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1126.0" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.03%)</title><rect x="1123.0" y="627.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1126.0" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (6 samples, 0.04%)</title><rect x="1123.4" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1126.4" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (6 samples, 0.04%)</title><rect x="1123.4" y="739.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1126.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$93/297629458.apply (6 samples, 0.04%)</title><rect x="1123.4" y="723.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1126.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (6 samples, 0.04%)</title><rect x="1123.4" y="707.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1126.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (5 samples, 0.03%)</title><rect x="1123.4" y="691.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1126.4" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="1123.4" y="675.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1126.4" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.02%)</title><rect x="1123.4" y="659.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1126.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (958 samples, 5.61%)</title><rect x="1123.8" y="755.0" width="66.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1126.8" y="766.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (957 samples, 5.61%)</title><rect x="1123.8" y="739.0" width="66.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1126.8" y="750.0">ru/mail..</text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.03%)</title><rect x="1123.9" y="723.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1126.9" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1124.3" y="723.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1127.3" y="734.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.02%)</title><rect x="1124.3" y="707.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1127.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (944 samples, 5.53%)</title><rect x="1124.5" y="723.0" width="65.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1127.5" y="734.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (140 samples, 0.82%)</title><rect x="1124.5" y="707.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1127.5" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (138 samples, 0.81%)</title><rect x="1124.7" y="691.0" width="9.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1127.7" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (132 samples, 0.77%)</title><rect x="1125.1" y="675.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1128.1" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (132 samples, 0.77%)</title><rect x="1125.1" y="659.0" width="9.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1128.1" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (4 samples, 0.02%)</title><rect x="1125.1" y="643.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1128.1" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.02%)</title><rect x="1125.1" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1128.1" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.02%)</title><rect x="1125.1" y="611.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1128.1" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (128 samples, 0.75%)</title><rect x="1125.4" y="643.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1128.4" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (128 samples, 0.75%)</title><rect x="1125.4" y="627.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1128.4" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (128 samples, 0.75%)</title><rect x="1125.4" y="611.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1128.4" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (128 samples, 0.75%)</title><rect x="1125.4" y="595.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1128.4" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (96 samples, 0.56%)</title><rect x="1125.4" y="579.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1128.4" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (5 samples, 0.03%)</title><rect x="1125.4" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1128.4" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (4 samples, 0.02%)</title><rect x="1125.4" y="547.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1128.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$65/790482547.apply (4 samples, 0.02%)</title><rect x="1125.4" y="531.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1128.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (4 samples, 0.02%)</title><rect x="1125.4" y="515.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1128.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (91 samples, 0.53%)</title><rect x="1125.7" y="563.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1128.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (91 samples, 0.53%)</title><rect x="1125.7" y="547.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1128.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (91 samples, 0.53%)</title><rect x="1125.7" y="531.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1128.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (12 samples, 0.07%)</title><rect x="1125.7" y="515.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1128.7" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.07%)</title><rect x="1125.7" y="499.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1128.7" y="510.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.07%)</title><rect x="1125.7" y="483.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1128.7" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (54 samples, 0.32%)</title><rect x="1126.5" y="515.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1129.5" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (54 samples, 0.32%)</title><rect x="1126.5" y="499.0" width="3.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1129.5" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (8 samples, 0.05%)</title><rect x="1130.3" y="515.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1133.3" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (6 samples, 0.04%)</title><rect x="1130.8" y="515.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1133.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (11 samples, 0.06%)</title><rect x="1131.2" y="515.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1134.2" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (11 samples, 0.06%)</title><rect x="1131.2" y="499.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1134.2" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.06%)</title><rect x="1131.2" y="483.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1134.2" y="494.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.06%)</title><rect x="1131.2" y="467.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1134.2" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (32 samples, 0.19%)</title><rect x="1132.0" y="579.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1135.0" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (32 samples, 0.19%)</title><rect x="1132.0" y="563.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1135.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (32 samples, 0.19%)</title><rect x="1132.0" y="547.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1135.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (32 samples, 0.19%)</title><rect x="1132.0" y="531.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1135.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (32 samples, 0.19%)</title><rect x="1132.0" y="515.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1135.0" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.08%)</title><rect x="1132.0" y="499.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1135.0" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.08%)</title><rect x="1132.0" y="483.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1135.0" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.06%)</title><rect x="1132.9" y="499.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1135.9" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.06%)</title><rect x="1132.9" y="483.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1135.9" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.04%)</title><rect x="1133.7" y="499.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1136.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.04%)</title><rect x="1133.7" y="483.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1136.7" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.04%)</title><rect x="1133.7" y="467.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1136.7" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (778 samples, 4.56%)</title><rect x="1134.3" y="707.0" width="53.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1137.3" y="718.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (778 samples, 4.56%)</title><rect x="1134.3" y="691.0" width="53.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1137.3" y="702.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1546833500.accept (778 samples, 4.56%)</title><rect x="1134.3" y="675.0" width="53.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1137.3" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (778 samples, 4.56%)</title><rect x="1134.3" y="659.0" width="53.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1137.3" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (778 samples, 4.56%)</title><rect x="1134.3" y="643.0" width="53.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1137.3" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (8 samples, 0.05%)</title><rect x="1134.3" y="627.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1137.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (770 samples, 4.51%)</title><rect x="1134.8" y="627.0" width="53.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.8" y="638.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (770 samples, 4.51%)</title><rect x="1134.8" y="611.0" width="53.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1137.8" y="622.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (770 samples, 4.51%)</title><rect x="1134.8" y="595.0" width="53.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1137.8" y="606.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (458 samples, 2.68%)</title><rect x="1134.8" y="579.0" width="31.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1137.8" y="590.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (207 samples, 1.21%)</title><rect x="1134.8" y="563.0" width="14.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1137.8" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (251 samples, 1.47%)</title><rect x="1149.1" y="563.0" width="17.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1152.1" y="574.0"></text>
</g>
<g>
<title>byte[] (251 samples, 1.47%)</title><rect x="1149.1" y="547.0" width="17.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1152.1" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (206 samples, 1.21%)</title><rect x="1166.5" y="579.0" width="14.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1169.5" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (206 samples, 1.21%)</title><rect x="1166.5" y="563.0" width="14.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1169.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (106 samples, 0.62%)</title><rect x="1180.7" y="579.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1183.7" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (106 samples, 0.62%)</title><rect x="1180.7" y="563.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1183.7" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (106 samples, 0.62%)</title><rect x="1180.7" y="547.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1183.7" y="558.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.62%)</title><rect x="1180.7" y="531.0" width="7.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1183.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (25 samples, 0.15%)</title><rect x="1188.1" y="707.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1191.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (23 samples, 0.13%)</title><rect x="1188.2" y="691.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1191.2" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (23 samples, 0.13%)</title><rect x="1188.2" y="675.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1191.2" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (8 samples, 0.05%)</title><rect x="1188.2" y="659.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1191.2" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (8 samples, 0.05%)</title><rect x="1188.2" y="643.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1191.2" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (8 samples, 0.05%)</title><rect x="1188.2" y="627.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1191.2" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="1188.2" y="611.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1191.2" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="1188.2" y="595.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.2" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (8 samples, 0.05%)</title><rect x="1188.2" y="579.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1191.2" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (8 samples, 0.05%)</title><rect x="1188.2" y="563.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (8 samples, 0.05%)</title><rect x="1188.2" y="547.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (8 samples, 0.05%)</title><rect x="1188.2" y="531.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (8 samples, 0.05%)</title><rect x="1188.2" y="515.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.2" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.05%)</title><rect x="1188.2" y="499.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.2" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.05%)</title><rect x="1188.2" y="483.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1191.2" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (15 samples, 0.09%)</title><rect x="1188.8" y="659.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.8" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (15 samples, 0.09%)</title><rect x="1188.8" y="643.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1191.8" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (15 samples, 0.09%)</title><rect x="1188.8" y="627.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.8" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (15 samples, 0.09%)</title><rect x="1188.8" y="611.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1191.8" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.09%)</title><rect x="1188.8" y="595.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1191.8" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.09%)</title><rect x="1188.8" y="579.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (11 samples, 0.06%)</title><rect x="1188.8" y="563.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.06%)</title><rect x="1188.8" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.06%)</title><rect x="1188.8" y="531.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1191.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (11 samples, 0.06%)</title><rect x="1188.8" y="515.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1191.8" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.02%)</title><rect x="1189.0" y="499.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1192.0" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.02%)</title><rect x="1189.0" y="483.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1192.0" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.02%)</title><rect x="1189.5" y="563.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1192.5" y="574.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.02%)</title><rect x="1189.5" y="547.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1192.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.02%)</title><rect x="1189.5" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1192.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.02%)</title><rect x="1189.5" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1192.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (4 samples, 0.02%)</title><rect x="1189.5" y="499.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1192.5" y="510.0"></text>
</g>
</g>
</svg>
