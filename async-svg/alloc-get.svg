<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (63,989 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (29,236 samples, 45.69%)</title><rect x="10.0" y="691.0" width="539.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (29,236 samples, 45.69%)</title><rect x="10.0" y="675.0" width="539.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (29,236 samples, 45.69%)</title><rect x="10.0" y="659.0" width="539.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (27,022 samples, 42.23%)</title><rect x="10.0" y="643.0" width="498.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,882 samples, 2.94%)</title><rect x="10.0" y="627.0" width="34.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="638.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,799 samples, 2.81%)</title><rect x="10.0" y="611.0" width="33.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="622.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$161/701954098.apply (1,790 samples, 2.80%)</title><rect x="10.2" y="595.0" width="33.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.2" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (1,790 samples, 2.80%)</title><rect x="10.2" y="579.0" width="33.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.2" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (1,790 samples, 2.80%)</title><rect x="10.2" y="563.0" width="33.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.2" y="574.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (18 samples, 0.03%)</title><rect x="10.4" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (18 samples, 0.03%)</title><rect x="10.4" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (40 samples, 0.06%)</title><rect x="10.7" y="547.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (40 samples, 0.06%)</title><rect x="10.7" y="531.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (26 samples, 0.04%)</title><rect x="10.7" y="515.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="13.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.02%)</title><rect x="11.2" y="515.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.02%)</title><rect x="11.2" y="499.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.02%)</title><rect x="11.2" y="483.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="14.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (1,633 samples, 2.55%)</title><rect x="11.4" y="547.0" width="30.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.4" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (1,633 samples, 2.55%)</title><rect x="11.4" y="531.0" width="30.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.4" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (1,633 samples, 2.55%)</title><rect x="11.4" y="515.0" width="30.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.4" y="526.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.03%)</title><rect x="11.4" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.03%)</title><rect x="11.4" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,130 samples, 1.77%)</title><rect x="11.7" y="499.0" width="20.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,130 samples, 1.77%)</title><rect x="11.7" y="483.0" width="20.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,116 samples, 1.74%)</title><rect x="11.7" y="467.0" width="20.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="14.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$280/1794368300.apply (1,116 samples, 1.74%)</title><rect x="11.7" y="451.0" width="20.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="14.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (1,116 samples, 1.74%)</title><rect x="11.7" y="435.0" width="20.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,116 samples, 1.74%)</title><rect x="11.7" y="419.0" width="20.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$204/1335605778.apply (1,116 samples, 1.74%)</title><rect x="11.7" y="403.0" width="20.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1,116 samples, 1.74%)</title><rect x="11.7" y="387.0" width="20.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="14.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (25 samples, 0.04%)</title><rect x="11.9" y="371.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (25 samples, 0.04%)</title><rect x="11.9" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (24 samples, 0.04%)</title><rect x="12.3" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="15.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (24 samples, 0.04%)</title><rect x="12.3" y="355.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.3" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (15 samples, 0.02%)</title><rect x="12.3" y="339.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="15.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1,060 samples, 1.66%)</title><rect x="12.8" y="371.0" width="19.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="15.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.02%)</title><rect x="12.8" y="355.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.02%)</title><rect x="12.8" y="339.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (857 samples, 1.34%)</title><rect x="13.0" y="355.0" width="15.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (857 samples, 1.34%)</title><rect x="13.0" y="339.0" width="15.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$308/596850472.apply (827 samples, 1.29%)</title><rect x="13.2" y="323.0" width="15.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (827 samples, 1.29%)</title><rect x="13.2" y="307.0" width="15.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (33 samples, 0.05%)</title><rect x="13.4" y="291.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="16.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (33 samples, 0.05%)</title><rect x="13.4" y="275.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.4" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (21 samples, 0.03%)</title><rect x="13.4" y="259.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="16.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (15 samples, 0.02%)</title><rect x="14.2" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (21 samples, 0.03%)</title><rect x="14.5" y="291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (21 samples, 0.03%)</title><rect x="14.5" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (15 samples, 0.02%)</title><rect x="14.6" y="259.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (15 samples, 0.02%)</title><rect x="14.6" y="243.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (740 samples, 1.16%)</title><rect x="14.8" y="291.0" width="13.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.8" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (50 samples, 0.08%)</title><rect x="15.0" y="275.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (50 samples, 0.08%)</title><rect x="15.0" y="259.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.0" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (50 samples, 0.08%)</title><rect x="15.0" y="243.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.0" y="254.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.08%)</title><rect x="15.0" y="227.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="18.0" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (26 samples, 0.04%)</title><rect x="16.0" y="275.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.0" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (26 samples, 0.04%)</title><rect x="16.0" y="259.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.0" y="270.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.04%)</title><rect x="16.0" y="243.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="19.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (63 samples, 0.10%)</title><rect x="16.4" y="275.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.4" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (63 samples, 0.10%)</title><rect x="16.4" y="259.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.4" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (53 samples, 0.08%)</title><rect x="16.6" y="243.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.6" y="254.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.08%)</title><rect x="16.6" y="227.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="19.6" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.03%)</title><rect x="17.6" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.03%)</title><rect x="17.6" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.6" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.03%)</title><rect x="17.6" y="243.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="20.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (455 samples, 0.71%)</title><rect x="18.1" y="275.0" width="8.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (230 samples, 0.36%)</title><rect x="18.2" y="259.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (147 samples, 0.23%)</title><rect x="18.2" y="243.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.2" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (147 samples, 0.23%)</title><rect x="18.2" y="227.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.2" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (147 samples, 0.23%)</title><rect x="18.2" y="211.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.2" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (147 samples, 0.23%)</title><rect x="18.2" y="195.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="21.2" y="206.0"></text>
</g>
<g>
<title>byte[] (147 samples, 0.23%)</title><rect x="18.2" y="179.0" width="2.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="21.2" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (16 samples, 0.03%)</title><rect x="20.9" y="243.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.9" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (16 samples, 0.03%)</title><rect x="20.9" y="227.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (16 samples, 0.03%)</title><rect x="20.9" y="211.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.9" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (16 samples, 0.03%)</title><rect x="20.9" y="195.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="23.9" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (18 samples, 0.03%)</title><rect x="21.2" y="243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.2" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$350/198188022.test (49 samples, 0.08%)</title><rect x="21.5" y="243.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.5" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (49 samples, 0.08%)</title><rect x="21.5" y="227.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="24.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$86/1605851606.test (49 samples, 0.08%)</title><rect x="21.5" y="211.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (49 samples, 0.08%)</title><rect x="21.5" y="195.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.5" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$75/253601149.test (49 samples, 0.08%)</title><rect x="21.5" y="179.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="24.5" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (49 samples, 0.08%)</title><rect x="21.5" y="163.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$74/403170294.test (49 samples, 0.08%)</title><rect x="21.5" y="147.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="24.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (49 samples, 0.08%)</title><rect x="21.5" y="131.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (49 samples, 0.08%)</title><rect x="21.5" y="115.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (49 samples, 0.08%)</title><rect x="21.5" y="99.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="24.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.03%)</title><rect x="21.5" y="83.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="24.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (31 samples, 0.05%)</title><rect x="21.9" y="83.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.9" y="94.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.05%)</title><rect x="21.9" y="67.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="24.9" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (221 samples, 0.35%)</title><rect x="22.4" y="259.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.4" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (221 samples, 0.35%)</title><rect x="22.4" y="243.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.4" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (221 samples, 0.35%)</title><rect x="22.4" y="227.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.02%)</title><rect x="23.0" y="211.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.02%)</title><rect x="23.0" y="195.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.0" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.get$Lambda (14 samples, 0.02%)</title><rect x="23.0" y="179.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.0" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$131 (14 samples, 0.02%)</title><rect x="23.0" y="163.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="26.0" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (154 samples, 0.24%)</title><rect x="23.4" y="211.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.4" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.accept (154 samples, 0.24%)</title><rect x="23.4" y="195.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.4" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (154 samples, 0.24%)</title><rect x="23.4" y="179.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.05%)</title><rect x="23.4" y="163.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.05%)</title><rect x="23.4" y="147.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.4" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1026326437.get$Lambda (30 samples, 0.05%)</title><rect x="23.4" y="131.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="26.4" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$141 (30 samples, 0.05%)</title><rect x="23.4" y="115.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="26.4" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (22 samples, 0.03%)</title><rect x="24.0" y="163.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.0" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1026326437.accept (22 samples, 0.03%)</title><rect x="24.0" y="147.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.0" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (22 samples, 0.03%)</title><rect x="24.0" y="131.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.0" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (22 samples, 0.03%)</title><rect x="24.0" y="115.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="27.0" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (22 samples, 0.03%)</title><rect x="24.0" y="99.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="27.0" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (22 samples, 0.03%)</title><rect x="24.0" y="83.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.0" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (22 samples, 0.03%)</title><rect x="24.0" y="67.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.0" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.03%)</title><rect x="24.0" y="51.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.0" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.03%)</title><rect x="24.0" y="35.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="27.0" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (56 samples, 0.09%)</title><rect x="24.4" y="163.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.4" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (56 samples, 0.09%)</title><rect x="24.4" y="147.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="27.4" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (24 samples, 0.04%)</title><rect x="24.4" y="131.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="27.4" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (24 samples, 0.04%)</title><rect x="24.4" y="115.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.4" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (24 samples, 0.04%)</title><rect x="24.4" y="99.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="27.4" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (32 samples, 0.05%)</title><rect x="24.8" y="131.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.8" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (32 samples, 0.05%)</title><rect x="24.8" y="115.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="27.8" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (46 samples, 0.07%)</title><rect x="25.4" y="163.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="28.4" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (46 samples, 0.07%)</title><rect x="25.4" y="147.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="28.4" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (14 samples, 0.02%)</title><rect x="26.2" y="211.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="29.2" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (14 samples, 0.02%)</title><rect x="26.2" y="195.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="29.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (24 samples, 0.04%)</title><rect x="26.5" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="29.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.03%)</title><rect x="26.6" y="259.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (19 samples, 0.03%)</title><rect x="26.6" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="29.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1234250905.invoke (19 samples, 0.03%)</title><rect x="26.6" y="227.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="29.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.03%)</title><rect x="26.6" y="211.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="29.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (31 samples, 0.05%)</title><rect x="26.9" y="275.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (31 samples, 0.05%)</title><rect x="26.9" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="29.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.05%)</title><rect x="26.9" y="243.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="29.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (31 samples, 0.05%)</title><rect x="26.9" y="227.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="29.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1234250905.invoke (31 samples, 0.05%)</title><rect x="26.9" y="211.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="29.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.05%)</title><rect x="26.9" y="195.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="29.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (18 samples, 0.03%)</title><rect x="27.2" y="179.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (18 samples, 0.03%)</title><rect x="27.2" y="163.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.2" y="174.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.03%)</title><rect x="27.2" y="147.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="30.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (53 samples, 0.08%)</title><rect x="27.5" y="275.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.5" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (17 samples, 0.03%)</title><rect x="27.5" y="259.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="30.5" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (14 samples, 0.02%)</title><rect x="27.8" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.8" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.02%)</title><rect x="27.8" y="243.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="30.8" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (22 samples, 0.03%)</title><rect x="28.1" y="259.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.1" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (22 samples, 0.03%)</title><rect x="28.1" y="243.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="31.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.03%)</title><rect x="28.5" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.03%)</title><rect x="28.5" y="307.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.03%)</title><rect x="28.5" y="291.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="31.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (33 samples, 0.05%)</title><rect x="28.8" y="355.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="31.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (145 samples, 0.23%)</title><rect x="29.6" y="355.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.02%)</title><rect x="29.6" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.02%)</title><rect x="29.6" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (43 samples, 0.07%)</title><rect x="30.6" y="339.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (43 samples, 0.07%)</title><rect x="30.6" y="323.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (43 samples, 0.07%)</title><rect x="30.6" y="307.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (43 samples, 0.07%)</title><rect x="30.6" y="291.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (43 samples, 0.07%)</title><rect x="30.6" y="275.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="33.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (43 samples, 0.07%)</title><rect x="30.6" y="259.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="33.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$270/1387273586.run (43 samples, 0.07%)</title><rect x="30.6" y="243.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (43 samples, 0.07%)</title><rect x="30.6" y="227.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (43 samples, 0.07%)</title><rect x="30.6" y="211.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.6" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (21 samples, 0.03%)</title><rect x="30.7" y="195.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="33.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (15 samples, 0.02%)</title><rect x="31.1" y="195.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (15 samples, 0.02%)</title><rect x="31.1" y="179.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="34.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (44 samples, 0.07%)</title><rect x="31.4" y="339.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.4" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap (18 samples, 0.03%)</title><rect x="31.4" y="323.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="34.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (21 samples, 0.03%)</title><rect x="31.8" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.8" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (21 samples, 0.03%)</title><rect x="31.8" y="307.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.8" y="318.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.03%)</title><rect x="31.8" y="291.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="34.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.02%)</title><rect x="32.3" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.02%)</title><rect x="32.3" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.02%)</title><rect x="32.3" y="435.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="35.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (17 samples, 0.03%)</title><rect x="32.6" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (17 samples, 0.03%)</title><rect x="32.6" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (469 samples, 0.73%)</title><rect x="32.9" y="499.0" width="8.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.03%)</title><rect x="32.9" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.03%)</title><rect x="32.9" y="467.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="35.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (20 samples, 0.03%)</title><rect x="33.2" y="483.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="36.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (20 samples, 0.03%)</title><rect x="33.2" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="36.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (15 samples, 0.02%)</title><rect x="33.6" y="483.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="36.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (15 samples, 0.02%)</title><rect x="33.6" y="467.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="36.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.02%)</title><rect x="33.6" y="451.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.02%)</title><rect x="33.6" y="435.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="36.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.02%)</title><rect x="33.6" y="419.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="36.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (417 samples, 0.65%)</title><rect x="33.8" y="483.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="36.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (417 samples, 0.65%)</title><rect x="33.8" y="467.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="36.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (28 samples, 0.04%)</title><rect x="33.8" y="451.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="36.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (374 samples, 0.58%)</title><rect x="34.4" y="451.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.4" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (14 samples, 0.02%)</title><rect x="34.4" y="435.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="37.4" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (16 samples, 0.03%)</title><rect x="35.0" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.0" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (16 samples, 0.03%)</title><rect x="35.0" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.0" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (16 samples, 0.03%)</title><rect x="35.0" y="403.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="38.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (25 samples, 0.04%)</title><rect x="35.5" y="435.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="38.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (18 samples, 0.03%)</title><rect x="36.0" y="435.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="39.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (22 samples, 0.03%)</title><rect x="36.3" y="435.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="39.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.04%)</title><rect x="36.7" y="435.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="39.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (99 samples, 0.15%)</title><rect x="37.2" y="435.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="40.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (16 samples, 0.03%)</title><rect x="37.8" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="40.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (16 samples, 0.03%)</title><rect x="37.8" y="403.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="40.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (31 samples, 0.05%)</title><rect x="38.5" y="419.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (14 samples, 0.02%)</title><rect x="38.8" y="403.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="41.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (84 samples, 0.13%)</title><rect x="39.0" y="435.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (56 samples, 0.09%)</title><rect x="39.6" y="419.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (18 samples, 0.03%)</title><rect x="39.7" y="403.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="42.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (19 samples, 0.03%)</title><rect x="40.2" y="403.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (27 samples, 0.04%)</title><rect x="40.8" y="435.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="43.8" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (19 samples, 0.03%)</title><rect x="40.9" y="419.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$217/1260205426.run (19 samples, 0.03%)</title><rect x="40.9" y="403.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="43.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (19 samples, 0.03%)</title><rect x="40.9" y="387.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="43.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (15 samples, 0.02%)</title><rect x="41.3" y="451.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.02%)</title><rect x="41.3" y="435.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="44.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (18 samples, 0.03%)</title><rect x="41.5" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="44.5" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (18 samples, 0.03%)</title><rect x="41.5" y="531.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="44.5" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (18 samples, 0.03%)</title><rect x="41.5" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="44.5" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (18 samples, 0.03%)</title><rect x="41.5" y="499.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="44.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (71 samples, 0.11%)</title><rect x="41.9" y="547.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="44.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (50 samples, 0.08%)</title><rect x="41.9" y="531.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="44.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (21 samples, 0.03%)</title><rect x="42.8" y="531.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (21 samples, 0.03%)</title><rect x="42.8" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="45.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (83 samples, 0.13%)</title><rect x="43.2" y="611.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (83 samples, 0.13%)</title><rect x="43.2" y="595.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$206/2123650476.accept (83 samples, 0.13%)</title><rect x="43.2" y="579.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$respond$0 (83 samples, 0.13%)</title><rect x="43.2" y="563.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="46.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (83 samples, 0.13%)</title><rect x="43.2" y="547.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="46.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (83 samples, 0.13%)</title><rect x="43.2" y="531.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (83 samples, 0.13%)</title><rect x="43.2" y="515.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="46.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (64 samples, 0.10%)</title><rect x="43.2" y="499.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="46.2" y="510.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (64 samples, 0.10%)</title><rect x="43.2" y="483.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="46.2" y="494.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.10%)</title><rect x="43.2" y="467.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="46.2" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (19 samples, 0.03%)</title><rect x="44.4" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.4" y="510.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (19 samples, 0.03%)</title><rect x="44.4" y="483.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="47.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$444/142104323.get (5,932 samples, 9.27%)</title><rect x="44.7" y="627.0" width="109.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.7" y="638.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$replicasGet$1 (5,932 samples, 9.27%)</title><rect x="44.7" y="611.0" width="109.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.7" y="622.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/Entry.entryFromBytes (5,932 samples, 9.27%)</title><rect x="44.7" y="595.0" width="109.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.7" y="606.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,039 samples, 1.62%)</title><rect x="44.7" y="579.0" width="19.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (897 samples, 1.40%)</title><rect x="44.7" y="563.0" width="16.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="47.7" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (218 samples, 0.34%)</title><rect x="44.7" y="547.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.7" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (218 samples, 0.34%)</title><rect x="44.7" y="531.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.7" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (218 samples, 0.34%)</title><rect x="44.7" y="515.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.7" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (218 samples, 0.34%)</title><rect x="44.7" y="499.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.7" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (218 samples, 0.34%)</title><rect x="44.7" y="483.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.7" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (218 samples, 0.34%)</title><rect x="44.7" y="467.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.7" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (218 samples, 0.34%)</title><rect x="44.7" y="451.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (218 samples, 0.34%)</title><rect x="44.7" y="435.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (218 samples, 0.34%)</title><rect x="44.7" y="419.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (218 samples, 0.34%)</title><rect x="44.7" y="403.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (99 samples, 0.15%)</title><rect x="44.7" y="387.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.7" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (99 samples, 0.15%)</title><rect x="44.7" y="371.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="47.7" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (105 samples, 0.16%)</title><rect x="46.5" y="387.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.5" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (105 samples, 0.16%)</title><rect x="46.5" y="371.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="49.5" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (679 samples, 1.06%)</title><rect x="48.7" y="547.0" width="12.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="51.7" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (679 samples, 1.06%)</title><rect x="48.7" y="531.0" width="12.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="51.7" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (679 samples, 1.06%)</title><rect x="48.7" y="515.0" width="12.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="51.7" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (679 samples, 1.06%)</title><rect x="48.7" y="499.0" width="12.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="51.7" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (679 samples, 1.06%)</title><rect x="48.7" y="483.0" width="12.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="51.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (679 samples, 1.06%)</title><rect x="48.7" y="467.0" width="12.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="51.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (606 samples, 0.95%)</title><rect x="48.7" y="451.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="51.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (606 samples, 0.95%)</title><rect x="48.7" y="435.0" width="11.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (606 samples, 0.95%)</title><rect x="48.7" y="419.0" width="11.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="51.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (606 samples, 0.95%)</title><rect x="48.7" y="403.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (215 samples, 0.34%)</title><rect x="48.7" y="387.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="51.7" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (132 samples, 0.21%)</title><rect x="48.7" y="371.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="51.7" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (83 samples, 0.13%)</title><rect x="51.2" y="371.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="54.2" y="382.0"></text>
</g>
<g>
<title>byte[] (83 samples, 0.13%)</title><rect x="51.2" y="355.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="54.2" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (270 samples, 0.42%)</title><rect x="52.7" y="387.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.7" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (270 samples, 0.42%)</title><rect x="52.7" y="371.0" width="5.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="55.7" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (15 samples, 0.02%)</title><rect x="57.7" y="387.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="60.7" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (18 samples, 0.03%)</title><rect x="57.9" y="387.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="60.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (88 samples, 0.14%)</title><rect x="58.3" y="387.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (26 samples, 0.04%)</title><rect x="58.3" y="371.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.3" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (26 samples, 0.04%)</title><rect x="58.3" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.3" y="366.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.04%)</title><rect x="58.3" y="339.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="61.3" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (62 samples, 0.10%)</title><rect x="58.8" y="371.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.8" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (62 samples, 0.10%)</title><rect x="58.8" y="355.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="61.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (73 samples, 0.11%)</title><rect x="59.9" y="451.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.9" y="462.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (73 samples, 0.11%)</title><rect x="59.9" y="435.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="62.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (73 samples, 0.11%)</title><rect x="59.9" y="419.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (73 samples, 0.11%)</title><rect x="59.9" y="403.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (73 samples, 0.11%)</title><rect x="59.9" y="387.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.9" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (37 samples, 0.06%)</title><rect x="59.9" y="371.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.9" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.06%)</title><rect x="59.9" y="355.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="62.9" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (36 samples, 0.06%)</title><rect x="60.6" y="371.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.6" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 0.06%)</title><rect x="60.6" y="355.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="63.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils$$Lambda$474/2029930833.apply (142 samples, 0.22%)</title><rect x="61.2" y="563.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (142 samples, 0.22%)</title><rect x="61.2" y="547.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.2" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (61 samples, 0.10%)</title><rect x="61.2" y="531.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.2" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (61 samples, 0.10%)</title><rect x="61.2" y="515.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="64.2" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (81 samples, 0.13%)</title><rect x="62.4" y="531.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="65.4" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (81 samples, 0.13%)</title><rect x="62.4" y="515.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="65.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (21 samples, 0.03%)</title><rect x="63.9" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.9" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (14 samples, 0.02%)</title><rect x="63.9" y="563.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.9" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.02%)</title><rect x="63.9" y="547.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="66.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Value.getData (17 samples, 0.03%)</title><rect x="64.3" y="579.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="67.3" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.02%)</title><rect x="64.3" y="563.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.3" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.02%)</title><rect x="64.3" y="547.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="67.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.entryIterators (4,838 samples, 7.56%)</title><rect x="64.9" y="579.0" width="89.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="67.9" y="590.0">ru/mail/po..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (863 samples, 1.35%)</title><rect x="64.9" y="563.0" width="15.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.9" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (858 samples, 1.34%)</title><rect x="65.0" y="547.0" width="15.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (22 samples, 0.03%)</title><rect x="65.0" y="531.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.0" y="542.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (22 samples, 0.03%)</title><rect x="65.0" y="515.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="68.0" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (823 samples, 1.29%)</title><rect x="65.6" y="531.0" width="15.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.6" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (823 samples, 1.29%)</title><rect x="65.6" y="515.0" width="15.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.6" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (814 samples, 1.27%)</title><rect x="65.8" y="499.0" width="15.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="68.8" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (814 samples, 1.27%)</title><rect x="65.8" y="483.0" width="15.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.8" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (814 samples, 1.27%)</title><rect x="65.8" y="467.0" width="15.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.8" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (814 samples, 1.27%)</title><rect x="65.8" y="451.0" width="15.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (730 samples, 1.14%)</title><rect x="65.8" y="435.0" width="13.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (16 samples, 0.03%)</title><rect x="65.8" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="68.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (16 samples, 0.03%)</title><rect x="65.8" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$442/658008298.apply (16 samples, 0.03%)</title><rect x="65.8" y="387.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (16 samples, 0.03%)</title><rect x="65.8" y="371.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (714 samples, 1.12%)</title><rect x="66.1" y="419.0" width="13.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (714 samples, 1.12%)</title><rect x="66.1" y="403.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (714 samples, 1.12%)</title><rect x="66.1" y="387.0" width="13.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.1" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (234 samples, 0.37%)</title><rect x="66.1" y="371.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.1" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (154 samples, 0.24%)</title><rect x="66.1" y="355.0" width="2.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="69.1" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (80 samples, 0.13%)</title><rect x="68.9" y="355.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="71.9" y="366.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.13%)</title><rect x="68.9" y="339.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="71.9" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (317 samples, 0.50%)</title><rect x="70.4" y="371.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.4" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (317 samples, 0.50%)</title><rect x="70.4" y="355.0" width="5.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="73.4" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (20 samples, 0.03%)</title><rect x="76.2" y="371.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="79.2" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (22 samples, 0.03%)</title><rect x="76.6" y="371.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="79.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (121 samples, 0.19%)</title><rect x="77.0" y="371.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.0" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (33 samples, 0.05%)</title><rect x="77.0" y="355.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.0" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (33 samples, 0.05%)</title><rect x="77.0" y="339.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="80.0" y="350.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.05%)</title><rect x="77.0" y="323.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="80.0" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (88 samples, 0.14%)</title><rect x="77.6" y="355.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="80.6" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (88 samples, 0.14%)</title><rect x="77.6" y="339.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="80.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (84 samples, 0.13%)</title><rect x="79.2" y="435.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.2" y="446.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (84 samples, 0.13%)</title><rect x="79.2" y="419.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (84 samples, 0.13%)</title><rect x="79.2" y="403.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (84 samples, 0.13%)</title><rect x="79.2" y="387.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (84 samples, 0.13%)</title><rect x="79.2" y="371.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.2" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (47 samples, 0.07%)</title><rect x="79.2" y="355.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.2" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (47 samples, 0.07%)</title><rect x="79.2" y="339.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="82.2" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (37 samples, 0.06%)</title><rect x="80.1" y="355.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="83.1" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (37 samples, 0.06%)</title><rect x="80.1" y="339.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="83.1" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (33 samples, 0.05%)</title><rect x="80.8" y="563.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="83.8" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (3,671 samples, 5.74%)</title><rect x="81.6" y="563.0" width="67.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="84.6" y="574.0">java/ut..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (3,671 samples, 5.74%)</title><rect x="81.6" y="547.0" width="67.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="84.6" y="558.0">java/la..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (20 samples, 0.03%)</title><rect x="81.6" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="84.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils$$Lambda$463/1829357065.accept (3,651 samples, 5.71%)</title><rect x="82.0" y="531.0" width="67.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.0" y="542.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.lambda$entryIterators$3 (3,651 samples, 5.71%)</title><rect x="82.0" y="515.0" width="67.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.0" y="526.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (3,651 samples, 5.71%)</title><rect x="82.0" y="499.0" width="67.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.0" y="510.0">ru/mail..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (20 samples, 0.03%)</title><rect x="82.0" y="483.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="85.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (3,631 samples, 5.67%)</title><rect x="82.4" y="483.0" width="66.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="85.4" y="494.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (3,631 samples, 5.67%)</title><rect x="82.4" y="467.0" width="66.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.4" y="478.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (3,631 samples, 5.67%)</title><rect x="82.4" y="451.0" width="66.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.4" y="462.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (720 samples, 1.13%)</title><rect x="82.4" y="435.0" width="13.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.4" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (720 samples, 1.13%)</title><rect x="82.4" y="419.0" width="13.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.4" y="430.0"></text>
</g>
<g>
<title>byte[] (720 samples, 1.13%)</title><rect x="82.4" y="403.0" width="13.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="85.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1,936 samples, 3.03%)</title><rect x="95.6" y="435.0" width="35.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="98.6" y="446.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,936 samples, 3.03%)</title><rect x="95.6" y="419.0" width="35.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="98.6" y="430.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (975 samples, 1.52%)</title><rect x="131.3" y="435.0" width="18.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.3" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (336 samples, 0.53%)</title><rect x="131.3" y="419.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="134.3" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (336 samples, 0.53%)</title><rect x="131.3" y="403.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.3" y="414.0"></text>
</g>
<g>
<title>byte[] (336 samples, 0.53%)</title><rect x="131.3" y="387.0" width="6.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="134.3" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (639 samples, 1.00%)</title><rect x="137.5" y="419.0" width="11.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="140.5" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (639 samples, 1.00%)</title><rect x="137.5" y="403.0" width="11.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="140.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (236 samples, 0.37%)</title><rect x="149.3" y="563.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (230 samples, 0.36%)</title><rect x="149.4" y="547.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="152.4" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (230 samples, 0.36%)</title><rect x="149.4" y="531.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="152.4" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (71 samples, 0.11%)</title><rect x="149.4" y="515.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.4" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (71 samples, 0.11%)</title><rect x="149.4" y="499.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.4" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (71 samples, 0.11%)</title><rect x="149.4" y="483.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="152.4" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (71 samples, 0.11%)</title><rect x="149.4" y="467.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="152.4" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (71 samples, 0.11%)</title><rect x="149.4" y="451.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="152.4" y="462.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (71 samples, 0.11%)</title><rect x="149.4" y="435.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.4" y="446.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (71 samples, 0.11%)</title><rect x="149.4" y="419.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="152.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (71 samples, 0.11%)</title><rect x="149.4" y="403.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="152.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (71 samples, 0.11%)</title><rect x="149.4" y="387.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="152.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (71 samples, 0.11%)</title><rect x="149.4" y="371.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="152.4" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (33 samples, 0.05%)</title><rect x="149.4" y="355.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="152.4" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.05%)</title><rect x="149.4" y="339.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="152.4" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (35 samples, 0.05%)</title><rect x="150.0" y="355.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="153.0" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (35 samples, 0.05%)</title><rect x="150.0" y="339.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="153.0" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (159 samples, 0.25%)</title><rect x="150.7" y="515.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.7" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (159 samples, 0.25%)</title><rect x="150.7" y="499.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="153.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (159 samples, 0.25%)</title><rect x="150.7" y="483.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (159 samples, 0.25%)</title><rect x="150.7" y="467.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="153.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (159 samples, 0.25%)</title><rect x="150.7" y="451.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (159 samples, 0.25%)</title><rect x="150.7" y="435.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (132 samples, 0.21%)</title><rect x="150.7" y="419.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="153.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (132 samples, 0.21%)</title><rect x="150.7" y="403.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (132 samples, 0.21%)</title><rect x="150.7" y="387.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (132 samples, 0.21%)</title><rect x="150.7" y="371.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="153.7" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (42 samples, 0.07%)</title><rect x="150.7" y="355.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="153.7" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.04%)</title><rect x="150.7" y="339.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="153.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (17 samples, 0.03%)</title><rect x="151.2" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="154.2" y="350.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.03%)</title><rect x="151.2" y="323.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="154.2" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (55 samples, 0.09%)</title><rect x="151.5" y="355.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="154.5" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (55 samples, 0.09%)</title><rect x="151.5" y="339.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="154.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (22 samples, 0.03%)</title><rect x="152.8" y="355.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (27 samples, 0.04%)</title><rect x="153.2" y="419.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="156.2" y="430.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (27 samples, 0.04%)</title><rect x="153.2" y="403.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (27 samples, 0.04%)</title><rect x="153.2" y="387.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (27 samples, 0.04%)</title><rect x="153.2" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (27 samples, 0.04%)</title><rect x="153.2" y="355.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (23 samples, 0.04%)</title><rect x="153.7" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/SimpleRequests$$Lambda$458/395499714.get (19,208 samples, 30.02%)</title><rect x="154.1" y="627.0" width="354.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.1" y="638.0">ru/mail/polis/service/mrsandman5/replication/Sim..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/SimpleRequests.lambda$get$0 (19,208 samples, 30.02%)</title><rect x="154.1" y="611.0" width="354.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.1" y="622.0">ru/mail/polis/service/mrsandman5/replication/Sim..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/Entry.entryFromBytes (19,104 samples, 29.86%)</title><rect x="154.1" y="595.0" width="352.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.1" y="606.0">ru/mail/polis/service/mrsandman5/replication/Ent..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,314 samples, 5.18%)</title><rect x="154.1" y="579.0" width="61.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.1" y="590.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2,861 samples, 4.47%)</title><rect x="154.1" y="563.0" width="52.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="157.1" y="574.0">com/g..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (723 samples, 1.13%)</title><rect x="154.1" y="547.0" width="13.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="157.1" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (723 samples, 1.13%)</title><rect x="154.1" y="531.0" width="13.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.1" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (723 samples, 1.13%)</title><rect x="154.1" y="515.0" width="13.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="157.1" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (723 samples, 1.13%)</title><rect x="154.1" y="499.0" width="13.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="157.1" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (723 samples, 1.13%)</title><rect x="154.1" y="483.0" width="13.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="157.1" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (723 samples, 1.13%)</title><rect x="154.1" y="467.0" width="13.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="157.1" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (723 samples, 1.13%)</title><rect x="154.1" y="451.0" width="13.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (723 samples, 1.13%)</title><rect x="154.1" y="435.0" width="13.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="157.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (723 samples, 1.13%)</title><rect x="154.1" y="419.0" width="13.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="157.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (723 samples, 1.13%)</title><rect x="154.1" y="403.0" width="13.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="157.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (363 samples, 0.57%)</title><rect x="154.1" y="387.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (363 samples, 0.57%)</title><rect x="154.1" y="371.0" width="6.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="157.1" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (324 samples, 0.51%)</title><rect x="160.8" y="387.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="163.8" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (324 samples, 0.51%)</title><rect x="160.8" y="371.0" width="6.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="163.8" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (16 samples, 0.03%)</title><rect x="166.8" y="387.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="169.8" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (16 samples, 0.03%)</title><rect x="166.8" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="169.8" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.03%)</title><rect x="166.8" y="355.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="169.8" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (20 samples, 0.03%)</title><rect x="167.1" y="387.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="170.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (20 samples, 0.03%)</title><rect x="167.1" y="371.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="170.1" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,138 samples, 3.34%)</title><rect x="167.4" y="547.0" width="39.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.4" y="558.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,138 samples, 3.34%)</title><rect x="167.4" y="531.0" width="39.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="170.4" y="542.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,138 samples, 3.34%)</title><rect x="167.4" y="515.0" width="39.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="170.4" y="526.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,138 samples, 3.34%)</title><rect x="167.4" y="499.0" width="39.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="170.4" y="510.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,138 samples, 3.34%)</title><rect x="167.4" y="483.0" width="39.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="170.4" y="494.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,138 samples, 3.34%)</title><rect x="167.4" y="467.0" width="39.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="170.4" y="478.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,912 samples, 2.99%)</title><rect x="167.4" y="451.0" width="35.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.4" y="462.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (1,912 samples, 2.99%)</title><rect x="167.4" y="435.0" width="35.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="170.4" y="446.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (1,912 samples, 2.99%)</title><rect x="167.4" y="419.0" width="35.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.4" y="430.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (1,912 samples, 2.99%)</title><rect x="167.4" y="403.0" width="35.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.4" y="414.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (652 samples, 1.02%)</title><rect x="167.4" y="387.0" width="12.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.4" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (415 samples, 0.65%)</title><rect x="167.4" y="371.0" width="7.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="170.4" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (237 samples, 0.37%)</title><rect x="175.1" y="371.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.1" y="382.0"></text>
</g>
<g>
<title>byte[] (237 samples, 0.37%)</title><rect x="175.1" y="355.0" width="4.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="178.1" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (817 samples, 1.28%)</title><rect x="179.5" y="387.0" width="15.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="182.5" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (817 samples, 1.28%)</title><rect x="179.5" y="371.0" width="15.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="182.5" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (50 samples, 0.08%)</title><rect x="194.5" y="387.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="197.5" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (63 samples, 0.10%)</title><rect x="195.4" y="387.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="198.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (330 samples, 0.52%)</title><rect x="196.6" y="387.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (108 samples, 0.17%)</title><rect x="196.6" y="371.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="199.6" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (108 samples, 0.17%)</title><rect x="196.6" y="355.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="199.6" y="366.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.17%)</title><rect x="196.6" y="339.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="199.6" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (222 samples, 0.35%)</title><rect x="198.6" y="371.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.6" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (222 samples, 0.35%)</title><rect x="198.6" y="355.0" width="4.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="201.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (226 samples, 0.35%)</title><rect x="202.7" y="451.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.7" y="462.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (226 samples, 0.35%)</title><rect x="202.7" y="435.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="205.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (226 samples, 0.35%)</title><rect x="202.7" y="419.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="205.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (226 samples, 0.35%)</title><rect x="202.7" y="403.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="205.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (226 samples, 0.35%)</title><rect x="202.7" y="387.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="205.7" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (114 samples, 0.18%)</title><rect x="202.7" y="371.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="205.7" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (114 samples, 0.18%)</title><rect x="202.7" y="355.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="205.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (112 samples, 0.18%)</title><rect x="204.8" y="371.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="207.8" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (112 samples, 0.18%)</title><rect x="204.8" y="355.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="207.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils$$Lambda$474/2029930833.apply (453 samples, 0.71%)</title><rect x="206.9" y="563.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="209.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (453 samples, 0.71%)</title><rect x="206.9" y="547.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="209.9" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (229 samples, 0.36%)</title><rect x="206.9" y="531.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="209.9" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (229 samples, 0.36%)</title><rect x="206.9" y="515.0" width="4.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="209.9" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (224 samples, 0.35%)</title><rect x="211.1" y="531.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="214.1" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (224 samples, 0.35%)</title><rect x="211.1" y="515.0" width="4.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="214.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (48 samples, 0.08%)</title><rect x="215.2" y="579.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="218.2" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (21 samples, 0.03%)</title><rect x="215.2" y="563.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="218.2" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.03%)</title><rect x="215.2" y="547.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="218.2" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (27 samples, 0.04%)</title><rect x="215.6" y="563.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.6" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.04%)</title><rect x="215.6" y="547.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="218.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Value.getData (62 samples, 0.10%)</title><rect x="216.1" y="579.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="219.1" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (29 samples, 0.05%)</title><rect x="216.1" y="563.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.1" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.05%)</title><rect x="216.1" y="547.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="219.1" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (33 samples, 0.05%)</title><rect x="216.6" y="563.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="219.6" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (33 samples, 0.05%)</title><rect x="216.6" y="547.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="219.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/Entry.present (27 samples, 0.04%)</title><rect x="217.2" y="579.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="220.2" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.replication.Entry (16 samples, 0.03%)</title><rect x="217.2" y="563.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="220.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.entryIterators (15,641 samples, 24.44%)</title><rect x="218.0" y="579.0" width="288.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="221.0" y="590.0">ru/mail/polis/utils/IteratorUtils.entry..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2,848 samples, 4.45%)</title><rect x="218.0" y="563.0" width="52.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="221.0" y="574.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2,835 samples, 4.43%)</title><rect x="218.2" y="547.0" width="52.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="221.2" y="558.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (95 samples, 0.15%)</title><rect x="218.3" y="531.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="221.3" y="542.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (95 samples, 0.15%)</title><rect x="218.3" y="515.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="221.3" y="526.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (17 samples, 0.03%)</title><rect x="220.1" y="531.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="223.1" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (14 samples, 0.02%)</title><rect x="220.4" y="531.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="223.4" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.02%)</title><rect x="220.4" y="515.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="223.4" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,702 samples, 4.22%)</title><rect x="220.6" y="531.0" width="49.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="223.6" y="542.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,702 samples, 4.22%)</title><rect x="220.6" y="515.0" width="49.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="223.6" y="526.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (22 samples, 0.03%)</title><rect x="220.6" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="223.6" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.03%)</title><rect x="220.6" y="483.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="223.6" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.03%)</title><rect x="220.6" y="467.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="223.6" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,680 samples, 4.19%)</title><rect x="221.1" y="499.0" width="49.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="224.1" y="510.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,680 samples, 4.19%)</title><rect x="221.1" y="483.0" width="49.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="224.1" y="494.0">java/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,680 samples, 4.19%)</title><rect x="221.1" y="467.0" width="49.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="224.1" y="478.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,680 samples, 4.19%)</title><rect x="221.1" y="451.0" width="49.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="224.1" y="462.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2,410 samples, 3.77%)</title><rect x="221.1" y="435.0" width="44.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="224.1" y="446.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (54 samples, 0.08%)</title><rect x="221.1" y="419.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (54 samples, 0.08%)</title><rect x="221.1" y="403.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="224.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$442/658008298.apply (54 samples, 0.08%)</title><rect x="221.1" y="387.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="224.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (54 samples, 0.08%)</title><rect x="221.1" y="371.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="224.1" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (22 samples, 0.03%)</title><rect x="221.1" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="224.1" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (22 samples, 0.03%)</title><rect x="221.1" y="339.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="224.1" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (22 samples, 0.03%)</title><rect x="221.1" y="323.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="224.1" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (23 samples, 0.04%)</title><rect x="221.5" y="355.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.5" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (23 samples, 0.04%)</title><rect x="221.5" y="339.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="224.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (2,356 samples, 3.68%)</title><rect x="222.0" y="419.0" width="43.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="225.0" y="430.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (2,356 samples, 3.68%)</title><rect x="222.0" y="403.0" width="43.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="225.0" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (2,356 samples, 3.68%)</title><rect x="222.0" y="387.0" width="43.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.0" y="398.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (796 samples, 1.24%)</title><rect x="222.0" y="371.0" width="14.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.0" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (532 samples, 0.83%)</title><rect x="222.0" y="355.0" width="9.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="225.0" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (264 samples, 0.41%)</title><rect x="231.9" y="355.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="234.9" y="366.0"></text>
</g>
<g>
<title>byte[] (264 samples, 0.41%)</title><rect x="231.9" y="339.0" width="4.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="234.9" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1,036 samples, 1.62%)</title><rect x="236.7" y="371.0" width="19.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="239.7" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,036 samples, 1.62%)</title><rect x="236.7" y="355.0" width="19.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="239.7" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (66 samples, 0.10%)</title><rect x="255.8" y="371.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="258.8" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (76 samples, 0.12%)</title><rect x="257.0" y="371.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="260.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (382 samples, 0.60%)</title><rect x="258.5" y="371.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="261.5" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (124 samples, 0.19%)</title><rect x="258.5" y="355.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="261.5" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (124 samples, 0.19%)</title><rect x="258.5" y="339.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.5" y="350.0"></text>
</g>
<g>
<title>byte[] (124 samples, 0.19%)</title><rect x="258.5" y="323.0" width="2.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="261.5" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (258 samples, 0.40%)</title><rect x="260.7" y="355.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.7" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (258 samples, 0.40%)</title><rect x="260.7" y="339.0" width="4.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="263.7" y="350.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (270 samples, 0.42%)</title><rect x="265.5" y="435.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="268.5" y="446.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (270 samples, 0.42%)</title><rect x="265.5" y="419.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="268.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (270 samples, 0.42%)</title><rect x="265.5" y="403.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="268.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (270 samples, 0.42%)</title><rect x="265.5" y="387.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="268.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (270 samples, 0.42%)</title><rect x="265.5" y="371.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.5" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (139 samples, 0.22%)</title><rect x="265.5" y="355.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="268.5" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (139 samples, 0.22%)</title><rect x="265.5" y="339.0" width="2.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="268.5" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (131 samples, 0.20%)</title><rect x="268.1" y="355.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.1" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (131 samples, 0.20%)</title><rect x="268.1" y="339.0" width="2.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="271.1" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (227 samples, 0.35%)</title><rect x="270.5" y="563.0" width="4.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="273.5" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (11,675 samples, 18.25%)</title><rect x="275.0" y="563.0" width="215.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="278.0" y="574.0">java/util/Collections$Unmodi..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (11,675 samples, 18.25%)</title><rect x="275.0" y="547.0" width="215.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="278.0" y="558.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (35 samples, 0.05%)</title><rect x="275.0" y="531.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="278.0" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (18 samples, 0.03%)</title><rect x="275.0" y="515.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="278.0" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (17 samples, 0.03%)</title><rect x="275.3" y="515.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="278.3" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (17 samples, 0.03%)</title><rect x="275.3" y="499.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.3" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (17 samples, 0.03%)</title><rect x="275.3" y="483.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="278.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils$$Lambda$463/1829357065.accept (11,640 samples, 18.19%)</title><rect x="275.7" y="531.0" width="214.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="278.7" y="542.0">ru/mail/polis/utils/Iterator..</text>
</g>
<g>
<title>ru/mail/polis/utils/IteratorUtils.lambda$entryIterators$3 (11,640 samples, 18.19%)</title><rect x="275.7" y="515.0" width="214.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="278.7" y="526.0">ru/mail/polis/utils/Iterator..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (11,640 samples, 18.19%)</title><rect x="275.7" y="499.0" width="214.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="278.7" y="510.0">ru/mail/polis/dao/impl/table..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (72 samples, 0.11%)</title><rect x="275.7" y="483.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="278.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (11,568 samples, 18.08%)</title><rect x="277.0" y="483.0" width="213.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.0" y="494.0">ru/mail/polis/dao/impl/table..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (11,568 samples, 18.08%)</title><rect x="277.0" y="467.0" width="213.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="280.0" y="478.0">ru/mail/polis/dao/impl/table..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (11,568 samples, 18.08%)</title><rect x="277.0" y="451.0" width="213.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="280.0" y="462.0">ru/mail/polis/dao/impl/table..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,268 samples, 3.54%)</title><rect x="277.0" y="435.0" width="41.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="280.0" y="446.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2,268 samples, 3.54%)</title><rect x="277.0" y="419.0" width="41.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.0" y="430.0">jav..</text>
</g>
<g>
<title>byte[] (2,268 samples, 3.54%)</title><rect x="277.0" y="403.0" width="41.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="280.0" y="414.0">byt..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6,209 samples, 9.70%)</title><rect x="318.8" y="435.0" width="114.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="321.8" y="446.0">java/nio/HeapB..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6,209 samples, 9.70%)</title><rect x="318.8" y="419.0" width="114.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="321.8" y="430.0">java.nio.HeapB..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3,091 samples, 4.83%)</title><rect x="433.3" y="435.0" width="57.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="436.3" y="446.0">ru/mai..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,036 samples, 1.62%)</title><rect x="433.3" y="419.0" width="19.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="436.3" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,036 samples, 1.62%)</title><rect x="433.3" y="403.0" width="19.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="436.3" y="414.0"></text>
</g>
<g>
<title>byte[] (1,036 samples, 1.62%)</title><rect x="433.3" y="387.0" width="19.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="436.3" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2,055 samples, 3.21%)</title><rect x="452.4" y="419.0" width="37.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="455.4" y="430.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,055 samples, 3.21%)</title><rect x="452.4" y="403.0" width="37.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="455.4" y="414.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (794 samples, 1.24%)</title><rect x="490.4" y="563.0" width="14.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="493.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (782 samples, 1.22%)</title><rect x="490.7" y="547.0" width="14.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="493.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (782 samples, 1.22%)</title><rect x="490.7" y="531.0" width="14.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="493.7" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (215 samples, 0.34%)</title><rect x="490.7" y="515.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="493.7" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (215 samples, 0.34%)</title><rect x="490.7" y="499.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="493.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (215 samples, 0.34%)</title><rect x="490.7" y="483.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (215 samples, 0.34%)</title><rect x="490.7" y="467.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (215 samples, 0.34%)</title><rect x="490.7" y="451.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.7" y="462.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (215 samples, 0.34%)</title><rect x="490.7" y="435.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="493.7" y="446.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (215 samples, 0.34%)</title><rect x="490.7" y="419.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (215 samples, 0.34%)</title><rect x="490.7" y="403.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="493.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (215 samples, 0.34%)</title><rect x="490.7" y="387.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="493.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (215 samples, 0.34%)</title><rect x="490.7" y="371.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="493.7" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (106 samples, 0.17%)</title><rect x="490.7" y="355.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="493.7" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (106 samples, 0.17%)</title><rect x="490.7" y="339.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="493.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (93 samples, 0.15%)</title><rect x="492.6" y="355.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="495.6" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (93 samples, 0.15%)</title><rect x="492.6" y="339.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="495.6" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (567 samples, 0.89%)</title><rect x="494.6" y="515.0" width="10.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="497.6" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (567 samples, 0.89%)</title><rect x="494.6" y="499.0" width="10.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.6" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (567 samples, 0.89%)</title><rect x="494.6" y="483.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="497.6" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (567 samples, 0.89%)</title><rect x="494.6" y="467.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="497.6" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (567 samples, 0.89%)</title><rect x="494.6" y="451.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="497.6" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (567 samples, 0.89%)</title><rect x="494.6" y="435.0" width="10.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.6" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (464 samples, 0.73%)</title><rect x="494.6" y="419.0" width="8.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (464 samples, 0.73%)</title><rect x="494.6" y="403.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="497.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (464 samples, 0.73%)</title><rect x="494.6" y="387.0" width="8.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="497.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (464 samples, 0.73%)</title><rect x="494.6" y="371.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="497.6" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (172 samples, 0.27%)</title><rect x="494.6" y="355.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="497.6" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (118 samples, 0.18%)</title><rect x="494.6" y="339.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="497.6" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (54 samples, 0.08%)</title><rect x="496.8" y="339.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="499.8" y="350.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.08%)</title><rect x="496.8" y="323.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="499.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (178 samples, 0.28%)</title><rect x="497.8" y="355.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.8" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (178 samples, 0.28%)</title><rect x="497.8" y="339.0" width="3.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="500.8" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (18 samples, 0.03%)</title><rect x="501.1" y="355.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="504.1" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (17 samples, 0.03%)</title><rect x="501.4" y="355.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="504.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (79 samples, 0.12%)</title><rect x="501.7" y="355.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="504.7" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (30 samples, 0.05%)</title><rect x="501.7" y="339.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (30 samples, 0.05%)</title><rect x="501.7" y="323.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="504.7" y="334.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.05%)</title><rect x="501.7" y="307.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="504.7" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (49 samples, 0.08%)</title><rect x="502.3" y="339.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="505.3" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (49 samples, 0.08%)</title><rect x="502.3" y="323.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="505.3" y="334.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (103 samples, 0.16%)</title><rect x="503.2" y="419.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="506.2" y="430.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (103 samples, 0.16%)</title><rect x="503.2" y="403.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="506.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (103 samples, 0.16%)</title><rect x="503.2" y="387.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="506.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (103 samples, 0.16%)</title><rect x="503.2" y="371.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="506.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (103 samples, 0.16%)</title><rect x="503.2" y="355.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.2" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (48 samples, 0.08%)</title><rect x="503.2" y="339.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="506.2" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (48 samples, 0.08%)</title><rect x="503.2" y="323.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="506.2" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (40 samples, 0.06%)</title><rect x="504.1" y="339.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.1" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (40 samples, 0.06%)</title><rect x="504.1" y="323.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="507.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (71 samples, 0.11%)</title><rect x="505.1" y="563.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="508.1" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (18 samples, 0.03%)</title><rect x="505.1" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="508.1" y="558.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (18 samples, 0.03%)</title><rect x="505.1" y="531.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="508.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (15 samples, 0.02%)</title><rect x="505.4" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="508.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (15 samples, 0.02%)</title><rect x="505.4" y="531.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="508.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (26 samples, 0.04%)</title><rect x="505.9" y="547.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (26 samples, 0.04%)</title><rect x="505.9" y="531.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (26 samples, 0.04%)</title><rect x="505.9" y="515.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="508.9" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (26 samples, 0.04%)</title><rect x="505.9" y="499.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="508.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/Entry.entryToResponse (104 samples, 0.16%)</title><rect x="506.4" y="595.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="509.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.getTimestamp (34 samples, 0.05%)</title><rect x="506.5" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="509.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/116669570.linkToTargetMethod (34 samples, 0.05%)</title><rect x="506.5" y="563.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="509.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1675409185.invoke (34 samples, 0.05%)</title><rect x="506.5" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="509.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.05%)</title><rect x="506.5" y="531.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="509.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (15 samples, 0.02%)</title><rect x="506.5" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="509.5" y="526.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.02%)</title><rect x="506.5" y="499.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="509.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (19 samples, 0.03%)</title><rect x="506.8" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="509.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (19 samples, 0.03%)</title><rect x="506.8" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.8" y="510.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.03%)</title><rect x="506.8" y="483.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="509.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.nonemptyResponse (62 samples, 0.10%)</title><rect x="507.2" y="579.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.2" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (53 samples, 0.08%)</title><rect x="507.3" y="563.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="510.3" y="574.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.03%)</title><rect x="507.3" y="547.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="510.3" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (19 samples, 0.03%)</title><rect x="507.7" y="547.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="510.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (142 samples, 0.22%)</title><rect x="508.3" y="643.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="511.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (119 samples, 0.19%)</title><rect x="508.3" y="627.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="511.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (33 samples, 0.05%)</title><rect x="508.3" y="611.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="511.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (33 samples, 0.05%)</title><rect x="508.3" y="595.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="511.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (33 samples, 0.05%)</title><rect x="508.3" y="579.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="511.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (33 samples, 0.05%)</title><rect x="508.3" y="563.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="511.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$206/2123650476.accept (32 samples, 0.05%)</title><rect x="508.3" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="511.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$respond$0 (32 samples, 0.05%)</title><rect x="508.3" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="511.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.sendResponse (32 samples, 0.05%)</title><rect x="508.3" y="515.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="511.3" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (32 samples, 0.05%)</title><rect x="508.3" y="499.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="511.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (32 samples, 0.05%)</title><rect x="508.3" y="483.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="511.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (24 samples, 0.04%)</title><rect x="508.3" y="467.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.3" y="478.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (24 samples, 0.04%)</title><rect x="508.3" y="451.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="511.3" y="462.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.04%)</title><rect x="508.3" y="435.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="511.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$454/2018724675.apply (86 samples, 0.13%)</title><rect x="508.9" y="611.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="511.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/Entry.entriesToResponse (86 samples, 0.13%)</title><rect x="508.9" y="595.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="511.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/Entry.entryToResponse (31 samples, 0.05%)</title><rect x="508.9" y="579.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="511.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.nonemptyResponse (16 samples, 0.03%)</title><rect x="509.2" y="563.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="512.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/Entry.mergeEntries (55 samples, 0.09%)</title><rect x="509.5" y="579.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="512.5" y="590.0"></text>
</g>
<g>
<title>java/util/Collection.stream (21 samples, 0.03%)</title><rect x="509.5" y="563.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="512.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (19 samples, 0.03%)</title><rect x="510.1" y="563.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (16 samples, 0.03%)</title><rect x="510.2" y="547.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (23 samples, 0.04%)</title><rect x="510.5" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="513.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (23 samples, 0.04%)</title><rect x="510.5" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FuturesUtils$$Lambda$192/574997146.accept (23 samples, 0.04%)</title><rect x="510.5" y="595.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="513.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FuturesUtils.lambda$atLeastAsync$0 (23 samples, 0.04%)</title><rect x="510.5" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (23 samples, 0.04%)</title><rect x="510.5" y="563.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="513.5" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (23 samples, 0.04%)</title><rect x="510.5" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="513.5" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (23 samples, 0.04%)</title><rect x="510.5" y="531.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="513.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (105 samples, 0.16%)</title><rect x="510.9" y="643.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="513.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (105 samples, 0.16%)</title><rect x="510.9" y="627.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="513.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (104 samples, 0.16%)</title><rect x="510.9" y="611.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (104 samples, 0.16%)</title><rect x="510.9" y="595.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="513.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (104 samples, 0.16%)</title><rect x="510.9" y="579.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="513.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$344/2115454959.run (198 samples, 0.31%)</title><rect x="512.9" y="643.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="515.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (198 samples, 0.31%)</title><rect x="512.9" y="627.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (198 samples, 0.31%)</title><rect x="512.9" y="611.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (198 samples, 0.31%)</title><rect x="512.9" y="595.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (198 samples, 0.31%)</title><rect x="512.9" y="579.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (198 samples, 0.31%)</title><rect x="512.9" y="563.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="515.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (198 samples, 0.31%)</title><rect x="512.9" y="547.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (198 samples, 0.31%)</title><rect x="512.9" y="531.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="515.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (198 samples, 0.31%)</title><rect x="512.9" y="515.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (198 samples, 0.31%)</title><rect x="512.9" y="499.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (198 samples, 0.31%)</title><rect x="512.9" y="483.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="515.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (172 samples, 0.27%)</title><rect x="512.9" y="467.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="515.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.03%)</title><rect x="512.9" y="451.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.03%)</title><rect x="512.9" y="435.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="515.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (156 samples, 0.24%)</title><rect x="513.2" y="451.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="516.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (14 samples, 0.02%)</title><rect x="513.2" y="435.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="516.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (142 samples, 0.22%)</title><rect x="513.4" y="435.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="516.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (142 samples, 0.22%)</title><rect x="513.4" y="419.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="516.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (142 samples, 0.22%)</title><rect x="513.4" y="403.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="516.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (66 samples, 0.10%)</title><rect x="513.4" y="387.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="516.4" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (22 samples, 0.03%)</title><rect x="513.4" y="371.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="516.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$372/98170111.apply (44 samples, 0.07%)</title><rect x="513.8" y="371.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="516.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (44 samples, 0.07%)</title><rect x="513.8" y="355.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="516.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (44 samples, 0.07%)</title><rect x="513.8" y="339.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="516.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (32 samples, 0.05%)</title><rect x="514.0" y="323.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="517.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (26 samples, 0.04%)</title><rect x="514.1" y="307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="517.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (26 samples, 0.04%)</title><rect x="514.1" y="291.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="517.1" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (14 samples, 0.02%)</title><rect x="514.1" y="275.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="517.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (76 samples, 0.12%)</title><rect x="514.6" y="387.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="517.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (76 samples, 0.12%)</title><rect x="514.6" y="371.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$312/838027427.apply (76 samples, 0.12%)</title><rect x="514.6" y="355.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="517.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (76 samples, 0.12%)</title><rect x="514.6" y="339.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="517.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (76 samples, 0.12%)</title><rect x="514.6" y="323.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="517.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$198/423295079.apply (76 samples, 0.12%)</title><rect x="514.6" y="307.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (76 samples, 0.12%)</title><rect x="514.6" y="291.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="517.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (32 samples, 0.05%)</title><rect x="514.8" y="275.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (32 samples, 0.05%)</title><rect x="514.8" y="259.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.8" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (19 samples, 0.03%)</title><rect x="514.8" y="243.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="517.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (34 samples, 0.05%)</title><rect x="515.4" y="275.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (23 samples, 0.04%)</title><rect x="515.4" y="259.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="518.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (15 samples, 0.02%)</title><rect x="515.4" y="243.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="518.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (26 samples, 0.04%)</title><rect x="516.0" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (26 samples, 0.04%)</title><rect x="516.0" y="451.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (26 samples, 0.04%)</title><rect x="516.0" y="435.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (26 samples, 0.04%)</title><rect x="516.0" y="419.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="519.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (26 samples, 0.04%)</title><rect x="516.0" y="403.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.0" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (26 samples, 0.04%)</title><rect x="516.0" y="387.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.0" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (15 samples, 0.02%)</title><rect x="516.2" y="371.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.2" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (15 samples, 0.02%)</title><rect x="516.2" y="355.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="519.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,769 samples, 2.76%)</title><rect x="516.5" y="643.0" width="32.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.5" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,769 samples, 2.76%)</title><rect x="516.5" y="627.0" width="32.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="519.5" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,489 samples, 2.33%)</title><rect x="516.5" y="611.0" width="27.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="519.5" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$270/1387273586.run (1,489 samples, 2.33%)</title><rect x="516.5" y="595.0" width="27.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.5" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,489 samples, 2.33%)</title><rect x="516.5" y="579.0" width="27.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.5" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (38 samples, 0.06%)</title><rect x="516.5" y="563.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (38 samples, 0.06%)</title><rect x="516.5" y="547.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (38 samples, 0.06%)</title><rect x="516.5" y="531.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (38 samples, 0.06%)</title><rect x="516.5" y="515.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="519.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/116669570.linkToTargetMethod (14 samples, 0.02%)</title><rect x="516.5" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/454884231.invoke (14 samples, 0.02%)</title><rect x="516.5" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="519.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.02%)</title><rect x="516.5" y="467.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (14 samples, 0.02%)</title><rect x="516.5" y="451.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="519.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (14 samples, 0.02%)</title><rect x="516.5" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.5" y="446.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.02%)</title><rect x="516.5" y="419.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="519.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (24 samples, 0.04%)</title><rect x="516.8" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="519.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.04%)</title><rect x="516.8" y="483.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.04%)</title><rect x="516.8" y="467.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$353/182948253.get$Lambda (24 samples, 0.04%)</title><rect x="516.8" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="519.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$353 (24 samples, 0.04%)</title><rect x="516.8" y="435.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="519.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1,451 samples, 2.27%)</title><rect x="517.2" y="563.0" width="26.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="520.2" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,451 samples, 2.27%)</title><rect x="517.2" y="547.0" width="26.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.2" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,451 samples, 2.27%)</title><rect x="517.2" y="531.0" width="26.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="520.2" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,451 samples, 2.27%)</title><rect x="517.2" y="515.0" width="26.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="520.2" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (645 samples, 1.01%)</title><rect x="517.2" y="499.0" width="11.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="520.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (645 samples, 1.01%)</title><rect x="517.2" y="483.0" width="11.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="520.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (645 samples, 1.01%)</title><rect x="517.2" y="467.0" width="11.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="520.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (645 samples, 1.01%)</title><rect x="517.2" y="451.0" width="11.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (645 samples, 1.01%)</title><rect x="517.2" y="435.0" width="11.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (645 samples, 1.01%)</title><rect x="517.2" y="419.0" width="11.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="520.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (645 samples, 1.01%)</title><rect x="517.2" y="403.0" width="11.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="520.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (630 samples, 0.98%)</title><rect x="517.2" y="387.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (630 samples, 0.98%)</title><rect x="517.2" y="371.0" width="11.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (615 samples, 0.96%)</title><rect x="517.2" y="355.0" width="11.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="520.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$167/1947942813.apply (584 samples, 0.91%)</title><rect x="517.4" y="339.0" width="10.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="520.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (584 samples, 0.91%)</title><rect x="517.4" y="323.0" width="10.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="520.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (32 samples, 0.05%)</title><rect x="517.5" y="307.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (32 samples, 0.05%)</title><rect x="517.5" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="520.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (17 samples, 0.03%)</title><rect x="517.5" y="275.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="520.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.02%)</title><rect x="517.8" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.02%)</title><rect x="517.8" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.02%)</title><rect x="517.8" y="243.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="520.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (544 samples, 0.85%)</title><rect x="518.1" y="307.0" width="10.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="521.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (17 samples, 0.03%)</title><rect x="518.2" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="521.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (17 samples, 0.03%)</title><rect x="518.2" y="275.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="521.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (521 samples, 0.81%)</title><rect x="518.5" y="291.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="521.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (436 samples, 0.68%)</title><rect x="518.5" y="275.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.03%)</title><rect x="518.5" y="259.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="521.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.03%)</title><rect x="518.5" y="243.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="521.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1720084687.linkToTargetMethod (14 samples, 0.02%)</title><rect x="518.9" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="521.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1463263860.invokeStatic (14 samples, 0.02%)</title><rect x="518.9" y="243.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="521.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$397/1581807967.get$Lambda (14 samples, 0.02%)</title><rect x="518.9" y="227.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="521.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$397 (14 samples, 0.02%)</title><rect x="518.9" y="211.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="521.9" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (70 samples, 0.11%)</title><rect x="519.2" y="259.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.2" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (25 samples, 0.04%)</title><rect x="519.2" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="522.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (23 samples, 0.04%)</title><rect x="519.6" y="243.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (23 samples, 0.04%)</title><rect x="519.6" y="227.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="522.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (23 samples, 0.04%)</title><rect x="519.6" y="211.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (22 samples, 0.03%)</title><rect x="520.1" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.1" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (22 samples, 0.03%)</title><rect x="520.1" y="227.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="523.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (45 samples, 0.07%)</title><rect x="520.5" y="259.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="523.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (27 samples, 0.04%)</title><rect x="520.5" y="243.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="523.5" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (14 samples, 0.02%)</title><rect x="520.5" y="227.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="523.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (18 samples, 0.03%)</title><rect x="521.0" y="243.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (18 samples, 0.03%)</title><rect x="521.0" y="227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="524.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (16 samples, 0.03%)</title><rect x="521.4" y="259.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="524.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (218 samples, 0.34%)</title><rect x="522.0" y="259.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="525.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$397/1581807967.run (218 samples, 0.34%)</title><rect x="522.0" y="243.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="525.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (218 samples, 0.34%)</title><rect x="522.0" y="227.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="525.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (38 samples, 0.06%)</title><rect x="522.0" y="211.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="525.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.06%)</title><rect x="522.0" y="195.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="525.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$415/1645310768.get$Lambda (18 samples, 0.03%)</title><rect x="522.4" y="179.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="525.4" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$415 (18 samples, 0.03%)</title><rect x="522.4" y="163.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="525.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (19 samples, 0.03%)</title><rect x="522.7" y="211.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="525.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (19 samples, 0.03%)</title><rect x="522.7" y="195.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="525.7" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (15 samples, 0.02%)</title><rect x="523.0" y="211.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="526.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (40 samples, 0.06%)</title><rect x="523.5" y="211.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="526.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (40 samples, 0.06%)</title><rect x="523.5" y="195.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="526.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (30 samples, 0.05%)</title><rect x="523.7" y="179.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="526.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (30 samples, 0.05%)</title><rect x="523.7" y="163.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="526.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (30 samples, 0.05%)</title><rect x="523.7" y="147.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="526.7" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (17 samples, 0.03%)</title><rect x="523.7" y="131.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="526.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (28 samples, 0.04%)</title><rect x="524.3" y="211.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="527.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.04%)</title><rect x="524.3" y="195.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="527.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/890545344.invoke (28 samples, 0.04%)</title><rect x="524.3" y="179.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="527.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.04%)</title><rect x="524.3" y="163.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (20 samples, 0.03%)</title><rect x="524.4" y="147.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="527.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (20 samples, 0.03%)</title><rect x="524.4" y="131.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="527.4" y="142.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.03%)</title><rect x="524.4" y="115.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="527.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (66 samples, 0.10%)</title><rect x="524.8" y="211.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="527.8" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (18 samples, 0.03%)</title><rect x="524.8" y="195.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="527.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (48 samples, 0.08%)</title><rect x="525.1" y="195.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="528.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.08%)</title><rect x="525.1" y="179.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="528.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/890545344.invoke (48 samples, 0.08%)</title><rect x="525.1" y="163.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="528.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.08%)</title><rect x="525.1" y="147.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="528.1" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (38 samples, 0.06%)</title><rect x="525.3" y="131.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="528.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (38 samples, 0.06%)</title><rect x="525.3" y="115.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="528.3" y="126.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.06%)</title><rect x="525.3" y="99.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="528.3" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.getBody (31 samples, 0.05%)</title><rect x="526.0" y="259.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="529.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (31 samples, 0.05%)</title><rect x="526.0" y="243.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="529.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (31 samples, 0.05%)</title><rect x="526.0" y="227.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="529.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (31 samples, 0.05%)</title><rect x="526.0" y="211.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="529.0" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (19 samples, 0.03%)</title><rect x="526.0" y="195.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="529.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/handlers/GetBodyHandler.apply (85 samples, 0.13%)</title><rect x="526.6" y="275.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.6" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (43 samples, 0.07%)</title><rect x="526.6" y="259.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="529.6" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (29 samples, 0.05%)</title><rect x="526.6" y="243.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="529.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (22 samples, 0.03%)</title><rect x="526.8" y="227.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="529.8" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (22 samples, 0.03%)</title><rect x="526.8" y="211.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="529.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (14 samples, 0.02%)</title><rect x="527.2" y="243.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="530.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (14 samples, 0.02%)</title><rect x="527.2" y="227.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="530.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (14 samples, 0.02%)</title><rect x="527.2" y="211.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="530.2" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (29 samples, 0.05%)</title><rect x="527.6" y="259.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="530.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (20 samples, 0.03%)</title><rect x="527.8" y="243.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="530.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$315/703902426.apply (22 samples, 0.03%)</title><rect x="528.1" y="339.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="531.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (22 samples, 0.03%)</title><rect x="528.1" y="323.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="531.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (15 samples, 0.02%)</title><rect x="528.6" y="355.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="531.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (15 samples, 0.02%)</title><rect x="528.6" y="339.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="531.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$319/1455266356.apply (15 samples, 0.02%)</title><rect x="528.6" y="323.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (15 samples, 0.02%)</title><rect x="528.6" y="307.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (15 samples, 0.02%)</title><rect x="528.6" y="291.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.02%)</title><rect x="528.6" y="275.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="531.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$382/489610158.apply (15 samples, 0.02%)</title><rect x="528.8" y="387.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="531.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (15 samples, 0.02%)</title><rect x="528.8" y="371.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="531.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (15 samples, 0.02%)</title><rect x="528.8" y="355.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="531.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (806 samples, 1.26%)</title><rect x="529.1" y="499.0" width="14.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="532.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (58 samples, 0.09%)</title><rect x="529.1" y="483.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="532.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (58 samples, 0.09%)</title><rect x="529.1" y="467.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="532.1" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (58 samples, 0.09%)</title><rect x="529.1" y="451.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="532.1" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (58 samples, 0.09%)</title><rect x="529.1" y="435.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (58 samples, 0.09%)</title><rect x="529.1" y="419.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="532.1" y="430.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.09%)</title><rect x="529.1" y="403.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="532.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (37 samples, 0.06%)</title><rect x="530.2" y="483.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="533.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (19 samples, 0.03%)</title><rect x="530.5" y="467.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="533.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.03%)</title><rect x="530.5" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="533.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (207 samples, 0.32%)</title><rect x="530.9" y="483.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="533.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (207 samples, 0.32%)</title><rect x="530.9" y="467.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="533.9" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (207 samples, 0.32%)</title><rect x="530.9" y="451.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="533.9" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (20 samples, 0.03%)</title><rect x="531.0" y="435.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="534.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.02%)</title><rect x="531.5" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.02%)</title><rect x="531.5" y="419.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="534.5" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.get$Lambda (15 samples, 0.02%)</title><rect x="531.5" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="534.5" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$131 (15 samples, 0.02%)</title><rect x="531.5" y="387.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="534.5" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (17 samples, 0.03%)</title><rect x="531.8" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.8" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (17 samples, 0.03%)</title><rect x="531.8" y="419.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="534.8" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (125 samples, 0.20%)</title><rect x="532.1" y="435.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="535.1" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.accept (125 samples, 0.20%)</title><rect x="532.1" y="419.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="535.1" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (125 samples, 0.20%)</title><rect x="532.1" y="403.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="535.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.03%)</title><rect x="532.1" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.03%)</title><rect x="532.1" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="535.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1026326437.get$Lambda (21 samples, 0.03%)</title><rect x="532.1" y="355.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="535.1" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$141 (21 samples, 0.03%)</title><rect x="532.1" y="339.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="535.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (22 samples, 0.03%)</title><rect x="532.5" y="387.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="535.5" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1026326437.accept (22 samples, 0.03%)</title><rect x="532.5" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="535.5" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (22 samples, 0.03%)</title><rect x="532.5" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="535.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (22 samples, 0.03%)</title><rect x="532.5" y="339.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="535.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (22 samples, 0.03%)</title><rect x="532.5" y="323.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="535.5" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (22 samples, 0.03%)</title><rect x="532.5" y="307.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="535.5" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (22 samples, 0.03%)</title><rect x="532.5" y="291.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.03%)</title><rect x="532.5" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="535.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.03%)</title><rect x="532.5" y="259.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="535.5" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (40 samples, 0.06%)</title><rect x="532.9" y="387.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="535.9" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (40 samples, 0.06%)</title><rect x="532.9" y="371.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="535.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (22 samples, 0.03%)</title><rect x="532.9" y="355.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.03%)</title><rect x="532.9" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="535.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.03%)</title><rect x="532.9" y="323.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="535.9" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (18 samples, 0.03%)</title><rect x="533.3" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="536.3" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (18 samples, 0.03%)</title><rect x="533.3" y="339.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="536.3" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (42 samples, 0.07%)</title><rect x="533.6" y="387.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="536.6" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (42 samples, 0.07%)</title><rect x="533.6" y="371.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="536.6" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (15 samples, 0.02%)</title><rect x="534.4" y="435.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="537.4" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (15 samples, 0.02%)</title><rect x="534.4" y="419.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="537.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (504 samples, 0.79%)</title><rect x="534.7" y="483.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="537.7" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (18 samples, 0.03%)</title><rect x="534.7" y="467.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="537.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (42 samples, 0.07%)</title><rect x="535.0" y="467.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="538.0" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (42 samples, 0.07%)</title><rect x="535.0" y="451.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="538.0" y="462.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.07%)</title><rect x="535.0" y="435.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="538.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (72 samples, 0.11%)</title><rect x="535.8" y="467.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="538.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (72 samples, 0.11%)</title><rect x="535.8" y="451.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="538.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.04%)</title><rect x="535.8" y="435.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="538.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (48 samples, 0.08%)</title><rect x="536.2" y="435.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="539.2" y="446.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.08%)</title><rect x="536.2" y="419.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="539.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (372 samples, 0.58%)</title><rect x="537.1" y="467.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="540.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (120 samples, 0.19%)</title><rect x="537.1" y="451.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="540.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (120 samples, 0.19%)</title><rect x="537.1" y="435.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="540.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.07%)</title><rect x="537.1" y="419.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="540.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (75 samples, 0.12%)</title><rect x="537.9" y="419.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="540.9" y="430.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.12%)</title><rect x="537.9" y="403.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="540.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (52 samples, 0.08%)</title><rect x="539.3" y="451.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="542.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (52 samples, 0.08%)</title><rect x="539.3" y="435.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="542.3" y="446.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.05%)</title><rect x="539.3" y="419.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="542.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.03%)</title><rect x="539.9" y="419.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="542.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (56 samples, 0.09%)</title><rect x="540.3" y="451.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="543.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (56 samples, 0.09%)</title><rect x="540.3" y="435.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="543.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (56 samples, 0.09%)</title><rect x="540.3" y="419.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.04%)</title><rect x="540.3" y="403.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="543.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (29 samples, 0.05%)</title><rect x="540.8" y="403.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="543.8" y="414.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.05%)</title><rect x="540.8" y="387.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="543.8" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (49 samples, 0.08%)</title><rect x="541.3" y="451.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="544.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (49 samples, 0.08%)</title><rect x="541.3" y="435.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.3" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (49 samples, 0.08%)</title><rect x="541.3" y="419.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="544.3" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (49 samples, 0.08%)</title><rect x="541.3" y="403.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="544.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (49 samples, 0.08%)</title><rect x="541.3" y="387.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="544.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (49 samples, 0.08%)</title><rect x="541.3" y="371.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="544.3" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (95 samples, 0.15%)</title><rect x="542.2" y="451.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="545.2" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (32 samples, 0.05%)</title><rect x="542.2" y="435.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="545.2" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (32 samples, 0.05%)</title><rect x="542.2" y="419.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="545.2" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (36 samples, 0.06%)</title><rect x="542.8" y="435.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="545.8" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (36 samples, 0.06%)</title><rect x="542.8" y="419.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="545.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$386/1694216227.apply (27 samples, 0.04%)</title><rect x="543.5" y="435.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (27 samples, 0.04%)</title><rect x="543.5" y="419.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="546.5" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (27 samples, 0.04%)</title><rect x="543.5" y="403.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="546.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (280 samples, 0.44%)</title><rect x="544.0" y="611.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="547.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (280 samples, 0.44%)</title><rect x="544.0" y="595.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (280 samples, 0.44%)</title><rect x="544.0" y="579.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="547.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$270/1387273586.run (280 samples, 0.44%)</title><rect x="544.0" y="563.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="547.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (280 samples, 0.44%)</title><rect x="544.0" y="547.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="547.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (45 samples, 0.07%)</title><rect x="544.0" y="531.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (15 samples, 0.02%)</title><rect x="544.1" y="515.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="547.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (22 samples, 0.03%)</title><rect x="544.4" y="515.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="547.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (22 samples, 0.03%)</title><rect x="544.4" y="499.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="547.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (14 samples, 0.02%)</title><rect x="544.5" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="547.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (14 samples, 0.02%)</title><rect x="544.5" y="467.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="547.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (229 samples, 0.36%)</title><rect x="544.8" y="531.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (229 samples, 0.36%)</title><rect x="544.8" y="515.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (229 samples, 0.36%)</title><rect x="544.8" y="499.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="547.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (229 samples, 0.36%)</title><rect x="544.8" y="483.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="547.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (229 samples, 0.36%)</title><rect x="544.8" y="467.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="547.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (229 samples, 0.36%)</title><rect x="544.8" y="451.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$402/1777809380.run (135 samples, 0.21%)</title><rect x="545.2" y="435.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="548.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (135 samples, 0.21%)</title><rect x="545.2" y="419.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="548.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (135 samples, 0.21%)</title><rect x="545.2" y="403.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.2" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (37 samples, 0.06%)</title><rect x="545.2" y="387.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.2" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (28 samples, 0.04%)</title><rect x="545.2" y="371.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="548.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (15 samples, 0.02%)</title><rect x="545.4" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="548.4" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (15 samples, 0.02%)</title><rect x="545.4" y="339.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="548.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (95 samples, 0.15%)</title><rect x="545.9" y="387.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (86 samples, 0.13%)</title><rect x="546.1" y="371.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="549.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (32 samples, 0.05%)</title><rect x="546.1" y="355.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="549.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (25 samples, 0.04%)</title><rect x="546.7" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="549.7" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (14 samples, 0.02%)</title><rect x="546.9" y="339.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="549.9" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (14 samples, 0.02%)</title><rect x="546.9" y="323.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="549.9" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (14 samples, 0.02%)</title><rect x="546.9" y="307.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="549.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (29 samples, 0.05%)</title><rect x="547.1" y="355.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="550.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (22 samples, 0.03%)</title><rect x="547.3" y="339.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="550.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (18 samples, 0.03%)</title><rect x="547.3" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (18 samples, 0.03%)</title><rect x="547.3" y="307.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="550.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (16 samples, 0.03%)</title><rect x="547.3" y="291.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="550.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (48 samples, 0.08%)</title><rect x="547.7" y="435.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="550.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (48 samples, 0.08%)</title><rect x="547.7" y="419.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="550.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onComplete (48 samples, 0.08%)</title><rect x="547.7" y="403.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (48 samples, 0.08%)</title><rect x="547.7" y="387.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="550.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (42 samples, 0.07%)</title><rect x="547.7" y="371.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="550.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (42 samples, 0.07%)</title><rect x="547.7" y="355.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="550.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (22 samples, 0.03%)</title><rect x="547.7" y="339.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="550.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/handlers/GetBodyHandler$$Lambda$477/1705605590.apply (22 samples, 0.03%)</title><rect x="547.7" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="550.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/handlers/GetBodyHandler.lambda$apply$0 (22 samples, 0.03%)</title><rect x="547.7" y="307.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="550.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/Entry.present (22 samples, 0.03%)</title><rect x="547.7" y="291.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.7" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.replication.Entry (14 samples, 0.02%)</title><rect x="547.7" y="275.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="550.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (20 samples, 0.03%)</title><rect x="548.1" y="339.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="551.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (20 samples, 0.03%)</title><rect x="548.1" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="551.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$420/1846817389.accept (20 samples, 0.03%)</title><rect x="548.1" y="307.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="551.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (20 samples, 0.03%)</title><rect x="548.1" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (20 samples, 0.03%)</title><rect x="548.1" y="275.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (20 samples, 0.03%)</title><rect x="548.1" y="259.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="551.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (20 samples, 0.03%)</title><rect x="548.1" y="243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="551.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$428/1182523009.apply (20 samples, 0.03%)</title><rect x="548.1" y="227.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="551.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (20 samples, 0.03%)</title><rect x="548.1" y="211.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="551.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (20 samples, 0.03%)</title><rect x="548.1" y="195.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="551.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (25 samples, 0.04%)</title><rect x="548.6" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="551.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (25 samples, 0.04%)</title><rect x="548.6" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="551.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (25 samples, 0.04%)</title><rect x="548.6" y="403.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="551.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (25 samples, 0.04%)</title><rect x="548.6" y="387.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="551.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (25 samples, 0.04%)</title><rect x="548.6" y="371.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="551.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (25 samples, 0.04%)</title><rect x="548.6" y="355.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="551.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (25 samples, 0.04%)</title><rect x="548.6" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="551.6" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (18 samples, 0.03%)</title><rect x="548.7" y="323.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.7" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.03%)</title><rect x="548.7" y="307.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.7" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.03%)</title><rect x="548.7" y="291.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="551.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (108 samples, 0.17%)</title><rect x="549.1" y="691.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (108 samples, 0.17%)</title><rect x="549.1" y="675.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (108 samples, 0.17%)</title><rect x="549.1" y="659.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="552.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (108 samples, 0.17%)</title><rect x="549.1" y="643.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="552.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (108 samples, 0.17%)</title><rect x="549.1" y="627.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="552.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (108 samples, 0.17%)</title><rect x="549.1" y="611.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (108 samples, 0.17%)</title><rect x="549.1" y="595.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="552.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (108 samples, 0.17%)</title><rect x="549.1" y="579.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="552.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (108 samples, 0.17%)</title><rect x="549.1" y="563.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (108 samples, 0.17%)</title><rect x="549.1" y="547.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (108 samples, 0.17%)</title><rect x="549.1" y="531.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="552.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (108 samples, 0.17%)</title><rect x="549.1" y="515.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (108 samples, 0.17%)</title><rect x="549.1" y="499.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (108 samples, 0.17%)</title><rect x="549.1" y="483.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (108 samples, 0.17%)</title><rect x="549.1" y="467.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (108 samples, 0.17%)</title><rect x="549.1" y="451.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (108 samples, 0.17%)</title><rect x="549.1" y="435.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="552.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (2,432 samples, 3.80%)</title><rect x="551.1" y="691.0" width="44.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.1" y="702.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (67 samples, 0.10%)</title><rect x="551.1" y="675.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.10%)</title><rect x="551.1" y="659.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="554.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$325/336932547.get$Lambda (33 samples, 0.05%)</title><rect x="551.1" y="643.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="554.1" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$325 (33 samples, 0.05%)</title><rect x="551.1" y="627.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="554.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$334/1005389195.get$Lambda (34 samples, 0.05%)</title><rect x="551.7" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="554.7" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$334 (34 samples, 0.05%)</title><rect x="551.7" y="627.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="554.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/558216562.linkToTargetMethod (50 samples, 0.08%)</title><rect x="552.4" y="675.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (50 samples, 0.08%)</title><rect x="552.4" y="659.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$328/1363851879.get$Lambda (50 samples, 0.08%)</title><rect x="552.4" y="643.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.4" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$328 (50 samples, 0.08%)</title><rect x="552.4" y="627.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="555.4" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (447 samples, 0.70%)</title><rect x="553.3" y="675.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="556.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$329/591297947.accept (378 samples, 0.59%)</title><rect x="553.3" y="659.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (378 samples, 0.59%)</title><rect x="553.3" y="643.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="556.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (378 samples, 0.59%)</title><rect x="553.3" y="627.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="556.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (378 samples, 0.59%)</title><rect x="553.3" y="611.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="556.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (378 samples, 0.59%)</title><rect x="553.3" y="595.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="556.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (378 samples, 0.59%)</title><rect x="553.3" y="579.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="556.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (378 samples, 0.59%)</title><rect x="553.3" y="563.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="556.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (378 samples, 0.59%)</title><rect x="553.3" y="547.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="556.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (378 samples, 0.59%)</title><rect x="553.3" y="531.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="556.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (378 samples, 0.59%)</title><rect x="553.3" y="515.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="556.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$242/950557252.run (378 samples, 0.59%)</title><rect x="553.3" y="499.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="556.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (378 samples, 0.59%)</title><rect x="553.3" y="483.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (44 samples, 0.07%)</title><rect x="553.3" y="467.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="556.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (44 samples, 0.07%)</title><rect x="553.3" y="451.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="556.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (44 samples, 0.07%)</title><rect x="553.3" y="435.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="556.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (44 samples, 0.07%)</title><rect x="553.3" y="419.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="556.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (44 samples, 0.07%)</title><rect x="553.3" y="403.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="556.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (44 samples, 0.07%)</title><rect x="553.3" y="387.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="556.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (44 samples, 0.07%)</title><rect x="553.3" y="371.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.3" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (44 samples, 0.07%)</title><rect x="553.3" y="355.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="556.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (27 samples, 0.04%)</title><rect x="554.1" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="557.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.04%)</title><rect x="554.1" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="557.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.04%)</title><rect x="554.1" y="435.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$353/182948253.get$Lambda (27 samples, 0.04%)</title><rect x="554.1" y="419.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="557.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$353 (27 samples, 0.04%)</title><rect x="554.1" y="403.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="557.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (307 samples, 0.48%)</title><rect x="554.6" y="467.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="557.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (152 samples, 0.24%)</title><rect x="554.6" y="451.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="557.6" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (97 samples, 0.15%)</title><rect x="554.6" y="435.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="557.6" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (97 samples, 0.15%)</title><rect x="554.6" y="419.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="557.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (55 samples, 0.09%)</title><rect x="556.4" y="435.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.4" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (55 samples, 0.09%)</title><rect x="556.4" y="419.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="559.4" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (55 samples, 0.09%)</title><rect x="556.4" y="403.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="559.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (155 samples, 0.24%)</title><rect x="557.4" y="451.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="560.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$234/991350063.get (155 samples, 0.24%)</title><rect x="557.4" y="435.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="560.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (155 samples, 0.24%)</title><rect x="557.4" y="419.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.4" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (155 samples, 0.24%)</title><rect x="557.4" y="403.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="560.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (155 samples, 0.24%)</title><rect x="557.4" y="387.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="560.4" y="398.0"></text>
</g>
<g>
<title>byte[] (152 samples, 0.24%)</title><rect x="557.4" y="371.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="560.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$336/1064311059.accept (69 samples, 0.11%)</title><rect x="560.3" y="659.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (69 samples, 0.11%)</title><rect x="560.3" y="643.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="563.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$328/1363851879.run (69 samples, 0.11%)</title><rect x="560.3" y="627.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="563.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (69 samples, 0.11%)</title><rect x="560.3" y="611.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="563.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (69 samples, 0.11%)</title><rect x="560.3" y="595.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (69 samples, 0.11%)</title><rect x="560.3" y="579.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (69 samples, 0.11%)</title><rect x="560.3" y="563.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.3" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (69 samples, 0.11%)</title><rect x="560.3" y="547.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="563.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (537 samples, 0.84%)</title><rect x="561.5" y="675.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="564.5" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (537 samples, 0.84%)</title><rect x="561.5" y="659.0" width="9.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="564.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (91 samples, 0.14%)</title><rect x="571.4" y="675.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (43 samples, 0.07%)</title><rect x="571.4" y="659.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (43 samples, 0.07%)</title><rect x="571.4" y="643.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="574.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (43 samples, 0.07%)</title><rect x="571.4" y="627.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="574.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (43 samples, 0.07%)</title><rect x="571.4" y="611.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.4" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (43 samples, 0.07%)</title><rect x="571.4" y="595.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="574.4" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (43 samples, 0.07%)</title><rect x="571.4" y="579.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="574.4" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (43 samples, 0.07%)</title><rect x="571.4" y="563.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="574.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (48 samples, 0.08%)</title><rect x="572.2" y="659.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="575.2" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (48 samples, 0.08%)</title><rect x="572.2" y="643.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="575.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (172 samples, 0.27%)</title><rect x="573.1" y="675.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="576.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$250/1665419686.run (113 samples, 0.18%)</title><rect x="573.1" y="659.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="576.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (113 samples, 0.18%)</title><rect x="573.1" y="643.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (113 samples, 0.18%)</title><rect x="573.1" y="627.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="576.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (113 samples, 0.18%)</title><rect x="573.1" y="611.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (113 samples, 0.18%)</title><rect x="573.1" y="595.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="576.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (113 samples, 0.18%)</title><rect x="573.1" y="579.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="576.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$242/950557252.run (113 samples, 0.18%)</title><rect x="573.1" y="563.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (113 samples, 0.18%)</title><rect x="573.1" y="547.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="576.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (113 samples, 0.18%)</title><rect x="573.1" y="531.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="576.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (113 samples, 0.18%)</title><rect x="573.1" y="515.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="576.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (112 samples, 0.18%)</title><rect x="573.1" y="499.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="576.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (112 samples, 0.18%)</title><rect x="573.1" y="483.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="576.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (112 samples, 0.18%)</title><rect x="573.1" y="467.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="576.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/116669570.linkToTargetMethod (77 samples, 0.12%)</title><rect x="573.1" y="451.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="576.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/454884231.invoke (77 samples, 0.12%)</title><rect x="573.1" y="435.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (77 samples, 0.12%)</title><rect x="573.1" y="419.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="576.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (77 samples, 0.12%)</title><rect x="573.1" y="403.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="576.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (77 samples, 0.12%)</title><rect x="573.1" y="387.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="576.1" y="398.0"></text>
</g>
<g>
<title>byte[] (77 samples, 0.12%)</title><rect x="573.1" y="371.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="576.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (35 samples, 0.05%)</title><rect x="574.5" y="451.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.05%)</title><rect x="574.5" y="435.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="577.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.05%)</title><rect x="574.5" y="419.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="577.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$353/182948253.get$Lambda (35 samples, 0.05%)</title><rect x="574.5" y="403.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="577.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$353 (35 samples, 0.05%)</title><rect x="574.5" y="387.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="577.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$260/374484389.run (59 samples, 0.09%)</title><rect x="575.2" y="659.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="578.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (59 samples, 0.09%)</title><rect x="575.2" y="643.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.09%)</title><rect x="575.2" y="627.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="578.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.09%)</title><rect x="575.2" y="611.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$344/2115454959.get$Lambda (57 samples, 0.09%)</title><rect x="575.2" y="595.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$344 (57 samples, 0.09%)</title><rect x="575.2" y="579.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="578.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (521 samples, 0.81%)</title><rect x="576.3" y="675.0" width="9.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="579.3" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (140 samples, 0.22%)</title><rect x="576.3" y="659.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="579.3" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (140 samples, 0.22%)</title><rect x="576.3" y="643.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="579.3" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (140 samples, 0.22%)</title><rect x="576.3" y="627.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="579.3" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (140 samples, 0.22%)</title><rect x="576.3" y="611.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="579.3" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (140 samples, 0.22%)</title><rect x="576.3" y="595.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="579.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (381 samples, 0.60%)</title><rect x="578.9" y="659.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="581.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (81 samples, 0.13%)</title><rect x="578.9" y="643.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="581.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (81 samples, 0.13%)</title><rect x="578.9" y="627.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="581.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$437/211809538.get$Lambda (81 samples, 0.13%)</title><rect x="578.9" y="611.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$437 (81 samples, 0.13%)</title><rect x="578.9" y="595.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="581.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (300 samples, 0.47%)</title><rect x="580.4" y="643.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="583.4" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (124 samples, 0.19%)</title><rect x="580.4" y="627.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="583.4" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (176 samples, 0.28%)</title><rect x="582.6" y="627.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.6" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (176 samples, 0.28%)</title><rect x="582.6" y="611.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="585.6" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (176 samples, 0.28%)</title><rect x="582.6" y="595.0" width="3.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="585.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (361 samples, 0.56%)</title><rect x="585.9" y="675.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.05%)</title><rect x="585.9" y="659.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="588.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.05%)</title><rect x="585.9" y="643.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="588.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$324/1343189537.get$Lambda (34 samples, 0.05%)</title><rect x="585.9" y="627.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$324 (34 samples, 0.05%)</title><rect x="585.9" y="611.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="588.9" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (193 samples, 0.30%)</title><rect x="586.5" y="659.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (76 samples, 0.12%)</title><rect x="586.5" y="643.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="589.5" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (76 samples, 0.12%)</title><rect x="586.5" y="627.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="589.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (117 samples, 0.18%)</title><rect x="587.9" y="643.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="590.9" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (117 samples, 0.18%)</title><rect x="587.9" y="627.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="590.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (134 samples, 0.21%)</title><rect x="590.1" y="659.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.1" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (134 samples, 0.21%)</title><rect x="590.1" y="643.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="593.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (92 samples, 0.14%)</title><rect x="592.5" y="675.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="595.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (92 samples, 0.14%)</title><rect x="592.5" y="659.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="595.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (92 samples, 0.14%)</title><rect x="592.5" y="643.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="595.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (92 samples, 0.14%)</title><rect x="592.5" y="627.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="595.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (46 samples, 0.07%)</title><rect x="592.5" y="611.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.5" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (46 samples, 0.07%)</title><rect x="592.5" y="595.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="595.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (46 samples, 0.07%)</title><rect x="593.4" y="611.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="596.4" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (46 samples, 0.07%)</title><rect x="593.4" y="595.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="596.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (46 samples, 0.07%)</title><rect x="593.4" y="579.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="596.4" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (46 samples, 0.07%)</title><rect x="593.4" y="563.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.4" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (46 samples, 0.07%)</title><rect x="593.4" y="547.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="596.4" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (46 samples, 0.07%)</title><rect x="593.4" y="531.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="596.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (46 samples, 0.07%)</title><rect x="594.2" y="675.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="597.2" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (46 samples, 0.07%)</title><rect x="594.2" y="659.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="597.2" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (46 samples, 0.07%)</title><rect x="594.2" y="643.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (46 samples, 0.07%)</title><rect x="594.2" y="627.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.2" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (45 samples, 0.07%)</title><rect x="594.2" y="611.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="597.2" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (45 samples, 0.07%)</title><rect x="594.2" y="595.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="597.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (48 samples, 0.08%)</title><rect x="595.1" y="675.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="598.1" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (48 samples, 0.08%)</title><rect x="595.1" y="659.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.1" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (48 samples, 0.08%)</title><rect x="595.1" y="643.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="598.1" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (48 samples, 0.08%)</title><rect x="595.1" y="627.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="598.1" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (32,213 samples, 50.34%)</title><rect x="596.0" y="691.0" width="594.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="599.0" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (361 samples, 0.56%)</title><rect x="596.0" y="675.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="599.0" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (361 samples, 0.56%)</title><rect x="596.0" y="659.0" width="6.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="599.0" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (31,852 samples, 49.78%)</title><rect x="602.6" y="675.0" width="587.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="605.6" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (31,852 samples, 49.78%)</title><rect x="602.6" y="659.0" width="587.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.6" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (31,852 samples, 49.78%)</title><rect x="602.6" y="643.0" width="587.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.6" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (15,877 samples, 24.81%)</title><rect x="602.6" y="627.0" width="292.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.6" y="638.0">one/nio/http/HttpSession.handleParsedRe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (15,877 samples, 24.81%)</title><rect x="602.6" y="611.0" width="292.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="605.6" y="622.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (14,677 samples, 22.94%)</title><rect x="602.6" y="595.0" width="270.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="605.6" y="606.0">RequestHandler1_response.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1,008 samples, 1.58%)</title><rect x="602.6" y="579.0" width="18.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,008 samples, 1.58%)</title><rect x="602.6" y="563.0" width="18.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,008 samples, 1.58%)</title><rect x="602.6" y="547.0" width="18.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="605.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,008 samples, 1.58%)</title><rect x="602.6" y="531.0" width="18.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="605.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (420 samples, 0.66%)</title><rect x="602.6" y="515.0" width="7.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="605.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (588 samples, 0.92%)</title><rect x="610.4" y="515.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.4" y="526.0"></text>
</g>
<g>
<title>byte[] (588 samples, 0.92%)</title><rect x="610.4" y="499.0" width="10.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="613.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (13,669 samples, 21.36%)</title><rect x="621.2" y="579.0" width="252.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="624.2" y="590.0">ru/mail/polis/service/mrsandman5/S..</text>
</g>
<g>
<title>java/lang/String.getBytes (524 samples, 0.82%)</title><rect x="621.2" y="563.0" width="9.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="624.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (524 samples, 0.82%)</title><rect x="621.2" y="547.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="624.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (524 samples, 0.82%)</title><rect x="621.2" y="531.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="624.2" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (524 samples, 0.82%)</title><rect x="621.2" y="515.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.2" y="526.0"></text>
</g>
<g>
<title>byte[] (524 samples, 0.82%)</title><rect x="621.2" y="499.0" width="9.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="624.2" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (632 samples, 0.99%)</title><rect x="630.9" y="563.0" width="11.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="633.9" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (632 samples, 0.99%)</title><rect x="630.9" y="547.0" width="11.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.9" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (632 samples, 0.99%)</title><rect x="630.9" y="531.0" width="11.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="633.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (981 samples, 1.53%)</title><rect x="642.5" y="563.0" width="18.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (981 samples, 1.53%)</title><rect x="642.5" y="547.0" width="18.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="645.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (981 samples, 1.53%)</title><rect x="642.5" y="531.0" width="18.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (552 samples, 0.86%)</title><rect x="642.5" y="515.0" width="10.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="645.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (429 samples, 0.67%)</title><rect x="652.7" y="515.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="655.7" y="526.0"></text>
</g>
<g>
<title>byte[] (429 samples, 0.67%)</title><rect x="652.7" y="499.0" width="7.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="655.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.replicasGet (8,619 samples, 13.47%)</title><rect x="660.6" y="563.0" width="159.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="663.6" y="574.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>java.util.ArrayList (17 samples, 0.03%)</title><rect x="660.6" y="547.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="663.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.06%)</title><rect x="660.9" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.06%)</title><rect x="660.9" y="531.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="663.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$444/142104323.get$Lambda (37 samples, 0.06%)</title><rect x="660.9" y="515.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.9" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$444 (37 samples, 0.06%)</title><rect x="660.9" y="499.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="663.9" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (33 samples, 0.05%)</title><rect x="661.6" y="547.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="664.6" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.05%)</title><rect x="661.6" y="531.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="664.6" y="542.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (71 samples, 0.11%)</title><rect x="662.2" y="547.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="665.2" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (60 samples, 0.09%)</title><rect x="662.2" y="531.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="665.2" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (60 samples, 0.09%)</title><rect x="662.2" y="515.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="665.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (55 samples, 0.09%)</title><rect x="663.5" y="547.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (55 samples, 0.09%)</title><rect x="663.5" y="531.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="666.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (33 samples, 0.05%)</title><rect x="663.5" y="515.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="666.5" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (22 samples, 0.03%)</title><rect x="664.1" y="515.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="667.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (254 samples, 0.40%)</title><rect x="664.6" y="547.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="667.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (254 samples, 0.40%)</title><rect x="664.6" y="531.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="667.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (149 samples, 0.23%)</title><rect x="664.6" y="515.0" width="2.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="667.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (32 samples, 0.05%)</title><rect x="667.3" y="515.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="670.3" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (32 samples, 0.05%)</title><rect x="667.3" y="499.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="670.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (73 samples, 0.11%)</title><rect x="667.9" y="515.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (73 samples, 0.11%)</title><rect x="667.9" y="499.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (73 samples, 0.11%)</title><rect x="667.9" y="483.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="670.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (4,393 samples, 6.87%)</title><rect x="669.2" y="547.0" width="81.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="672.2" y="558.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,393 samples, 6.87%)</title><rect x="669.2" y="531.0" width="81.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="672.2" y="542.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,393 samples, 6.87%)</title><rect x="669.2" y="515.0" width="81.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="672.2" y="526.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,393 samples, 6.87%)</title><rect x="669.2" y="499.0" width="81.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="672.2" y="510.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.05%)</title><rect x="669.2" y="483.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="672.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.05%)</title><rect x="669.2" y="467.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="672.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$177/1623483085.get$Lambda (31 samples, 0.05%)</title><rect x="669.2" y="451.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="672.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$177 (31 samples, 0.05%)</title><rect x="669.2" y="435.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="672.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (170 samples, 0.27%)</title><rect x="669.8" y="483.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="672.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (170 samples, 0.27%)</title><rect x="669.8" y="467.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (108 samples, 0.17%)</title><rect x="669.8" y="451.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="672.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (62 samples, 0.10%)</title><rect x="671.8" y="451.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="674.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (62 samples, 0.10%)</title><rect x="671.8" y="435.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="674.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (62 samples, 0.10%)</title><rect x="671.8" y="419.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="674.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (156 samples, 0.24%)</title><rect x="672.9" y="483.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="675.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (156 samples, 0.24%)</title><rect x="672.9" y="467.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="675.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (90 samples, 0.14%)</title><rect x="672.9" y="451.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="675.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (66 samples, 0.10%)</title><rect x="674.6" y="451.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (66 samples, 0.10%)</title><rect x="674.6" y="435.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (66 samples, 0.10%)</title><rect x="674.6" y="419.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="677.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (115 samples, 0.18%)</title><rect x="675.8" y="483.0" width="2.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="678.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (217 samples, 0.34%)</title><rect x="677.9" y="483.0" width="4.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="680.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (2,213 samples, 3.46%)</title><rect x="681.9" y="483.0" width="40.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.9" y="494.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (253 samples, 0.40%)</title><rect x="681.9" y="467.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="684.9" y="478.0"></text>
</g>
<g>
<title>java/util/Collection.stream (202 samples, 0.32%)</title><rect x="681.9" y="451.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="684.9" y="462.0"></text>
</g>
<g>
<title>java/util/List.spliterator (73 samples, 0.11%)</title><rect x="681.9" y="435.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="684.9" y="446.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (73 samples, 0.11%)</title><rect x="681.9" y="419.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="684.9" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (129 samples, 0.20%)</title><rect x="683.3" y="435.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="686.3" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (129 samples, 0.20%)</title><rect x="683.3" y="419.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="686.3" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (51 samples, 0.08%)</title><rect x="685.7" y="451.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="688.7" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (51 samples, 0.08%)</title><rect x="685.7" y="435.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="688.7" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (51 samples, 0.08%)</title><rect x="685.7" y="419.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="688.7" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$60/550302731.get (51 samples, 0.08%)</title><rect x="685.7" y="403.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="688.7" y="414.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (51 samples, 0.08%)</title><rect x="685.7" y="387.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="688.7" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (866 samples, 1.35%)</title><rect x="686.6" y="467.0" width="16.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="689.6" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (866 samples, 1.35%)</title><rect x="686.6" y="451.0" width="16.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="689.6" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (31 samples, 0.05%)</title><rect x="686.6" y="435.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="689.6" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (51 samples, 0.08%)</title><rect x="687.2" y="435.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="690.2" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (94 samples, 0.15%)</title><rect x="688.1" y="435.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="691.1" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (39 samples, 0.06%)</title><rect x="689.9" y="435.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="692.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (81 samples, 0.13%)</title><rect x="690.6" y="435.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="693.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (81 samples, 0.13%)</title><rect x="690.6" y="419.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="693.6" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.get$Lambda (81 samples, 0.13%)</title><rect x="690.6" y="403.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="693.6" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$131 (81 samples, 0.13%)</title><rect x="690.6" y="387.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="693.6" y="398.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (388 samples, 0.61%)</title><rect x="692.1" y="435.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.1" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (388 samples, 0.61%)</title><rect x="692.1" y="419.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.1" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.accept (388 samples, 0.61%)</title><rect x="692.1" y="403.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.1" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (388 samples, 0.61%)</title><rect x="692.1" y="387.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.1" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (117 samples, 0.18%)</title><rect x="692.1" y="371.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1026326437.accept (117 samples, 0.18%)</title><rect x="692.1" y="355.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="695.1" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (117 samples, 0.18%)</title><rect x="692.1" y="339.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="695.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (117 samples, 0.18%)</title><rect x="692.1" y="323.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.1" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (117 samples, 0.18%)</title><rect x="692.1" y="307.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="695.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (117 samples, 0.18%)</title><rect x="692.1" y="291.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="695.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (117 samples, 0.18%)</title><rect x="692.1" y="275.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.1" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (117 samples, 0.18%)</title><rect x="692.1" y="259.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.1" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (117 samples, 0.18%)</title><rect x="692.1" y="243.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="695.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.08%)</title><rect x="694.2" y="371.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="697.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.08%)</title><rect x="694.2" y="355.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.2" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1026326437.get$Lambda (53 samples, 0.08%)</title><rect x="694.2" y="339.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.2" y="350.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$141 (53 samples, 0.08%)</title><rect x="694.2" y="323.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="697.2" y="334.0"></text>
</g>
<g>
<title>java/util/List.copyOf (114 samples, 0.18%)</title><rect x="695.2" y="371.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="698.2" y="382.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (114 samples, 0.18%)</title><rect x="695.2" y="355.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="698.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (56 samples, 0.09%)</title><rect x="695.2" y="339.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="698.2" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (56 samples, 0.09%)</title><rect x="695.2" y="323.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="698.2" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (56 samples, 0.09%)</title><rect x="695.2" y="307.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="698.2" y="318.0"></text>
</g>
<g>
<title>java/util/List.of (58 samples, 0.09%)</title><rect x="696.2" y="339.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.2" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (58 samples, 0.09%)</title><rect x="696.2" y="323.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="699.2" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (104 samples, 0.16%)</title><rect x="697.3" y="371.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="700.3" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (104 samples, 0.16%)</title><rect x="697.3" y="355.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="700.3" y="366.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (61 samples, 0.10%)</title><rect x="699.2" y="435.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.2" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (61 samples, 0.10%)</title><rect x="699.2" y="419.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="702.2" y="430.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (121 samples, 0.19%)</title><rect x="700.3" y="435.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.3" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (121 samples, 0.19%)</title><rect x="700.3" y="419.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="703.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (26 samples, 0.04%)</title><rect x="702.6" y="467.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="705.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (788 samples, 1.23%)</title><rect x="703.1" y="467.0" width="14.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.1" y="478.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (788 samples, 1.23%)</title><rect x="703.1" y="451.0" width="14.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="706.1" y="462.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (719 samples, 1.12%)</title><rect x="703.1" y="435.0" width="13.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="706.1" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (719 samples, 1.12%)</title><rect x="703.1" y="419.0" width="13.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.1" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (719 samples, 1.12%)</title><rect x="703.1" y="403.0" width="13.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="706.1" y="414.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (139 samples, 0.22%)</title><rect x="703.1" y="387.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="706.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (211 samples, 0.33%)</title><rect x="705.6" y="387.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.6" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (211 samples, 0.33%)</title><rect x="705.6" y="371.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="708.6" y="382.0"></text>
</g>
<g>
<title>byte[] (211 samples, 0.33%)</title><rect x="705.6" y="355.0" width="3.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="708.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (369 samples, 0.58%)</title><rect x="709.5" y="387.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="712.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (369 samples, 0.58%)</title><rect x="709.5" y="371.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="712.5" y="382.0"></text>
</g>
<g>
<title>java.lang.String (154 samples, 0.24%)</title><rect x="709.5" y="355.0" width="2.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="712.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (215 samples, 0.34%)</title><rect x="712.3" y="355.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.3" y="366.0"></text>
</g>
<g>
<title>byte[] (215 samples, 0.34%)</title><rect x="712.3" y="339.0" width="4.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="715.3" y="350.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (69 samples, 0.11%)</title><rect x="716.3" y="435.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="719.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (94 samples, 0.15%)</title><rect x="717.6" y="467.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="720.6" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (94 samples, 0.15%)</title><rect x="717.6" y="451.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="720.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (186 samples, 0.29%)</title><rect x="719.3" y="467.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="722.3" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (62 samples, 0.10%)</title><rect x="719.3" y="451.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="722.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (46 samples, 0.07%)</title><rect x="720.5" y="451.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="723.5" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (46 samples, 0.07%)</title><rect x="720.5" y="435.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="723.5" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (78 samples, 0.12%)</title><rect x="721.3" y="451.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="724.3" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (78 samples, 0.12%)</title><rect x="721.3" y="435.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="724.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (984 samples, 1.54%)</title><rect x="722.8" y="483.0" width="18.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="725.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (42 samples, 0.07%)</title><rect x="722.8" y="467.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="725.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (146 samples, 0.23%)</title><rect x="723.5" y="467.0" width="2.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="726.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (22 samples, 0.03%)</title><rect x="726.2" y="467.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="729.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (22 samples, 0.03%)</title><rect x="726.2" y="451.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="729.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (774 samples, 1.21%)</title><rect x="726.6" y="467.0" width="14.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (774 samples, 1.21%)</title><rect x="726.6" y="451.0" width="14.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="729.6" y="462.0"></text>
</g>
<g>
<title>java.lang.Class[] (76 samples, 0.12%)</title><rect x="726.6" y="435.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="729.6" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (76 samples, 0.12%)</title><rect x="728.0" y="435.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="731.0" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList (78 samples, 0.12%)</title><rect x="729.4" y="435.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="732.4" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (331 samples, 0.52%)</title><rect x="730.9" y="435.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (331 samples, 0.52%)</title><rect x="730.9" y="419.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="733.9" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (331 samples, 0.52%)</title><rect x="730.9" y="403.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.9" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (331 samples, 0.52%)</title><rect x="730.9" y="387.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="733.9" y="398.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (331 samples, 0.52%)</title><rect x="730.9" y="371.0" width="6.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="733.9" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (107 samples, 0.17%)</title><rect x="737.0" y="435.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (107 samples, 0.17%)</title><rect x="737.0" y="419.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (35 samples, 0.05%)</title><rect x="737.0" y="403.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (35 samples, 0.05%)</title><rect x="737.0" y="387.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="740.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (72 samples, 0.11%)</title><rect x="737.6" y="403.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="740.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (72 samples, 0.11%)</title><rect x="737.6" y="387.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="740.6" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (106 samples, 0.17%)</title><rect x="738.9" y="435.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.9" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (106 samples, 0.17%)</title><rect x="738.9" y="419.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="741.9" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (106 samples, 0.17%)</title><rect x="738.9" y="403.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="741.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (507 samples, 0.79%)</title><rect x="740.9" y="483.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="743.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (51 samples, 0.08%)</title><rect x="740.9" y="467.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="743.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (51 samples, 0.08%)</title><rect x="740.9" y="451.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="743.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (82 samples, 0.13%)</title><rect x="741.8" y="467.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="744.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (374 samples, 0.58%)</title><rect x="743.3" y="467.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (62 samples, 0.10%)</title><rect x="743.3" y="451.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="746.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (62 samples, 0.10%)</title><rect x="743.3" y="435.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="746.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$161/701954098.get$Lambda (36 samples, 0.06%)</title><rect x="743.3" y="419.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="746.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$161 (36 samples, 0.06%)</title><rect x="743.3" y="403.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="746.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$167/1947942813.get$Lambda (26 samples, 0.04%)</title><rect x="744.0" y="419.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="747.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$167 (26 samples, 0.04%)</title><rect x="744.0" y="403.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="747.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (312 samples, 0.49%)</title><rect x="744.5" y="451.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (312 samples, 0.49%)</title><rect x="744.5" y="435.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="747.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (182 samples, 0.28%)</title><rect x="744.5" y="419.0" width="3.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="747.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (130 samples, 0.20%)</title><rect x="747.8" y="419.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (130 samples, 0.20%)</title><rect x="747.8" y="403.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (130 samples, 0.20%)</title><rect x="747.8" y="387.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="750.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (976 samples, 1.53%)</title><rect x="750.2" y="547.0" width="18.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="753.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (92 samples, 0.14%)</title><rect x="750.2" y="531.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="753.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (884 samples, 1.38%)</title><rect x="751.9" y="531.0" width="16.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.9" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (837 samples, 1.31%)</title><rect x="751.9" y="515.0" width="15.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="754.9" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (837 samples, 1.31%)</title><rect x="751.9" y="499.0" width="15.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="754.9" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (27 samples, 0.04%)</title><rect x="751.9" y="483.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="754.9" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (49 samples, 0.08%)</title><rect x="752.4" y="483.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="755.4" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (110 samples, 0.17%)</title><rect x="753.3" y="483.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="756.3" y="494.0"></text>
</g>
<g>
<title>java.util.TreeSet (37 samples, 0.06%)</title><rect x="755.4" y="483.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="758.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 0.13%)</title><rect x="756.1" y="483.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="759.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.13%)</title><rect x="756.1" y="467.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.1" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.get$Lambda (82 samples, 0.13%)</title><rect x="756.1" y="451.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="759.1" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$131 (82 samples, 0.13%)</title><rect x="756.1" y="435.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="759.1" y="446.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (68 samples, 0.11%)</title><rect x="757.6" y="483.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="760.6" y="494.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (68 samples, 0.11%)</title><rect x="757.6" y="467.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="760.6" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (350 samples, 0.55%)</title><rect x="758.8" y="483.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="761.8" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$131/176766706.accept (350 samples, 0.55%)</title><rect x="758.8" y="467.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="761.8" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (350 samples, 0.55%)</title><rect x="758.8" y="451.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="761.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.07%)</title><rect x="758.8" y="435.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="761.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.07%)</title><rect x="758.8" y="419.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="761.8" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1026326437.get$Lambda (44 samples, 0.07%)</title><rect x="758.8" y="403.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.8" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$141 (44 samples, 0.07%)</title><rect x="758.8" y="387.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="761.8" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (99 samples, 0.15%)</title><rect x="759.6" y="435.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="762.6" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1026326437.accept (99 samples, 0.15%)</title><rect x="759.6" y="419.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="762.6" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (99 samples, 0.15%)</title><rect x="759.6" y="403.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="762.6" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (99 samples, 0.15%)</title><rect x="759.6" y="387.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="762.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (99 samples, 0.15%)</title><rect x="759.6" y="371.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.6" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (99 samples, 0.15%)</title><rect x="759.6" y="355.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (99 samples, 0.15%)</title><rect x="759.6" y="339.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="762.6" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (99 samples, 0.15%)</title><rect x="759.6" y="323.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.6" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (99 samples, 0.15%)</title><rect x="759.6" y="307.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="762.6" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (113 samples, 0.18%)</title><rect x="761.5" y="435.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="764.5" y="446.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (113 samples, 0.18%)</title><rect x="761.5" y="419.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="764.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (52 samples, 0.08%)</title><rect x="761.5" y="403.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="764.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (52 samples, 0.08%)</title><rect x="761.5" y="387.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (52 samples, 0.08%)</title><rect x="761.5" y="371.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="764.5" y="382.0"></text>
</g>
<g>
<title>java/util/List.of (61 samples, 0.10%)</title><rect x="762.4" y="403.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="765.4" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (61 samples, 0.10%)</title><rect x="762.4" y="387.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="765.4" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (94 samples, 0.15%)</title><rect x="763.5" y="435.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="766.5" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (94 samples, 0.15%)</title><rect x="763.5" y="419.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="766.5" y="430.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (114 samples, 0.18%)</title><rect x="765.3" y="483.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="768.3" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (114 samples, 0.18%)</title><rect x="765.3" y="467.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="768.3" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (47 samples, 0.07%)</title><rect x="767.4" y="515.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.4" y="526.0"></text>
</g>
<g>
<title>java/util/Optional.of (47 samples, 0.07%)</title><rect x="767.4" y="499.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="770.4" y="510.0"></text>
</g>
<g>
<title>java.util.Optional (47 samples, 0.07%)</title><rect x="767.4" y="483.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="770.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/clustering/ConsistentHashingTopology.replicasFor (783 samples, 1.22%)</title><rect x="768.2" y="547.0" width="14.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="771.2" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (279 samples, 0.44%)</title><rect x="768.2" y="531.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="771.2" y="542.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (187 samples, 0.29%)</title><rect x="768.2" y="515.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="771.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (187 samples, 0.29%)</title><rect x="768.2" y="499.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.2" y="510.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (74 samples, 0.12%)</title><rect x="768.2" y="483.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="771.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (113 samples, 0.18%)</title><rect x="769.6" y="483.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="772.6" y="494.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (113 samples, 0.18%)</title><rect x="769.6" y="467.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="772.6" y="478.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (113 samples, 0.18%)</title><rect x="769.6" y="451.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="772.6" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (113 samples, 0.18%)</title><rect x="769.6" y="435.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.6" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (64 samples, 0.10%)</title><rect x="769.6" y="419.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="772.6" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (49 samples, 0.08%)</title><rect x="770.8" y="419.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="773.8" y="430.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.08%)</title><rect x="770.8" y="403.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="773.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (92 samples, 0.14%)</title><rect x="771.7" y="515.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="774.7" y="526.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (92 samples, 0.14%)</title><rect x="771.7" y="499.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="774.7" y="510.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.05%)</title><rect x="771.7" y="483.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="774.7" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (57 samples, 0.09%)</title><rect x="772.3" y="483.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="775.3" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (57 samples, 0.09%)</title><rect x="772.3" y="467.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="775.3" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (57 samples, 0.09%)</title><rect x="772.3" y="451.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="775.3" y="462.0"></text>
</g>
<g>
<title>java.util.HashSet (14 samples, 0.02%)</title><rect x="773.4" y="531.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="776.4" y="542.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (22 samples, 0.03%)</title><rect x="773.6" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="776.6" y="542.0"></text>
</g>
<g>
<title>java.lang.Long (22 samples, 0.03%)</title><rect x="773.6" y="515.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="776.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (55 samples, 0.09%)</title><rect x="774.1" y="531.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="777.1" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (55 samples, 0.09%)</title><rect x="774.1" y="515.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="777.1" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (90 samples, 0.14%)</title><rect x="775.1" y="531.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.1" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (27 samples, 0.04%)</title><rect x="775.1" y="515.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="778.1" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (63 samples, 0.10%)</title><rect x="775.6" y="515.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.6" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (37 samples, 0.06%)</title><rect x="775.6" y="499.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="778.6" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (37 samples, 0.06%)</title><rect x="775.6" y="483.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="778.6" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (26 samples, 0.04%)</title><rect x="776.2" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="779.2" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (26 samples, 0.04%)</title><rect x="776.2" y="483.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="779.2" y="494.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (20 samples, 0.03%)</title><rect x="776.7" y="531.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.7" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (20 samples, 0.03%)</title><rect x="776.7" y="515.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="779.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (66 samples, 0.10%)</title><rect x="777.1" y="531.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.1" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap (66 samples, 0.10%)</title><rect x="777.1" y="515.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="780.1" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.add (195 samples, 0.30%)</title><rect x="778.3" y="531.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="781.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.put (195 samples, 0.30%)</title><rect x="778.3" y="515.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="781.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (195 samples, 0.30%)</title><rect x="778.3" y="499.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (102 samples, 0.16%)</title><rect x="778.3" y="483.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="781.3" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (102 samples, 0.16%)</title><rect x="778.3" y="467.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="781.3" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (93 samples, 0.15%)</title><rect x="780.2" y="483.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="783.2" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (93 samples, 0.15%)</title><rect x="780.2" y="467.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="783.2" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (42 samples, 0.07%)</title><rect x="781.9" y="531.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="784.9" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (42 samples, 0.07%)</title><rect x="781.9" y="515.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="784.9" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (42 samples, 0.07%)</title><rect x="781.9" y="499.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="784.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ByteUtils.getWrap (86 samples, 0.13%)</title><rect x="782.7" y="547.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="785.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (30 samples, 0.05%)</title><rect x="782.7" y="531.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="785.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (30 samples, 0.05%)</title><rect x="782.7" y="515.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="785.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (30 samples, 0.05%)</title><rect x="782.7" y="499.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="785.7" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (30 samples, 0.05%)</title><rect x="782.7" y="483.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="785.7" y="494.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.05%)</title><rect x="782.7" y="467.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="785.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (56 samples, 0.09%)</title><rect x="783.2" y="531.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="786.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (56 samples, 0.09%)</title><rect x="783.2" y="515.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.2" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (56 samples, 0.09%)</title><rect x="783.2" y="499.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="786.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FuturesUtils.atLeastAsync (411 samples, 0.64%)</title><rect x="784.3" y="547.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="787.3" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (23 samples, 0.04%)</title><rect x="784.3" y="531.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="787.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (24 samples, 0.04%)</title><rect x="784.7" y="531.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="787.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (30 samples, 0.05%)</title><rect x="785.1" y="531.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="788.1" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (300 samples, 0.47%)</title><rect x="785.7" y="531.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="788.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FuturesUtils$$Lambda$187/449291540.accept (300 samples, 0.47%)</title><rect x="785.7" y="515.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="788.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FuturesUtils.lambda$atLeastAsync$1 (300 samples, 0.47%)</title><rect x="785.7" y="499.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="788.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/380931844.linkToTargetMethod (100 samples, 0.16%)</title><rect x="785.7" y="483.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="788.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/2114684409.invokeStatic (100 samples, 0.16%)</title><rect x="785.7" y="467.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="788.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FuturesUtils$$Lambda$192/574997146.get$Lambda (100 samples, 0.16%)</title><rect x="785.7" y="451.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="788.7" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.utils.FuturesUtils$$Lambda$192 (100 samples, 0.16%)</title><rect x="785.7" y="435.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="788.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (200 samples, 0.31%)</title><rect x="787.5" y="483.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (200 samples, 0.31%)</title><rect x="787.5" y="467.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="790.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (123 samples, 0.19%)</title><rect x="787.5" y="451.0" width="2.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="790.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (18 samples, 0.03%)</title><rect x="789.8" y="451.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (18 samples, 0.03%)</title><rect x="789.8" y="435.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="792.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.09%)</title><rect x="790.1" y="451.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="793.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.09%)</title><rect x="790.1" y="435.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="793.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.09%)</title><rect x="790.1" y="419.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="793.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (34 samples, 0.05%)</title><rect x="791.2" y="531.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.2" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.03%)</title><rect x="791.2" y="515.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="794.2" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (14 samples, 0.02%)</title><rect x="791.6" y="515.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="794.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/ResponseUtils.requestForReplica (1,503 samples, 2.35%)</title><rect x="791.8" y="547.0" width="27.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="794.8" y="558.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (204 samples, 0.32%)</title><rect x="791.8" y="531.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="794.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (204 samples, 0.32%)</title><rect x="791.8" y="515.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1234250905.invoke (204 samples, 0.32%)</title><rect x="791.8" y="499.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (204 samples, 0.32%)</title><rect x="791.8" y="483.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="794.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (49 samples, 0.08%)</title><rect x="791.8" y="467.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="794.8" y="478.0"></text>
</g>
<g>
<title>java.lang.String (49 samples, 0.08%)</title><rect x="791.8" y="451.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="794.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (155 samples, 0.24%)</title><rect x="792.8" y="467.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="795.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (155 samples, 0.24%)</title><rect x="792.8" y="451.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="795.8" y="462.0"></text>
</g>
<g>
<title>byte[] (155 samples, 0.24%)</title><rect x="792.8" y="435.0" width="2.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="795.8" y="446.0"></text>
</g>
<g>
<title>java/net/URI.create (865 samples, 1.35%)</title><rect x="795.6" y="531.0" width="16.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="798.6" y="542.0"></text>
</g>
<g>
<title>java.net.URI (181 samples, 0.28%)</title><rect x="795.6" y="515.0" width="3.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="798.6" y="526.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (684 samples, 1.07%)</title><rect x="798.9" y="515.0" width="12.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="801.9" y="526.0"></text>
</g>
<g>
<title>java.net.URI$Parser (57 samples, 0.09%)</title><rect x="798.9" y="499.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="801.9" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (627 samples, 0.98%)</title><rect x="800.0" y="499.0" width="11.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="803.0" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (93 samples, 0.15%)</title><rect x="800.0" y="483.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="803.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (93 samples, 0.15%)</title><rect x="800.0" y="467.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="803.0" y="478.0"></text>
</g>
<g>
<title>java.lang.String (42 samples, 0.07%)</title><rect x="800.0" y="451.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="803.0" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (51 samples, 0.08%)</title><rect x="800.8" y="451.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="803.8" y="462.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.08%)</title><rect x="800.8" y="435.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="803.8" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (534 samples, 0.83%)</title><rect x="801.7" y="483.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="804.7" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (257 samples, 0.40%)</title><rect x="801.7" y="467.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="804.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (257 samples, 0.40%)</title><rect x="801.7" y="451.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="804.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (126 samples, 0.20%)</title><rect x="801.7" y="435.0" width="2.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="804.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (131 samples, 0.20%)</title><rect x="804.0" y="435.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.0" y="446.0"></text>
</g>
<g>
<title>byte[] (131 samples, 0.20%)</title><rect x="804.0" y="419.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="807.0" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (277 samples, 0.43%)</title><rect x="806.5" y="467.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (146 samples, 0.23%)</title><rect x="806.5" y="451.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (146 samples, 0.23%)</title><rect x="806.5" y="435.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="809.5" y="446.0"></text>
</g>
<g>
<title>java.lang.String (59 samples, 0.09%)</title><rect x="806.5" y="419.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="809.5" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (87 samples, 0.14%)</title><rect x="807.5" y="419.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="810.5" y="430.0"></text>
</g>
<g>
<title>byte[] (87 samples, 0.14%)</title><rect x="807.5" y="403.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="810.5" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (131 samples, 0.20%)</title><rect x="809.1" y="451.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.1" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (131 samples, 0.20%)</title><rect x="809.1" y="435.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="812.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (131 samples, 0.20%)</title><rect x="809.1" y="419.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (131 samples, 0.20%)</title><rect x="809.1" y="403.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="812.1" y="414.0"></text>
</g>
<g>
<title>java.lang.String (47 samples, 0.07%)</title><rect x="809.1" y="387.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="812.1" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (84 samples, 0.13%)</title><rect x="810.0" y="387.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="813.0" y="398.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.13%)</title><rect x="810.0" y="371.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="813.0" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (215 samples, 0.34%)</title><rect x="811.6" y="531.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="814.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (93 samples, 0.15%)</title><rect x="811.6" y="515.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="814.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (122 samples, 0.19%)</title><rect x="813.3" y="515.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="816.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (33 samples, 0.05%)</title><rect x="813.3" y="499.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="816.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (89 samples, 0.14%)</title><rect x="813.9" y="499.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="816.9" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (89 samples, 0.14%)</title><rect x="813.9" y="483.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="816.9" y="494.0"></text>
</g>
<g>
<title>java/time/Duration.ofMillis (46 samples, 0.07%)</title><rect x="815.5" y="531.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="818.5" y="542.0"></text>
</g>
<g>
<title>java/time/Duration.create (46 samples, 0.07%)</title><rect x="815.5" y="515.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.5" y="526.0"></text>
</g>
<g>
<title>java.time.Duration (46 samples, 0.07%)</title><rect x="815.5" y="499.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="818.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (173 samples, 0.27%)</title><rect x="816.4" y="531.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="819.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (173 samples, 0.27%)</title><rect x="816.4" y="515.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (173 samples, 0.27%)</title><rect x="816.4" y="499.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="819.4" y="510.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (173 samples, 0.27%)</title><rect x="816.4" y="483.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="819.4" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (85 samples, 0.13%)</title><rect x="816.4" y="467.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="819.4" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (85 samples, 0.13%)</title><rect x="816.4" y="451.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="819.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$124/371540559.apply (88 samples, 0.14%)</title><rect x="817.9" y="467.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="820.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (88 samples, 0.14%)</title><rect x="817.9" y="451.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="820.9" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (37 samples, 0.06%)</title><rect x="817.9" y="435.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="820.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (51 samples, 0.08%)</title><rect x="818.6" y="435.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="821.6" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (51 samples, 0.08%)</title><rect x="818.6" y="419.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="821.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.respond (1,574 samples, 2.46%)</title><rect x="819.6" y="563.0" width="29.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.6" y="574.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (327 samples, 0.51%)</title><rect x="819.6" y="547.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (327 samples, 0.51%)</title><rect x="819.6" y="531.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$206/2123650476.get$Lambda (327 samples, 0.51%)</title><rect x="819.6" y="515.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.6" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$206 (327 samples, 0.51%)</title><rect x="819.6" y="499.0" width="6.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="822.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,247 samples, 1.95%)</title><rect x="825.6" y="547.0" width="23.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="828.6" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,247 samples, 1.95%)</title><rect x="825.6" y="531.0" width="23.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="828.6" y="542.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (814 samples, 1.27%)</title><rect x="825.6" y="515.0" width="15.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="828.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (433 samples, 0.68%)</title><rect x="840.6" y="515.0" width="8.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="843.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (433 samples, 0.68%)</title><rect x="840.6" y="499.0" width="8.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="843.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/SimpleRequests.get (1,339 samples, 2.09%)</title><rect x="848.6" y="563.0" width="24.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="851.6" y="574.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (327 samples, 0.51%)</title><rect x="848.6" y="547.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (327 samples, 0.51%)</title><rect x="848.6" y="531.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="851.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/replication/SimpleRequests$$Lambda$458/395499714.get$Lambda (327 samples, 0.51%)</title><rect x="848.6" y="515.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="851.6" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.replication.SimpleRequests$$Lambda$458 (327 samples, 0.51%)</title><rect x="848.6" y="499.0" width="6.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="851.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1,012 samples, 1.58%)</title><rect x="854.6" y="547.0" width="18.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="857.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1,012 samples, 1.58%)</title><rect x="854.6" y="531.0" width="18.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="857.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (599 samples, 0.94%)</title><rect x="854.6" y="515.0" width="11.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="857.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (411 samples, 0.64%)</title><rect x="865.7" y="515.0" width="7.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="868.7" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,200 samples, 1.88%)</title><rect x="873.3" y="595.0" width="22.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="876.3" y="606.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (1,200 samples, 1.88%)</title><rect x="873.3" y="579.0" width="22.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="876.3" y="590.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,200 samples, 1.88%)</title><rect x="873.3" y="563.0" width="22.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.3" y="574.0">j..</text>
</g>
<g>
<title>java.lang.String (533 samples, 0.83%)</title><rect x="873.3" y="547.0" width="9.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="876.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (667 samples, 1.04%)</title><rect x="883.1" y="547.0" width="12.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="886.1" y="558.0"></text>
</g>
<g>
<title>byte[] (667 samples, 1.04%)</title><rect x="883.1" y="531.0" width="12.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="886.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,911 samples, 7.67%)</title><rect x="895.4" y="627.0" width="90.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="898.4" y="638.0">one/nio/ht..</text>
</g>
<g>
<title>one.nio.http.Request (722 samples, 1.13%)</title><rect x="895.4" y="611.0" width="13.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="898.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,548 samples, 2.42%)</title><rect x="908.7" y="611.0" width="28.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="911.7" y="622.0">on..</text>
</g>
<g>
<title>java.lang.String[] (1,142 samples, 1.78%)</title><rect x="908.7" y="595.0" width="21.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="911.7" y="606.0">j..</text>
</g>
<g>
<title>java.lang.String[] (406 samples, 0.63%)</title><rect x="929.8" y="595.0" width="7.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="932.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,641 samples, 4.13%)</title><rect x="937.3" y="611.0" width="48.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="940.3" y="622.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,641 samples, 4.13%)</title><rect x="937.3" y="595.0" width="48.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="940.3" y="606.0">one/..</text>
</g>
<g>
<title>char[] (1,424 samples, 2.23%)</title><rect x="937.3" y="579.0" width="26.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="940.3" y="590.0">c..</text>
</g>
<g>
<title>char[] (149 samples, 0.23%)</title><rect x="963.5" y="579.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="966.5" y="590.0"></text>
</g>
<g>
<title>java.lang.String (289 samples, 0.45%)</title><rect x="966.3" y="579.0" width="5.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="969.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (779 samples, 1.22%)</title><rect x="971.6" y="579.0" width="14.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="974.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (779 samples, 1.22%)</title><rect x="971.6" y="563.0" width="14.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="974.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (779 samples, 1.22%)</title><rect x="971.6" y="547.0" width="14.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="974.6" y="558.0"></text>
</g>
<g>
<title>byte[] (779 samples, 1.22%)</title><rect x="971.6" y="531.0" width="14.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="974.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (264 samples, 0.41%)</title><rect x="986.0" y="627.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="989.0" y="638.0"></text>
</g>
<g>
<title>byte[] (264 samples, 0.41%)</title><rect x="986.0" y="611.0" width="4.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="989.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (857 samples, 1.34%)</title><rect x="990.8" y="627.0" width="15.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="993.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (857 samples, 1.34%)</title><rect x="990.8" y="611.0" width="15.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="993.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (857 samples, 1.34%)</title><rect x="990.8" y="595.0" width="15.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="993.8" y="606.0"></text>
</g>
<g>
<title>java.lang.String (409 samples, 0.64%)</title><rect x="990.8" y="579.0" width="7.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="993.8" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (448 samples, 0.70%)</title><rect x="998.4" y="579.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1001.4" y="590.0"></text>
</g>
<g>
<title>byte[] (448 samples, 0.70%)</title><rect x="998.4" y="563.0" width="8.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1001.4" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9,943 samples, 15.54%)</title><rect x="1006.6" y="627.0" width="183.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1009.6" y="638.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (9,943 samples, 15.54%)</title><rect x="1006.6" y="611.0" width="183.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1009.6" y="622.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (3,850 samples, 6.02%)</title><rect x="1006.6" y="595.0" width="71.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1009.6" y="606.0">char[]</text>
</g>
<g>
<title>char[] (870 samples, 1.36%)</title><rect x="1077.6" y="595.0" width="16.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1080.6" y="606.0"></text>
</g>
<g>
<title>java.lang.String (1,869 samples, 2.92%)</title><rect x="1093.7" y="595.0" width="34.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1096.7" y="606.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,354 samples, 5.24%)</title><rect x="1128.1" y="595.0" width="61.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1131.1" y="606.0">java/l..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,354 samples, 5.24%)</title><rect x="1128.1" y="579.0" width="61.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1131.1" y="590.0">java/l..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,354 samples, 5.24%)</title><rect x="1128.1" y="563.0" width="61.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1131.1" y="574.0">java/l..</text>
</g>
<g>
<title>byte[] (3,352 samples, 5.24%)</title><rect x="1128.1" y="547.0" width="61.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1131.1" y="558.0">byte[]</text>
</g>
</g>
</svg>
