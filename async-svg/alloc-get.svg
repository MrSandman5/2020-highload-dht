<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (13,372 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>[JMX server connection timeout 35 tid=7200] (16 samples, 0.12%)</title><rect x="10.0" y="947.0" width="1.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.run (16 samples, 0.12%)</title><rect x="10.0" y="931.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (16 samples, 0.12%)</title><rect x="10.0" y="915.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (16 samples, 0.12%)</title><rect x="10.0" y="899.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1773364394.linkToTargetMethod (16 samples, 0.12%)</title><rect x="10.0" y="883.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1675904620.invoke (16 samples, 0.12%)</title><rect x="10.0" y="867.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.12%)</title><rect x="10.0" y="851.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (16 samples, 0.12%)</title><rect x="10.0" y="835.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (16 samples, 0.12%)</title><rect x="10.0" y="819.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.12%)</title><rect x="10.0" y="803.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=6986] (1,527 samples, 11.42%)</title><rect x="11.4" y="947.0" width="134.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="14.4" y="958.0">[NIO Selector #0 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,527 samples, 11.42%)</title><rect x="11.4" y="931.0" width="134.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.4" y="942.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,526 samples, 11.41%)</title><rect x="11.5" y="915.0" width="134.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.5" y="926.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,526 samples, 11.41%)</title><rect x="11.5" y="899.0" width="134.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.5" y="910.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,526 samples, 11.41%)</title><rect x="11.5" y="883.0" width="134.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.5" y="894.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,515 samples, 11.33%)</title><rect x="11.5" y="867.0" width="133.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.5" y="878.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,515 samples, 11.33%)</title><rect x="11.5" y="851.0" width="133.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.5" y="862.0">one/nio/http/Http..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (1,515 samples, 11.33%)</title><rect x="11.5" y="835.0" width="133.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.5" y="846.0">RequestHandler0_r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.04%)</title><rect x="11.5" y="819.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="14.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.04%)</title><rect x="11.5" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.02%)</title><rect x="11.5" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="14.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.02%)</title><rect x="11.5" y="771.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.5" y="782.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="11.5" y="755.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="14.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.02%)</title><rect x="11.9" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.02%)</title><rect x="11.9" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.02%)</title><rect x="11.9" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.02%)</title><rect x="11.9" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="14.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (1,507 samples, 11.27%)</title><rect x="12.2" y="819.0" width="133.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.2" y="830.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (20 samples, 0.15%)</title><rect x="12.2" y="803.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.2" y="814.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (20 samples, 0.15%)</title><rect x="12.2" y="787.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.2" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (20 samples, 0.15%)</title><rect x="12.2" y="771.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.2" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (20 samples, 0.15%)</title><rect x="12.2" y="755.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.2" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (20 samples, 0.15%)</title><rect x="12.2" y="739.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.2" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (20 samples, 0.15%)</title><rect x="12.2" y="723.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.2" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (20 samples, 0.15%)</title><rect x="12.2" y="707.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.2" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (20 samples, 0.15%)</title><rect x="12.2" y="691.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.2" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (20 samples, 0.15%)</title><rect x="12.2" y="675.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.2" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (6 samples, 0.04%)</title><rect x="12.2" y="659.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.2" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (6 samples, 0.04%)</title><rect x="12.2" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="15.2" y="654.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (6 samples, 0.04%)</title><rect x="12.2" y="627.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.2" y="638.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (6 samples, 0.04%)</title><rect x="12.2" y="611.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.02%)</title><rect x="12.3" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="15.3" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.02%)</title><rect x="12.3" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.3" y="590.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="12.3" y="563.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="15.3" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (14 samples, 0.10%)</title><rect x="12.7" y="659.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.7" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (11 samples, 0.08%)</title><rect x="12.7" y="643.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.7" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (11 samples, 0.08%)</title><rect x="12.7" y="627.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.7" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (3 samples, 0.02%)</title><rect x="12.7" y="611.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.03%)</title><rect x="13.2" y="611.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.2" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.03%)</title><rect x="13.2" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.2" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.03%)</title><rect x="13.2" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="16.2" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.03%)</title><rect x="13.2" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="16.2" y="574.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.03%)</title><rect x="13.2" y="547.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="16.2" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (3 samples, 0.02%)</title><rect x="13.7" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="16.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.02%)</title><rect x="13.7" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="16.7" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.02%)</title><rect x="13.7" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.02%)</title><rect x="13.7" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="16.7" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.02%)</title><rect x="13.7" y="579.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.7" y="590.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="13.7" y="563.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="16.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (1,486 samples, 11.11%)</title><rect x="14.1" y="803.0" width="131.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.1" y="814.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/Response.ok (5 samples, 0.04%)</title><rect x="14.1" y="787.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.03%)</title><rect x="14.1" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,480 samples, 11.07%)</title><rect x="14.5" y="787.0" width="130.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.5" y="798.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (111 samples, 0.83%)</title><rect x="14.5" y="771.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.5" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (111 samples, 0.83%)</title><rect x="14.5" y="755.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.5" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (111 samples, 0.83%)</title><rect x="14.5" y="739.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.5" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (111 samples, 0.83%)</title><rect x="14.5" y="723.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (111 samples, 0.83%)</title><rect x="14.5" y="707.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.5" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (91 samples, 0.68%)</title><rect x="14.5" y="691.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.5" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (49 samples, 0.37%)</title><rect x="14.5" y="675.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.5" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (49 samples, 0.37%)</title><rect x="14.5" y="659.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.5" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (49 samples, 0.37%)</title><rect x="14.5" y="643.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.5" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (49 samples, 0.37%)</title><rect x="14.5" y="627.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (49 samples, 0.37%)</title><rect x="14.5" y="611.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.5" y="622.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (49 samples, 0.37%)</title><rect x="14.5" y="595.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.5" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (49 samples, 0.37%)</title><rect x="14.5" y="579.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (49 samples, 0.37%)</title><rect x="14.5" y="563.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (49 samples, 0.37%)</title><rect x="14.5" y="547.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (49 samples, 0.37%)</title><rect x="14.5" y="531.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.5" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (22 samples, 0.16%)</title><rect x="14.5" y="515.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.5" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (22 samples, 0.16%)</title><rect x="14.5" y="499.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="17.5" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (27 samples, 0.20%)</title><rect x="16.4" y="515.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.4" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.20%)</title><rect x="16.4" y="499.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="19.4" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (42 samples, 0.31%)</title><rect x="18.8" y="675.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.8" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (42 samples, 0.31%)</title><rect x="18.8" y="659.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.8" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (42 samples, 0.31%)</title><rect x="18.8" y="643.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.8" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (42 samples, 0.31%)</title><rect x="18.8" y="627.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.8" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (42 samples, 0.31%)</title><rect x="18.8" y="611.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.8" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (42 samples, 0.31%)</title><rect x="18.8" y="595.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.8" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (30 samples, 0.22%)</title><rect x="18.8" y="579.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="21.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (30 samples, 0.22%)</title><rect x="18.8" y="563.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (30 samples, 0.22%)</title><rect x="18.8" y="547.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (30 samples, 0.22%)</title><rect x="18.8" y="531.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.05%)</title><rect x="18.8" y="515.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.8" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.05%)</title><rect x="18.8" y="499.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="21.8" y="510.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.05%)</title><rect x="18.8" y="483.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="21.8" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (15 samples, 0.11%)</title><rect x="19.4" y="515.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="22.4" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.11%)</title><rect x="19.4" y="499.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="22.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (5 samples, 0.04%)</title><rect x="21.0" y="515.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.04%)</title><rect x="21.0" y="499.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.0" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="21.0" y="483.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.0" y="494.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.04%)</title><rect x="21.0" y="467.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="24.0" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (12 samples, 0.09%)</title><rect x="21.5" y="579.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.5" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (12 samples, 0.09%)</title><rect x="21.5" y="563.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (12 samples, 0.09%)</title><rect x="21.5" y="547.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (12 samples, 0.09%)</title><rect x="21.5" y="531.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (12 samples, 0.09%)</title><rect x="21.5" y="515.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="24.5" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.06%)</title><rect x="21.5" y="499.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.5" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.06%)</title><rect x="21.5" y="483.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="24.5" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.03%)</title><rect x="22.2" y="499.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="25.2" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.03%)</title><rect x="22.2" y="483.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="25.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$117/473479162.apply (20 samples, 0.15%)</title><rect x="22.5" y="691.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (20 samples, 0.15%)</title><rect x="22.5" y="675.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="25.5" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.06%)</title><rect x="22.5" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.5" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.06%)</title><rect x="22.5" y="643.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="25.5" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (12 samples, 0.09%)</title><rect x="23.2" y="659.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="26.2" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.09%)</title><rect x="23.2" y="643.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="26.2" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.02%)</title><rect x="24.3" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="27.3" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.02%)</title><rect x="24.3" y="755.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$127/378214072.apply (3 samples, 0.02%)</title><rect x="24.3" y="739.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (3 samples, 0.02%)</title><rect x="24.3" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (1,366 samples, 10.22%)</title><rect x="24.6" y="771.0" width="120.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.6" y="782.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (1,365 samples, 10.21%)</title><rect x="24.6" y="755.0" width="120.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.6" y="766.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.02%)</title><rect x="25.0" y="739.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="28.0" y="750.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.02%)</title><rect x="25.0" y="723.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="28.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (1,353 samples, 10.12%)</title><rect x="25.4" y="739.0" width="119.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="28.4" y="750.0">ru/mail/polis/d..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (352 samples, 2.63%)</title><rect x="25.4" y="723.0" width="31.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="28.4" y="734.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (351 samples, 2.62%)</title><rect x="25.4" y="707.0" width="31.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.4" y="718.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (13 samples, 0.10%)</title><rect x="25.5" y="691.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="28.5" y="702.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (13 samples, 0.10%)</title><rect x="25.5" y="675.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="28.5" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (337 samples, 2.52%)</title><rect x="26.7" y="691.0" width="29.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.7" y="702.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (337 samples, 2.52%)</title><rect x="26.7" y="675.0" width="29.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="29.7" y="686.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (4 samples, 0.03%)</title><rect x="26.7" y="659.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.7" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.03%)</title><rect x="26.7" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="29.7" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.03%)</title><rect x="26.7" y="627.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="29.7" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (333 samples, 2.49%)</title><rect x="27.0" y="659.0" width="29.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.0" y="670.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (333 samples, 2.49%)</title><rect x="27.0" y="643.0" width="29.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.0" y="654.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (333 samples, 2.49%)</title><rect x="27.0" y="627.0" width="29.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.0" y="638.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (333 samples, 2.49%)</title><rect x="27.0" y="611.0" width="29.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.0" y="622.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (236 samples, 1.76%)</title><rect x="27.0" y="595.0" width="20.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.02%)</title><rect x="27.0" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="30.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (233 samples, 1.74%)</title><rect x="27.3" y="579.0" width="20.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (233 samples, 1.74%)</title><rect x="27.3" y="563.0" width="20.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (233 samples, 1.74%)</title><rect x="27.3" y="547.0" width="20.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.3" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (55 samples, 0.41%)</title><rect x="27.3" y="531.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.3" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (55 samples, 0.41%)</title><rect x="27.3" y="515.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.3" y="526.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.41%)</title><rect x="27.3" y="499.0" width="4.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="30.3" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (134 samples, 1.00%)</title><rect x="32.1" y="531.0" width="11.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="35.1" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (134 samples, 1.00%)</title><rect x="32.1" y="515.0" width="11.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="35.1" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (11 samples, 0.08%)</title><rect x="44.0" y="531.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="47.0" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (12 samples, 0.09%)</title><rect x="44.9" y="531.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="47.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (21 samples, 0.16%)</title><rect x="46.0" y="531.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="49.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (21 samples, 0.16%)</title><rect x="46.0" y="515.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="49.0" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (21 samples, 0.16%)</title><rect x="46.0" y="499.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="49.0" y="510.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.16%)</title><rect x="46.0" y="483.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="49.0" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (97 samples, 0.73%)</title><rect x="47.9" y="595.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="50.9" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (97 samples, 0.73%)</title><rect x="47.9" y="579.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="50.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (97 samples, 0.73%)</title><rect x="47.9" y="563.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="50.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (97 samples, 0.73%)</title><rect x="47.9" y="547.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="50.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (97 samples, 0.73%)</title><rect x="47.9" y="531.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="50.9" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (45 samples, 0.34%)</title><rect x="47.9" y="515.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="50.9" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (45 samples, 0.34%)</title><rect x="47.9" y="499.0" width="3.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="50.9" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (41 samples, 0.31%)</title><rect x="51.8" y="515.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.8" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (41 samples, 0.31%)</title><rect x="51.8" y="499.0" width="3.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="54.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (4 samples, 0.03%)</title><rect x="55.4" y="515.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="58.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.03%)</title><rect x="55.4" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.4" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.03%)</title><rect x="55.4" y="483.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="58.4" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.05%)</title><rect x="55.8" y="515.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.8" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.05%)</title><rect x="55.8" y="499.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="58.8" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (970 samples, 7.25%)</title><rect x="56.6" y="723.0" width="85.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="59.6" y="734.0">java/util/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (970 samples, 7.25%)</title><rect x="56.6" y="707.0" width="85.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="59.6" y="718.0">java/lang/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (968 samples, 7.24%)</title><rect x="56.8" y="691.0" width="85.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="59.8" y="702.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (968 samples, 7.24%)</title><rect x="56.8" y="675.0" width="85.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="59.8" y="686.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (968 samples, 7.24%)</title><rect x="56.8" y="659.0" width="85.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.8" y="670.0">ru/mail/po..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (14 samples, 0.10%)</title><rect x="56.8" y="643.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="59.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (954 samples, 7.13%)</title><rect x="58.0" y="643.0" width="84.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.0" y="654.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (954 samples, 7.13%)</title><rect x="58.0" y="627.0" width="84.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="61.0" y="638.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (954 samples, 7.13%)</title><rect x="58.0" y="611.0" width="84.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.0" y="622.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (416 samples, 3.11%)</title><rect x="58.0" y="595.0" width="36.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="61.0" y="606.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (416 samples, 3.11%)</title><rect x="58.0" y="579.0" width="36.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.0" y="590.0">jav..</text>
</g>
<g>
<title>byte[] (416 samples, 3.11%)</title><rect x="58.0" y="563.0" width="36.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="61.0" y="574.0">byt..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (385 samples, 2.88%)</title><rect x="94.7" y="595.0" width="34.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="97.7" y="606.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (385 samples, 2.88%)</title><rect x="94.7" y="579.0" width="34.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="97.7" y="590.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (153 samples, 1.14%)</title><rect x="128.7" y="595.0" width="13.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="131.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (153 samples, 1.14%)</title><rect x="128.7" y="579.0" width="13.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.7" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (153 samples, 1.14%)</title><rect x="128.7" y="563.0" width="13.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="131.7" y="574.0"></text>
</g>
<g>
<title>byte[] (153 samples, 1.14%)</title><rect x="128.7" y="547.0" width="13.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="131.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (29 samples, 0.22%)</title><rect x="142.2" y="723.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="145.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (29 samples, 0.22%)</title><rect x="142.2" y="707.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.2" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (29 samples, 0.22%)</title><rect x="142.2" y="691.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="145.2" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (15 samples, 0.11%)</title><rect x="142.2" y="675.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.2" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (15 samples, 0.11%)</title><rect x="142.2" y="659.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="145.2" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (15 samples, 0.11%)</title><rect x="142.2" y="643.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.2" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.11%)</title><rect x="142.2" y="627.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.2" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.11%)</title><rect x="142.2" y="611.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="145.2" y="622.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (15 samples, 0.11%)</title><rect x="142.2" y="595.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.2" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (15 samples, 0.11%)</title><rect x="142.2" y="579.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="145.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (15 samples, 0.11%)</title><rect x="142.2" y="563.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (15 samples, 0.11%)</title><rect x="142.2" y="547.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (15 samples, 0.11%)</title><rect x="142.2" y="531.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="145.2" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.03%)</title><rect x="142.2" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.2" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.03%)</title><rect x="142.2" y="499.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="145.2" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.08%)</title><rect x="142.5" y="515.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="145.5" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.08%)</title><rect x="142.5" y="499.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="145.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (14 samples, 0.10%)</title><rect x="143.5" y="675.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.5" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (14 samples, 0.10%)</title><rect x="143.5" y="659.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.5" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (14 samples, 0.10%)</title><rect x="143.5" y="643.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.5" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (14 samples, 0.10%)</title><rect x="143.5" y="627.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.10%)</title><rect x="143.5" y="611.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.10%)</title><rect x="143.5" y="595.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (12 samples, 0.09%)</title><rect x="143.5" y="579.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="146.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (12 samples, 0.09%)</title><rect x="143.5" y="563.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (12 samples, 0.09%)</title><rect x="143.5" y="547.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (12 samples, 0.09%)</title><rect x="143.5" y="531.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="146.5" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.06%)</title><rect x="143.5" y="515.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="146.5" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.06%)</title><rect x="143.5" y="499.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="146.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (4 samples, 0.03%)</title><rect x="144.7" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.06%)</title><rect x="145.2" y="867.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.2" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.04%)</title><rect x="145.5" y="851.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="148.5" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.04%)</title><rect x="145.5" y="835.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.5" y="846.0"></text>
</g>
<g>
<title>char[] (4 samples, 0.03%)</title><rect x="145.5" y="819.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="148.5" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.02%)</title><rect x="145.9" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="148.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.02%)</title><rect x="145.9" y="851.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.9" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=6987] (1,517 samples, 11.34%)</title><rect x="146.2" y="947.0" width="133.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="149.2" y="958.0">[NIO Selector #1 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,517 samples, 11.34%)</title><rect x="146.2" y="931.0" width="133.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.2" y="942.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,517 samples, 11.34%)</title><rect x="146.2" y="915.0" width="133.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.2" y="926.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,517 samples, 11.34%)</title><rect x="146.2" y="899.0" width="133.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.2" y="910.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,517 samples, 11.34%)</title><rect x="146.2" y="883.0" width="133.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.2" y="894.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,510 samples, 11.29%)</title><rect x="146.2" y="867.0" width="133.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.2" y="878.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,510 samples, 11.29%)</title><rect x="146.2" y="851.0" width="133.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.2" y="862.0">one/nio/http/Http..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (1,509 samples, 11.28%)</title><rect x="146.2" y="835.0" width="133.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.2" y="846.0">RequestHandler0_r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.02%)</title><rect x="146.2" y="819.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="149.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.02%)</title><rect x="146.2" y="803.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.02%)</title><rect x="146.2" y="787.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.02%)</title><rect x="146.2" y="771.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.2" y="782.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="146.2" y="755.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="149.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (1,505 samples, 11.25%)</title><rect x="146.5" y="819.0" width="132.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.5" y="830.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (16 samples, 0.12%)</title><rect x="146.5" y="803.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.5" y="814.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (16 samples, 0.12%)</title><rect x="146.5" y="787.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.5" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (15 samples, 0.11%)</title><rect x="146.5" y="771.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.5" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (15 samples, 0.11%)</title><rect x="146.5" y="755.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.5" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (15 samples, 0.11%)</title><rect x="146.5" y="739.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.5" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (15 samples, 0.11%)</title><rect x="146.5" y="723.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.5" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (15 samples, 0.11%)</title><rect x="146.5" y="707.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.5" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (15 samples, 0.11%)</title><rect x="146.5" y="691.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.5" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (15 samples, 0.11%)</title><rect x="146.5" y="675.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.5" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (6 samples, 0.04%)</title><rect x="146.5" y="659.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.5" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (6 samples, 0.04%)</title><rect x="146.5" y="643.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.5" y="654.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (6 samples, 0.04%)</title><rect x="146.5" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.5" y="638.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (6 samples, 0.04%)</title><rect x="146.5" y="611.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4 samples, 0.03%)</title><rect x="146.7" y="595.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.7" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.03%)</title><rect x="146.7" y="579.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.7" y="590.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.03%)</title><rect x="146.7" y="563.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="149.7" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (9 samples, 0.07%)</title><rect x="147.0" y="659.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.0" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (7 samples, 0.05%)</title><rect x="147.0" y="643.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="150.0" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (7 samples, 0.05%)</title><rect x="147.0" y="627.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="150.0" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (3 samples, 0.02%)</title><rect x="147.0" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="150.0" y="622.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (3 samples, 0.02%)</title><rect x="147.0" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="150.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.02%)</title><rect x="147.4" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.02%)</title><rect x="147.4" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (1,489 samples, 11.14%)</title><rect x="147.9" y="803.0" width="131.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="150.9" y="814.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,488 samples, 11.13%)</title><rect x="148.0" y="787.0" width="131.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.0" y="798.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (137 samples, 1.02%)</title><rect x="148.0" y="771.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.0" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (137 samples, 1.02%)</title><rect x="148.0" y="755.0" width="12.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.0" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (137 samples, 1.02%)</title><rect x="148.0" y="739.0" width="12.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.0" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (137 samples, 1.02%)</title><rect x="148.0" y="723.0" width="12.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (137 samples, 1.02%)</title><rect x="148.0" y="707.0" width="12.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.0" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (117 samples, 0.87%)</title><rect x="148.0" y="691.0" width="10.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="151.0" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (49 samples, 0.37%)</title><rect x="148.0" y="675.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.0" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (49 samples, 0.37%)</title><rect x="148.0" y="659.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.0" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (49 samples, 0.37%)</title><rect x="148.0" y="643.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="151.0" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (49 samples, 0.37%)</title><rect x="148.0" y="627.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.0" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (49 samples, 0.37%)</title><rect x="148.0" y="611.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="151.0" y="622.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (49 samples, 0.37%)</title><rect x="148.0" y="595.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.0" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (49 samples, 0.37%)</title><rect x="148.0" y="579.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="151.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (49 samples, 0.37%)</title><rect x="148.0" y="563.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="151.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (49 samples, 0.37%)</title><rect x="148.0" y="547.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (49 samples, 0.37%)</title><rect x="148.0" y="531.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="151.0" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (21 samples, 0.16%)</title><rect x="148.0" y="515.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="151.0" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.16%)</title><rect x="148.0" y="499.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="151.0" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (28 samples, 0.21%)</title><rect x="149.9" y="515.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.9" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.21%)</title><rect x="149.9" y="499.0" width="2.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="152.9" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (68 samples, 0.51%)</title><rect x="152.3" y="675.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="155.3" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (68 samples, 0.51%)</title><rect x="152.3" y="659.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.3" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (68 samples, 0.51%)</title><rect x="152.3" y="643.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.3" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (68 samples, 0.51%)</title><rect x="152.3" y="627.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.3" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (68 samples, 0.51%)</title><rect x="152.3" y="611.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.3" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (68 samples, 0.51%)</title><rect x="152.3" y="595.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="155.3" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (56 samples, 0.42%)</title><rect x="152.3" y="579.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (56 samples, 0.42%)</title><rect x="152.3" y="563.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="155.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (56 samples, 0.42%)</title><rect x="152.3" y="547.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="155.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (56 samples, 0.42%)</title><rect x="152.3" y="531.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="155.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (16 samples, 0.12%)</title><rect x="152.3" y="515.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="155.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.12%)</title><rect x="152.3" y="499.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.3" y="510.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.12%)</title><rect x="152.3" y="483.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="155.3" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (32 samples, 0.24%)</title><rect x="153.7" y="515.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.7" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 0.24%)</title><rect x="153.7" y="499.0" width="2.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="156.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (5 samples, 0.04%)</title><rect x="156.8" y="515.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.8" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.04%)</title><rect x="156.8" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="159.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="156.8" y="483.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.8" y="494.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.04%)</title><rect x="156.8" y="467.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="159.8" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (12 samples, 0.09%)</title><rect x="157.3" y="579.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="160.3" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (12 samples, 0.09%)</title><rect x="157.3" y="563.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="160.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (12 samples, 0.09%)</title><rect x="157.3" y="547.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="160.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (12 samples, 0.09%)</title><rect x="157.3" y="531.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="160.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (12 samples, 0.09%)</title><rect x="157.3" y="515.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.04%)</title><rect x="157.3" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.3" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.04%)</title><rect x="157.3" y="483.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="160.3" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.05%)</title><rect x="157.7" y="499.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.7" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.05%)</title><rect x="157.7" y="483.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="160.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$117/473479162.apply (20 samples, 0.15%)</title><rect x="158.3" y="691.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="161.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (20 samples, 0.15%)</title><rect x="158.3" y="675.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="161.3" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.07%)</title><rect x="158.3" y="659.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="161.3" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.07%)</title><rect x="158.3" y="643.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="161.3" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 0.07%)</title><rect x="159.2" y="659.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="162.2" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.07%)</title><rect x="159.2" y="643.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="162.2" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.02%)</title><rect x="160.1" y="771.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="163.1" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.02%)</title><rect x="160.1" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$127/378214072.apply (3 samples, 0.02%)</title><rect x="160.1" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (3 samples, 0.02%)</title><rect x="160.1" y="723.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (1,347 samples, 10.07%)</title><rect x="160.5" y="771.0" width="118.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.5" y="782.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (1,347 samples, 10.07%)</title><rect x="160.5" y="755.0" width="118.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.5" y="766.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (3 samples, 0.02%)</title><rect x="160.7" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.7" y="750.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3 samples, 0.02%)</title><rect x="160.7" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="163.7" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.02%)</title><rect x="160.7" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (3 samples, 0.02%)</title><rect x="160.7" y="691.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.7" y="702.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (3 samples, 0.02%)</title><rect x="160.7" y="675.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="163.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (1,340 samples, 10.02%)</title><rect x="161.0" y="739.0" width="118.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="164.0" y="750.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (342 samples, 2.56%)</title><rect x="161.0" y="723.0" width="30.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.0" y="734.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (342 samples, 2.56%)</title><rect x="161.0" y="707.0" width="30.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="164.0" y="718.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (11 samples, 0.08%)</title><rect x="161.1" y="691.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="164.1" y="702.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (11 samples, 0.08%)</title><rect x="161.1" y="675.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="164.1" y="686.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (3 samples, 0.02%)</title><rect x="162.0" y="691.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="165.0" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (325 samples, 2.43%)</title><rect x="162.5" y="691.0" width="28.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.5" y="702.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (325 samples, 2.43%)</title><rect x="162.5" y="675.0" width="28.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="165.5" y="686.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (5 samples, 0.04%)</title><rect x="162.5" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="165.5" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.04%)</title><rect x="162.5" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.5" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.04%)</title><rect x="162.5" y="627.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="165.5" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (320 samples, 2.39%)</title><rect x="162.9" y="659.0" width="28.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="165.9" y="670.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (320 samples, 2.39%)</title><rect x="162.9" y="643.0" width="28.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.9" y="654.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (320 samples, 2.39%)</title><rect x="162.9" y="627.0" width="28.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="165.9" y="638.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (320 samples, 2.39%)</title><rect x="162.9" y="611.0" width="28.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.9" y="622.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (237 samples, 1.77%)</title><rect x="162.9" y="595.0" width="20.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.9" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (4 samples, 0.03%)</title><rect x="162.9" y="579.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="165.9" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.02%)</title><rect x="162.9" y="563.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="165.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$59/2145435247.apply (3 samples, 0.02%)</title><rect x="162.9" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="165.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (3 samples, 0.02%)</title><rect x="162.9" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="165.9" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.02%)</title><rect x="162.9" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="165.9" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.02%)</title><rect x="162.9" y="499.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="165.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (233 samples, 1.74%)</title><rect x="163.3" y="579.0" width="20.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (233 samples, 1.74%)</title><rect x="163.3" y="563.0" width="20.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="166.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (233 samples, 1.74%)</title><rect x="163.3" y="547.0" width="20.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.3" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (49 samples, 0.37%)</title><rect x="163.3" y="531.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.3" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (49 samples, 0.37%)</title><rect x="163.3" y="515.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.3" y="526.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.37%)</title><rect x="163.3" y="499.0" width="4.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="166.3" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (138 samples, 1.03%)</title><rect x="167.6" y="531.0" width="12.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="170.6" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (138 samples, 1.03%)</title><rect x="167.6" y="515.0" width="12.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="170.6" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (14 samples, 0.10%)</title><rect x="179.8" y="531.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="182.8" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (7 samples, 0.05%)</title><rect x="181.0" y="531.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="184.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (25 samples, 0.19%)</title><rect x="181.6" y="531.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="184.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (25 samples, 0.19%)</title><rect x="181.6" y="515.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="184.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (25 samples, 0.19%)</title><rect x="181.6" y="499.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="184.6" y="510.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.19%)</title><rect x="181.6" y="483.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="184.6" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (83 samples, 0.62%)</title><rect x="183.8" y="595.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.8" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (83 samples, 0.62%)</title><rect x="183.8" y="579.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (83 samples, 0.62%)</title><rect x="183.8" y="563.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="186.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (83 samples, 0.62%)</title><rect x="183.8" y="547.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (83 samples, 0.62%)</title><rect x="183.8" y="531.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="186.8" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (39 samples, 0.29%)</title><rect x="183.8" y="515.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.8" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (39 samples, 0.29%)</title><rect x="183.8" y="499.0" width="3.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="186.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (37 samples, 0.28%)</title><rect x="187.3" y="515.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="190.3" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (37 samples, 0.28%)</title><rect x="187.3" y="499.0" width="3.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="190.3" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.04%)</title><rect x="190.7" y="515.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="193.7" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.04%)</title><rect x="190.7" y="499.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="193.7" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (966 samples, 7.22%)</title><rect x="191.2" y="723.0" width="85.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="194.2" y="734.0">java/util/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (966 samples, 7.22%)</title><rect x="191.2" y="707.0" width="85.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="194.2" y="718.0">java/lang/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (966 samples, 7.22%)</title><rect x="191.2" y="691.0" width="85.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="194.2" y="702.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (966 samples, 7.22%)</title><rect x="191.2" y="675.0" width="85.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="194.2" y="686.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (966 samples, 7.22%)</title><rect x="191.2" y="659.0" width="85.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="194.2" y="670.0">ru/mail/po..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (14 samples, 0.10%)</title><rect x="191.2" y="643.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="194.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (952 samples, 7.12%)</title><rect x="192.4" y="643.0" width="84.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.4" y="654.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (952 samples, 7.12%)</title><rect x="192.4" y="627.0" width="84.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="195.4" y="638.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (952 samples, 7.12%)</title><rect x="192.4" y="611.0" width="84.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="195.4" y="622.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (404 samples, 3.02%)</title><rect x="192.4" y="595.0" width="35.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.4" y="606.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (404 samples, 3.02%)</title><rect x="192.4" y="579.0" width="35.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="195.4" y="590.0">jav..</text>
</g>
<g>
<title>byte[] (404 samples, 3.02%)</title><rect x="192.4" y="563.0" width="35.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="195.4" y="574.0">byt..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (359 samples, 2.68%)</title><rect x="228.1" y="595.0" width="31.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="231.1" y="606.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (359 samples, 2.68%)</title><rect x="228.1" y="579.0" width="31.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="231.1" y="590.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (189 samples, 1.41%)</title><rect x="259.7" y="595.0" width="16.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="262.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (189 samples, 1.41%)</title><rect x="259.7" y="579.0" width="16.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="262.7" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (189 samples, 1.41%)</title><rect x="259.7" y="563.0" width="16.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.7" y="574.0"></text>
</g>
<g>
<title>byte[] (189 samples, 1.41%)</title><rect x="259.7" y="547.0" width="16.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="262.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (32 samples, 0.24%)</title><rect x="276.4" y="723.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="279.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (31 samples, 0.23%)</title><rect x="276.5" y="707.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.5" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (31 samples, 0.23%)</title><rect x="276.5" y="691.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="279.5" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (18 samples, 0.13%)</title><rect x="276.5" y="675.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="279.5" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (18 samples, 0.13%)</title><rect x="276.5" y="659.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="279.5" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (18 samples, 0.13%)</title><rect x="276.5" y="643.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="279.5" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (18 samples, 0.13%)</title><rect x="276.5" y="627.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (18 samples, 0.13%)</title><rect x="276.5" y="611.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="279.5" y="622.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (18 samples, 0.13%)</title><rect x="276.5" y="595.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="279.5" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (18 samples, 0.13%)</title><rect x="276.5" y="579.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="279.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (18 samples, 0.13%)</title><rect x="276.5" y="563.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (18 samples, 0.13%)</title><rect x="276.5" y="547.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="279.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (18 samples, 0.13%)</title><rect x="276.5" y="531.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="279.5" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.07%)</title><rect x="276.5" y="515.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="279.5" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.07%)</title><rect x="276.5" y="499.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="279.5" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.07%)</title><rect x="277.3" y="515.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="280.3" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.07%)</title><rect x="277.3" y="499.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="280.3" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (13 samples, 0.10%)</title><rect x="278.1" y="675.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="281.1" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (13 samples, 0.10%)</title><rect x="278.1" y="659.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="281.1" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (13 samples, 0.10%)</title><rect x="278.1" y="643.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="281.1" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (13 samples, 0.10%)</title><rect x="278.1" y="627.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="281.1" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.10%)</title><rect x="278.1" y="611.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.1" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.10%)</title><rect x="278.1" y="595.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="281.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (11 samples, 0.08%)</title><rect x="278.1" y="579.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="281.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.08%)</title><rect x="278.1" y="563.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.08%)</title><rect x="278.1" y="547.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (11 samples, 0.08%)</title><rect x="278.1" y="531.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.1" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.05%)</title><rect x="278.2" y="515.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="281.2" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.05%)</title><rect x="278.2" y="499.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="281.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.04%)</title><rect x="279.4" y="867.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="282.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.02%)</title><rect x="279.6" y="851.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.6" y="862.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.02%)</title><rect x="279.6" y="835.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="282.6" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=6988] (1,516 samples, 11.34%)</title><rect x="280.0" y="947.0" width="133.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="283.0" y="958.0">[NIO Selector #2 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,516 samples, 11.34%)</title><rect x="280.0" y="931.0" width="133.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="283.0" y="942.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,516 samples, 11.34%)</title><rect x="280.0" y="915.0" width="133.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="283.0" y="926.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,516 samples, 11.34%)</title><rect x="280.0" y="899.0" width="133.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.0" y="910.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,516 samples, 11.34%)</title><rect x="280.0" y="883.0" width="133.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="283.0" y="894.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,498 samples, 11.20%)</title><rect x="280.0" y="867.0" width="132.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.0" y="878.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,498 samples, 11.20%)</title><rect x="280.0" y="851.0" width="132.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="283.0" y="862.0">one/nio/http/Htt..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (1,498 samples, 11.20%)</title><rect x="280.0" y="835.0" width="132.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="283.0" y="846.0">RequestHandler0_..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.02%)</title><rect x="280.0" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="283.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.02%)</title><rect x="280.0" y="803.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="283.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.02%)</title><rect x="280.0" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="283.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.02%)</title><rect x="280.0" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.0" y="782.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="280.0" y="755.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="283.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (1,495 samples, 11.18%)</title><rect x="280.3" y="819.0" width="131.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.3" y="830.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (18 samples, 0.13%)</title><rect x="280.3" y="803.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="283.3" y="814.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (18 samples, 0.13%)</title><rect x="280.3" y="787.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="283.3" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (18 samples, 0.13%)</title><rect x="280.3" y="771.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="283.3" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (17 samples, 0.13%)</title><rect x="280.4" y="755.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.4" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (17 samples, 0.13%)</title><rect x="280.4" y="739.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.4" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (17 samples, 0.13%)</title><rect x="280.4" y="723.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.4" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (17 samples, 0.13%)</title><rect x="280.4" y="707.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.4" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (17 samples, 0.13%)</title><rect x="280.4" y="691.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.4" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (17 samples, 0.13%)</title><rect x="280.4" y="675.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.4" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (15 samples, 0.11%)</title><rect x="280.6" y="659.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="283.6" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (11 samples, 0.08%)</title><rect x="280.6" y="643.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="283.6" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (11 samples, 0.08%)</title><rect x="280.6" y="627.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="283.6" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (4 samples, 0.03%)</title><rect x="280.6" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="283.6" y="622.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (3 samples, 0.02%)</title><rect x="280.6" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="283.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.02%)</title><rect x="281.1" y="611.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="284.1" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.02%)</title><rect x="281.1" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.1" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.02%)</title><rect x="281.1" y="579.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="284.1" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.02%)</title><rect x="281.1" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="284.1" y="574.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="281.1" y="547.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="284.1" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (4 samples, 0.03%)</title><rect x="281.5" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="284.5" y="654.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.03%)</title><rect x="281.5" y="627.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="284.5" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.03%)</title><rect x="281.5" y="611.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="284.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.03%)</title><rect x="281.5" y="595.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="284.5" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.03%)</title><rect x="281.5" y="579.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="284.5" y="590.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.03%)</title><rect x="281.5" y="563.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="284.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (1,475 samples, 11.03%)</title><rect x="282.1" y="803.0" width="130.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="285.1" y="814.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/Response.ok (5 samples, 0.04%)</title><rect x="282.1" y="787.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="285.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.04%)</title><rect x="282.1" y="771.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="285.1" y="782.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.02%)</title><rect x="282.1" y="755.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="285.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,470 samples, 10.99%)</title><rect x="282.5" y="787.0" width="129.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="285.5" y="798.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (124 samples, 0.93%)</title><rect x="282.5" y="771.0" width="10.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.5" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (124 samples, 0.93%)</title><rect x="282.5" y="755.0" width="10.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.5" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (124 samples, 0.93%)</title><rect x="282.5" y="739.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="285.5" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (124 samples, 0.93%)</title><rect x="282.5" y="723.0" width="10.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="285.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (124 samples, 0.93%)</title><rect x="282.5" y="707.0" width="10.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="285.5" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (108 samples, 0.81%)</title><rect x="282.5" y="691.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.5" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (56 samples, 0.42%)</title><rect x="282.5" y="675.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.5" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (56 samples, 0.42%)</title><rect x="282.5" y="659.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="285.5" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (56 samples, 0.42%)</title><rect x="282.5" y="643.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="285.5" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (56 samples, 0.42%)</title><rect x="282.5" y="627.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="285.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (56 samples, 0.42%)</title><rect x="282.5" y="611.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="285.5" y="622.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (56 samples, 0.42%)</title><rect x="282.5" y="595.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="285.5" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (56 samples, 0.42%)</title><rect x="282.5" y="579.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="285.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (56 samples, 0.42%)</title><rect x="282.5" y="563.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="285.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (56 samples, 0.42%)</title><rect x="282.5" y="547.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="285.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (56 samples, 0.42%)</title><rect x="282.5" y="531.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="285.5" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (34 samples, 0.25%)</title><rect x="282.5" y="515.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.5" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (34 samples, 0.25%)</title><rect x="282.5" y="499.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="285.5" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (22 samples, 0.16%)</title><rect x="285.5" y="515.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.5" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.16%)</title><rect x="285.5" y="499.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="288.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (52 samples, 0.39%)</title><rect x="287.4" y="675.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="290.4" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (52 samples, 0.39%)</title><rect x="287.4" y="659.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="290.4" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (52 samples, 0.39%)</title><rect x="287.4" y="643.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="290.4" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (52 samples, 0.39%)</title><rect x="287.4" y="627.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="290.4" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (52 samples, 0.39%)</title><rect x="287.4" y="611.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="290.4" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (52 samples, 0.39%)</title><rect x="287.4" y="595.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="290.4" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (40 samples, 0.30%)</title><rect x="287.4" y="579.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (40 samples, 0.30%)</title><rect x="287.4" y="563.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="290.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (40 samples, 0.30%)</title><rect x="287.4" y="547.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="290.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (40 samples, 0.30%)</title><rect x="287.4" y="531.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (9 samples, 0.07%)</title><rect x="287.4" y="515.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.07%)</title><rect x="287.4" y="499.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.4" y="510.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.07%)</title><rect x="287.4" y="483.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="290.4" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (22 samples, 0.16%)</title><rect x="288.2" y="515.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.2" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.16%)</title><rect x="288.2" y="499.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="291.2" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (4 samples, 0.03%)</title><rect x="290.2" y="515.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="293.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3 samples, 0.02%)</title><rect x="290.7" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="293.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.02%)</title><rect x="290.7" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="293.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="290.7" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="293.7" y="494.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="290.7" y="467.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="293.7" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (12 samples, 0.09%)</title><rect x="291.0" y="579.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="294.0" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (12 samples, 0.09%)</title><rect x="291.0" y="563.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="294.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (12 samples, 0.09%)</title><rect x="291.0" y="547.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (12 samples, 0.09%)</title><rect x="291.0" y="531.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="294.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (12 samples, 0.09%)</title><rect x="291.0" y="515.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="294.0" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.04%)</title><rect x="291.0" y="499.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="294.0" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.04%)</title><rect x="291.0" y="483.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="294.0" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.04%)</title><rect x="291.5" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="294.5" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.04%)</title><rect x="291.5" y="483.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="294.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$117/473479162.apply (16 samples, 0.12%)</title><rect x="292.0" y="691.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="295.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (16 samples, 0.12%)</title><rect x="292.0" y="675.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="295.0" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.05%)</title><rect x="292.0" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.0" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.05%)</title><rect x="292.0" y="643.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="295.0" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.07%)</title><rect x="292.6" y="659.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.6" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.07%)</title><rect x="292.6" y="643.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="295.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (3 samples, 0.02%)</title><rect x="293.6" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="296.6" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (3 samples, 0.02%)</title><rect x="293.6" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="296.6" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.02%)</title><rect x="293.6" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="296.6" y="750.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.02%)</title><rect x="293.6" y="723.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="296.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (1,340 samples, 10.02%)</title><rect x="294.0" y="771.0" width="118.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="297.0" y="782.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (1,340 samples, 10.02%)</title><rect x="294.0" y="755.0" width="118.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="297.0" y="766.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.04%)</title><rect x="294.1" y="739.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="297.1" y="750.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.04%)</title><rect x="294.1" y="723.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="297.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (1,330 samples, 9.95%)</title><rect x="294.6" y="739.0" width="117.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="297.6" y="750.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (324 samples, 2.42%)</title><rect x="294.6" y="723.0" width="28.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="297.6" y="734.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (324 samples, 2.42%)</title><rect x="294.6" y="707.0" width="28.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="297.6" y="718.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.04%)</title><rect x="294.7" y="691.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="297.7" y="702.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.04%)</title><rect x="294.7" y="675.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="297.7" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (316 samples, 2.36%)</title><rect x="295.3" y="691.0" width="27.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.3" y="702.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (316 samples, 2.36%)</title><rect x="295.3" y="675.0" width="27.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="298.3" y="686.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (3 samples, 0.02%)</title><rect x="295.3" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="298.3" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.02%)</title><rect x="295.3" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="298.3" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.02%)</title><rect x="295.3" y="627.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="298.3" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (313 samples, 2.34%)</title><rect x="295.6" y="659.0" width="27.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="298.6" y="670.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (313 samples, 2.34%)</title><rect x="295.6" y="643.0" width="27.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.6" y="654.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (313 samples, 2.34%)</title><rect x="295.6" y="627.0" width="27.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.6" y="638.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (313 samples, 2.34%)</title><rect x="295.6" y="611.0" width="27.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.6" y="622.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (231 samples, 1.73%)</title><rect x="295.6" y="595.0" width="20.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="298.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (229 samples, 1.71%)</title><rect x="295.7" y="579.0" width="20.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (229 samples, 1.71%)</title><rect x="295.7" y="563.0" width="20.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="298.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (229 samples, 1.71%)</title><rect x="295.7" y="547.0" width="20.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="298.7" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (40 samples, 0.30%)</title><rect x="295.7" y="531.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="298.7" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (40 samples, 0.30%)</title><rect x="295.7" y="515.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="298.7" y="526.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.30%)</title><rect x="295.7" y="499.0" width="3.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="298.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (148 samples, 1.11%)</title><rect x="299.3" y="531.0" width="13.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="302.3" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (148 samples, 1.11%)</title><rect x="299.3" y="515.0" width="13.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="302.3" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (11 samples, 0.08%)</title><rect x="312.3" y="531.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="315.3" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (12 samples, 0.09%)</title><rect x="313.3" y="531.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="316.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (18 samples, 0.13%)</title><rect x="314.4" y="531.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="317.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (18 samples, 0.13%)</title><rect x="314.4" y="515.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (18 samples, 0.13%)</title><rect x="314.4" y="499.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="317.4" y="510.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.13%)</title><rect x="314.4" y="483.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="317.4" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (82 samples, 0.61%)</title><rect x="315.9" y="595.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="318.9" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (82 samples, 0.61%)</title><rect x="315.9" y="579.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="318.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (82 samples, 0.61%)</title><rect x="315.9" y="563.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (82 samples, 0.61%)</title><rect x="315.9" y="547.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="318.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (82 samples, 0.61%)</title><rect x="315.9" y="531.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="318.9" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (35 samples, 0.26%)</title><rect x="315.9" y="515.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="318.9" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (35 samples, 0.26%)</title><rect x="315.9" y="499.0" width="3.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="318.9" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (40 samples, 0.30%)</title><rect x="319.0" y="515.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="322.0" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (40 samples, 0.30%)</title><rect x="319.0" y="499.0" width="3.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="322.0" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.04%)</title><rect x="322.6" y="515.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="325.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.04%)</title><rect x="322.6" y="499.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.6" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.04%)</title><rect x="322.6" y="483.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="325.6" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (970 samples, 7.25%)</title><rect x="323.2" y="723.0" width="85.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.2" y="734.0">java/util/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (970 samples, 7.25%)</title><rect x="323.2" y="707.0" width="85.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="326.2" y="718.0">java/lang/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (969 samples, 7.25%)</title><rect x="323.3" y="691.0" width="85.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="326.3" y="702.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (969 samples, 7.25%)</title><rect x="323.3" y="675.0" width="85.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.3" y="686.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (969 samples, 7.25%)</title><rect x="323.3" y="659.0" width="85.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="326.3" y="670.0">ru/mail/po..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (11 samples, 0.08%)</title><rect x="323.3" y="643.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="326.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (958 samples, 7.16%)</title><rect x="324.2" y="643.0" width="84.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="327.2" y="654.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (958 samples, 7.16%)</title><rect x="324.2" y="627.0" width="84.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="327.2" y="638.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (958 samples, 7.16%)</title><rect x="324.2" y="611.0" width="84.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="327.2" y="622.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (369 samples, 2.76%)</title><rect x="324.2" y="595.0" width="32.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="327.2" y="606.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (369 samples, 2.76%)</title><rect x="324.2" y="579.0" width="32.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="327.2" y="590.0">ja..</text>
</g>
<g>
<title>byte[] (369 samples, 2.76%)</title><rect x="324.2" y="563.0" width="32.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="327.2" y="574.0">by..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (422 samples, 3.16%)</title><rect x="356.8" y="595.0" width="37.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="359.8" y="606.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (422 samples, 3.16%)</title><rect x="356.8" y="579.0" width="37.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="359.8" y="590.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (167 samples, 1.25%)</title><rect x="394.0" y="595.0" width="14.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="397.0" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (167 samples, 1.25%)</title><rect x="394.0" y="579.0" width="14.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="397.0" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (167 samples, 1.25%)</title><rect x="394.0" y="563.0" width="14.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="397.0" y="574.0"></text>
</g>
<g>
<title>byte[] (167 samples, 1.25%)</title><rect x="394.0" y="547.0" width="14.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="397.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (35 samples, 0.26%)</title><rect x="408.9" y="723.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (35 samples, 0.26%)</title><rect x="408.9" y="707.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.9" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (35 samples, 0.26%)</title><rect x="408.9" y="691.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.9" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (15 samples, 0.11%)</title><rect x="408.9" y="675.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="411.9" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (15 samples, 0.11%)</title><rect x="408.9" y="659.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="411.9" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (15 samples, 0.11%)</title><rect x="408.9" y="643.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.9" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.11%)</title><rect x="408.9" y="627.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.9" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.11%)</title><rect x="408.9" y="611.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="411.9" y="622.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (15 samples, 0.11%)</title><rect x="408.9" y="595.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="411.9" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (15 samples, 0.11%)</title><rect x="408.9" y="579.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (15 samples, 0.11%)</title><rect x="408.9" y="563.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="411.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (15 samples, 0.11%)</title><rect x="408.9" y="547.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (15 samples, 0.11%)</title><rect x="408.9" y="531.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="411.9" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.07%)</title><rect x="408.9" y="515.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="411.9" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.07%)</title><rect x="408.9" y="499.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="411.9" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.04%)</title><rect x="409.7" y="515.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="412.7" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.04%)</title><rect x="409.7" y="499.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="412.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (20 samples, 0.15%)</title><rect x="410.2" y="675.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="413.2" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (20 samples, 0.15%)</title><rect x="410.2" y="659.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="413.2" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (20 samples, 0.15%)</title><rect x="410.2" y="643.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="413.2" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (20 samples, 0.15%)</title><rect x="410.2" y="627.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="413.2" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (20 samples, 0.15%)</title><rect x="410.2" y="611.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.2" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (20 samples, 0.15%)</title><rect x="410.2" y="595.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (15 samples, 0.11%)</title><rect x="410.2" y="579.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="413.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (15 samples, 0.11%)</title><rect x="410.2" y="563.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="413.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (15 samples, 0.11%)</title><rect x="410.2" y="547.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="413.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (15 samples, 0.11%)</title><rect x="410.2" y="531.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.02%)</title><rect x="410.2" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.2" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="410.2" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.2" y="510.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="410.2" y="483.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="413.2" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.07%)</title><rect x="410.5" y="515.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="413.5" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.07%)</title><rect x="410.5" y="499.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="413.5" y="510.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.04%)</title><rect x="411.5" y="579.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.5" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.04%)</title><rect x="411.5" y="563.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="414.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (5 samples, 0.04%)</title><rect x="411.5" y="547.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="414.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (5 samples, 0.04%)</title><rect x="411.5" y="531.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="414.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (5 samples, 0.04%)</title><rect x="411.5" y="515.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="414.5" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.02%)</title><rect x="411.7" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="414.7" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.02%)</title><rect x="411.7" y="483.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="414.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (3 samples, 0.02%)</title><rect x="412.0" y="739.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10 samples, 0.07%)</title><rect x="412.2" y="867.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="415.2" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.02%)</title><rect x="412.2" y="851.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="415.2" y="862.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.02%)</title><rect x="412.2" y="835.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="415.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.05%)</title><rect x="412.5" y="851.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="415.5" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.05%)</title><rect x="412.5" y="835.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="415.5" y="846.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.02%)</title><rect x="412.7" y="819.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="415.7" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.06%)</title><rect x="413.1" y="867.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="416.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.06%)</title><rect x="413.1" y="851.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="416.1" y="862.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.02%)</title><rect x="413.1" y="835.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="416.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.02%)</title><rect x="413.5" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="416.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.02%)</title><rect x="413.5" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="416.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.02%)</title><rect x="413.5" y="803.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.5" y="814.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="413.5" y="787.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="416.5" y="798.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=6989] (1,542 samples, 11.53%)</title><rect x="413.8" y="947.0" width="136.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="416.8" y="958.0">[NIO Selector #3 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,542 samples, 11.53%)</title><rect x="413.8" y="931.0" width="136.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="416.8" y="942.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,541 samples, 11.52%)</title><rect x="413.9" y="915.0" width="136.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="416.9" y="926.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,541 samples, 11.52%)</title><rect x="413.9" y="899.0" width="136.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="416.9" y="910.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,541 samples, 11.52%)</title><rect x="413.9" y="883.0" width="136.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="416.9" y="894.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,532 samples, 11.46%)</title><rect x="413.9" y="867.0" width="135.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.9" y="878.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,532 samples, 11.46%)</title><rect x="413.9" y="851.0" width="135.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="416.9" y="862.0">one/nio/http/Http..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (1,530 samples, 11.44%)</title><rect x="413.9" y="835.0" width="135.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="416.9" y="846.0">RequestHandler0_r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.03%)</title><rect x="413.9" y="819.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="416.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.03%)</title><rect x="413.9" y="803.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="416.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.02%)</title><rect x="413.9" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="416.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.02%)</title><rect x="413.9" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="416.9" y="782.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="413.9" y="755.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="416.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (1,524 samples, 11.40%)</title><rect x="414.4" y="819.0" width="134.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.4" y="830.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (13 samples, 0.10%)</title><rect x="414.4" y="803.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.4" y="814.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (13 samples, 0.10%)</title><rect x="414.4" y="787.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="417.4" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (13 samples, 0.10%)</title><rect x="414.4" y="771.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="417.4" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (13 samples, 0.10%)</title><rect x="414.4" y="755.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="417.4" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (13 samples, 0.10%)</title><rect x="414.4" y="739.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.4" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (13 samples, 0.10%)</title><rect x="414.4" y="723.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="417.4" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (13 samples, 0.10%)</title><rect x="414.4" y="707.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.4" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (13 samples, 0.10%)</title><rect x="414.4" y="691.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.4" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (13 samples, 0.10%)</title><rect x="414.4" y="675.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="417.4" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (4 samples, 0.03%)</title><rect x="414.4" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="417.4" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (4 samples, 0.03%)</title><rect x="414.4" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.4" y="654.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.03%)</title><rect x="414.4" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="417.4" y="638.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.03%)</title><rect x="414.4" y="611.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.02%)</title><rect x="414.4" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.4" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.02%)</title><rect x="414.4" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="417.4" y="590.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="414.4" y="563.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="417.4" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (9 samples, 0.07%)</title><rect x="414.8" y="659.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="417.8" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (9 samples, 0.07%)</title><rect x="414.8" y="643.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="417.8" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (9 samples, 0.07%)</title><rect x="414.8" y="627.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.04%)</title><rect x="414.8" y="611.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="417.8" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.04%)</title><rect x="414.8" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.8" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (6 samples, 0.04%)</title><rect x="414.8" y="579.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.8" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.04%)</title><rect x="414.8" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="417.8" y="574.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.04%)</title><rect x="414.8" y="547.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="417.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.02%)</title><rect x="415.3" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="418.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.02%)</title><rect x="415.3" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="418.3" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.02%)</title><rect x="415.3" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="418.3" y="590.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="415.3" y="563.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="418.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (1,509 samples, 11.28%)</title><rect x="415.7" y="803.0" width="133.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.7" y="814.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,508 samples, 11.28%)</title><rect x="415.7" y="787.0" width="133.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="418.7" y="798.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (126 samples, 0.94%)</title><rect x="415.7" y="771.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="418.7" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (126 samples, 0.94%)</title><rect x="415.7" y="755.0" width="11.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="418.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (126 samples, 0.94%)</title><rect x="415.7" y="739.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="418.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (126 samples, 0.94%)</title><rect x="415.7" y="723.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="418.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (126 samples, 0.94%)</title><rect x="415.7" y="707.0" width="11.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.7" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (112 samples, 0.84%)</title><rect x="415.7" y="691.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="418.7" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (63 samples, 0.47%)</title><rect x="415.7" y="675.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="418.7" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (63 samples, 0.47%)</title><rect x="415.7" y="659.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="418.7" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (63 samples, 0.47%)</title><rect x="415.7" y="643.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.7" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (63 samples, 0.47%)</title><rect x="415.7" y="627.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (63 samples, 0.47%)</title><rect x="415.7" y="611.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="418.7" y="622.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (63 samples, 0.47%)</title><rect x="415.7" y="595.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="418.7" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (63 samples, 0.47%)</title><rect x="415.7" y="579.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (63 samples, 0.47%)</title><rect x="415.7" y="563.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="418.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (63 samples, 0.47%)</title><rect x="415.7" y="547.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="418.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (63 samples, 0.47%)</title><rect x="415.7" y="531.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="418.7" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (29 samples, 0.22%)</title><rect x="415.7" y="515.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="418.7" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.22%)</title><rect x="415.7" y="499.0" width="2.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="418.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (34 samples, 0.25%)</title><rect x="418.3" y="515.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="421.3" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (34 samples, 0.25%)</title><rect x="418.3" y="499.0" width="3.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="421.3" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (49 samples, 0.37%)</title><rect x="421.3" y="675.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="424.3" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (49 samples, 0.37%)</title><rect x="421.3" y="659.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.3" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (49 samples, 0.37%)</title><rect x="421.3" y="643.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="424.3" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (49 samples, 0.37%)</title><rect x="421.3" y="627.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.3" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (49 samples, 0.37%)</title><rect x="421.3" y="611.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.3" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (49 samples, 0.37%)</title><rect x="421.3" y="595.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="424.3" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (40 samples, 0.30%)</title><rect x="421.3" y="579.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="424.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (40 samples, 0.30%)</title><rect x="421.3" y="563.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (40 samples, 0.30%)</title><rect x="421.3" y="547.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="424.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (40 samples, 0.30%)</title><rect x="421.3" y="531.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="424.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.04%)</title><rect x="421.3" y="515.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="421.3" y="499.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="424.3" y="510.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.04%)</title><rect x="421.3" y="483.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="424.3" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (24 samples, 0.18%)</title><rect x="421.8" y="515.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.8" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.18%)</title><rect x="421.8" y="499.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="424.8" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (5 samples, 0.04%)</title><rect x="424.0" y="515.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="427.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.03%)</title><rect x="424.5" y="515.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.5" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.03%)</title><rect x="424.5" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="427.5" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="424.5" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="427.5" y="494.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.03%)</title><rect x="424.5" y="467.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="427.5" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.07%)</title><rect x="424.8" y="579.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="427.8" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.07%)</title><rect x="424.8" y="563.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="427.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (9 samples, 0.07%)</title><rect x="424.8" y="547.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (9 samples, 0.07%)</title><rect x="424.8" y="531.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="427.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (9 samples, 0.07%)</title><rect x="424.8" y="515.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="427.8" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.04%)</title><rect x="424.8" y="499.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="427.8" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.04%)</title><rect x="424.8" y="483.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="427.8" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.02%)</title><rect x="425.4" y="499.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="428.4" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.02%)</title><rect x="425.4" y="483.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="428.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$117/473479162.apply (14 samples, 0.10%)</title><rect x="425.6" y="691.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="428.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (14 samples, 0.10%)</title><rect x="425.6" y="675.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="428.6" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.06%)</title><rect x="425.6" y="659.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="428.6" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.06%)</title><rect x="425.6" y="643.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="428.6" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.04%)</title><rect x="426.3" y="659.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.3" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.04%)</title><rect x="426.3" y="643.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="429.3" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (4 samples, 0.03%)</title><rect x="426.9" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="429.9" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (4 samples, 0.03%)</title><rect x="426.9" y="755.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$127/378214072.apply (4 samples, 0.03%)</title><rect x="426.9" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="429.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (4 samples, 0.03%)</title><rect x="426.9" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="429.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (3 samples, 0.02%)</title><rect x="427.0" y="707.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (1,378 samples, 10.31%)</title><rect x="427.2" y="771.0" width="121.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="430.2" y="782.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (1,376 samples, 10.29%)</title><rect x="427.4" y="755.0" width="121.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="430.4" y="766.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.04%)</title><rect x="427.4" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="430.4" y="750.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.04%)</title><rect x="427.4" y="723.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="430.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (1,368 samples, 10.23%)</title><rect x="427.9" y="739.0" width="120.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.9" y="750.0">ru/mail/polis/d..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (367 samples, 2.74%)</title><rect x="427.9" y="723.0" width="32.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.9" y="734.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (367 samples, 2.74%)</title><rect x="427.9" y="707.0" width="32.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="430.9" y="718.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (10 samples, 0.07%)</title><rect x="428.0" y="691.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="431.0" y="702.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (10 samples, 0.07%)</title><rect x="428.0" y="675.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="431.0" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (356 samples, 2.66%)</title><rect x="428.9" y="691.0" width="31.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="431.9" y="702.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (356 samples, 2.66%)</title><rect x="428.9" y="675.0" width="31.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="431.9" y="686.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (6 samples, 0.04%)</title><rect x="428.9" y="659.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="431.9" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.04%)</title><rect x="428.9" y="643.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="431.9" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.04%)</title><rect x="428.9" y="627.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="431.9" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (350 samples, 2.62%)</title><rect x="429.4" y="659.0" width="30.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="432.4" y="670.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (350 samples, 2.62%)</title><rect x="429.4" y="643.0" width="30.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.4" y="654.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (350 samples, 2.62%)</title><rect x="429.4" y="627.0" width="30.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.4" y="638.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (350 samples, 2.62%)</title><rect x="429.4" y="611.0" width="30.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.4" y="622.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (274 samples, 2.05%)</title><rect x="429.4" y="595.0" width="24.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="432.4" y="606.0">c..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (5 samples, 0.04%)</title><rect x="429.4" y="579.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.4" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (4 samples, 0.03%)</title><rect x="429.4" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="432.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$59/2145435247.apply (4 samples, 0.03%)</title><rect x="429.4" y="547.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="432.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (4 samples, 0.03%)</title><rect x="429.4" y="531.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="432.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (269 samples, 2.01%)</title><rect x="429.9" y="579.0" width="23.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="432.9" y="590.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (269 samples, 2.01%)</title><rect x="429.9" y="563.0" width="23.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.9" y="574.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (269 samples, 2.01%)</title><rect x="429.9" y="547.0" width="23.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.9" y="558.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (54 samples, 0.40%)</title><rect x="429.9" y="531.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="432.9" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (54 samples, 0.40%)</title><rect x="429.9" y="515.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="432.9" y="526.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.40%)</title><rect x="429.9" y="499.0" width="4.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="432.9" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (166 samples, 1.24%)</title><rect x="434.6" y="531.0" width="14.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="437.6" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (166 samples, 1.24%)</title><rect x="434.6" y="515.0" width="14.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="437.6" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (7 samples, 0.05%)</title><rect x="449.3" y="531.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="452.3" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (15 samples, 0.11%)</title><rect x="449.9" y="531.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="452.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (27 samples, 0.20%)</title><rect x="451.2" y="531.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="454.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (27 samples, 0.20%)</title><rect x="451.2" y="515.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="454.2" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (27 samples, 0.20%)</title><rect x="451.2" y="499.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="454.2" y="510.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.20%)</title><rect x="451.2" y="483.0" width="2.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="454.2" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (76 samples, 0.57%)</title><rect x="453.6" y="595.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="456.6" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (76 samples, 0.57%)</title><rect x="453.6" y="579.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (76 samples, 0.57%)</title><rect x="453.6" y="563.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="456.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (76 samples, 0.57%)</title><rect x="453.6" y="547.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="456.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (76 samples, 0.57%)</title><rect x="453.6" y="531.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="456.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (36 samples, 0.27%)</title><rect x="453.6" y="515.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="456.6" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (36 samples, 0.27%)</title><rect x="453.6" y="499.0" width="3.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="456.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (34 samples, 0.25%)</title><rect x="456.8" y="515.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="459.8" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (34 samples, 0.25%)</title><rect x="456.8" y="499.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="459.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (3 samples, 0.02%)</title><rect x="459.8" y="515.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="462.8" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.02%)</title><rect x="459.8" y="499.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="462.8" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.02%)</title><rect x="459.8" y="483.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="462.8" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.02%)</title><rect x="460.0" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="463.0" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.02%)</title><rect x="460.0" y="499.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="463.0" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (977 samples, 7.31%)</title><rect x="460.3" y="723.0" width="86.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="463.3" y="734.0">java/util/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (977 samples, 7.31%)</title><rect x="460.3" y="707.0" width="86.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="463.3" y="718.0">java/lang/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (975 samples, 7.29%)</title><rect x="460.5" y="691.0" width="86.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.5" y="702.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (975 samples, 7.29%)</title><rect x="460.5" y="675.0" width="86.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.5" y="686.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (975 samples, 7.29%)</title><rect x="460.5" y="659.0" width="86.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.5" y="670.0">ru/mail/po..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (15 samples, 0.11%)</title><rect x="460.5" y="643.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="463.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (960 samples, 7.18%)</title><rect x="461.8" y="643.0" width="84.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="464.8" y="654.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (960 samples, 7.18%)</title><rect x="461.8" y="627.0" width="84.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="464.8" y="638.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (960 samples, 7.18%)</title><rect x="461.8" y="611.0" width="84.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="464.8" y="622.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (401 samples, 3.00%)</title><rect x="461.8" y="595.0" width="35.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="464.8" y="606.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (401 samples, 3.00%)</title><rect x="461.8" y="579.0" width="35.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.8" y="590.0">jav..</text>
</g>
<g>
<title>byte[] (401 samples, 3.00%)</title><rect x="461.8" y="563.0" width="35.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="464.8" y="574.0">byt..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (386 samples, 2.89%)</title><rect x="497.2" y="595.0" width="34.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="500.2" y="606.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (386 samples, 2.89%)</title><rect x="497.2" y="579.0" width="34.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="500.2" y="590.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (173 samples, 1.29%)</title><rect x="531.3" y="595.0" width="15.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="534.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (173 samples, 1.29%)</title><rect x="531.3" y="579.0" width="15.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.3" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (173 samples, 1.29%)</title><rect x="531.3" y="563.0" width="15.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="534.3" y="574.0"></text>
</g>
<g>
<title>byte[] (173 samples, 1.29%)</title><rect x="531.3" y="547.0" width="15.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="534.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (24 samples, 0.18%)</title><rect x="546.5" y="723.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="549.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (24 samples, 0.18%)</title><rect x="546.5" y="707.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="549.5" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (24 samples, 0.18%)</title><rect x="546.5" y="691.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="549.5" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (18 samples, 0.13%)</title><rect x="546.5" y="675.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="549.5" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (18 samples, 0.13%)</title><rect x="546.5" y="659.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="549.5" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (18 samples, 0.13%)</title><rect x="546.5" y="643.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="549.5" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (18 samples, 0.13%)</title><rect x="546.5" y="627.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="549.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (18 samples, 0.13%)</title><rect x="546.5" y="611.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="549.5" y="622.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (18 samples, 0.13%)</title><rect x="546.5" y="595.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="549.5" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (18 samples, 0.13%)</title><rect x="546.5" y="579.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="549.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (18 samples, 0.13%)</title><rect x="546.5" y="563.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="549.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (18 samples, 0.13%)</title><rect x="546.5" y="547.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="549.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (18 samples, 0.13%)</title><rect x="546.5" y="531.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="549.5" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (11 samples, 0.08%)</title><rect x="546.5" y="515.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="549.5" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.08%)</title><rect x="546.5" y="499.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="549.5" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.05%)</title><rect x="547.5" y="515.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.5" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.05%)</title><rect x="547.5" y="499.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="550.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6 samples, 0.04%)</title><rect x="548.1" y="675.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="551.1" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6 samples, 0.04%)</title><rect x="548.1" y="659.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="551.1" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6 samples, 0.04%)</title><rect x="548.1" y="643.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="551.1" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6 samples, 0.04%)</title><rect x="548.1" y="627.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.1" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.04%)</title><rect x="548.1" y="611.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="551.1" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.04%)</title><rect x="548.1" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="551.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6 samples, 0.04%)</title><rect x="548.1" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="551.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (6 samples, 0.04%)</title><rect x="548.1" y="563.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="551.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (6 samples, 0.04%)</title><rect x="548.1" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="551.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (6 samples, 0.04%)</title><rect x="548.1" y="531.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="551.1" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.03%)</title><rect x="548.1" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="551.1" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.03%)</title><rect x="548.1" y="499.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="551.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.04%)</title><rect x="549.1" y="867.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.03%)</title><rect x="549.3" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="552.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.03%)</title><rect x="549.3" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.3" y="846.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.02%)</title><rect x="549.3" y="819.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="552.3" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.02%)</title><rect x="549.6" y="867.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.02%)</title><rect x="549.6" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="552.6" y="862.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.02%)</title><rect x="549.6" y="835.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="552.6" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=6990] (1,515 samples, 11.33%)</title><rect x="549.9" y="947.0" width="133.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="552.9" y="958.0">[NIO Selector #4 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,515 samples, 11.33%)</title><rect x="549.9" y="931.0" width="133.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.9" y="942.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,515 samples, 11.33%)</title><rect x="549.9" y="915.0" width="133.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.9" y="926.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,515 samples, 11.33%)</title><rect x="549.9" y="899.0" width="133.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.9" y="910.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,515 samples, 11.33%)</title><rect x="549.9" y="883.0" width="133.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="552.9" y="894.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,505 samples, 11.25%)</title><rect x="549.9" y="867.0" width="132.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.9" y="878.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,505 samples, 11.25%)</title><rect x="549.9" y="851.0" width="132.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="552.9" y="862.0">one/nio/http/Htt..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (1,505 samples, 11.25%)</title><rect x="549.9" y="835.0" width="132.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.9" y="846.0">RequestHandler0_..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.04%)</title><rect x="549.9" y="819.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.04%)</title><rect x="549.9" y="803.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="552.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.04%)</title><rect x="549.9" y="787.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5 samples, 0.04%)</title><rect x="549.9" y="771.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="552.9" y="782.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.04%)</title><rect x="549.9" y="755.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="552.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (1,499 samples, 11.21%)</title><rect x="550.4" y="819.0" width="132.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="553.4" y="830.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (19 samples, 0.14%)</title><rect x="550.4" y="803.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.4" y="814.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (19 samples, 0.14%)</title><rect x="550.4" y="787.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="553.4" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (19 samples, 0.14%)</title><rect x="550.4" y="771.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="553.4" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (19 samples, 0.14%)</title><rect x="550.4" y="755.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.4" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (19 samples, 0.14%)</title><rect x="550.4" y="739.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="553.4" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (19 samples, 0.14%)</title><rect x="550.4" y="723.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.4" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (19 samples, 0.14%)</title><rect x="550.4" y="707.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="553.4" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (19 samples, 0.14%)</title><rect x="550.4" y="691.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.4" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (19 samples, 0.14%)</title><rect x="550.4" y="675.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="553.4" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (17 samples, 0.13%)</title><rect x="550.6" y="659.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="553.6" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (12 samples, 0.09%)</title><rect x="550.6" y="643.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.6" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (12 samples, 0.09%)</title><rect x="550.6" y="627.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.04%)</title><rect x="550.8" y="611.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="553.8" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.04%)</title><rect x="550.8" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.8" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (6 samples, 0.04%)</title><rect x="550.8" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="553.8" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.04%)</title><rect x="550.8" y="563.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="553.8" y="574.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.04%)</title><rect x="550.8" y="547.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="553.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.03%)</title><rect x="551.3" y="611.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="554.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.03%)</title><rect x="551.3" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="554.3" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.03%)</title><rect x="551.3" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.3" y="590.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.03%)</title><rect x="551.3" y="563.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="554.3" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (5 samples, 0.04%)</title><rect x="551.6" y="643.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.6" y="654.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.04%)</title><rect x="551.6" y="627.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="554.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (5 samples, 0.04%)</title><rect x="551.6" y="611.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (5 samples, 0.04%)</title><rect x="551.6" y="595.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.6" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.04%)</title><rect x="551.6" y="579.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="554.6" y="590.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.04%)</title><rect x="551.6" y="563.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="554.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (1,478 samples, 11.05%)</title><rect x="552.3" y="803.0" width="130.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.3" y="814.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/Response.ok (3 samples, 0.02%)</title><rect x="552.3" y="787.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,474 samples, 11.02%)</title><rect x="552.5" y="787.0" width="130.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="555.5" y="798.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (130 samples, 0.97%)</title><rect x="552.5" y="771.0" width="11.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.5" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (130 samples, 0.97%)</title><rect x="552.5" y="755.0" width="11.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="555.5" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (130 samples, 0.97%)</title><rect x="552.5" y="739.0" width="11.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="555.5" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (130 samples, 0.97%)</title><rect x="552.5" y="723.0" width="11.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="555.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (130 samples, 0.97%)</title><rect x="552.5" y="707.0" width="11.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.5" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (117 samples, 0.87%)</title><rect x="552.5" y="691.0" width="10.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="555.5" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (59 samples, 0.44%)</title><rect x="552.5" y="675.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="555.5" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (59 samples, 0.44%)</title><rect x="552.5" y="659.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.5" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (59 samples, 0.44%)</title><rect x="552.5" y="643.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="555.5" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (59 samples, 0.44%)</title><rect x="552.5" y="627.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (59 samples, 0.44%)</title><rect x="552.5" y="611.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.5" y="622.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (59 samples, 0.44%)</title><rect x="552.5" y="595.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="555.5" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (59 samples, 0.44%)</title><rect x="552.5" y="579.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="555.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (59 samples, 0.44%)</title><rect x="552.5" y="563.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="555.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (59 samples, 0.44%)</title><rect x="552.5" y="547.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="555.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (59 samples, 0.44%)</title><rect x="552.5" y="531.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.5" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (20 samples, 0.15%)</title><rect x="552.5" y="515.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="555.5" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (20 samples, 0.15%)</title><rect x="552.5" y="499.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="555.5" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (39 samples, 0.29%)</title><rect x="554.3" y="515.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="557.3" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (39 samples, 0.29%)</title><rect x="554.3" y="499.0" width="3.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="557.3" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (58 samples, 0.43%)</title><rect x="557.7" y="675.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="560.7" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (58 samples, 0.43%)</title><rect x="557.7" y="659.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="560.7" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (58 samples, 0.43%)</title><rect x="557.7" y="643.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="560.7" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (58 samples, 0.43%)</title><rect x="557.7" y="627.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="560.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (58 samples, 0.43%)</title><rect x="557.7" y="611.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="560.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (58 samples, 0.43%)</title><rect x="557.7" y="595.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="560.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (47 samples, 0.35%)</title><rect x="557.7" y="579.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (47 samples, 0.35%)</title><rect x="557.7" y="563.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="560.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (47 samples, 0.35%)</title><rect x="557.7" y="547.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (47 samples, 0.35%)</title><rect x="557.7" y="531.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="560.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (14 samples, 0.10%)</title><rect x="557.7" y="515.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="560.7" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.10%)</title><rect x="557.7" y="499.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="560.7" y="510.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.10%)</title><rect x="557.7" y="483.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="560.7" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (23 samples, 0.17%)</title><rect x="559.0" y="515.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.0" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.17%)</title><rect x="559.0" y="499.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="562.0" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (3 samples, 0.02%)</title><rect x="561.0" y="515.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="564.0" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (4 samples, 0.03%)</title><rect x="561.3" y="515.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="564.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3 samples, 0.02%)</title><rect x="561.6" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.02%)</title><rect x="561.6" y="499.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="564.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="561.6" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="564.6" y="494.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="561.6" y="467.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="564.6" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (11 samples, 0.08%)</title><rect x="561.9" y="579.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.9" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (11 samples, 0.08%)</title><rect x="561.9" y="563.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (11 samples, 0.08%)</title><rect x="561.9" y="547.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="564.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (11 samples, 0.08%)</title><rect x="561.9" y="531.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="564.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (11 samples, 0.08%)</title><rect x="561.9" y="515.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="564.9" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.04%)</title><rect x="561.9" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="564.9" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.04%)</title><rect x="561.9" y="483.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="564.9" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.04%)</title><rect x="562.3" y="499.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="565.3" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.04%)</title><rect x="562.3" y="483.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="565.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$117/473479162.apply (13 samples, 0.10%)</title><rect x="562.8" y="691.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="565.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (13 samples, 0.10%)</title><rect x="562.8" y="675.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.8" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.07%)</title><rect x="562.8" y="659.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="565.8" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.07%)</title><rect x="562.8" y="643.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="565.8" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.03%)</title><rect x="563.6" y="659.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="566.6" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.03%)</title><rect x="563.6" y="643.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="566.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (1,341 samples, 10.03%)</title><rect x="564.3" y="771.0" width="118.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="567.3" y="782.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (1,341 samples, 10.03%)</title><rect x="564.3" y="755.0" width="118.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.3" y="766.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (1,337 samples, 10.00%)</title><rect x="564.6" y="739.0" width="118.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.6" y="750.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (347 samples, 2.59%)</title><rect x="564.6" y="723.0" width="30.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.6" y="734.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (347 samples, 2.59%)</title><rect x="564.6" y="707.0" width="30.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.6" y="718.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (7 samples, 0.05%)</title><rect x="564.7" y="691.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.7" y="702.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (7 samples, 0.05%)</title><rect x="564.7" y="675.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="567.7" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (337 samples, 2.52%)</title><rect x="565.5" y="691.0" width="29.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="568.5" y="702.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (337 samples, 2.52%)</title><rect x="565.5" y="675.0" width="29.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="568.5" y="686.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (9 samples, 0.07%)</title><rect x="565.5" y="659.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.5" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.07%)</title><rect x="565.5" y="643.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="568.5" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.07%)</title><rect x="565.5" y="627.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="568.5" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (328 samples, 2.45%)</title><rect x="566.3" y="659.0" width="28.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.3" y="670.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (328 samples, 2.45%)</title><rect x="566.3" y="643.0" width="28.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="569.3" y="654.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (328 samples, 2.45%)</title><rect x="566.3" y="627.0" width="28.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="569.3" y="638.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (328 samples, 2.45%)</title><rect x="566.3" y="611.0" width="28.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="569.3" y="622.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (248 samples, 1.85%)</title><rect x="566.3" y="595.0" width="21.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="569.3" y="606.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (246 samples, 1.84%)</title><rect x="566.5" y="579.0" width="21.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="569.5" y="590.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (246 samples, 1.84%)</title><rect x="566.5" y="563.0" width="21.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="569.5" y="574.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (246 samples, 1.84%)</title><rect x="566.5" y="547.0" width="21.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="569.5" y="558.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (65 samples, 0.49%)</title><rect x="566.5" y="531.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="569.5" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (65 samples, 0.49%)</title><rect x="566.5" y="515.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="569.5" y="526.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.49%)</title><rect x="566.5" y="499.0" width="5.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="569.5" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (140 samples, 1.05%)</title><rect x="572.2" y="531.0" width="12.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="575.2" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (140 samples, 1.05%)</title><rect x="572.2" y="515.0" width="12.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="575.2" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (14 samples, 0.10%)</title><rect x="584.6" y="531.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="587.6" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (8 samples, 0.06%)</title><rect x="585.8" y="531.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="588.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (19 samples, 0.14%)</title><rect x="586.5" y="531.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="589.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (19 samples, 0.14%)</title><rect x="586.5" y="515.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="589.5" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (19 samples, 0.14%)</title><rect x="586.5" y="499.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="589.5" y="510.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.14%)</title><rect x="586.5" y="483.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="589.5" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (80 samples, 0.60%)</title><rect x="588.2" y="595.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="591.2" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (80 samples, 0.60%)</title><rect x="588.2" y="579.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (80 samples, 0.60%)</title><rect x="588.2" y="563.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (80 samples, 0.60%)</title><rect x="588.2" y="547.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="591.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (80 samples, 0.60%)</title><rect x="588.2" y="531.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.2" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (32 samples, 0.24%)</title><rect x="588.2" y="515.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="591.2" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (32 samples, 0.24%)</title><rect x="588.2" y="499.0" width="2.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="591.2" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (37 samples, 0.28%)</title><rect x="591.0" y="515.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="594.0" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (37 samples, 0.28%)</title><rect x="591.0" y="499.0" width="3.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="594.0" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (8 samples, 0.06%)</title><rect x="594.3" y="515.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.06%)</title><rect x="594.3" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="597.3" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.06%)</title><rect x="594.3" y="483.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="597.3" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.02%)</title><rect x="595.0" y="515.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="598.0" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.02%)</title><rect x="595.0" y="499.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="598.0" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (961 samples, 7.19%)</title><rect x="595.2" y="723.0" width="84.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="598.2" y="734.0">java/util/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (961 samples, 7.19%)</title><rect x="595.2" y="707.0" width="84.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="598.2" y="718.0">java/lang/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (960 samples, 7.18%)</title><rect x="595.3" y="691.0" width="84.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.3" y="702.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (960 samples, 7.18%)</title><rect x="595.3" y="675.0" width="84.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="598.3" y="686.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (960 samples, 7.18%)</title><rect x="595.3" y="659.0" width="84.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="598.3" y="670.0">ru/mail/po..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (12 samples, 0.09%)</title><rect x="595.3" y="643.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="598.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (948 samples, 7.09%)</title><rect x="596.4" y="643.0" width="83.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.4" y="654.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (948 samples, 7.09%)</title><rect x="596.4" y="627.0" width="83.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.4" y="638.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (948 samples, 7.09%)</title><rect x="596.4" y="611.0" width="83.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.4" y="622.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (401 samples, 3.00%)</title><rect x="596.4" y="595.0" width="35.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="599.4" y="606.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (401 samples, 3.00%)</title><rect x="596.4" y="579.0" width="35.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="599.4" y="590.0">jav..</text>
</g>
<g>
<title>byte[] (401 samples, 3.00%)</title><rect x="596.4" y="563.0" width="35.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="599.4" y="574.0">byt..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (369 samples, 2.76%)</title><rect x="631.8" y="595.0" width="32.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="634.8" y="606.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (369 samples, 2.76%)</title><rect x="631.8" y="579.0" width="32.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="634.8" y="590.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (178 samples, 1.33%)</title><rect x="664.3" y="595.0" width="15.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="667.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (178 samples, 1.33%)</title><rect x="664.3" y="579.0" width="15.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="667.3" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (178 samples, 1.33%)</title><rect x="664.3" y="563.0" width="15.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="667.3" y="574.0"></text>
</g>
<g>
<title>byte[] (178 samples, 1.33%)</title><rect x="664.3" y="547.0" width="15.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="667.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (29 samples, 0.22%)</title><rect x="680.0" y="723.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (28 samples, 0.21%)</title><rect x="680.1" y="707.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.1" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (28 samples, 0.21%)</title><rect x="680.1" y="691.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.1" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (19 samples, 0.14%)</title><rect x="680.1" y="675.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="683.1" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (19 samples, 0.14%)</title><rect x="680.1" y="659.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="683.1" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (19 samples, 0.14%)</title><rect x="680.1" y="643.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (19 samples, 0.14%)</title><rect x="680.1" y="627.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.1" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (19 samples, 0.14%)</title><rect x="680.1" y="611.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.1" y="622.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (19 samples, 0.14%)</title><rect x="680.1" y="595.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.1" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (19 samples, 0.14%)</title><rect x="680.1" y="579.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (19 samples, 0.14%)</title><rect x="680.1" y="563.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="683.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (19 samples, 0.14%)</title><rect x="680.1" y="547.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (19 samples, 0.14%)</title><rect x="680.1" y="531.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="683.1" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.07%)</title><rect x="680.1" y="515.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="683.1" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.07%)</title><rect x="680.1" y="499.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="683.1" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 0.07%)</title><rect x="680.9" y="515.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.9" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.07%)</title><rect x="680.9" y="499.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="683.9" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (9 samples, 0.07%)</title><rect x="681.8" y="675.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="684.8" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (9 samples, 0.07%)</title><rect x="681.8" y="659.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="684.8" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (9 samples, 0.07%)</title><rect x="681.8" y="643.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="684.8" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (9 samples, 0.07%)</title><rect x="681.8" y="627.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="684.8" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.07%)</title><rect x="681.8" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="684.8" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.07%)</title><rect x="681.8" y="595.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.8" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5 samples, 0.04%)</title><rect x="681.8" y="579.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.04%)</title><rect x="681.8" y="563.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.04%)</title><rect x="681.8" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="684.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (5 samples, 0.04%)</title><rect x="681.8" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.8" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.04%)</title><rect x="681.8" y="515.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="684.8" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.04%)</title><rect x="681.8" y="499.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="684.8" y="510.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.03%)</title><rect x="682.2" y="579.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.2" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.03%)</title><rect x="682.2" y="563.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.03%)</title><rect x="682.2" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="685.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.03%)</title><rect x="682.2" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="685.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (4 samples, 0.03%)</title><rect x="682.2" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.05%)</title><rect x="682.7" y="867.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.03%)</title><rect x="682.9" y="851.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.9" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.03%)</title><rect x="682.9" y="835.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.9" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.02%)</title><rect x="683.3" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="686.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.02%)</title><rect x="683.3" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="686.3" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=6991] (1,540 samples, 11.52%)</title><rect x="683.6" y="947.0" width="135.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="686.6" y="958.0">[NIO Selector #5 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,540 samples, 11.52%)</title><rect x="683.6" y="931.0" width="135.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="686.6" y="942.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,540 samples, 11.52%)</title><rect x="683.6" y="915.0" width="135.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.6" y="926.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,540 samples, 11.52%)</title><rect x="683.6" y="899.0" width="135.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="686.6" y="910.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,540 samples, 11.52%)</title><rect x="683.6" y="883.0" width="135.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.6" y="894.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,531 samples, 11.45%)</title><rect x="683.6" y="867.0" width="135.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="686.6" y="878.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,531 samples, 11.45%)</title><rect x="683.6" y="851.0" width="135.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.6" y="862.0">one/nio/http/Http..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (1,530 samples, 11.44%)</title><rect x="683.6" y="835.0" width="135.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.6" y="846.0">RequestHandler0_r..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (1,527 samples, 11.42%)</title><rect x="683.8" y="819.0" width="134.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="686.8" y="830.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (21 samples, 0.16%)</title><rect x="683.8" y="803.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.8" y="814.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (21 samples, 0.16%)</title><rect x="683.8" y="787.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="686.8" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (21 samples, 0.16%)</title><rect x="683.8" y="771.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.8" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (21 samples, 0.16%)</title><rect x="683.8" y="755.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="686.8" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (21 samples, 0.16%)</title><rect x="683.8" y="739.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="686.8" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (21 samples, 0.16%)</title><rect x="683.8" y="723.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="686.8" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (21 samples, 0.16%)</title><rect x="683.8" y="707.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.8" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (21 samples, 0.16%)</title><rect x="683.8" y="691.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.8" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (21 samples, 0.16%)</title><rect x="683.8" y="675.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.8" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (19 samples, 0.14%)</title><rect x="684.0" y="659.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.0" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (16 samples, 0.12%)</title><rect x="684.0" y="643.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.0" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (16 samples, 0.12%)</title><rect x="684.0" y="627.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="687.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.06%)</title><rect x="684.3" y="611.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="687.3" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.06%)</title><rect x="684.3" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.3" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8 samples, 0.06%)</title><rect x="684.3" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="687.3" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.06%)</title><rect x="684.3" y="563.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="687.3" y="574.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.06%)</title><rect x="684.3" y="547.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="687.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5 samples, 0.04%)</title><rect x="685.0" y="611.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="688.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.04%)</title><rect x="685.0" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.0" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.04%)</title><rect x="685.0" y="579.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="688.0" y="590.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.04%)</title><rect x="685.0" y="563.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="688.0" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (3 samples, 0.02%)</title><rect x="685.4" y="643.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="688.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.02%)</title><rect x="685.4" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="688.4" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.02%)</title><rect x="685.4" y="611.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="688.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.02%)</title><rect x="685.4" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="688.4" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.02%)</title><rect x="685.4" y="579.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="688.4" y="590.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="685.4" y="563.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="688.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (1,503 samples, 11.24%)</title><rect x="685.9" y="803.0" width="132.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="688.9" y="814.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/Response.ok (4 samples, 0.03%)</title><rect x="685.9" y="787.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="688.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.02%)</title><rect x="686.0" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="689.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,497 samples, 11.20%)</title><rect x="686.3" y="787.0" width="132.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.3" y="798.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (143 samples, 1.07%)</title><rect x="686.3" y="771.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.3" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (143 samples, 1.07%)</title><rect x="686.3" y="755.0" width="12.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="689.3" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (143 samples, 1.07%)</title><rect x="686.3" y="739.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.3" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (143 samples, 1.07%)</title><rect x="686.3" y="723.0" width="12.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (143 samples, 1.07%)</title><rect x="686.3" y="707.0" width="12.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="689.3" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (124 samples, 0.93%)</title><rect x="686.3" y="691.0" width="10.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.3" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (70 samples, 0.52%)</title><rect x="686.3" y="675.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.3" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (70 samples, 0.52%)</title><rect x="686.3" y="659.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="689.3" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (70 samples, 0.52%)</title><rect x="686.3" y="643.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="689.3" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (70 samples, 0.52%)</title><rect x="686.3" y="627.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="689.3" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (70 samples, 0.52%)</title><rect x="686.3" y="611.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="689.3" y="622.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (70 samples, 0.52%)</title><rect x="686.3" y="595.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="689.3" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (70 samples, 0.52%)</title><rect x="686.3" y="579.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="689.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (70 samples, 0.52%)</title><rect x="686.3" y="563.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (70 samples, 0.52%)</title><rect x="686.3" y="547.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (70 samples, 0.52%)</title><rect x="686.3" y="531.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="689.3" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (34 samples, 0.25%)</title><rect x="686.3" y="515.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="689.3" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (34 samples, 0.25%)</title><rect x="686.3" y="499.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="689.3" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (36 samples, 0.27%)</title><rect x="689.3" y="515.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="692.3" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 0.27%)</title><rect x="689.3" y="499.0" width="3.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="692.3" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (54 samples, 0.40%)</title><rect x="692.5" y="675.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="695.5" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (54 samples, 0.40%)</title><rect x="692.5" y="659.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.5" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (54 samples, 0.40%)</title><rect x="692.5" y="643.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.5" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (54 samples, 0.40%)</title><rect x="692.5" y="627.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (54 samples, 0.40%)</title><rect x="692.5" y="611.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="695.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (54 samples, 0.40%)</title><rect x="692.5" y="595.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (40 samples, 0.30%)</title><rect x="692.5" y="579.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (40 samples, 0.30%)</title><rect x="692.5" y="563.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (40 samples, 0.30%)</title><rect x="692.5" y="547.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (40 samples, 0.30%)</title><rect x="692.5" y="531.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="695.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.05%)</title><rect x="692.5" y="515.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.5" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.05%)</title><rect x="692.5" y="499.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.5" y="510.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.05%)</title><rect x="692.5" y="483.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="695.5" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (28 samples, 0.21%)</title><rect x="693.1" y="515.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.1" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.21%)</title><rect x="693.1" y="499.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="696.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3 samples, 0.02%)</title><rect x="695.7" y="515.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="698.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.02%)</title><rect x="695.7" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="695.7" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="698.7" y="494.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="695.7" y="467.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="698.7" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.10%)</title><rect x="696.0" y="579.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="699.0" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.10%)</title><rect x="696.0" y="563.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="699.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (14 samples, 0.10%)</title><rect x="696.0" y="547.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (14 samples, 0.10%)</title><rect x="696.0" y="531.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (14 samples, 0.10%)</title><rect x="696.0" y="515.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.0" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.06%)</title><rect x="696.0" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="699.0" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.06%)</title><rect x="696.0" y="483.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="699.0" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.04%)</title><rect x="696.7" y="499.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.7" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.04%)</title><rect x="696.7" y="483.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="699.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$117/473479162.apply (19 samples, 0.14%)</title><rect x="697.2" y="691.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="700.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (19 samples, 0.14%)</title><rect x="697.2" y="675.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.2" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.07%)</title><rect x="697.2" y="659.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="700.2" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.07%)</title><rect x="697.2" y="643.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="700.2" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.07%)</title><rect x="698.1" y="659.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="701.1" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.07%)</title><rect x="698.1" y="643.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="701.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (5 samples, 0.04%)</title><rect x="698.9" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="701.9" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (5 samples, 0.04%)</title><rect x="698.9" y="755.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$127/378214072.apply (5 samples, 0.04%)</title><rect x="698.9" y="739.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="701.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (5 samples, 0.04%)</title><rect x="698.9" y="723.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="701.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (4 samples, 0.03%)</title><rect x="699.0" y="707.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.0" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.03%)</title><rect x="699.0" y="691.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.0" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.03%)</title><rect x="699.0" y="675.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="702.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (1,348 samples, 10.08%)</title><rect x="699.5" y="771.0" width="118.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.5" y="782.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (1,348 samples, 10.08%)</title><rect x="699.5" y="755.0" width="118.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.5" y="766.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (3 samples, 0.02%)</title><rect x="700.0" y="739.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="703.0" y="750.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3 samples, 0.02%)</title><rect x="700.0" y="723.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="703.0" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.02%)</title><rect x="700.0" y="707.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="703.0" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (3 samples, 0.02%)</title><rect x="700.0" y="691.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="703.0" y="702.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (3 samples, 0.02%)</title><rect x="700.0" y="675.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="703.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (1,336 samples, 9.99%)</title><rect x="700.2" y="739.0" width="117.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="703.2" y="750.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (351 samples, 2.62%)</title><rect x="700.2" y="723.0" width="31.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="703.2" y="734.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (350 samples, 2.62%)</title><rect x="700.3" y="707.0" width="30.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="703.3" y="718.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (13 samples, 0.10%)</title><rect x="700.3" y="691.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.3" y="702.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (13 samples, 0.10%)</title><rect x="700.3" y="675.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="703.3" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (334 samples, 2.50%)</title><rect x="701.7" y="691.0" width="29.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="704.7" y="702.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (334 samples, 2.50%)</title><rect x="701.7" y="675.0" width="29.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="704.7" y="686.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (10 samples, 0.07%)</title><rect x="701.7" y="659.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.7" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.07%)</title><rect x="701.7" y="643.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="704.7" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.07%)</title><rect x="701.7" y="627.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="704.7" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (324 samples, 2.42%)</title><rect x="702.6" y="659.0" width="28.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="705.6" y="670.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (324 samples, 2.42%)</title><rect x="702.6" y="643.0" width="28.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="705.6" y="654.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (324 samples, 2.42%)</title><rect x="702.6" y="627.0" width="28.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.6" y="638.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (324 samples, 2.42%)</title><rect x="702.6" y="611.0" width="28.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="705.6" y="622.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (245 samples, 1.83%)</title><rect x="702.6" y="595.0" width="21.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.6" y="606.0">c..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.02%)</title><rect x="702.6" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (242 samples, 1.81%)</title><rect x="702.9" y="579.0" width="21.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.9" y="590.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (242 samples, 1.81%)</title><rect x="702.9" y="563.0" width="21.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="705.9" y="574.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (242 samples, 1.81%)</title><rect x="702.9" y="547.0" width="21.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.9" y="558.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (60 samples, 0.45%)</title><rect x="702.9" y="531.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="705.9" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (60 samples, 0.45%)</title><rect x="702.9" y="515.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.9" y="526.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.45%)</title><rect x="702.9" y="499.0" width="5.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="705.9" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (124 samples, 0.93%)</title><rect x="708.2" y="531.0" width="10.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.2" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (124 samples, 0.93%)</title><rect x="708.2" y="515.0" width="10.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="711.2" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (19 samples, 0.14%)</title><rect x="719.1" y="531.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="722.1" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (18 samples, 0.13%)</title><rect x="720.8" y="531.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="723.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (21 samples, 0.16%)</title><rect x="722.4" y="531.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="725.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (21 samples, 0.16%)</title><rect x="722.4" y="515.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="725.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (21 samples, 0.16%)</title><rect x="722.4" y="499.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="725.4" y="510.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.16%)</title><rect x="722.4" y="483.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="725.4" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (79 samples, 0.59%)</title><rect x="724.2" y="595.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="727.2" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (79 samples, 0.59%)</title><rect x="724.2" y="579.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="727.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (79 samples, 0.59%)</title><rect x="724.2" y="563.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="727.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (79 samples, 0.59%)</title><rect x="724.2" y="547.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="727.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (79 samples, 0.59%)</title><rect x="724.2" y="531.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="727.2" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (34 samples, 0.25%)</title><rect x="724.2" y="515.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="727.2" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (34 samples, 0.25%)</title><rect x="724.2" y="499.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="727.2" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (31 samples, 0.23%)</title><rect x="727.2" y="515.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.2" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (31 samples, 0.23%)</title><rect x="727.2" y="499.0" width="2.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="730.2" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (7 samples, 0.05%)</title><rect x="730.0" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.0" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.05%)</title><rect x="730.0" y="499.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.0" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.05%)</title><rect x="730.0" y="483.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="733.0" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.05%)</title><rect x="730.6" y="515.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.6" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.05%)</title><rect x="730.6" y="499.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="733.6" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (961 samples, 7.19%)</title><rect x="731.4" y="723.0" width="84.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="734.4" y="734.0">java/util/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (961 samples, 7.19%)</title><rect x="731.4" y="707.0" width="84.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="734.4" y="718.0">java/lang/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (960 samples, 7.18%)</title><rect x="731.5" y="691.0" width="84.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.5" y="702.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (960 samples, 7.18%)</title><rect x="731.5" y="675.0" width="84.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.5" y="686.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (960 samples, 7.18%)</title><rect x="731.5" y="659.0" width="84.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="734.5" y="670.0">ru/mail/po..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (23 samples, 0.17%)</title><rect x="731.5" y="643.0" width="2.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="734.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (937 samples, 7.01%)</title><rect x="733.5" y="643.0" width="82.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="736.5" y="654.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (937 samples, 7.01%)</title><rect x="733.5" y="627.0" width="82.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="736.5" y="638.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (937 samples, 7.01%)</title><rect x="733.5" y="611.0" width="82.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.5" y="622.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (393 samples, 2.94%)</title><rect x="733.5" y="595.0" width="34.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="736.5" y="606.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (393 samples, 2.94%)</title><rect x="733.5" y="579.0" width="34.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="736.5" y="590.0">ja..</text>
</g>
<g>
<title>byte[] (393 samples, 2.94%)</title><rect x="733.5" y="563.0" width="34.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="736.5" y="574.0">by..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (372 samples, 2.78%)</title><rect x="768.2" y="595.0" width="32.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="771.2" y="606.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (372 samples, 2.78%)</title><rect x="768.2" y="579.0" width="32.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="771.2" y="590.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (172 samples, 1.29%)</title><rect x="801.0" y="595.0" width="15.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="804.0" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (172 samples, 1.29%)</title><rect x="801.0" y="579.0" width="15.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.0" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (172 samples, 1.29%)</title><rect x="801.0" y="563.0" width="15.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="804.0" y="574.0"></text>
</g>
<g>
<title>byte[] (172 samples, 1.29%)</title><rect x="801.0" y="547.0" width="15.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="804.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (22 samples, 0.16%)</title><rect x="816.2" y="723.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="819.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (22 samples, 0.16%)</title><rect x="816.2" y="707.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="819.2" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (22 samples, 0.16%)</title><rect x="816.2" y="691.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="819.2" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (12 samples, 0.09%)</title><rect x="816.2" y="675.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="819.2" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (12 samples, 0.09%)</title><rect x="816.2" y="659.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="819.2" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (12 samples, 0.09%)</title><rect x="816.2" y="643.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="819.2" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.09%)</title><rect x="816.2" y="627.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="819.2" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.09%)</title><rect x="816.2" y="611.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="819.2" y="622.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (12 samples, 0.09%)</title><rect x="816.2" y="595.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="819.2" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (12 samples, 0.09%)</title><rect x="816.2" y="579.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (12 samples, 0.09%)</title><rect x="816.2" y="563.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="819.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (12 samples, 0.09%)</title><rect x="816.2" y="547.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="819.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (12 samples, 0.09%)</title><rect x="816.2" y="531.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="819.2" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.04%)</title><rect x="816.2" y="515.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.2" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.04%)</title><rect x="816.2" y="499.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="819.2" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.04%)</title><rect x="816.7" y="515.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="819.7" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.04%)</title><rect x="816.7" y="499.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="819.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (10 samples, 0.07%)</title><rect x="817.3" y="675.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.3" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (10 samples, 0.07%)</title><rect x="817.3" y="659.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="820.3" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (10 samples, 0.07%)</title><rect x="817.3" y="643.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.3" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (10 samples, 0.07%)</title><rect x="817.3" y="627.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="820.3" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.07%)</title><rect x="817.3" y="611.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="820.3" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.07%)</title><rect x="817.3" y="595.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.3" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (7 samples, 0.05%)</title><rect x="817.3" y="579.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.05%)</title><rect x="817.3" y="563.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="820.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.05%)</title><rect x="817.3" y="547.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="820.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (7 samples, 0.05%)</title><rect x="817.3" y="531.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="820.3" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.04%)</title><rect x="817.4" y="515.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="820.4" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.04%)</title><rect x="817.4" y="499.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="820.4" y="510.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.02%)</title><rect x="817.9" y="579.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="820.9" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.02%)</title><rect x="817.9" y="563.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="820.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.02%)</title><rect x="817.9" y="547.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="820.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.02%)</title><rect x="817.9" y="531.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="820.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (3 samples, 0.02%)</title><rect x="817.9" y="515.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (3 samples, 0.02%)</title><rect x="818.1" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="821.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.04%)</title><rect x="818.7" y="867.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="821.7" y="878.0"></text>
</g>
<g>
<title>one.nio.http.Request (3 samples, 0.02%)</title><rect x="818.7" y="851.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="821.7" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.02%)</title><rect x="819.2" y="867.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="822.2" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.02%)</title><rect x="819.2" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.2" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=6992] (1,524 samples, 11.40%)</title><rect x="819.5" y="947.0" width="134.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="822.5" y="958.0">[NIO Selector #6 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,524 samples, 11.40%)</title><rect x="819.5" y="931.0" width="134.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.5" y="942.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,523 samples, 11.39%)</title><rect x="819.6" y="915.0" width="134.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.6" y="926.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,523 samples, 11.39%)</title><rect x="819.6" y="899.0" width="134.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.6" y="910.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,523 samples, 11.39%)</title><rect x="819.6" y="883.0" width="134.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="822.6" y="894.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,514 samples, 11.32%)</title><rect x="819.6" y="867.0" width="133.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.6" y="878.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,514 samples, 11.32%)</title><rect x="819.6" y="851.0" width="133.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.6" y="862.0">one/nio/http/Http..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (1,513 samples, 11.31%)</title><rect x="819.6" y="835.0" width="133.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="822.6" y="846.0">RequestHandler0_r..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (1,511 samples, 11.30%)</title><rect x="819.7" y="819.0" width="133.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="822.7" y="830.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (26 samples, 0.19%)</title><rect x="819.7" y="803.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="822.7" y="814.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (26 samples, 0.19%)</title><rect x="819.7" y="787.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.7" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (26 samples, 0.19%)</title><rect x="819.7" y="771.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="822.7" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (24 samples, 0.18%)</title><rect x="819.9" y="755.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="822.9" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (24 samples, 0.18%)</title><rect x="819.9" y="739.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.9" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (24 samples, 0.18%)</title><rect x="819.9" y="723.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.9" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (24 samples, 0.18%)</title><rect x="819.9" y="707.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.9" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (24 samples, 0.18%)</title><rect x="819.9" y="691.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.9" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (24 samples, 0.18%)</title><rect x="819.9" y="675.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.9" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (4 samples, 0.03%)</title><rect x="819.9" y="659.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="822.9" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (4 samples, 0.03%)</title><rect x="819.9" y="643.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="822.9" y="654.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.03%)</title><rect x="819.9" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="822.9" y="638.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.03%)</title><rect x="819.9" y="611.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="822.9" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (20 samples, 0.15%)</title><rect x="820.3" y="659.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="823.3" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (14 samples, 0.10%)</title><rect x="820.3" y="643.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="823.3" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (14 samples, 0.10%)</title><rect x="820.3" y="627.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="823.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4 samples, 0.03%)</title><rect x="820.4" y="611.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.4" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.03%)</title><rect x="820.4" y="595.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.4" y="606.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.03%)</title><rect x="820.4" y="579.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="823.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.05%)</title><rect x="820.8" y="611.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="823.8" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.05%)</title><rect x="820.8" y="595.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="823.8" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (7 samples, 0.05%)</title><rect x="820.8" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="823.8" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.05%)</title><rect x="820.8" y="563.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="823.8" y="574.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.05%)</title><rect x="820.8" y="547.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="823.8" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (6 samples, 0.04%)</title><rect x="821.5" y="643.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="824.5" y="654.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.04%)</title><rect x="821.5" y="627.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.5" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.04%)</title><rect x="821.5" y="611.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="824.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.04%)</title><rect x="821.5" y="595.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="824.5" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.04%)</title><rect x="821.5" y="579.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="824.5" y="590.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.04%)</title><rect x="821.5" y="563.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="824.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (1,485 samples, 11.11%)</title><rect x="822.0" y="803.0" width="131.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="825.0" y="814.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/Response.ok (4 samples, 0.03%)</title><rect x="822.0" y="787.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="825.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.03%)</title><rect x="822.0" y="771.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="825.0" y="782.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="822.0" y="755.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="825.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,481 samples, 11.08%)</title><rect x="822.4" y="787.0" width="130.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="825.4" y="798.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (128 samples, 0.96%)</title><rect x="822.4" y="771.0" width="11.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="825.4" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (128 samples, 0.96%)</title><rect x="822.4" y="755.0" width="11.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="825.4" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (128 samples, 0.96%)</title><rect x="822.4" y="739.0" width="11.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="825.4" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (128 samples, 0.96%)</title><rect x="822.4" y="723.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="825.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (128 samples, 0.96%)</title><rect x="822.4" y="707.0" width="11.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="825.4" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (112 samples, 0.84%)</title><rect x="822.4" y="691.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="825.4" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (53 samples, 0.40%)</title><rect x="822.4" y="675.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="825.4" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (53 samples, 0.40%)</title><rect x="822.4" y="659.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="825.4" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (53 samples, 0.40%)</title><rect x="822.4" y="643.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="825.4" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (53 samples, 0.40%)</title><rect x="822.4" y="627.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="825.4" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (53 samples, 0.40%)</title><rect x="822.4" y="611.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="825.4" y="622.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (53 samples, 0.40%)</title><rect x="822.4" y="595.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="825.4" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (53 samples, 0.40%)</title><rect x="822.4" y="579.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="825.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (53 samples, 0.40%)</title><rect x="822.4" y="563.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="825.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (53 samples, 0.40%)</title><rect x="822.4" y="547.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="825.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (53 samples, 0.40%)</title><rect x="822.4" y="531.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="825.4" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (26 samples, 0.19%)</title><rect x="822.4" y="515.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="825.4" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (26 samples, 0.19%)</title><rect x="822.4" y="499.0" width="2.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="825.4" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (27 samples, 0.20%)</title><rect x="824.7" y="515.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="827.7" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.20%)</title><rect x="824.7" y="499.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="827.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (59 samples, 0.44%)</title><rect x="827.1" y="675.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.1" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (59 samples, 0.44%)</title><rect x="827.1" y="659.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="830.1" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (59 samples, 0.44%)</title><rect x="827.1" y="643.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.1" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (59 samples, 0.44%)</title><rect x="827.1" y="627.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="830.1" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (59 samples, 0.44%)</title><rect x="827.1" y="611.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="830.1" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (59 samples, 0.44%)</title><rect x="827.1" y="595.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (47 samples, 0.35%)</title><rect x="827.1" y="579.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (47 samples, 0.35%)</title><rect x="827.1" y="563.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="830.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (47 samples, 0.35%)</title><rect x="827.1" y="547.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (47 samples, 0.35%)</title><rect x="827.1" y="531.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.06%)</title><rect x="827.1" y="515.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="830.1" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.06%)</title><rect x="827.1" y="499.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="830.1" y="510.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.06%)</title><rect x="827.1" y="483.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="830.1" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (28 samples, 0.21%)</title><rect x="827.8" y="515.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="830.8" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.21%)</title><rect x="827.8" y="499.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="830.8" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (5 samples, 0.04%)</title><rect x="830.2" y="515.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="833.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (5 samples, 0.04%)</title><rect x="830.8" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="833.8" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.04%)</title><rect x="830.8" y="499.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="833.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="830.8" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="833.8" y="494.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.04%)</title><rect x="830.8" y="467.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="833.8" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (12 samples, 0.09%)</title><rect x="831.2" y="579.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="834.2" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (12 samples, 0.09%)</title><rect x="831.2" y="563.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="834.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (12 samples, 0.09%)</title><rect x="831.2" y="547.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="834.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (12 samples, 0.09%)</title><rect x="831.2" y="531.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="834.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (12 samples, 0.09%)</title><rect x="831.2" y="515.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="834.2" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.07%)</title><rect x="831.2" y="499.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="834.2" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.07%)</title><rect x="831.2" y="483.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="834.2" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.02%)</title><rect x="832.0" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="835.0" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.02%)</title><rect x="832.0" y="483.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="835.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$117/473479162.apply (16 samples, 0.12%)</title><rect x="832.3" y="691.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (16 samples, 0.12%)</title><rect x="832.3" y="675.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.3" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.04%)</title><rect x="832.3" y="659.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="835.3" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.04%)</title><rect x="832.3" y="643.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="835.3" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.08%)</title><rect x="832.7" y="659.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="835.7" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.08%)</title><rect x="832.7" y="643.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="835.7" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (6 samples, 0.04%)</title><rect x="833.7" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="836.7" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (6 samples, 0.04%)</title><rect x="833.7" y="755.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="836.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$127/378214072.apply (6 samples, 0.04%)</title><rect x="833.7" y="739.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="836.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (6 samples, 0.04%)</title><rect x="833.7" y="723.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="836.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (6 samples, 0.04%)</title><rect x="833.7" y="707.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="836.7" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.02%)</title><rect x="833.7" y="691.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="836.7" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.02%)</title><rect x="833.7" y="675.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="836.7" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.02%)</title><rect x="833.9" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="836.9" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.02%)</title><rect x="833.9" y="675.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="836.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (1,346 samples, 10.07%)</title><rect x="834.3" y="771.0" width="118.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.3" y="782.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (1,346 samples, 10.07%)</title><rect x="834.3" y="755.0" width="118.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="837.3" y="766.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (1,337 samples, 10.00%)</title><rect x="834.6" y="739.0" width="117.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="837.6" y="750.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (329 samples, 2.46%)</title><rect x="834.6" y="723.0" width="29.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.6" y="734.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (329 samples, 2.46%)</title><rect x="834.6" y="707.0" width="29.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="837.6" y="718.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (14 samples, 0.10%)</title><rect x="834.6" y="691.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.6" y="702.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (14 samples, 0.10%)</title><rect x="834.6" y="675.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="837.6" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (315 samples, 2.36%)</title><rect x="835.8" y="691.0" width="27.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="838.8" y="702.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (315 samples, 2.36%)</title><rect x="835.8" y="675.0" width="27.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="838.8" y="686.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (7 samples, 0.05%)</title><rect x="835.8" y="659.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="838.8" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.05%)</title><rect x="835.8" y="643.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="838.8" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.05%)</title><rect x="835.8" y="627.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="838.8" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (308 samples, 2.30%)</title><rect x="836.4" y="659.0" width="27.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.4" y="670.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (308 samples, 2.30%)</title><rect x="836.4" y="643.0" width="27.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="839.4" y="654.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (308 samples, 2.30%)</title><rect x="836.4" y="627.0" width="27.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="839.4" y="638.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (308 samples, 2.30%)</title><rect x="836.4" y="611.0" width="27.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="839.4" y="622.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (226 samples, 1.69%)</title><rect x="836.4" y="595.0" width="19.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.4" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (5 samples, 0.04%)</title><rect x="836.4" y="579.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="839.4" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (4 samples, 0.03%)</title><rect x="836.4" y="563.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="839.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$59/2145435247.apply (4 samples, 0.03%)</title><rect x="836.4" y="547.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="839.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (4 samples, 0.03%)</title><rect x="836.4" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="839.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (221 samples, 1.65%)</title><rect x="836.8" y="579.0" width="19.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="839.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (221 samples, 1.65%)</title><rect x="836.8" y="563.0" width="19.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="839.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (221 samples, 1.65%)</title><rect x="836.8" y="547.0" width="19.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="839.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (42 samples, 0.31%)</title><rect x="836.8" y="531.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="839.8" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (42 samples, 0.31%)</title><rect x="836.8" y="515.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="839.8" y="526.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.31%)</title><rect x="836.8" y="499.0" width="3.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="839.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (139 samples, 1.04%)</title><rect x="840.6" y="531.0" width="12.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.6" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (139 samples, 1.04%)</title><rect x="840.6" y="515.0" width="12.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="843.6" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (9 samples, 0.07%)</title><rect x="852.8" y="531.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="855.8" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (15 samples, 0.11%)</title><rect x="853.6" y="531.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="856.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (16 samples, 0.12%)</title><rect x="854.9" y="531.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="857.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (16 samples, 0.12%)</title><rect x="854.9" y="515.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="857.9" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.12%)</title><rect x="854.9" y="499.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="857.9" y="510.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.12%)</title><rect x="854.9" y="483.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="857.9" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (82 samples, 0.61%)</title><rect x="856.3" y="595.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="859.3" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (82 samples, 0.61%)</title><rect x="856.3" y="579.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="859.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (82 samples, 0.61%)</title><rect x="856.3" y="563.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="859.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (82 samples, 0.61%)</title><rect x="856.3" y="547.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="859.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (82 samples, 0.61%)</title><rect x="856.3" y="531.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="859.3" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (40 samples, 0.30%)</title><rect x="856.3" y="515.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="859.3" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (40 samples, 0.30%)</title><rect x="856.3" y="499.0" width="3.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="859.3" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (30 samples, 0.22%)</title><rect x="859.9" y="515.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="862.9" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (30 samples, 0.22%)</title><rect x="859.9" y="499.0" width="2.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="862.9" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (8 samples, 0.06%)</title><rect x="862.5" y="515.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="865.5" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.06%)</title><rect x="862.5" y="499.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="865.5" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.06%)</title><rect x="862.5" y="483.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="865.5" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.03%)</title><rect x="863.2" y="515.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="866.2" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.03%)</title><rect x="863.2" y="499.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="866.2" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (984 samples, 7.36%)</title><rect x="863.6" y="723.0" width="86.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="866.6" y="734.0">java/util/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (984 samples, 7.36%)</title><rect x="863.6" y="707.0" width="86.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="866.6" y="718.0">java/lang/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (984 samples, 7.36%)</title><rect x="863.6" y="691.0" width="86.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="866.6" y="702.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (984 samples, 7.36%)</title><rect x="863.6" y="675.0" width="86.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="866.6" y="686.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (984 samples, 7.36%)</title><rect x="863.6" y="659.0" width="86.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="866.6" y="670.0">ru/mail/po..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (20 samples, 0.15%)</title><rect x="863.6" y="643.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="866.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (964 samples, 7.21%)</title><rect x="865.3" y="643.0" width="85.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="868.3" y="654.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (964 samples, 7.21%)</title><rect x="865.3" y="627.0" width="85.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="868.3" y="638.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (964 samples, 7.21%)</title><rect x="865.3" y="611.0" width="85.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="868.3" y="622.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (436 samples, 3.26%)</title><rect x="865.3" y="595.0" width="38.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="868.3" y="606.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (436 samples, 3.26%)</title><rect x="865.3" y="579.0" width="38.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="868.3" y="590.0">jav..</text>
</g>
<g>
<title>byte[] (436 samples, 3.26%)</title><rect x="865.3" y="563.0" width="38.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="868.3" y="574.0">byt..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (372 samples, 2.78%)</title><rect x="903.8" y="595.0" width="32.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="906.8" y="606.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (372 samples, 2.78%)</title><rect x="903.8" y="579.0" width="32.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="906.8" y="590.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (156 samples, 1.17%)</title><rect x="936.7" y="595.0" width="13.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="939.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (156 samples, 1.17%)</title><rect x="936.7" y="579.0" width="13.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="939.7" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (156 samples, 1.17%)</title><rect x="936.7" y="563.0" width="13.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="939.7" y="574.0"></text>
</g>
<g>
<title>byte[] (156 samples, 1.17%)</title><rect x="936.7" y="547.0" width="13.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="939.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (23 samples, 0.17%)</title><rect x="950.5" y="723.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="953.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (22 samples, 0.16%)</title><rect x="950.6" y="707.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="953.6" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (22 samples, 0.16%)</title><rect x="950.6" y="691.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="953.6" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (12 samples, 0.09%)</title><rect x="950.6" y="675.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.6" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (12 samples, 0.09%)</title><rect x="950.6" y="659.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="953.6" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (12 samples, 0.09%)</title><rect x="950.6" y="643.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="953.6" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.09%)</title><rect x="950.6" y="627.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="953.6" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.09%)</title><rect x="950.6" y="611.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.6" y="622.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (12 samples, 0.09%)</title><rect x="950.6" y="595.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.6" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (12 samples, 0.09%)</title><rect x="950.6" y="579.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="953.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (12 samples, 0.09%)</title><rect x="950.6" y="563.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="953.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (12 samples, 0.09%)</title><rect x="950.6" y="547.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="953.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (12 samples, 0.09%)</title><rect x="950.6" y="531.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="953.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.04%)</title><rect x="950.6" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="953.6" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.04%)</title><rect x="950.6" y="499.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="953.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.05%)</title><rect x="951.0" y="515.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="954.0" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.05%)</title><rect x="951.0" y="499.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="954.0" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (10 samples, 0.07%)</title><rect x="951.7" y="675.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="954.7" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (10 samples, 0.07%)</title><rect x="951.7" y="659.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="954.7" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (10 samples, 0.07%)</title><rect x="951.7" y="643.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="954.7" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (10 samples, 0.07%)</title><rect x="951.7" y="627.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="954.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.07%)</title><rect x="951.7" y="611.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="954.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.07%)</title><rect x="951.7" y="595.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="954.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (10 samples, 0.07%)</title><rect x="951.7" y="579.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="954.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (10 samples, 0.07%)</title><rect x="951.7" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="954.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (10 samples, 0.07%)</title><rect x="951.7" y="547.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="954.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (10 samples, 0.07%)</title><rect x="951.7" y="531.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="954.7" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.06%)</title><rect x="951.7" y="515.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="954.7" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.06%)</title><rect x="951.7" y="499.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="954.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (6 samples, 0.04%)</title><rect x="952.5" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="955.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.05%)</title><rect x="953.2" y="867.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="956.2" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.03%)</title><rect x="953.2" y="851.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="956.2" y="862.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.03%)</title><rect x="953.2" y="835.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="956.2" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=6993] (1,543 samples, 11.54%)</title><rect x="953.9" y="947.0" width="136.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="956.9" y="958.0">[NIO Selector #7 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,543 samples, 11.54%)</title><rect x="953.9" y="931.0" width="136.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="956.9" y="942.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,542 samples, 11.53%)</title><rect x="954.0" y="915.0" width="136.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="957.0" y="926.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,542 samples, 11.53%)</title><rect x="954.0" y="899.0" width="136.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="957.0" y="910.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,542 samples, 11.53%)</title><rect x="954.0" y="883.0" width="136.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="957.0" y="894.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,531 samples, 11.45%)</title><rect x="954.0" y="867.0" width="135.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="957.0" y="878.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,531 samples, 11.45%)</title><rect x="954.0" y="851.0" width="135.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="957.0" y="862.0">one/nio/http/Http..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (1,529 samples, 11.43%)</title><rect x="954.0" y="835.0" width="135.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="957.0" y="846.0">RequestHandler0_r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.02%)</title><rect x="954.0" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="957.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.02%)</title><rect x="954.0" y="803.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="957.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (1,525 samples, 11.40%)</title><rect x="954.4" y="819.0" width="134.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="957.4" y="830.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (25 samples, 0.19%)</title><rect x="954.4" y="803.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="957.4" y="814.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (25 samples, 0.19%)</title><rect x="954.4" y="787.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="957.4" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (24 samples, 0.18%)</title><rect x="954.4" y="771.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="957.4" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (22 samples, 0.16%)</title><rect x="954.6" y="755.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="957.6" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (22 samples, 0.16%)</title><rect x="954.6" y="739.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="957.6" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (22 samples, 0.16%)</title><rect x="954.6" y="723.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="957.6" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (22 samples, 0.16%)</title><rect x="954.6" y="707.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="957.6" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (22 samples, 0.16%)</title><rect x="954.6" y="691.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="957.6" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (22 samples, 0.16%)</title><rect x="954.6" y="675.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="957.6" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (6 samples, 0.04%)</title><rect x="954.6" y="659.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="957.6" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (6 samples, 0.04%)</title><rect x="954.6" y="643.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="957.6" y="654.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (6 samples, 0.04%)</title><rect x="954.6" y="627.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.6" y="638.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (6 samples, 0.04%)</title><rect x="954.6" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="957.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4 samples, 0.03%)</title><rect x="954.7" y="595.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="957.7" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.03%)</title><rect x="954.7" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="957.7" y="590.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.03%)</title><rect x="954.7" y="563.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="957.7" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (16 samples, 0.12%)</title><rect x="955.1" y="659.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="958.1" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (10 samples, 0.07%)</title><rect x="955.1" y="643.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="958.1" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (10 samples, 0.07%)</title><rect x="955.1" y="627.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="958.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.03%)</title><rect x="955.3" y="611.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="958.3" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.03%)</title><rect x="955.3" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="958.3" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.03%)</title><rect x="955.3" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="958.3" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.03%)</title><rect x="955.3" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="958.3" y="574.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.03%)</title><rect x="955.3" y="547.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="958.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.03%)</title><rect x="955.6" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="958.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.03%)</title><rect x="955.6" y="595.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="958.6" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (6 samples, 0.04%)</title><rect x="956.0" y="643.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="959.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.04%)</title><rect x="956.0" y="627.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="959.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.04%)</title><rect x="956.0" y="611.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="959.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.04%)</title><rect x="956.0" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="959.0" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.04%)</title><rect x="956.0" y="579.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="959.0" y="590.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.04%)</title><rect x="956.0" y="563.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="959.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (1,500 samples, 11.22%)</title><rect x="956.6" y="803.0" width="132.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="959.6" y="814.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,499 samples, 11.21%)</title><rect x="956.7" y="787.0" width="132.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="959.7" y="798.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (134 samples, 1.00%)</title><rect x="956.7" y="771.0" width="11.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="959.7" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (134 samples, 1.00%)</title><rect x="956.7" y="755.0" width="11.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="959.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (134 samples, 1.00%)</title><rect x="956.7" y="739.0" width="11.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="959.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (134 samples, 1.00%)</title><rect x="956.7" y="723.0" width="11.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="959.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (134 samples, 1.00%)</title><rect x="956.7" y="707.0" width="11.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="959.7" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (111 samples, 0.83%)</title><rect x="956.7" y="691.0" width="9.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="959.7" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (57 samples, 0.43%)</title><rect x="956.7" y="675.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="959.7" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (57 samples, 0.43%)</title><rect x="956.7" y="659.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="959.7" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (57 samples, 0.43%)</title><rect x="956.7" y="643.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="959.7" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 0.43%)</title><rect x="956.7" y="627.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="959.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 0.43%)</title><rect x="956.7" y="611.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="959.7" y="622.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (57 samples, 0.43%)</title><rect x="956.7" y="595.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="959.7" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (57 samples, 0.43%)</title><rect x="956.7" y="579.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="959.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (57 samples, 0.43%)</title><rect x="956.7" y="563.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="959.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (57 samples, 0.43%)</title><rect x="956.7" y="547.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="959.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (57 samples, 0.43%)</title><rect x="956.7" y="531.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="959.7" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (33 samples, 0.25%)</title><rect x="956.7" y="515.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="959.7" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.25%)</title><rect x="956.7" y="499.0" width="2.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="959.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (24 samples, 0.18%)</title><rect x="959.6" y="515.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="962.6" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.18%)</title><rect x="959.6" y="499.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="962.6" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (54 samples, 0.40%)</title><rect x="961.7" y="675.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="964.7" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (54 samples, 0.40%)</title><rect x="961.7" y="659.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="964.7" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (54 samples, 0.40%)</title><rect x="961.7" y="643.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="964.7" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (54 samples, 0.40%)</title><rect x="961.7" y="627.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="964.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (54 samples, 0.40%)</title><rect x="961.7" y="611.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="964.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (54 samples, 0.40%)</title><rect x="961.7" y="595.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="964.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (40 samples, 0.30%)</title><rect x="961.7" y="579.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="964.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (40 samples, 0.30%)</title><rect x="961.7" y="563.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="964.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (40 samples, 0.30%)</title><rect x="961.7" y="547.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="964.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (40 samples, 0.30%)</title><rect x="961.7" y="531.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="964.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.06%)</title><rect x="961.7" y="515.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="964.7" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.06%)</title><rect x="961.7" y="499.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="964.7" y="510.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.06%)</title><rect x="961.7" y="483.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="964.7" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (22 samples, 0.16%)</title><rect x="962.4" y="515.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="965.4" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.16%)</title><rect x="962.4" y="499.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="965.4" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (4 samples, 0.03%)</title><rect x="964.5" y="515.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="967.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.03%)</title><rect x="964.9" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="967.9" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.03%)</title><rect x="964.9" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.9" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="964.9" y="483.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="967.9" y="494.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.03%)</title><rect x="964.9" y="467.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="967.9" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.10%)</title><rect x="965.2" y="579.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="968.2" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.10%)</title><rect x="965.2" y="563.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="968.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (14 samples, 0.10%)</title><rect x="965.2" y="547.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="968.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (14 samples, 0.10%)</title><rect x="965.2" y="531.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="968.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (14 samples, 0.10%)</title><rect x="965.2" y="515.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="968.2" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.07%)</title><rect x="965.2" y="499.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.2" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.07%)</title><rect x="965.2" y="483.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="968.2" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.04%)</title><rect x="966.0" y="499.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="969.0" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.04%)</title><rect x="966.0" y="483.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="969.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$117/473479162.apply (23 samples, 0.17%)</title><rect x="966.5" y="691.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="969.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (23 samples, 0.17%)</title><rect x="966.5" y="675.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.5" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.10%)</title><rect x="966.5" y="659.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="969.5" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.10%)</title><rect x="966.5" y="643.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="969.5" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 0.07%)</title><rect x="967.6" y="659.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="970.6" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.07%)</title><rect x="967.6" y="643.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="970.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (1,363 samples, 10.19%)</title><rect x="968.7" y="771.0" width="120.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="971.7" y="782.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (1,361 samples, 10.18%)</title><rect x="968.9" y="755.0" width="120.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="971.9" y="766.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (1,355 samples, 10.13%)</title><rect x="969.3" y="739.0" width="119.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="972.3" y="750.0">ru/mail/polis/d..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (347 samples, 2.59%)</title><rect x="969.3" y="723.0" width="30.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="972.3" y="734.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (347 samples, 2.59%)</title><rect x="969.3" y="707.0" width="30.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="972.3" y="718.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (13 samples, 0.10%)</title><rect x="969.3" y="691.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="972.3" y="702.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (13 samples, 0.10%)</title><rect x="969.3" y="675.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="972.3" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (334 samples, 2.50%)</title><rect x="970.4" y="691.0" width="29.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="973.4" y="702.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (334 samples, 2.50%)</title><rect x="970.4" y="675.0" width="29.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="973.4" y="686.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (8 samples, 0.06%)</title><rect x="970.4" y="659.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.4" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.06%)</title><rect x="970.4" y="643.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="973.4" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.06%)</title><rect x="970.4" y="627.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="973.4" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (326 samples, 2.44%)</title><rect x="971.2" y="659.0" width="28.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="974.2" y="670.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (326 samples, 2.44%)</title><rect x="971.2" y="643.0" width="28.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="974.2" y="654.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (326 samples, 2.44%)</title><rect x="971.2" y="627.0" width="28.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="974.2" y="638.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (326 samples, 2.44%)</title><rect x="971.2" y="611.0" width="28.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="974.2" y="622.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (230 samples, 1.72%)</title><rect x="971.2" y="595.0" width="20.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="974.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (7 samples, 0.05%)</title><rect x="971.2" y="579.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="974.2" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (5 samples, 0.04%)</title><rect x="971.2" y="563.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="974.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$59/2145435247.apply (5 samples, 0.04%)</title><rect x="971.2" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="974.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (5 samples, 0.04%)</title><rect x="971.2" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="974.2" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.02%)</title><rect x="971.3" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="974.3" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.02%)</title><rect x="971.3" y="499.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="974.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (223 samples, 1.67%)</title><rect x="971.8" y="579.0" width="19.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="974.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (223 samples, 1.67%)</title><rect x="971.8" y="563.0" width="19.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="974.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (223 samples, 1.67%)</title><rect x="971.8" y="547.0" width="19.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="974.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (52 samples, 0.39%)</title><rect x="971.8" y="531.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="974.8" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (52 samples, 0.39%)</title><rect x="971.8" y="515.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="974.8" y="526.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.39%)</title><rect x="971.8" y="499.0" width="4.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="974.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (124 samples, 0.93%)</title><rect x="976.4" y="531.0" width="10.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="979.4" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (124 samples, 0.93%)</title><rect x="976.4" y="515.0" width="10.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="979.4" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (15 samples, 0.11%)</title><rect x="987.3" y="531.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="990.3" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (10 samples, 0.07%)</title><rect x="988.6" y="531.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="991.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (22 samples, 0.16%)</title><rect x="989.5" y="531.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="992.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (22 samples, 0.16%)</title><rect x="989.5" y="515.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="992.5" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (22 samples, 0.16%)</title><rect x="989.5" y="499.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="992.5" y="510.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.16%)</title><rect x="989.5" y="483.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="992.5" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (96 samples, 0.72%)</title><rect x="991.5" y="595.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="994.5" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (96 samples, 0.72%)</title><rect x="991.5" y="579.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="994.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (96 samples, 0.72%)</title><rect x="991.5" y="563.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="994.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (96 samples, 0.72%)</title><rect x="991.5" y="547.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="994.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (96 samples, 0.72%)</title><rect x="991.5" y="531.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="994.5" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (44 samples, 0.33%)</title><rect x="991.5" y="515.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="994.5" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (44 samples, 0.33%)</title><rect x="991.5" y="499.0" width="3.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="994.5" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (42 samples, 0.31%)</title><rect x="995.3" y="515.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="998.3" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (42 samples, 0.31%)</title><rect x="995.3" y="499.0" width="3.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="998.3" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (4 samples, 0.03%)</title><rect x="999.0" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1002.0" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.03%)</title><rect x="999.0" y="499.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1002.0" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.03%)</title><rect x="999.0" y="483.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1002.0" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.04%)</title><rect x="999.4" y="515.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1002.4" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.04%)</title><rect x="999.4" y="499.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1002.4" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (974 samples, 7.28%)</title><rect x="999.9" y="723.0" width="86.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1002.9" y="734.0">java/util/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (974 samples, 7.28%)</title><rect x="999.9" y="707.0" width="86.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1002.9" y="718.0">java/lang/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$109/352000052.accept (972 samples, 7.27%)</title><rect x="1000.1" y="691.0" width="85.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1003.1" y="702.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (972 samples, 7.27%)</title><rect x="1000.1" y="675.0" width="85.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1003.1" y="686.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (972 samples, 7.27%)</title><rect x="1000.1" y="659.0" width="85.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1003.1" y="670.0">ru/mail/po..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (11 samples, 0.08%)</title><rect x="1000.1" y="643.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1003.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (961 samples, 7.19%)</title><rect x="1001.1" y="643.0" width="84.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1004.1" y="654.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (961 samples, 7.19%)</title><rect x="1001.1" y="627.0" width="84.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1004.1" y="638.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (961 samples, 7.19%)</title><rect x="1001.1" y="611.0" width="84.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1004.1" y="622.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (414 samples, 3.10%)</title><rect x="1001.1" y="595.0" width="36.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1004.1" y="606.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (414 samples, 3.10%)</title><rect x="1001.1" y="579.0" width="36.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1004.1" y="590.0">jav..</text>
</g>
<g>
<title>byte[] (414 samples, 3.10%)</title><rect x="1001.1" y="563.0" width="36.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1004.1" y="574.0">byt..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (361 samples, 2.70%)</title><rect x="1037.6" y="595.0" width="31.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1040.6" y="606.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (361 samples, 2.70%)</title><rect x="1037.6" y="579.0" width="31.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1040.6" y="590.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (186 samples, 1.39%)</title><rect x="1069.5" y="595.0" width="16.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1072.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (186 samples, 1.39%)</title><rect x="1069.5" y="579.0" width="16.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1072.5" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (186 samples, 1.39%)</title><rect x="1069.5" y="563.0" width="16.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1072.5" y="574.0"></text>
</g>
<g>
<title>byte[] (186 samples, 1.39%)</title><rect x="1069.5" y="547.0" width="16.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1072.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (33 samples, 0.25%)</title><rect x="1086.0" y="723.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1089.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (33 samples, 0.25%)</title><rect x="1086.0" y="707.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1089.0" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (33 samples, 0.25%)</title><rect x="1086.0" y="691.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1089.0" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (19 samples, 0.14%)</title><rect x="1086.0" y="675.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1089.0" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (19 samples, 0.14%)</title><rect x="1086.0" y="659.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1089.0" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (19 samples, 0.14%)</title><rect x="1086.0" y="643.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1089.0" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (19 samples, 0.14%)</title><rect x="1086.0" y="627.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1089.0" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (19 samples, 0.14%)</title><rect x="1086.0" y="611.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1089.0" y="622.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (19 samples, 0.14%)</title><rect x="1086.0" y="595.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1089.0" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (19 samples, 0.14%)</title><rect x="1086.0" y="579.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1089.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (19 samples, 0.14%)</title><rect x="1086.0" y="563.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1089.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (19 samples, 0.14%)</title><rect x="1086.0" y="547.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1089.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (19 samples, 0.14%)</title><rect x="1086.0" y="531.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1089.0" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.06%)</title><rect x="1086.0" y="515.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1089.0" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.06%)</title><rect x="1086.0" y="499.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1089.0" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.08%)</title><rect x="1086.7" y="515.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1089.7" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.08%)</title><rect x="1086.7" y="499.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1089.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (14 samples, 0.10%)</title><rect x="1087.6" y="675.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1090.6" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (14 samples, 0.10%)</title><rect x="1087.6" y="659.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1090.6" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (14 samples, 0.10%)</title><rect x="1087.6" y="643.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.6" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (14 samples, 0.10%)</title><rect x="1087.6" y="627.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1090.6" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.10%)</title><rect x="1087.6" y="611.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1090.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.10%)</title><rect x="1087.6" y="595.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1090.6" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (13 samples, 0.10%)</title><rect x="1087.6" y="579.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (13 samples, 0.10%)</title><rect x="1087.6" y="563.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1090.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (13 samples, 0.10%)</title><rect x="1087.6" y="547.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1090.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (13 samples, 0.10%)</title><rect x="1087.6" y="531.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1090.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.07%)</title><rect x="1087.7" y="515.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1090.7" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.07%)</title><rect x="1087.7" y="499.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1090.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.07%)</title><rect x="1089.1" y="867.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1092.1" y="878.0"></text>
</g>
<g>
<title>one.nio.http.Request (3 samples, 0.02%)</title><rect x="1089.1" y="851.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1092.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.03%)</title><rect x="1089.6" y="851.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1092.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.03%)</title><rect x="1089.6" y="835.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1092.6" y="846.0"></text>
</g>
<g>
<title>[RMI TCP Connection(1)-127.0.0.1 tid=7198] (1,132 samples, 8.47%)</title><rect x="1090.1" y="947.0" width="99.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1093.1" y="958.0">[RMI TCP Con..</text>
</g>
<g>
<title>java/lang/Thread.run (1,132 samples, 8.47%)</title><rect x="1090.1" y="931.0" width="99.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1093.1" y="942.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,132 samples, 8.47%)</title><rect x="1090.1" y="915.0" width="99.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1093.1" y="926.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,132 samples, 8.47%)</title><rect x="1090.1" y="899.0" width="99.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1093.1" y="910.0">java/util/co..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (1,132 samples, 8.47%)</title><rect x="1090.1" y="883.0" width="99.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1093.1" y="894.0">sun/rmi/tran..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,132 samples, 8.47%)</title><rect x="1090.1" y="867.0" width="99.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1093.1" y="878.0">java/securit..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$93/1386574298.run (1,132 samples, 8.47%)</title><rect x="1090.1" y="851.0" width="99.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.1" y="862.0">sun/rmi/tran..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (1,132 samples, 8.47%)</title><rect x="1090.1" y="835.0" width="99.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1093.1" y="846.0">sun/rmi/tran..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (1,132 samples, 8.47%)</title><rect x="1090.1" y="819.0" width="99.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1093.1" y="830.0">sun/rmi/tran..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (1,132 samples, 8.47%)</title><rect x="1090.1" y="803.0" width="99.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1093.1" y="814.0">sun/rmi/tran..</text>
</g>
<g>
<title>java.io.DataOutputStream (16 samples, 0.12%)</title><rect x="1090.1" y="787.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1093.1" y="798.0"></text>
</g>
<g>
<title>sun.rmi.transport.StreamRemoteCall (3 samples, 0.02%)</title><rect x="1091.5" y="787.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1094.5" y="798.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (1,113 samples, 8.32%)</title><rect x="1091.8" y="787.0" width="98.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1094.8" y="798.0">sun/rmi/tran..</text>
</g>
<g>
<title>java/rmi/server/ObjID.read (7 samples, 0.05%)</title><rect x="1091.8" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1094.8" y="782.0"></text>
</g>
<g>
<title>java/rmi/server/UID.read (5 samples, 0.04%)</title><rect x="1092.0" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1095.0" y="766.0"></text>
</g>
<g>
<title>java.rmi.server.UID (5 samples, 0.04%)</title><rect x="1092.0" y="739.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1095.0" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (975 samples, 7.29%)</title><rect x="1092.4" y="771.0" width="86.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1095.4" y="782.0">java/secur..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (975 samples, 7.29%)</title><rect x="1092.4" y="755.0" width="86.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1095.4" y="766.0">sun/rmi/tr..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (975 samples, 7.29%)</title><rect x="1092.4" y="739.0" width="86.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1095.4" y="750.0">sun/rmi/tr..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (975 samples, 7.29%)</title><rect x="1092.4" y="723.0" width="86.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1095.4" y="734.0">sun/rmi/se..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (522 samples, 3.90%)</title><rect x="1092.8" y="707.0" width="46.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1095.8" y="718.0">java..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (522 samples, 3.90%)</title><rect x="1092.8" y="691.0" width="46.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1095.8" y="702.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (15 samples, 0.11%)</title><rect x="1092.8" y="675.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1095.8" y="686.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttribute (15 samples, 0.11%)</title><rect x="1092.8" y="659.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1095.8" y="670.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (15 samples, 0.11%)</title><rect x="1092.8" y="643.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1095.8" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (11 samples, 0.08%)</title><rect x="1093.2" y="627.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1096.2" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (11 samples, 0.08%)</title><rect x="1093.2" y="611.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1096.2" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttribute (11 samples, 0.08%)</title><rect x="1093.2" y="595.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1096.2" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttribute (11 samples, 0.08%)</title><rect x="1093.2" y="579.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.2" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getMBean (7 samples, 0.05%)</title><rect x="1093.2" y="563.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1096.2" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieve (7 samples, 0.05%)</title><rect x="1093.2" y="547.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1096.2" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieveNamedObject (7 samples, 0.05%)</title><rect x="1093.2" y="531.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.2" y="542.0"></text>
</g>
<g>
<title>javax/management/ObjectName.getCanonicalKeyPropertyListString (4 samples, 0.03%)</title><rect x="1093.2" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1096.2" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.03%)</title><rect x="1093.2" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1096.2" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.03%)</title><rect x="1093.2" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1096.2" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.03%)</title><rect x="1093.2" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1096.2" y="478.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.03%)</title><rect x="1093.2" y="451.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1096.2" y="462.0"></text>
</g>
<g>
<title>javax/management/ObjectName.getDomain (3 samples, 0.02%)</title><rect x="1093.5" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1096.5" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.02%)</title><rect x="1093.5" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1096.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.02%)</title><rect x="1093.5" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1096.5" y="494.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.02%)</title><rect x="1093.5" y="467.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1096.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (505 samples, 3.78%)</title><rect x="1094.2" y="675.0" width="44.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1097.2" y="686.0">jdk/..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (505 samples, 3.78%)</title><rect x="1094.2" y="659.0" width="44.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1097.2" y="670.0">java..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (434 samples, 3.25%)</title><rect x="1094.2" y="643.0" width="38.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1097.2" y="654.0">jav..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (433 samples, 3.24%)</title><rect x="1094.3" y="627.0" width="38.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1097.3" y="638.0">jav..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (433 samples, 3.24%)</title><rect x="1094.3" y="611.0" width="38.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1097.3" y="622.0">jav..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (433 samples, 3.24%)</title><rect x="1094.3" y="595.0" width="38.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1097.3" y="606.0">com..</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (433 samples, 3.24%)</title><rect x="1094.3" y="579.0" width="38.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1097.3" y="590.0">com..</text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (433 samples, 3.24%)</title><rect x="1094.3" y="563.0" width="38.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1097.3" y="574.0">jav..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (433 samples, 3.24%)</title><rect x="1094.3" y="547.0" width="38.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1097.3" y="558.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (433 samples, 3.24%)</title><rect x="1094.3" y="531.0" width="38.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1097.3" y="542.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (433 samples, 3.24%)</title><rect x="1094.3" y="515.0" width="38.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1097.3" y="526.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (433 samples, 3.24%)</title><rect x="1094.3" y="499.0" width="38.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1097.3" y="510.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (433 samples, 3.24%)</title><rect x="1094.3" y="483.0" width="38.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1097.3" y="494.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (433 samples, 3.24%)</title><rect x="1094.3" y="467.0" width="38.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1097.3" y="478.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (433 samples, 3.24%)</title><rect x="1094.3" y="451.0" width="38.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1097.3" y="462.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (393 samples, 2.94%)</title><rect x="1094.3" y="435.0" width="34.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1097.3" y="446.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (393 samples, 2.94%)</title><rect x="1094.3" y="419.0" width="34.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1097.3" y="430.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (392 samples, 2.93%)</title><rect x="1094.3" y="403.0" width="34.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1097.3" y="414.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (392 samples, 2.93%)</title><rect x="1094.3" y="387.0" width="34.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.3" y="398.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (140 samples, 1.05%)</title><rect x="1094.3" y="371.0" width="12.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1097.3" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (124 samples, 0.93%)</title><rect x="1094.3" y="355.0" width="10.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1097.3" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (115 samples, 0.86%)</title><rect x="1094.3" y="339.0" width="10.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1097.3" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (115 samples, 0.86%)</title><rect x="1094.3" y="323.0" width="10.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1097.3" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.07%)</title><rect x="1094.3" y="307.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1097.3" y="318.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (5 samples, 0.04%)</title><rect x="1095.0" y="307.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1098.0" y="318.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (73 samples, 0.55%)</title><rect x="1095.5" y="307.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1098.5" y="318.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (7 samples, 0.05%)</title><rect x="1095.5" y="291.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1098.5" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (3 samples, 0.02%)</title><rect x="1095.5" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1098.5" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (3 samples, 0.02%)</title><rect x="1095.5" y="259.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1098.5" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (3 samples, 0.02%)</title><rect x="1095.5" y="243.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1098.5" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (3 samples, 0.02%)</title><rect x="1095.5" y="227.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1098.5" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (3 samples, 0.02%)</title><rect x="1095.5" y="211.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1098.5" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (4 samples, 0.03%)</title><rect x="1095.8" y="275.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1098.8" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractSet.equals (4 samples, 0.03%)</title><rect x="1095.8" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1098.8" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (4 samples, 0.03%)</title><rect x="1095.8" y="243.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1098.8" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (4 samples, 0.03%)</title><rect x="1095.8" y="227.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1098.8" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (4 samples, 0.03%)</title><rect x="1095.8" y="211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1098.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (4 samples, 0.03%)</title><rect x="1095.8" y="195.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1098.8" y="206.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (66 samples, 0.49%)</title><rect x="1096.1" y="291.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1099.1" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap (6 samples, 0.04%)</title><rect x="1096.1" y="275.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1099.1" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (60 samples, 0.45%)</title><rect x="1096.6" y="275.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1099.6" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (60 samples, 0.45%)</title><rect x="1096.6" y="259.0" width="5.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1099.6" y="270.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (28 samples, 0.21%)</title><rect x="1101.9" y="307.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1104.9" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (28 samples, 0.21%)</title><rect x="1101.9" y="291.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1104.9" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (9 samples, 0.07%)</title><rect x="1104.4" y="339.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1107.4" y="350.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (9 samples, 0.07%)</title><rect x="1104.4" y="323.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1107.4" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (16 samples, 0.12%)</title><rect x="1105.2" y="355.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1108.2" y="366.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (13 samples, 0.10%)</title><rect x="1105.3" y="339.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1108.3" y="350.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (5 samples, 0.04%)</title><rect x="1105.3" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1108.3" y="334.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (3 samples, 0.02%)</title><rect x="1105.3" y="307.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1108.3" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (3 samples, 0.02%)</title><rect x="1105.3" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1108.3" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (3 samples, 0.02%)</title><rect x="1105.3" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1108.3" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (3 samples, 0.02%)</title><rect x="1105.3" y="259.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1108.3" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (3 samples, 0.02%)</title><rect x="1105.3" y="243.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1108.3" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (8 samples, 0.06%)</title><rect x="1105.7" y="323.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1108.7" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.02%)</title><rect x="1105.7" y="307.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1108.7" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.04%)</title><rect x="1106.0" y="307.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1109.0" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (5 samples, 0.04%)</title><rect x="1106.0" y="291.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1109.0" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.04%)</title><rect x="1106.6" y="371.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1109.6" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.03%)</title><rect x="1107.1" y="371.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1110.1" y="382.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (6 samples, 0.04%)</title><rect x="1107.4" y="371.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1110.4" y="382.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (147 samples, 1.10%)</title><rect x="1107.9" y="371.0" width="13.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1110.9" y="382.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (17 samples, 0.13%)</title><rect x="1107.9" y="355.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1110.9" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (5 samples, 0.04%)</title><rect x="1107.9" y="339.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1110.9" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (5 samples, 0.04%)</title><rect x="1107.9" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1110.9" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (5 samples, 0.04%)</title><rect x="1107.9" y="307.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1110.9" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (5 samples, 0.04%)</title><rect x="1107.9" y="291.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1110.9" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (5 samples, 0.04%)</title><rect x="1107.9" y="275.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1110.9" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (7 samples, 0.05%)</title><rect x="1108.4" y="339.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1111.4" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractSet.equals (7 samples, 0.05%)</title><rect x="1108.4" y="323.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1111.4" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (7 samples, 0.05%)</title><rect x="1108.4" y="307.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1111.4" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (7 samples, 0.05%)</title><rect x="1108.4" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1111.4" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (7 samples, 0.05%)</title><rect x="1108.4" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1111.4" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (7 samples, 0.05%)</title><rect x="1108.4" y="259.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1111.4" y="270.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeType.isValue (3 samples, 0.02%)</title><rect x="1109.2" y="339.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1112.2" y="350.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeType.isAssignableFrom (3 samples, 0.02%)</title><rect x="1109.2" y="323.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1112.2" y="334.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (3 samples, 0.02%)</title><rect x="1109.2" y="307.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1112.2" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (3 samples, 0.02%)</title><rect x="1109.2" y="291.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1112.2" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (3 samples, 0.02%)</title><rect x="1109.2" y="275.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1112.2" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (3 samples, 0.02%)</title><rect x="1109.2" y="259.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1112.2" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (3 samples, 0.02%)</title><rect x="1109.2" y="243.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1112.2" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (130 samples, 0.97%)</title><rect x="1109.4" y="355.0" width="11.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1112.4" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap (7 samples, 0.05%)</title><rect x="1109.4" y="339.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1112.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (123 samples, 0.92%)</title><rect x="1110.1" y="339.0" width="10.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1113.1" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (123 samples, 0.92%)</title><rect x="1110.1" y="323.0" width="10.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1113.1" y="334.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (90 samples, 0.67%)</title><rect x="1120.9" y="371.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1123.9" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (84 samples, 0.63%)</title><rect x="1120.9" y="355.0" width="7.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1123.9" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.04%)</title><rect x="1128.3" y="355.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1131.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.04%)</title><rect x="1128.3" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1131.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (6 samples, 0.04%)</title><rect x="1128.3" y="323.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1131.3" y="334.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (6 samples, 0.04%)</title><rect x="1128.3" y="307.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1131.3" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.04%)</title><rect x="1128.3" y="291.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1131.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.04%)</title><rect x="1128.3" y="275.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1131.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor13.invoke (3 samples, 0.02%)</title><rect x="1128.4" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1131.4" y="270.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getLockedSynchronizers (3 samples, 0.02%)</title><rect x="1128.4" y="243.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1131.4" y="254.0"></text>
</g>
<g>
<title>java.lang.management.LockInfo[] (3 samples, 0.02%)</title><rect x="1128.4" y="227.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1131.4" y="238.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (40 samples, 0.30%)</title><rect x="1128.9" y="435.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1131.9" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (40 samples, 0.30%)</title><rect x="1128.9" y="419.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1131.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (40 samples, 0.30%)</title><rect x="1128.9" y="403.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1131.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (40 samples, 0.30%)</title><rect x="1128.9" y="387.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1131.9" y="398.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (40 samples, 0.30%)</title><rect x="1128.9" y="371.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1131.9" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (40 samples, 0.30%)</title><rect x="1128.9" y="355.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1131.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (40 samples, 0.30%)</title><rect x="1128.9" y="339.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1131.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (40 samples, 0.30%)</title><rect x="1128.9" y="323.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1131.9" y="334.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (40 samples, 0.30%)</title><rect x="1128.9" y="307.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1131.9" y="318.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (40 samples, 0.30%)</title><rect x="1128.9" y="291.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1131.9" y="302.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (8 samples, 0.06%)</title><rect x="1128.9" y="275.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1131.9" y="286.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement (10 samples, 0.07%)</title><rect x="1129.6" y="275.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1132.6" y="286.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (4 samples, 0.03%)</title><rect x="1130.5" y="275.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1133.5" y="286.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (7 samples, 0.05%)</title><rect x="1130.9" y="275.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1133.9" y="286.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (11 samples, 0.08%)</title><rect x="1131.5" y="275.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1134.5" y="286.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (11 samples, 0.08%)</title><rect x="1131.5" y="259.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1134.5" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (4 samples, 0.03%)</title><rect x="1131.6" y="243.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1134.6" y="254.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (4 samples, 0.03%)</title><rect x="1131.6" y="227.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1134.6" y="238.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.03%)</title><rect x="1131.6" y="211.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1134.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.04%)</title><rect x="1131.9" y="243.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1134.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (6 samples, 0.04%)</title><rect x="1131.9" y="227.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1134.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1030228826.invoke (6 samples, 0.04%)</title><rect x="1131.9" y="211.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1134.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.04%)</title><rect x="1131.9" y="195.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1134.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (5 samples, 0.04%)</title><rect x="1132.0" y="179.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1135.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (5 samples, 0.04%)</title><rect x="1132.0" y="163.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1135.0" y="174.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.04%)</title><rect x="1132.0" y="147.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1135.0" y="158.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getClassLoaderFor (3 samples, 0.02%)</title><rect x="1132.5" y="643.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1135.5" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.withPermissions (3 samples, 0.02%)</title><rect x="1132.5" y="627.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1135.5" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (68 samples, 0.51%)</title><rect x="1132.7" y="643.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1135.7" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (20 samples, 0.15%)</title><rect x="1132.7" y="627.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1135.7" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (20 samples, 0.15%)</title><rect x="1132.7" y="611.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1135.7" y="622.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (20 samples, 0.15%)</title><rect x="1132.7" y="595.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1135.7" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/util/OrderClassLoaders.&lt;init&gt; (3 samples, 0.02%)</title><rect x="1132.7" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1135.7" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (3 samples, 0.02%)</title><rect x="1132.7" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1135.7" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (3 samples, 0.02%)</title><rect x="1132.7" y="547.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1135.7" y="558.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (3 samples, 0.02%)</title><rect x="1132.7" y="531.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1135.7" y="542.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (17 samples, 0.13%)</title><rect x="1133.0" y="579.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1136.0" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (15 samples, 0.11%)</title><rect x="1133.0" y="563.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1136.0" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (15 samples, 0.11%)</title><rect x="1133.0" y="547.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1136.0" y="558.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (7 samples, 0.05%)</title><rect x="1133.5" y="531.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1136.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.02%)</title><rect x="1133.6" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1136.6" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.02%)</title><rect x="1133.6" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1136.6" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.02%)</title><rect x="1133.6" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1136.6" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.02%)</title><rect x="1133.6" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1136.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.02%)</title><rect x="1133.9" y="515.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1136.9" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.02%)</title><rect x="1133.9" y="499.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1136.9" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (48 samples, 0.36%)</title><rect x="1134.5" y="627.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1137.5" y="638.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (48 samples, 0.36%)</title><rect x="1134.5" y="611.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1137.5" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (15 samples, 0.11%)</title><rect x="1134.6" y="595.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1137.6" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (15 samples, 0.11%)</title><rect x="1134.6" y="579.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1137.6" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (15 samples, 0.11%)</title><rect x="1134.6" y="563.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1137.6" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (15 samples, 0.11%)</title><rect x="1134.6" y="547.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1137.6" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (15 samples, 0.11%)</title><rect x="1134.6" y="531.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1137.6" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (15 samples, 0.11%)</title><rect x="1134.6" y="515.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.6" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (12 samples, 0.09%)</title><rect x="1134.6" y="499.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.6" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (12 samples, 0.09%)</title><rect x="1134.6" y="483.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1137.6" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (9 samples, 0.07%)</title><rect x="1134.6" y="467.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1137.6" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (9 samples, 0.07%)</title><rect x="1134.6" y="451.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1137.6" y="462.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (3 samples, 0.02%)</title><rect x="1134.6" y="435.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1137.6" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (5 samples, 0.04%)</title><rect x="1134.8" y="435.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1137.8" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (4 samples, 0.03%)</title><rect x="1134.9" y="419.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1137.9" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (3 samples, 0.02%)</title><rect x="1135.4" y="467.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1138.4" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (3 samples, 0.02%)</title><rect x="1135.6" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1138.6" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (3 samples, 0.02%)</title><rect x="1135.6" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1138.6" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (3 samples, 0.02%)</title><rect x="1135.6" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1138.6" y="478.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (32 samples, 0.24%)</title><rect x="1135.9" y="595.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1138.9" y="606.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (32 samples, 0.24%)</title><rect x="1135.9" y="579.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1138.9" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (32 samples, 0.24%)</title><rect x="1135.9" y="563.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1138.9" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (28 samples, 0.21%)</title><rect x="1135.9" y="547.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1138.9" y="558.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.10%)</title><rect x="1135.9" y="531.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1138.9" y="542.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.02%)</title><rect x="1137.1" y="531.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1140.1" y="542.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (11 samples, 0.08%)</title><rect x="1137.4" y="531.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1140.4" y="542.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.04%)</title><rect x="1137.4" y="515.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1140.4" y="526.0"></text>
</g>
<g>
<title>char[] (4 samples, 0.03%)</title><rect x="1137.9" y="515.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1140.9" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (4 samples, 0.03%)</title><rect x="1138.4" y="547.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1141.4" y="558.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable$HandleList[] (3 samples, 0.02%)</title><rect x="1138.4" y="531.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1141.4" y="542.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (224 samples, 1.68%)</title><rect x="1138.9" y="707.0" width="19.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1141.9" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (224 samples, 1.68%)</title><rect x="1138.9" y="691.0" width="19.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1141.9" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (224 samples, 1.68%)</title><rect x="1138.9" y="675.0" width="19.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1141.9" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (222 samples, 1.66%)</title><rect x="1138.9" y="659.0" width="19.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.9" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (222 samples, 1.66%)</title><rect x="1138.9" y="643.0" width="19.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1141.9" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (220 samples, 1.65%)</title><rect x="1138.9" y="627.0" width="19.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1141.9" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (4 samples, 0.03%)</title><rect x="1138.9" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1141.9" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (4 samples, 0.03%)</title><rect x="1138.9" y="595.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1141.9" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (216 samples, 1.62%)</title><rect x="1139.3" y="611.0" width="19.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1142.3" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (216 samples, 1.62%)</title><rect x="1139.3" y="595.0" width="19.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1142.3" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.03%)</title><rect x="1139.3" y="579.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1142.3" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (212 samples, 1.59%)</title><rect x="1139.6" y="579.0" width="18.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1142.6" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (210 samples, 1.57%)</title><rect x="1139.6" y="563.0" width="18.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1142.6" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (4 samples, 0.03%)</title><rect x="1139.6" y="547.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1142.6" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (206 samples, 1.54%)</title><rect x="1140.0" y="547.0" width="18.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.0" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (31 samples, 0.23%)</title><rect x="1140.1" y="531.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1143.1" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (31 samples, 0.23%)</title><rect x="1140.1" y="515.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1143.1" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (31 samples, 0.23%)</title><rect x="1140.1" y="499.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1143.1" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (31 samples, 0.23%)</title><rect x="1140.1" y="483.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.1" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (31 samples, 0.23%)</title><rect x="1140.1" y="467.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.1" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (31 samples, 0.23%)</title><rect x="1140.1" y="451.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (31 samples, 0.23%)</title><rect x="1140.1" y="435.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1143.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (31 samples, 0.23%)</title><rect x="1140.1" y="419.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1143.1" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (31 samples, 0.23%)</title><rect x="1140.1" y="403.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1143.1" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (31 samples, 0.23%)</title><rect x="1140.1" y="387.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1143.1" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (31 samples, 0.23%)</title><rect x="1140.1" y="371.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.1" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (30 samples, 0.22%)</title><rect x="1140.1" y="355.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1143.1" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (30 samples, 0.22%)</title><rect x="1140.1" y="339.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1143.1" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (30 samples, 0.22%)</title><rect x="1140.1" y="323.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1143.1" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.03%)</title><rect x="1140.1" y="307.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1143.1" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (26 samples, 0.19%)</title><rect x="1140.5" y="307.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1143.5" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (24 samples, 0.18%)</title><rect x="1140.5" y="291.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1143.5" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (24 samples, 0.18%)</title><rect x="1140.5" y="275.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1143.5" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (6 samples, 0.04%)</title><rect x="1140.6" y="259.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1143.6" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (6 samples, 0.04%)</title><rect x="1140.6" y="243.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1143.6" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (6 samples, 0.04%)</title><rect x="1140.6" y="227.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1143.6" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (6 samples, 0.04%)</title><rect x="1140.6" y="211.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1143.6" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (4 samples, 0.03%)</title><rect x="1140.8" y="195.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.8" y="206.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.02%)</title><rect x="1140.8" y="179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.02%)</title><rect x="1140.8" y="163.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1143.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (3 samples, 0.02%)</title><rect x="1140.8" y="147.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1143.8" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (3 samples, 0.02%)</title><rect x="1140.8" y="131.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.8" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (3 samples, 0.02%)</title><rect x="1140.8" y="115.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1143.8" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.02%)</title><rect x="1140.8" y="99.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1143.8" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.02%)</title><rect x="1140.8" y="83.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1143.8" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.02%)</title><rect x="1140.8" y="67.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1143.8" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.02%)</title><rect x="1140.8" y="51.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1143.8" y="62.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.02%)</title><rect x="1140.8" y="35.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1143.8" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (17 samples, 0.13%)</title><rect x="1141.1" y="259.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1144.1" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (17 samples, 0.13%)</title><rect x="1141.1" y="243.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1144.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (17 samples, 0.13%)</title><rect x="1141.1" y="227.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1144.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (17 samples, 0.13%)</title><rect x="1141.1" y="211.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1144.1" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (17 samples, 0.13%)</title><rect x="1141.1" y="195.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1144.1" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (17 samples, 0.13%)</title><rect x="1141.1" y="179.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1144.1" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (17 samples, 0.13%)</title><rect x="1141.1" y="163.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1144.1" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.02%)</title><rect x="1141.1" y="147.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1144.1" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.02%)</title><rect x="1141.1" y="131.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1144.1" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.02%)</title><rect x="1141.1" y="115.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1144.1" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.02%)</title><rect x="1141.1" y="99.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1144.1" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (3 samples, 0.02%)</title><rect x="1141.1" y="83.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1144.1" y="94.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (3 samples, 0.02%)</title><rect x="1141.1" y="67.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1144.1" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (12 samples, 0.09%)</title><rect x="1141.4" y="147.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1144.4" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (12 samples, 0.09%)</title><rect x="1141.4" y="131.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1144.4" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (12 samples, 0.09%)</title><rect x="1141.4" y="115.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1144.4" y="126.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.02%)</title><rect x="1141.4" y="99.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1144.4" y="110.0"></text>
</g>
<g>
<title>int[] (4 samples, 0.03%)</title><rect x="1141.6" y="99.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1144.6" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.04%)</title><rect x="1142.0" y="99.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1145.0" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (173 samples, 1.29%)</title><rect x="1142.9" y="531.0" width="15.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1145.9" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.05%)</title><rect x="1142.9" y="515.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1145.9" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (166 samples, 1.24%)</title><rect x="1143.5" y="515.0" width="14.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1146.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (166 samples, 1.24%)</title><rect x="1143.5" y="499.0" width="14.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1146.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (166 samples, 1.24%)</title><rect x="1143.5" y="483.0" width="14.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1146.5" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (166 samples, 1.24%)</title><rect x="1143.5" y="467.0" width="14.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1146.5" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (161 samples, 1.20%)</title><rect x="1143.7" y="451.0" width="14.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1146.7" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (161 samples, 1.20%)</title><rect x="1143.7" y="435.0" width="14.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1146.7" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (65 samples, 0.49%)</title><rect x="1143.7" y="419.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1146.7" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (9 samples, 0.07%)</title><rect x="1143.7" y="403.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1146.7" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (8 samples, 0.06%)</title><rect x="1143.7" y="387.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1146.7" y="398.0"></text>
</g>
<g>
<title>int[] (4 samples, 0.03%)</title><rect x="1143.7" y="371.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1146.7" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.03%)</title><rect x="1144.0" y="371.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1147.0" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (56 samples, 0.42%)</title><rect x="1144.5" y="403.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1147.5" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (48 samples, 0.36%)</title><rect x="1144.5" y="387.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1147.5" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (48 samples, 0.36%)</title><rect x="1144.5" y="371.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1147.5" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (48 samples, 0.36%)</title><rect x="1144.5" y="355.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1147.5" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (47 samples, 0.35%)</title><rect x="1144.6" y="339.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1147.6" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (43 samples, 0.32%)</title><rect x="1144.6" y="323.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1147.6" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (41 samples, 0.31%)</title><rect x="1144.7" y="307.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1147.7" y="318.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (3 samples, 0.02%)</title><rect x="1144.7" y="291.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1147.7" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (38 samples, 0.28%)</title><rect x="1145.0" y="291.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1148.0" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (36 samples, 0.27%)</title><rect x="1145.2" y="275.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1148.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (36 samples, 0.27%)</title><rect x="1145.2" y="259.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1148.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (36 samples, 0.27%)</title><rect x="1145.2" y="243.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1148.2" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (36 samples, 0.27%)</title><rect x="1145.2" y="227.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1148.2" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (35 samples, 0.26%)</title><rect x="1145.3" y="211.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1148.3" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (35 samples, 0.26%)</title><rect x="1145.3" y="195.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1148.3" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (25 samples, 0.19%)</title><rect x="1145.3" y="179.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1148.3" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (25 samples, 0.19%)</title><rect x="1145.3" y="163.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1148.3" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (24 samples, 0.18%)</title><rect x="1145.3" y="147.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1148.3" y="158.0"></text>
</g>
<g>
<title>int[] (10 samples, 0.07%)</title><rect x="1145.3" y="131.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1148.3" y="142.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.10%)</title><rect x="1146.1" y="131.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1149.1" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (10 samples, 0.07%)</title><rect x="1147.5" y="179.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1150.5" y="190.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (10 samples, 0.07%)</title><rect x="1147.5" y="163.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1150.5" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (4 samples, 0.03%)</title><rect x="1148.3" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1151.3" y="334.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (4 samples, 0.03%)</title><rect x="1148.3" y="307.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1151.3" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (8 samples, 0.06%)</title><rect x="1148.7" y="387.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1151.7" y="398.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (8 samples, 0.06%)</title><rect x="1148.7" y="371.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1151.7" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (39 samples, 0.29%)</title><rect x="1149.4" y="419.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1152.4" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (25 samples, 0.19%)</title><rect x="1149.4" y="403.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1152.4" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (25 samples, 0.19%)</title><rect x="1149.4" y="387.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1152.4" y="398.0"></text>
</g>
<g>
<title>int[] (11 samples, 0.08%)</title><rect x="1149.4" y="371.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1152.4" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.10%)</title><rect x="1150.4" y="371.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1153.4" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (14 samples, 0.10%)</title><rect x="1151.6" y="403.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1154.6" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (14 samples, 0.10%)</title><rect x="1151.6" y="387.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1154.6" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.03%)</title><rect x="1151.6" y="371.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1154.6" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (10 samples, 0.07%)</title><rect x="1152.0" y="371.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1155.0" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (9 samples, 0.07%)</title><rect x="1152.0" y="355.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1155.0" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (9 samples, 0.07%)</title><rect x="1152.0" y="339.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1155.0" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (7 samples, 0.05%)</title><rect x="1152.1" y="323.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1155.1" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.04%)</title><rect x="1152.3" y="307.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1155.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.04%)</title><rect x="1152.3" y="291.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1155.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (5 samples, 0.04%)</title><rect x="1152.3" y="275.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1155.3" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (5 samples, 0.04%)</title><rect x="1152.3" y="259.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1155.3" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (3 samples, 0.02%)</title><rect x="1152.5" y="243.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1155.5" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (3 samples, 0.02%)</title><rect x="1152.5" y="227.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1155.5" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (5 samples, 0.04%)</title><rect x="1152.8" y="419.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1155.8" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (5 samples, 0.04%)</title><rect x="1152.8" y="403.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1155.8" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (5 samples, 0.04%)</title><rect x="1152.8" y="387.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1155.8" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.02%)</title><rect x="1153.0" y="371.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1156.0" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (52 samples, 0.39%)</title><rect x="1153.3" y="419.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1156.3" y="430.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (52 samples, 0.39%)</title><rect x="1153.3" y="403.0" width="4.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1156.3" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (3 samples, 0.02%)</title><rect x="1157.9" y="451.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1160.9" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (3 samples, 0.02%)</title><rect x="1157.9" y="435.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1160.9" y="446.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (79 samples, 0.59%)</title><rect x="1158.7" y="707.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.7" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$$Lambda$98/1376599281.readString (5 samples, 0.04%)</title><rect x="1158.7" y="691.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1161.7" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (5 samples, 0.04%)</title><rect x="1158.7" y="675.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1161.7" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (5 samples, 0.04%)</title><rect x="1158.7" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.7" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (5 samples, 0.04%)</title><rect x="1158.7" y="643.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1161.7" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (5 samples, 0.04%)</title><rect x="1158.7" y="627.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1161.7" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (5 samples, 0.04%)</title><rect x="1158.7" y="611.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1161.7" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (5 samples, 0.04%)</title><rect x="1158.7" y="595.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1161.7" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (74 samples, 0.55%)</title><rect x="1159.1" y="691.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1162.1" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (74 samples, 0.55%)</title><rect x="1159.1" y="675.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1162.1" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (74 samples, 0.55%)</title><rect x="1159.1" y="659.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1162.1" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (29 samples, 0.22%)</title><rect x="1159.1" y="643.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1162.1" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.assign (7 samples, 0.05%)</title><rect x="1159.1" y="627.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1162.1" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.grow (7 samples, 0.05%)</title><rect x="1159.1" y="611.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1162.1" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (12 samples, 0.09%)</title><rect x="1159.7" y="627.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1162.7" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (12 samples, 0.09%)</title><rect x="1159.7" y="611.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1162.7" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (7 samples, 0.05%)</title><rect x="1159.8" y="595.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1162.8" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (4 samples, 0.03%)</title><rect x="1160.1" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1163.1" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (4 samples, 0.03%)</title><rect x="1160.4" y="595.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1163.4" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (8 samples, 0.06%)</title><rect x="1160.8" y="627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1163.8" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (8 samples, 0.06%)</title><rect x="1160.8" y="611.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1163.8" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (8 samples, 0.06%)</title><rect x="1160.8" y="595.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1163.8" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (8 samples, 0.06%)</title><rect x="1160.8" y="579.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1163.8" y="590.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (4 samples, 0.03%)</title><rect x="1160.8" y="563.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1163.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.03%)</title><rect x="1161.1" y="563.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1164.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.03%)</title><rect x="1161.1" y="547.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1164.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.02%)</title><rect x="1161.1" y="531.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1164.1" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (45 samples, 0.34%)</title><rect x="1161.7" y="643.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1164.7" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (22 samples, 0.16%)</title><rect x="1161.7" y="627.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1164.7" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (22 samples, 0.16%)</title><rect x="1161.7" y="611.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1164.7" y="622.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (5 samples, 0.04%)</title><rect x="1161.9" y="595.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1164.9" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (15 samples, 0.11%)</title><rect x="1162.3" y="595.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1165.3" y="606.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (4 samples, 0.03%)</title><rect x="1162.3" y="579.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1165.3" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (9 samples, 0.07%)</title><rect x="1162.8" y="579.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1165.8" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (7 samples, 0.05%)</title><rect x="1163.0" y="563.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1166.0" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (7 samples, 0.05%)</title><rect x="1163.0" y="547.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1166.0" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (7 samples, 0.05%)</title><rect x="1163.0" y="531.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1166.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.02%)</title><rect x="1163.4" y="515.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1166.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.02%)</title><rect x="1163.4" y="499.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1166.4" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.02%)</title><rect x="1163.4" y="483.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1166.4" y="494.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="1163.4" y="467.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1166.4" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (23 samples, 0.17%)</title><rect x="1163.6" y="627.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1166.6" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (22 samples, 0.16%)</title><rect x="1163.7" y="611.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1166.7" y="622.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (22 samples, 0.16%)</title><rect x="1163.7" y="595.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1166.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (22 samples, 0.16%)</title><rect x="1163.7" y="579.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1166.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (17 samples, 0.13%)</title><rect x="1163.7" y="563.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1166.7" y="574.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (17 samples, 0.13%)</title><rect x="1163.7" y="547.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1166.7" y="558.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (17 samples, 0.13%)</title><rect x="1163.7" y="531.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1166.7" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.04%)</title><rect x="1163.8" y="515.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1166.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.04%)</title><rect x="1163.8" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1166.8" y="510.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.02%)</title><rect x="1163.8" y="483.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1166.8" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.02%)</title><rect x="1164.1" y="483.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1167.1" y="494.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="1164.1" y="467.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1167.1" y="478.0"></text>
</g>
<g>
<title>javax/management/ObjectName.setCanonicalName (8 samples, 0.06%)</title><rect x="1164.5" y="515.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1167.5" y="526.0"></text>
</g>
<g>
<title>javax.management.ObjectName$Property[] (5 samples, 0.04%)</title><rect x="1164.8" y="499.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1167.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor36.invoke (5 samples, 0.04%)</title><rect x="1165.2" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1168.2" y="574.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.readObject (5 samples, 0.04%)</title><rect x="1165.2" y="547.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1168.2" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadObject (5 samples, 0.04%)</title><rect x="1165.2" y="531.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1168.2" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadFields (5 samples, 0.04%)</title><rect x="1165.2" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1168.2" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (5 samples, 0.04%)</title><rect x="1165.2" y="499.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1168.2" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (5 samples, 0.04%)</title><rect x="1165.2" y="483.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1168.2" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (4 samples, 0.03%)</title><rect x="1165.2" y="467.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1168.2" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (4 samples, 0.03%)</title><rect x="1165.2" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1168.2" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (3 samples, 0.02%)</title><rect x="1165.2" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1168.2" y="446.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (145 samples, 1.08%)</title><rect x="1165.6" y="707.0" width="12.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1168.6" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (143 samples, 1.07%)</title><rect x="1165.8" y="691.0" width="12.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1168.8" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (141 samples, 1.05%)</title><rect x="1166.0" y="675.0" width="12.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1169.0" y="686.0"></text>
</g>
<g>
<title>java.rmi.server.UID (3 samples, 0.02%)</title><rect x="1166.0" y="659.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1169.0" y="670.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (138 samples, 1.03%)</title><rect x="1166.3" y="659.0" width="12.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1169.3" y="670.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (138 samples, 1.03%)</title><rect x="1166.3" y="643.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1169.3" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (137 samples, 1.02%)</title><rect x="1166.3" y="627.0" width="12.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1169.3" y="638.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$ReplaceTable (3 samples, 0.02%)</title><rect x="1166.4" y="611.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1169.4" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (76 samples, 0.57%)</title><rect x="1166.7" y="611.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1169.7" y="622.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.22%)</title><rect x="1166.7" y="595.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1169.7" y="606.0"></text>
</g>
<g>
<title>char[] (6 samples, 0.04%)</title><rect x="1169.3" y="595.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1172.3" y="606.0"></text>
</g>
<g>
<title>char[] (34 samples, 0.25%)</title><rect x="1169.8" y="595.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1172.8" y="606.0"></text>
</g>
<g>
<title>java/io/DataOutputStream.&lt;init&gt; (7 samples, 0.05%)</title><rect x="1172.8" y="595.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1175.8" y="606.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.04%)</title><rect x="1172.8" y="579.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1175.8" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (26 samples, 0.19%)</title><rect x="1173.4" y="611.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1176.4" y="622.0"></text>
</g>
<g>
<title>int[] (19 samples, 0.14%)</title><rect x="1173.4" y="595.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1176.4" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.05%)</title><rect x="1175.1" y="595.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1178.1" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$ReplaceTable.&lt;init&gt; (30 samples, 0.22%)</title><rect x="1175.7" y="611.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1178.7" y="622.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (3 samples, 0.02%)</title><rect x="1175.7" y="595.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1178.7" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.04%)</title><rect x="1176.0" y="595.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1179.0" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (21 samples, 0.16%)</title><rect x="1176.5" y="595.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1179.5" y="606.0"></text>
</g>
<g>
<title>int[] (16 samples, 0.12%)</title><rect x="1176.5" y="579.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1179.5" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.04%)</title><rect x="1177.9" y="579.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1180.9" y="590.0"></text>
</g>
<g>
<title>sun.rmi.transport.Transport$1 (3 samples, 0.02%)</title><rect x="1178.4" y="771.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1181.4" y="782.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (124 samples, 0.93%)</title><rect x="1178.7" y="771.0" width="10.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1181.7" y="782.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (123 samples, 0.92%)</title><rect x="1178.8" y="755.0" width="10.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1181.8" y="766.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (122 samples, 0.91%)</title><rect x="1178.9" y="739.0" width="10.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1181.9" y="750.0"></text>
</g>
<g>
<title>java.util.HashMap (4 samples, 0.03%)</title><rect x="1178.9" y="723.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1181.9" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (118 samples, 0.88%)</title><rect x="1179.2" y="723.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1182.2" y="734.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$BlockDataInputStream (3 samples, 0.02%)</title><rect x="1179.2" y="707.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1182.2" y="718.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable (3 samples, 0.02%)</title><rect x="1179.5" y="707.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1182.5" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (84 samples, 0.63%)</title><rect x="1179.8" y="707.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1182.8" y="718.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.04%)</title><rect x="1179.8" y="691.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1182.8" y="702.0"></text>
</g>
<g>
<title>char[] (26 samples, 0.19%)</title><rect x="1180.4" y="691.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1183.4" y="702.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (47 samples, 0.35%)</title><rect x="1183.0" y="691.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1186.0" y="702.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.08%)</title><rect x="1183.0" y="675.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1186.0" y="686.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.06%)</title><rect x="1184.0" y="675.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1187.0" y="686.0"></text>
</g>
<g>
<title>char[] (16 samples, 0.12%)</title><rect x="1184.7" y="675.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1187.7" y="686.0"></text>
</g>
<g>
<title>char[] (12 samples, 0.09%)</title><rect x="1186.1" y="675.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1189.1" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (28 samples, 0.21%)</title><rect x="1187.2" y="707.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1190.2" y="718.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.04%)</title><rect x="1187.2" y="691.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1190.2" y="702.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable$HandleList[] (7 samples, 0.05%)</title><rect x="1187.7" y="691.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1190.7" y="702.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.11%)</title><rect x="1188.3" y="691.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1191.3" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.setContextClassLoader (4 samples, 0.03%)</title><rect x="1189.6" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.03%)</title><rect x="1189.6" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1192.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.03%)</title><rect x="1189.6" y="739.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.6" y="750.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$$Lambda$100/64076912.get$Lambda (4 samples, 0.03%)</title><rect x="1189.6" y="723.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1192.6" y="734.0"></text>
</g>
<g>
<title>sun.rmi.transport.Transport$$Lambda$100 (4 samples, 0.03%)</title><rect x="1189.6" y="707.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1192.6" y="718.0"></text>
</g>
</g>
</svg>
