<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="517"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="517"> </text>
<g id="frames">
<g>
<title>all (4,727 samples, 100.00%)</title><rect x="10.0" y="483.0" width="1180.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="494.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=18629] (298 samples, 6.30%)</title><rect x="10.0" y="467.0" width="74.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="478.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (298 samples, 6.30%)</title><rect x="10.0" y="451.0" width="74.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="462.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (16 samples, 0.34%)</title><rect x="10.0" y="435.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (16 samples, 0.34%)</title><rect x="10.0" y="419.0" width="4.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (282 samples, 5.97%)</title><rect x="14.0" y="435.0" width="70.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.0" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (282 samples, 5.97%)</title><rect x="14.0" y="419.0" width="70.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.0" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (282 samples, 5.97%)</title><rect x="14.0" y="403.0" width="70.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.0" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (108 samples, 2.28%)</title><rect x="14.0" y="387.0" width="27.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.0" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (108 samples, 2.28%)</title><rect x="14.0" y="371.0" width="27.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.0" y="382.0">o..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (75 samples, 1.59%)</title><rect x="14.0" y="355.0" width="18.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (24 samples, 0.51%)</title><rect x="14.0" y="339.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (24 samples, 0.51%)</title><rect x="14.0" y="323.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (24 samples, 0.51%)</title><rect x="14.0" y="307.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.51%)</title><rect x="14.0" y="291.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="17.0" y="302.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.23%)</title><rect x="14.0" y="275.0" width="2.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="17.0" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.28%)</title><rect x="16.7" y="275.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.7" y="286.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.28%)</title><rect x="16.7" y="259.0" width="3.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="19.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (51 samples, 1.08%)</title><rect x="20.0" y="339.0" width="12.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.06%)</title><rect x="20.0" y="323.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.06%)</title><rect x="20.0" y="307.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.06%)</title><rect x="20.0" y="291.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.0" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.06%)</title><rect x="20.0" y="275.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.0" y="286.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="20.0" y="259.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="23.0" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (34 samples, 0.72%)</title><rect x="20.7" y="323.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (34 samples, 0.72%)</title><rect x="20.7" y="307.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.7" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (34 samples, 0.72%)</title><rect x="20.7" y="291.0" width="8.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="23.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (14 samples, 0.30%)</title><rect x="29.2" y="323.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="32.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.30%)</title><rect x="29.2" y="307.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.30%)</title><rect x="29.2" y="291.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.get$Lambda (14 samples, 0.30%)</title><rect x="29.2" y="275.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.2" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$74 (14 samples, 0.30%)</title><rect x="29.2" y="259.0" width="3.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="32.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (33 samples, 0.70%)</title><rect x="32.7" y="355.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (33 samples, 0.70%)</title><rect x="32.7" y="339.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="35.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (33 samples, 0.70%)</title><rect x="32.7" y="323.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.47%)</title><rect x="32.7" y="307.0" width="5.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="35.7" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.23%)</title><rect x="38.2" y="307.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="41.2" y="318.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.23%)</title><rect x="38.2" y="291.0" width="2.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="41.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (115 samples, 2.43%)</title><rect x="41.0" y="387.0" width="28.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="44.0" y="398.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (29 samples, 0.61%)</title><rect x="41.0" y="371.0" width="7.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="44.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (39 samples, 0.83%)</title><rect x="48.2" y="371.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.2" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (39 samples, 0.83%)</title><rect x="48.2" y="355.0" width="9.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="51.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (47 samples, 0.99%)</title><rect x="57.9" y="371.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (47 samples, 0.99%)</title><rect x="57.9" y="355.0" width="11.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.9" y="366.0"></text>
</g>
<g>
<title>char[] (23 samples, 0.49%)</title><rect x="57.9" y="339.0" width="5.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="60.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.30%)</title><rect x="63.7" y="339.0" width="3.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="66.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.21%)</title><rect x="67.2" y="339.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.21%)</title><rect x="67.2" y="323.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10 samples, 0.21%)</title><rect x="67.2" y="307.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="70.2" y="318.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.21%)</title><rect x="67.2" y="291.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="70.2" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 1.25%)</title><rect x="69.7" y="387.0" width="14.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.7" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 1.25%)</title><rect x="69.7" y="371.0" width="14.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.7" y="382.0"></text>
</g>
<g>
<title>char[] (22 samples, 0.47%)</title><rect x="69.7" y="355.0" width="5.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="72.7" y="366.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.17%)</title><rect x="75.2" y="355.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="78.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.61%)</title><rect x="77.2" y="355.0" width="7.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="80.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.61%)</title><rect x="77.2" y="339.0" width="7.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (29 samples, 0.61%)</title><rect x="77.2" y="323.0" width="7.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.2" y="334.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.61%)</title><rect x="77.2" y="307.0" width="7.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="80.2" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=18630] (299 samples, 6.33%)</title><rect x="84.4" y="467.0" width="74.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="87.4" y="478.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (299 samples, 6.33%)</title><rect x="84.4" y="451.0" width="74.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.4" y="462.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (23 samples, 0.49%)</title><rect x="84.4" y="435.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.4" y="446.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (23 samples, 0.49%)</title><rect x="84.4" y="419.0" width="5.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="87.4" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (276 samples, 5.84%)</title><rect x="90.1" y="435.0" width="68.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="93.1" y="446.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (276 samples, 5.84%)</title><rect x="90.1" y="419.0" width="68.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.1" y="430.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (276 samples, 5.84%)</title><rect x="90.1" y="403.0" width="68.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.1" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (97 samples, 2.05%)</title><rect x="90.1" y="387.0" width="24.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="93.1" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (97 samples, 2.05%)</title><rect x="90.1" y="371.0" width="24.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.1" y="382.0">o..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (75 samples, 1.59%)</title><rect x="90.1" y="355.0" width="18.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (29 samples, 0.61%)</title><rect x="90.1" y="339.0" width="7.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="93.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (29 samples, 0.61%)</title><rect x="90.1" y="323.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (29 samples, 0.61%)</title><rect x="90.1" y="307.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.61%)</title><rect x="90.1" y="291.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="93.1" y="302.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.38%)</title><rect x="90.1" y="275.0" width="4.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="93.1" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.23%)</title><rect x="94.6" y="275.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="97.6" y="286.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.23%)</title><rect x="94.6" y="259.0" width="2.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="97.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (46 samples, 0.97%)</title><rect x="97.4" y="339.0" width="11.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.13%)</title><rect x="97.4" y="323.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="100.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.13%)</title><rect x="97.4" y="307.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.13%)</title><rect x="97.4" y="291.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="100.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.13%)</title><rect x="97.4" y="275.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="100.4" y="286.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.13%)</title><rect x="97.4" y="259.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="100.4" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28 samples, 0.59%)</title><rect x="98.9" y="323.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28 samples, 0.59%)</title><rect x="98.9" y="307.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="101.9" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.59%)</title><rect x="98.9" y="291.0" width="7.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="101.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (12 samples, 0.25%)</title><rect x="105.9" y="323.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.25%)</title><rect x="105.9" y="307.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.25%)</title><rect x="105.9" y="291.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.get$Lambda (12 samples, 0.25%)</title><rect x="105.9" y="275.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="108.9" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$74 (12 samples, 0.25%)</title><rect x="105.9" y="259.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="108.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (22 samples, 0.47%)</title><rect x="108.9" y="355.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="111.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.47%)</title><rect x="108.9" y="339.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.47%)</title><rect x="108.9" y="323.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="111.9" y="334.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.21%)</title><rect x="108.9" y="307.0" width="2.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="111.9" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.25%)</title><rect x="111.3" y="307.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.3" y="318.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.25%)</title><rect x="111.3" y="291.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="114.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (123 samples, 2.60%)</title><rect x="114.3" y="387.0" width="30.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.3" y="398.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (19 samples, 0.40%)</title><rect x="114.3" y="371.0" width="4.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="117.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (42 samples, 0.89%)</title><rect x="119.1" y="371.0" width="10.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="122.1" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (42 samples, 0.89%)</title><rect x="119.1" y="355.0" width="10.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="122.1" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (62 samples, 1.31%)</title><rect x="129.6" y="371.0" width="15.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.6" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (62 samples, 1.31%)</title><rect x="129.6" y="355.0" width="15.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="132.6" y="366.0"></text>
</g>
<g>
<title>char[] (30 samples, 0.63%)</title><rect x="129.6" y="339.0" width="7.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="132.6" y="350.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.25%)</title><rect x="137.1" y="339.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="140.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.42%)</title><rect x="140.1" y="339.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="143.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.42%)</title><rect x="140.1" y="323.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (20 samples, 0.42%)</title><rect x="140.1" y="307.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.1" y="318.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.42%)</title><rect x="140.1" y="291.0" width="4.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="143.1" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (56 samples, 1.18%)</title><rect x="145.0" y="387.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="148.0" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (56 samples, 1.18%)</title><rect x="145.0" y="371.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="148.0" y="382.0"></text>
</g>
<g>
<title>char[] (21 samples, 0.44%)</title><rect x="145.0" y="355.0" width="5.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="148.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.21%)</title><rect x="150.3" y="355.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="153.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.53%)</title><rect x="152.8" y="355.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.53%)</title><rect x="152.8" y="339.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (25 samples, 0.53%)</title><rect x="152.8" y="323.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.8" y="334.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.53%)</title><rect x="152.8" y="307.0" width="6.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="155.8" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=18631] (294 samples, 6.22%)</title><rect x="159.0" y="467.0" width="73.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="162.0" y="478.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (294 samples, 6.22%)</title><rect x="159.0" y="451.0" width="73.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="162.0" y="462.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (28 samples, 0.59%)</title><rect x="159.0" y="435.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="162.0" y="446.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (28 samples, 0.59%)</title><rect x="159.0" y="419.0" width="7.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="162.0" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (266 samples, 5.63%)</title><rect x="166.0" y="435.0" width="66.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="169.0" y="446.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (266 samples, 5.63%)</title><rect x="166.0" y="419.0" width="66.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="169.0" y="430.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (266 samples, 5.63%)</title><rect x="166.0" y="403.0" width="66.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.0" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (90 samples, 1.90%)</title><rect x="166.0" y="387.0" width="22.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="169.0" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (90 samples, 1.90%)</title><rect x="166.0" y="371.0" width="22.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="169.0" y="382.0">o..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (70 samples, 1.48%)</title><rect x="166.0" y="355.0" width="17.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (23 samples, 0.49%)</title><rect x="166.0" y="339.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="169.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (23 samples, 0.49%)</title><rect x="166.0" y="323.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="169.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.49%)</title><rect x="166.0" y="307.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="169.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.49%)</title><rect x="166.0" y="291.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="169.0" y="302.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.34%)</title><rect x="166.0" y="275.0" width="4.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="169.0" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.15%)</title><rect x="170.0" y="275.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="173.0" y="286.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.15%)</title><rect x="170.0" y="259.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="173.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (47 samples, 0.99%)</title><rect x="171.8" y="339.0" width="11.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (13 samples, 0.28%)</title><rect x="171.8" y="323.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="174.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (13 samples, 0.28%)</title><rect x="171.8" y="307.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="174.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (13 samples, 0.28%)</title><rect x="171.8" y="291.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="174.8" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.28%)</title><rect x="171.8" y="275.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.8" y="286.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.28%)</title><rect x="171.8" y="259.0" width="3.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="174.8" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.49%)</title><rect x="175.0" y="323.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="178.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.49%)</title><rect x="175.0" y="307.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="178.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.49%)</title><rect x="175.0" y="291.0" width="5.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="178.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (11 samples, 0.23%)</title><rect x="180.7" y="323.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="183.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.23%)</title><rect x="180.7" y="307.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="183.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.23%)</title><rect x="180.7" y="291.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="183.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.get$Lambda (11 samples, 0.23%)</title><rect x="180.7" y="275.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="183.7" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$74 (11 samples, 0.23%)</title><rect x="180.7" y="259.0" width="2.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="183.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (20 samples, 0.42%)</title><rect x="183.5" y="355.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.42%)</title><rect x="183.5" y="339.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.42%)</title><rect x="183.5" y="323.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="186.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.23%)</title><rect x="183.5" y="307.0" width="2.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="186.5" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.19%)</title><rect x="186.2" y="307.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="189.2" y="318.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.19%)</title><rect x="186.2" y="291.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="189.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (122 samples, 2.58%)</title><rect x="188.5" y="387.0" width="30.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.5" y="398.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (14 samples, 0.30%)</title><rect x="188.5" y="371.0" width="3.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="191.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (39 samples, 0.83%)</title><rect x="192.0" y="371.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="195.0" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (39 samples, 0.83%)</title><rect x="192.0" y="355.0" width="9.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="195.0" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (69 samples, 1.46%)</title><rect x="201.7" y="371.0" width="17.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.7" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (69 samples, 1.46%)</title><rect x="201.7" y="355.0" width="17.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="204.7" y="366.0"></text>
</g>
<g>
<title>char[] (34 samples, 0.72%)</title><rect x="201.7" y="339.0" width="8.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="204.7" y="350.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.21%)</title><rect x="210.2" y="339.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="213.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.53%)</title><rect x="212.7" y="339.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="215.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.53%)</title><rect x="212.7" y="323.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="215.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (25 samples, 0.53%)</title><rect x="212.7" y="307.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="215.7" y="318.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.53%)</title><rect x="212.7" y="291.0" width="6.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="215.7" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (54 samples, 1.14%)</title><rect x="218.9" y="387.0" width="13.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="221.9" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (54 samples, 1.14%)</title><rect x="218.9" y="371.0" width="13.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="221.9" y="382.0"></text>
</g>
<g>
<title>char[] (24 samples, 0.51%)</title><rect x="218.9" y="355.0" width="6.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="221.9" y="366.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.17%)</title><rect x="224.9" y="355.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="227.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.47%)</title><rect x="226.9" y="355.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="229.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.47%)</title><rect x="226.9" y="339.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="229.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (22 samples, 0.47%)</title><rect x="226.9" y="323.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="229.9" y="334.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.47%)</title><rect x="226.9" y="307.0" width="5.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="229.9" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=18632] (304 samples, 6.43%)</title><rect x="232.4" y="467.0" width="75.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="235.4" y="478.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (304 samples, 6.43%)</title><rect x="232.4" y="451.0" width="75.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.4" y="462.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (21 samples, 0.44%)</title><rect x="232.4" y="435.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="235.4" y="446.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (21 samples, 0.44%)</title><rect x="232.4" y="419.0" width="5.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="235.4" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (283 samples, 5.99%)</title><rect x="237.7" y="435.0" width="70.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="240.7" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (283 samples, 5.99%)</title><rect x="237.7" y="419.0" width="70.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="240.7" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (283 samples, 5.99%)</title><rect x="237.7" y="403.0" width="70.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="240.7" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (93 samples, 1.97%)</title><rect x="237.7" y="387.0" width="23.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="240.7" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (93 samples, 1.97%)</title><rect x="237.7" y="371.0" width="23.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="240.7" y="382.0">o..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (73 samples, 1.54%)</title><rect x="237.7" y="355.0" width="18.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (37 samples, 0.78%)</title><rect x="237.7" y="339.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="240.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (37 samples, 0.78%)</title><rect x="237.7" y="323.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="240.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (37 samples, 0.78%)</title><rect x="237.7" y="307.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (37 samples, 0.78%)</title><rect x="237.7" y="291.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="240.7" y="302.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.47%)</title><rect x="237.7" y="275.0" width="5.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="240.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.32%)</title><rect x="243.2" y="275.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="246.2" y="286.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.32%)</title><rect x="243.2" y="259.0" width="3.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="246.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (36 samples, 0.76%)</title><rect x="246.9" y="339.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.21%)</title><rect x="246.9" y="323.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.21%)</title><rect x="246.9" y="307.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="249.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (10 samples, 0.21%)</title><rect x="246.9" y="291.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="249.9" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.21%)</title><rect x="246.9" y="275.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="249.9" y="286.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.21%)</title><rect x="246.9" y="259.0" width="2.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="249.9" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.34%)</title><rect x="249.4" y="323.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="252.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.34%)</title><rect x="249.4" y="307.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="252.4" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.34%)</title><rect x="249.4" y="291.0" width="4.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="252.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (10 samples, 0.21%)</title><rect x="253.4" y="323.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="256.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.21%)</title><rect x="253.4" y="307.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="256.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.21%)</title><rect x="253.4" y="291.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.get$Lambda (10 samples, 0.21%)</title><rect x="253.4" y="275.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="256.4" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$74 (10 samples, 0.21%)</title><rect x="253.4" y="259.0" width="2.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="256.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (20 samples, 0.42%)</title><rect x="255.9" y="355.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="258.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.42%)</title><rect x="255.9" y="339.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.42%)</title><rect x="255.9" y="323.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.9" y="334.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.25%)</title><rect x="255.9" y="307.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="258.9" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.17%)</title><rect x="258.9" y="307.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="261.9" y="318.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.17%)</title><rect x="258.9" y="291.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="261.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (131 samples, 2.77%)</title><rect x="260.9" y="387.0" width="32.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="263.9" y="398.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (15 samples, 0.32%)</title><rect x="260.9" y="371.0" width="3.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="263.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (40 samples, 0.85%)</title><rect x="264.6" y="371.0" width="10.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="267.6" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (40 samples, 0.85%)</title><rect x="264.6" y="355.0" width="10.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="267.6" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (76 samples, 1.61%)</title><rect x="274.6" y="371.0" width="19.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="277.6" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (76 samples, 1.61%)</title><rect x="274.6" y="355.0" width="19.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="277.6" y="366.0"></text>
</g>
<g>
<title>char[] (41 samples, 0.87%)</title><rect x="274.6" y="339.0" width="10.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="277.6" y="350.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.28%)</title><rect x="284.8" y="339.0" width="3.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="287.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.47%)</title><rect x="288.1" y="339.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="291.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.47%)</title><rect x="288.1" y="323.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="291.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (22 samples, 0.47%)</title><rect x="288.1" y="307.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="291.1" y="318.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.47%)</title><rect x="288.1" y="291.0" width="5.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="291.1" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 1.25%)</title><rect x="293.6" y="387.0" width="14.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="296.6" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 1.25%)</title><rect x="293.6" y="371.0" width="14.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="296.6" y="382.0"></text>
</g>
<g>
<title>char[] (23 samples, 0.49%)</title><rect x="293.6" y="355.0" width="5.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="296.6" y="366.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.21%)</title><rect x="299.3" y="355.0" width="2.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="302.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26 samples, 0.55%)</title><rect x="301.8" y="355.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26 samples, 0.55%)</title><rect x="301.8" y="339.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="304.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (26 samples, 0.55%)</title><rect x="301.8" y="323.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.8" y="334.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.55%)</title><rect x="301.8" y="307.0" width="6.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="304.8" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=18633] (287 samples, 6.07%)</title><rect x="308.3" y="467.0" width="71.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="311.3" y="478.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (287 samples, 6.07%)</title><rect x="308.3" y="451.0" width="71.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.3" y="462.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (31 samples, 0.66%)</title><rect x="308.3" y="435.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="311.3" y="446.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (31 samples, 0.66%)</title><rect x="308.3" y="419.0" width="7.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="311.3" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (256 samples, 5.42%)</title><rect x="316.0" y="435.0" width="64.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="319.0" y="446.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (256 samples, 5.42%)</title><rect x="316.0" y="419.0" width="64.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="319.0" y="430.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (256 samples, 5.42%)</title><rect x="316.0" y="403.0" width="64.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="319.0" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (94 samples, 1.99%)</title><rect x="316.0" y="387.0" width="23.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="319.0" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (94 samples, 1.99%)</title><rect x="316.0" y="371.0" width="23.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="319.0" y="382.0">o..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (67 samples, 1.42%)</title><rect x="316.0" y="355.0" width="16.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="319.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (37 samples, 0.78%)</title><rect x="316.0" y="339.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="319.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (37 samples, 0.78%)</title><rect x="316.0" y="323.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="319.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (37 samples, 0.78%)</title><rect x="316.0" y="307.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="319.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (37 samples, 0.78%)</title><rect x="316.0" y="291.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="319.0" y="302.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.36%)</title><rect x="316.0" y="275.0" width="4.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="319.0" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.42%)</title><rect x="320.3" y="275.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.3" y="286.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.42%)</title><rect x="320.3" y="259.0" width="5.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="323.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (30 samples, 0.63%)</title><rect x="325.3" y="339.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="328.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.06%)</title><rect x="325.3" y="323.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="328.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.06%)</title><rect x="325.3" y="307.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="328.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.06%)</title><rect x="325.3" y="291.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="328.3" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.06%)</title><rect x="325.3" y="275.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="328.3" y="286.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="325.3" y="259.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="328.3" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (19 samples, 0.40%)</title><rect x="326.0" y="323.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (19 samples, 0.40%)</title><rect x="326.0" y="307.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="329.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 0.40%)</title><rect x="326.0" y="291.0" width="4.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="329.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (8 samples, 0.17%)</title><rect x="330.8" y="323.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.17%)</title><rect x="330.8" y="307.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="333.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.17%)</title><rect x="330.8" y="291.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="333.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.get$Lambda (8 samples, 0.17%)</title><rect x="330.8" y="275.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="333.8" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$74 (8 samples, 0.17%)</title><rect x="330.8" y="259.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="333.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (27 samples, 0.57%)</title><rect x="332.8" y="355.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="335.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (27 samples, 0.57%)</title><rect x="332.8" y="339.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="335.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (27 samples, 0.57%)</title><rect x="332.8" y="323.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.8" y="334.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.32%)</title><rect x="332.8" y="307.0" width="3.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="335.8" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.25%)</title><rect x="336.5" y="307.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="339.5" y="318.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.25%)</title><rect x="336.5" y="291.0" width="3.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="339.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (118 samples, 2.50%)</title><rect x="339.5" y="387.0" width="29.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="342.5" y="398.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (19 samples, 0.40%)</title><rect x="339.5" y="371.0" width="4.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="342.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (48 samples, 1.02%)</title><rect x="344.3" y="371.0" width="11.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="347.3" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (48 samples, 1.02%)</title><rect x="344.3" y="355.0" width="11.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="347.3" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (51 samples, 1.08%)</title><rect x="356.2" y="371.0" width="12.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="359.2" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (51 samples, 1.08%)</title><rect x="356.2" y="355.0" width="12.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="359.2" y="366.0"></text>
</g>
<g>
<title>char[] (27 samples, 0.57%)</title><rect x="356.2" y="339.0" width="6.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="359.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.17%)</title><rect x="363.0" y="339.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="366.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.34%)</title><rect x="365.0" y="339.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="368.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.34%)</title><rect x="365.0" y="323.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="368.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (16 samples, 0.34%)</title><rect x="365.0" y="307.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="368.0" y="318.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.34%)</title><rect x="365.0" y="291.0" width="4.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="368.0" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (44 samples, 0.93%)</title><rect x="369.0" y="387.0" width="11.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="372.0" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (44 samples, 0.93%)</title><rect x="369.0" y="371.0" width="11.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.0" y="382.0"></text>
</g>
<g>
<title>char[] (19 samples, 0.40%)</title><rect x="369.0" y="355.0" width="4.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="372.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.23%)</title><rect x="373.7" y="355.0" width="2.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="376.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.30%)</title><rect x="376.5" y="355.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="379.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.30%)</title><rect x="376.5" y="339.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (14 samples, 0.30%)</title><rect x="376.5" y="323.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="379.5" y="334.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.30%)</title><rect x="376.5" y="307.0" width="3.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="379.5" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=18634] (289 samples, 6.11%)</title><rect x="380.0" y="467.0" width="72.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="383.0" y="478.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (289 samples, 6.11%)</title><rect x="380.0" y="451.0" width="72.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="383.0" y="462.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (29 samples, 0.61%)</title><rect x="380.0" y="435.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="383.0" y="446.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (29 samples, 0.61%)</title><rect x="380.0" y="419.0" width="7.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="383.0" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (260 samples, 5.50%)</title><rect x="387.2" y="435.0" width="64.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.2" y="446.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (260 samples, 5.50%)</title><rect x="387.2" y="419.0" width="64.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.2" y="430.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (260 samples, 5.50%)</title><rect x="387.2" y="403.0" width="64.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.2" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (91 samples, 1.93%)</title><rect x="387.2" y="387.0" width="22.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="390.2" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (91 samples, 1.93%)</title><rect x="387.2" y="371.0" width="22.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="390.2" y="382.0">o..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (69 samples, 1.46%)</title><rect x="387.2" y="355.0" width="17.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="390.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (29 samples, 0.61%)</title><rect x="387.2" y="339.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (29 samples, 0.61%)</title><rect x="387.2" y="323.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (29 samples, 0.61%)</title><rect x="387.2" y="307.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.61%)</title><rect x="387.2" y="291.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.2" y="302.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.36%)</title><rect x="387.2" y="275.0" width="4.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="390.2" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.25%)</title><rect x="391.4" y="275.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.4" y="286.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.25%)</title><rect x="391.4" y="259.0" width="3.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="394.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (40 samples, 0.85%)</title><rect x="394.4" y="339.0" width="10.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.06%)</title><rect x="394.4" y="323.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="397.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.06%)</title><rect x="394.4" y="307.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="397.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.06%)</title><rect x="394.4" y="291.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="397.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.06%)</title><rect x="394.4" y="275.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="397.4" y="286.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="394.4" y="259.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="397.4" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.51%)</title><rect x="395.2" y="323.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="398.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.51%)</title><rect x="395.2" y="307.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="398.2" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.51%)</title><rect x="395.2" y="291.0" width="6.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="398.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (13 samples, 0.28%)</title><rect x="401.2" y="323.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="404.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.25%)</title><rect x="401.2" y="307.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="404.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.25%)</title><rect x="401.2" y="291.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="404.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.get$Lambda (12 samples, 0.25%)</title><rect x="401.2" y="275.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="404.2" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$74 (12 samples, 0.25%)</title><rect x="401.2" y="259.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="404.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (22 samples, 0.47%)</title><rect x="404.4" y="355.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.47%)</title><rect x="404.4" y="339.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.47%)</title><rect x="404.4" y="323.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="407.4" y="334.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.21%)</title><rect x="404.4" y="307.0" width="2.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="407.4" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.25%)</title><rect x="406.9" y="307.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="409.9" y="318.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.25%)</title><rect x="406.9" y="291.0" width="3.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="409.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (122 samples, 2.58%)</title><rect x="409.9" y="387.0" width="30.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="412.9" y="398.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (24 samples, 0.51%)</title><rect x="409.9" y="371.0" width="6.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="412.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (45 samples, 0.95%)</title><rect x="415.9" y="371.0" width="11.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.9" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (45 samples, 0.95%)</title><rect x="415.9" y="355.0" width="11.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="418.9" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (53 samples, 1.12%)</title><rect x="427.1" y="371.0" width="13.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (53 samples, 1.12%)</title><rect x="427.1" y="355.0" width="13.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="430.1" y="366.0"></text>
</g>
<g>
<title>char[] (23 samples, 0.49%)</title><rect x="427.1" y="339.0" width="5.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="430.1" y="350.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.25%)</title><rect x="432.9" y="339.0" width="3.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="435.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 0.38%)</title><rect x="435.9" y="339.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="438.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 0.38%)</title><rect x="435.9" y="323.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="438.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (18 samples, 0.38%)</title><rect x="435.9" y="307.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="438.9" y="318.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.38%)</title><rect x="435.9" y="291.0" width="4.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="438.9" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (47 samples, 0.99%)</title><rect x="440.4" y="387.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="443.4" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (47 samples, 0.99%)</title><rect x="440.4" y="371.0" width="11.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="443.4" y="382.0"></text>
</g>
<g>
<title>char[] (17 samples, 0.36%)</title><rect x="440.4" y="355.0" width="4.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="443.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.21%)</title><rect x="444.6" y="355.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="447.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.42%)</title><rect x="447.1" y="355.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="450.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.42%)</title><rect x="447.1" y="339.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="450.1" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (20 samples, 0.42%)</title><rect x="447.1" y="323.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="450.1" y="334.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.42%)</title><rect x="447.1" y="307.0" width="5.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="450.1" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=18635] (290 samples, 6.13%)</title><rect x="452.1" y="467.0" width="72.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="455.1" y="478.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (290 samples, 6.13%)</title><rect x="452.1" y="451.0" width="72.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="455.1" y="462.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (15 samples, 0.32%)</title><rect x="452.1" y="435.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="455.1" y="446.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (15 samples, 0.32%)</title><rect x="452.1" y="419.0" width="3.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="455.1" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (275 samples, 5.82%)</title><rect x="455.8" y="435.0" width="68.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="458.8" y="446.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (275 samples, 5.82%)</title><rect x="455.8" y="419.0" width="68.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="458.8" y="430.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (275 samples, 5.82%)</title><rect x="455.8" y="403.0" width="68.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="458.8" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (104 samples, 2.20%)</title><rect x="455.8" y="387.0" width="26.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="458.8" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (104 samples, 2.20%)</title><rect x="455.8" y="371.0" width="26.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="458.8" y="382.0">o..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (72 samples, 1.52%)</title><rect x="455.8" y="355.0" width="18.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="458.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (24 samples, 0.51%)</title><rect x="455.8" y="339.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="458.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (24 samples, 0.51%)</title><rect x="455.8" y="323.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="458.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (24 samples, 0.51%)</title><rect x="455.8" y="307.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="458.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.51%)</title><rect x="455.8" y="291.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="458.8" y="302.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.34%)</title><rect x="455.8" y="275.0" width="4.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="458.8" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.17%)</title><rect x="459.8" y="275.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="462.8" y="286.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.17%)</title><rect x="459.8" y="259.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="462.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (48 samples, 1.02%)</title><rect x="461.8" y="339.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="464.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (19 samples, 0.40%)</title><rect x="461.8" y="323.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="464.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (19 samples, 0.40%)</title><rect x="461.8" y="307.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="464.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (19 samples, 0.40%)</title><rect x="461.8" y="291.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="464.8" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.40%)</title><rect x="461.8" y="275.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="464.8" y="286.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.40%)</title><rect x="461.8" y="259.0" width="4.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="464.8" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.51%)</title><rect x="466.6" y="323.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="469.6" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.51%)</title><rect x="466.6" y="307.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="469.6" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.51%)</title><rect x="466.6" y="291.0" width="6.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="469.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (5 samples, 0.11%)</title><rect x="472.6" y="323.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="475.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.11%)</title><rect x="472.6" y="307.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="475.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.11%)</title><rect x="472.6" y="291.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="475.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.get$Lambda (5 samples, 0.11%)</title><rect x="472.6" y="275.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="475.6" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$74 (5 samples, 0.11%)</title><rect x="472.6" y="259.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="475.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (32 samples, 0.68%)</title><rect x="473.8" y="355.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="476.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (32 samples, 0.68%)</title><rect x="473.8" y="339.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="476.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.68%)</title><rect x="473.8" y="323.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.8" y="334.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.49%)</title><rect x="473.8" y="307.0" width="5.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="476.8" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.19%)</title><rect x="479.6" y="307.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.6" y="318.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.19%)</title><rect x="479.6" y="291.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="482.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (130 samples, 2.75%)</title><rect x="481.8" y="387.0" width="32.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.8" y="398.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (17 samples, 0.36%)</title><rect x="481.8" y="371.0" width="4.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="484.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (63 samples, 1.33%)</title><rect x="486.0" y="371.0" width="15.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="489.0" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (63 samples, 1.33%)</title><rect x="486.0" y="355.0" width="15.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="489.0" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (50 samples, 1.06%)</title><rect x="501.8" y="371.0" width="12.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="504.8" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (50 samples, 1.06%)</title><rect x="501.8" y="355.0" width="12.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="504.8" y="366.0"></text>
</g>
<g>
<title>char[] (28 samples, 0.59%)</title><rect x="501.8" y="339.0" width="7.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="504.8" y="350.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.25%)</title><rect x="508.8" y="339.0" width="3.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="511.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.21%)</title><rect x="511.8" y="339.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.21%)</title><rect x="511.8" y="323.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="514.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10 samples, 0.21%)</title><rect x="511.8" y="307.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="514.8" y="318.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.21%)</title><rect x="511.8" y="291.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="514.8" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (41 samples, 0.87%)</title><rect x="514.3" y="387.0" width="10.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="517.3" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (41 samples, 0.87%)</title><rect x="514.3" y="371.0" width="10.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="517.3" y="382.0"></text>
</g>
<g>
<title>char[] (18 samples, 0.38%)</title><rect x="514.3" y="355.0" width="4.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="517.3" y="366.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.28%)</title><rect x="518.7" y="355.0" width="3.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="521.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.21%)</title><rect x="522.0" y="355.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="525.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.21%)</title><rect x="522.0" y="339.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10 samples, 0.21%)</title><rect x="522.0" y="323.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="525.0" y="334.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.21%)</title><rect x="522.0" y="307.0" width="2.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="525.0" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=18636] (296 samples, 6.26%)</title><rect x="524.5" y="467.0" width="73.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="527.5" y="478.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (296 samples, 6.26%)</title><rect x="524.5" y="451.0" width="73.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="527.5" y="462.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (27 samples, 0.57%)</title><rect x="524.5" y="435.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.5" y="446.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (27 samples, 0.57%)</title><rect x="524.5" y="419.0" width="6.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="527.5" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (269 samples, 5.69%)</title><rect x="531.2" y="435.0" width="67.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.2" y="446.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (269 samples, 5.69%)</title><rect x="531.2" y="419.0" width="67.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="534.2" y="430.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (269 samples, 5.69%)</title><rect x="531.2" y="403.0" width="67.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.2" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (92 samples, 1.95%)</title><rect x="531.2" y="387.0" width="23.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="534.2" y="398.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (92 samples, 1.95%)</title><rect x="531.2" y="371.0" width="23.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="534.2" y="382.0">o..</text>
</g>
<g>
<title>RequestHandler1_response.handleRequest (71 samples, 1.50%)</title><rect x="531.2" y="355.0" width="17.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="534.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (22 samples, 0.47%)</title><rect x="531.2" y="339.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="534.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (22 samples, 0.47%)</title><rect x="531.2" y="323.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="534.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.47%)</title><rect x="531.2" y="307.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.47%)</title><rect x="531.2" y="291.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="534.2" y="302.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.30%)</title><rect x="531.2" y="275.0" width="3.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="534.2" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.17%)</title><rect x="534.7" y="275.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="537.7" y="286.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.17%)</title><rect x="534.7" y="259.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="537.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (49 samples, 1.04%)</title><rect x="536.7" y="339.0" width="12.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="539.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (17 samples, 0.36%)</title><rect x="536.7" y="323.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="539.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (17 samples, 0.36%)</title><rect x="536.7" y="307.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="539.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (17 samples, 0.36%)</title><rect x="536.7" y="291.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="539.7" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.36%)</title><rect x="536.7" y="275.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="539.7" y="286.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.36%)</title><rect x="536.7" y="259.0" width="4.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="539.7" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (22 samples, 0.47%)</title><rect x="541.0" y="323.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="544.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (22 samples, 0.47%)</title><rect x="541.0" y="307.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="544.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.47%)</title><rect x="541.0" y="291.0" width="5.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="544.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (10 samples, 0.21%)</title><rect x="546.5" y="323.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="549.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.21%)</title><rect x="546.5" y="307.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="549.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.21%)</title><rect x="546.5" y="291.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="549.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.get$Lambda (10 samples, 0.21%)</title><rect x="546.5" y="275.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="549.5" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$74 (10 samples, 0.21%)</title><rect x="546.5" y="259.0" width="2.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="549.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (21 samples, 0.44%)</title><rect x="549.0" y="355.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.44%)</title><rect x="549.0" y="339.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.44%)</title><rect x="549.0" y="323.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.0" y="334.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.13%)</title><rect x="549.0" y="307.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="552.0" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.32%)</title><rect x="550.4" y="307.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.4" y="318.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.32%)</title><rect x="550.4" y="291.0" width="3.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="553.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (121 samples, 2.56%)</title><rect x="554.2" y="387.0" width="30.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.2" y="398.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (24 samples, 0.51%)</title><rect x="554.2" y="371.0" width="6.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="557.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (41 samples, 0.87%)</title><rect x="560.2" y="371.0" width="10.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="563.2" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (41 samples, 0.87%)</title><rect x="560.2" y="355.0" width="10.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="563.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (56 samples, 1.18%)</title><rect x="570.4" y="371.0" width="14.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="573.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (56 samples, 1.18%)</title><rect x="570.4" y="355.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.4" y="366.0"></text>
</g>
<g>
<title>char[] (32 samples, 0.68%)</title><rect x="570.4" y="339.0" width="8.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="573.4" y="350.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.23%)</title><rect x="578.4" y="339.0" width="2.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="581.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.28%)</title><rect x="581.2" y="339.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="584.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.28%)</title><rect x="581.2" y="323.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="584.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (13 samples, 0.28%)</title><rect x="581.2" y="307.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="584.2" y="318.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.28%)</title><rect x="581.2" y="291.0" width="3.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="584.2" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (56 samples, 1.18%)</title><rect x="584.4" y="387.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="587.4" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (56 samples, 1.18%)</title><rect x="584.4" y="371.0" width="14.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.4" y="382.0"></text>
</g>
<g>
<title>char[] (25 samples, 0.53%)</title><rect x="584.4" y="355.0" width="6.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="587.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.36%)</title><rect x="590.6" y="355.0" width="4.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="593.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.30%)</title><rect x="594.9" y="355.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="597.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.30%)</title><rect x="594.9" y="339.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="597.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (14 samples, 0.30%)</title><rect x="594.9" y="323.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.9" y="334.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.30%)</title><rect x="594.9" y="307.0" width="3.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="597.9" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-1 tid=18655] (305 samples, 6.45%)</title><rect x="598.4" y="467.0" width="76.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="601.4" y="478.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (305 samples, 6.45%)</title><rect x="598.4" y="451.0" width="76.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.4" y="462.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (305 samples, 6.45%)</title><rect x="598.4" y="435.0" width="76.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="601.4" y="446.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (305 samples, 6.45%)</title><rect x="598.4" y="419.0" width="76.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="601.4" y="430.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.run (304 samples, 6.43%)</title><rect x="598.6" y="403.0" width="75.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="601.6" y="414.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (304 samples, 6.43%)</title><rect x="598.6" y="387.0" width="75.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="601.6" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (304 samples, 6.43%)</title><rect x="598.6" y="371.0" width="75.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="601.6" y="382.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (303 samples, 6.41%)</title><rect x="598.9" y="355.0" width="75.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="601.9" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (16 samples, 0.34%)</title><rect x="598.9" y="339.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (16 samples, 0.34%)</title><rect x="598.9" y="323.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="601.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (16 samples, 0.34%)</title><rect x="598.9" y="307.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="601.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (16 samples, 0.34%)</title><rect x="598.9" y="291.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="601.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (16 samples, 0.34%)</title><rect x="598.9" y="275.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="601.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.28%)</title><rect x="598.9" y="259.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.9" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.06%)</title><rect x="598.9" y="243.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.06%)</title><rect x="598.9" y="227.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.06%)</title><rect x="598.9" y="211.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="598.9" y="195.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="601.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="598.9" y="179.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="598.9" y="163.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="598.9" y="147.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="598.9" y="131.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="601.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="598.9" y="115.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="601.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (3 samples, 0.06%)</title><rect x="598.9" y="99.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="601.9" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (10 samples, 0.21%)</title><rect x="599.6" y="243.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="602.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (10 samples, 0.21%)</title><rect x="599.6" y="227.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (10 samples, 0.21%)</title><rect x="599.6" y="211.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (10 samples, 0.21%)</title><rect x="599.6" y="195.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.21%)</title><rect x="599.6" y="179.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="602.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.21%)</title><rect x="599.6" y="163.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (7 samples, 0.15%)</title><rect x="599.6" y="147.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.15%)</title><rect x="599.6" y="131.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="602.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.15%)</title><rect x="599.6" y="115.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="602.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (7 samples, 0.15%)</title><rect x="599.6" y="99.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="602.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="599.6" y="83.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="599.6" y="67.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="602.6" y="78.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="599.6" y="51.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="602.6" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.08%)</title><rect x="600.1" y="83.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="603.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.08%)</title><rect x="600.1" y="67.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="603.1" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="601.4" y="147.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="604.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="601.4" y="131.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="604.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="601.4" y="115.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="604.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="601.4" y="99.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (3 samples, 0.06%)</title><rect x="601.4" y="83.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="604.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="601.6" y="67.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="601.6" y="51.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="604.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$84/1163658272.apply (3 samples, 0.06%)</title><rect x="602.1" y="259.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="605.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (3 samples, 0.06%)</title><rect x="602.1" y="243.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="602.4" y="227.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.4" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="602.4" y="211.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="605.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (285 samples, 6.03%)</title><rect x="603.4" y="339.0" width="71.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.4" y="350.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (284 samples, 6.01%)</title><rect x="603.6" y="323.0" width="70.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.6" y="334.0">ru/mail/..</text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.08%)</title><rect x="603.6" y="307.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="606.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (277 samples, 5.86%)</title><rect x="604.9" y="307.0" width="69.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.9" y="318.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (41 samples, 0.87%)</title><rect x="604.9" y="291.0" width="10.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="607.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (41 samples, 0.87%)</title><rect x="604.9" y="275.0" width="10.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.9" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (41 samples, 0.87%)</title><rect x="604.9" y="259.0" width="10.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (41 samples, 0.87%)</title><rect x="604.9" y="243.0" width="10.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (41 samples, 0.87%)</title><rect x="604.9" y="227.0" width="10.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (41 samples, 0.87%)</title><rect x="604.9" y="211.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (41 samples, 0.87%)</title><rect x="604.9" y="195.0" width="10.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="607.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (41 samples, 0.87%)</title><rect x="604.9" y="179.0" width="10.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (32 samples, 0.68%)</title><rect x="604.9" y="163.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (31 samples, 0.66%)</title><rect x="605.1" y="147.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="608.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (31 samples, 0.66%)</title><rect x="605.1" y="131.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="608.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (31 samples, 0.66%)</title><rect x="605.1" y="115.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="608.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="605.1" y="99.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="608.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="605.1" y="83.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.1" y="94.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="605.1" y="67.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="608.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (15 samples, 0.32%)</title><rect x="605.6" y="99.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="608.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.32%)</title><rect x="605.6" y="83.0" width="3.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="608.6" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (2 samples, 0.04%)</title><rect x="609.4" y="99.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="612.4" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (2 samples, 0.04%)</title><rect x="609.9" y="99.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="612.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (10 samples, 0.21%)</title><rect x="610.4" y="99.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="613.4" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.06%)</title><rect x="610.4" y="83.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="610.4" y="67.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.4" y="78.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="610.4" y="51.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="613.4" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.15%)</title><rect x="611.1" y="83.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="614.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.15%)</title><rect x="611.1" y="67.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="614.1" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.19%)</title><rect x="612.9" y="163.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="615.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.19%)</title><rect x="612.9" y="147.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="615.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (9 samples, 0.19%)</title><rect x="612.9" y="131.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="615.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (9 samples, 0.19%)</title><rect x="612.9" y="115.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="615.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (9 samples, 0.19%)</title><rect x="612.9" y="99.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="615.9" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.06%)</title><rect x="612.9" y="83.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="615.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.06%)</title><rect x="612.9" y="67.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="615.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.08%)</title><rect x="613.6" y="83.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="616.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.08%)</title><rect x="613.6" y="67.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="616.6" y="78.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (225 samples, 4.76%)</title><rect x="615.1" y="291.0" width="56.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.1" y="302.0">java/u..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (225 samples, 4.76%)</title><rect x="615.1" y="275.0" width="56.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="618.1" y="286.0">java/l..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$83/1445426015.accept (224 samples, 4.74%)</title><rect x="615.4" y="259.0" width="55.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="618.4" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (224 samples, 4.74%)</title><rect x="615.4" y="243.0" width="55.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.4" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (224 samples, 4.74%)</title><rect x="615.4" y="227.0" width="55.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="618.4" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (3 samples, 0.06%)</title><rect x="615.4" y="211.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="618.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (221 samples, 4.68%)</title><rect x="616.1" y="211.0" width="55.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="619.1" y="222.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (221 samples, 4.68%)</title><rect x="616.1" y="195.0" width="55.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="619.1" y="206.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (221 samples, 4.68%)</title><rect x="616.1" y="179.0" width="55.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="619.1" y="190.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (41 samples, 0.87%)</title><rect x="616.1" y="163.0" width="10.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="619.1" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (41 samples, 0.87%)</title><rect x="616.1" y="147.0" width="10.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="619.1" y="158.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.87%)</title><rect x="616.1" y="131.0" width="10.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="619.1" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (126 samples, 2.67%)</title><rect x="626.3" y="163.0" width="31.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.3" y="174.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (126 samples, 2.67%)</title><rect x="626.3" y="147.0" width="31.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="629.3" y="158.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (54 samples, 1.14%)</title><rect x="657.8" y="163.0" width="13.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.8" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (13 samples, 0.28%)</title><rect x="657.8" y="147.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="660.8" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.28%)</title><rect x="657.8" y="131.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="660.8" y="142.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.28%)</title><rect x="657.8" y="115.0" width="3.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="660.8" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (41 samples, 0.87%)</title><rect x="661.0" y="147.0" width="10.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="664.0" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (41 samples, 0.87%)</title><rect x="661.0" y="131.0" width="10.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="664.0" y="142.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (3 samples, 0.06%)</title><rect x="671.3" y="291.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="674.3" y="302.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (3 samples, 0.06%)</title><rect x="671.3" y="275.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.3" y="286.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableNavigableMap (3 samples, 0.06%)</title><rect x="671.3" y="259.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="674.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (8 samples, 0.17%)</title><rect x="672.0" y="291.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="675.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (8 samples, 0.17%)</title><rect x="672.0" y="275.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="675.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.17%)</title><rect x="672.0" y="259.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="675.0" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.04%)</title><rect x="672.0" y="243.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="675.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.04%)</title><rect x="672.0" y="227.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="675.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2 samples, 0.04%)</title><rect x="672.0" y="211.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.04%)</title><rect x="672.0" y="195.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="675.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.04%)</title><rect x="672.0" y="179.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="675.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="672.0" y="163.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="675.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="672.0" y="147.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="675.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="672.0" y="131.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="675.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="672.0" y="115.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="675.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.04%)</title><rect x="672.0" y="99.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="675.0" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6 samples, 0.13%)</title><rect x="672.5" y="243.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="675.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6 samples, 0.13%)</title><rect x="672.5" y="227.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="675.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6 samples, 0.13%)</title><rect x="672.5" y="211.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="675.5" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6 samples, 0.13%)</title><rect x="672.5" y="195.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="675.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.13%)</title><rect x="672.5" y="179.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="675.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.13%)</title><rect x="672.5" y="163.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="675.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.06%)</title><rect x="672.5" y="147.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="675.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.06%)</title><rect x="672.5" y="131.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="675.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (3 samples, 0.06%)</title><rect x="672.5" y="115.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="675.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (3 samples, 0.06%)</title><rect x="672.5" y="99.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="675.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="672.8" y="83.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="675.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="672.8" y="67.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="675.8" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="673.3" y="147.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="676.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="673.3" y="131.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="676.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="673.3" y="115.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="673.3" y="99.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="676.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (3 samples, 0.06%)</title><rect x="673.3" y="83.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="676.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="673.5" y="67.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="676.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="673.5" y="51.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="676.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (2 samples, 0.04%)</title><rect x="674.0" y="307.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="677.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="674.0" y="291.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="674.0" y="275.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="674.0" y="259.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="677.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (2 samples, 0.04%)</title><rect x="674.0" y="243.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="677.0" y="254.0"></text>
</g>
<g>
<title>[pool-3-thread-2 tid=18659] (302 samples, 6.39%)</title><rect x="674.5" y="467.0" width="75.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="677.5" y="478.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (302 samples, 6.39%)</title><rect x="674.5" y="451.0" width="75.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.5" y="462.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (302 samples, 6.39%)</title><rect x="674.5" y="435.0" width="75.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="677.5" y="446.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (302 samples, 6.39%)</title><rect x="674.5" y="419.0" width="75.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="677.5" y="430.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.run (302 samples, 6.39%)</title><rect x="674.5" y="403.0" width="75.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="677.5" y="414.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (302 samples, 6.39%)</title><rect x="674.5" y="387.0" width="75.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="677.5" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (302 samples, 6.39%)</title><rect x="674.5" y="371.0" width="75.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="677.5" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/Response.ok (3 samples, 0.06%)</title><rect x="674.8" y="355.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="675.0" y="339.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="678.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (297 samples, 6.28%)</title><rect x="675.5" y="355.0" width="74.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="678.5" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (18 samples, 0.38%)</title><rect x="675.5" y="339.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="678.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (18 samples, 0.38%)</title><rect x="675.5" y="323.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="678.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (18 samples, 0.38%)</title><rect x="675.5" y="307.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="678.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (18 samples, 0.38%)</title><rect x="675.5" y="291.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="678.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (18 samples, 0.38%)</title><rect x="675.5" y="275.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="678.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (17 samples, 0.36%)</title><rect x="675.5" y="259.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="678.5" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.06%)</title><rect x="675.5" y="243.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="678.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.06%)</title><rect x="675.5" y="227.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="678.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.06%)</title><rect x="675.5" y="211.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="678.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="675.5" y="195.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="678.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="675.5" y="179.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="678.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="675.5" y="163.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="678.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="675.5" y="147.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="675.5" y="131.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="675.5" y="115.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="678.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (3 samples, 0.06%)</title><rect x="675.5" y="99.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="678.5" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (14 samples, 0.30%)</title><rect x="676.3" y="243.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="679.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (14 samples, 0.30%)</title><rect x="676.3" y="227.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="679.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (14 samples, 0.30%)</title><rect x="676.3" y="211.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="679.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (14 samples, 0.30%)</title><rect x="676.3" y="195.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.30%)</title><rect x="676.3" y="179.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="679.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.30%)</title><rect x="676.3" y="163.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="679.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (11 samples, 0.23%)</title><rect x="676.3" y="147.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="679.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.23%)</title><rect x="676.3" y="131.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="679.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.23%)</title><rect x="676.3" y="115.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="679.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (11 samples, 0.23%)</title><rect x="676.3" y="99.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.3" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.08%)</title><rect x="676.3" y="83.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="679.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.08%)</title><rect x="676.3" y="67.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="679.3" y="78.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.08%)</title><rect x="676.3" y="51.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="679.3" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.06%)</title><rect x="677.3" y="83.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.06%)</title><rect x="677.3" y="67.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="680.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.08%)</title><rect x="678.0" y="83.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="681.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.08%)</title><rect x="678.0" y="67.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.08%)</title><rect x="678.0" y="51.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="681.0" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="679.0" y="147.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="682.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="679.0" y="131.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="679.0" y="115.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="682.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="679.0" y="99.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="682.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (3 samples, 0.06%)</title><rect x="679.0" y="83.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="682.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="679.0" y="67.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="682.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="679.0" y="51.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="682.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (276 samples, 5.84%)</title><rect x="680.8" y="339.0" width="68.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="683.8" y="350.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (275 samples, 5.82%)</title><rect x="681.0" y="323.0" width="68.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="684.0" y="334.0">ru/mail..</text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.08%)</title><rect x="681.3" y="307.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="684.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (268 samples, 5.67%)</title><rect x="682.5" y="307.0" width="66.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="685.5" y="318.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (35 samples, 0.74%)</title><rect x="682.5" y="291.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (35 samples, 0.74%)</title><rect x="682.5" y="275.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="685.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.04%)</title><rect x="682.5" y="259.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.5" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.04%)</title><rect x="682.5" y="243.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="685.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (32 samples, 0.68%)</title><rect x="683.3" y="259.0" width="7.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="686.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (32 samples, 0.68%)</title><rect x="683.3" y="243.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="686.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (31 samples, 0.66%)</title><rect x="683.5" y="227.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (31 samples, 0.66%)</title><rect x="683.5" y="211.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="686.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (31 samples, 0.66%)</title><rect x="683.5" y="195.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (31 samples, 0.66%)</title><rect x="683.5" y="179.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="686.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (29 samples, 0.61%)</title><rect x="683.5" y="163.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (28 samples, 0.59%)</title><rect x="683.8" y="147.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (28 samples, 0.59%)</title><rect x="683.8" y="131.0" width="6.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="686.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (28 samples, 0.59%)</title><rect x="683.8" y="115.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="686.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.13%)</title><rect x="683.8" y="99.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.13%)</title><rect x="683.8" y="83.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.8" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.13%)</title><rect x="683.8" y="67.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="686.8" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.30%)</title><rect x="685.2" y="99.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="688.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.30%)</title><rect x="685.2" y="83.0" width="3.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="688.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (7 samples, 0.15%)</title><rect x="689.0" y="99.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="692.0" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="689.0" y="83.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="692.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="689.0" y="67.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="692.0" y="78.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="689.0" y="51.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="692.0" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.11%)</title><rect x="689.5" y="83.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="692.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.11%)</title><rect x="689.5" y="67.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="692.5" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="690.7" y="163.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="690.7" y="147.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="693.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="690.7" y="131.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="693.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="690.7" y="115.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.04%)</title><rect x="690.7" y="99.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="693.7" y="110.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (220 samples, 4.65%)</title><rect x="691.2" y="291.0" width="55.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="694.2" y="302.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (220 samples, 4.65%)</title><rect x="691.2" y="275.0" width="55.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.2" y="286.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$83/1445426015.accept (219 samples, 4.63%)</title><rect x="691.5" y="259.0" width="54.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="694.5" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (219 samples, 4.63%)</title><rect x="691.5" y="243.0" width="54.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.5" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (219 samples, 4.63%)</title><rect x="691.5" y="227.0" width="54.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.5" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (2 samples, 0.04%)</title><rect x="691.5" y="211.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="694.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (217 samples, 4.59%)</title><rect x="692.0" y="211.0" width="54.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.0" y="222.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (217 samples, 4.59%)</title><rect x="692.0" y="195.0" width="54.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.0" y="206.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (217 samples, 4.59%)</title><rect x="692.0" y="179.0" width="54.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.0" y="190.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (41 samples, 0.87%)</title><rect x="692.0" y="163.0" width="10.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="695.0" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (41 samples, 0.87%)</title><rect x="692.0" y="147.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.0" y="158.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.87%)</title><rect x="692.0" y="131.0" width="10.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="695.0" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (105 samples, 2.22%)</title><rect x="702.2" y="163.0" width="26.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="705.2" y="174.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (105 samples, 2.22%)</title><rect x="702.2" y="147.0" width="26.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="705.2" y="158.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (71 samples, 1.50%)</title><rect x="728.4" y="163.0" width="17.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="731.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (14 samples, 0.30%)</title><rect x="728.4" y="147.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="731.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.30%)</title><rect x="728.4" y="131.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="731.4" y="142.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.30%)</title><rect x="728.4" y="115.0" width="3.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="731.4" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (57 samples, 1.21%)</title><rect x="731.9" y="147.0" width="14.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="734.9" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (57 samples, 1.21%)</title><rect x="731.9" y="131.0" width="14.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="734.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (13 samples, 0.28%)</title><rect x="746.2" y="291.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="749.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (13 samples, 0.28%)</title><rect x="746.2" y="275.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="749.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.28%)</title><rect x="746.2" y="259.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="749.2" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (12 samples, 0.25%)</title><rect x="746.4" y="243.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="749.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (12 samples, 0.25%)</title><rect x="746.4" y="227.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="749.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (12 samples, 0.25%)</title><rect x="746.4" y="211.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="749.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (12 samples, 0.25%)</title><rect x="746.4" y="195.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="749.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.25%)</title><rect x="746.4" y="179.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="749.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.25%)</title><rect x="746.4" y="163.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="749.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (10 samples, 0.21%)</title><rect x="746.4" y="147.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="749.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (10 samples, 0.21%)</title><rect x="746.4" y="131.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="749.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (10 samples, 0.21%)</title><rect x="746.4" y="115.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="749.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (10 samples, 0.21%)</title><rect x="746.4" y="99.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="749.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.13%)</title><rect x="746.4" y="83.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="749.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.13%)</title><rect x="746.4" y="67.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="749.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.08%)</title><rect x="747.9" y="83.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="750.9" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.08%)</title><rect x="747.9" y="67.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="750.9" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.08%)</title><rect x="747.9" y="51.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="750.9" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="748.9" y="147.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="751.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="748.9" y="131.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="751.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="748.9" y="115.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="751.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="748.9" y="99.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="751.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.04%)</title><rect x="748.9" y="83.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="751.9" y="94.0"></text>
</g>
<g>
<title>[pool-3-thread-3 tid=18653] (301 samples, 6.37%)</title><rect x="749.9" y="467.0" width="75.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="752.9" y="478.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (301 samples, 6.37%)</title><rect x="749.9" y="451.0" width="75.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="752.9" y="462.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (301 samples, 6.37%)</title><rect x="749.9" y="435.0" width="75.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.9" y="446.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (301 samples, 6.37%)</title><rect x="749.9" y="419.0" width="75.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="752.9" y="430.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.run (300 samples, 6.35%)</title><rect x="750.2" y="403.0" width="74.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="753.2" y="414.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (300 samples, 6.35%)</title><rect x="750.2" y="387.0" width="74.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="753.2" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (300 samples, 6.35%)</title><rect x="750.2" y="371.0" width="74.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="753.2" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.06%)</title><rect x="750.2" y="355.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="753.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.06%)</title><rect x="750.2" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.04%)</title><rect x="750.2" y="323.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="753.2" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.04%)</title><rect x="750.2" y="307.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="753.2" y="318.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="750.2" y="291.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="753.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (297 samples, 6.28%)</title><rect x="750.9" y="355.0" width="74.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="753.9" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (15 samples, 0.32%)</title><rect x="750.9" y="339.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="753.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (15 samples, 0.32%)</title><rect x="750.9" y="323.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="753.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (15 samples, 0.32%)</title><rect x="750.9" y="307.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="753.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (15 samples, 0.32%)</title><rect x="750.9" y="291.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (15 samples, 0.32%)</title><rect x="750.9" y="275.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.28%)</title><rect x="750.9" y="259.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="753.9" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.04%)</title><rect x="750.9" y="243.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.04%)</title><rect x="750.9" y="227.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="753.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2 samples, 0.04%)</title><rect x="750.9" y="211.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="753.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.04%)</title><rect x="750.9" y="195.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.04%)</title><rect x="750.9" y="179.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="750.9" y="163.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="753.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="750.9" y="147.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="750.9" y="131.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="753.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="750.9" y="115.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.04%)</title><rect x="750.9" y="99.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="753.9" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (11 samples, 0.23%)</title><rect x="751.4" y="243.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (11 samples, 0.23%)</title><rect x="751.4" y="227.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (11 samples, 0.23%)</title><rect x="751.4" y="211.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (11 samples, 0.23%)</title><rect x="751.4" y="195.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="754.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.23%)</title><rect x="751.4" y="179.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.23%)</title><rect x="751.4" y="163.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (7 samples, 0.15%)</title><rect x="751.4" y="147.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.15%)</title><rect x="751.4" y="131.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.15%)</title><rect x="751.4" y="115.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="754.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (7 samples, 0.15%)</title><rect x="751.4" y="99.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.06%)</title><rect x="751.7" y="83.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.06%)</title><rect x="751.7" y="67.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="754.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.04%)</title><rect x="752.6" y="83.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="755.6" y="94.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.08%)</title><rect x="753.1" y="147.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.08%)</title><rect x="753.1" y="131.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="756.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.08%)</title><rect x="753.1" y="115.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.08%)</title><rect x="753.1" y="99.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (4 samples, 0.08%)</title><rect x="753.1" y="83.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.08%)</title><rect x="753.1" y="67.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="756.1" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.08%)</title><rect x="753.1" y="51.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="756.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$84/1163658272.apply (2 samples, 0.04%)</title><rect x="754.1" y="259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.04%)</title><rect x="754.1" y="243.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (281 samples, 5.94%)</title><rect x="754.9" y="339.0" width="70.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="757.9" y="350.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (281 samples, 5.94%)</title><rect x="754.9" y="323.0" width="70.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="757.9" y="334.0">ru/mail/..</text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.08%)</title><rect x="754.9" y="307.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="757.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="755.9" y="307.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="758.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="755.9" y="291.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="758.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/727029087.get$Lambda (2 samples, 0.04%)</title><rect x="755.9" y="275.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="758.9" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$79 (2 samples, 0.04%)</title><rect x="755.9" y="259.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="758.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (271 samples, 5.73%)</title><rect x="756.9" y="307.0" width="67.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.9" y="318.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (37 samples, 0.78%)</title><rect x="756.9" y="291.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="759.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (37 samples, 0.78%)</title><rect x="756.9" y="275.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.9" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (36 samples, 0.76%)</title><rect x="757.1" y="259.0" width="9.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="760.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (36 samples, 0.76%)</title><rect x="757.1" y="243.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="760.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (36 samples, 0.76%)</title><rect x="757.1" y="227.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="760.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (36 samples, 0.76%)</title><rect x="757.1" y="211.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (36 samples, 0.76%)</title><rect x="757.1" y="195.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (36 samples, 0.76%)</title><rect x="757.1" y="179.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="760.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (32 samples, 0.68%)</title><rect x="757.1" y="163.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="760.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (31 samples, 0.66%)</title><rect x="757.4" y="147.0" width="7.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="760.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (31 samples, 0.66%)</title><rect x="757.4" y="131.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="760.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (31 samples, 0.66%)</title><rect x="757.4" y="115.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="760.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="757.4" y="99.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="760.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="757.4" y="83.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.4" y="94.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="757.4" y="67.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="760.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (22 samples, 0.47%)</title><rect x="757.9" y="99.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="760.9" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.47%)</title><rect x="757.9" y="83.0" width="5.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="760.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (5 samples, 0.11%)</title><rect x="763.9" y="99.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="766.9" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="763.9" y="83.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="766.9" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="763.9" y="67.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="766.9" y="78.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="763.9" y="51.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="766.9" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.06%)</title><rect x="764.4" y="83.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="767.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.06%)</title><rect x="764.4" y="67.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="767.4" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.08%)</title><rect x="765.1" y="163.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="768.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.08%)</title><rect x="765.1" y="147.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="768.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.08%)</title><rect x="765.1" y="131.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="768.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.08%)</title><rect x="765.1" y="115.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="768.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (4 samples, 0.08%)</title><rect x="765.1" y="99.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="768.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (3 samples, 0.06%)</title><rect x="765.4" y="83.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="768.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.06%)</title><rect x="765.4" y="67.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="768.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.06%)</title><rect x="765.4" y="51.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="768.4" y="62.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (222 samples, 4.70%)</title><rect x="766.1" y="291.0" width="55.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.1" y="302.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (222 samples, 4.70%)</title><rect x="766.1" y="275.0" width="55.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.1" y="286.0">java/..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.04%)</title><rect x="766.1" y="259.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="769.1" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (2 samples, 0.04%)</title><rect x="766.1" y="243.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.1" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (2 samples, 0.04%)</title><rect x="766.1" y="227.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="769.1" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (2 samples, 0.04%)</title><rect x="766.1" y="211.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="769.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$83/1445426015.accept (220 samples, 4.65%)</title><rect x="766.6" y="259.0" width="54.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="769.6" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (220 samples, 4.65%)</title><rect x="766.6" y="243.0" width="54.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="769.6" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (220 samples, 4.65%)</title><rect x="766.6" y="227.0" width="54.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="769.6" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (219 samples, 4.63%)</title><rect x="766.9" y="211.0" width="54.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.9" y="222.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (219 samples, 4.63%)</title><rect x="766.9" y="195.0" width="54.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="769.9" y="206.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (219 samples, 4.63%)</title><rect x="766.9" y="179.0" width="54.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="769.9" y="190.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (29 samples, 0.61%)</title><rect x="766.9" y="163.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="769.9" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (29 samples, 0.61%)</title><rect x="766.9" y="147.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="769.9" y="158.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.61%)</title><rect x="766.9" y="131.0" width="7.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="769.9" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (117 samples, 2.48%)</title><rect x="774.1" y="163.0" width="29.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="777.1" y="174.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (117 samples, 2.48%)</title><rect x="774.1" y="147.0" width="29.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="777.1" y="158.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (73 samples, 1.54%)</title><rect x="803.3" y="163.0" width="18.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="806.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (20 samples, 0.42%)</title><rect x="803.3" y="147.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="806.3" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (20 samples, 0.42%)</title><rect x="803.3" y="131.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="806.3" y="142.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.42%)</title><rect x="803.3" y="115.0" width="5.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="806.3" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (53 samples, 1.12%)</title><rect x="808.3" y="147.0" width="13.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="811.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (53 samples, 1.12%)</title><rect x="808.3" y="131.0" width="13.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="811.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (11 samples, 0.23%)</title><rect x="821.8" y="291.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="824.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (11 samples, 0.23%)</title><rect x="821.8" y="275.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="824.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11 samples, 0.23%)</title><rect x="821.8" y="259.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.8" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (4 samples, 0.08%)</title><rect x="821.8" y="243.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="824.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (4 samples, 0.08%)</title><rect x="821.8" y="227.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (4 samples, 0.08%)</title><rect x="821.8" y="211.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.08%)</title><rect x="821.8" y="195.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="824.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.08%)</title><rect x="821.8" y="179.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.08%)</title><rect x="821.8" y="163.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="824.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.08%)</title><rect x="821.8" y="147.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="824.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.08%)</title><rect x="821.8" y="131.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="824.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.08%)</title><rect x="821.8" y="115.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="824.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (4 samples, 0.08%)</title><rect x="821.8" y="99.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="824.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.06%)</title><rect x="822.0" y="83.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="825.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.06%)</title><rect x="822.0" y="67.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="825.0" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7 samples, 0.15%)</title><rect x="822.8" y="243.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="825.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7 samples, 0.15%)</title><rect x="822.8" y="227.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7 samples, 0.15%)</title><rect x="822.8" y="211.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="825.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7 samples, 0.15%)</title><rect x="822.8" y="195.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="825.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.15%)</title><rect x="822.8" y="179.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="825.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.15%)</title><rect x="822.8" y="163.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="825.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5 samples, 0.11%)</title><rect x="822.8" y="147.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="825.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.11%)</title><rect x="822.8" y="131.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="825.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.11%)</title><rect x="822.8" y="115.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="825.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (5 samples, 0.11%)</title><rect x="822.8" y="99.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="825.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.06%)</title><rect x="823.0" y="83.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="826.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.06%)</title><rect x="823.0" y="67.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="826.0" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="824.0" y="147.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="827.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="824.0" y="131.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="827.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="824.0" y="115.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="827.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="824.0" y="99.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="827.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.04%)</title><rect x="824.0" y="83.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="827.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (2 samples, 0.04%)</title><rect x="824.5" y="307.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="827.5" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-4 tid=18654] (298 samples, 6.30%)</title><rect x="825.0" y="467.0" width="74.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="828.0" y="478.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (298 samples, 6.30%)</title><rect x="825.0" y="451.0" width="74.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.0" y="462.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (298 samples, 6.30%)</title><rect x="825.0" y="435.0" width="74.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.0" y="446.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (298 samples, 6.30%)</title><rect x="825.0" y="419.0" width="74.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="828.0" y="430.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.run (298 samples, 6.30%)</title><rect x="825.0" y="403.0" width="74.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="828.0" y="414.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (298 samples, 6.30%)</title><rect x="825.0" y="387.0" width="74.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="828.0" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (298 samples, 6.30%)</title><rect x="825.0" y="371.0" width="74.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="828.0" y="382.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (297 samples, 6.28%)</title><rect x="825.0" y="355.0" width="74.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="828.0" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (18 samples, 0.38%)</title><rect x="825.0" y="339.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="828.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (18 samples, 0.38%)</title><rect x="825.0" y="323.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="828.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (18 samples, 0.38%)</title><rect x="825.0" y="307.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (18 samples, 0.38%)</title><rect x="825.0" y="291.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (18 samples, 0.38%)</title><rect x="825.0" y="275.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="828.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.25%)</title><rect x="825.0" y="259.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="828.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (11 samples, 0.23%)</title><rect x="825.3" y="243.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (11 samples, 0.23%)</title><rect x="825.3" y="227.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (11 samples, 0.23%)</title><rect x="825.3" y="211.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (11 samples, 0.23%)</title><rect x="825.3" y="195.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.23%)</title><rect x="825.3" y="179.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.23%)</title><rect x="825.3" y="163.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="828.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (10 samples, 0.21%)</title><rect x="825.3" y="147.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="828.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (10 samples, 0.21%)</title><rect x="825.3" y="131.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="828.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (10 samples, 0.21%)</title><rect x="825.3" y="115.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="828.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (10 samples, 0.21%)</title><rect x="825.3" y="99.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.13%)</title><rect x="825.3" y="83.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.13%)</title><rect x="825.3" y="67.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="828.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.04%)</title><rect x="827.3" y="83.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="830.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="827.3" y="67.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.3" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="827.3" y="51.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="830.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$84/1163658272.apply (6 samples, 0.13%)</title><rect x="828.0" y="259.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="831.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (6 samples, 0.13%)</title><rect x="828.0" y="243.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.08%)</title><rect x="828.0" y="227.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="831.0" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.08%)</title><rect x="828.0" y="211.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="831.0" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="829.0" y="227.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="832.0" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="829.0" y="211.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="832.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.06%)</title><rect x="829.5" y="339.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="832.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.06%)</title><rect x="829.5" y="323.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="832.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$97/1524262454.apply (3 samples, 0.06%)</title><rect x="829.5" y="307.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="832.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (3 samples, 0.06%)</title><rect x="829.5" y="291.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="832.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (2 samples, 0.04%)</title><rect x="829.5" y="275.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="832.5" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (2 samples, 0.04%)</title><rect x="829.5" y="259.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="832.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (3 samples, 0.06%)</title><rect x="830.3" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="833.3" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.06%)</title><rect x="830.3" y="323.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="833.3" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.06%)</title><rect x="830.3" y="307.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="833.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (273 samples, 5.78%)</title><rect x="831.0" y="339.0" width="68.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.0" y="350.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (272 samples, 5.75%)</title><rect x="831.3" y="323.0" width="67.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="834.3" y="334.0">ru/mail..</text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.08%)</title><rect x="831.3" y="307.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="834.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (267 samples, 5.65%)</title><rect x="832.3" y="307.0" width="66.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="835.3" y="318.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (39 samples, 0.83%)</title><rect x="832.3" y="291.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (39 samples, 0.83%)</title><rect x="832.3" y="275.0" width="9.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (38 samples, 0.80%)</title><rect x="832.5" y="259.0" width="9.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="835.5" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (38 samples, 0.80%)</title><rect x="832.5" y="243.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (37 samples, 0.78%)</title><rect x="832.8" y="227.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (37 samples, 0.78%)</title><rect x="832.8" y="211.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="835.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (37 samples, 0.78%)</title><rect x="832.8" y="195.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (37 samples, 0.78%)</title><rect x="832.8" y="179.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="835.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (27 samples, 0.57%)</title><rect x="832.8" y="163.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (4 samples, 0.08%)</title><rect x="832.8" y="147.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.8" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.06%)</title><rect x="832.8" y="131.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="835.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$73/306670327.apply (3 samples, 0.06%)</title><rect x="832.8" y="115.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (3 samples, 0.06%)</title><rect x="832.8" y="99.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.8" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (2 samples, 0.04%)</title><rect x="833.0" y="83.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="836.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (23 samples, 0.49%)</title><rect x="833.8" y="147.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="836.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (23 samples, 0.49%)</title><rect x="833.8" y="131.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="836.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (23 samples, 0.49%)</title><rect x="833.8" y="115.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="836.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.11%)</title><rect x="833.8" y="99.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="836.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.11%)</title><rect x="833.8" y="83.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="836.8" y="94.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.11%)</title><rect x="833.8" y="67.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="836.8" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.17%)</title><rect x="835.0" y="99.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="838.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.17%)</title><rect x="835.0" y="83.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="838.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (8 samples, 0.17%)</title><rect x="837.5" y="99.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="840.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.06%)</title><rect x="837.5" y="83.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="840.5" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="837.5" y="67.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="840.5" y="78.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="837.5" y="51.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="840.5" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.11%)</title><rect x="838.3" y="83.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="841.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.11%)</title><rect x="838.3" y="67.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="841.3" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (10 samples, 0.21%)</title><rect x="839.5" y="163.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="842.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (10 samples, 0.21%)</title><rect x="839.5" y="147.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="842.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (10 samples, 0.21%)</title><rect x="839.5" y="131.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="842.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (10 samples, 0.21%)</title><rect x="839.5" y="115.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="842.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (10 samples, 0.21%)</title><rect x="839.5" y="99.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="842.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.06%)</title><rect x="839.5" y="83.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.06%)</title><rect x="839.5" y="67.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="842.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.13%)</title><rect x="840.3" y="83.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="843.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.13%)</title><rect x="840.3" y="67.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="843.3" y="78.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (215 samples, 4.55%)</title><rect x="842.0" y="291.0" width="53.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="845.0" y="302.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (215 samples, 4.55%)</title><rect x="842.0" y="275.0" width="53.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="845.0" y="286.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$83/1445426015.accept (214 samples, 4.53%)</title><rect x="842.3" y="259.0" width="53.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="845.3" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (214 samples, 4.53%)</title><rect x="842.3" y="243.0" width="53.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.3" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (214 samples, 4.53%)</title><rect x="842.3" y="227.0" width="53.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="845.3" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (213 samples, 4.51%)</title><rect x="842.5" y="211.0" width="53.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="845.5" y="222.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (213 samples, 4.51%)</title><rect x="842.5" y="195.0" width="53.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="845.5" y="206.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (213 samples, 4.51%)</title><rect x="842.5" y="179.0" width="53.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="845.5" y="190.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (40 samples, 0.85%)</title><rect x="842.5" y="163.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.5" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (40 samples, 0.85%)</title><rect x="842.5" y="147.0" width="10.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="845.5" y="158.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.85%)</title><rect x="842.5" y="131.0" width="10.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="845.5" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (116 samples, 2.45%)</title><rect x="852.5" y="163.0" width="29.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.5" y="174.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (116 samples, 2.45%)</title><rect x="852.5" y="147.0" width="29.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="855.5" y="158.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (57 samples, 1.21%)</title><rect x="881.5" y="163.0" width="14.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="884.5" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (17 samples, 0.36%)</title><rect x="881.5" y="147.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="884.5" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (17 samples, 0.36%)</title><rect x="881.5" y="131.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="884.5" y="142.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.36%)</title><rect x="881.5" y="115.0" width="4.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="884.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (40 samples, 0.85%)</title><rect x="885.7" y="147.0" width="10.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="888.7" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (40 samples, 0.85%)</title><rect x="885.7" y="131.0" width="10.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="888.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (12 samples, 0.25%)</title><rect x="895.9" y="291.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="898.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (12 samples, 0.25%)</title><rect x="895.9" y="275.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="898.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.25%)</title><rect x="895.9" y="259.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="898.9" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.06%)</title><rect x="895.9" y="243.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="898.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.06%)</title><rect x="895.9" y="227.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.06%)</title><rect x="895.9" y="211.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="898.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="895.9" y="195.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="898.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="895.9" y="179.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="895.9" y="163.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="898.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="895.9" y="147.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="898.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="895.9" y="131.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="898.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="895.9" y="115.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (3 samples, 0.06%)</title><rect x="895.9" y="99.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="898.9" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="896.2" y="83.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="899.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="896.2" y="67.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="899.2" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (9 samples, 0.19%)</title><rect x="896.7" y="243.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="899.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (9 samples, 0.19%)</title><rect x="896.7" y="227.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="899.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (9 samples, 0.19%)</title><rect x="896.7" y="211.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="899.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (9 samples, 0.19%)</title><rect x="896.7" y="195.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.19%)</title><rect x="896.7" y="179.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="899.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.19%)</title><rect x="896.7" y="163.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="899.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (8 samples, 0.17%)</title><rect x="896.7" y="147.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="899.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (8 samples, 0.17%)</title><rect x="896.7" y="131.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="899.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (8 samples, 0.17%)</title><rect x="896.7" y="115.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="899.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (8 samples, 0.17%)</title><rect x="896.7" y="99.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="899.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.13%)</title><rect x="896.7" y="83.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="899.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.13%)</title><rect x="896.7" y="67.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="899.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.04%)</title><rect x="898.2" y="83.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="901.2" y="94.0"></text>
</g>
<g>
<title>[pool-3-thread-5 tid=18652] (293 samples, 6.20%)</title><rect x="899.4" y="467.0" width="73.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="902.4" y="478.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (293 samples, 6.20%)</title><rect x="899.4" y="451.0" width="73.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="902.4" y="462.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (293 samples, 6.20%)</title><rect x="899.4" y="435.0" width="73.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="902.4" y="446.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (293 samples, 6.20%)</title><rect x="899.4" y="419.0" width="73.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="902.4" y="430.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.run (293 samples, 6.20%)</title><rect x="899.4" y="403.0" width="73.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="902.4" y="414.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (293 samples, 6.20%)</title><rect x="899.4" y="387.0" width="73.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="902.4" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (293 samples, 6.20%)</title><rect x="899.4" y="371.0" width="73.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="902.4" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.08%)</title><rect x="899.4" y="355.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="902.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.08%)</title><rect x="899.4" y="339.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="902.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.06%)</title><rect x="899.4" y="323.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="902.4" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.06%)</title><rect x="899.4" y="307.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="902.4" y="318.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="899.4" y="291.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="902.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (2 samples, 0.04%)</title><rect x="900.4" y="355.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="903.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="900.4" y="339.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="903.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (287 samples, 6.07%)</title><rect x="900.9" y="355.0" width="71.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="903.9" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (24 samples, 0.51%)</title><rect x="900.9" y="339.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="903.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (24 samples, 0.51%)</title><rect x="900.9" y="323.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="903.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (24 samples, 0.51%)</title><rect x="900.9" y="307.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (24 samples, 0.51%)</title><rect x="900.9" y="291.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="903.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (24 samples, 0.51%)</title><rect x="900.9" y="275.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="903.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (24 samples, 0.51%)</title><rect x="900.9" y="259.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="903.9" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (7 samples, 0.15%)</title><rect x="900.9" y="243.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="903.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (7 samples, 0.15%)</title><rect x="900.9" y="227.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="903.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (7 samples, 0.15%)</title><rect x="900.9" y="211.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="903.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.15%)</title><rect x="900.9" y="195.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="903.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.15%)</title><rect x="900.9" y="179.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="903.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.15%)</title><rect x="900.9" y="163.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="903.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.15%)</title><rect x="900.9" y="147.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (7 samples, 0.15%)</title><rect x="900.9" y="131.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="903.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (7 samples, 0.15%)</title><rect x="900.9" y="115.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="903.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (7 samples, 0.15%)</title><rect x="900.9" y="99.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="903.9" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="900.9" y="83.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="903.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="900.9" y="67.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="903.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (3 samples, 0.06%)</title><rect x="901.7" y="83.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="904.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.06%)</title><rect x="901.7" y="67.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.06%)</title><rect x="901.7" y="51.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="904.7" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (17 samples, 0.36%)</title><rect x="902.7" y="243.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="905.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (17 samples, 0.36%)</title><rect x="902.7" y="227.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (17 samples, 0.36%)</title><rect x="902.7" y="211.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (17 samples, 0.36%)</title><rect x="902.7" y="195.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.36%)</title><rect x="902.7" y="179.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="905.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.36%)</title><rect x="902.7" y="163.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="905.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (14 samples, 0.30%)</title><rect x="902.7" y="147.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (14 samples, 0.30%)</title><rect x="902.7" y="131.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (14 samples, 0.30%)</title><rect x="902.7" y="115.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="905.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (14 samples, 0.30%)</title><rect x="902.7" y="99.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="905.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.17%)</title><rect x="902.9" y="83.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="905.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.17%)</title><rect x="902.9" y="67.0" width="2.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="905.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.08%)</title><rect x="905.2" y="83.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="908.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.06%)</title><rect x="905.4" y="67.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="908.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.06%)</title><rect x="905.4" y="51.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="908.4" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="906.2" y="147.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="909.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="906.2" y="131.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="909.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="906.2" y="115.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="909.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="906.2" y="99.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="909.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (3 samples, 0.06%)</title><rect x="906.2" y="83.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="909.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="906.4" y="67.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="909.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="906.4" y="51.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="909.4" y="62.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.06%)</title><rect x="906.9" y="339.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.06%)</title><rect x="906.9" y="323.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="909.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$97/1524262454.apply (3 samples, 0.06%)</title><rect x="906.9" y="307.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="909.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (3 samples, 0.06%)</title><rect x="906.9" y="291.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="909.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.04%)</title><rect x="907.2" y="275.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="910.2" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="907.2" y="259.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="910.2" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="907.2" y="243.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="910.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (259 samples, 5.48%)</title><rect x="907.9" y="339.0" width="64.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="910.9" y="350.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (258 samples, 5.46%)</title><rect x="908.2" y="323.0" width="64.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="911.2" y="334.0">ru/mail..</text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.11%)</title><rect x="908.2" y="307.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="911.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (252 samples, 5.33%)</title><rect x="909.7" y="307.0" width="62.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="912.7" y="318.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (38 samples, 0.80%)</title><rect x="909.7" y="291.0" width="9.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="912.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (37 samples, 0.78%)</title><rect x="909.9" y="275.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="912.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.08%)</title><rect x="909.9" y="259.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="912.9" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.08%)</title><rect x="909.9" y="243.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="912.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (33 samples, 0.70%)</title><rect x="910.9" y="259.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="913.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (33 samples, 0.70%)</title><rect x="910.9" y="243.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="913.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (32 samples, 0.68%)</title><rect x="911.2" y="227.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (32 samples, 0.68%)</title><rect x="911.2" y="211.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="914.2" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (32 samples, 0.68%)</title><rect x="911.2" y="195.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="914.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (32 samples, 0.68%)</title><rect x="911.2" y="179.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="914.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (21 samples, 0.44%)</title><rect x="911.2" y="163.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="914.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (21 samples, 0.44%)</title><rect x="911.2" y="147.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="914.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (21 samples, 0.44%)</title><rect x="911.2" y="131.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="914.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (21 samples, 0.44%)</title><rect x="911.2" y="115.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="914.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.08%)</title><rect x="911.2" y="99.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="914.2" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.08%)</title><rect x="911.2" y="83.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="914.2" y="94.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.08%)</title><rect x="911.2" y="67.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="914.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 0.28%)</title><rect x="912.2" y="99.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="915.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.28%)</title><rect x="912.2" y="83.0" width="3.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="915.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.08%)</title><rect x="915.4" y="99.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="918.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.06%)</title><rect x="915.7" y="83.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="918.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.06%)</title><rect x="915.7" y="67.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="918.7" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (11 samples, 0.23%)</title><rect x="916.4" y="163.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="919.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (11 samples, 0.23%)</title><rect x="916.4" y="147.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="919.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (11 samples, 0.23%)</title><rect x="916.4" y="131.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="919.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (11 samples, 0.23%)</title><rect x="916.4" y="115.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="919.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (11 samples, 0.23%)</title><rect x="916.4" y="99.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.08%)</title><rect x="916.4" y="83.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="919.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.08%)</title><rect x="916.4" y="67.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="919.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.11%)</title><rect x="917.4" y="83.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="920.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.11%)</title><rect x="917.4" y="67.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="920.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="918.7" y="83.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="921.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.04%)</title><rect x="918.7" y="67.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="921.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="918.7" y="51.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="921.7" y="62.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (200 samples, 4.23%)</title><rect x="919.2" y="291.0" width="49.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="922.2" y="302.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (200 samples, 4.23%)</title><rect x="919.2" y="275.0" width="49.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="922.2" y="286.0">java/..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.04%)</title><rect x="919.2" y="259.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="922.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$83/1445426015.accept (198 samples, 4.19%)</title><rect x="919.7" y="259.0" width="49.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="922.7" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (198 samples, 4.19%)</title><rect x="919.7" y="243.0" width="49.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="922.7" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (198 samples, 4.19%)</title><rect x="919.7" y="227.0" width="49.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="922.7" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (3 samples, 0.06%)</title><rect x="919.7" y="211.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="922.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (195 samples, 4.13%)</title><rect x="920.4" y="211.0" width="48.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="923.4" y="222.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (195 samples, 4.13%)</title><rect x="920.4" y="195.0" width="48.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="923.4" y="206.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (195 samples, 4.13%)</title><rect x="920.4" y="179.0" width="48.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="923.4" y="190.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (37 samples, 0.78%)</title><rect x="920.4" y="163.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.4" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (37 samples, 0.78%)</title><rect x="920.4" y="147.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="923.4" y="158.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.78%)</title><rect x="920.4" y="131.0" width="9.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="923.4" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (107 samples, 2.26%)</title><rect x="929.6" y="163.0" width="26.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="932.6" y="174.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (107 samples, 2.26%)</title><rect x="929.6" y="147.0" width="26.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="932.6" y="158.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (51 samples, 1.08%)</title><rect x="956.3" y="163.0" width="12.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="959.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (15 samples, 0.32%)</title><rect x="956.3" y="147.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="959.3" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (15 samples, 0.32%)</title><rect x="956.3" y="131.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="959.3" y="142.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.32%)</title><rect x="956.3" y="115.0" width="3.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="959.3" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (36 samples, 0.76%)</title><rect x="960.1" y="147.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="963.1" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 0.76%)</title><rect x="960.1" y="131.0" width="9.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="963.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (13 samples, 0.28%)</title><rect x="969.3" y="291.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="972.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (13 samples, 0.28%)</title><rect x="969.3" y="275.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="972.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.28%)</title><rect x="969.3" y="259.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="972.3" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.06%)</title><rect x="969.3" y="243.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="972.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.06%)</title><rect x="969.3" y="227.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="972.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.06%)</title><rect x="969.3" y="211.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="972.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="969.3" y="195.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="972.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="969.3" y="179.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="972.3" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="969.3" y="163.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="972.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="969.3" y="147.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="972.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="969.3" y="131.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="972.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="969.3" y="115.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="972.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (3 samples, 0.06%)</title><rect x="969.3" y="99.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="972.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="969.6" y="83.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="972.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.04%)</title><rect x="969.6" y="67.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="972.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="969.6" y="51.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="972.6" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (10 samples, 0.21%)</title><rect x="970.1" y="243.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="973.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (10 samples, 0.21%)</title><rect x="970.1" y="227.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="973.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (10 samples, 0.21%)</title><rect x="970.1" y="211.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="973.1" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (10 samples, 0.21%)</title><rect x="970.1" y="195.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="973.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.21%)</title><rect x="970.1" y="179.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="973.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.21%)</title><rect x="970.1" y="163.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="973.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (8 samples, 0.17%)</title><rect x="970.1" y="147.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="973.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (8 samples, 0.17%)</title><rect x="970.1" y="131.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="973.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (8 samples, 0.17%)</title><rect x="970.1" y="115.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="973.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (8 samples, 0.17%)</title><rect x="970.1" y="99.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="973.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="970.1" y="83.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="973.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="970.1" y="67.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="973.1" y="78.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="970.1" y="51.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="973.1" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="970.6" y="83.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="973.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="970.6" y="67.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="973.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3 samples, 0.06%)</title><rect x="971.3" y="83.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="974.3" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="971.3" y="67.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="974.3" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="971.3" y="51.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="974.3" y="62.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="971.3" y="35.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="974.3" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="972.1" y="147.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="975.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="972.1" y="131.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="975.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="972.1" y="115.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="975.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="972.1" y="99.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="975.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.04%)</title><rect x="972.1" y="83.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="975.1" y="94.0"></text>
</g>
<g>
<title>[pool-3-thread-6 tid=18658] (291 samples, 6.16%)</title><rect x="972.6" y="467.0" width="72.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="975.6" y="478.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (291 samples, 6.16%)</title><rect x="972.6" y="451.0" width="72.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="975.6" y="462.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (291 samples, 6.16%)</title><rect x="972.6" y="435.0" width="72.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="975.6" y="446.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (291 samples, 6.16%)</title><rect x="972.6" y="419.0" width="72.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="975.6" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.04%)</title><rect x="972.6" y="403.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="975.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2 samples, 0.04%)</title><rect x="972.6" y="387.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="975.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.04%)</title><rect x="972.6" y="371.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="975.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.04%)</title><rect x="972.6" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="975.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.04%)</title><rect x="972.6" y="339.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="975.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.run (289 samples, 6.11%)</title><rect x="973.1" y="403.0" width="72.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="976.1" y="414.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (289 samples, 6.11%)</title><rect x="973.1" y="387.0" width="72.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="976.1" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (289 samples, 6.11%)</title><rect x="973.1" y="371.0" width="72.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="976.1" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.06%)</title><rect x="973.1" y="355.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="976.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.06%)</title><rect x="973.1" y="339.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="976.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.06%)</title><rect x="973.1" y="323.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="976.1" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.06%)</title><rect x="973.1" y="307.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="976.1" y="318.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="973.1" y="291.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="976.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (283 samples, 5.99%)</title><rect x="974.1" y="355.0" width="70.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="977.1" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (18 samples, 0.38%)</title><rect x="974.1" y="339.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="977.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (18 samples, 0.38%)</title><rect x="974.1" y="323.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="977.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (18 samples, 0.38%)</title><rect x="974.1" y="307.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="977.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (18 samples, 0.38%)</title><rect x="974.1" y="291.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="977.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (18 samples, 0.38%)</title><rect x="974.1" y="275.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="977.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14 samples, 0.30%)</title><rect x="974.1" y="259.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="977.1" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (4 samples, 0.08%)</title><rect x="974.1" y="243.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="977.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (4 samples, 0.08%)</title><rect x="974.1" y="227.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="977.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (4 samples, 0.08%)</title><rect x="974.1" y="211.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="977.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.08%)</title><rect x="974.1" y="195.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="977.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.08%)</title><rect x="974.1" y="179.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="977.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.08%)</title><rect x="974.1" y="163.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="977.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.08%)</title><rect x="974.1" y="147.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="977.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.08%)</title><rect x="974.1" y="131.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="977.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.08%)</title><rect x="974.1" y="115.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="977.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (4 samples, 0.08%)</title><rect x="974.1" y="99.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="977.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="974.6" y="83.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="977.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.04%)</title><rect x="974.6" y="67.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="977.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="974.6" y="51.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="977.6" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (10 samples, 0.21%)</title><rect x="975.1" y="243.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="978.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (10 samples, 0.21%)</title><rect x="975.1" y="227.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="978.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (10 samples, 0.21%)</title><rect x="975.1" y="211.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="978.1" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (10 samples, 0.21%)</title><rect x="975.1" y="195.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="978.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.21%)</title><rect x="975.1" y="179.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="978.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.21%)</title><rect x="975.1" y="163.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="978.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5 samples, 0.11%)</title><rect x="975.1" y="147.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="978.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.11%)</title><rect x="975.1" y="131.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="978.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (5 samples, 0.11%)</title><rect x="975.1" y="115.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="978.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (5 samples, 0.11%)</title><rect x="975.1" y="99.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="978.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="975.1" y="83.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="978.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="975.1" y="67.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="978.1" y="78.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="975.1" y="51.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="978.1" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="975.6" y="83.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="978.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="975.6" y="67.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="978.6" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.11%)</title><rect x="976.3" y="147.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="979.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.11%)</title><rect x="976.3" y="131.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="979.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (5 samples, 0.11%)</title><rect x="976.3" y="115.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="979.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (5 samples, 0.11%)</title><rect x="976.3" y="99.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="979.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (5 samples, 0.11%)</title><rect x="976.3" y="83.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="979.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.11%)</title><rect x="976.3" y="67.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="979.3" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.11%)</title><rect x="976.3" y="51.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="979.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$84/1163658272.apply (4 samples, 0.08%)</title><rect x="977.6" y="259.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="980.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (4 samples, 0.08%)</title><rect x="977.6" y="243.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="980.6" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="977.6" y="227.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="980.6" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="977.6" y="211.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="980.6" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="978.1" y="227.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="981.1" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="978.1" y="211.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="981.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (265 samples, 5.61%)</title><rect x="978.6" y="339.0" width="66.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="981.6" y="350.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (265 samples, 5.61%)</title><rect x="978.6" y="323.0" width="66.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="981.6" y="334.0">ru/mail..</text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.04%)</title><rect x="978.8" y="307.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="981.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (258 samples, 5.46%)</title><rect x="979.6" y="307.0" width="64.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="982.6" y="318.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (46 samples, 0.97%)</title><rect x="979.6" y="291.0" width="11.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="982.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (45 samples, 0.95%)</title><rect x="979.8" y="275.0" width="11.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="982.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.04%)</title><rect x="979.8" y="259.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="982.8" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.04%)</title><rect x="979.8" y="243.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="982.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (42 samples, 0.89%)</title><rect x="980.6" y="259.0" width="10.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="983.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (42 samples, 0.89%)</title><rect x="980.6" y="243.0" width="10.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="983.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (41 samples, 0.87%)</title><rect x="980.8" y="227.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="983.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (41 samples, 0.87%)</title><rect x="980.8" y="211.0" width="10.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="983.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (41 samples, 0.87%)</title><rect x="980.8" y="195.0" width="10.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="983.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (41 samples, 0.87%)</title><rect x="980.8" y="179.0" width="10.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="983.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (34 samples, 0.72%)</title><rect x="980.8" y="163.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="983.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (33 samples, 0.70%)</title><rect x="981.1" y="147.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="984.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (33 samples, 0.70%)</title><rect x="981.1" y="131.0" width="8.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="984.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (33 samples, 0.70%)</title><rect x="981.1" y="115.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="984.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="981.1" y="99.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="984.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="981.1" y="83.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="984.1" y="94.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="981.1" y="67.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="984.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (20 samples, 0.42%)</title><rect x="981.6" y="99.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="984.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.42%)</title><rect x="981.6" y="83.0" width="5.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="984.6" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (5 samples, 0.11%)</title><rect x="986.6" y="99.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="989.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (6 samples, 0.13%)</title><rect x="987.8" y="99.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="990.8" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.06%)</title><rect x="987.8" y="83.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="990.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="987.8" y="67.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="990.8" y="78.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="987.8" y="51.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="990.8" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.06%)</title><rect x="988.5" y="83.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="991.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.06%)</title><rect x="988.5" y="67.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="991.5" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.15%)</title><rect x="989.3" y="163.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="992.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.15%)</title><rect x="989.3" y="147.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="992.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (7 samples, 0.15%)</title><rect x="989.3" y="131.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="992.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (7 samples, 0.15%)</title><rect x="989.3" y="115.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="992.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (7 samples, 0.15%)</title><rect x="989.3" y="99.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="992.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="989.3" y="83.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="992.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="989.3" y="67.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="992.3" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.08%)</title><rect x="989.8" y="83.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="992.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.08%)</title><rect x="989.8" y="67.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="992.8" y="78.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (198 samples, 4.19%)</title><rect x="991.0" y="291.0" width="49.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="994.0" y="302.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (198 samples, 4.19%)</title><rect x="991.0" y="275.0" width="49.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="994.0" y="286.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$83/1445426015.accept (198 samples, 4.19%)</title><rect x="991.0" y="259.0" width="49.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="994.0" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (198 samples, 4.19%)</title><rect x="991.0" y="243.0" width="49.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="994.0" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (198 samples, 4.19%)</title><rect x="991.0" y="227.0" width="49.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="994.0" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (197 samples, 4.17%)</title><rect x="991.3" y="211.0" width="49.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="994.3" y="222.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (197 samples, 4.17%)</title><rect x="991.3" y="195.0" width="49.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="994.3" y="206.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (197 samples, 4.17%)</title><rect x="991.3" y="179.0" width="49.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="994.3" y="190.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (42 samples, 0.89%)</title><rect x="991.3" y="163.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="994.3" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (42 samples, 0.89%)</title><rect x="991.3" y="147.0" width="10.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="994.3" y="158.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.89%)</title><rect x="991.3" y="131.0" width="10.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="994.3" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (98 samples, 2.07%)</title><rect x="1001.8" y="163.0" width="24.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1004.8" y="174.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (98 samples, 2.07%)</title><rect x="1001.8" y="147.0" width="24.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1004.8" y="158.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (57 samples, 1.21%)</title><rect x="1026.2" y="163.0" width="14.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1029.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (21 samples, 0.44%)</title><rect x="1026.2" y="147.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1029.2" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (21 samples, 0.44%)</title><rect x="1026.2" y="131.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1029.2" y="142.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.44%)</title><rect x="1026.2" y="115.0" width="5.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1029.2" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (36 samples, 0.76%)</title><rect x="1031.5" y="147.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1034.5" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 0.76%)</title><rect x="1031.5" y="131.0" width="9.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1034.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (14 samples, 0.30%)</title><rect x="1040.5" y="291.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1043.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (14 samples, 0.30%)</title><rect x="1040.5" y="275.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1043.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14 samples, 0.30%)</title><rect x="1040.5" y="259.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1043.5" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.04%)</title><rect x="1040.5" y="243.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1043.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.04%)</title><rect x="1040.5" y="227.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1043.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2 samples, 0.04%)</title><rect x="1040.5" y="211.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1043.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.04%)</title><rect x="1040.5" y="195.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1043.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.04%)</title><rect x="1040.5" y="179.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1043.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="1040.5" y="163.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1043.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="1040.5" y="147.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1043.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="1040.5" y="131.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1043.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="1040.5" y="115.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1043.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.04%)</title><rect x="1040.5" y="99.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1043.5" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (12 samples, 0.25%)</title><rect x="1041.0" y="243.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (12 samples, 0.25%)</title><rect x="1041.0" y="227.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1044.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (12 samples, 0.25%)</title><rect x="1041.0" y="211.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1044.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (12 samples, 0.25%)</title><rect x="1041.0" y="195.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1044.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.25%)</title><rect x="1041.0" y="179.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1044.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.25%)</title><rect x="1041.0" y="163.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1044.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (11 samples, 0.23%)</title><rect x="1041.0" y="147.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1044.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.23%)</title><rect x="1041.0" y="131.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1044.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.23%)</title><rect x="1041.0" y="115.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1044.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (11 samples, 0.23%)</title><rect x="1041.0" y="99.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1044.0" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="1041.0" y="83.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1044.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1041.0" y="67.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1044.0" y="78.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="1041.0" y="51.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1044.0" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.08%)</title><rect x="1041.5" y="83.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1044.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.08%)</title><rect x="1041.5" y="67.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1044.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.08%)</title><rect x="1042.7" y="83.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1045.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.06%)</title><rect x="1043.0" y="67.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1046.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.06%)</title><rect x="1043.0" y="51.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1046.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (3 samples, 0.06%)</title><rect x="1044.0" y="307.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1047.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="1044.2" y="291.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1047.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="1044.2" y="275.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1047.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="1044.2" y="259.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1047.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (2 samples, 0.04%)</title><rect x="1044.2" y="243.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1047.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.toByteArray (2 samples, 0.04%)</title><rect x="1044.7" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1047.7" y="366.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="1044.7" y="339.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1047.7" y="350.0"></text>
</g>
<g>
<title>[pool-3-thread-7 tid=18657] (290 samples, 6.13%)</title><rect x="1045.2" y="467.0" width="72.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1048.2" y="478.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (290 samples, 6.13%)</title><rect x="1045.2" y="451.0" width="72.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1048.2" y="462.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (290 samples, 6.13%)</title><rect x="1045.2" y="435.0" width="72.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1048.2" y="446.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (290 samples, 6.13%)</title><rect x="1045.2" y="419.0" width="72.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.2" y="430.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.run (290 samples, 6.13%)</title><rect x="1045.2" y="403.0" width="72.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1048.2" y="414.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (290 samples, 6.13%)</title><rect x="1045.2" y="387.0" width="72.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1048.2" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (290 samples, 6.13%)</title><rect x="1045.2" y="371.0" width="72.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.2" y="382.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (288 samples, 6.09%)</title><rect x="1045.5" y="355.0" width="71.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1048.5" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (20 samples, 0.42%)</title><rect x="1045.5" y="339.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1048.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (20 samples, 0.42%)</title><rect x="1045.5" y="323.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1048.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (20 samples, 0.42%)</title><rect x="1045.5" y="307.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1048.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (20 samples, 0.42%)</title><rect x="1045.5" y="291.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1048.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (20 samples, 0.42%)</title><rect x="1045.5" y="275.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1048.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (17 samples, 0.36%)</title><rect x="1045.5" y="259.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1048.5" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (5 samples, 0.11%)</title><rect x="1045.5" y="243.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1048.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (5 samples, 0.11%)</title><rect x="1045.5" y="227.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1048.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (5 samples, 0.11%)</title><rect x="1045.5" y="211.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1048.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.11%)</title><rect x="1045.5" y="195.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1048.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.11%)</title><rect x="1045.5" y="179.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1048.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.11%)</title><rect x="1045.5" y="163.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1048.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.11%)</title><rect x="1045.5" y="147.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1048.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (5 samples, 0.11%)</title><rect x="1045.5" y="131.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1048.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (5 samples, 0.11%)</title><rect x="1045.5" y="115.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1048.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (5 samples, 0.11%)</title><rect x="1045.5" y="99.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1048.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.06%)</title><rect x="1045.5" y="83.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1048.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.06%)</title><rect x="1045.5" y="67.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1048.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.04%)</title><rect x="1046.2" y="83.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1049.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="1046.2" y="67.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1049.2" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (12 samples, 0.25%)</title><rect x="1046.7" y="243.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (12 samples, 0.25%)</title><rect x="1046.7" y="227.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1049.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (12 samples, 0.25%)</title><rect x="1046.7" y="211.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (12 samples, 0.25%)</title><rect x="1046.7" y="195.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1049.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.25%)</title><rect x="1046.7" y="179.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.25%)</title><rect x="1046.7" y="163.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1049.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (9 samples, 0.19%)</title><rect x="1046.7" y="147.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1049.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (9 samples, 0.19%)</title><rect x="1046.7" y="131.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1049.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (9 samples, 0.19%)</title><rect x="1046.7" y="115.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1049.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (9 samples, 0.19%)</title><rect x="1046.7" y="99.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1049.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="1046.7" y="83.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1049.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1046.7" y="67.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1049.7" y="78.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="1046.7" y="51.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1049.7" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.11%)</title><rect x="1047.2" y="83.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1050.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.11%)</title><rect x="1047.2" y="67.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1050.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.04%)</title><rect x="1048.5" y="83.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1051.5" y="94.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="1049.0" y="147.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1052.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="1049.0" y="131.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1052.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="1049.0" y="115.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1052.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="1049.0" y="99.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1052.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (3 samples, 0.06%)</title><rect x="1049.0" y="83.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1052.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="1049.2" y="67.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1052.2" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="1049.2" y="51.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1052.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$84/1163658272.apply (3 samples, 0.06%)</title><rect x="1049.7" y="259.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1052.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (3 samples, 0.06%)</title><rect x="1049.7" y="243.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1052.7" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.06%)</title><rect x="1049.7" y="227.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1052.7" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.06%)</title><rect x="1049.7" y="211.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1052.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (266 samples, 5.63%)</title><rect x="1051.0" y="339.0" width="66.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1054.0" y="350.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (266 samples, 5.63%)</title><rect x="1051.0" y="323.0" width="66.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1054.0" y="334.0">ru/mail..</text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.06%)</title><rect x="1051.0" y="307.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1054.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (261 samples, 5.52%)</title><rect x="1052.0" y="307.0" width="65.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1055.0" y="318.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (38 samples, 0.80%)</title><rect x="1052.0" y="291.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (38 samples, 0.80%)</title><rect x="1052.0" y="275.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1055.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.04%)</title><rect x="1052.0" y="259.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1055.0" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.04%)</title><rect x="1052.0" y="243.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1055.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (35 samples, 0.74%)</title><rect x="1052.7" y="259.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1055.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (35 samples, 0.74%)</title><rect x="1052.7" y="243.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1055.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (35 samples, 0.74%)</title><rect x="1052.7" y="227.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1055.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (35 samples, 0.74%)</title><rect x="1052.7" y="211.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1055.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (35 samples, 0.74%)</title><rect x="1052.7" y="195.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1055.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (35 samples, 0.74%)</title><rect x="1052.7" y="179.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1055.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (28 samples, 0.59%)</title><rect x="1052.7" y="163.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1055.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (27 samples, 0.57%)</title><rect x="1053.0" y="147.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1056.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (27 samples, 0.57%)</title><rect x="1053.0" y="131.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1056.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (27 samples, 0.57%)</title><rect x="1053.0" y="115.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1056.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.06%)</title><rect x="1053.0" y="99.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1056.0" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1053.0" y="83.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1056.0" y="94.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="1053.0" y="67.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1056.0" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.30%)</title><rect x="1053.7" y="99.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1056.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.30%)</title><rect x="1053.7" y="83.0" width="3.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1056.7" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (3 samples, 0.06%)</title><rect x="1057.2" y="99.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1060.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (6 samples, 0.13%)</title><rect x="1058.2" y="99.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1061.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="1058.2" y="83.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1061.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1058.2" y="67.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1061.2" y="78.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="1058.2" y="51.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1061.2" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.08%)</title><rect x="1058.7" y="83.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1061.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.08%)</title><rect x="1058.7" y="67.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1061.7" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.15%)</title><rect x="1059.7" y="163.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1062.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.15%)</title><rect x="1059.7" y="147.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1062.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (7 samples, 0.15%)</title><rect x="1059.7" y="131.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1062.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (7 samples, 0.15%)</title><rect x="1059.7" y="115.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1062.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (7 samples, 0.15%)</title><rect x="1059.7" y="99.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1062.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.06%)</title><rect x="1059.7" y="83.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1062.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.06%)</title><rect x="1059.7" y="67.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1062.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.06%)</title><rect x="1060.4" y="83.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1063.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.06%)</title><rect x="1060.4" y="67.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1063.4" y="78.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (209 samples, 4.42%)</title><rect x="1061.4" y="291.0" width="52.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1064.4" y="302.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (209 samples, 4.42%)</title><rect x="1061.4" y="275.0" width="52.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1064.4" y="286.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$83/1445426015.accept (208 samples, 4.40%)</title><rect x="1061.7" y="259.0" width="51.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.7" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (208 samples, 4.40%)</title><rect x="1061.7" y="243.0" width="51.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.7" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (208 samples, 4.40%)</title><rect x="1061.7" y="227.0" width="51.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1064.7" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (208 samples, 4.40%)</title><rect x="1061.7" y="211.0" width="51.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.7" y="222.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (208 samples, 4.40%)</title><rect x="1061.7" y="195.0" width="51.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1064.7" y="206.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (208 samples, 4.40%)</title><rect x="1061.7" y="179.0" width="51.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1064.7" y="190.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (36 samples, 0.76%)</title><rect x="1061.7" y="163.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1064.7" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (36 samples, 0.76%)</title><rect x="1061.7" y="147.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1064.7" y="158.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.76%)</title><rect x="1061.7" y="131.0" width="9.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1064.7" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (125 samples, 2.64%)</title><rect x="1070.7" y="163.0" width="31.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1073.7" y="174.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (125 samples, 2.64%)</title><rect x="1070.7" y="147.0" width="31.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1073.7" y="158.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (47 samples, 0.99%)</title><rect x="1101.9" y="163.0" width="11.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1104.9" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (21 samples, 0.44%)</title><rect x="1101.9" y="147.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1104.9" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (21 samples, 0.44%)</title><rect x="1101.9" y="131.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1104.9" y="142.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.44%)</title><rect x="1101.9" y="115.0" width="5.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1104.9" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (26 samples, 0.55%)</title><rect x="1107.1" y="147.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1110.1" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.55%)</title><rect x="1107.1" y="131.0" width="6.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1110.1" y="142.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableNavigableMap.descendingMap (2 samples, 0.04%)</title><rect x="1113.6" y="291.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1116.6" y="302.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableNavigableMap (2 samples, 0.04%)</title><rect x="1113.6" y="275.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1116.6" y="286.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableNavigableMap (2 samples, 0.04%)</title><rect x="1113.6" y="259.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1116.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (12 samples, 0.25%)</title><rect x="1114.1" y="291.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1117.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (12 samples, 0.25%)</title><rect x="1114.1" y="275.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1117.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.25%)</title><rect x="1114.1" y="259.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1117.1" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.04%)</title><rect x="1114.1" y="243.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1117.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.04%)</title><rect x="1114.1" y="227.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1117.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2 samples, 0.04%)</title><rect x="1114.1" y="211.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1117.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.04%)</title><rect x="1114.1" y="195.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1117.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.04%)</title><rect x="1114.1" y="179.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1117.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="1114.1" y="163.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1117.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="1114.1" y="147.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1117.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="1114.1" y="131.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1117.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="1114.1" y="115.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.04%)</title><rect x="1114.1" y="99.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1117.1" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (10 samples, 0.21%)</title><rect x="1114.6" y="243.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1117.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (10 samples, 0.21%)</title><rect x="1114.6" y="227.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1117.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (10 samples, 0.21%)</title><rect x="1114.6" y="211.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1117.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (10 samples, 0.21%)</title><rect x="1114.6" y="195.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1117.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.21%)</title><rect x="1114.6" y="179.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.21%)</title><rect x="1114.6" y="163.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1117.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (8 samples, 0.17%)</title><rect x="1114.6" y="147.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1117.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (8 samples, 0.17%)</title><rect x="1114.6" y="131.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1117.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (8 samples, 0.17%)</title><rect x="1114.6" y="115.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1117.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (8 samples, 0.17%)</title><rect x="1114.6" y="99.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1117.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="1114.6" y="83.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1117.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1114.6" y="67.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1117.6" y="78.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="1114.6" y="51.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1117.6" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.06%)</title><rect x="1115.1" y="83.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1118.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.06%)</title><rect x="1115.1" y="67.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1118.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.04%)</title><rect x="1116.1" y="83.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1119.1" y="94.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="1116.6" y="147.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1119.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="1116.6" y="131.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1119.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="1116.6" y="115.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="1116.6" y="99.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1119.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.04%)</title><rect x="1116.6" y="83.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1119.6" y="94.0"></text>
</g>
<g>
<title>[pool-3-thread-8 tid=18656] (290 samples, 6.13%)</title><rect x="1117.6" y="467.0" width="72.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1120.6" y="478.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (290 samples, 6.13%)</title><rect x="1117.6" y="451.0" width="72.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1120.6" y="462.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (290 samples, 6.13%)</title><rect x="1117.6" y="435.0" width="72.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1120.6" y="446.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (290 samples, 6.13%)</title><rect x="1117.6" y="419.0" width="72.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1120.6" y="430.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$74/223837831.run (290 samples, 6.13%)</title><rect x="1117.6" y="403.0" width="72.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1120.6" y="414.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (290 samples, 6.13%)</title><rect x="1117.6" y="387.0" width="72.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.6" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.getValue (290 samples, 6.13%)</title><rect x="1117.6" y="371.0" width="72.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1120.6" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/Response.ok (2 samples, 0.04%)</title><rect x="1117.6" y="355.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1120.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (287 samples, 6.07%)</title><rect x="1118.1" y="355.0" width="71.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1121.1" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (18 samples, 0.38%)</title><rect x="1118.1" y="339.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1121.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (18 samples, 0.38%)</title><rect x="1118.1" y="323.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1121.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (18 samples, 0.38%)</title><rect x="1118.1" y="307.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1121.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (18 samples, 0.38%)</title><rect x="1118.1" y="291.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1121.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (18 samples, 0.38%)</title><rect x="1118.1" y="275.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1121.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14 samples, 0.30%)</title><rect x="1118.1" y="259.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1121.1" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (5 samples, 0.11%)</title><rect x="1118.1" y="243.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1121.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (5 samples, 0.11%)</title><rect x="1118.1" y="227.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1121.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (5 samples, 0.11%)</title><rect x="1118.1" y="211.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1121.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.11%)</title><rect x="1118.1" y="195.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1121.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.11%)</title><rect x="1118.1" y="179.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1121.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.11%)</title><rect x="1118.1" y="163.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1121.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.11%)</title><rect x="1118.1" y="147.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1121.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (5 samples, 0.11%)</title><rect x="1118.1" y="131.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1121.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (5 samples, 0.11%)</title><rect x="1118.1" y="115.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1121.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (5 samples, 0.11%)</title><rect x="1118.1" y="99.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1121.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="1118.1" y="83.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1121.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="1118.1" y="67.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1121.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="1118.6" y="83.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1121.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="1118.6" y="67.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1121.6" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (9 samples, 0.19%)</title><rect x="1119.4" y="243.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1122.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (9 samples, 0.19%)</title><rect x="1119.4" y="227.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1122.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (9 samples, 0.19%)</title><rect x="1119.4" y="211.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1122.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (9 samples, 0.19%)</title><rect x="1119.4" y="195.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1122.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.19%)</title><rect x="1119.4" y="179.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1122.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.19%)</title><rect x="1119.4" y="163.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1122.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6 samples, 0.13%)</title><rect x="1119.4" y="147.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (6 samples, 0.13%)</title><rect x="1119.4" y="131.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1122.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (6 samples, 0.13%)</title><rect x="1119.4" y="115.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1122.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (6 samples, 0.13%)</title><rect x="1119.4" y="99.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1122.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.06%)</title><rect x="1119.4" y="83.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1122.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.06%)</title><rect x="1119.4" y="67.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1122.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3 samples, 0.06%)</title><rect x="1120.1" y="83.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1123.1" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="1120.1" y="67.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1123.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1120.1" y="51.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1123.1" y="62.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="1120.1" y="35.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1123.1" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="1120.9" y="147.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1123.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.06%)</title><rect x="1120.9" y="131.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1123.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="1120.9" y="115.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1123.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.06%)</title><rect x="1120.9" y="99.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1123.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (3 samples, 0.06%)</title><rect x="1120.9" y="83.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1123.9" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="1121.1" y="67.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1124.1" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="1121.1" y="51.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1124.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$84/1163658272.apply (4 samples, 0.08%)</title><rect x="1121.6" y="259.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1124.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (4 samples, 0.08%)</title><rect x="1121.6" y="243.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1124.6" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="1121.6" y="227.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1124.6" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="1121.6" y="211.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1124.6" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="1122.1" y="227.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1125.1" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="1122.1" y="211.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1125.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (2 samples, 0.04%)</title><rect x="1122.6" y="339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1125.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (2 samples, 0.04%)</title><rect x="1122.6" y="323.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1125.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$97/1524262454.apply (2 samples, 0.04%)</title><rect x="1122.6" y="307.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (2 samples, 0.04%)</title><rect x="1122.6" y="291.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1125.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (266 samples, 5.63%)</title><rect x="1123.3" y="339.0" width="66.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1126.3" y="350.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (265 samples, 5.61%)</title><rect x="1123.6" y="323.0" width="66.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1126.6" y="334.0">ru/mail..</text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.06%)</title><rect x="1123.6" y="307.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1126.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (256 samples, 5.42%)</title><rect x="1124.6" y="307.0" width="63.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1127.6" y="318.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (28 samples, 0.59%)</title><rect x="1124.6" y="291.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1127.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (28 samples, 0.59%)</title><rect x="1124.6" y="275.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1127.6" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (27 samples, 0.57%)</title><rect x="1124.8" y="259.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1127.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (27 samples, 0.57%)</title><rect x="1124.8" y="243.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1127.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (27 samples, 0.57%)</title><rect x="1124.8" y="227.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1127.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (27 samples, 0.57%)</title><rect x="1124.8" y="211.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1127.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (27 samples, 0.57%)</title><rect x="1124.8" y="195.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1127.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (27 samples, 0.57%)</title><rect x="1124.8" y="179.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1127.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (23 samples, 0.49%)</title><rect x="1124.8" y="163.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1127.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (22 samples, 0.47%)</title><rect x="1125.1" y="147.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (22 samples, 0.47%)</title><rect x="1125.1" y="131.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1128.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (22 samples, 0.47%)</title><rect x="1125.1" y="115.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1128.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.06%)</title><rect x="1125.1" y="99.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1128.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1125.1" y="83.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.1" y="94.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="1125.1" y="67.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1128.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.17%)</title><rect x="1125.8" y="99.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1128.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.17%)</title><rect x="1125.8" y="83.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1128.8" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (2 samples, 0.04%)</title><rect x="1127.8" y="99.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1130.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (9 samples, 0.19%)</title><rect x="1128.3" y="99.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1131.3" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.08%)</title><rect x="1128.3" y="83.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1131.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.08%)</title><rect x="1128.3" y="67.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1131.3" y="78.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.08%)</title><rect x="1128.3" y="51.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1131.3" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.11%)</title><rect x="1129.3" y="83.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1132.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.11%)</title><rect x="1129.3" y="67.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1132.3" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.08%)</title><rect x="1130.6" y="163.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1133.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.08%)</title><rect x="1130.6" y="147.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1133.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.08%)</title><rect x="1130.6" y="131.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1133.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.08%)</title><rect x="1130.6" y="115.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1133.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (4 samples, 0.08%)</title><rect x="1130.6" y="99.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1133.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="1130.6" y="83.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1133.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="1130.6" y="67.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1133.6" y="78.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (214 samples, 4.53%)</title><rect x="1131.6" y="291.0" width="53.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1134.6" y="302.0">java/..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (214 samples, 4.53%)</title><rect x="1131.6" y="275.0" width="53.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1134.6" y="286.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$83/1445426015.accept (214 samples, 4.53%)</title><rect x="1131.6" y="259.0" width="53.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1134.6" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (214 samples, 4.53%)</title><rect x="1131.6" y="243.0" width="53.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1134.6" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (214 samples, 4.53%)</title><rect x="1131.6" y="227.0" width="53.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1134.6" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (214 samples, 4.53%)</title><rect x="1131.6" y="211.0" width="53.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1134.6" y="222.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (214 samples, 4.53%)</title><rect x="1131.6" y="195.0" width="53.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1134.6" y="206.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (214 samples, 4.53%)</title><rect x="1131.6" y="179.0" width="53.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1134.6" y="190.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (38 samples, 0.80%)</title><rect x="1131.6" y="163.0" width="9.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1134.6" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (38 samples, 0.80%)</title><rect x="1131.6" y="147.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1134.6" y="158.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.80%)</title><rect x="1131.6" y="131.0" width="9.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1134.6" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (130 samples, 2.75%)</title><rect x="1141.1" y="163.0" width="32.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1144.1" y="174.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (130 samples, 2.75%)</title><rect x="1141.1" y="147.0" width="32.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1144.1" y="158.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (46 samples, 0.97%)</title><rect x="1173.5" y="163.0" width="11.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1176.5" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (22 samples, 0.47%)</title><rect x="1173.5" y="147.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1176.5" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (22 samples, 0.47%)</title><rect x="1173.5" y="131.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1176.5" y="142.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.47%)</title><rect x="1173.5" y="115.0" width="5.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1176.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (24 samples, 0.51%)</title><rect x="1179.0" y="147.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1182.0" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.51%)</title><rect x="1179.0" y="131.0" width="6.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1182.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (14 samples, 0.30%)</title><rect x="1185.0" y="291.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1188.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (14 samples, 0.30%)</title><rect x="1185.0" y="275.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1188.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14 samples, 0.30%)</title><rect x="1185.0" y="259.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1188.0" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (8 samples, 0.17%)</title><rect x="1185.0" y="243.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1188.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (8 samples, 0.17%)</title><rect x="1185.0" y="227.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1188.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (8 samples, 0.17%)</title><rect x="1185.0" y="211.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1188.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.17%)</title><rect x="1185.0" y="195.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1188.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.17%)</title><rect x="1185.0" y="179.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1188.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (8 samples, 0.17%)</title><rect x="1185.0" y="163.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1188.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (8 samples, 0.17%)</title><rect x="1185.0" y="147.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (8 samples, 0.17%)</title><rect x="1185.0" y="131.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1188.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (8 samples, 0.17%)</title><rect x="1185.0" y="115.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1188.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (8 samples, 0.17%)</title><rect x="1185.0" y="99.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.0" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.06%)</title><rect x="1185.0" y="83.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.06%)</title><rect x="1185.0" y="67.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1188.0" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (3 samples, 0.06%)</title><rect x="1185.8" y="83.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1188.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.06%)</title><rect x="1185.8" y="67.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1188.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.06%)</title><rect x="1185.8" y="51.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1188.8" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.04%)</title><rect x="1186.5" y="83.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1189.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="1186.5" y="67.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1189.5" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6 samples, 0.13%)</title><rect x="1187.0" y="243.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1190.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6 samples, 0.13%)</title><rect x="1187.0" y="227.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1190.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6 samples, 0.13%)</title><rect x="1187.0" y="211.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1190.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6 samples, 0.13%)</title><rect x="1187.0" y="195.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1190.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.13%)</title><rect x="1187.0" y="179.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1190.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.13%)</title><rect x="1187.0" y="163.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1190.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4 samples, 0.08%)</title><rect x="1187.0" y="147.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1190.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (4 samples, 0.08%)</title><rect x="1187.0" y="131.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1190.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (4 samples, 0.08%)</title><rect x="1187.0" y="115.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1190.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (4 samples, 0.08%)</title><rect x="1187.0" y="99.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1190.0" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.08%)</title><rect x="1187.0" y="83.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1190.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.08%)</title><rect x="1187.0" y="67.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1190.0" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="1188.0" y="147.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1191.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="1188.0" y="131.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1191.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="1188.0" y="115.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1191.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.04%)</title><rect x="1188.0" y="99.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.04%)</title><rect x="1188.0" y="83.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="1188.0" y="67.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="1188.0" y="51.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1191.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (5 samples, 0.11%)</title><rect x="1188.5" y="307.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1191.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (2 samples, 0.04%)</title><rect x="1188.5" y="291.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (2 samples, 0.04%)</title><rect x="1188.5" y="275.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1191.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="1189.3" y="291.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1192.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="1189.3" y="275.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="1189.3" y="259.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1192.3" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (2 samples, 0.04%)</title><rect x="1189.3" y="243.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1192.3" y="254.0"></text>
</g>
</g>
</svg>
