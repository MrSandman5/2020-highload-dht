<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="501"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="501"> </text>
<g id="frames">
<g>
<title>all (7,887 samples, 100.00%)</title><rect x="10.0" y="467.0" width="1180.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="478.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=52973] (487 samples, 6.17%)</title><rect x="10.0" y="451.0" width="72.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.0" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (487 samples, 6.17%)</title><rect x="10.0" y="435.0" width="72.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (487 samples, 6.17%)</title><rect x="10.0" y="419.0" width="72.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (487 samples, 6.17%)</title><rect x="10.0" y="403.0" width="72.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (487 samples, 6.17%)</title><rect x="10.0" y="387.0" width="72.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (376 samples, 4.77%)</title><rect x="10.0" y="371.0" width="56.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="382.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (376 samples, 4.77%)</title><rect x="10.0" y="355.0" width="56.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="366.0">one/ni..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (356 samples, 4.51%)</title><rect x="10.0" y="339.0" width="53.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="350.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (18 samples, 0.23%)</title><rect x="10.0" y="323.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (18 samples, 0.23%)</title><rect x="10.0" y="307.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.23%)</title><rect x="10.0" y="291.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.23%)</title><rect x="10.0" y="275.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.08%)</title><rect x="10.0" y="259.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.15%)</title><rect x="10.9" y="259.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.9" y="270.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.15%)</title><rect x="10.9" y="243.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="13.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (338 samples, 4.29%)</title><rect x="12.7" y="323.0" width="50.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.7" y="334.0">ru/ma..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (299 samples, 3.79%)</title><rect x="12.7" y="307.0" width="44.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="15.7" y="318.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (299 samples, 3.79%)</title><rect x="12.7" y="291.0" width="44.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.7" y="302.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (292 samples, 3.70%)</title><rect x="12.7" y="275.0" width="43.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.7" y="286.0">ch/q..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (17 samples, 0.22%)</title><rect x="12.7" y="259.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="15.7" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (275 samples, 3.49%)</title><rect x="15.2" y="259.0" width="41.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.2" y="270.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (275 samples, 3.49%)</title><rect x="15.2" y="243.0" width="41.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.2" y="254.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (275 samples, 3.49%)</title><rect x="15.2" y="227.0" width="41.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.2" y="238.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (275 samples, 3.49%)</title><rect x="15.2" y="211.0" width="41.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.2" y="222.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (275 samples, 3.49%)</title><rect x="15.2" y="195.0" width="41.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.2" y="206.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (275 samples, 3.49%)</title><rect x="15.2" y="179.0" width="41.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.2" y="190.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (47 samples, 0.60%)</title><rect x="15.2" y="163.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.2" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (47 samples, 0.60%)</title><rect x="15.2" y="147.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.2" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (47 samples, 0.60%)</title><rect x="15.2" y="131.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.2" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (47 samples, 0.60%)</title><rect x="15.2" y="115.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.2" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (6 samples, 0.08%)</title><rect x="15.2" y="99.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="18.2" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (23 samples, 0.29%)</title><rect x="16.1" y="99.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.1" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (23 samples, 0.29%)</title><rect x="16.1" y="83.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.1" y="94.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.29%)</title><rect x="16.1" y="67.0" width="3.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="19.1" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (18 samples, 0.23%)</title><rect x="19.6" y="99.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="22.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.23%)</title><rect x="19.6" y="83.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.6" y="94.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="19.6" y="67.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="22.6" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.18%)</title><rect x="20.2" y="67.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.2" y="78.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.18%)</title><rect x="20.2" y="51.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="23.2" y="62.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (2 samples, 0.03%)</title><rect x="22.3" y="163.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.03%)</title><rect x="22.3" y="147.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.03%)</title><rect x="22.3" y="131.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.03%)</title><rect x="22.3" y="115.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.3" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.03%)</title><rect x="22.3" y="99.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="25.3" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (226 samples, 2.87%)</title><rect x="22.6" y="163.0" width="33.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.6" y="174.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (183 samples, 2.32%)</title><rect x="22.6" y="147.0" width="27.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.6" y="158.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (183 samples, 2.32%)</title><rect x="22.6" y="131.0" width="27.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.6" y="142.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (18 samples, 0.23%)</title><rect x="22.6" y="115.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.6" y="126.0"></text>
</g>
<g>
<title>java.util.Date (7 samples, 0.09%)</title><rect x="22.6" y="99.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="25.6" y="110.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (11 samples, 0.14%)</title><rect x="23.6" y="99.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="26.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="23.8" y="83.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="26.8" y="94.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="23.8" y="67.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="26.8" y="78.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="23.8" y="51.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="26.8" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (7 samples, 0.09%)</title><rect x="24.2" y="83.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.2" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.09%)</title><rect x="24.2" y="67.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.2" y="78.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.06%)</title><rect x="24.2" y="51.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="27.2" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="25.0" y="51.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="28.0" y="62.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="25.0" y="35.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="28.0" y="46.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (13 samples, 0.16%)</title><rect x="25.3" y="115.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="28.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="27.2" y="115.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.2" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="27.2" y="99.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.2" y="110.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="27.2" y="83.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="30.2" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (98 samples, 1.24%)</title><rect x="27.7" y="115.0" width="14.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="30.7" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (98 samples, 1.24%)</title><rect x="27.7" y="99.0" width="14.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.7" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (98 samples, 1.24%)</title><rect x="27.7" y="83.0" width="14.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (98 samples, 1.24%)</title><rect x="27.7" y="67.0" width="14.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.7" y="78.0"></text>
</g>
<g>
<title>byte[] (98 samples, 1.24%)</title><rect x="27.7" y="51.0" width="14.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="30.7" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (51 samples, 0.65%)</title><rect x="42.3" y="115.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="45.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (51 samples, 0.65%)</title><rect x="42.3" y="99.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="45.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.11%)</title><rect x="42.3" y="83.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="45.3" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 0.53%)</title><rect x="43.7" y="83.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.7" y="94.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.53%)</title><rect x="43.7" y="67.0" width="6.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="46.7" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (43 samples, 0.55%)</title><rect x="49.9" y="147.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (43 samples, 0.55%)</title><rect x="49.9" y="131.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="52.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (43 samples, 0.55%)</title><rect x="49.9" y="115.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="52.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (43 samples, 0.55%)</title><rect x="49.9" y="99.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="52.9" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (43 samples, 0.55%)</title><rect x="49.9" y="83.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.9" y="94.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.55%)</title><rect x="49.9" y="67.0" width="6.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="52.9" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.09%)</title><rect x="56.4" y="275.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="59.4" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.08%)</title><rect x="57.4" y="307.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.08%)</title><rect x="57.4" y="291.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.08%)</title><rect x="57.4" y="275.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="60.4" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.08%)</title><rect x="57.4" y="259.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.4" y="270.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="57.4" y="243.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="60.4" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.20%)</title><rect x="58.3" y="307.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.3" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.20%)</title><rect x="58.3" y="291.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="61.3" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.20%)</title><rect x="58.3" y="275.0" width="2.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="61.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (17 samples, 0.22%)</title><rect x="60.7" y="307.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="63.7" y="318.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (6 samples, 0.08%)</title><rect x="60.7" y="291.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="63.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.14%)</title><rect x="61.6" y="291.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.14%)</title><rect x="61.6" y="275.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.get$Lambda (11 samples, 0.14%)</title><rect x="61.6" y="259.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.6" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$66 (11 samples, 0.14%)</title><rect x="61.6" y="243.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="64.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (20 samples, 0.25%)</title><rect x="63.3" y="339.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.25%)</title><rect x="63.3" y="323.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.25%)</title><rect x="63.3" y="307.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="66.3" y="318.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.13%)</title><rect x="63.3" y="291.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="66.3" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.13%)</title><rect x="64.8" y="291.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.8" y="302.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.13%)</title><rect x="64.8" y="275.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="67.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (75 samples, 0.95%)</title><rect x="66.3" y="371.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.3" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (6 samples, 0.08%)</title><rect x="66.3" y="355.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="69.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (29 samples, 0.37%)</title><rect x="67.2" y="355.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.2" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (29 samples, 0.37%)</title><rect x="67.2" y="339.0" width="4.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="70.2" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (40 samples, 0.51%)</title><rect x="71.5" y="355.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (40 samples, 0.51%)</title><rect x="71.5" y="339.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.5" y="350.0"></text>
</g>
<g>
<title>char[] (22 samples, 0.28%)</title><rect x="71.5" y="323.0" width="3.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="74.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.06%)</title><rect x="74.8" y="323.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="77.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.16%)</title><rect x="75.5" y="323.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.16%)</title><rect x="75.5" y="307.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (13 samples, 0.16%)</title><rect x="75.5" y="291.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.5" y="302.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.16%)</title><rect x="75.5" y="275.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="78.5" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 0.46%)</title><rect x="77.5" y="371.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.5" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 0.46%)</title><rect x="77.5" y="355.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="80.5" y="366.0"></text>
</g>
<g>
<title>char[] (13 samples, 0.16%)</title><rect x="77.5" y="339.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="80.5" y="350.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.14%)</title><rect x="79.4" y="339.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="82.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.15%)</title><rect x="81.1" y="339.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.15%)</title><rect x="81.1" y="323.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (12 samples, 0.15%)</title><rect x="81.1" y="307.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="84.1" y="318.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.15%)</title><rect x="81.1" y="291.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="84.1" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=52974] (467 samples, 5.92%)</title><rect x="82.9" y="451.0" width="69.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="85.9" y="462.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (467 samples, 5.92%)</title><rect x="82.9" y="435.0" width="69.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.9" y="446.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (14 samples, 0.18%)</title><rect x="82.9" y="419.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.9" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (14 samples, 0.18%)</title><rect x="82.9" y="403.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="85.9" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (453 samples, 5.74%)</title><rect x="85.0" y="419.0" width="67.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="88.0" y="430.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (453 samples, 5.74%)</title><rect x="85.0" y="403.0" width="67.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="88.0" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (453 samples, 5.74%)</title><rect x="85.0" y="387.0" width="67.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="88.0" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (359 samples, 4.55%)</title><rect x="85.0" y="371.0" width="53.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.0" y="382.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (359 samples, 4.55%)</title><rect x="85.0" y="355.0" width="53.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="88.0" y="366.0">one/n..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (337 samples, 4.27%)</title><rect x="85.0" y="339.0" width="50.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="88.0" y="350.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (9 samples, 0.11%)</title><rect x="85.0" y="323.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="88.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.11%)</title><rect x="85.0" y="307.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="88.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.11%)</title><rect x="85.0" y="291.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.11%)</title><rect x="85.0" y="275.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="88.0" y="286.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.06%)</title><rect x="85.0" y="259.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="88.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.05%)</title><rect x="85.7" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.7" y="270.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="85.7" y="243.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="88.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (328 samples, 4.16%)</title><rect x="86.3" y="323.0" width="49.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.3" y="334.0">ru/ma..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (282 samples, 3.58%)</title><rect x="86.3" y="307.0" width="42.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="89.3" y="318.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (282 samples, 3.58%)</title><rect x="86.3" y="291.0" width="42.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.3" y="302.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (274 samples, 3.47%)</title><rect x="86.3" y="275.0" width="41.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="89.3" y="286.0">ch/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (23 samples, 0.29%)</title><rect x="86.3" y="259.0" width="3.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="89.3" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (251 samples, 3.18%)</title><rect x="89.7" y="259.0" width="37.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="92.7" y="270.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (251 samples, 3.18%)</title><rect x="89.7" y="243.0" width="37.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.7" y="254.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (251 samples, 3.18%)</title><rect x="89.7" y="227.0" width="37.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.7" y="238.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (251 samples, 3.18%)</title><rect x="89.7" y="211.0" width="37.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="92.7" y="222.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (251 samples, 3.18%)</title><rect x="89.7" y="195.0" width="37.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="92.7" y="206.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (251 samples, 3.18%)</title><rect x="89.7" y="179.0" width="37.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="92.7" y="190.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (55 samples, 0.70%)</title><rect x="89.7" y="163.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.7" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (55 samples, 0.70%)</title><rect x="89.7" y="147.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="92.7" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (55 samples, 0.70%)</title><rect x="89.7" y="131.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="92.7" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (55 samples, 0.70%)</title><rect x="89.7" y="115.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.7" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (11 samples, 0.14%)</title><rect x="89.7" y="99.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="92.7" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (25 samples, 0.32%)</title><rect x="91.4" y="99.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.4" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (25 samples, 0.32%)</title><rect x="91.4" y="83.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="94.4" y="94.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.32%)</title><rect x="91.4" y="67.0" width="3.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="94.4" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (19 samples, 0.24%)</title><rect x="95.1" y="99.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="98.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.24%)</title><rect x="95.1" y="83.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.1" y="94.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.08%)</title><rect x="95.1" y="67.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="98.1" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.16%)</title><rect x="96.0" y="67.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="99.0" y="78.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.16%)</title><rect x="96.0" y="51.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="99.0" y="62.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (196 samples, 2.49%)</title><rect x="98.0" y="163.0" width="29.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.0" y="174.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (160 samples, 2.03%)</title><rect x="98.0" y="147.0" width="23.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="101.0" y="158.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (160 samples, 2.03%)</title><rect x="98.0" y="131.0" width="23.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.0" y="142.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (7 samples, 0.09%)</title><rect x="98.0" y="115.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="101.0" y="126.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (6 samples, 0.08%)</title><rect x="98.1" y="99.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.1" y="110.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (3 samples, 0.04%)</title><rect x="98.1" y="83.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="101.1" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (2 samples, 0.03%)</title><rect x="98.7" y="83.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.7" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="98.7" y="67.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.7" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="98.7" y="51.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.7" y="62.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="98.7" y="35.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="101.7" y="46.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (6 samples, 0.08%)</title><rect x="99.0" y="115.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="102.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (11 samples, 0.14%)</title><rect x="99.9" y="115.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="102.9" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (11 samples, 0.14%)</title><rect x="99.9" y="99.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.9" y="110.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.14%)</title><rect x="99.9" y="83.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="102.9" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (93 samples, 1.18%)</title><rect x="101.6" y="115.0" width="13.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.6" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (93 samples, 1.18%)</title><rect x="101.6" y="99.0" width="13.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.6" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (93 samples, 1.18%)</title><rect x="101.6" y="83.0" width="13.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="104.6" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (93 samples, 1.18%)</title><rect x="101.6" y="67.0" width="13.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.6" y="78.0"></text>
</g>
<g>
<title>byte[] (93 samples, 1.18%)</title><rect x="101.6" y="51.0" width="13.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="104.6" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (43 samples, 0.55%)</title><rect x="115.5" y="115.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="118.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (43 samples, 0.55%)</title><rect x="115.5" y="99.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="118.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="115.5" y="83.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="118.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (39 samples, 0.49%)</title><rect x="116.1" y="83.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.1" y="94.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.49%)</title><rect x="116.1" y="67.0" width="5.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="119.1" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (36 samples, 0.46%)</title><rect x="121.9" y="147.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (36 samples, 0.46%)</title><rect x="121.9" y="131.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (36 samples, 0.46%)</title><rect x="121.9" y="115.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="124.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (36 samples, 0.46%)</title><rect x="121.9" y="99.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.9" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (36 samples, 0.46%)</title><rect x="121.9" y="83.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="124.9" y="94.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.46%)</title><rect x="121.9" y="67.0" width="5.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="124.9" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.10%)</title><rect x="127.3" y="275.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="130.3" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.08%)</title><rect x="128.5" y="307.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="131.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.08%)</title><rect x="128.5" y="291.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.08%)</title><rect x="128.5" y="275.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.5" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.08%)</title><rect x="128.5" y="259.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="131.5" y="270.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="128.5" y="243.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="131.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.27%)</title><rect x="129.4" y="307.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="132.4" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.27%)</title><rect x="129.4" y="291.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.4" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.27%)</title><rect x="129.4" y="275.0" width="3.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="132.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (19 samples, 0.24%)</title><rect x="132.5" y="307.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="135.5" y="318.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (7 samples, 0.09%)</title><rect x="132.5" y="291.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="135.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.15%)</title><rect x="133.6" y="291.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.15%)</title><rect x="133.6" y="275.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.get$Lambda (12 samples, 0.15%)</title><rect x="133.6" y="259.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.6" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$66 (12 samples, 0.15%)</title><rect x="133.6" y="243.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="136.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (22 samples, 0.28%)</title><rect x="135.4" y="339.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.28%)</title><rect x="135.4" y="323.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.28%)</title><rect x="135.4" y="307.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.4" y="318.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.10%)</title><rect x="135.4" y="291.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="138.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.18%)</title><rect x="136.6" y="291.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.6" y="302.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.18%)</title><rect x="136.6" y="275.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="139.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (66 samples, 0.84%)</title><rect x="138.7" y="371.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.7" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (14 samples, 0.18%)</title><rect x="138.7" y="355.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="141.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (18 samples, 0.23%)</title><rect x="140.8" y="355.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.8" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (18 samples, 0.23%)</title><rect x="140.8" y="339.0" width="2.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="143.8" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (34 samples, 0.43%)</title><rect x="143.5" y="355.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (34 samples, 0.43%)</title><rect x="143.5" y="339.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.5" y="350.0"></text>
</g>
<g>
<title>char[] (20 samples, 0.25%)</title><rect x="143.5" y="323.0" width="2.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="146.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.16%)</title><rect x="146.6" y="323.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.16%)</title><rect x="146.6" y="307.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (13 samples, 0.16%)</title><rect x="146.6" y="291.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.6" y="302.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.16%)</title><rect x="146.6" y="275.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="149.6" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 0.36%)</title><rect x="148.5" y="371.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.5" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 0.36%)</title><rect x="148.5" y="355.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.5" y="366.0"></text>
</g>
<g>
<title>char[] (12 samples, 0.15%)</title><rect x="148.5" y="339.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="151.5" y="350.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.09%)</title><rect x="150.3" y="339.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="153.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.11%)</title><rect x="151.4" y="339.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.11%)</title><rect x="151.4" y="323.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="154.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.11%)</title><rect x="151.4" y="307.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.4" y="318.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.11%)</title><rect x="151.4" y="291.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="154.4" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=52975] (463 samples, 5.87%)</title><rect x="152.7" y="451.0" width="69.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="155.7" y="462.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (463 samples, 5.87%)</title><rect x="152.7" y="435.0" width="69.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.7" y="446.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (11 samples, 0.14%)</title><rect x="152.7" y="419.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="155.7" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (11 samples, 0.14%)</title><rect x="152.7" y="403.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="155.7" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (452 samples, 5.73%)</title><rect x="154.4" y="419.0" width="67.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.4" y="430.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (452 samples, 5.73%)</title><rect x="154.4" y="403.0" width="67.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.4" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (452 samples, 5.73%)</title><rect x="154.4" y="387.0" width="67.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.4" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (357 samples, 4.53%)</title><rect x="154.4" y="371.0" width="53.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="157.4" y="382.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (357 samples, 4.53%)</title><rect x="154.4" y="355.0" width="53.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.4" y="366.0">one/n..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (345 samples, 4.37%)</title><rect x="154.4" y="339.0" width="51.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.4" y="350.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (13 samples, 0.16%)</title><rect x="154.4" y="323.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="157.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (13 samples, 0.16%)</title><rect x="154.4" y="307.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="157.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.16%)</title><rect x="154.4" y="291.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.16%)</title><rect x="154.4" y="275.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.4" y="286.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.08%)</title><rect x="154.4" y="259.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="157.4" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.09%)</title><rect x="155.3" y="259.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.3" y="270.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="155.3" y="243.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="158.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (332 samples, 4.21%)</title><rect x="156.3" y="323.0" width="49.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="159.3" y="334.0">ru/ma..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (288 samples, 3.65%)</title><rect x="156.3" y="307.0" width="43.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.3" y="318.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (288 samples, 3.65%)</title><rect x="156.3" y="291.0" width="43.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="159.3" y="302.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (278 samples, 3.52%)</title><rect x="156.3" y="275.0" width="41.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="159.3" y="286.0">ch/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (23 samples, 0.29%)</title><rect x="156.3" y="259.0" width="3.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="159.3" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (255 samples, 3.23%)</title><rect x="159.8" y="259.0" width="38.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.8" y="270.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (255 samples, 3.23%)</title><rect x="159.8" y="243.0" width="38.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="162.8" y="254.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (255 samples, 3.23%)</title><rect x="159.8" y="227.0" width="38.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.8" y="238.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (255 samples, 3.23%)</title><rect x="159.8" y="211.0" width="38.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="162.8" y="222.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (255 samples, 3.23%)</title><rect x="159.8" y="195.0" width="38.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.8" y="206.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (255 samples, 3.23%)</title><rect x="159.8" y="179.0" width="38.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.8" y="190.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (61 samples, 0.77%)</title><rect x="159.8" y="163.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.8" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (61 samples, 0.77%)</title><rect x="159.8" y="147.0" width="9.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.8" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (61 samples, 0.77%)</title><rect x="159.8" y="131.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.8" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (61 samples, 0.77%)</title><rect x="159.8" y="115.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.8" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (5 samples, 0.06%)</title><rect x="159.8" y="99.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="162.8" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (27 samples, 0.34%)</title><rect x="160.5" y="99.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.5" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (27 samples, 0.34%)</title><rect x="160.5" y="83.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.5" y="94.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.34%)</title><rect x="160.5" y="67.0" width="4.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="163.5" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (29 samples, 0.37%)</title><rect x="164.6" y="99.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="167.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.37%)</title><rect x="164.6" y="83.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="167.6" y="94.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.09%)</title><rect x="164.6" y="67.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="167.6" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.28%)</title><rect x="165.6" y="67.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="168.6" y="78.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.28%)</title><rect x="165.6" y="51.0" width="3.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="168.6" y="62.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (194 samples, 2.46%)</title><rect x="168.9" y="163.0" width="29.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.9" y="174.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (162 samples, 2.05%)</title><rect x="168.9" y="147.0" width="24.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="171.9" y="158.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (162 samples, 2.05%)</title><rect x="168.9" y="131.0" width="24.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="171.9" y="142.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (17 samples, 0.22%)</title><rect x="168.9" y="115.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="171.9" y="126.0"></text>
</g>
<g>
<title>java.util.Date (3 samples, 0.04%)</title><rect x="168.9" y="99.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="171.9" y="110.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (14 samples, 0.18%)</title><rect x="169.3" y="99.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="172.3" y="110.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (4 samples, 0.05%)</title><rect x="169.3" y="83.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="172.3" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="169.9" y="83.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="172.9" y="94.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (7 samples, 0.09%)</title><rect x="169.9" y="67.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="172.9" y="78.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="169.9" y="51.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="172.9" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (3 samples, 0.04%)</title><rect x="171.0" y="83.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.0" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="171.0" y="67.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.0" y="78.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="171.0" y="51.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="174.0" y="62.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (7 samples, 0.09%)</title><rect x="171.4" y="115.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="174.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (15 samples, 0.19%)</title><rect x="172.5" y="115.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.5" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (15 samples, 0.19%)</title><rect x="172.5" y="99.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.5" y="110.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.19%)</title><rect x="172.5" y="83.0" width="2.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="175.5" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (79 samples, 1.00%)</title><rect x="174.7" y="115.0" width="11.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="177.7" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (79 samples, 1.00%)</title><rect x="174.7" y="99.0" width="11.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="177.7" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (79 samples, 1.00%)</title><rect x="174.7" y="83.0" width="11.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="177.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (79 samples, 1.00%)</title><rect x="174.7" y="67.0" width="11.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="177.7" y="78.0"></text>
</g>
<g>
<title>byte[] (79 samples, 1.00%)</title><rect x="174.7" y="51.0" width="11.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="177.7" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (44 samples, 0.56%)</title><rect x="186.5" y="115.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (44 samples, 0.56%)</title><rect x="186.5" y="99.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.08%)</title><rect x="186.5" y="83.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="189.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (38 samples, 0.48%)</title><rect x="187.4" y="83.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="190.4" y="94.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.48%)</title><rect x="187.4" y="67.0" width="5.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="190.4" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (32 samples, 0.41%)</title><rect x="193.1" y="147.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="196.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (32 samples, 0.41%)</title><rect x="193.1" y="131.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="196.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (32 samples, 0.41%)</title><rect x="193.1" y="115.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (32 samples, 0.41%)</title><rect x="193.1" y="99.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="196.1" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (32 samples, 0.41%)</title><rect x="193.1" y="83.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="196.1" y="94.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.41%)</title><rect x="193.1" y="67.0" width="4.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="196.1" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.13%)</title><rect x="197.9" y="275.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="200.9" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.10%)</title><rect x="199.4" y="307.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="202.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.10%)</title><rect x="199.4" y="291.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="202.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (8 samples, 0.10%)</title><rect x="199.4" y="275.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="202.4" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.10%)</title><rect x="199.4" y="259.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="202.4" y="270.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.10%)</title><rect x="199.4" y="243.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="202.4" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 0.22%)</title><rect x="200.6" y="307.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="203.6" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 0.22%)</title><rect x="200.6" y="291.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="203.6" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17 samples, 0.22%)</title><rect x="200.6" y="275.0" width="2.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="203.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (19 samples, 0.24%)</title><rect x="203.2" y="307.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.2" y="318.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (8 samples, 0.10%)</title><rect x="203.2" y="291.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="206.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.14%)</title><rect x="204.3" y="291.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.14%)</title><rect x="204.3" y="275.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="207.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.get$Lambda (11 samples, 0.14%)</title><rect x="204.3" y="259.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="207.3" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$66 (11 samples, 0.14%)</title><rect x="204.3" y="243.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="207.3" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (12 samples, 0.15%)</title><rect x="206.0" y="339.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="209.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.15%)</title><rect x="206.0" y="323.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="209.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.15%)</title><rect x="206.0" y="307.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="209.0" y="318.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.08%)</title><rect x="206.0" y="291.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="209.0" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.08%)</title><rect x="206.9" y="291.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="209.9" y="302.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="206.9" y="275.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="209.9" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (62 samples, 0.79%)</title><rect x="207.8" y="371.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="210.8" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (8 samples, 0.10%)</title><rect x="207.8" y="355.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="210.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (17 samples, 0.22%)</title><rect x="209.0" y="355.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="212.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (17 samples, 0.22%)</title><rect x="209.0" y="339.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="212.0" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (37 samples, 0.47%)</title><rect x="211.5" y="355.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (37 samples, 0.47%)</title><rect x="211.5" y="339.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="214.5" y="350.0"></text>
</g>
<g>
<title>char[] (15 samples, 0.19%)</title><rect x="211.5" y="323.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="214.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.14%)</title><rect x="213.8" y="323.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="216.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.14%)</title><rect x="215.4" y="323.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="218.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.14%)</title><rect x="215.4" y="307.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="218.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (11 samples, 0.14%)</title><rect x="215.4" y="291.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="218.4" y="302.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.14%)</title><rect x="215.4" y="275.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="218.4" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (33 samples, 0.42%)</title><rect x="217.1" y="371.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="220.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (33 samples, 0.42%)</title><rect x="217.1" y="355.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.1" y="366.0"></text>
</g>
<g>
<title>char[] (17 samples, 0.22%)</title><rect x="217.1" y="339.0" width="2.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="220.1" y="350.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.10%)</title><rect x="219.6" y="339.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="222.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.10%)</title><rect x="220.8" y="339.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="223.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.10%)</title><rect x="220.8" y="323.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="223.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.10%)</title><rect x="220.8" y="307.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="223.8" y="318.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.10%)</title><rect x="220.8" y="291.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="223.8" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=52976] (484 samples, 6.14%)</title><rect x="222.0" y="451.0" width="72.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="225.0" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (484 samples, 6.14%)</title><rect x="222.0" y="435.0" width="72.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.0" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (14 samples, 0.18%)</title><rect x="222.0" y="419.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="225.0" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (14 samples, 0.18%)</title><rect x="222.0" y="403.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="225.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (470 samples, 5.96%)</title><rect x="224.1" y="419.0" width="70.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.1" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (470 samples, 5.96%)</title><rect x="224.1" y="403.0" width="70.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.1" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (470 samples, 5.96%)</title><rect x="224.1" y="387.0" width="70.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.1" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (359 samples, 4.55%)</title><rect x="224.1" y="371.0" width="53.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.1" y="382.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (359 samples, 4.55%)</title><rect x="224.1" y="355.0" width="53.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="227.1" y="366.0">one/n..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (338 samples, 4.29%)</title><rect x="224.1" y="339.0" width="50.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.1" y="350.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (12 samples, 0.15%)</title><rect x="224.1" y="323.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.15%)</title><rect x="224.1" y="307.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="227.1" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.15%)</title><rect x="224.1" y="291.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="227.1" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.15%)</title><rect x="224.1" y="275.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="227.1" y="286.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="224.1" y="259.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="227.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.10%)</title><rect x="224.7" y="259.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="227.7" y="270.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.10%)</title><rect x="224.7" y="243.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="227.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (326 samples, 4.13%)</title><rect x="225.9" y="323.0" width="48.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="228.9" y="334.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (279 samples, 3.54%)</title><rect x="225.9" y="307.0" width="41.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="228.9" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (279 samples, 3.54%)</title><rect x="225.9" y="291.0" width="41.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="228.9" y="302.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (272 samples, 3.45%)</title><rect x="225.9" y="275.0" width="40.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="228.9" y="286.0">ch/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (30 samples, 0.38%)</title><rect x="225.9" y="259.0" width="4.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="228.9" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (242 samples, 3.07%)</title><rect x="230.4" y="259.0" width="36.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="233.4" y="270.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (242 samples, 3.07%)</title><rect x="230.4" y="243.0" width="36.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="233.4" y="254.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (242 samples, 3.07%)</title><rect x="230.4" y="227.0" width="36.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="233.4" y="238.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (242 samples, 3.07%)</title><rect x="230.4" y="211.0" width="36.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="233.4" y="222.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (242 samples, 3.07%)</title><rect x="230.4" y="195.0" width="36.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="233.4" y="206.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (242 samples, 3.07%)</title><rect x="230.4" y="179.0" width="36.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="233.4" y="190.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (41 samples, 0.52%)</title><rect x="230.4" y="163.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="233.4" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (41 samples, 0.52%)</title><rect x="230.4" y="147.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="233.4" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (41 samples, 0.52%)</title><rect x="230.4" y="131.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="233.4" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (41 samples, 0.52%)</title><rect x="230.4" y="115.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="233.4" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (9 samples, 0.11%)</title><rect x="230.4" y="99.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="233.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (21 samples, 0.27%)</title><rect x="231.7" y="99.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.7" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (21 samples, 0.27%)</title><rect x="231.7" y="83.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="234.7" y="94.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.27%)</title><rect x="231.7" y="67.0" width="3.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="234.7" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (11 samples, 0.14%)</title><rect x="234.9" y="99.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.14%)</title><rect x="234.9" y="83.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.9" y="94.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="234.9" y="67.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="237.9" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.11%)</title><rect x="235.2" y="67.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="238.2" y="78.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.11%)</title><rect x="235.2" y="51.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="238.2" y="62.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (2 samples, 0.03%)</title><rect x="236.5" y="163.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.03%)</title><rect x="236.5" y="147.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.03%)</title><rect x="236.5" y="131.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.03%)</title><rect x="236.5" y="115.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.5" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.03%)</title><rect x="236.5" y="99.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="239.5" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (199 samples, 2.52%)</title><rect x="236.8" y="163.0" width="29.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.8" y="174.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (167 samples, 2.12%)</title><rect x="236.8" y="147.0" width="25.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="239.8" y="158.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (167 samples, 2.12%)</title><rect x="236.8" y="131.0" width="25.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="239.8" y="142.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (13 samples, 0.16%)</title><rect x="236.8" y="115.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="239.8" y="126.0"></text>
</g>
<g>
<title>java.util.Date (4 samples, 0.05%)</title><rect x="236.8" y="99.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="239.8" y="110.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (9 samples, 0.11%)</title><rect x="237.4" y="99.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="240.4" y="110.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (2 samples, 0.03%)</title><rect x="237.4" y="83.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="240.4" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="237.7" y="83.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="240.7" y="94.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.05%)</title><rect x="237.7" y="67.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="240.7" y="78.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="237.7" y="51.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="240.7" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (3 samples, 0.04%)</title><rect x="238.3" y="83.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.3" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="238.3" y="67.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="241.3" y="78.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="238.3" y="51.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="241.3" y="62.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (7 samples, 0.09%)</title><rect x="238.8" y="115.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="241.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (6 samples, 0.08%)</title><rect x="239.8" y="115.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="242.8" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (6 samples, 0.08%)</title><rect x="239.8" y="99.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.8" y="110.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="239.8" y="83.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="242.8" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (93 samples, 1.18%)</title><rect x="240.7" y="115.0" width="13.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="243.7" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (93 samples, 1.18%)</title><rect x="240.7" y="99.0" width="13.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="243.7" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (93 samples, 1.18%)</title><rect x="240.7" y="83.0" width="13.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="243.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (93 samples, 1.18%)</title><rect x="240.7" y="67.0" width="13.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.7" y="78.0"></text>
</g>
<g>
<title>byte[] (93 samples, 1.18%)</title><rect x="240.7" y="51.0" width="13.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="243.7" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (48 samples, 0.61%)</title><rect x="254.6" y="115.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (48 samples, 0.61%)</title><rect x="254.6" y="99.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.06%)</title><rect x="254.6" y="83.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="257.6" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (43 samples, 0.55%)</title><rect x="255.4" y="83.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.4" y="94.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.55%)</title><rect x="255.4" y="67.0" width="6.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="258.4" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (32 samples, 0.41%)</title><rect x="261.8" y="147.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="264.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (32 samples, 0.41%)</title><rect x="261.8" y="131.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="264.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (32 samples, 0.41%)</title><rect x="261.8" y="115.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="264.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (32 samples, 0.41%)</title><rect x="261.8" y="99.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="264.8" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (32 samples, 0.41%)</title><rect x="261.8" y="83.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="264.8" y="94.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.41%)</title><rect x="261.8" y="67.0" width="4.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="264.8" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.09%)</title><rect x="266.6" y="275.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="269.6" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (11 samples, 0.14%)</title><rect x="267.6" y="307.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="270.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (11 samples, 0.14%)</title><rect x="267.6" y="291.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="270.6" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (11 samples, 0.14%)</title><rect x="267.6" y="275.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="270.6" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.14%)</title><rect x="267.6" y="259.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.6" y="270.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.14%)</title><rect x="267.6" y="243.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="270.6" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.10%)</title><rect x="269.3" y="307.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.3" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.10%)</title><rect x="269.3" y="291.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="272.3" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.10%)</title><rect x="269.3" y="275.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="272.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (28 samples, 0.36%)</title><rect x="270.5" y="307.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="273.5" y="318.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (13 samples, 0.16%)</title><rect x="270.5" y="291.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="273.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.19%)</title><rect x="272.4" y="291.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="275.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.19%)</title><rect x="272.4" y="275.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="275.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.get$Lambda (15 samples, 0.19%)</title><rect x="272.4" y="259.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="275.4" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$66 (15 samples, 0.19%)</title><rect x="272.4" y="243.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="275.4" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (21 samples, 0.27%)</title><rect x="274.7" y="339.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="277.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.27%)</title><rect x="274.7" y="323.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="277.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.27%)</title><rect x="274.7" y="307.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="277.7" y="318.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.14%)</title><rect x="274.7" y="291.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="277.7" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.13%)</title><rect x="276.3" y="291.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="279.3" y="302.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.13%)</title><rect x="276.3" y="275.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="279.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (80 samples, 1.01%)</title><rect x="277.8" y="371.0" width="12.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="280.8" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (18 samples, 0.23%)</title><rect x="277.8" y="355.0" width="2.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="280.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (21 samples, 0.27%)</title><rect x="280.5" y="355.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="283.5" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (21 samples, 0.27%)</title><rect x="280.5" y="339.0" width="3.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="283.5" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (41 samples, 0.52%)</title><rect x="283.6" y="355.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="286.6" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (41 samples, 0.52%)</title><rect x="283.6" y="339.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.6" y="350.0"></text>
</g>
<g>
<title>char[] (25 samples, 0.32%)</title><rect x="283.6" y="323.0" width="3.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="286.6" y="334.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.08%)</title><rect x="287.4" y="323.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="290.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.13%)</title><rect x="288.3" y="323.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="291.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.13%)</title><rect x="288.3" y="307.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10 samples, 0.13%)</title><rect x="288.3" y="291.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="291.3" y="302.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.13%)</title><rect x="288.3" y="275.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="291.3" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 0.39%)</title><rect x="289.8" y="371.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="292.8" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 0.39%)</title><rect x="289.8" y="355.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="292.8" y="366.0"></text>
</g>
<g>
<title>char[] (16 samples, 0.20%)</title><rect x="289.8" y="339.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="292.8" y="350.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.06%)</title><rect x="292.2" y="339.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="295.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.13%)</title><rect x="292.9" y="339.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="295.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.13%)</title><rect x="292.9" y="323.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="295.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10 samples, 0.13%)</title><rect x="292.9" y="307.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.9" y="318.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.13%)</title><rect x="292.9" y="291.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="295.9" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=52977] (495 samples, 6.28%)</title><rect x="294.4" y="451.0" width="74.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="297.4" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (495 samples, 6.28%)</title><rect x="294.4" y="435.0" width="74.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="297.4" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (15 samples, 0.19%)</title><rect x="294.4" y="419.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="297.4" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (15 samples, 0.19%)</title><rect x="294.4" y="403.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="297.4" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (480 samples, 6.09%)</title><rect x="296.7" y="419.0" width="71.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.7" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (480 samples, 6.09%)</title><rect x="296.7" y="403.0" width="71.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="299.7" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (480 samples, 6.09%)</title><rect x="296.7" y="387.0" width="71.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.7" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (369 samples, 4.68%)</title><rect x="296.7" y="371.0" width="55.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="299.7" y="382.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (369 samples, 4.68%)</title><rect x="296.7" y="355.0" width="55.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="299.7" y="366.0">one/n..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (351 samples, 4.45%)</title><rect x="296.7" y="339.0" width="52.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="299.7" y="350.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (13 samples, 0.16%)</title><rect x="296.7" y="323.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="299.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (13 samples, 0.16%)</title><rect x="296.7" y="307.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="299.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.16%)</title><rect x="296.7" y="291.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="299.7" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.16%)</title><rect x="296.7" y="275.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="299.7" y="286.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.08%)</title><rect x="296.7" y="259.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="299.7" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.09%)</title><rect x="297.6" y="259.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="300.6" y="270.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="297.6" y="243.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="300.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (338 samples, 4.29%)</title><rect x="298.6" y="323.0" width="50.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="301.6" y="334.0">ru/ma..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (308 samples, 3.91%)</title><rect x="298.6" y="307.0" width="46.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="301.6" y="318.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (308 samples, 3.91%)</title><rect x="298.6" y="291.0" width="46.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="301.6" y="302.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (301 samples, 3.82%)</title><rect x="298.6" y="275.0" width="45.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="301.6" y="286.0">ch/q..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (21 samples, 0.27%)</title><rect x="298.6" y="259.0" width="3.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="301.6" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (280 samples, 3.55%)</title><rect x="301.7" y="259.0" width="41.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="304.7" y="270.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (280 samples, 3.55%)</title><rect x="301.7" y="243.0" width="41.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="304.7" y="254.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (280 samples, 3.55%)</title><rect x="301.7" y="227.0" width="41.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.7" y="238.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (280 samples, 3.55%)</title><rect x="301.7" y="211.0" width="41.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="304.7" y="222.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (280 samples, 3.55%)</title><rect x="301.7" y="195.0" width="41.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="304.7" y="206.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (280 samples, 3.55%)</title><rect x="301.7" y="179.0" width="41.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="304.7" y="190.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (47 samples, 0.60%)</title><rect x="301.7" y="163.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="304.7" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (47 samples, 0.60%)</title><rect x="301.7" y="147.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="304.7" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (47 samples, 0.60%)</title><rect x="301.7" y="131.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="304.7" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (47 samples, 0.60%)</title><rect x="301.7" y="115.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.7" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (6 samples, 0.08%)</title><rect x="301.7" y="99.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="304.7" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (26 samples, 0.33%)</title><rect x="302.6" y="99.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="305.6" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (26 samples, 0.33%)</title><rect x="302.6" y="83.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="305.6" y="94.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.33%)</title><rect x="302.6" y="67.0" width="3.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="305.6" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (15 samples, 0.19%)</title><rect x="306.5" y="99.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="309.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.19%)</title><rect x="306.5" y="83.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="309.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.09%)</title><rect x="306.5" y="67.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="309.5" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.10%)</title><rect x="307.6" y="67.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.6" y="78.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.10%)</title><rect x="307.6" y="51.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="310.6" y="62.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (233 samples, 2.95%)</title><rect x="308.8" y="163.0" width="34.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.8" y="174.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (185 samples, 2.35%)</title><rect x="308.8" y="147.0" width="27.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="311.8" y="158.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (185 samples, 2.35%)</title><rect x="308.8" y="131.0" width="27.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.8" y="142.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (23 samples, 0.29%)</title><rect x="308.8" y="115.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.8" y="126.0"></text>
</g>
<g>
<title>java.util.Date (4 samples, 0.05%)</title><rect x="308.8" y="99.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="311.8" y="110.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (19 samples, 0.24%)</title><rect x="309.4" y="99.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="312.4" y="110.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (6 samples, 0.08%)</title><rect x="309.4" y="83.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="312.4" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="310.3" y="83.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="313.3" y="94.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (7 samples, 0.09%)</title><rect x="310.3" y="67.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="313.3" y="78.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="310.3" y="51.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="313.3" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (6 samples, 0.08%)</title><rect x="311.3" y="83.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="314.3" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.08%)</title><rect x="311.3" y="67.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="314.3" y="78.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="311.3" y="51.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="314.3" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="311.8" y="51.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="314.8" y="62.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="311.8" y="35.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="314.8" y="46.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (7 samples, 0.09%)</title><rect x="312.2" y="115.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="315.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (12 samples, 0.15%)</title><rect x="313.3" y="115.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.3" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (12 samples, 0.15%)</title><rect x="313.3" y="99.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="316.3" y="110.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.15%)</title><rect x="313.3" y="83.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="316.3" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (93 samples, 1.18%)</title><rect x="315.1" y="115.0" width="13.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="318.1" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (93 samples, 1.18%)</title><rect x="315.1" y="99.0" width="13.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="318.1" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (93 samples, 1.18%)</title><rect x="315.1" y="83.0" width="13.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="318.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (93 samples, 1.18%)</title><rect x="315.1" y="67.0" width="13.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="318.1" y="78.0"></text>
</g>
<g>
<title>byte[] (87 samples, 1.10%)</title><rect x="315.1" y="51.0" width="13.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="318.1" y="62.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="328.1" y="51.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="331.1" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (50 samples, 0.63%)</title><rect x="329.0" y="115.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (50 samples, 0.63%)</title><rect x="329.0" y="99.0" width="7.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="332.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="329.0" y="83.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="332.0" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (46 samples, 0.58%)</title><rect x="329.6" y="83.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.6" y="94.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.58%)</title><rect x="329.6" y="67.0" width="6.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="332.6" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (48 samples, 0.61%)</title><rect x="336.5" y="147.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="339.5" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (48 samples, 0.61%)</title><rect x="336.5" y="131.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="339.5" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (48 samples, 0.61%)</title><rect x="336.5" y="115.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="339.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (48 samples, 0.61%)</title><rect x="336.5" y="99.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="339.5" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (48 samples, 0.61%)</title><rect x="336.5" y="83.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="339.5" y="94.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.61%)</title><rect x="336.5" y="67.0" width="7.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="339.5" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.09%)</title><rect x="343.6" y="275.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="346.6" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (7 samples, 0.09%)</title><rect x="344.7" y="307.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="347.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (7 samples, 0.09%)</title><rect x="344.7" y="291.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="347.7" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (7 samples, 0.09%)</title><rect x="344.7" y="275.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="347.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.09%)</title><rect x="344.7" y="259.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.7" y="270.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="344.7" y="243.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="347.7" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.14%)</title><rect x="345.7" y="307.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="348.7" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.14%)</title><rect x="345.7" y="291.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="348.7" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.14%)</title><rect x="345.7" y="275.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="348.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (12 samples, 0.15%)</title><rect x="347.4" y="307.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="350.4" y="318.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (6 samples, 0.08%)</title><rect x="347.4" y="291.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="350.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.08%)</title><rect x="348.3" y="291.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="351.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.08%)</title><rect x="348.3" y="275.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="351.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.get$Lambda (6 samples, 0.08%)</title><rect x="348.3" y="259.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="351.3" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$66 (6 samples, 0.08%)</title><rect x="348.3" y="243.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="351.3" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (18 samples, 0.23%)</title><rect x="349.2" y="339.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="352.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.23%)</title><rect x="349.2" y="323.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.23%)</title><rect x="349.2" y="307.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="352.2" y="318.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.13%)</title><rect x="349.2" y="291.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="352.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.10%)</title><rect x="350.7" y="291.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.7" y="302.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.10%)</title><rect x="350.7" y="275.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="353.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (65 samples, 0.82%)</title><rect x="351.9" y="371.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="354.9" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (6 samples, 0.08%)</title><rect x="351.9" y="355.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="354.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (27 samples, 0.34%)</title><rect x="352.8" y="355.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="355.8" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (27 samples, 0.34%)</title><rect x="352.8" y="339.0" width="4.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="355.8" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 0.41%)</title><rect x="356.8" y="355.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="359.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 0.41%)</title><rect x="356.8" y="339.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="359.8" y="350.0"></text>
</g>
<g>
<title>char[] (13 samples, 0.16%)</title><rect x="356.8" y="323.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="359.8" y="334.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.10%)</title><rect x="358.7" y="323.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="361.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.14%)</title><rect x="359.9" y="323.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="362.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.14%)</title><rect x="359.9" y="307.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="362.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (11 samples, 0.14%)</title><rect x="359.9" y="291.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="362.9" y="302.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.14%)</title><rect x="359.9" y="275.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="362.9" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (46 samples, 0.58%)</title><rect x="361.6" y="371.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="364.6" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (46 samples, 0.58%)</title><rect x="361.6" y="355.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="364.6" y="366.0"></text>
</g>
<g>
<title>char[] (15 samples, 0.19%)</title><rect x="361.6" y="339.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="364.6" y="350.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.19%)</title><rect x="363.8" y="339.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="366.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.20%)</title><rect x="366.1" y="339.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="369.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.20%)</title><rect x="366.1" y="323.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="369.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (16 samples, 0.20%)</title><rect x="366.1" y="307.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="369.1" y="318.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.20%)</title><rect x="366.1" y="291.0" width="2.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="369.1" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=52978] (475 samples, 6.02%)</title><rect x="368.5" y="451.0" width="71.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="371.5" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (475 samples, 6.02%)</title><rect x="368.5" y="435.0" width="71.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="371.5" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (475 samples, 6.02%)</title><rect x="368.5" y="419.0" width="71.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="371.5" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (475 samples, 6.02%)</title><rect x="368.5" y="403.0" width="71.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="371.5" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (475 samples, 6.02%)</title><rect x="368.5" y="387.0" width="71.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="371.5" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (337 samples, 4.27%)</title><rect x="368.5" y="371.0" width="50.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="371.5" y="382.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (337 samples, 4.27%)</title><rect x="368.5" y="355.0" width="50.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="371.5" y="366.0">one/n..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (327 samples, 4.15%)</title><rect x="368.5" y="339.0" width="48.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="371.5" y="350.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (10 samples, 0.13%)</title><rect x="368.5" y="323.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="371.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.13%)</title><rect x="368.5" y="307.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="371.5" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.13%)</title><rect x="368.5" y="291.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="371.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.13%)</title><rect x="368.5" y="275.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="371.5" y="286.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="368.5" y="259.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="371.5" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.08%)</title><rect x="369.1" y="259.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="372.1" y="270.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="369.1" y="243.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="372.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (317 samples, 4.02%)</title><rect x="370.0" y="323.0" width="47.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.0" y="334.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (270 samples, 3.42%)</title><rect x="370.0" y="307.0" width="40.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="373.0" y="318.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (270 samples, 3.42%)</title><rect x="370.0" y="291.0" width="40.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="373.0" y="302.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (264 samples, 3.35%)</title><rect x="370.0" y="275.0" width="39.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="373.0" y="286.0">ch/..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (19 samples, 0.24%)</title><rect x="370.0" y="259.0" width="2.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="373.0" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (245 samples, 3.11%)</title><rect x="372.8" y="259.0" width="36.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="375.8" y="270.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (245 samples, 3.11%)</title><rect x="372.8" y="243.0" width="36.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="375.8" y="254.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (245 samples, 3.11%)</title><rect x="372.8" y="227.0" width="36.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="375.8" y="238.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (245 samples, 3.11%)</title><rect x="372.8" y="211.0" width="36.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="375.8" y="222.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (245 samples, 3.11%)</title><rect x="372.8" y="195.0" width="36.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.8" y="206.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (245 samples, 3.11%)</title><rect x="372.8" y="179.0" width="36.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="375.8" y="190.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (37 samples, 0.47%)</title><rect x="372.8" y="163.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="375.8" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (37 samples, 0.47%)</title><rect x="372.8" y="147.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.8" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (37 samples, 0.47%)</title><rect x="372.8" y="131.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="375.8" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (37 samples, 0.47%)</title><rect x="372.8" y="115.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.8" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (3 samples, 0.04%)</title><rect x="372.8" y="99.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="375.8" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (22 samples, 0.28%)</title><rect x="373.3" y="99.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="376.3" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (22 samples, 0.28%)</title><rect x="373.3" y="83.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="376.3" y="94.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.28%)</title><rect x="373.3" y="67.0" width="3.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="376.3" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (12 samples, 0.15%)</title><rect x="376.6" y="99.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.15%)</title><rect x="376.6" y="83.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="379.6" y="94.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="376.6" y="67.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="379.6" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.13%)</title><rect x="376.9" y="67.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="379.9" y="78.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.13%)</title><rect x="376.9" y="51.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="379.9" y="62.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (2 samples, 0.03%)</title><rect x="378.3" y="163.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="381.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.03%)</title><rect x="378.3" y="147.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="381.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.03%)</title><rect x="378.3" y="131.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="381.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.03%)</title><rect x="378.3" y="115.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="381.3" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.03%)</title><rect x="378.3" y="99.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="381.3" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (206 samples, 2.61%)</title><rect x="378.6" y="163.0" width="30.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="381.6" y="174.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (164 samples, 2.08%)</title><rect x="378.6" y="147.0" width="24.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="381.6" y="158.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (164 samples, 2.08%)</title><rect x="378.6" y="131.0" width="24.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="381.6" y="142.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (8 samples, 0.10%)</title><rect x="378.6" y="115.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="381.6" y="126.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (7 samples, 0.09%)</title><rect x="378.8" y="99.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="381.8" y="110.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (2 samples, 0.03%)</title><rect x="378.8" y="83.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="381.8" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="379.1" y="83.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.1" y="94.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="379.1" y="67.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.1" y="78.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="379.1" y="51.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="382.1" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (3 samples, 0.04%)</title><rect x="379.4" y="83.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="382.4" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="379.4" y="67.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.4" y="78.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="379.4" y="51.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="382.4" y="62.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (4 samples, 0.05%)</title><rect x="379.8" y="115.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="382.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (10 samples, 0.13%)</title><rect x="380.4" y="115.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="383.4" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (10 samples, 0.13%)</title><rect x="380.4" y="99.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="383.4" y="110.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.13%)</title><rect x="380.4" y="83.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="383.4" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (97 samples, 1.23%)</title><rect x="381.9" y="115.0" width="14.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="384.9" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (97 samples, 1.23%)</title><rect x="381.9" y="99.0" width="14.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="384.9" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (97 samples, 1.23%)</title><rect x="381.9" y="83.0" width="14.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (97 samples, 1.23%)</title><rect x="381.9" y="67.0" width="14.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.9" y="78.0"></text>
</g>
<g>
<title>byte[] (97 samples, 1.23%)</title><rect x="381.9" y="51.0" width="14.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="384.9" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (45 samples, 0.57%)</title><rect x="396.5" y="115.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="399.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (45 samples, 0.57%)</title><rect x="396.5" y="99.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="396.5" y="83.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="399.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (41 samples, 0.52%)</title><rect x="397.0" y="83.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="400.0" y="94.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.52%)</title><rect x="397.0" y="67.0" width="6.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="400.0" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (42 samples, 0.53%)</title><rect x="403.2" y="147.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="406.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (42 samples, 0.53%)</title><rect x="403.2" y="131.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="406.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (42 samples, 0.53%)</title><rect x="403.2" y="115.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="406.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (42 samples, 0.53%)</title><rect x="403.2" y="99.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="406.2" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (42 samples, 0.53%)</title><rect x="403.2" y="83.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="406.2" y="94.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.53%)</title><rect x="403.2" y="67.0" width="6.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="406.2" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.08%)</title><rect x="409.5" y="275.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="412.5" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (7 samples, 0.09%)</title><rect x="410.4" y="307.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="413.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (7 samples, 0.09%)</title><rect x="410.4" y="291.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (7 samples, 0.09%)</title><rect x="410.4" y="275.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.4" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.09%)</title><rect x="410.4" y="259.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.4" y="270.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="410.4" y="243.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="413.4" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.29%)</title><rect x="411.4" y="307.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="414.4" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.29%)</title><rect x="411.4" y="291.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="414.4" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.29%)</title><rect x="411.4" y="275.0" width="3.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="414.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (17 samples, 0.22%)</title><rect x="414.9" y="307.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.9" y="318.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (7 samples, 0.09%)</title><rect x="414.9" y="291.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="417.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.13%)</title><rect x="415.9" y="291.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="418.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.13%)</title><rect x="415.9" y="275.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="418.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.get$Lambda (10 samples, 0.13%)</title><rect x="415.9" y="259.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="418.9" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$66 (10 samples, 0.13%)</title><rect x="415.9" y="243.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="418.9" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (10 samples, 0.13%)</title><rect x="417.4" y="339.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="420.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.13%)</title><rect x="417.4" y="323.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.13%)</title><rect x="417.4" y="307.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="420.4" y="318.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.09%)</title><rect x="417.4" y="291.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="420.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="418.4" y="291.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="421.4" y="302.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="418.4" y="275.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="421.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (95 samples, 1.20%)</title><rect x="418.9" y="371.0" width="14.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="421.9" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (17 samples, 0.22%)</title><rect x="418.9" y="355.0" width="2.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="421.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (26 samples, 0.33%)</title><rect x="421.4" y="355.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (26 samples, 0.33%)</title><rect x="421.4" y="339.0" width="3.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="424.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (52 samples, 0.66%)</title><rect x="425.3" y="355.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="428.3" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (52 samples, 0.66%)</title><rect x="425.3" y="339.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="428.3" y="350.0"></text>
</g>
<g>
<title>char[] (27 samples, 0.34%)</title><rect x="425.3" y="323.0" width="4.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="428.3" y="334.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.15%)</title><rect x="429.4" y="323.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="432.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.16%)</title><rect x="431.2" y="323.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="434.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.16%)</title><rect x="431.2" y="307.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="434.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (13 samples, 0.16%)</title><rect x="431.2" y="291.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="434.2" y="302.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.16%)</title><rect x="431.2" y="275.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="434.2" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (43 samples, 0.55%)</title><rect x="433.1" y="371.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (43 samples, 0.55%)</title><rect x="433.1" y="355.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.1" y="366.0"></text>
</g>
<g>
<title>char[] (29 samples, 0.37%)</title><rect x="433.1" y="339.0" width="4.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="436.1" y="350.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.11%)</title><rect x="437.4" y="339.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="440.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.06%)</title><rect x="438.8" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="441.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.06%)</title><rect x="438.8" y="323.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="441.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.06%)</title><rect x="438.8" y="307.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="441.8" y="318.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.06%)</title><rect x="438.8" y="291.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="441.8" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=52979] (469 samples, 5.95%)</title><rect x="439.5" y="451.0" width="70.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="442.5" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (469 samples, 5.95%)</title><rect x="439.5" y="435.0" width="70.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="442.5" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (19 samples, 0.24%)</title><rect x="439.5" y="419.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="442.5" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (19 samples, 0.24%)</title><rect x="439.5" y="403.0" width="2.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="442.5" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (450 samples, 5.71%)</title><rect x="442.4" y="419.0" width="67.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.4" y="430.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (450 samples, 5.71%)</title><rect x="442.4" y="403.0" width="67.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="445.4" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (450 samples, 5.71%)</title><rect x="442.4" y="387.0" width="67.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="445.4" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (358 samples, 4.54%)</title><rect x="442.4" y="371.0" width="53.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.4" y="382.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (358 samples, 4.54%)</title><rect x="442.4" y="355.0" width="53.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="445.4" y="366.0">one/n..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (341 samples, 4.32%)</title><rect x="442.4" y="339.0" width="51.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="445.4" y="350.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (14 samples, 0.18%)</title><rect x="442.4" y="323.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="445.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (14 samples, 0.18%)</title><rect x="442.4" y="307.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="445.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.18%)</title><rect x="442.4" y="291.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="445.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.18%)</title><rect x="442.4" y="275.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="445.4" y="286.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.10%)</title><rect x="442.4" y="259.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="445.4" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.08%)</title><rect x="443.6" y="259.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="446.6" y="270.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="443.6" y="243.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="446.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (327 samples, 4.15%)</title><rect x="444.5" y="323.0" width="48.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="447.5" y="334.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (296 samples, 3.75%)</title><rect x="444.5" y="307.0" width="44.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="447.5" y="318.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (296 samples, 3.75%)</title><rect x="444.5" y="291.0" width="44.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="447.5" y="302.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (290 samples, 3.68%)</title><rect x="444.5" y="275.0" width="43.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="447.5" y="286.0">ch/q..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (26 samples, 0.33%)</title><rect x="444.5" y="259.0" width="3.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="447.5" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (264 samples, 3.35%)</title><rect x="448.4" y="259.0" width="39.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="451.4" y="270.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (264 samples, 3.35%)</title><rect x="448.4" y="243.0" width="39.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="451.4" y="254.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (264 samples, 3.35%)</title><rect x="448.4" y="227.0" width="39.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="451.4" y="238.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (264 samples, 3.35%)</title><rect x="448.4" y="211.0" width="39.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="451.4" y="222.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (264 samples, 3.35%)</title><rect x="448.4" y="195.0" width="39.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="451.4" y="206.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (264 samples, 3.35%)</title><rect x="448.4" y="179.0" width="39.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="451.4" y="190.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (44 samples, 0.56%)</title><rect x="448.4" y="163.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="451.4" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (44 samples, 0.56%)</title><rect x="448.4" y="147.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="451.4" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (44 samples, 0.56%)</title><rect x="448.4" y="131.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="451.4" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (44 samples, 0.56%)</title><rect x="448.4" y="115.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.4" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (5 samples, 0.06%)</title><rect x="448.4" y="99.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="451.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (22 samples, 0.28%)</title><rect x="449.1" y="99.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="452.1" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (22 samples, 0.28%)</title><rect x="449.1" y="83.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.1" y="94.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.28%)</title><rect x="449.1" y="67.0" width="3.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="452.1" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (17 samples, 0.22%)</title><rect x="452.4" y="99.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="455.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.22%)</title><rect x="452.4" y="83.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="455.4" y="94.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="452.4" y="67.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="455.4" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.16%)</title><rect x="453.0" y="67.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="456.0" y="78.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.16%)</title><rect x="453.0" y="51.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="456.0" y="62.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (220 samples, 2.79%)</title><rect x="454.9" y="163.0" width="33.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="457.9" y="174.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (182 samples, 2.31%)</title><rect x="454.9" y="147.0" width="27.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="457.9" y="158.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (182 samples, 2.31%)</title><rect x="454.9" y="131.0" width="27.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="457.9" y="142.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (14 samples, 0.18%)</title><rect x="454.9" y="115.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="457.9" y="126.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (13 samples, 0.16%)</title><rect x="455.1" y="99.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="458.1" y="110.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (2 samples, 0.03%)</title><rect x="455.1" y="83.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="458.1" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (8 samples, 0.10%)</title><rect x="455.4" y="83.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="458.4" y="94.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (8 samples, 0.10%)</title><rect x="455.4" y="67.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="458.4" y="78.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.10%)</title><rect x="455.4" y="51.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="458.4" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (3 samples, 0.04%)</title><rect x="456.6" y="83.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="459.6" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="456.6" y="67.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="459.6" y="78.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="456.6" y="51.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="459.6" y="62.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (5 samples, 0.06%)</title><rect x="457.0" y="115.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="460.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (18 samples, 0.23%)</title><rect x="457.8" y="115.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="460.8" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (18 samples, 0.23%)</title><rect x="457.8" y="99.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="460.8" y="110.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.23%)</title><rect x="457.8" y="83.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="460.8" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (98 samples, 1.24%)</title><rect x="460.5" y="115.0" width="14.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="463.5" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (98 samples, 1.24%)</title><rect x="460.5" y="99.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.5" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (98 samples, 1.24%)</title><rect x="460.5" y="83.0" width="14.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (98 samples, 1.24%)</title><rect x="460.5" y="67.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.5" y="78.0"></text>
</g>
<g>
<title>byte[] (98 samples, 1.24%)</title><rect x="460.5" y="51.0" width="14.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="463.5" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (47 samples, 0.60%)</title><rect x="475.1" y="115.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="478.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 0.60%)</title><rect x="475.1" y="99.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="478.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.08%)</title><rect x="475.1" y="83.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="478.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (41 samples, 0.52%)</title><rect x="476.0" y="83.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.0" y="94.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.52%)</title><rect x="476.0" y="67.0" width="6.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="479.0" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (38 samples, 0.48%)</title><rect x="482.2" y="147.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="485.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (38 samples, 0.48%)</title><rect x="482.2" y="131.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (38 samples, 0.48%)</title><rect x="482.2" y="115.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (38 samples, 0.48%)</title><rect x="482.2" y="99.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="485.2" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (38 samples, 0.48%)</title><rect x="482.2" y="83.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.2" y="94.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.48%)</title><rect x="482.2" y="67.0" width="5.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="485.2" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.08%)</title><rect x="487.9" y="275.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="490.9" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.10%)</title><rect x="488.8" y="307.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="491.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.10%)</title><rect x="488.8" y="291.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="491.8" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (8 samples, 0.10%)</title><rect x="488.8" y="275.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.8" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.10%)</title><rect x="488.8" y="259.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="491.8" y="270.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.10%)</title><rect x="488.8" y="243.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="491.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.16%)</title><rect x="490.0" y="307.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="493.0" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.16%)</title><rect x="490.0" y="291.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="493.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.16%)</title><rect x="490.0" y="275.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="493.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (10 samples, 0.13%)</title><rect x="491.9" y="307.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.9" y="318.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (5 samples, 0.06%)</title><rect x="491.9" y="291.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="494.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.06%)</title><rect x="492.7" y="291.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="495.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.06%)</title><rect x="492.7" y="275.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="495.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.get$Lambda (5 samples, 0.06%)</title><rect x="492.7" y="259.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="495.7" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$66 (5 samples, 0.06%)</title><rect x="492.7" y="243.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="495.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (17 samples, 0.22%)</title><rect x="493.4" y="339.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="496.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (17 samples, 0.22%)</title><rect x="493.4" y="323.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="496.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.22%)</title><rect x="493.4" y="307.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="496.4" y="318.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.10%)</title><rect x="493.4" y="291.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="496.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.11%)</title><rect x="494.6" y="291.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="497.6" y="302.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.11%)</title><rect x="494.6" y="275.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="497.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (62 samples, 0.79%)</title><rect x="495.9" y="371.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="498.9" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (10 samples, 0.13%)</title><rect x="495.9" y="355.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="498.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (16 samples, 0.20%)</title><rect x="497.4" y="355.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="500.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (16 samples, 0.20%)</title><rect x="497.4" y="339.0" width="2.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="500.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 0.46%)</title><rect x="499.8" y="355.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="502.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 0.46%)</title><rect x="499.8" y="339.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="502.8" y="350.0"></text>
</g>
<g>
<title>char[] (23 samples, 0.29%)</title><rect x="499.8" y="323.0" width="3.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="502.8" y="334.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="503.3" y="323.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="506.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.14%)</title><rect x="503.6" y="323.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="506.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.14%)</title><rect x="503.6" y="307.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="506.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (11 samples, 0.14%)</title><rect x="503.6" y="291.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="506.6" y="302.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.14%)</title><rect x="503.6" y="275.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="506.6" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (30 samples, 0.38%)</title><rect x="505.2" y="371.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="508.2" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (30 samples, 0.38%)</title><rect x="505.2" y="355.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.2" y="366.0"></text>
</g>
<g>
<title>char[] (14 samples, 0.18%)</title><rect x="505.2" y="339.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="508.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.08%)</title><rect x="507.3" y="339.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="510.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.13%)</title><rect x="508.2" y="339.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="511.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.13%)</title><rect x="508.2" y="323.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="511.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10 samples, 0.13%)</title><rect x="508.2" y="307.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="511.2" y="318.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.13%)</title><rect x="508.2" y="291.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="511.2" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=52980] (482 samples, 6.11%)</title><rect x="509.7" y="451.0" width="72.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="512.7" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (482 samples, 6.11%)</title><rect x="509.7" y="435.0" width="72.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="512.7" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (17 samples, 0.22%)</title><rect x="509.7" y="419.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="512.7" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (17 samples, 0.22%)</title><rect x="509.7" y="403.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="512.7" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (465 samples, 5.90%)</title><rect x="512.3" y="419.0" width="69.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.3" y="430.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (465 samples, 5.90%)</title><rect x="512.3" y="403.0" width="69.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="515.3" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (465 samples, 5.90%)</title><rect x="512.3" y="387.0" width="69.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="515.3" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (356 samples, 4.51%)</title><rect x="512.3" y="371.0" width="53.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="515.3" y="382.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (356 samples, 4.51%)</title><rect x="512.3" y="355.0" width="53.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.3" y="366.0">one/n..</text>
</g>
<g>
<title>RequestHandler0_response.handleRequest (341 samples, 4.32%)</title><rect x="512.3" y="339.0" width="51.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.3" y="350.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (19 samples, 0.24%)</title><rect x="512.3" y="323.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="515.3" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (19 samples, 0.24%)</title><rect x="512.3" y="307.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.24%)</title><rect x="512.3" y="291.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.24%)</title><rect x="512.3" y="275.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.3" y="286.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.10%)</title><rect x="512.3" y="259.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="515.3" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.14%)</title><rect x="513.4" y="259.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="516.4" y="270.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.14%)</title><rect x="513.4" y="243.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="516.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.response (322 samples, 4.08%)</title><rect x="515.1" y="323.0" width="48.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.1" y="334.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (288 samples, 3.65%)</title><rect x="515.1" y="307.0" width="43.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.1" y="318.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (288 samples, 3.65%)</title><rect x="515.1" y="291.0" width="43.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="518.1" y="302.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (281 samples, 3.56%)</title><rect x="515.1" y="275.0" width="42.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.1" y="286.0">ch/q..</text>
</g>
<g>
<title>ch.qos.logback.classic.spi.LoggingEvent (23 samples, 0.29%)</title><rect x="515.1" y="259.0" width="3.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="518.1" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (258 samples, 3.27%)</title><rect x="518.5" y="259.0" width="38.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="521.5" y="270.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (258 samples, 3.27%)</title><rect x="518.5" y="243.0" width="38.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.5" y="254.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (258 samples, 3.27%)</title><rect x="518.5" y="227.0" width="38.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="521.5" y="238.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (258 samples, 3.27%)</title><rect x="518.5" y="211.0" width="38.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="521.5" y="222.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (258 samples, 3.27%)</title><rect x="518.5" y="195.0" width="38.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="521.5" y="206.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (258 samples, 3.27%)</title><rect x="518.5" y="179.0" width="38.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.5" y="190.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (51 samples, 0.65%)</title><rect x="518.5" y="163.0" width="7.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="521.5" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (51 samples, 0.65%)</title><rect x="518.5" y="147.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.5" y="158.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (51 samples, 0.65%)</title><rect x="518.5" y="131.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.5" y="142.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (51 samples, 0.65%)</title><rect x="518.5" y="115.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.5" y="126.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (8 samples, 0.10%)</title><rect x="518.5" y="99.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="521.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (25 samples, 0.32%)</title><rect x="519.7" y="99.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="522.7" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (25 samples, 0.32%)</title><rect x="519.7" y="83.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="522.7" y="94.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.32%)</title><rect x="519.7" y="67.0" width="3.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="522.7" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (18 samples, 0.23%)</title><rect x="523.5" y="99.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.23%)</title><rect x="523.5" y="83.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="526.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.22%)</title><rect x="523.6" y="67.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="526.6" y="78.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.22%)</title><rect x="523.6" y="51.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="526.6" y="62.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (207 samples, 2.62%)</title><rect x="526.2" y="163.0" width="30.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="529.2" y="174.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (173 samples, 2.19%)</title><rect x="526.2" y="147.0" width="25.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="529.2" y="158.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (173 samples, 2.19%)</title><rect x="526.2" y="131.0" width="25.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="529.2" y="142.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (18 samples, 0.23%)</title><rect x="526.2" y="115.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.2" y="126.0"></text>
</g>
<g>
<title>java.util.Date (2 samples, 0.03%)</title><rect x="526.2" y="99.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="529.2" y="110.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (16 samples, 0.20%)</title><rect x="526.5" y="99.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="529.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (10 samples, 0.13%)</title><rect x="526.6" y="83.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="529.6" y="94.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (10 samples, 0.13%)</title><rect x="526.6" y="67.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.6" y="78.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.13%)</title><rect x="526.6" y="51.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="529.6" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (5 samples, 0.06%)</title><rect x="528.1" y="83.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="531.1" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.06%)</title><rect x="528.1" y="67.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="531.1" y="78.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="528.1" y="51.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="531.1" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="528.4" y="51.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="531.4" y="62.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="528.4" y="35.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="531.4" y="46.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (12 samples, 0.15%)</title><rect x="528.9" y="115.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="531.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (7 samples, 0.09%)</title><rect x="530.7" y="115.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="533.7" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (7 samples, 0.09%)</title><rect x="530.7" y="99.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="533.7" y="110.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="530.7" y="83.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="533.7" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (96 samples, 1.22%)</title><rect x="531.7" y="115.0" width="14.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="534.7" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (96 samples, 1.22%)</title><rect x="531.7" y="99.0" width="14.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.7" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (96 samples, 1.22%)</title><rect x="531.7" y="83.0" width="14.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="534.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (96 samples, 1.22%)</title><rect x="531.7" y="67.0" width="14.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="534.7" y="78.0"></text>
</g>
<g>
<title>byte[] (96 samples, 1.22%)</title><rect x="531.7" y="51.0" width="14.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="534.7" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (40 samples, 0.51%)</title><rect x="546.1" y="115.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="549.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (40 samples, 0.51%)</title><rect x="546.1" y="99.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="549.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.09%)</title><rect x="546.1" y="83.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="549.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (33 samples, 0.42%)</title><rect x="547.1" y="83.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="550.1" y="94.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.42%)</title><rect x="547.1" y="67.0" width="4.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="550.1" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (34 samples, 0.43%)</title><rect x="552.0" y="147.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="555.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (34 samples, 0.43%)</title><rect x="552.0" y="131.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (34 samples, 0.43%)</title><rect x="552.0" y="115.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (34 samples, 0.43%)</title><rect x="552.0" y="99.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.0" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (34 samples, 0.43%)</title><rect x="552.0" y="83.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.0" y="94.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.43%)</title><rect x="552.0" y="67.0" width="5.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="555.0" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.09%)</title><rect x="557.1" y="275.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="560.1" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (7 samples, 0.09%)</title><rect x="558.2" y="307.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (7 samples, 0.09%)</title><rect x="558.2" y="291.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="561.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (7 samples, 0.09%)</title><rect x="558.2" y="275.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="561.2" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.09%)</title><rect x="558.2" y="259.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="561.2" y="270.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="558.2" y="243.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="561.2" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.14%)</title><rect x="559.2" y="307.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.14%)</title><rect x="559.2" y="291.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.2" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.14%)</title><rect x="559.2" y="275.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="562.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.get (16 samples, 0.20%)</title><rect x="560.9" y="307.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.9" y="318.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (8 samples, 0.10%)</title><rect x="560.9" y="291.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="563.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.10%)</title><rect x="562.1" y="291.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="565.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.10%)</title><rect x="562.1" y="275.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.get$Lambda (8 samples, 0.10%)</title><rect x="562.1" y="259.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="565.1" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.service.mrsandman5.ServiceImpl$$Lambda$66 (8 samples, 0.10%)</title><rect x="562.1" y="243.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="565.1" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (15 samples, 0.19%)</title><rect x="563.3" y="339.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="566.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.19%)</title><rect x="563.3" y="323.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="566.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.19%)</title><rect x="563.3" y="307.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="566.3" y="318.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.11%)</title><rect x="563.3" y="291.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="566.3" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.08%)</title><rect x="564.6" y="291.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.6" y="302.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="564.6" y="275.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="567.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (76 samples, 0.96%)</title><rect x="565.5" y="371.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.5" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Request (10 samples, 0.13%)</title><rect x="565.5" y="355.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="568.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (25 samples, 0.32%)</title><rect x="567.0" y="355.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (25 samples, 0.32%)</title><rect x="567.0" y="339.0" width="3.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="570.0" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (41 samples, 0.52%)</title><rect x="570.8" y="355.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (41 samples, 0.52%)</title><rect x="570.8" y="339.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="573.8" y="350.0"></text>
</g>
<g>
<title>char[] (20 samples, 0.25%)</title><rect x="570.8" y="323.0" width="2.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="573.8" y="334.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.08%)</title><rect x="573.7" y="323.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="576.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.19%)</title><rect x="574.6" y="323.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="577.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.19%)</title><rect x="574.6" y="307.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="577.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (15 samples, 0.19%)</title><rect x="574.6" y="291.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="577.6" y="302.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.19%)</title><rect x="574.6" y="275.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="577.6" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (33 samples, 0.42%)</title><rect x="576.9" y="371.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="579.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (33 samples, 0.42%)</title><rect x="576.9" y="355.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="579.9" y="366.0"></text>
</g>
<g>
<title>char[] (13 samples, 0.16%)</title><rect x="576.9" y="339.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="579.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.10%)</title><rect x="578.8" y="339.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="581.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.15%)</title><rect x="580.0" y="339.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="583.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.15%)</title><rect x="580.0" y="323.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (12 samples, 0.15%)</title><rect x="580.0" y="307.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="583.0" y="318.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.15%)</title><rect x="580.0" y="291.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="583.0" y="302.0"></text>
</g>
<g>
<title>[pool-3-thread-1 tid=53019] (506 samples, 6.42%)</title><rect x="581.8" y="451.0" width="75.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="584.8" y="462.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (506 samples, 6.42%)</title><rect x="581.8" y="435.0" width="75.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="584.8" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (506 samples, 6.42%)</title><rect x="581.8" y="419.0" width="75.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.8" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (506 samples, 6.42%)</title><rect x="581.8" y="403.0" width="75.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.8" y="414.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.run (506 samples, 6.42%)</title><rect x="581.8" y="387.0" width="75.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="584.8" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (506 samples, 6.42%)</title><rect x="581.8" y="371.0" width="75.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="584.8" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.03%)</title><rect x="581.8" y="355.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.03%)</title><rect x="581.8" y="339.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="584.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (5 samples, 0.06%)</title><rect x="582.1" y="355.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="585.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.06%)</title><rect x="582.1" y="339.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="585.1" y="350.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="582.1" y="323.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="585.1" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.03%)</title><rect x="582.6" y="323.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="585.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (498 samples, 6.31%)</title><rect x="582.9" y="355.0" width="74.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="585.9" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (77 samples, 0.98%)</title><rect x="582.9" y="339.0" width="11.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="585.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (77 samples, 0.98%)</title><rect x="582.9" y="323.0" width="11.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="585.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (77 samples, 0.98%)</title><rect x="582.9" y="307.0" width="11.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="585.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (77 samples, 0.98%)</title><rect x="582.9" y="291.0" width="11.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="585.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (77 samples, 0.98%)</title><rect x="582.9" y="275.0" width="11.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (63 samples, 0.80%)</title><rect x="582.9" y="259.0" width="9.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="585.9" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (22 samples, 0.28%)</title><rect x="582.9" y="243.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="585.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (22 samples, 0.28%)</title><rect x="582.9" y="227.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="585.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (22 samples, 0.28%)</title><rect x="582.9" y="211.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="585.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (22 samples, 0.28%)</title><rect x="582.9" y="195.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="585.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (22 samples, 0.28%)</title><rect x="582.9" y="179.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="585.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (22 samples, 0.28%)</title><rect x="582.9" y="163.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="585.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (22 samples, 0.28%)</title><rect x="582.9" y="147.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="585.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (22 samples, 0.28%)</title><rect x="582.9" y="131.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="585.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (22 samples, 0.28%)</title><rect x="582.9" y="115.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="585.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (22 samples, 0.28%)</title><rect x="582.9" y="99.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="585.9" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (11 samples, 0.14%)</title><rect x="582.9" y="83.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="585.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.14%)</title><rect x="582.9" y="67.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="585.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 0.13%)</title><rect x="584.5" y="83.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="587.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.13%)</title><rect x="584.5" y="67.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="587.5" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (41 samples, 0.52%)</title><rect x="586.2" y="243.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="589.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (41 samples, 0.52%)</title><rect x="586.2" y="227.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="589.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (41 samples, 0.52%)</title><rect x="586.2" y="211.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="589.2" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (41 samples, 0.52%)</title><rect x="586.2" y="195.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="589.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (41 samples, 0.52%)</title><rect x="586.2" y="179.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="589.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (41 samples, 0.52%)</title><rect x="586.2" y="163.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="589.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (31 samples, 0.39%)</title><rect x="586.2" y="147.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="589.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (30 samples, 0.38%)</title><rect x="586.3" y="131.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="589.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (30 samples, 0.38%)</title><rect x="586.3" y="115.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="589.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (30 samples, 0.38%)</title><rect x="586.3" y="99.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="589.3" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (9 samples, 0.11%)</title><rect x="586.3" y="83.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="589.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.11%)</title><rect x="586.3" y="67.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="589.3" y="78.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.11%)</title><rect x="586.3" y="51.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="589.3" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (18 samples, 0.23%)</title><rect x="587.7" y="83.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="590.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (18 samples, 0.23%)</title><rect x="587.7" y="67.0" width="2.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="590.7" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (10 samples, 0.13%)</title><rect x="590.8" y="147.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="593.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (10 samples, 0.13%)</title><rect x="590.8" y="131.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="593.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (10 samples, 0.13%)</title><rect x="590.8" y="115.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (10 samples, 0.13%)</title><rect x="590.8" y="99.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="593.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (10 samples, 0.13%)</title><rect x="590.8" y="83.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="593.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.05%)</title><rect x="590.8" y="67.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.05%)</title><rect x="590.8" y="51.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="593.8" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.08%)</title><rect x="591.4" y="67.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.08%)</title><rect x="591.4" y="51.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="594.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$78/208007213.apply (14 samples, 0.18%)</title><rect x="592.3" y="259.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="595.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (14 samples, 0.18%)</title><rect x="592.3" y="243.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="595.3" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.08%)</title><rect x="592.3" y="227.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="595.3" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.08%)</title><rect x="592.3" y="211.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="595.3" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.09%)</title><rect x="593.2" y="227.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="596.2" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.09%)</title><rect x="593.2" y="211.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="596.2" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.04%)</title><rect x="594.4" y="339.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.04%)</title><rect x="594.4" y="323.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="597.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$91/885273156.apply (3 samples, 0.04%)</title><rect x="594.4" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="597.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (3 samples, 0.04%)</title><rect x="594.4" y="291.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="597.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (3 samples, 0.04%)</title><rect x="594.4" y="275.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="597.4" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.04%)</title><rect x="594.4" y="259.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.4" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.04%)</title><rect x="594.4" y="243.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="597.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (418 samples, 5.30%)</title><rect x="594.8" y="339.0" width="62.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.8" y="350.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (2 samples, 0.03%)</title><rect x="594.8" y="323.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.8" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (2 samples, 0.03%)</title><rect x="594.8" y="307.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="597.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (416 samples, 5.27%)</title><rect x="595.1" y="323.0" width="62.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="598.1" y="334.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (406 samples, 5.15%)</title><rect x="595.7" y="307.0" width="60.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="598.7" y="318.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (82 samples, 1.04%)</title><rect x="595.7" y="291.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="598.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (81 samples, 1.03%)</title><rect x="595.9" y="275.0" width="12.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="598.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.05%)</title><rect x="596.0" y="259.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="599.0" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.05%)</title><rect x="596.0" y="243.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="599.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (76 samples, 0.96%)</title><rect x="596.6" y="259.0" width="11.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="599.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (76 samples, 0.96%)</title><rect x="596.6" y="243.0" width="11.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (2 samples, 0.03%)</title><rect x="596.6" y="227.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="599.6" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="596.6" y="211.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.6" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="596.6" y="195.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="599.6" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (74 samples, 0.94%)</title><rect x="596.9" y="227.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (74 samples, 0.94%)</title><rect x="596.9" y="211.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="599.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (74 samples, 0.94%)</title><rect x="596.9" y="195.0" width="11.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="599.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (74 samples, 0.94%)</title><rect x="596.9" y="179.0" width="11.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="599.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (53 samples, 0.67%)</title><rect x="596.9" y="163.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="599.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (53 samples, 0.67%)</title><rect x="596.9" y="147.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (53 samples, 0.67%)</title><rect x="596.9" y="131.0" width="8.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (53 samples, 0.67%)</title><rect x="596.9" y="115.0" width="8.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="599.9" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (9 samples, 0.11%)</title><rect x="596.9" y="99.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="599.9" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.11%)</title><rect x="596.9" y="83.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.9" y="94.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.11%)</title><rect x="596.9" y="67.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="599.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (33 samples, 0.42%)</title><rect x="598.3" y="99.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (33 samples, 0.42%)</title><rect x="598.3" y="83.0" width="4.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="601.3" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (2 samples, 0.03%)</title><rect x="603.2" y="99.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="606.2" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (5 samples, 0.06%)</title><rect x="603.5" y="99.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="606.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.05%)</title><rect x="604.3" y="99.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="607.3" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.05%)</title><rect x="604.3" y="83.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="604.3" y="67.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="607.3" y="78.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="604.3" y="51.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="607.3" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (21 samples, 0.27%)</title><rect x="604.9" y="163.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (21 samples, 0.27%)</title><rect x="604.9" y="147.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="607.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (21 samples, 0.27%)</title><rect x="604.9" y="131.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="607.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (21 samples, 0.27%)</title><rect x="604.9" y="115.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="607.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (21 samples, 0.27%)</title><rect x="604.9" y="99.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="607.9" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.13%)</title><rect x="604.9" y="83.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.13%)</title><rect x="604.9" y="67.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="607.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.08%)</title><rect x="606.4" y="83.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="609.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.08%)</title><rect x="606.4" y="67.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="609.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (4 samples, 0.05%)</title><rect x="607.3" y="83.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.05%)</title><rect x="607.3" y="67.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="610.3" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.05%)</title><rect x="607.3" y="51.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="610.3" y="62.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (302 samples, 3.83%)</title><rect x="608.0" y="291.0" width="45.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="611.0" y="302.0">java..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (302 samples, 3.83%)</title><rect x="608.0" y="275.0" width="45.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="611.0" y="286.0">java..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.03%)</title><rect x="608.0" y="259.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="611.0" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (2 samples, 0.03%)</title><rect x="608.0" y="243.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.0" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (2 samples, 0.03%)</title><rect x="608.0" y="227.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="611.0" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (2 samples, 0.03%)</title><rect x="608.0" y="211.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="611.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$72/1983780967.accept (300 samples, 3.80%)</title><rect x="608.3" y="259.0" width="44.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.3" y="270.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (300 samples, 3.80%)</title><rect x="608.3" y="243.0" width="44.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="611.3" y="254.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (300 samples, 3.80%)</title><rect x="608.3" y="227.0" width="44.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="611.3" y="238.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (299 samples, 3.79%)</title><rect x="608.5" y="211.0" width="44.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="611.5" y="222.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (299 samples, 3.79%)</title><rect x="608.5" y="195.0" width="44.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="611.5" y="206.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (299 samples, 3.79%)</title><rect x="608.5" y="179.0" width="44.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.5" y="190.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (172 samples, 2.18%)</title><rect x="608.5" y="163.0" width="25.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="611.5" y="174.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (89 samples, 1.13%)</title><rect x="608.5" y="147.0" width="13.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="611.5" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (83 samples, 1.05%)</title><rect x="621.8" y="147.0" width="12.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.8" y="158.0"></text>
</g>
<g>
<title>byte[] (83 samples, 1.05%)</title><rect x="621.8" y="131.0" width="12.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="624.8" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (80 samples, 1.01%)</title><rect x="634.2" y="163.0" width="12.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.2" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (80 samples, 1.01%)</title><rect x="634.2" y="147.0" width="12.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="637.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (47 samples, 0.60%)</title><rect x="646.2" y="163.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="649.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (47 samples, 0.60%)</title><rect x="646.2" y="147.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.2" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (47 samples, 0.60%)</title><rect x="646.2" y="131.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.2" y="142.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.60%)</title><rect x="646.2" y="115.0" width="7.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="649.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (22 samples, 0.28%)</title><rect x="653.2" y="291.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="656.2" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.03%)</title><rect x="653.2" y="275.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="656.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (20 samples, 0.25%)</title><rect x="653.5" y="275.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="656.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (20 samples, 0.25%)</title><rect x="653.5" y="259.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="656.5" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (7 samples, 0.09%)</title><rect x="653.5" y="243.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (7 samples, 0.09%)</title><rect x="653.5" y="227.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="656.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (7 samples, 0.09%)</title><rect x="653.5" y="211.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="656.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.09%)</title><rect x="653.5" y="195.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="656.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.09%)</title><rect x="653.5" y="179.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.09%)</title><rect x="653.5" y="163.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="656.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.09%)</title><rect x="653.5" y="147.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="656.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (7 samples, 0.09%)</title><rect x="653.5" y="131.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="656.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (7 samples, 0.09%)</title><rect x="653.5" y="115.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="656.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (7 samples, 0.09%)</title><rect x="653.5" y="99.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="656.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="653.5" y="83.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="656.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="653.5" y="67.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="656.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.06%)</title><rect x="653.8" y="83.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="656.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.06%)</title><rect x="653.8" y="67.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="656.8" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (13 samples, 0.16%)</title><rect x="654.5" y="243.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="657.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (13 samples, 0.16%)</title><rect x="654.5" y="227.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="657.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (13 samples, 0.16%)</title><rect x="654.5" y="211.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="657.5" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (13 samples, 0.16%)</title><rect x="654.5" y="195.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.16%)</title><rect x="654.5" y="179.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="657.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.16%)</title><rect x="654.5" y="163.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (12 samples, 0.15%)</title><rect x="654.5" y="147.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (12 samples, 0.15%)</title><rect x="654.5" y="131.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (12 samples, 0.15%)</title><rect x="654.5" y="115.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="657.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (12 samples, 0.15%)</title><rect x="654.5" y="99.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="657.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.04%)</title><rect x="654.5" y="83.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.5" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="654.5" y="67.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.5" y="78.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="654.5" y="51.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="657.5" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.10%)</title><rect x="655.0" y="83.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="658.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.10%)</title><rect x="655.0" y="67.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="658.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (6 samples, 0.08%)</title><rect x="656.5" y="307.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="659.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (2 samples, 0.03%)</title><rect x="656.5" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="659.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (2 samples, 0.03%)</title><rect x="656.5" y="275.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="659.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.04%)</title><rect x="656.9" y="291.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.04%)</title><rect x="656.9" y="275.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="659.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.04%)</title><rect x="656.9" y="259.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.9" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (3 samples, 0.04%)</title><rect x="656.9" y="243.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="659.9" y="254.0"></text>
</g>
<g>
<title>[pool-3-thread-2 tid=53020] (510 samples, 6.47%)</title><rect x="657.5" y="451.0" width="76.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="660.5" y="462.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (510 samples, 6.47%)</title><rect x="657.5" y="435.0" width="76.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.5" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (510 samples, 6.47%)</title><rect x="657.5" y="419.0" width="76.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="660.5" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (510 samples, 6.47%)</title><rect x="657.5" y="403.0" width="76.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.5" y="414.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.run (510 samples, 6.47%)</title><rect x="657.5" y="387.0" width="76.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.5" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (510 samples, 6.47%)</title><rect x="657.5" y="371.0" width="76.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="660.5" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.04%)</title><rect x="657.5" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="660.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.04%)</title><rect x="657.5" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="657.5" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.5" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="657.5" y="307.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.5" y="318.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="657.5" y="291.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="660.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (506 samples, 6.42%)</title><rect x="658.0" y="355.0" width="75.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.0" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (78 samples, 0.99%)</title><rect x="658.0" y="339.0" width="11.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="661.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (78 samples, 0.99%)</title><rect x="658.0" y="323.0" width="11.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="661.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (78 samples, 0.99%)</title><rect x="658.0" y="307.0" width="11.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="661.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (78 samples, 0.99%)</title><rect x="658.0" y="291.0" width="11.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="661.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (78 samples, 0.99%)</title><rect x="658.0" y="275.0" width="11.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (61 samples, 0.77%)</title><rect x="658.0" y="259.0" width="9.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.0" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (18 samples, 0.23%)</title><rect x="658.0" y="243.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (18 samples, 0.23%)</title><rect x="658.0" y="227.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="661.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (18 samples, 0.23%)</title><rect x="658.0" y="211.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (18 samples, 0.23%)</title><rect x="658.0" y="195.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (18 samples, 0.23%)</title><rect x="658.0" y="179.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (18 samples, 0.23%)</title><rect x="658.0" y="163.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="661.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (18 samples, 0.23%)</title><rect x="658.0" y="147.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="661.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (18 samples, 0.23%)</title><rect x="658.0" y="131.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (18 samples, 0.23%)</title><rect x="658.0" y="115.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="661.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (18 samples, 0.23%)</title><rect x="658.0" y="99.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.0" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.10%)</title><rect x="658.0" y="83.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.10%)</title><rect x="658.0" y="67.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="661.0" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.10%)</title><rect x="659.2" y="83.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="662.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.10%)</title><rect x="659.2" y="67.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="662.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="660.4" y="83.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="660.4" y="67.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="660.4" y="51.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="663.4" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (43 samples, 0.55%)</title><rect x="660.7" y="243.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (43 samples, 0.55%)</title><rect x="660.7" y="227.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (43 samples, 0.55%)</title><rect x="660.7" y="211.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="663.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (43 samples, 0.55%)</title><rect x="660.7" y="195.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="663.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (43 samples, 0.55%)</title><rect x="660.7" y="179.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (43 samples, 0.55%)</title><rect x="660.7" y="163.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (32 samples, 0.41%)</title><rect x="660.7" y="147.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="663.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (31 samples, 0.39%)</title><rect x="660.8" y="131.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="663.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (31 samples, 0.39%)</title><rect x="660.8" y="115.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (31 samples, 0.39%)</title><rect x="660.8" y="99.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.8" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.09%)</title><rect x="660.8" y="83.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="663.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="660.8" y="67.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="663.8" y="78.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="660.8" y="51.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="663.8" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (15 samples, 0.19%)</title><rect x="661.9" y="83.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="664.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.19%)</title><rect x="661.9" y="67.0" width="2.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="664.9" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (2 samples, 0.03%)</title><rect x="664.3" y="83.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="667.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (6 samples, 0.08%)</title><rect x="664.6" y="83.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="667.6" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.08%)</title><rect x="664.6" y="67.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="667.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.08%)</title><rect x="664.6" y="51.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="667.6" y="62.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="664.6" y="35.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="667.6" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (11 samples, 0.14%)</title><rect x="665.5" y="147.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="668.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (11 samples, 0.14%)</title><rect x="665.5" y="131.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="668.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (11 samples, 0.14%)</title><rect x="665.5" y="115.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="668.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (11 samples, 0.14%)</title><rect x="665.5" y="99.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="668.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (11 samples, 0.14%)</title><rect x="665.5" y="83.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="668.5" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.08%)</title><rect x="665.5" y="67.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="668.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.08%)</title><rect x="665.5" y="51.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="668.5" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.06%)</title><rect x="666.4" y="67.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.06%)</title><rect x="666.4" y="51.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="669.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$78/208007213.apply (17 samples, 0.22%)</title><rect x="667.1" y="259.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="670.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (17 samples, 0.22%)</title><rect x="667.1" y="243.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="670.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.10%)</title><rect x="667.1" y="227.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="670.1" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.10%)</title><rect x="667.1" y="211.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="670.1" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.10%)</title><rect x="668.3" y="227.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.3" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.10%)</title><rect x="668.3" y="211.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="671.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (2 samples, 0.03%)</title><rect x="669.6" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (2 samples, 0.03%)</title><rect x="669.6" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="672.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$91/885273156.apply (2 samples, 0.03%)</title><rect x="669.6" y="307.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="672.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (2 samples, 0.03%)</title><rect x="669.6" y="291.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="672.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (425 samples, 5.39%)</title><rect x="670.1" y="339.0" width="63.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="673.1" y="350.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (425 samples, 5.39%)</title><rect x="670.1" y="323.0" width="63.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.1" y="334.0">ru/mail..</text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="670.1" y="307.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="673.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (421 samples, 5.34%)</title><rect x="670.4" y="307.0" width="63.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.4" y="318.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (74 samples, 0.94%)</title><rect x="670.4" y="291.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="673.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (74 samples, 0.94%)</title><rect x="670.4" y="275.0" width="11.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="673.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.03%)</title><rect x="670.5" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="673.5" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.03%)</title><rect x="670.5" y="243.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="673.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (71 samples, 0.90%)</title><rect x="670.8" y="259.0" width="10.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="673.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (71 samples, 0.90%)</title><rect x="670.8" y="243.0" width="10.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="673.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (71 samples, 0.90%)</title><rect x="670.8" y="227.0" width="10.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (71 samples, 0.90%)</title><rect x="670.8" y="211.0" width="10.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="673.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (71 samples, 0.90%)</title><rect x="670.8" y="195.0" width="10.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="673.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (71 samples, 0.90%)</title><rect x="670.8" y="179.0" width="10.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="673.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (52 samples, 0.66%)</title><rect x="670.8" y="163.0" width="7.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="673.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (51 samples, 0.65%)</title><rect x="671.0" y="147.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (51 samples, 0.65%)</title><rect x="671.0" y="131.0" width="7.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="674.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (51 samples, 0.65%)</title><rect x="671.0" y="115.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.06%)</title><rect x="671.0" y="99.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="674.0" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="671.0" y="83.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="674.0" y="94.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.06%)</title><rect x="671.0" y="67.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="674.0" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (34 samples, 0.43%)</title><rect x="671.7" y="99.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="674.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (34 samples, 0.43%)</title><rect x="671.7" y="83.0" width="5.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="674.7" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (5 samples, 0.06%)</title><rect x="677.0" y="99.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="680.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (6 samples, 0.08%)</title><rect x="677.7" y="99.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="680.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.08%)</title><rect x="677.7" y="83.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.08%)</title><rect x="677.7" y="67.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="680.7" y="78.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="677.7" y="51.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="680.7" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (19 samples, 0.24%)</title><rect x="678.6" y="163.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="681.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (19 samples, 0.24%)</title><rect x="678.6" y="147.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="681.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (19 samples, 0.24%)</title><rect x="678.6" y="131.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="681.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (19 samples, 0.24%)</title><rect x="678.6" y="115.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="681.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (19 samples, 0.24%)</title><rect x="678.6" y="99.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="681.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.10%)</title><rect x="678.6" y="83.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.10%)</title><rect x="678.6" y="67.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="681.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.09%)</title><rect x="679.8" y="83.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.09%)</title><rect x="679.8" y="67.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="682.8" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.04%)</title><rect x="681.0" y="83.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="684.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.04%)</title><rect x="681.0" y="67.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="684.0" y="78.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (322 samples, 4.08%)</title><rect x="681.5" y="291.0" width="48.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="684.5" y="302.0">java..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (322 samples, 4.08%)</title><rect x="681.5" y="275.0" width="48.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.5" y="286.0">java..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.03%)</title><rect x="681.5" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.5" y="270.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (2 samples, 0.03%)</title><rect x="681.5" y="243.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="684.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$72/1983780967.accept (320 samples, 4.06%)</title><rect x="681.8" y="259.0" width="47.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="684.8" y="270.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (320 samples, 4.06%)</title><rect x="681.8" y="243.0" width="47.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="684.8" y="254.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (320 samples, 4.06%)</title><rect x="681.8" y="227.0" width="47.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.8" y="238.0">ru/m..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (3 samples, 0.04%)</title><rect x="681.8" y="211.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="684.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (317 samples, 4.02%)</title><rect x="682.2" y="211.0" width="47.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.2" y="222.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (317 samples, 4.02%)</title><rect x="682.2" y="195.0" width="47.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.2" y="206.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (317 samples, 4.02%)</title><rect x="682.2" y="179.0" width="47.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.2" y="190.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (175 samples, 2.22%)</title><rect x="682.2" y="163.0" width="26.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.2" y="174.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (84 samples, 1.07%)</title><rect x="682.2" y="147.0" width="12.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="685.2" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (91 samples, 1.15%)</title><rect x="694.8" y="147.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="697.8" y="158.0"></text>
</g>
<g>
<title>byte[] (91 samples, 1.15%)</title><rect x="694.8" y="131.0" width="13.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="697.8" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (93 samples, 1.18%)</title><rect x="708.4" y="163.0" width="13.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="711.4" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (93 samples, 1.18%)</title><rect x="708.4" y="147.0" width="13.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="711.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (49 samples, 0.62%)</title><rect x="722.3" y="163.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="725.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (49 samples, 0.62%)</title><rect x="722.3" y="147.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.3" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (49 samples, 0.62%)</title><rect x="722.3" y="131.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="725.3" y="142.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.62%)</title><rect x="722.3" y="115.0" width="7.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="725.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (25 samples, 0.32%)</title><rect x="729.6" y="291.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (25 samples, 0.32%)</title><rect x="729.6" y="275.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="732.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (25 samples, 0.32%)</title><rect x="729.6" y="259.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="732.6" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (9 samples, 0.11%)</title><rect x="729.6" y="243.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="732.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (9 samples, 0.11%)</title><rect x="729.6" y="227.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="732.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (9 samples, 0.11%)</title><rect x="729.6" y="211.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="732.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.11%)</title><rect x="729.6" y="195.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="732.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.11%)</title><rect x="729.6" y="179.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.11%)</title><rect x="729.6" y="163.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.11%)</title><rect x="729.6" y="147.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (9 samples, 0.11%)</title><rect x="729.6" y="131.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="732.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (9 samples, 0.11%)</title><rect x="729.6" y="115.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="732.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (9 samples, 0.11%)</title><rect x="729.6" y="99.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.04%)</title><rect x="729.6" y="83.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.04%)</title><rect x="729.6" y="67.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="732.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.08%)</title><rect x="730.1" y="83.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="733.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.08%)</title><rect x="730.1" y="67.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="733.1" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (16 samples, 0.20%)</title><rect x="731.0" y="243.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="734.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (16 samples, 0.20%)</title><rect x="731.0" y="227.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (16 samples, 0.20%)</title><rect x="731.0" y="211.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (16 samples, 0.20%)</title><rect x="731.0" y="195.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.20%)</title><rect x="731.0" y="179.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="734.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.20%)</title><rect x="731.0" y="163.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (10 samples, 0.13%)</title><rect x="731.0" y="147.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (10 samples, 0.13%)</title><rect x="731.0" y="131.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="734.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (10 samples, 0.13%)</title><rect x="731.0" y="115.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="734.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (10 samples, 0.13%)</title><rect x="731.0" y="99.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.0" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.03%)</title><rect x="731.0" y="83.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="734.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="731.0" y="67.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.0" y="78.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="731.0" y="51.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="734.0" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.08%)</title><rect x="731.3" y="83.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.08%)</title><rect x="731.3" y="67.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="734.3" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.08%)</title><rect x="732.5" y="147.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="735.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.08%)</title><rect x="732.5" y="131.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (6 samples, 0.08%)</title><rect x="732.5" y="115.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="735.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (6 samples, 0.08%)</title><rect x="732.5" y="99.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (6 samples, 0.08%)</title><rect x="732.5" y="83.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="735.5" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.04%)</title><rect x="732.5" y="67.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.04%)</title><rect x="732.5" y="51.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="735.5" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.04%)</title><rect x="732.9" y="67.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="735.9" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.04%)</title><rect x="732.9" y="51.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="735.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (2 samples, 0.03%)</title><rect x="733.4" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="736.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (2 samples, 0.03%)</title><rect x="733.4" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.4" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (2 samples, 0.03%)</title><rect x="733.4" y="275.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="736.4" y="286.0"></text>
</g>
<g>
<title>[pool-3-thread-3 tid=53021] (509 samples, 6.45%)</title><rect x="733.8" y="451.0" width="76.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="736.8" y="462.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (509 samples, 6.45%)</title><rect x="733.8" y="435.0" width="76.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="736.8" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (509 samples, 6.45%)</title><rect x="733.8" y="419.0" width="76.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.8" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (509 samples, 6.45%)</title><rect x="733.8" y="403.0" width="76.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="736.8" y="414.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.run (508 samples, 6.44%)</title><rect x="734.0" y="387.0" width="76.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="737.0" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (508 samples, 6.44%)</title><rect x="734.0" y="371.0" width="76.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.0" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.06%)</title><rect x="734.0" y="355.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="737.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.06%)</title><rect x="734.0" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.04%)</title><rect x="734.0" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="737.0" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="734.0" y="307.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="737.0" y="318.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="734.0" y="291.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="737.0" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.03%)</title><rect x="734.4" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.4" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.03%)</title><rect x="734.4" y="307.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="737.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (3 samples, 0.04%)</title><rect x="734.7" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="737.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.03%)</title><rect x="734.9" y="339.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="737.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (498 samples, 6.31%)</title><rect x="735.2" y="355.0" width="74.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.2" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (81 samples, 1.03%)</title><rect x="735.2" y="339.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="738.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (81 samples, 1.03%)</title><rect x="735.2" y="323.0" width="12.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (81 samples, 1.03%)</title><rect x="735.2" y="307.0" width="12.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="738.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (81 samples, 1.03%)</title><rect x="735.2" y="291.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="738.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (81 samples, 1.03%)</title><rect x="735.2" y="275.0" width="12.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="738.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (66 samples, 0.84%)</title><rect x="735.2" y="259.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="738.2" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (24 samples, 0.30%)</title><rect x="735.2" y="243.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="738.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (24 samples, 0.30%)</title><rect x="735.2" y="227.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="738.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (24 samples, 0.30%)</title><rect x="735.2" y="211.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.2" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (24 samples, 0.30%)</title><rect x="735.2" y="195.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="738.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (24 samples, 0.30%)</title><rect x="735.2" y="179.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="738.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (24 samples, 0.30%)</title><rect x="735.2" y="163.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="738.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (24 samples, 0.30%)</title><rect x="735.2" y="147.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="738.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (24 samples, 0.30%)</title><rect x="735.2" y="131.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="738.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (24 samples, 0.30%)</title><rect x="735.2" y="115.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="738.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (24 samples, 0.30%)</title><rect x="735.2" y="99.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="738.2" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.15%)</title><rect x="735.2" y="83.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.15%)</title><rect x="735.2" y="67.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="738.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.14%)</title><rect x="737.0" y="83.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.14%)</title><rect x="737.0" y="67.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="740.0" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (42 samples, 0.53%)</title><rect x="738.8" y="243.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="741.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (42 samples, 0.53%)</title><rect x="738.8" y="227.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (42 samples, 0.53%)</title><rect x="738.8" y="211.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="741.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (42 samples, 0.53%)</title><rect x="738.8" y="195.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="741.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (42 samples, 0.53%)</title><rect x="738.8" y="179.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (42 samples, 0.53%)</title><rect x="738.8" y="163.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="741.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (35 samples, 0.44%)</title><rect x="738.8" y="147.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="741.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (35 samples, 0.44%)</title><rect x="738.8" y="131.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="741.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (35 samples, 0.44%)</title><rect x="738.8" y="115.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="741.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (35 samples, 0.44%)</title><rect x="738.8" y="99.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="741.8" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.10%)</title><rect x="738.8" y="83.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="741.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.10%)</title><rect x="738.8" y="67.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="741.8" y="78.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.10%)</title><rect x="738.8" y="51.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="741.8" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (21 samples, 0.27%)</title><rect x="740.0" y="83.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="743.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.27%)</title><rect x="740.0" y="67.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="743.0" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (4 samples, 0.05%)</title><rect x="743.1" y="83.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="746.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.03%)</title><rect x="743.7" y="83.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="746.7" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.03%)</title><rect x="743.7" y="67.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="746.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="743.7" y="51.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="746.7" y="62.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="743.7" y="35.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="746.7" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.09%)</title><rect x="744.0" y="147.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="747.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.09%)</title><rect x="744.0" y="131.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="747.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (7 samples, 0.09%)</title><rect x="744.0" y="115.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (7 samples, 0.09%)</title><rect x="744.0" y="99.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="747.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (7 samples, 0.09%)</title><rect x="744.0" y="83.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="747.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.09%)</title><rect x="744.0" y="67.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="747.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.09%)</title><rect x="744.0" y="51.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="747.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$78/208007213.apply (15 samples, 0.19%)</title><rect x="745.1" y="259.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (15 samples, 0.19%)</title><rect x="745.1" y="243.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="748.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.11%)</title><rect x="745.1" y="227.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="748.1" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.11%)</title><rect x="745.1" y="211.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="748.1" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.06%)</title><rect x="746.4" y="227.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="749.4" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.06%)</title><rect x="746.4" y="211.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="749.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.04%)</title><rect x="747.3" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.04%)</title><rect x="747.3" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="750.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$91/885273156.apply (3 samples, 0.04%)</title><rect x="747.3" y="307.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="750.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (3 samples, 0.04%)</title><rect x="747.3" y="291.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (3 samples, 0.04%)</title><rect x="747.3" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.3" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.04%)</title><rect x="747.3" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="750.3" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.04%)</title><rect x="747.3" y="243.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="750.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (3 samples, 0.04%)</title><rect x="747.7" y="339.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="750.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (3 samples, 0.04%)</title><rect x="747.7" y="323.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="750.7" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.04%)</title><rect x="747.7" y="307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.7" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.04%)</title><rect x="747.7" y="291.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="750.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (411 samples, 5.21%)</title><rect x="748.2" y="339.0" width="61.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="751.2" y="350.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (411 samples, 5.21%)</title><rect x="748.2" y="323.0" width="61.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.2" y="334.0">ru/mai..</text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.05%)</title><rect x="748.2" y="307.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="751.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (399 samples, 5.06%)</title><rect x="748.9" y="307.0" width="59.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.9" y="318.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (81 samples, 1.03%)</title><rect x="748.9" y="291.0" width="12.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="751.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (80 samples, 1.01%)</title><rect x="749.1" y="275.0" width="12.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="752.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.03%)</title><rect x="749.1" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="752.1" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.03%)</title><rect x="749.1" y="243.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="752.1" y="254.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (2 samples, 0.03%)</title><rect x="749.4" y="259.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="752.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (76 samples, 0.96%)</title><rect x="749.7" y="259.0" width="11.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="752.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (76 samples, 0.96%)</title><rect x="749.7" y="243.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="752.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (75 samples, 0.95%)</title><rect x="749.8" y="227.0" width="11.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="752.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (75 samples, 0.95%)</title><rect x="749.8" y="211.0" width="11.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (75 samples, 0.95%)</title><rect x="749.8" y="195.0" width="11.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="752.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (75 samples, 0.95%)</title><rect x="749.8" y="179.0" width="11.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (58 samples, 0.74%)</title><rect x="749.8" y="163.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="752.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (57 samples, 0.72%)</title><rect x="750.0" y="147.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="753.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (57 samples, 0.72%)</title><rect x="750.0" y="131.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="753.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (57 samples, 0.72%)</title><rect x="750.0" y="115.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="753.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.10%)</title><rect x="750.0" y="99.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="753.0" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.10%)</title><rect x="750.0" y="83.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="753.0" y="94.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.10%)</title><rect x="750.0" y="67.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="753.0" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (36 samples, 0.46%)</title><rect x="751.2" y="99.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 0.46%)</title><rect x="751.2" y="83.0" width="5.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="754.2" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (4 samples, 0.05%)</title><rect x="756.6" y="99.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="759.6" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (3 samples, 0.04%)</title><rect x="757.2" y="99.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="760.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (6 samples, 0.08%)</title><rect x="757.6" y="99.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="760.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.08%)</title><rect x="757.6" y="83.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="760.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.08%)</title><rect x="757.6" y="67.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="760.6" y="78.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="757.6" y="51.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="760.6" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (17 samples, 0.22%)</title><rect x="758.5" y="163.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (17 samples, 0.22%)</title><rect x="758.5" y="147.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="761.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (17 samples, 0.22%)</title><rect x="758.5" y="131.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="761.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (17 samples, 0.22%)</title><rect x="758.5" y="115.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="761.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (17 samples, 0.22%)</title><rect x="758.5" y="99.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.08%)</title><rect x="758.5" y="83.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="761.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.08%)</title><rect x="758.5" y="67.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="761.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 0.13%)</title><rect x="759.4" y="83.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="762.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.13%)</title><rect x="759.4" y="67.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="762.4" y="78.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (302 samples, 3.83%)</title><rect x="761.1" y="291.0" width="45.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="764.1" y="302.0">java..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (302 samples, 3.83%)</title><rect x="761.1" y="275.0" width="45.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="764.1" y="286.0">java..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$72/1983780967.accept (301 samples, 3.82%)</title><rect x="761.2" y="259.0" width="45.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="764.2" y="270.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (301 samples, 3.82%)</title><rect x="761.2" y="243.0" width="45.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="764.2" y="254.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (301 samples, 3.82%)</title><rect x="761.2" y="227.0" width="45.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="764.2" y="238.0">ru/m..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (2 samples, 0.03%)</title><rect x="761.2" y="211.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="764.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (299 samples, 3.79%)</title><rect x="761.5" y="211.0" width="44.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.5" y="222.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (299 samples, 3.79%)</title><rect x="761.5" y="195.0" width="44.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="764.5" y="206.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (299 samples, 3.79%)</title><rect x="761.5" y="179.0" width="44.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="764.5" y="190.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (172 samples, 2.18%)</title><rect x="761.5" y="163.0" width="25.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="764.5" y="174.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (92 samples, 1.17%)</title><rect x="761.5" y="147.0" width="13.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="764.5" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (80 samples, 1.01%)</title><rect x="775.3" y="147.0" width="11.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="778.3" y="158.0"></text>
</g>
<g>
<title>byte[] (80 samples, 1.01%)</title><rect x="775.3" y="131.0" width="11.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="778.3" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (88 samples, 1.12%)</title><rect x="787.2" y="163.0" width="13.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="790.2" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (88 samples, 1.12%)</title><rect x="787.2" y="147.0" width="13.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="790.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (39 samples, 0.49%)</title><rect x="800.4" y="163.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="803.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (39 samples, 0.49%)</title><rect x="800.4" y="147.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="803.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (39 samples, 0.49%)</title><rect x="800.4" y="131.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="803.4" y="142.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.49%)</title><rect x="800.4" y="115.0" width="5.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="803.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (15 samples, 0.19%)</title><rect x="806.4" y="291.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="809.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (14 samples, 0.18%)</title><rect x="806.5" y="275.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="809.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14 samples, 0.18%)</title><rect x="806.5" y="259.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="809.5" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.04%)</title><rect x="806.5" y="243.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.04%)</title><rect x="806.5" y="227.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.04%)</title><rect x="806.5" y="211.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="809.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.04%)</title><rect x="806.5" y="195.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.04%)</title><rect x="806.5" y="179.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.04%)</title><rect x="806.5" y="163.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.04%)</title><rect x="806.5" y="147.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="809.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.04%)</title><rect x="806.5" y="131.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="809.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.04%)</title><rect x="806.5" y="115.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (3 samples, 0.04%)</title><rect x="806.5" y="99.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="809.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="806.5" y="83.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="809.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="806.5" y="67.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="809.5" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (11 samples, 0.14%)</title><rect x="807.0" y="243.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="810.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (11 samples, 0.14%)</title><rect x="807.0" y="227.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="810.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (11 samples, 0.14%)</title><rect x="807.0" y="211.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="810.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (11 samples, 0.14%)</title><rect x="807.0" y="195.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="810.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.14%)</title><rect x="807.0" y="179.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="810.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.14%)</title><rect x="807.0" y="163.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="810.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (9 samples, 0.11%)</title><rect x="807.0" y="147.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="810.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (9 samples, 0.11%)</title><rect x="807.0" y="131.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="810.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (9 samples, 0.11%)</title><rect x="807.0" y="115.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="810.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (9 samples, 0.11%)</title><rect x="807.0" y="99.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="810.0" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.08%)</title><rect x="807.0" y="83.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="810.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.08%)</title><rect x="807.0" y="67.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="810.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3 samples, 0.04%)</title><rect x="807.9" y="83.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="810.9" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.04%)</title><rect x="807.9" y="67.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="810.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="807.9" y="51.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="810.9" y="62.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="807.9" y="35.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="810.9" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.03%)</title><rect x="808.3" y="147.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="811.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.03%)</title><rect x="808.3" y="131.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="811.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.03%)</title><rect x="808.3" y="115.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="811.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (2 samples, 0.03%)</title><rect x="808.3" y="99.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="811.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.03%)</title><rect x="808.3" y="83.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="811.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.03%)</title><rect x="808.3" y="67.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="811.3" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.03%)</title><rect x="808.3" y="51.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="811.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (7 samples, 0.09%)</title><rect x="808.6" y="307.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="811.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (2 samples, 0.03%)</title><rect x="808.6" y="291.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="811.6" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (2 samples, 0.03%)</title><rect x="808.6" y="275.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="811.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.06%)</title><rect x="808.9" y="291.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="811.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.06%)</title><rect x="808.9" y="275.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="811.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.06%)</title><rect x="808.9" y="259.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="811.9" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (5 samples, 0.06%)</title><rect x="808.9" y="243.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="811.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.toByteArray (2 samples, 0.03%)</title><rect x="809.7" y="355.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="812.7" y="366.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="809.7" y="339.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="812.7" y="350.0"></text>
</g>
<g>
<title>[pool-3-thread-4 tid=53022] (512 samples, 6.49%)</title><rect x="810.0" y="451.0" width="76.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="813.0" y="462.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (512 samples, 6.49%)</title><rect x="810.0" y="435.0" width="76.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.0" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (512 samples, 6.49%)</title><rect x="810.0" y="419.0" width="76.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="813.0" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (512 samples, 6.49%)</title><rect x="810.0" y="403.0" width="76.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="813.0" y="414.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.run (512 samples, 6.49%)</title><rect x="810.0" y="387.0" width="76.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="813.0" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (512 samples, 6.49%)</title><rect x="810.0" y="371.0" width="76.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.0" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.05%)</title><rect x="810.0" y="355.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="813.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.05%)</title><rect x="810.0" y="339.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="813.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.04%)</title><rect x="810.0" y="323.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="813.0" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="810.0" y="307.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.0" y="318.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="810.0" y="291.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="813.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (2 samples, 0.03%)</title><rect x="810.6" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.03%)</title><rect x="810.6" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (505 samples, 6.40%)</title><rect x="810.9" y="355.0" width="75.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="813.9" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (91 samples, 1.15%)</title><rect x="810.9" y="339.0" width="13.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="813.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (91 samples, 1.15%)</title><rect x="810.9" y="323.0" width="13.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="813.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (91 samples, 1.15%)</title><rect x="810.9" y="307.0" width="13.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (91 samples, 1.15%)</title><rect x="810.9" y="291.0" width="13.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="813.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (91 samples, 1.15%)</title><rect x="810.9" y="275.0" width="13.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="813.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (75 samples, 0.95%)</title><rect x="810.9" y="259.0" width="11.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.9" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (29 samples, 0.37%)</title><rect x="810.9" y="243.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="813.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (29 samples, 0.37%)</title><rect x="810.9" y="227.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="813.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (29 samples, 0.37%)</title><rect x="810.9" y="211.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="813.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (29 samples, 0.37%)</title><rect x="810.9" y="195.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="813.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (29 samples, 0.37%)</title><rect x="810.9" y="179.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="813.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (29 samples, 0.37%)</title><rect x="810.9" y="163.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="813.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (29 samples, 0.37%)</title><rect x="810.9" y="147.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="813.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (29 samples, 0.37%)</title><rect x="810.9" y="131.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="813.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (29 samples, 0.37%)</title><rect x="810.9" y="115.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (29 samples, 0.37%)</title><rect x="810.9" y="99.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="813.9" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.15%)</title><rect x="810.9" y="83.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="813.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.15%)</title><rect x="810.9" y="67.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="813.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (15 samples, 0.19%)</title><rect x="812.7" y="83.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="815.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.19%)</title><rect x="812.7" y="67.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="815.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="814.9" y="83.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="817.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="814.9" y="67.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="817.9" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (46 samples, 0.58%)</title><rect x="815.2" y="243.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="818.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (46 samples, 0.58%)</title><rect x="815.2" y="227.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="818.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (46 samples, 0.58%)</title><rect x="815.2" y="211.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="818.2" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (46 samples, 0.58%)</title><rect x="815.2" y="195.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="818.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (46 samples, 0.58%)</title><rect x="815.2" y="179.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="818.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (46 samples, 0.58%)</title><rect x="815.2" y="163.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="818.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (41 samples, 0.52%)</title><rect x="815.2" y="147.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="818.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (41 samples, 0.52%)</title><rect x="815.2" y="131.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="818.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (41 samples, 0.52%)</title><rect x="815.2" y="115.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="818.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (41 samples, 0.52%)</title><rect x="815.2" y="99.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.10%)</title><rect x="815.2" y="83.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="818.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.10%)</title><rect x="815.2" y="67.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="818.2" y="78.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.10%)</title><rect x="815.2" y="51.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="818.2" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (27 samples, 0.34%)</title><rect x="816.4" y="83.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="819.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.34%)</title><rect x="816.4" y="67.0" width="4.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="819.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.05%)</title><rect x="820.8" y="83.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.8" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.05%)</title><rect x="820.8" y="67.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="823.8" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="820.8" y="51.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="823.8" y="62.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="820.8" y="35.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="823.8" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.06%)</title><rect x="821.4" y="147.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="824.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.06%)</title><rect x="821.4" y="131.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="824.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (5 samples, 0.06%)</title><rect x="821.4" y="115.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (5 samples, 0.06%)</title><rect x="821.4" y="99.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="824.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (5 samples, 0.06%)</title><rect x="821.4" y="83.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="824.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.04%)</title><rect x="821.4" y="67.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="824.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.04%)</title><rect x="821.4" y="51.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="824.4" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.03%)</title><rect x="821.8" y="67.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.03%)</title><rect x="821.8" y="51.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="824.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$78/208007213.apply (16 samples, 0.20%)</title><rect x="822.1" y="259.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="825.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (16 samples, 0.20%)</title><rect x="822.1" y="243.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="825.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.11%)</title><rect x="822.1" y="227.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="825.1" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.11%)</title><rect x="822.1" y="211.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="825.1" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.08%)</title><rect x="823.4" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.4" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.08%)</title><rect x="823.4" y="211.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="826.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (4 samples, 0.05%)</title><rect x="824.5" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="827.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (4 samples, 0.05%)</title><rect x="824.5" y="323.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="827.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$91/885273156.apply (4 samples, 0.05%)</title><rect x="824.5" y="307.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="827.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (4 samples, 0.05%)</title><rect x="824.5" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="827.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (4 samples, 0.05%)</title><rect x="824.5" y="275.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="827.5" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.04%)</title><rect x="824.5" y="259.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="827.5" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.04%)</title><rect x="824.5" y="243.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="827.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (409 samples, 5.19%)</title><rect x="825.2" y="339.0" width="61.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.2" y="350.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (409 samples, 5.19%)</title><rect x="825.2" y="323.0" width="61.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="828.2" y="334.0">ru/mai..</text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.04%)</title><rect x="825.4" y="307.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="828.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (400 samples, 5.07%)</title><rect x="826.1" y="307.0" width="59.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.1" y="318.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (89 samples, 1.13%)</title><rect x="826.1" y="291.0" width="13.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="829.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (88 samples, 1.12%)</title><rect x="826.3" y="275.0" width="13.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="829.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.06%)</title><rect x="826.3" y="259.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="829.3" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.06%)</title><rect x="826.3" y="243.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="829.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (82 samples, 1.04%)</title><rect x="827.2" y="259.0" width="12.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.2" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (82 samples, 1.04%)</title><rect x="827.2" y="243.0" width="12.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="830.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (81 samples, 1.03%)</title><rect x="827.3" y="227.0" width="12.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="830.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (81 samples, 1.03%)</title><rect x="827.3" y="211.0" width="12.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="830.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (81 samples, 1.03%)</title><rect x="827.3" y="195.0" width="12.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (81 samples, 1.03%)</title><rect x="827.3" y="179.0" width="12.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (60 samples, 0.76%)</title><rect x="827.3" y="163.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="830.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.04%)</title><rect x="827.3" y="147.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="830.3" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.04%)</title><rect x="827.3" y="131.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="830.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$65/714876873.apply (3 samples, 0.04%)</title><rect x="827.3" y="115.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="830.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (3 samples, 0.04%)</title><rect x="827.3" y="99.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="830.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="827.3" y="83.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="830.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="827.3" y="67.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="830.3" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="827.3" y="51.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="830.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (57 samples, 0.72%)</title><rect x="827.8" y="147.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="830.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (57 samples, 0.72%)</title><rect x="827.8" y="131.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="830.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (57 samples, 0.72%)</title><rect x="827.8" y="115.0" width="8.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (13 samples, 0.16%)</title><rect x="827.8" y="99.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="830.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.16%)</title><rect x="827.8" y="83.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.8" y="94.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.16%)</title><rect x="827.8" y="67.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="830.8" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (31 samples, 0.39%)</title><rect x="829.7" y="99.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="832.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (31 samples, 0.39%)</title><rect x="829.7" y="83.0" width="4.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="832.7" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (6 samples, 0.08%)</title><rect x="834.4" y="99.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="837.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (6 samples, 0.08%)</title><rect x="835.4" y="99.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="838.4" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.08%)</title><rect x="835.4" y="83.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="838.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.08%)</title><rect x="835.4" y="67.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="838.4" y="78.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.08%)</title><rect x="835.4" y="51.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="838.4" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (21 samples, 0.27%)</title><rect x="836.3" y="163.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="839.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (21 samples, 0.27%)</title><rect x="836.3" y="147.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (21 samples, 0.27%)</title><rect x="836.3" y="131.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="839.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (21 samples, 0.27%)</title><rect x="836.3" y="115.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="839.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (21 samples, 0.27%)</title><rect x="836.3" y="99.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="839.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.08%)</title><rect x="836.3" y="83.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="839.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.08%)</title><rect x="836.3" y="67.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="839.3" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 0.13%)</title><rect x="837.2" y="83.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="840.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.13%)</title><rect x="837.2" y="67.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="840.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.05%)</title><rect x="838.9" y="83.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="841.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.05%)</title><rect x="838.9" y="67.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="841.9" y="78.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (298 samples, 3.78%)</title><rect x="839.5" y="291.0" width="44.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="842.5" y="302.0">java..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (298 samples, 3.78%)</title><rect x="839.5" y="275.0" width="44.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="842.5" y="286.0">java..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.03%)</title><rect x="839.5" y="259.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="842.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$72/1983780967.accept (296 samples, 3.75%)</title><rect x="839.8" y="259.0" width="44.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.8" y="270.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (296 samples, 3.75%)</title><rect x="839.8" y="243.0" width="44.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="842.8" y="254.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (296 samples, 3.75%)</title><rect x="839.8" y="227.0" width="44.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="842.8" y="238.0">ru/m..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (2 samples, 0.03%)</title><rect x="839.8" y="211.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="842.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (294 samples, 3.73%)</title><rect x="840.1" y="211.0" width="43.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="843.1" y="222.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (294 samples, 3.73%)</title><rect x="840.1" y="195.0" width="43.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="843.1" y="206.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (294 samples, 3.73%)</title><rect x="840.1" y="179.0" width="43.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.1" y="190.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (172 samples, 2.18%)</title><rect x="840.1" y="163.0" width="25.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.1" y="174.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (79 samples, 1.00%)</title><rect x="840.1" y="147.0" width="11.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="843.1" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (93 samples, 1.18%)</title><rect x="851.9" y="147.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="854.9" y="158.0"></text>
</g>
<g>
<title>byte[] (93 samples, 1.18%)</title><rect x="851.9" y="131.0" width="13.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="854.9" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (84 samples, 1.07%)</title><rect x="865.8" y="163.0" width="12.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="868.8" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (84 samples, 1.07%)</title><rect x="865.8" y="147.0" width="12.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="868.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (38 samples, 0.48%)</title><rect x="878.4" y="163.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="881.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (38 samples, 0.48%)</title><rect x="878.4" y="147.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="881.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (38 samples, 0.48%)</title><rect x="878.4" y="131.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="881.4" y="142.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.48%)</title><rect x="878.4" y="115.0" width="5.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="881.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (13 samples, 0.16%)</title><rect x="884.0" y="291.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="887.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (13 samples, 0.16%)</title><rect x="884.0" y="275.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.16%)</title><rect x="884.0" y="259.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="887.0" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (4 samples, 0.05%)</title><rect x="884.0" y="243.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="887.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (4 samples, 0.05%)</title><rect x="884.0" y="227.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (4 samples, 0.05%)</title><rect x="884.0" y="211.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="887.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.05%)</title><rect x="884.0" y="195.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="887.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.05%)</title><rect x="884.0" y="179.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="887.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.05%)</title><rect x="884.0" y="163.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.05%)</title><rect x="884.0" y="147.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.05%)</title><rect x="884.0" y="131.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="887.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.05%)</title><rect x="884.0" y="115.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="887.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (4 samples, 0.05%)</title><rect x="884.0" y="99.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="887.0" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.04%)</title><rect x="884.2" y="83.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="887.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.04%)</title><rect x="884.2" y="67.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="887.2" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (9 samples, 0.11%)</title><rect x="884.6" y="243.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (9 samples, 0.11%)</title><rect x="884.6" y="227.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (9 samples, 0.11%)</title><rect x="884.6" y="211.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="887.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (9 samples, 0.11%)</title><rect x="884.6" y="195.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.11%)</title><rect x="884.6" y="179.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="887.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.11%)</title><rect x="884.6" y="163.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (8 samples, 0.10%)</title><rect x="884.6" y="147.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (8 samples, 0.10%)</title><rect x="884.6" y="131.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="887.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (8 samples, 0.10%)</title><rect x="884.6" y="115.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (8 samples, 0.10%)</title><rect x="884.6" y="99.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="887.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.06%)</title><rect x="884.6" y="83.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="887.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.06%)</title><rect x="884.6" y="67.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="887.6" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (2 samples, 0.03%)</title><rect x="885.4" y="83.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="888.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (3 samples, 0.04%)</title><rect x="886.0" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="889.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.03%)</title><rect x="886.1" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="889.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.03%)</title><rect x="886.1" y="275.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.03%)</title><rect x="886.1" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (2 samples, 0.03%)</title><rect x="886.1" y="243.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="889.1" y="254.0"></text>
</g>
<g>
<title>[pool-3-thread-5 tid=53023] (514 samples, 6.52%)</title><rect x="886.6" y="451.0" width="76.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="889.6" y="462.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (514 samples, 6.52%)</title><rect x="886.6" y="435.0" width="76.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="889.6" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (514 samples, 6.52%)</title><rect x="886.6" y="419.0" width="76.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="889.6" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (514 samples, 6.52%)</title><rect x="886.6" y="403.0" width="76.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.6" y="414.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.run (514 samples, 6.52%)</title><rect x="886.6" y="387.0" width="76.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="889.6" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (514 samples, 6.52%)</title><rect x="886.6" y="371.0" width="76.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="889.6" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.05%)</title><rect x="886.6" y="355.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.05%)</title><rect x="886.6" y="339.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="889.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.04%)</title><rect x="886.6" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="889.6" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="886.6" y="307.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="889.6" y="318.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="886.6" y="291.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="889.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (6 samples, 0.08%)</title><rect x="887.2" y="355.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="890.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.08%)</title><rect x="887.2" y="339.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="890.2" y="350.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="887.2" y="323.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="890.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="887.8" y="323.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="890.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (502 samples, 6.36%)</title><rect x="888.1" y="355.0" width="75.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="891.1" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (76 samples, 0.96%)</title><rect x="888.1" y="339.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="891.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (76 samples, 0.96%)</title><rect x="888.1" y="323.0" width="11.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="891.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (76 samples, 0.96%)</title><rect x="888.1" y="307.0" width="11.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="891.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (76 samples, 0.96%)</title><rect x="888.1" y="291.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="891.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (76 samples, 0.96%)</title><rect x="888.1" y="275.0" width="11.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="891.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (61 samples, 0.77%)</title><rect x="888.1" y="259.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="891.1" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (23 samples, 0.29%)</title><rect x="888.1" y="243.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="891.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (23 samples, 0.29%)</title><rect x="888.1" y="227.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="891.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (23 samples, 0.29%)</title><rect x="888.1" y="211.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="891.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (23 samples, 0.29%)</title><rect x="888.1" y="195.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="891.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (23 samples, 0.29%)</title><rect x="888.1" y="179.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="891.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (23 samples, 0.29%)</title><rect x="888.1" y="163.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="891.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (23 samples, 0.29%)</title><rect x="888.1" y="147.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="891.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (23 samples, 0.29%)</title><rect x="888.1" y="131.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="891.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (23 samples, 0.29%)</title><rect x="888.1" y="115.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="891.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (23 samples, 0.29%)</title><rect x="888.1" y="99.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="891.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.11%)</title><rect x="888.1" y="83.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="891.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.11%)</title><rect x="888.1" y="67.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="891.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.14%)</title><rect x="889.4" y="83.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="892.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.14%)</title><rect x="889.4" y="67.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="892.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="891.2" y="83.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="894.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="891.2" y="67.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="894.2" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (38 samples, 0.48%)</title><rect x="891.5" y="243.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="894.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (38 samples, 0.48%)</title><rect x="891.5" y="227.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="894.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (38 samples, 0.48%)</title><rect x="891.5" y="211.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="894.5" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (38 samples, 0.48%)</title><rect x="891.5" y="195.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="894.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (38 samples, 0.48%)</title><rect x="891.5" y="179.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="894.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (38 samples, 0.48%)</title><rect x="891.5" y="163.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (30 samples, 0.38%)</title><rect x="891.5" y="147.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="894.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (29 samples, 0.37%)</title><rect x="891.7" y="131.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="894.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (29 samples, 0.37%)</title><rect x="891.7" y="115.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="894.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (29 samples, 0.37%)</title><rect x="891.7" y="99.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="894.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.05%)</title><rect x="891.7" y="83.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="894.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="891.7" y="67.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="894.7" y="78.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="891.7" y="51.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="894.7" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (20 samples, 0.25%)</title><rect x="892.3" y="83.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="895.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.25%)</title><rect x="892.3" y="67.0" width="3.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="895.3" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (2 samples, 0.03%)</title><rect x="895.3" y="83.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="898.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (2 samples, 0.03%)</title><rect x="895.7" y="83.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.7" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.03%)</title><rect x="895.7" y="67.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="898.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="895.7" y="51.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="898.7" y="62.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="895.7" y="35.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="898.7" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (8 samples, 0.10%)</title><rect x="896.0" y="147.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="899.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (8 samples, 0.10%)</title><rect x="896.0" y="131.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (8 samples, 0.10%)</title><rect x="896.0" y="115.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="899.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (8 samples, 0.10%)</title><rect x="896.0" y="99.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="899.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (8 samples, 0.10%)</title><rect x="896.0" y="83.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="899.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.05%)</title><rect x="896.0" y="67.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="899.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.05%)</title><rect x="896.0" y="51.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="899.0" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.05%)</title><rect x="896.6" y="67.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="899.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.05%)</title><rect x="896.6" y="51.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="899.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$78/208007213.apply (15 samples, 0.19%)</title><rect x="897.2" y="259.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="900.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (15 samples, 0.19%)</title><rect x="897.2" y="243.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="900.2" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.08%)</title><rect x="897.2" y="227.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="900.2" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.08%)</title><rect x="897.2" y="211.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="900.2" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.09%)</title><rect x="898.1" y="227.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="901.1" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.09%)</title><rect x="898.1" y="211.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="901.1" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="899.2" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="902.2" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="899.2" y="211.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="902.2" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.04%)</title><rect x="899.5" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="902.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.04%)</title><rect x="899.5" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="902.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$91/885273156.apply (3 samples, 0.04%)</title><rect x="899.5" y="307.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="902.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (3 samples, 0.04%)</title><rect x="899.5" y="291.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="902.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.03%)</title><rect x="899.6" y="275.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="902.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (3 samples, 0.04%)</title><rect x="900.0" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="903.0" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.04%)</title><rect x="900.0" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="903.0" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.04%)</title><rect x="900.0" y="307.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="903.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (419 samples, 5.31%)</title><rect x="900.5" y="339.0" width="62.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="903.5" y="350.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (419 samples, 5.31%)</title><rect x="900.5" y="323.0" width="62.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="903.5" y="334.0">ru/mai..</text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.05%)</title><rect x="900.5" y="307.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="903.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (413 samples, 5.24%)</title><rect x="901.4" y="307.0" width="61.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="904.4" y="318.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (75 samples, 0.95%)</title><rect x="901.4" y="291.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="904.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (75 samples, 0.95%)</title><rect x="901.4" y="275.0" width="11.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="904.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (8 samples, 0.10%)</title><rect x="901.4" y="259.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="904.4" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (8 samples, 0.10%)</title><rect x="901.4" y="243.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="904.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (67 samples, 0.85%)</title><rect x="902.6" y="259.0" width="10.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="905.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (67 samples, 0.85%)</title><rect x="902.6" y="243.0" width="10.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (67 samples, 0.85%)</title><rect x="902.6" y="227.0" width="10.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="905.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (67 samples, 0.85%)</title><rect x="902.6" y="211.0" width="10.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="905.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (67 samples, 0.85%)</title><rect x="902.6" y="195.0" width="10.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="905.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (67 samples, 0.85%)</title><rect x="902.6" y="179.0" width="10.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (55 samples, 0.70%)</title><rect x="902.6" y="163.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (54 samples, 0.68%)</title><rect x="902.7" y="147.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="905.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (54 samples, 0.68%)</title><rect x="902.7" y="131.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (54 samples, 0.68%)</title><rect x="902.7" y="115.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="905.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.09%)</title><rect x="902.7" y="99.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="902.7" y="83.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="905.7" y="94.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="902.7" y="67.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="905.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (36 samples, 0.46%)</title><rect x="903.8" y="99.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="906.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 0.46%)</title><rect x="903.8" y="83.0" width="5.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="906.8" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (4 samples, 0.05%)</title><rect x="909.2" y="99.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="912.2" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (3 samples, 0.04%)</title><rect x="909.8" y="99.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="912.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.05%)</title><rect x="910.2" y="99.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="913.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.05%)</title><rect x="910.2" y="83.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="913.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="910.2" y="67.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="913.2" y="78.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="910.2" y="51.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="913.2" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (12 samples, 0.15%)</title><rect x="910.8" y="163.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="913.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (12 samples, 0.15%)</title><rect x="910.8" y="147.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="913.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (12 samples, 0.15%)</title><rect x="910.8" y="131.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="913.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (12 samples, 0.15%)</title><rect x="910.8" y="115.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="913.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (12 samples, 0.15%)</title><rect x="910.8" y="99.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="913.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.08%)</title><rect x="910.8" y="83.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="913.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.08%)</title><rect x="910.8" y="67.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="913.8" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.05%)</title><rect x="911.7" y="83.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="914.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.05%)</title><rect x="911.7" y="67.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="914.7" y="78.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (310 samples, 3.93%)</title><rect x="912.6" y="291.0" width="46.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="915.6" y="302.0">java..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (310 samples, 3.93%)</title><rect x="912.6" y="275.0" width="46.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.6" y="286.0">java..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$72/1983780967.accept (310 samples, 3.93%)</title><rect x="912.6" y="259.0" width="46.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="915.6" y="270.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (310 samples, 3.93%)</title><rect x="912.6" y="243.0" width="46.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.6" y="254.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (310 samples, 3.93%)</title><rect x="912.6" y="227.0" width="46.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="915.6" y="238.0">ru/m..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (2 samples, 0.03%)</title><rect x="912.6" y="211.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="915.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (308 samples, 3.91%)</title><rect x="912.9" y="211.0" width="46.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.9" y="222.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (308 samples, 3.91%)</title><rect x="912.9" y="195.0" width="46.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="915.9" y="206.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (308 samples, 3.91%)</title><rect x="912.9" y="179.0" width="46.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.9" y="190.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (178 samples, 2.26%)</title><rect x="912.9" y="163.0" width="26.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.9" y="174.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (86 samples, 1.09%)</title><rect x="912.9" y="147.0" width="12.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="915.9" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (92 samples, 1.17%)</title><rect x="925.8" y="147.0" width="13.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="928.8" y="158.0"></text>
</g>
<g>
<title>byte[] (92 samples, 1.17%)</title><rect x="925.8" y="131.0" width="13.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="928.8" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (91 samples, 1.15%)</title><rect x="939.5" y="163.0" width="13.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="942.5" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (91 samples, 1.15%)</title><rect x="939.5" y="147.0" width="13.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="942.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (39 samples, 0.49%)</title><rect x="953.2" y="163.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="956.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (39 samples, 0.49%)</title><rect x="953.2" y="147.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="956.2" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (39 samples, 0.49%)</title><rect x="953.2" y="131.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="956.2" y="142.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.49%)</title><rect x="953.2" y="115.0" width="5.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="956.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (28 samples, 0.36%)</title><rect x="959.0" y="291.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="962.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (27 samples, 0.34%)</title><rect x="959.1" y="275.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="962.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (27 samples, 0.34%)</title><rect x="959.1" y="259.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="962.1" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (10 samples, 0.13%)</title><rect x="959.1" y="243.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="962.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (10 samples, 0.13%)</title><rect x="959.1" y="227.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="962.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (10 samples, 0.13%)</title><rect x="959.1" y="211.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="962.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.13%)</title><rect x="959.1" y="195.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="962.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.13%)</title><rect x="959.1" y="179.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="962.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (10 samples, 0.13%)</title><rect x="959.1" y="163.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="962.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (10 samples, 0.13%)</title><rect x="959.1" y="147.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="962.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (10 samples, 0.13%)</title><rect x="959.1" y="131.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="962.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (10 samples, 0.13%)</title><rect x="959.1" y="115.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="962.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (10 samples, 0.13%)</title><rect x="959.1" y="99.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="962.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.06%)</title><rect x="959.1" y="83.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="962.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.06%)</title><rect x="959.1" y="67.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="962.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.06%)</title><rect x="959.9" y="83.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="962.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.06%)</title><rect x="959.9" y="67.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="962.9" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (17 samples, 0.22%)</title><rect x="960.6" y="243.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="963.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (17 samples, 0.22%)</title><rect x="960.6" y="227.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="963.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (17 samples, 0.22%)</title><rect x="960.6" y="211.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="963.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (17 samples, 0.22%)</title><rect x="960.6" y="195.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="963.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.22%)</title><rect x="960.6" y="179.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="963.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.22%)</title><rect x="960.6" y="163.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="963.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (14 samples, 0.18%)</title><rect x="960.6" y="147.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="963.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (14 samples, 0.18%)</title><rect x="960.6" y="131.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="963.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (14 samples, 0.18%)</title><rect x="960.6" y="115.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="963.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (14 samples, 0.18%)</title><rect x="960.6" y="99.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="963.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.03%)</title><rect x="960.6" y="83.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="963.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="960.6" y="67.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="963.6" y="78.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="960.6" y="51.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="963.6" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.14%)</title><rect x="960.9" y="83.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="963.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.14%)</title><rect x="960.9" y="67.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="963.9" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.04%)</title><rect x="962.7" y="147.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="965.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.04%)</title><rect x="962.7" y="131.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="965.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.04%)</title><rect x="962.7" y="115.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="965.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.04%)</title><rect x="962.7" y="99.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="965.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (3 samples, 0.04%)</title><rect x="962.7" y="83.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="962.7" y="67.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="965.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="962.7" y="51.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="965.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.toByteArray (2 samples, 0.03%)</title><rect x="963.2" y="355.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="966.2" y="366.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="963.2" y="339.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="966.2" y="350.0"></text>
</g>
<g>
<title>[pool-3-thread-6 tid=53024] (515 samples, 6.53%)</title><rect x="963.5" y="451.0" width="77.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="966.5" y="462.0">[pool-3-t..</text>
</g>
<g>
<title>java/lang/Thread.run (515 samples, 6.53%)</title><rect x="963.5" y="435.0" width="77.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="966.5" y="446.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (515 samples, 6.53%)</title><rect x="963.5" y="419.0" width="77.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="966.5" y="430.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (515 samples, 6.53%)</title><rect x="963.5" y="403.0" width="77.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="966.5" y="414.0">java/util..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.run (515 samples, 6.53%)</title><rect x="963.5" y="387.0" width="77.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="966.5" y="398.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (515 samples, 6.53%)</title><rect x="963.5" y="371.0" width="77.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="966.5" y="382.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/Response.ok (4 samples, 0.05%)</title><rect x="963.6" y="355.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="966.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.04%)</title><rect x="963.8" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="966.8" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.03%)</title><rect x="963.9" y="323.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="966.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (507 samples, 6.43%)</title><rect x="964.2" y="355.0" width="75.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="967.2" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (99 samples, 1.26%)</title><rect x="964.2" y="339.0" width="14.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (99 samples, 1.26%)</title><rect x="964.2" y="323.0" width="14.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="967.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (99 samples, 1.26%)</title><rect x="964.2" y="307.0" width="14.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (99 samples, 1.26%)</title><rect x="964.2" y="291.0" width="14.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="967.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (99 samples, 1.26%)</title><rect x="964.2" y="275.0" width="14.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="967.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (84 samples, 1.07%)</title><rect x="964.2" y="259.0" width="12.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.2" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (31 samples, 0.39%)</title><rect x="964.2" y="243.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="967.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (31 samples, 0.39%)</title><rect x="964.2" y="227.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="967.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (31 samples, 0.39%)</title><rect x="964.2" y="211.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="967.2" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (31 samples, 0.39%)</title><rect x="964.2" y="195.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="967.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (31 samples, 0.39%)</title><rect x="964.2" y="179.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="967.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (31 samples, 0.39%)</title><rect x="964.2" y="163.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="967.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (31 samples, 0.39%)</title><rect x="964.2" y="147.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="967.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (31 samples, 0.39%)</title><rect x="964.2" y="131.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="967.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (31 samples, 0.39%)</title><rect x="964.2" y="115.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (31 samples, 0.39%)</title><rect x="964.2" y="99.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="967.2" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.16%)</title><rect x="964.2" y="83.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.16%)</title><rect x="964.2" y="67.0" width="2.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="967.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (13 samples, 0.16%)</title><rect x="966.2" y="83.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="969.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.16%)</title><rect x="966.2" y="67.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="969.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="968.1" y="83.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="968.1" y="67.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="971.1" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="968.1" y="51.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="971.1" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.04%)</title><rect x="968.4" y="83.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="971.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.04%)</title><rect x="968.4" y="67.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="971.4" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (53 samples, 0.67%)</title><rect x="968.9" y="243.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="971.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (53 samples, 0.67%)</title><rect x="968.9" y="227.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="971.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (53 samples, 0.67%)</title><rect x="968.9" y="211.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (53 samples, 0.67%)</title><rect x="968.9" y="195.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="971.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (53 samples, 0.67%)</title><rect x="968.9" y="179.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="971.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (53 samples, 0.67%)</title><rect x="968.9" y="163.0" width="7.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="971.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (43 samples, 0.55%)</title><rect x="968.9" y="147.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="971.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (2 samples, 0.03%)</title><rect x="968.9" y="131.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="971.9" y="142.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (2 samples, 0.03%)</title><rect x="968.9" y="115.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$65/714876873.apply (2 samples, 0.03%)</title><rect x="968.9" y="99.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="971.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (2 samples, 0.03%)</title><rect x="968.9" y="83.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="971.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (41 samples, 0.52%)</title><rect x="969.2" y="131.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="972.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (41 samples, 0.52%)</title><rect x="969.2" y="115.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="972.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (41 samples, 0.52%)</title><rect x="969.2" y="99.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="972.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (12 samples, 0.15%)</title><rect x="969.2" y="83.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="972.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.15%)</title><rect x="969.2" y="67.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="972.2" y="78.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.15%)</title><rect x="969.2" y="51.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="972.2" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (26 samples, 0.33%)</title><rect x="971.0" y="83.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="974.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.33%)</title><rect x="971.0" y="67.0" width="3.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="974.0" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (10 samples, 0.13%)</title><rect x="975.3" y="147.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="978.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (10 samples, 0.13%)</title><rect x="975.3" y="131.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="978.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (10 samples, 0.13%)</title><rect x="975.3" y="115.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="978.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (10 samples, 0.13%)</title><rect x="975.3" y="99.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="978.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (10 samples, 0.13%)</title><rect x="975.3" y="83.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="978.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.05%)</title><rect x="975.3" y="67.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="978.3" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.05%)</title><rect x="975.3" y="51.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="978.3" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.08%)</title><rect x="975.9" y="67.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="978.9" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.08%)</title><rect x="975.9" y="51.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="978.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$78/208007213.apply (15 samples, 0.19%)</title><rect x="976.8" y="259.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="979.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (15 samples, 0.19%)</title><rect x="976.8" y="243.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="979.8" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.09%)</title><rect x="976.8" y="227.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="979.8" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.09%)</title><rect x="976.8" y="211.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="979.8" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.08%)</title><rect x="977.8" y="227.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="980.8" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.08%)</title><rect x="977.8" y="211.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="980.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (2 samples, 0.03%)</title><rect x="979.2" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="982.2" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="979.2" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="982.2" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="979.2" y="307.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="982.2" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="979.2" y="291.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="982.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (2 samples, 0.03%)</title><rect x="979.5" y="339.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="982.5" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="979.5" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="982.5" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="979.5" y="307.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="982.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (403 samples, 5.11%)</title><rect x="979.8" y="339.0" width="60.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="982.8" y="350.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (402 samples, 5.10%)</title><rect x="979.9" y="323.0" width="60.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="982.9" y="334.0">ru/mai..</text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="980.1" y="307.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="983.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="980.4" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="983.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="980.4" y="291.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="983.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (394 samples, 5.00%)</title><rect x="980.8" y="307.0" width="59.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="983.8" y="318.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (63 samples, 0.80%)</title><rect x="980.8" y="291.0" width="9.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="983.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (63 samples, 0.80%)</title><rect x="980.8" y="275.0" width="9.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="983.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (7 samples, 0.09%)</title><rect x="981.0" y="259.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="984.0" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (7 samples, 0.09%)</title><rect x="981.0" y="243.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="984.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (55 samples, 0.70%)</title><rect x="982.0" y="259.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="985.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (55 samples, 0.70%)</title><rect x="982.0" y="243.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="985.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (55 samples, 0.70%)</title><rect x="982.0" y="227.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="985.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (55 samples, 0.70%)</title><rect x="982.0" y="211.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="985.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (55 samples, 0.70%)</title><rect x="982.0" y="195.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="985.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (55 samples, 0.70%)</title><rect x="982.0" y="179.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="985.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (41 samples, 0.52%)</title><rect x="982.0" y="163.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="985.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (2 samples, 0.03%)</title><rect x="982.0" y="147.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="985.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (2 samples, 0.03%)</title><rect x="982.0" y="131.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="985.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$65/714876873.apply (2 samples, 0.03%)</title><rect x="982.0" y="115.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="985.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (2 samples, 0.03%)</title><rect x="982.0" y="99.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="985.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (39 samples, 0.49%)</title><rect x="982.3" y="147.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="985.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (39 samples, 0.49%)</title><rect x="982.3" y="131.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="985.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (39 samples, 0.49%)</title><rect x="982.3" y="115.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="985.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (13 samples, 0.16%)</title><rect x="982.3" y="99.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="985.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.16%)</title><rect x="982.3" y="83.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="985.3" y="94.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.16%)</title><rect x="982.3" y="67.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="985.3" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (21 samples, 0.27%)</title><rect x="984.3" y="99.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="987.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.27%)</title><rect x="984.3" y="83.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="987.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (4 samples, 0.05%)</title><rect x="987.6" y="99.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="990.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.05%)</title><rect x="987.6" y="83.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="990.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="987.6" y="67.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="990.6" y="78.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="987.6" y="51.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="990.6" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.18%)</title><rect x="988.2" y="163.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="991.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.18%)</title><rect x="988.2" y="147.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="991.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (14 samples, 0.18%)</title><rect x="988.2" y="131.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="991.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (14 samples, 0.18%)</title><rect x="988.2" y="115.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="991.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (14 samples, 0.18%)</title><rect x="988.2" y="99.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="991.2" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.09%)</title><rect x="988.2" y="83.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="991.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.09%)</title><rect x="988.2" y="67.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="991.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.06%)</title><rect x="989.5" y="83.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="992.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.06%)</title><rect x="989.5" y="67.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="992.5" y="78.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="990.3" y="291.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="993.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="990.3" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="993.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$72/1983780967.get$Lambda (3 samples, 0.04%)</title><rect x="990.3" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="993.3" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$72 (3 samples, 0.04%)</title><rect x="990.3" y="243.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="993.3" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (314 samples, 3.98%)</title><rect x="990.7" y="291.0" width="47.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="993.7" y="302.0">java..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (314 samples, 3.98%)</title><rect x="990.7" y="275.0" width="47.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="993.7" y="286.0">java..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$72/1983780967.accept (314 samples, 3.98%)</title><rect x="990.7" y="259.0" width="47.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="993.7" y="270.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (314 samples, 3.98%)</title><rect x="990.7" y="243.0" width="47.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="993.7" y="254.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (314 samples, 3.98%)</title><rect x="990.7" y="227.0" width="47.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="993.7" y="238.0">ru/m..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (2 samples, 0.03%)</title><rect x="990.7" y="211.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="993.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (312 samples, 3.96%)</title><rect x="991.0" y="211.0" width="46.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="994.0" y="222.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (312 samples, 3.96%)</title><rect x="991.0" y="195.0" width="46.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="994.0" y="206.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (312 samples, 3.96%)</title><rect x="991.0" y="179.0" width="46.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="994.0" y="190.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (180 samples, 2.28%)</title><rect x="991.0" y="163.0" width="26.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="994.0" y="174.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (78 samples, 0.99%)</title><rect x="991.0" y="147.0" width="11.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="994.0" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (102 samples, 1.29%)</title><rect x="1002.7" y="147.0" width="15.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1005.7" y="158.0"></text>
</g>
<g>
<title>byte[] (102 samples, 1.29%)</title><rect x="1002.7" y="131.0" width="15.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1005.7" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (93 samples, 1.18%)</title><rect x="1017.9" y="163.0" width="14.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1020.9" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (93 samples, 1.18%)</title><rect x="1017.9" y="147.0" width="14.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1020.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (39 samples, 0.49%)</title><rect x="1031.9" y="163.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1034.9" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (39 samples, 0.49%)</title><rect x="1031.9" y="147.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1034.9" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (39 samples, 0.49%)</title><rect x="1031.9" y="131.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1034.9" y="142.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.49%)</title><rect x="1031.9" y="115.0" width="5.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1034.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (14 samples, 0.18%)</title><rect x="1037.7" y="291.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1040.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (14 samples, 0.18%)</title><rect x="1037.7" y="275.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1040.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14 samples, 0.18%)</title><rect x="1037.7" y="259.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1040.7" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (6 samples, 0.08%)</title><rect x="1037.7" y="243.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1040.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (6 samples, 0.08%)</title><rect x="1037.7" y="227.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1040.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (6 samples, 0.08%)</title><rect x="1037.7" y="211.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1040.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.08%)</title><rect x="1037.7" y="195.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1040.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.08%)</title><rect x="1037.7" y="179.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1040.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.08%)</title><rect x="1037.7" y="163.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1040.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.08%)</title><rect x="1037.7" y="147.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1040.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (6 samples, 0.08%)</title><rect x="1037.7" y="131.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1040.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (6 samples, 0.08%)</title><rect x="1037.7" y="115.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1040.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (6 samples, 0.08%)</title><rect x="1037.7" y="99.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1040.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="1037.7" y="83.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1040.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="1037.7" y="67.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1040.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.05%)</title><rect x="1038.0" y="83.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1041.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.05%)</title><rect x="1038.0" y="67.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1041.0" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8 samples, 0.10%)</title><rect x="1038.6" y="243.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1041.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8 samples, 0.10%)</title><rect x="1038.6" y="227.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1041.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8 samples, 0.10%)</title><rect x="1038.6" y="211.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1041.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8 samples, 0.10%)</title><rect x="1038.6" y="195.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1041.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.10%)</title><rect x="1038.6" y="179.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1041.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.10%)</title><rect x="1038.6" y="163.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1041.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (7 samples, 0.09%)</title><rect x="1038.6" y="147.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1041.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.09%)</title><rect x="1038.6" y="131.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1041.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (7 samples, 0.09%)</title><rect x="1038.6" y="115.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1041.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (7 samples, 0.09%)</title><rect x="1038.6" y="99.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1041.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.08%)</title><rect x="1038.6" y="83.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1041.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.08%)</title><rect x="1038.6" y="67.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1041.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (2 samples, 0.03%)</title><rect x="1039.8" y="307.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1042.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.toByteArray (3 samples, 0.04%)</title><rect x="1040.1" y="355.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1043.1" y="366.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="1040.1" y="339.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1043.1" y="350.0"></text>
</g>
<g>
<title>[pool-3-thread-7 tid=53026] (491 samples, 6.23%)</title><rect x="1040.5" y="451.0" width="73.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1043.5" y="462.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (491 samples, 6.23%)</title><rect x="1040.5" y="435.0" width="73.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1043.5" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (491 samples, 6.23%)</title><rect x="1040.5" y="419.0" width="73.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1043.5" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (491 samples, 6.23%)</title><rect x="1040.5" y="403.0" width="73.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1043.5" y="414.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.run (491 samples, 6.23%)</title><rect x="1040.5" y="387.0" width="73.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1043.5" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (491 samples, 6.23%)</title><rect x="1040.5" y="371.0" width="73.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1043.5" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.08%)</title><rect x="1040.5" y="355.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1043.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.08%)</title><rect x="1040.5" y="339.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1043.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.06%)</title><rect x="1040.5" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1043.5" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1040.5" y="307.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1043.5" y="318.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.06%)</title><rect x="1040.5" y="291.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1043.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (2 samples, 0.03%)</title><rect x="1041.4" y="355.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1044.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (483 samples, 6.12%)</title><rect x="1041.7" y="355.0" width="72.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.7" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (90 samples, 1.14%)</title><rect x="1041.7" y="339.0" width="13.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1044.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (90 samples, 1.14%)</title><rect x="1041.7" y="323.0" width="13.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1044.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (90 samples, 1.14%)</title><rect x="1041.7" y="307.0" width="13.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1044.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (90 samples, 1.14%)</title><rect x="1041.7" y="291.0" width="13.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1044.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (90 samples, 1.14%)</title><rect x="1041.7" y="275.0" width="13.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1044.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (70 samples, 0.89%)</title><rect x="1041.7" y="259.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1044.7" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (23 samples, 0.29%)</title><rect x="1041.7" y="243.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1044.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (23 samples, 0.29%)</title><rect x="1041.7" y="227.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1044.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (23 samples, 0.29%)</title><rect x="1041.7" y="211.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1044.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (23 samples, 0.29%)</title><rect x="1041.7" y="195.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1044.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (23 samples, 0.29%)</title><rect x="1041.7" y="179.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1044.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (23 samples, 0.29%)</title><rect x="1041.7" y="163.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1044.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (23 samples, 0.29%)</title><rect x="1041.7" y="147.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1044.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (23 samples, 0.29%)</title><rect x="1041.7" y="131.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1044.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (23 samples, 0.29%)</title><rect x="1041.7" y="115.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1044.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (23 samples, 0.29%)</title><rect x="1041.7" y="99.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1044.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.15%)</title><rect x="1041.7" y="83.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1044.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.15%)</title><rect x="1041.7" y="67.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1044.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.10%)</title><rect x="1043.5" y="83.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1046.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.10%)</title><rect x="1043.5" y="67.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1046.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.04%)</title><rect x="1044.7" y="83.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1047.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.04%)</title><rect x="1044.7" y="67.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1047.7" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (47 samples, 0.60%)</title><rect x="1045.2" y="243.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1048.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (47 samples, 0.60%)</title><rect x="1045.2" y="227.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1048.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (47 samples, 0.60%)</title><rect x="1045.2" y="211.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1048.2" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (47 samples, 0.60%)</title><rect x="1045.2" y="195.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1048.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (47 samples, 0.60%)</title><rect x="1045.2" y="179.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1048.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (47 samples, 0.60%)</title><rect x="1045.2" y="163.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1048.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (37 samples, 0.47%)</title><rect x="1045.2" y="147.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1048.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.04%)</title><rect x="1045.2" y="131.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1048.2" y="142.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.04%)</title><rect x="1045.2" y="115.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1048.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$65/714876873.apply (3 samples, 0.04%)</title><rect x="1045.2" y="99.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1048.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (3 samples, 0.04%)</title><rect x="1045.2" y="83.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1048.2" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (2 samples, 0.03%)</title><rect x="1045.3" y="67.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1048.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (34 samples, 0.43%)</title><rect x="1045.6" y="131.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1048.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (34 samples, 0.43%)</title><rect x="1045.6" y="115.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (34 samples, 0.43%)</title><rect x="1045.6" y="99.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1048.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (9 samples, 0.11%)</title><rect x="1045.6" y="83.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1048.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.11%)</title><rect x="1045.6" y="67.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1048.6" y="78.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.11%)</title><rect x="1045.6" y="51.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1048.6" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (22 samples, 0.28%)</title><rect x="1047.0" y="83.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1050.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.28%)</title><rect x="1047.0" y="67.0" width="3.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1050.0" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (2 samples, 0.03%)</title><rect x="1050.3" y="83.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1053.3" y="94.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (10 samples, 0.13%)</title><rect x="1050.7" y="147.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1053.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (10 samples, 0.13%)</title><rect x="1050.7" y="131.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1053.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (10 samples, 0.13%)</title><rect x="1050.7" y="115.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1053.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (10 samples, 0.13%)</title><rect x="1050.7" y="99.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1053.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (10 samples, 0.13%)</title><rect x="1050.7" y="83.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1053.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.08%)</title><rect x="1050.7" y="67.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1053.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.08%)</title><rect x="1050.7" y="51.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1053.7" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.05%)</title><rect x="1051.6" y="67.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1054.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.05%)</title><rect x="1051.6" y="51.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1054.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$78/208007213.apply (20 samples, 0.25%)</title><rect x="1052.2" y="259.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1055.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (20 samples, 0.25%)</title><rect x="1052.2" y="243.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1055.2" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.08%)</title><rect x="1052.2" y="227.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1055.2" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.08%)</title><rect x="1052.2" y="211.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1055.2" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.11%)</title><rect x="1053.1" y="227.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1056.1" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.11%)</title><rect x="1053.1" y="211.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1056.1" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.05%)</title><rect x="1054.6" y="227.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1057.6" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.05%)</title><rect x="1054.6" y="211.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1057.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.04%)</title><rect x="1055.2" y="339.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1058.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.04%)</title><rect x="1055.2" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1058.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$91/885273156.apply (3 samples, 0.04%)</title><rect x="1055.2" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1058.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (3 samples, 0.04%)</title><rect x="1055.2" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1058.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (2 samples, 0.03%)</title><rect x="1055.3" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1058.3" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="1055.3" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1058.3" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="1055.3" y="243.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1058.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (2 samples, 0.03%)</title><rect x="1055.6" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1058.6" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="1055.6" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1058.6" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="1055.6" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1058.6" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="1055.6" y="291.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1058.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (2 samples, 0.03%)</title><rect x="1055.9" y="339.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1058.9" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="1055.9" y="323.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1058.9" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="1055.9" y="307.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1058.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (386 samples, 4.89%)</title><rect x="1056.2" y="339.0" width="57.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1059.2" y="350.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (386 samples, 4.89%)</title><rect x="1056.2" y="323.0" width="57.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1059.2" y="334.0">ru/mai..</text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.05%)</title><rect x="1056.2" y="307.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1059.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (377 samples, 4.78%)</title><rect x="1057.1" y="307.0" width="56.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1060.1" y="318.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (72 samples, 0.91%)</title><rect x="1057.1" y="291.0" width="10.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1060.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (71 samples, 0.90%)</title><rect x="1057.3" y="275.0" width="10.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1060.3" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.03%)</title><rect x="1057.3" y="259.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1060.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.05%)</title><rect x="1057.6" y="259.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1060.6" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.05%)</title><rect x="1057.6" y="243.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1060.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (64 samples, 0.81%)</title><rect x="1058.3" y="259.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1061.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (64 samples, 0.81%)</title><rect x="1058.3" y="243.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1061.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (64 samples, 0.81%)</title><rect x="1058.3" y="227.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1061.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (64 samples, 0.81%)</title><rect x="1058.3" y="211.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1061.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (64 samples, 0.81%)</title><rect x="1058.3" y="195.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1061.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (64 samples, 0.81%)</title><rect x="1058.3" y="179.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1061.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (50 samples, 0.63%)</title><rect x="1058.3" y="163.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1061.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (49 samples, 0.62%)</title><rect x="1058.5" y="147.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1061.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (49 samples, 0.62%)</title><rect x="1058.5" y="131.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1061.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (49 samples, 0.62%)</title><rect x="1058.5" y="115.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1061.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (15 samples, 0.19%)</title><rect x="1058.5" y="99.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1061.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (15 samples, 0.19%)</title><rect x="1058.5" y="83.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1061.5" y="94.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.19%)</title><rect x="1058.5" y="67.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1061.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (28 samples, 0.36%)</title><rect x="1060.7" y="99.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1063.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.36%)</title><rect x="1060.7" y="83.0" width="4.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1063.7" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (2 samples, 0.03%)</title><rect x="1064.9" y="99.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1067.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (3 samples, 0.04%)</title><rect x="1065.4" y="99.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1068.4" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.04%)</title><rect x="1065.4" y="83.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1068.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1065.4" y="67.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1068.4" y="78.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="1065.4" y="51.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1068.4" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.18%)</title><rect x="1065.8" y="163.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1068.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.18%)</title><rect x="1065.8" y="147.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1068.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (14 samples, 0.18%)</title><rect x="1065.8" y="131.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1068.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (14 samples, 0.18%)</title><rect x="1065.8" y="115.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1068.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (14 samples, 0.18%)</title><rect x="1065.8" y="99.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1068.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.04%)</title><rect x="1065.8" y="83.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1068.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.04%)</title><rect x="1065.8" y="67.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1068.8" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.08%)</title><rect x="1066.3" y="83.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1069.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.08%)</title><rect x="1066.3" y="67.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1069.3" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="1067.2" y="83.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1070.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="1067.2" y="67.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1070.2" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="1067.2" y="51.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1070.2" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.04%)</title><rect x="1067.5" y="83.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1070.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.04%)</title><rect x="1067.5" y="67.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1070.5" y="78.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (290 samples, 3.68%)</title><rect x="1067.9" y="291.0" width="43.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1070.9" y="302.0">java..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (290 samples, 3.68%)</title><rect x="1067.9" y="275.0" width="43.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1070.9" y="286.0">java..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.03%)</title><rect x="1067.9" y="259.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1070.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$72/1983780967.accept (288 samples, 3.65%)</title><rect x="1068.2" y="259.0" width="43.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1071.2" y="270.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (288 samples, 3.65%)</title><rect x="1068.2" y="243.0" width="43.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1071.2" y="254.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (288 samples, 3.65%)</title><rect x="1068.2" y="227.0" width="43.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1071.2" y="238.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (287 samples, 3.64%)</title><rect x="1068.4" y="211.0" width="42.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1071.4" y="222.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (287 samples, 3.64%)</title><rect x="1068.4" y="195.0" width="42.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1071.4" y="206.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (287 samples, 3.64%)</title><rect x="1068.4" y="179.0" width="42.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1071.4" y="190.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (166 samples, 2.10%)</title><rect x="1068.4" y="163.0" width="24.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1071.4" y="174.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (70 samples, 0.89%)</title><rect x="1068.4" y="147.0" width="10.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1071.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (96 samples, 1.22%)</title><rect x="1078.8" y="147.0" width="14.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1081.8" y="158.0"></text>
</g>
<g>
<title>byte[] (96 samples, 1.22%)</title><rect x="1078.8" y="131.0" width="14.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1081.8" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (81 samples, 1.03%)</title><rect x="1093.2" y="163.0" width="12.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1096.2" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (81 samples, 1.03%)</title><rect x="1093.2" y="147.0" width="12.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1096.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (40 samples, 0.51%)</title><rect x="1105.3" y="163.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1108.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (40 samples, 0.51%)</title><rect x="1105.3" y="147.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1108.3" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (40 samples, 0.51%)</title><rect x="1105.3" y="131.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1108.3" y="142.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.51%)</title><rect x="1105.3" y="115.0" width="6.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1108.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (15 samples, 0.19%)</title><rect x="1111.3" y="291.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1114.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (15 samples, 0.19%)</title><rect x="1111.3" y="275.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1114.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (15 samples, 0.19%)</title><rect x="1111.3" y="259.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1114.3" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (4 samples, 0.05%)</title><rect x="1111.3" y="243.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1114.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (4 samples, 0.05%)</title><rect x="1111.3" y="227.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (4 samples, 0.05%)</title><rect x="1111.3" y="211.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1114.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.05%)</title><rect x="1111.3" y="195.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1114.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.05%)</title><rect x="1111.3" y="179.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1114.3" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.05%)</title><rect x="1111.3" y="163.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1114.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.05%)</title><rect x="1111.3" y="147.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1114.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.05%)</title><rect x="1111.3" y="131.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1114.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (4 samples, 0.05%)</title><rect x="1111.3" y="115.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1114.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (4 samples, 0.05%)</title><rect x="1111.3" y="99.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1114.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.04%)</title><rect x="1111.3" y="83.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1114.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.04%)</title><rect x="1111.3" y="67.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1114.3" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (11 samples, 0.14%)</title><rect x="1111.9" y="243.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1114.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (11 samples, 0.14%)</title><rect x="1111.9" y="227.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (11 samples, 0.14%)</title><rect x="1111.9" y="211.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1114.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (11 samples, 0.14%)</title><rect x="1111.9" y="195.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1114.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.14%)</title><rect x="1111.9" y="179.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1114.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.14%)</title><rect x="1111.9" y="163.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1114.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (10 samples, 0.13%)</title><rect x="1111.9" y="147.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1114.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (10 samples, 0.13%)</title><rect x="1111.9" y="131.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1114.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (10 samples, 0.13%)</title><rect x="1111.9" y="115.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1114.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (10 samples, 0.13%)</title><rect x="1111.9" y="99.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1114.9" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.10%)</title><rect x="1112.1" y="83.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1115.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.10%)</title><rect x="1112.1" y="67.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1115.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.iterator (3 samples, 0.04%)</title><rect x="1113.5" y="307.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1116.5" y="318.0"></text>
</g>
<g>
<title>[pool-3-thread-8 tid=53025] (508 samples, 6.44%)</title><rect x="1114.0" y="451.0" width="76.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1117.0" y="462.0">[pool-3-..</text>
</g>
<g>
<title>java/lang/Thread.run (508 samples, 6.44%)</title><rect x="1114.0" y="435.0" width="76.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1117.0" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (508 samples, 6.44%)</title><rect x="1114.0" y="419.0" width="76.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1117.0" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (508 samples, 6.44%)</title><rect x="1114.0" y="403.0" width="76.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1117.0" y="414.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl$$Lambda$66/1334773443.run (508 samples, 6.44%)</title><rect x="1114.0" y="387.0" width="76.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1117.0" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/mrsandman5/ServiceImpl.lambda$get$0 (508 samples, 6.44%)</title><rect x="1114.0" y="371.0" width="76.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1117.0" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.06%)</title><rect x="1114.0" y="355.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1117.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.06%)</title><rect x="1114.0" y="339.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1117.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="1114.0" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1117.0" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1114.0" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1117.0" y="318.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="1114.0" y="291.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1117.0" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.04%)</title><rect x="1114.3" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.3" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3 samples, 0.04%)</title><rect x="1114.3" y="307.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1117.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (6 samples, 0.08%)</title><rect x="1114.7" y="355.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1117.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.08%)</title><rect x="1114.7" y="339.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1117.7" y="350.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="1114.7" y="323.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1117.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.05%)</title><rect x="1115.0" y="323.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1118.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (497 samples, 6.30%)</title><rect x="1115.6" y="355.0" width="74.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.6" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (82 samples, 1.04%)</title><rect x="1115.6" y="339.0" width="12.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1118.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (82 samples, 1.04%)</title><rect x="1115.6" y="323.0" width="12.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (82 samples, 1.04%)</title><rect x="1115.6" y="307.0" width="12.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1118.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (82 samples, 1.04%)</title><rect x="1115.6" y="291.0" width="12.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1118.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (82 samples, 1.04%)</title><rect x="1115.6" y="275.0" width="12.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1118.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (70 samples, 0.89%)</title><rect x="1115.6" y="259.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1118.6" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (28 samples, 0.36%)</title><rect x="1115.6" y="243.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1118.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (28 samples, 0.36%)</title><rect x="1115.6" y="227.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1118.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (28 samples, 0.36%)</title><rect x="1115.6" y="211.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1118.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (28 samples, 0.36%)</title><rect x="1115.6" y="195.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1118.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (28 samples, 0.36%)</title><rect x="1115.6" y="179.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1118.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (28 samples, 0.36%)</title><rect x="1115.6" y="163.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1118.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (28 samples, 0.36%)</title><rect x="1115.6" y="147.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1118.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (28 samples, 0.36%)</title><rect x="1115.6" y="131.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1118.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (28 samples, 0.36%)</title><rect x="1115.6" y="115.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1118.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (28 samples, 0.36%)</title><rect x="1115.6" y="99.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1118.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.05%)</title><rect x="1115.6" y="83.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1118.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.05%)</title><rect x="1115.6" y="67.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1118.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (23 samples, 0.29%)</title><rect x="1116.2" y="83.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1119.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.29%)</title><rect x="1116.2" y="67.0" width="3.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1119.2" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (42 samples, 0.53%)</title><rect x="1119.8" y="243.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1122.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (42 samples, 0.53%)</title><rect x="1119.8" y="227.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1122.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (42 samples, 0.53%)</title><rect x="1119.8" y="211.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1122.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (42 samples, 0.53%)</title><rect x="1119.8" y="195.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1122.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (42 samples, 0.53%)</title><rect x="1119.8" y="179.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1122.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (42 samples, 0.53%)</title><rect x="1119.8" y="163.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1122.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (29 samples, 0.37%)</title><rect x="1119.8" y="147.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.8" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (2 samples, 0.03%)</title><rect x="1119.8" y="131.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1122.8" y="142.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (2 samples, 0.03%)</title><rect x="1119.8" y="115.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1122.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable$$Lambda$65/714876873.apply (2 samples, 0.03%)</title><rect x="1119.8" y="99.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1122.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/MemTable.lambda$iterator$0 (2 samples, 0.03%)</title><rect x="1119.8" y="83.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1122.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (27 samples, 0.34%)</title><rect x="1120.1" y="131.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1123.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (27 samples, 0.34%)</title><rect x="1120.1" y="115.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1123.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (27 samples, 0.34%)</title><rect x="1120.1" y="99.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1123.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.09%)</title><rect x="1120.1" y="83.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1123.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="1120.1" y="67.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1123.1" y="78.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="1120.1" y="51.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1123.1" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.14%)</title><rect x="1121.2" y="83.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1124.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.14%)</title><rect x="1121.2" y="67.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1124.2" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (4 samples, 0.05%)</title><rect x="1122.8" y="83.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1125.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (5 samples, 0.06%)</title><rect x="1123.4" y="83.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1126.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.06%)</title><rect x="1123.4" y="67.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1126.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1123.4" y="51.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1126.4" y="62.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.06%)</title><rect x="1123.4" y="35.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1126.4" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (13 samples, 0.16%)</title><rect x="1124.2" y="147.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (13 samples, 0.16%)</title><rect x="1124.2" y="131.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1127.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (13 samples, 0.16%)</title><rect x="1124.2" y="115.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1127.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (13 samples, 0.16%)</title><rect x="1124.2" y="99.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (13 samples, 0.16%)</title><rect x="1124.2" y="83.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1127.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.13%)</title><rect x="1124.2" y="67.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1127.2" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.13%)</title><rect x="1124.2" y="51.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1127.2" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.04%)</title><rect x="1125.7" y="67.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1128.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.04%)</title><rect x="1125.7" y="51.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1128.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$78/208007213.apply (12 samples, 0.15%)</title><rect x="1126.1" y="259.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1129.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (12 samples, 0.15%)</title><rect x="1126.1" y="243.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1129.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.04%)</title><rect x="1126.1" y="227.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1129.1" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.04%)</title><rect x="1126.1" y="211.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1129.1" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.10%)</title><rect x="1126.6" y="227.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1129.6" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.10%)</title><rect x="1126.6" y="211.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1129.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.04%)</title><rect x="1127.9" y="339.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1130.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.04%)</title><rect x="1127.9" y="323.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1130.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$91/885273156.apply (3 samples, 0.04%)</title><rect x="1127.9" y="307.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1130.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$2 (3 samples, 0.04%)</title><rect x="1127.9" y="291.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1130.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (3 samples, 0.04%)</title><rect x="1127.9" y="275.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1130.9" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="1127.9" y="259.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1130.9" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="1127.9" y="243.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1130.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (2 samples, 0.03%)</title><rect x="1128.5" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1131.5" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="1128.5" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1131.5" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="1128.5" y="307.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1131.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (409 samples, 5.19%)</title><rect x="1128.8" y="339.0" width="61.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1131.8" y="350.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.cellIterator (408 samples, 5.17%)</title><rect x="1129.0" y="323.0" width="61.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1132.0" y="334.0">ru/mai..</text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="1129.0" y="307.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1132.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.freshCellIterators (403 samples, 5.11%)</title><rect x="1129.6" y="307.0" width="60.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1132.6" y="318.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (78 samples, 0.99%)</title><rect x="1129.6" y="291.0" width="11.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1132.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (78 samples, 0.99%)</title><rect x="1129.6" y="275.0" width="11.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1132.6" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (76 samples, 0.96%)</title><rect x="1129.9" y="259.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1132.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (76 samples, 0.96%)</title><rect x="1129.9" y="243.0" width="11.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1132.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (76 samples, 0.96%)</title><rect x="1129.9" y="227.0" width="11.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1132.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (76 samples, 0.96%)</title><rect x="1129.9" y="211.0" width="11.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1132.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (76 samples, 0.96%)</title><rect x="1129.9" y="195.0" width="11.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1132.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (76 samples, 0.96%)</title><rect x="1129.9" y="179.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1132.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (58 samples, 0.74%)</title><rect x="1129.9" y="163.0" width="8.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1132.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (2 samples, 0.03%)</title><rect x="1129.9" y="147.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1132.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (56 samples, 0.71%)</title><rect x="1130.2" y="147.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1133.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (56 samples, 0.71%)</title><rect x="1130.2" y="131.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1133.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (56 samples, 0.71%)</title><rect x="1130.2" y="115.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1133.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (17 samples, 0.22%)</title><rect x="1130.2" y="99.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1133.2" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (17 samples, 0.22%)</title><rect x="1130.2" y="83.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1133.2" y="94.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.22%)</title><rect x="1130.2" y="67.0" width="2.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1133.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (28 samples, 0.36%)</title><rect x="1132.7" y="99.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1135.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.36%)</title><rect x="1132.7" y="83.0" width="4.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1135.7" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (2 samples, 0.03%)</title><rect x="1136.9" y="99.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1139.9" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Value (2 samples, 0.03%)</title><rect x="1137.2" y="99.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1140.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (7 samples, 0.09%)</title><rect x="1137.5" y="99.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1140.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.09%)</title><rect x="1137.5" y="83.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1140.5" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="1137.5" y="67.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1140.5" y="78.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.09%)</title><rect x="1137.5" y="51.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1140.5" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (18 samples, 0.23%)</title><rect x="1138.5" y="163.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1141.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (18 samples, 0.23%)</title><rect x="1138.5" y="147.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1141.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (18 samples, 0.23%)</title><rect x="1138.5" y="131.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1141.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (18 samples, 0.23%)</title><rect x="1138.5" y="115.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1141.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (18 samples, 0.23%)</title><rect x="1138.5" y="99.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1141.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.08%)</title><rect x="1138.5" y="83.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1141.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.08%)</title><rect x="1138.5" y="67.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1141.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.11%)</title><rect x="1139.4" y="83.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1142.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.11%)</title><rect x="1139.4" y="67.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1142.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="1140.8" y="83.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1143.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="1140.8" y="67.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1143.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.03%)</title><rect x="1140.8" y="51.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1143.8" y="62.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (302 samples, 3.83%)</title><rect x="1141.4" y="291.0" width="45.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1144.4" y="302.0">java..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (302 samples, 3.83%)</title><rect x="1141.4" y="275.0" width="45.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1144.4" y="286.0">java..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$72/1983780967.accept (301 samples, 3.82%)</title><rect x="1141.5" y="259.0" width="45.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1144.5" y="270.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$freshCellIterators$6 (301 samples, 3.82%)</title><rect x="1141.5" y="243.0" width="45.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1144.5" y="254.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.iterator (301 samples, 3.82%)</title><rect x="1141.5" y="227.0" width="45.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1144.5" y="238.0">ru/m..</text>
</g>
<g>
<title>ru.mail.polis.dao.impl.tables.SSTable$1 (3 samples, 0.04%)</title><rect x="1141.5" y="211.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1144.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.&lt;init&gt; (298 samples, 3.78%)</title><rect x="1142.0" y="211.0" width="44.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1145.0" y="222.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getPosition (298 samples, 3.78%)</title><rect x="1142.0" y="195.0" width="44.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1145.0" y="206.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.keyAt (298 samples, 3.78%)</title><rect x="1142.0" y="179.0" width="44.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1145.0" y="190.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (169 samples, 2.14%)</title><rect x="1142.0" y="163.0" width="25.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1145.0" y="174.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (83 samples, 1.05%)</title><rect x="1142.0" y="147.0" width="12.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1145.0" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (86 samples, 1.09%)</title><rect x="1154.4" y="147.0" width="12.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1157.4" y="158.0"></text>
</g>
<g>
<title>byte[] (86 samples, 1.09%)</title><rect x="1154.4" y="131.0" width="12.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1157.4" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (82 samples, 1.04%)</title><rect x="1167.3" y="163.0" width="12.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1170.3" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (82 samples, 1.04%)</title><rect x="1167.3" y="147.0" width="12.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1170.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.getOffset (47 samples, 0.60%)</title><rect x="1179.5" y="163.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1182.5" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (47 samples, 0.60%)</title><rect x="1179.5" y="147.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1182.5" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (47 samples, 0.60%)</title><rect x="1179.5" y="131.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1182.5" y="142.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.60%)</title><rect x="1179.5" y="115.0" width="7.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1182.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (22 samples, 0.28%)</title><rect x="1186.6" y="291.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1189.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (22 samples, 0.28%)</title><rect x="1186.6" y="275.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1189.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (22 samples, 0.28%)</title><rect x="1186.6" y="259.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1189.6" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (8 samples, 0.10%)</title><rect x="1186.6" y="243.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1189.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (8 samples, 0.10%)</title><rect x="1186.6" y="227.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1189.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (8 samples, 0.10%)</title><rect x="1186.6" y="211.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1189.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.10%)</title><rect x="1186.6" y="195.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1189.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.10%)</title><rect x="1186.6" y="179.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1189.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (8 samples, 0.10%)</title><rect x="1186.6" y="163.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1189.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (8 samples, 0.10%)</title><rect x="1186.6" y="147.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1189.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (8 samples, 0.10%)</title><rect x="1186.6" y="131.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1189.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (8 samples, 0.10%)</title><rect x="1186.6" y="115.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1189.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (8 samples, 0.10%)</title><rect x="1186.6" y="99.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1189.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.06%)</title><rect x="1186.6" y="83.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1189.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.06%)</title><rect x="1186.6" y="67.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1189.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.04%)</title><rect x="1187.3" y="83.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1190.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.04%)</title><rect x="1187.3" y="67.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1190.3" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (14 samples, 0.18%)</title><rect x="1187.8" y="243.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1190.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (14 samples, 0.18%)</title><rect x="1187.8" y="227.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1190.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (14 samples, 0.18%)</title><rect x="1187.8" y="211.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1190.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (14 samples, 0.18%)</title><rect x="1187.8" y="195.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1190.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.18%)</title><rect x="1187.8" y="179.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1190.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.18%)</title><rect x="1187.8" y="163.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1190.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (11 samples, 0.14%)</title><rect x="1187.8" y="147.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1190.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.14%)</title><rect x="1187.8" y="131.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1190.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable$1.next (11 samples, 0.14%)</title><rect x="1187.8" y="115.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1190.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/tables/SSTable.cellAt (11 samples, 0.14%)</title><rect x="1187.8" y="99.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1190.8" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.04%)</title><rect x="1187.8" y="83.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1190.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1187.8" y="67.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1190.8" y="78.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="1187.8" y="51.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1190.8" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.06%)</title><rect x="1188.2" y="83.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.06%)</title><rect x="1188.2" y="67.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1191.2" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.models.Cell (2 samples, 0.03%)</title><rect x="1189.0" y="83.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1192.0" y="94.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.04%)</title><rect x="1189.4" y="147.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.04%)</title><rect x="1189.4" y="131.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.04%)</title><rect x="1189.4" y="115.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1192.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.compareTo (3 samples, 0.04%)</title><rect x="1189.4" y="99.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/models/Cell.getKey (3 samples, 0.04%)</title><rect x="1189.4" y="83.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1192.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.03%)</title><rect x="1189.6" y="67.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.03%)</title><rect x="1189.6" y="51.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1192.6" y="62.0"></text>
</g>
</g>
</svg>
